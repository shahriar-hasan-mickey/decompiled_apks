record `e.e.d.a.l` @kind class @AccessFlag PUBLIC extends `java.io.Externalizable` @kind interface {
  `e.e.d.a.n` `e.e.d.a.l.A` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.B` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.C` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.D` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.E` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.F` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.G` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.H` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.I` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.J` @AccessFlag PRIVATE;
  `int` `e.e.d.a.l.K` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.L` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.M` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.N` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.O` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.P` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.Q` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.R` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.S` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.T` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.U` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.V` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.W` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.l.X` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.l.Y` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.Z` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.a0` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.b` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.l.b0` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.c` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.c0` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.d` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.d0` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.e` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.f` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.g` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.h` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.i` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.j` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.k` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.l` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.m` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.n` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.o` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.p` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.q` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.r` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.s` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.t` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.u` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.v` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.w` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.x` @AccessFlag PRIVATE;
  `e.e.d.a.n` `e.e.d.a.l.y` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.l.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.d.a.l` v3 @kind this) @signature `Le/e/d/a/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L386ba8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L386bae.  v0:= 0I;
  #L386bb0.  v3.`e.e.d.a.l.c` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bb4.  v3.`e.e.d.a.l.e` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bb8.  v3.`e.e.d.a.l.g` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bbc.  v3.`e.e.d.a.l.i` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bc0.  v3.`e.e.d.a.l.k` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bc4.  v3.`e.e.d.a.l.m` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bc8.  v3.`e.e.d.a.l.o` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bcc.  v3.`e.e.d.a.l.q` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bd0.  v3.`e.e.d.a.l.s` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bd4.  v3.`e.e.d.a.l.u` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bd8.  v3.`e.e.d.a.l.w` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bdc.  v3.`e.e.d.a.l.y` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386be0.  v3.`e.e.d.a.l.A` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386be4.  v3.`e.e.d.a.l.C` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386be8.  v3.`e.e.d.a.l.E` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bec.  v3.`e.e.d.a.l.G` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bf0.  v3.`e.e.d.a.l.I` @type ^`e.e.d.a.n` := v0 @kind object;
  #L386bf4.  v0:= "" @kind object;
  #L386bf8.  v3.`e.e.d.a.l.J` @type ^`java.lang.String` := v0 @kind object;
  #L386bfc.  v1:= 0I;
  #L386bfe.  v3.`e.e.d.a.l.K` @type ^`int` := v1;
  #L386c02.  v3.`e.e.d.a.l.L` @type ^`java.lang.String` := v0 @kind object;
  #L386c06.  v3.`e.e.d.a.l.N` @type ^`java.lang.String` := v0 @kind object;
  #L386c0a.  v3.`e.e.d.a.l.P` @type ^`java.lang.String` := v0 @kind object;
  #L386c0e.  v3.`e.e.d.a.l.R` @type ^`java.lang.String` := v0 @kind object;
  #L386c12.  v3.`e.e.d.a.l.T` @type ^`java.lang.String` := v0 @kind object;
  #L386c16.  v3.`e.e.d.a.l.V` @type ^`java.lang.String` := v0 @kind object;
  #L386c1a.  v3.`e.e.d.a.l.W` @type ^`boolean` := v1 @kind boolean;
  #L386c1e.  v2:= new `java.util.ArrayList`;
  #L386c22.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L386c28.  v3.`e.e.d.a.l.X` @type ^`java.util.List` := v2 @kind object;
  #L386c2c.  v2:= new `java.util.ArrayList`;
  #L386c30.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L386c36.  v3.`e.e.d.a.l.Y` @type ^`java.util.List` := v2 @kind object;
  #L386c3a.  v3.`e.e.d.a.l.Z` @type ^`boolean` := v1 @kind boolean;
  #L386c3e.  v3.`e.e.d.a.l.b0` @type ^`java.lang.String` := v0 @kind object;
  #L386c42.  v3.`e.e.d.a.l.c0` @type ^`boolean` := v1 @kind boolean;
  #L386c46.  v3.`e.e.d.a.l.d0` @type ^`boolean` := v1 @kind boolean;
  #L386c4a.  return @kind void;
}
procedure `e.e.d.a.l$a` `B`() @signature `Le/e/d/a/l;.B:()Le/e/d/a/l$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38694c.  v0:= new `e.e.d.a.l$a`;
  #L386950.  call `<init>`(v0) @signature `Le/e/d/a/l$a;.<init>:()V` @kind direct;
  #L386956.  return v0 @kind object;
}
procedure `int` `A`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386ae4.  call temp:= `k`(v1) @signature `Le/e/d/a/l;.k:()I` @kind virtual;
  #L386aea.  v0:= temp;
  #L386aec.  return v0;
}
procedure `int` `a`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a70.  v0:= v1.`e.e.d.a.l.K` @type ^`int`;
  #L386a74.  return v0;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.l` v0 @kind this, `int` v1 ) @signature `Le/e/d/a/l;.a:(I)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L38653c.  v0.`e.e.d.a.l.K` @type ^`int` := v1;
  #L386540.  return v0 @kind object;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.a:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386510.  if v2 == 0 then goto L386520;
  #L386514.  v0:= 1I;
  #L386516.  v1.`e.e.d.a.l.D` @type ^`boolean` := v0 @kind boolean;
  #L38651a.  v1.`e.e.d.a.l.E` @type ^`e.e.d.a.n` := v2 @kind object;
  #L38651e.  return v1 @kind object;
  #L386520.  v2:= new `java.lang.NullPointerException`;
  #L386524.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38652a.  throw v2;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.l` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/d/a/l;.a:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L3865d8.  v0.`e.e.d.a.l.J` @type ^`java.lang.String` := v1 @kind object;
  #L3865dc.  return v0 @kind object;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.l` v0 @kind this, `boolean` v1 ) @signature `Le/e/d/a/l;.a:(Z)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L386624.  v0.`e.e.d.a.l.c0` @type ^`boolean` := v1 @kind boolean;
  #L386628.  return v0 @kind object;
}
procedure `e.e.d.a.l` `b`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.b:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386554.  if v2 == 0 then goto L386564;
  #L386558.  v0:= 1I;
  #L38655a.  v1.`e.e.d.a.l.v` @type ^`boolean` := v0 @kind boolean;
  #L38655e.  v1.`e.e.d.a.l.w` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386562.  return v1 @kind object;
  #L386564.  v2:= new `java.lang.NullPointerException`;
  #L386568.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38656e.  throw v2;
}
procedure `e.e.d.a.l` `b`(`e.e.d.a.l` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/d/a/l;.b:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L3865f0.  v0.`e.e.d.a.l.L` @type ^`java.lang.String` := v1 @kind object;
  #L3865f4.  return v0 @kind object;
}
procedure `e.e.d.a.l` `b`(`e.e.d.a.l` v0 @kind this, `boolean` v1 ) @signature `Le/e/d/a/l;.b:(Z)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L38663c.  v0.`e.e.d.a.l.Z` @type ^`boolean` := v1 @kind boolean;
  #L386640.  return v0 @kind object;
}
procedure `e.e.d.a.n` `b`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.b:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386968.  v0:= v1.`e.e.d.a.l.e` @type ^`e.e.d.a.n` @kind object;
  #L38696c.  return v0 @kind object;
}
procedure `e.e.d.a.l` `c`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.c:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386580.  if v2 == 0 then goto L386590;
  #L386584.  v0:= 1I;
  #L386586.  v1.`e.e.d.a.l.d` @type ^`boolean` := v0 @kind boolean;
  #L38658a.  v1.`e.e.d.a.l.e` @type ^`e.e.d.a.n` := v2 @kind object;
  #L38658e.  return v1 @kind object;
  #L386590.  v2:= new `java.lang.NullPointerException`;
  #L386594.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38659a.  throw v2;
}
procedure `e.e.d.a.l` `c`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.c:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386608.  v0:= 1I;
  #L38660a.  v1.`e.e.d.a.l.a0` @type ^`boolean` := v0 @kind boolean;
  #L38660e.  v1.`e.e.d.a.l.b0` @type ^`java.lang.String` := v2 @kind object;
  #L386612.  return v1 @kind object;
}
procedure `e.e.d.a.l` `c`(`e.e.d.a.l` v0 @kind this, `boolean` v1 ) @signature `Le/e/d/a/l;.c:(Z)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L386680.  v0.`e.e.d.a.l.d0` @type ^`boolean` := v1 @kind boolean;
  #L386684.  return v0 @kind object;
}
procedure `e.e.d.a.n` `c`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386980.  v0:= v1.`e.e.d.a.l.c` @type ^`e.e.d.a.n` @kind object;
  #L386984.  return v0 @kind object;
}
procedure `e.e.d.a.l` `d`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.d:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3865ac.  if v2 == 0 then goto L3865bc;
  #L3865b0.  v0:= 1I;
  #L3865b2.  v1.`e.e.d.a.l.b` @type ^`boolean` := v0 @kind boolean;
  #L3865b6.  v1.`e.e.d.a.l.c` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3865ba.  return v1 @kind object;
  #L3865bc.  v2:= new `java.lang.NullPointerException`;
  #L3865c0.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3865c6.  throw v2;
}
procedure `e.e.d.a.l` `d`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.d:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386698.  v0:= 1I;
  #L38669a.  v1.`e.e.d.a.l.O` @type ^`boolean` := v0 @kind boolean;
  #L38669e.  v1.`e.e.d.a.l.P` @type ^`java.lang.String` := v2 @kind object;
  #L3866a2.  return v1 @kind object;
}
procedure `e.e.d.a.l` `d`(`e.e.d.a.l` v0 @kind this, `boolean` v1 ) @signature `Le/e/d/a/l;.d:(Z)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;

  #L3867d4.  v0.`e.e.d.a.l.W` @type ^`boolean` := v1 @kind boolean;
  #L3867d8.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b00.  v0:= v1.`e.e.d.a.l.L` @type ^`java.lang.String` @kind object;
  #L386b04.  return v0 @kind object;
}
procedure `int` `e`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a88.  v0:= v1.`e.e.d.a.l.Y` @type ^`java.util.List` @kind object;
  #L386a8c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L386a92.  v0:= temp;
  #L386a94.  return v0;
}
procedure `e.e.d.a.l` `e`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.e:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386654.  if v2 == 0 then goto L386664;
  #L386658.  v0:= 1I;
  #L38665a.  v1.`e.e.d.a.l.f` @type ^`boolean` := v0 @kind boolean;
  #L38665e.  v1.`e.e.d.a.l.g` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386662.  return v1 @kind object;
  #L386664.  v2:= new `java.lang.NullPointerException`;
  #L386668.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38666e.  throw v2;
}
procedure `e.e.d.a.l` `e`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.e:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3866b4.  v0:= 1I;
  #L3866b6.  v1.`e.e.d.a.l.S` @type ^`boolean` := v0 @kind boolean;
  #L3866ba.  v1.`e.e.d.a.l.T` @type ^`java.lang.String` := v2 @kind object;
  #L3866be.  return v1 @kind object;
}
procedure `e.e.d.a.l` `f`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.f:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3866ec.  if v2 == 0 then goto L3866fc;
  #L3866f0.  v0:= 1I;
  #L3866f2.  v1.`e.e.d.a.l.H` @type ^`boolean` := v0 @kind boolean;
  #L3866f6.  v1.`e.e.d.a.l.I` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3866fa.  return v1 @kind object;
  #L3866fc.  v2:= new `java.lang.NullPointerException`;
  #L386700.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L386706.  throw v2;
}
procedure `e.e.d.a.l` `f`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.f:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3866d0.  v0:= 1I;
  #L3866d2.  v1.`e.e.d.a.l.U` @type ^`boolean` := v0 @kind boolean;
  #L3866d6.  v1.`e.e.d.a.l.V` @type ^`java.lang.String` := v2 @kind object;
  #L3866da.  return v1 @kind object;
}
procedure `java.util.List` `f`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b78.  v0:= v1.`e.e.d.a.l.Y` @type ^`java.util.List` @kind object;
  #L386b7c.  return v0 @kind object;
}
procedure `e.e.d.a.l` `g`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.g:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386718.  if v2 == 0 then goto L386728;
  #L38671c.  v0:= 1I;
  #L38671e.  v1.`e.e.d.a.l.r` @type ^`boolean` := v0 @kind boolean;
  #L386722.  v1.`e.e.d.a.l.s` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386726.  return v1 @kind object;
  #L386728.  v2:= new `java.lang.NullPointerException`;
  #L38672c.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L386732.  throw v2;
}
procedure `e.e.d.a.l` `g`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.g:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386770.  v0:= 1I;
  #L386772.  v1.`e.e.d.a.l.Q` @type ^`boolean` := v0 @kind boolean;
  #L386776.  v1.`e.e.d.a.l.R` @type ^`java.lang.String` := v2 @kind object;
  #L38677a.  return v1 @kind object;
}
procedure `java.lang.String` `g`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b18.  v0:= v1.`e.e.d.a.l.b0` @type ^`java.lang.String` @kind object;
  #L386b1c.  return v0 @kind object;
}
procedure `e.e.d.a.l` `h`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.h:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386744.  if v2 == 0 then goto L386754;
  #L386748.  v0:= 1I;
  #L38674a.  v1.`e.e.d.a.l.n` @type ^`boolean` := v0 @kind boolean;
  #L38674e.  v1.`e.e.d.a.l.o` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386752.  return v1 @kind object;
  #L386754.  v2:= new `java.lang.NullPointerException`;
  #L386758.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38675e.  throw v2;
}
procedure `e.e.d.a.l` `h`(`e.e.d.a.l` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/l;.h:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38678c.  v0:= 1I;
  #L38678e.  v1.`e.e.d.a.l.M` @type ^`boolean` := v0 @kind boolean;
  #L386792.  v1.`e.e.d.a.l.N` @type ^`java.lang.String` := v2 @kind object;
  #L386796.  return v1 @kind object;
}
procedure `e.e.d.a.n` `h`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.h:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386998.  v0:= v1.`e.e.d.a.l.g` @type ^`e.e.d.a.n` @kind object;
  #L38699c.  return v0 @kind object;
}
procedure `e.e.d.a.l` `i`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.i:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3867a8.  if v2 == 0 then goto L3867b8;
  #L3867ac.  v0:= 1I;
  #L3867ae.  v1.`e.e.d.a.l.j` @type ^`boolean` := v0 @kind boolean;
  #L3867b2.  v1.`e.e.d.a.l.k` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3867b6.  return v1 @kind object;
  #L3867b8.  v2:= new `java.lang.NullPointerException`;
  #L3867bc.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3867c2.  throw v2;
}
procedure `java.lang.String` `i`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b30.  v0:= v1.`e.e.d.a.l.T` @type ^`java.lang.String` @kind object;
  #L386b34.  return v0 @kind object;
}
procedure `e.e.d.a.l` `j`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.j:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3867ec.  if v2 == 0 then goto L3867fc;
  #L3867f0.  v0:= 1I;
  #L3867f2.  v1.`e.e.d.a.l.l` @type ^`boolean` := v0 @kind boolean;
  #L3867f6.  v1.`e.e.d.a.l.m` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3867fa.  return v1 @kind object;
  #L3867fc.  v2:= new `java.lang.NullPointerException`;
  #L386800.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L386806.  throw v2;
}
procedure `java.lang.String` `j`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b48.  v0:= v1.`e.e.d.a.l.V` @type ^`java.lang.String` @kind object;
  #L386b4c.  return v0 @kind object;
}
procedure `int` `k`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.k:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386aa8.  v0:= v1.`e.e.d.a.l.X` @type ^`java.util.List` @kind object;
  #L386aac.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L386ab2.  v0:= temp;
  #L386ab4.  return v0;
}
procedure `e.e.d.a.l` `k`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.k:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386818.  if v2 == 0 then goto L386828;
  #L38681c.  v0:= 1I;
  #L38681e.  v1.`e.e.d.a.l.z` @type ^`boolean` := v0 @kind boolean;
  #L386822.  v1.`e.e.d.a.l.A` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386826.  return v1 @kind object;
  #L386828.  v2:= new `java.lang.NullPointerException`;
  #L38682c.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L386832.  throw v2;
}
procedure `e.e.d.a.l` `l`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.l:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386844.  if v2 == 0 then goto L386854;
  #L386848.  v0:= 1I;
  #L38684a.  v1.`e.e.d.a.l.F` @type ^`boolean` := v0 @kind boolean;
  #L38684e.  v1.`e.e.d.a.l.G` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386852.  return v1 @kind object;
  #L386854.  v2:= new `java.lang.NullPointerException`;
  #L386858.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38685e.  throw v2;
}
procedure `java.util.List` `l`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.l:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b90.  v0:= v1.`e.e.d.a.l.X` @type ^`java.util.List` @kind object;
  #L386b94.  return v0 @kind object;
}
procedure `e.e.d.a.l` `m`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.m:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386870.  if v2 == 0 then goto L386880;
  #L386874.  v0:= 1I;
  #L386876.  v1.`e.e.d.a.l.B` @type ^`boolean` := v0 @kind boolean;
  #L38687a.  v1.`e.e.d.a.l.C` @type ^`e.e.d.a.n` := v2 @kind object;
  #L38687e.  return v1 @kind object;
  #L386880.  v2:= new `java.lang.NullPointerException`;
  #L386884.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38688a.  throw v2;
}
procedure `e.e.d.a.n` `m`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.m:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869b0.  v0:= v1.`e.e.d.a.l.s` @type ^`e.e.d.a.n` @kind object;
  #L3869b4.  return v0 @kind object;
}
procedure `e.e.d.a.l` `n`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.n:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38689c.  if v2 == 0 then goto L3868ac;
  #L3868a0.  v0:= 1I;
  #L3868a2.  v1.`e.e.d.a.l.h` @type ^`boolean` := v0 @kind boolean;
  #L3868a6.  v1.`e.e.d.a.l.i` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3868aa.  return v1 @kind object;
  #L3868ac.  v2:= new `java.lang.NullPointerException`;
  #L3868b0.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3868b6.  throw v2;
}
procedure `e.e.d.a.n` `n`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.n:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869c8.  v0:= v1.`e.e.d.a.l.o` @type ^`e.e.d.a.n` @kind object;
  #L3869cc.  return v0 @kind object;
}
procedure `e.e.d.a.l` `o`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.o:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3868c8.  if v2 == 0 then goto L3868d8;
  #L3868cc.  v0:= 1I;
  #L3868ce.  v1.`e.e.d.a.l.t` @type ^`boolean` := v0 @kind boolean;
  #L3868d2.  v1.`e.e.d.a.l.u` @type ^`e.e.d.a.n` := v2 @kind object;
  #L3868d6.  return v1 @kind object;
  #L3868d8.  v2:= new `java.lang.NullPointerException`;
  #L3868dc.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3868e2.  throw v2;
}
procedure `java.lang.String` `o`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.o:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b60.  v0:= v1.`e.e.d.a.l.R` @type ^`java.lang.String` @kind object;
  #L386b64.  return v0 @kind object;
}
procedure `e.e.d.a.l` `p`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.p:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3868f4.  if v2 == 0 then goto L386904;
  #L3868f8.  v0:= 1I;
  #L3868fa.  v1.`e.e.d.a.l.x` @type ^`boolean` := v0 @kind boolean;
  #L3868fe.  v1.`e.e.d.a.l.y` @type ^`e.e.d.a.n` := v2 @kind object;
  #L386902.  return v1 @kind object;
  #L386904.  v2:= new `java.lang.NullPointerException`;
  #L386908.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38690e.  throw v2;
}
procedure `e.e.d.a.n` `p`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.p:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869e0.  v0:= v1.`e.e.d.a.l.k` @type ^`e.e.d.a.n` @kind object;
  #L3869e4.  return v0 @kind object;
}
procedure `e.e.d.a.l` `q`(`e.e.d.a.l` v1 @kind this, `e.e.d.a.n` v2 @kind object) @signature `Le/e/d/a/l;.q:(Le/e/d/a/n;)Le/e/d/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386920.  if v2 == 0 then goto L386930;
  #L386924.  v0:= 1I;
  #L386926.  v1.`e.e.d.a.l.p` @type ^`boolean` := v0 @kind boolean;
  #L38692a.  v1.`e.e.d.a.l.q` @type ^`e.e.d.a.n` := v2 @kind object;
  #L38692e.  return v1 @kind object;
  #L386930.  v2:= new `java.lang.NullPointerException`;
  #L386934.  call `<init>`(v2) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L38693a.  throw v2;
}
procedure `boolean` `q`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3864b0.  v0:= v1.`e.e.d.a.l.W` @type ^`boolean` @kind boolean;
  #L3864b4.  return v0;
}
procedure `e.e.d.a.n` `r`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.r:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869f8.  v0:= v1.`e.e.d.a.l.m` @type ^`e.e.d.a.n` @kind object;
  #L3869fc.  return v0 @kind object;
}
procedure `void` `readExternal`(`e.e.d.a.l` v5 @kind this, `java.io.ObjectInput` v6 @kind object) @signature `Le/e/d/a/l;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L386c5c.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386c62.  v0:= temp;
  #L386c64.  if v0 == 0 then goto L386c7e;
  #L386c68.  v0:= new `e.e.d.a.n`;
  #L386c6c.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386c72.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386c78.  call temp:= `d`(v5, v0) @signature `Le/e/d/a/l;.d:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386c7e.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386c84.  v0:= temp;
  #L386c86.  if v0 == 0 then goto L386ca0;
  #L386c8a.  v0:= new `e.e.d.a.n`;
  #L386c8e.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386c94.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386c9a.  call temp:= `c`(v5, v0) @signature `Le/e/d/a/l;.c:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386ca0.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386ca6.  v0:= temp;
  #L386ca8.  if v0 == 0 then goto L386cc2;
  #L386cac.  v0:= new `e.e.d.a.n`;
  #L386cb0.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386cb6.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386cbc.  call temp:= `e`(v5, v0) @signature `Le/e/d/a/l;.e:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386cc2.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386cc8.  v0:= temp;
  #L386cca.  if v0 == 0 then goto L386ce4;
  #L386cce.  v0:= new `e.e.d.a.n`;
  #L386cd2.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386cd8.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386cde.  call temp:= `n`(v5, v0) @signature `Le/e/d/a/l;.n:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386ce4.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386cea.  v0:= temp;
  #L386cec.  if v0 == 0 then goto L386d06;
  #L386cf0.  v0:= new `e.e.d.a.n`;
  #L386cf4.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386cfa.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386d00.  call temp:= `i`(v5, v0) @signature `Le/e/d/a/l;.i:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386d06.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386d0c.  v0:= temp;
  #L386d0e.  if v0 == 0 then goto L386d28;
  #L386d12.  v0:= new `e.e.d.a.n`;
  #L386d16.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386d1c.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386d22.  call temp:= `j`(v5, v0) @signature `Le/e/d/a/l;.j:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386d28.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386d2e.  v0:= temp;
  #L386d30.  if v0 == 0 then goto L386d4a;
  #L386d34.  v0:= new `e.e.d.a.n`;
  #L386d38.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386d3e.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386d44.  call temp:= `h`(v5, v0) @signature `Le/e/d/a/l;.h:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386d4a.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386d50.  v0:= temp;
  #L386d52.  if v0 == 0 then goto L386d6c;
  #L386d56.  v0:= new `e.e.d.a.n`;
  #L386d5a.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386d60.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386d66.  call temp:= `q`(v5, v0) @signature `Le/e/d/a/l;.q:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386d6c.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386d72.  v0:= temp;
  #L386d74.  if v0 == 0 then goto L386d8e;
  #L386d78.  v0:= new `e.e.d.a.n`;
  #L386d7c.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386d82.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386d88.  call temp:= `g`(v5, v0) @signature `Le/e/d/a/l;.g:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386d8e.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386d94.  v0:= temp;
  #L386d96.  if v0 == 0 then goto L386db0;
  #L386d9a.  v0:= new `e.e.d.a.n`;
  #L386d9e.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386da4.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386daa.  call temp:= `o`(v5, v0) @signature `Le/e/d/a/l;.o:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386db0.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386db6.  v0:= temp;
  #L386db8.  if v0 == 0 then goto L386dd2;
  #L386dbc.  v0:= new `e.e.d.a.n`;
  #L386dc0.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386dc6.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386dcc.  call temp:= `b`(v5, v0) @signature `Le/e/d/a/l;.b:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386dd2.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386dd8.  v0:= temp;
  #L386dda.  if v0 == 0 then goto L386df4;
  #L386dde.  v0:= new `e.e.d.a.n`;
  #L386de2.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386de8.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386dee.  call temp:= `p`(v5, v0) @signature `Le/e/d/a/l;.p:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386df4.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386dfa.  v0:= temp;
  #L386dfc.  if v0 == 0 then goto L386e16;
  #L386e00.  v0:= new `e.e.d.a.n`;
  #L386e04.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386e0a.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386e10.  call temp:= `k`(v5, v0) @signature `Le/e/d/a/l;.k:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386e16.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386e1c.  v0:= temp;
  #L386e1e.  if v0 == 0 then goto L386e38;
  #L386e22.  v0:= new `e.e.d.a.n`;
  #L386e26.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386e2c.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386e32.  call temp:= `m`(v5, v0) @signature `Le/e/d/a/l;.m:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386e38.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386e3e.  v0:= temp;
  #L386e40.  if v0 == 0 then goto L386e5a;
  #L386e44.  v0:= new `e.e.d.a.n`;
  #L386e48.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386e4e.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386e54.  call temp:= `a`(v5, v0) @signature `Le/e/d/a/l;.a:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386e5a.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386e60.  v0:= temp;
  #L386e62.  if v0 == 0 then goto L386e7c;
  #L386e66.  v0:= new `e.e.d.a.n`;
  #L386e6a.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386e70.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386e76.  call temp:= `l`(v5, v0) @signature `Le/e/d/a/l;.l:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386e7c.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386e82.  v0:= temp;
  #L386e84.  if v0 == 0 then goto L386e9e;
  #L386e88.  v0:= new `e.e.d.a.n`;
  #L386e8c.  call `<init>`(v0) @signature `Le/e/d/a/n;.<init>:()V` @kind direct;
  #L386e92.  call `readExternal`(v0, v6) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386e98.  call temp:= `f`(v5, v0) @signature `Le/e/d/a/l;.f:(Le/e/d/a/n;)Le/e/d/a/l;` @kind virtual;
  #L386e9e.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386ea4.  v0:= temp @kind object;
  #L386ea6.  call temp:= `a`(v5, v0) @signature `Le/e/d/a/l;.a:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386eac.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L386eb2.  v0:= temp;
  #L386eb4.  call temp:= `a`(v5, v0) @signature `Le/e/d/a/l;.a:(I)Le/e/d/a/l;` @kind virtual;
  #L386eba.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386ec0.  v0:= temp @kind object;
  #L386ec2.  call temp:= `b`(v5, v0) @signature `Le/e/d/a/l;.b:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386ec8.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386ece.  v0:= temp;
  #L386ed0.  if v0 == 0 then goto L386ee2;
  #L386ed4.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386eda.  v0:= temp @kind object;
  #L386edc.  call temp:= `h`(v5, v0) @signature `Le/e/d/a/l;.h:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386ee2.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386ee8.  v0:= temp;
  #L386eea.  if v0 == 0 then goto L386efc;
  #L386eee.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386ef4.  v0:= temp @kind object;
  #L386ef6.  call temp:= `d`(v5, v0) @signature `Le/e/d/a/l;.d:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386efc.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386f02.  v0:= temp;
  #L386f04.  if v0 == 0 then goto L386f16;
  #L386f08.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386f0e.  v0:= temp @kind object;
  #L386f10.  call temp:= `g`(v5, v0) @signature `Le/e/d/a/l;.g:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386f16.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386f1c.  v0:= temp;
  #L386f1e.  if v0 == 0 then goto L386f30;
  #L386f22.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386f28.  v0:= temp @kind object;
  #L386f2a.  call temp:= `e`(v5, v0) @signature `Le/e/d/a/l;.e:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386f30.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386f36.  v0:= temp;
  #L386f38.  if v0 == 0 then goto L386f4a;
  #L386f3c.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386f42.  v0:= temp @kind object;
  #L386f44.  call temp:= `f`(v5, v0) @signature `Le/e/d/a/l;.f:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386f4a.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386f50.  v0:= temp;
  #L386f52.  call temp:= `d`(v5, v0) @signature `Le/e/d/a/l;.d:(Z)Le/e/d/a/l;` @kind virtual;
  #L386f58.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L386f5e.  v0:= temp;
  #L386f60.  v1:= 0I;
  #L386f62.  v2:= 0I;
  #L386f64.  if v2 >= v0 then goto L386f88;
  #L386f68.  v3:= new `e.e.d.a.k`;
  #L386f6c.  call `<init>`(v3) @signature `Le/e/d/a/k;.<init>:()V` @kind direct;
  #L386f72.  call `readExternal`(v3, v6) @signature `Le/e/d/a/k;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386f78.  v4:= v5.`e.e.d.a.l.X` @type ^`java.util.List` @kind object;
  #L386f7c.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L386f82.  v2:= v2 + 1;
  #L386f86.  goto L386f64;
  #L386f88.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L386f8e.  v0:= temp;
  #L386f90.  if v1 >= v0 then goto L386fb4;
  #L386f94.  v2:= new `e.e.d.a.k`;
  #L386f98.  call `<init>`(v2) @signature `Le/e/d/a/k;.<init>:()V` @kind direct;
  #L386f9e.  call `readExternal`(v2, v6) @signature `Le/e/d/a/k;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L386fa4.  v3:= v5.`e.e.d.a.l.Y` @type ^`java.util.List` @kind object;
  #L386fa8.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L386fae.  v1:= v1 + 1;
  #L386fb2.  goto L386f90;
  #L386fb4.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386fba.  v0:= temp;
  #L386fbc.  call temp:= `b`(v5, v0) @signature `Le/e/d/a/l;.b:(Z)Le/e/d/a/l;` @kind virtual;
  #L386fc2.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386fc8.  v0:= temp;
  #L386fca.  if v0 == 0 then goto L386fdc;
  #L386fce.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386fd4.  v0:= temp @kind object;
  #L386fd6.  call temp:= `c`(v5, v0) @signature `Le/e/d/a/l;.c:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L386fdc.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386fe2.  v0:= temp;
  #L386fe4.  call temp:= `a`(v5, v0) @signature `Le/e/d/a/l;.a:(Z)Le/e/d/a/l;` @kind virtual;
  #L386fea.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386ff0.  v6:= temp;
  #L386ff2.  call temp:= `c`(v5, v6) @signature `Le/e/d/a/l;.c:(Z)Le/e/d/a/l;` @kind virtual;
  #L386ff8.  return @kind void;
}
procedure `e.e.d.a.n` `s`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.s:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a10.  v0:= v1.`e.e.d.a.l.i` @type ^`e.e.d.a.n` @kind object;
  #L386a14.  return v0 @kind object;
}
procedure `e.e.d.a.n` `t`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.t:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a28.  v0:= v1.`e.e.d.a.l.u` @type ^`e.e.d.a.n` @kind object;
  #L386a2c.  return v0 @kind object;
}
procedure `e.e.d.a.n` `u`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.u:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a40.  v0:= v1.`e.e.d.a.l.y` @type ^`e.e.d.a.n` @kind object;
  #L386a44.  return v0 @kind object;
}
procedure `e.e.d.a.n` `v`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.v:()Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a58.  v0:= v1.`e.e.d.a.l.q` @type ^`e.e.d.a.n` @kind object;
  #L386a5c.  return v0 @kind object;
}
procedure `boolean` `w`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.w:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3864c8.  v0:= v1.`e.e.d.a.l.a0` @type ^`boolean` @kind boolean;
  #L3864cc.  return v0;
}
procedure `void` `writeExternal`(`e.e.d.a.l` v4 @kind this, `java.io.ObjectOutput` v5 @kind object) @signature `Le/e/d/a/l;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38700c.  v0:= v4.`e.e.d.a.l.b` @type ^`boolean` @kind boolean;
  #L387010.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387016.  v0:= v4.`e.e.d.a.l.b` @type ^`boolean` @kind boolean;
  #L38701a.  if v0 == 0 then goto L387028;
  #L38701e.  v0:= v4.`e.e.d.a.l.c` @type ^`e.e.d.a.n` @kind object;
  #L387022.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387028.  v0:= v4.`e.e.d.a.l.d` @type ^`boolean` @kind boolean;
  #L38702c.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387032.  v0:= v4.`e.e.d.a.l.d` @type ^`boolean` @kind boolean;
  #L387036.  if v0 == 0 then goto L387044;
  #L38703a.  v0:= v4.`e.e.d.a.l.e` @type ^`e.e.d.a.n` @kind object;
  #L38703e.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387044.  v0:= v4.`e.e.d.a.l.f` @type ^`boolean` @kind boolean;
  #L387048.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38704e.  v0:= v4.`e.e.d.a.l.f` @type ^`boolean` @kind boolean;
  #L387052.  if v0 == 0 then goto L387060;
  #L387056.  v0:= v4.`e.e.d.a.l.g` @type ^`e.e.d.a.n` @kind object;
  #L38705a.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387060.  v0:= v4.`e.e.d.a.l.h` @type ^`boolean` @kind boolean;
  #L387064.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38706a.  v0:= v4.`e.e.d.a.l.h` @type ^`boolean` @kind boolean;
  #L38706e.  if v0 == 0 then goto L38707c;
  #L387072.  v0:= v4.`e.e.d.a.l.i` @type ^`e.e.d.a.n` @kind object;
  #L387076.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L38707c.  v0:= v4.`e.e.d.a.l.j` @type ^`boolean` @kind boolean;
  #L387080.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387086.  v0:= v4.`e.e.d.a.l.j` @type ^`boolean` @kind boolean;
  #L38708a.  if v0 == 0 then goto L387098;
  #L38708e.  v0:= v4.`e.e.d.a.l.k` @type ^`e.e.d.a.n` @kind object;
  #L387092.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387098.  v0:= v4.`e.e.d.a.l.l` @type ^`boolean` @kind boolean;
  #L38709c.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3870a2.  v0:= v4.`e.e.d.a.l.l` @type ^`boolean` @kind boolean;
  #L3870a6.  if v0 == 0 then goto L3870b4;
  #L3870aa.  v0:= v4.`e.e.d.a.l.m` @type ^`e.e.d.a.n` @kind object;
  #L3870ae.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3870b4.  v0:= v4.`e.e.d.a.l.n` @type ^`boolean` @kind boolean;
  #L3870b8.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3870be.  v0:= v4.`e.e.d.a.l.n` @type ^`boolean` @kind boolean;
  #L3870c2.  if v0 == 0 then goto L3870d0;
  #L3870c6.  v0:= v4.`e.e.d.a.l.o` @type ^`e.e.d.a.n` @kind object;
  #L3870ca.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3870d0.  v0:= v4.`e.e.d.a.l.p` @type ^`boolean` @kind boolean;
  #L3870d4.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3870da.  v0:= v4.`e.e.d.a.l.p` @type ^`boolean` @kind boolean;
  #L3870de.  if v0 == 0 then goto L3870ec;
  #L3870e2.  v0:= v4.`e.e.d.a.l.q` @type ^`e.e.d.a.n` @kind object;
  #L3870e6.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3870ec.  v0:= v4.`e.e.d.a.l.r` @type ^`boolean` @kind boolean;
  #L3870f0.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3870f6.  v0:= v4.`e.e.d.a.l.r` @type ^`boolean` @kind boolean;
  #L3870fa.  if v0 == 0 then goto L387108;
  #L3870fe.  v0:= v4.`e.e.d.a.l.s` @type ^`e.e.d.a.n` @kind object;
  #L387102.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387108.  v0:= v4.`e.e.d.a.l.t` @type ^`boolean` @kind boolean;
  #L38710c.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387112.  v0:= v4.`e.e.d.a.l.t` @type ^`boolean` @kind boolean;
  #L387116.  if v0 == 0 then goto L387124;
  #L38711a.  v0:= v4.`e.e.d.a.l.u` @type ^`e.e.d.a.n` @kind object;
  #L38711e.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387124.  v0:= v4.`e.e.d.a.l.v` @type ^`boolean` @kind boolean;
  #L387128.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38712e.  v0:= v4.`e.e.d.a.l.v` @type ^`boolean` @kind boolean;
  #L387132.  if v0 == 0 then goto L387140;
  #L387136.  v0:= v4.`e.e.d.a.l.w` @type ^`e.e.d.a.n` @kind object;
  #L38713a.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387140.  v0:= v4.`e.e.d.a.l.x` @type ^`boolean` @kind boolean;
  #L387144.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38714a.  v0:= v4.`e.e.d.a.l.x` @type ^`boolean` @kind boolean;
  #L38714e.  if v0 == 0 then goto L38715c;
  #L387152.  v0:= v4.`e.e.d.a.l.y` @type ^`e.e.d.a.n` @kind object;
  #L387156.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L38715c.  v0:= v4.`e.e.d.a.l.z` @type ^`boolean` @kind boolean;
  #L387160.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387166.  v0:= v4.`e.e.d.a.l.z` @type ^`boolean` @kind boolean;
  #L38716a.  if v0 == 0 then goto L387178;
  #L38716e.  v0:= v4.`e.e.d.a.l.A` @type ^`e.e.d.a.n` @kind object;
  #L387172.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387178.  v0:= v4.`e.e.d.a.l.B` @type ^`boolean` @kind boolean;
  #L38717c.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387182.  v0:= v4.`e.e.d.a.l.B` @type ^`boolean` @kind boolean;
  #L387186.  if v0 == 0 then goto L387194;
  #L38718a.  v0:= v4.`e.e.d.a.l.C` @type ^`e.e.d.a.n` @kind object;
  #L38718e.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L387194.  v0:= v4.`e.e.d.a.l.D` @type ^`boolean` @kind boolean;
  #L387198.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38719e.  v0:= v4.`e.e.d.a.l.D` @type ^`boolean` @kind boolean;
  #L3871a2.  if v0 == 0 then goto L3871b0;
  #L3871a6.  v0:= v4.`e.e.d.a.l.E` @type ^`e.e.d.a.n` @kind object;
  #L3871aa.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3871b0.  v0:= v4.`e.e.d.a.l.F` @type ^`boolean` @kind boolean;
  #L3871b4.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3871ba.  v0:= v4.`e.e.d.a.l.F` @type ^`boolean` @kind boolean;
  #L3871be.  if v0 == 0 then goto L3871cc;
  #L3871c2.  v0:= v4.`e.e.d.a.l.G` @type ^`e.e.d.a.n` @kind object;
  #L3871c6.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3871cc.  v0:= v4.`e.e.d.a.l.H` @type ^`boolean` @kind boolean;
  #L3871d0.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3871d6.  v0:= v4.`e.e.d.a.l.H` @type ^`boolean` @kind boolean;
  #L3871da.  if v0 == 0 then goto L3871e8;
  #L3871de.  v0:= v4.`e.e.d.a.l.I` @type ^`e.e.d.a.n` @kind object;
  #L3871e2.  call `writeExternal`(v0, v5) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3871e8.  v0:= v4.`e.e.d.a.l.J` @type ^`java.lang.String` @kind object;
  #L3871ec.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3871f2.  v0:= v4.`e.e.d.a.l.K` @type ^`int`;
  #L3871f6.  call `writeInt`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3871fc.  v0:= v4.`e.e.d.a.l.L` @type ^`java.lang.String` @kind object;
  #L387200.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387206.  v0:= v4.`e.e.d.a.l.M` @type ^`boolean` @kind boolean;
  #L38720a.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387210.  v0:= v4.`e.e.d.a.l.M` @type ^`boolean` @kind boolean;
  #L387214.  if v0 == 0 then goto L387222;
  #L387218.  v0:= v4.`e.e.d.a.l.N` @type ^`java.lang.String` @kind object;
  #L38721c.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387222.  v0:= v4.`e.e.d.a.l.O` @type ^`boolean` @kind boolean;
  #L387226.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38722c.  v0:= v4.`e.e.d.a.l.O` @type ^`boolean` @kind boolean;
  #L387230.  if v0 == 0 then goto L38723e;
  #L387234.  v0:= v4.`e.e.d.a.l.P` @type ^`java.lang.String` @kind object;
  #L387238.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L38723e.  v0:= v4.`e.e.d.a.l.Q` @type ^`boolean` @kind boolean;
  #L387242.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387248.  v0:= v4.`e.e.d.a.l.Q` @type ^`boolean` @kind boolean;
  #L38724c.  if v0 == 0 then goto L38725a;
  #L387250.  v0:= v4.`e.e.d.a.l.R` @type ^`java.lang.String` @kind object;
  #L387254.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L38725a.  v0:= v4.`e.e.d.a.l.S` @type ^`boolean` @kind boolean;
  #L38725e.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387264.  v0:= v4.`e.e.d.a.l.S` @type ^`boolean` @kind boolean;
  #L387268.  if v0 == 0 then goto L387276;
  #L38726c.  v0:= v4.`e.e.d.a.l.T` @type ^`java.lang.String` @kind object;
  #L387270.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387276.  v0:= v4.`e.e.d.a.l.U` @type ^`boolean` @kind boolean;
  #L38727a.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387280.  v0:= v4.`e.e.d.a.l.U` @type ^`boolean` @kind boolean;
  #L387284.  if v0 == 0 then goto L387292;
  #L387288.  v0:= v4.`e.e.d.a.l.V` @type ^`java.lang.String` @kind object;
  #L38728c.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387292.  v0:= v4.`e.e.d.a.l.W` @type ^`boolean` @kind boolean;
  #L387296.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38729c.  call temp:= `A`(v4) @signature `Le/e/d/a/l;.A:()I` @kind virtual;
  #L3872a2.  v0:= temp;
  #L3872a4.  call `writeInt`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3872aa.  v1:= 0I;
  #L3872ac.  v2:= 0I;
  #L3872ae.  if v2 >= v0 then goto L3872ce;
  #L3872b2.  v3:= v4.`e.e.d.a.l.X` @type ^`java.util.List` @kind object;
  #L3872b6.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3872bc.  v3:= temp @kind object;
  #L3872be.  v3:= (`e.e.d.a.k`) v3 @kind object;
  #L3872c2.  call `writeExternal`(v3, v5) @signature `Le/e/d/a/k;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3872c8.  v2:= v2 + 1;
  #L3872cc.  goto L3872ae;
  #L3872ce.  call temp:= `z`(v4) @signature `Le/e/d/a/l;.z:()I` @kind virtual;
  #L3872d4.  v0:= temp;
  #L3872d6.  call `writeInt`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3872dc.  if v1 >= v0 then goto L3872fc;
  #L3872e0.  v2:= v4.`e.e.d.a.l.Y` @type ^`java.util.List` @kind object;
  #L3872e4.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3872ea.  v2:= temp @kind object;
  #L3872ec.  v2:= (`e.e.d.a.k`) v2 @kind object;
  #L3872f0.  call `writeExternal`(v2, v5) @signature `Le/e/d/a/k;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L3872f6.  v1:= v1 + 1;
  #L3872fa.  goto L3872dc;
  #L3872fc.  v0:= v4.`e.e.d.a.l.Z` @type ^`boolean` @kind boolean;
  #L387300.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387306.  v0:= v4.`e.e.d.a.l.a0` @type ^`boolean` @kind boolean;
  #L38730a.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387310.  v0:= v4.`e.e.d.a.l.a0` @type ^`boolean` @kind boolean;
  #L387314.  if v0 == 0 then goto L387322;
  #L387318.  v0:= v4.`e.e.d.a.l.b0` @type ^`java.lang.String` @kind object;
  #L38731c.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387322.  v0:= v4.`e.e.d.a.l.c0` @type ^`boolean` @kind boolean;
  #L387326.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38732c.  v0:= v4.`e.e.d.a.l.d0` @type ^`boolean` @kind boolean;
  #L387330.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387336.  return @kind void;
}
procedure `boolean` `x`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.x:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3864e0.  v0:= v1.`e.e.d.a.l.S` @type ^`boolean` @kind boolean;
  #L3864e4.  return v0;
}
procedure `boolean` `y`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.y:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3864f8.  v0:= v1.`e.e.d.a.l.Q` @type ^`boolean` @kind boolean;
  #L3864fc.  return v0;
}
procedure `int` `z`(`e.e.d.a.l` v1 @kind this) @signature `Le/e/d/a/l;.z:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386ac8.  call temp:= `e`(v1) @signature `Le/e/d/a/l;.e:()I` @kind virtual;
  #L386ace.  v0:= temp;
  #L386ad0.  return v0;
}
