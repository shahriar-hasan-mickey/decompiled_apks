record `e.e.d.a.e` @kind class @AccessFlag FINAL {
}
global `e.e.d.a.d` `@@e.e.d.a.e.a` @AccessFlag STATIC_FINAL;
global `java.util.logging.Logger` `@@e.e.d.a.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/d/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3831ac.  v0:= new `e.e.d.a.e$a`;
  #L3831b0.  call `<init>`(v0) @signature `Le/e/d/a/e$a;.<init>:()V` @kind direct;
  #L3831b6.  `@@e.e.d.a.e.a` @type ^`e.e.d.a.d` := v0 @kind object;
  #L3831ba.  v0:= constclass @type ^`e.e.d.a.e` @kind object;
  #L3831be.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3831c4.  v0:= temp @kind object;
  #L3831c6.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3831cc.  v0:= temp @kind object;
  #L3831ce.  `@@e.e.d.a.e.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3831d2.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3831d6.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3831dc.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3831e0.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3831e6.  call temp:= `a`() @signature `Le/e/d/a/a;.a:()Ljava/util/Set;` @kind static;
  #L3831ec.  call temp:= `a`() @signature `Le/e/d/a/p;.a:()Ljava/util/Set;` @kind static;
  #L3831f2.  return @kind void;
}
procedure `void` `<init>`(`e.e.d.a.e` v0 @kind this) @signature `Le/e/d/a/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L383204.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38320a.  return @kind void;
}
procedure `e.e.d.a.l` `a`(`java.lang.Object` v4 @kind object, `java.util.concurrent.ConcurrentHashMap` v5 @kind object, `java.lang.String` v6 @kind object, `e.e.d.a.d` v7 @kind object) @signature `Le/e/d/a/e;.a:(Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/String;Le/e/d/a/d;)Le/e/d/a/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L382f74.  call temp:= `get`(v5, v4) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L382f7a.  v0:= temp @kind object;
  #L382f7c.  v0:= (`e.e.d.a.l`) v0 @kind object;
  #L382f80.  if v0 == 0 then goto L382f86;
  #L382f84.  return v0 @kind object;
  #L382f86.  v0:= new `java.lang.StringBuilder`;
  #L382f8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L382f90.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382f96.  v6:= "_" @kind object;
  #L382f9a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382fa0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382fa6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L382fac.  v6:= temp @kind object;
  #L382fae.  call temp:= `a`(v6, v7) @signature `Le/e/d/a/e;.a:(Ljava/lang/String;Le/e/d/a/d;)Ljava/util/List;` @kind static;
  #L382fb4.  v7:= temp @kind object;
  #L382fb6.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L382fbc.  v0:= temp;
  #L382fbe.  v1:= 1I;
  #L382fc0.  if v0 <= v1 then goto L382ff4;
  #L382fc4.  v0:= `@@e.e.d.a.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L382fc8.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L382fcc.  v2:= new `java.lang.StringBuilder`;
  #L382fd0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L382fd6.  v3:= "more than one metadata in file " @kind object;
  #L382fda.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382fe0.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382fe6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L382fec.  v6:= temp @kind object;
  #L382fee.  call `log`(v0, v1, v6) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L382ff4.  v6:= 0I;
  #L382ff6.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L382ffc.  v6:= temp @kind object;
  #L382ffe.  v6:= (`e.e.d.a.l`) v6 @kind object;
  #L383002.  call temp:= `putIfAbsent`(v5, v4, v6) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383008.  v4:= temp @kind object;
  #L38300a.  v4:= (`e.e.d.a.l`) v4 @kind object;
  #L38300e.  if v4 == 0 then goto L383014;
  #L383012.  goto L383016;
  #L383014.  v4:= v6 @kind object;
  #L383016.  return v4 @kind object;
}
procedure `e.e.d.a.m` `a`(`java.io.InputStream` v5 @kind object) @signature `Le/e/d/a/e;.a:(Ljava/io/InputStream;)Le/e/d/a/m;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L383028.  v0:= "error closing input stream (ignored)" @kind object;
  #L38302c.  v1:= "cannot load/parse metadata" @kind object;
  #L383030.  v2:= 0I;
  #L383032.  v3:= new `java.io.ObjectInputStream`;
  #L383036.  call `<init>`(v3, v5) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L38303c.  v2:= new `e.e.d.a.m`;
  #L383040.  call `<init>`(v2) @signature `Le/e/d/a/m;.<init>:()V` @kind direct;
  #L383046.  call `readExternal`(v2, v3) @signature `Le/e/d/a/m;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L38304c.  call `close`(v3) @signature `Ljava/io/ObjectInputStream;.close:()V` @kind virtual;
  #L383052.  goto L383064;
  #L383054.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L383056.  v1:= `@@e.e.d.a.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L38305a.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L38305e.  call `log`(v1, v3, v0, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L383064.  return v2 @kind object;
  #L383066.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L383068.  v4:= new `java.lang.RuntimeException`;
  #L38306c.  call `<init>`(v4, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L383072.  throw v4;
  #L383074.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L383076.  goto L38308c;
  #L383078.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38307a.  v3:= v2 @kind object;
  #L38307c.  goto L38308c;
  #L38307e.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L383080.  v4:= new `java.lang.RuntimeException`;
  #L383084.  call `<init>`(v4, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L38308a.  throw v4;
  #L38308c.  if v3 == 0 then goto L383098;
  #L383090.  call `close`(v3) @signature `Ljava/io/ObjectInputStream;.close:()V` @kind virtual;
  #L383096.  goto L3830b0;
  #L383098.  call `close`(v5) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L38309e.  goto L3830b0;
  #L3830a0.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3830a2.  v2:= `@@e.e.d.a.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L3830a6.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3830aa.  call `log`(v2, v3, v0, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3830b0.  throw v1;
  catch `java.io.IOException` @[L383032..L38303c] goto L38307e;
  catch `java.lang.Throwable` @[L383032..L38303c] goto L383078;
  catch `java.lang.Throwable` @[L38303c..L383046] goto L383074;
  catch `java.io.IOException` @[L383046..L38304c] goto L383066;
  catch `java.lang.Throwable` @[L383046..L38304c] goto L383074;
  catch `java.io.IOException` @[L38304c..L383052] goto L383054;
  catch `java.lang.Throwable` @[L383068..L383074] goto L383074;
  catch `java.lang.Throwable` @[L383080..L38308c] goto L383078;
  catch `java.io.IOException` @[L383090..L38309e] goto L3830a0;
}
procedure `java.util.List` `a`(`java.lang.String` v2 @kind object, `e.e.d.a.d` v3 @kind object) @signature `Le/e/d/a/e;.a:(Ljava/lang/String;Le/e/d/a/d;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L383114.  call temp:= `a`(v3, v2) @signature `Le/e/d/a/d;.a:(Ljava/lang/String;)Ljava/io/InputStream;` @kind interface;
  #L38311a.  v3:= temp @kind object;
  #L38311c.  if v3 == 0 then goto L38316c;
  #L383120.  call temp:= `a`(v3) @signature `Le/e/d/a/e;.a:(Ljava/io/InputStream;)Le/e/d/a/m;` @kind static;
  #L383126.  v3:= temp @kind object;
  #L383128.  call temp:= `b`(v3) @signature `Le/e/d/a/m;.b:()Ljava/util/List;` @kind virtual;
  #L38312e.  v3:= temp @kind object;
  #L383130.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L383136.  v0:= temp;
  #L383138.  if v0 == 0 then goto L38313e;
  #L38313c.  return v3 @kind object;
  #L38313e.  v3:= new `java.lang.IllegalStateException`;
  #L383142.  v0:= new `java.lang.StringBuilder`;
  #L383146.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38314c.  v1:= "empty metadata: " @kind object;
  #L383150.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383156.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38315c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383162.  v2:= temp @kind object;
  #L383164.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38316a.  throw v3;
  #L38316c.  v3:= new `java.lang.IllegalStateException`;
  #L383170.  v0:= new `java.lang.StringBuilder`;
  #L383174.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38317a.  v1:= "missing metadata: " @kind object;
  #L38317e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383184.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38318a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383190.  v2:= temp @kind object;
  #L383192.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L383198.  throw v3;
}
