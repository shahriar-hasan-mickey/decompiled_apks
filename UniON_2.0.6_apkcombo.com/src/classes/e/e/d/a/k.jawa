record `e.e.d.a.k` @kind class @AccessFlag PUBLIC extends `java.io.Externalizable` @kind interface {
  `java.lang.String` `e.e.d.a.k.b` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.k.c` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.k.d` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.k.e` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.k.f` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.k.g` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.k.h` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.k.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.d.a.k` v2 @kind this) @signature `Le/e/d/a/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3861d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3861d6.  v0:= "" @kind object;
  #L3861da.  v2.`e.e.d.a.k.b` @type ^`java.lang.String` := v0 @kind object;
  #L3861de.  v2.`e.e.d.a.k.c` @type ^`java.lang.String` := v0 @kind object;
  #L3861e2.  v1:= new `java.util.ArrayList`;
  #L3861e6.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3861ec.  v2.`e.e.d.a.k.d` @type ^`java.util.List` := v1 @kind object;
  #L3861f0.  v2.`e.e.d.a.k.f` @type ^`java.lang.String` := v0 @kind object;
  #L3861f4.  v1:= 0I;
  #L3861f6.  v2.`e.e.d.a.k.g` @type ^`boolean` := v1 @kind boolean;
  #L3861fa.  v2.`e.e.d.a.k.i` @type ^`java.lang.String` := v0 @kind object;
  #L3861fe.  return @kind void;
}
procedure `e.e.d.a.k` `a`(`e.e.d.a.k` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/k;.a:(Ljava/lang/String;)Le/e/d/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386090.  v0:= 1I;
  #L386092.  v1.`e.e.d.a.k.h` @type ^`boolean` := v0 @kind boolean;
  #L386096.  v1.`e.e.d.a.k.i` @type ^`java.lang.String` := v2 @kind object;
  #L38609a.  return v1 @kind object;
}
procedure `e.e.d.a.k` `a`(`e.e.d.a.k` v0 @kind this, `boolean` v1 ) @signature `Le/e/d/a/k;.a:(Z)Le/e/d/a/k;` @AccessFlag PUBLIC {
    temp;

  #L3860e0.  v0.`e.e.d.a.k.g` @type ^`boolean` := v1 @kind boolean;
  #L3860e4.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38614c.  v0:= v1.`e.e.d.a.k.i` @type ^`java.lang.String` @kind object;
  #L386150.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.k` v1 @kind this, `int` v2 ) @signature `Le/e/d/a/k;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38617c.  v0:= v1.`e.e.d.a.k.d` @type ^`java.util.List` @kind object;
  #L386180.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L386186.  v2:= temp @kind object;
  #L386188.  v2:= (`java.lang.String`) v2 @kind object;
  #L38618c.  return v2 @kind object;
}
procedure `e.e.d.a.k` `b`(`e.e.d.a.k` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/d/a/k;.b:(Ljava/lang/String;)Le/e/d/a/k;` @AccessFlag PUBLIC {
    temp;

  #L3860ac.  v0.`e.e.d.a.k.c` @type ^`java.lang.String` := v1 @kind object;
  #L3860b0.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386164.  v0:= v1.`e.e.d.a.k.c` @type ^`java.lang.String` @kind object;
  #L386168.  return v0 @kind object;
}
procedure `int` `c`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386110.  v0:= v1.`e.e.d.a.k.d` @type ^`java.util.List` @kind object;
  #L386114.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38611a.  v0:= temp;
  #L38611c.  return v0;
}
procedure `e.e.d.a.k` `c`(`e.e.d.a.k` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/k;.c:(Ljava/lang/String;)Le/e/d/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3860c4.  v0:= 1I;
  #L3860c6.  v1.`e.e.d.a.k.e` @type ^`boolean` := v0 @kind boolean;
  #L3860ca.  v1.`e.e.d.a.k.f` @type ^`java.lang.String` := v2 @kind object;
  #L3860ce.  return v1 @kind object;
}
procedure `e.e.d.a.k` `d`(`e.e.d.a.k` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/d/a/k;.d:(Ljava/lang/String;)Le/e/d/a/k;` @AccessFlag PUBLIC {
    temp;

  #L3860f8.  v0.`e.e.d.a.k.b` @type ^`java.lang.String` := v1 @kind object;
  #L3860fc.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3861a0.  v0:= v1.`e.e.d.a.k.f` @type ^`java.lang.String` @kind object;
  #L3861a4.  return v0 @kind object;
}
procedure `boolean` `e`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386060.  v0:= v1.`e.e.d.a.k.g` @type ^`boolean` @kind boolean;
  #L386064.  return v0;
}
procedure `java.lang.String` `f`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3861b8.  v0:= v1.`e.e.d.a.k.b` @type ^`java.lang.String` @kind object;
  #L3861bc.  return v0 @kind object;
}
procedure `boolean` `g`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386078.  v0:= v1.`e.e.d.a.k.h` @type ^`boolean` @kind boolean;
  #L38607c.  return v0;
}
procedure `int` `h`(`e.e.d.a.k` v1 @kind this) @signature `Le/e/d/a/k;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386130.  call temp:= `c`(v1) @signature `Le/e/d/a/k;.c:()I` @kind virtual;
  #L386136.  v0:= temp;
  #L386138.  return v0;
}
procedure `void` `readExternal`(`e.e.d.a.k` v4 @kind this, `java.io.ObjectInput` v5 @kind object) @signature `Le/e/d/a/k;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L386210.  call temp:= `readUTF`(v5) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386216.  v0:= temp @kind object;
  #L386218.  call temp:= `d`(v4, v0) @signature `Le/e/d/a/k;.d:(Ljava/lang/String;)Le/e/d/a/k;` @kind virtual;
  #L38621e.  call temp:= `readUTF`(v5) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386224.  v0:= temp @kind object;
  #L386226.  call temp:= `b`(v4, v0) @signature `Le/e/d/a/k;.b:(Ljava/lang/String;)Le/e/d/a/k;` @kind virtual;
  #L38622c.  call temp:= `readInt`(v5) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L386232.  v0:= temp;
  #L386234.  v1:= 0I;
  #L386236.  if v1 >= v0 then goto L386252;
  #L38623a.  v2:= v4.`e.e.d.a.k.d` @type ^`java.util.List` @kind object;
  #L38623e.  call temp:= `readUTF`(v5) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386244.  v3:= temp @kind object;
  #L386246.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38624c.  v1:= v1 + 1;
  #L386250.  goto L386236;
  #L386252.  call temp:= `readBoolean`(v5) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386258.  v0:= temp;
  #L38625a.  if v0 == 0 then goto L38626c;
  #L38625e.  call temp:= `readUTF`(v5) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L386264.  v0:= temp @kind object;
  #L386266.  call temp:= `c`(v4, v0) @signature `Le/e/d/a/k;.c:(Ljava/lang/String;)Le/e/d/a/k;` @kind virtual;
  #L38626c.  call temp:= `readBoolean`(v5) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L386272.  v0:= temp;
  #L386274.  if v0 == 0 then goto L386286;
  #L386278.  call temp:= `readUTF`(v5) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L38627e.  v0:= temp @kind object;
  #L386280.  call temp:= `a`(v4, v0) @signature `Le/e/d/a/k;.a:(Ljava/lang/String;)Le/e/d/a/k;` @kind virtual;
  #L386286.  call temp:= `readBoolean`(v5) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L38628c.  v5:= temp;
  #L38628e.  call temp:= `a`(v4, v5) @signature `Le/e/d/a/k;.a:(Z)Le/e/d/a/k;` @kind virtual;
  #L386294.  return @kind void;
}
procedure `void` `writeExternal`(`e.e.d.a.k` v3 @kind this, `java.io.ObjectOutput` v4 @kind object) @signature `Le/e/d/a/k;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3862a8.  v0:= v3.`e.e.d.a.k.b` @type ^`java.lang.String` @kind object;
  #L3862ac.  call `writeUTF`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3862b2.  v0:= v3.`e.e.d.a.k.c` @type ^`java.lang.String` @kind object;
  #L3862b6.  call `writeUTF`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3862bc.  call temp:= `h`(v3) @signature `Le/e/d/a/k;.h:()I` @kind virtual;
  #L3862c2.  v0:= temp;
  #L3862c4.  call `writeInt`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3862ca.  v1:= 0I;
  #L3862cc.  if v1 >= v0 then goto L3862ec;
  #L3862d0.  v2:= v3.`e.e.d.a.k.d` @type ^`java.util.List` @kind object;
  #L3862d4.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3862da.  v2:= temp @kind object;
  #L3862dc.  v2:= (`java.lang.String`) v2 @kind object;
  #L3862e0.  call `writeUTF`(v4, v2) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3862e6.  v1:= v1 + 1;
  #L3862ea.  goto L3862cc;
  #L3862ec.  v0:= v3.`e.e.d.a.k.e` @type ^`boolean` @kind boolean;
  #L3862f0.  call `writeBoolean`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3862f6.  v0:= v3.`e.e.d.a.k.e` @type ^`boolean` @kind boolean;
  #L3862fa.  if v0 == 0 then goto L386308;
  #L3862fe.  v0:= v3.`e.e.d.a.k.f` @type ^`java.lang.String` @kind object;
  #L386302.  call `writeUTF`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L386308.  v0:= v3.`e.e.d.a.k.h` @type ^`boolean` @kind boolean;
  #L38630c.  call `writeBoolean`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L386312.  v0:= v3.`e.e.d.a.k.h` @type ^`boolean` @kind boolean;
  #L386316.  if v0 == 0 then goto L386324;
  #L38631a.  v0:= v3.`e.e.d.a.k.i` @type ^`java.lang.String` @kind object;
  #L38631e.  call `writeUTF`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L386324.  v0:= v3.`e.e.d.a.k.g` @type ^`boolean` @kind boolean;
  #L386328.  call `writeBoolean`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L38632e.  return @kind void;
}
