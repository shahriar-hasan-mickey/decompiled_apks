record `e.e.d.a.j` @kind class @AccessFlag PUBLIC {
  `e.e.d.a.f` `e.e.d.a.j.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `e.e.d.a.j.b` @AccessFlag PRIVATE_FINAL;
  `e.e.d.a.q.a` `e.e.d.a.j.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `e.e.d.a.j.d` @AccessFlag PRIVATE_FINAL;
  `e.e.d.a.q.c` `e.e.d.a.j.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `e.e.d.a.j.f` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `e.e.d.a.j.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@e.e.d.a.j.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@e.e.d.a.j.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@e.e.d.a.j.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@e.e.d.a.j.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@e.e.d.a.j.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.m` @AccessFlag STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.q` @AccessFlag STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.r` @AccessFlag STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@e.e.d.a.j.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@e.e.d.a.j.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.v` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.w` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.x` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@e.e.d.a.j.y` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.d.a.j` `@@e.e.d.a.j.z` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/e/d/a/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L385104.  v0:= constclass @type ^`e.e.d.a.j` @kind object;
  #L385108.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L38510e.  v0:= temp @kind object;
  #L385110.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L385116.  v0:= temp @kind object;
  #L385118.  `@@e.e.d.a.j.h` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L38511c.  v0:= new `java.util.HashMap`;
  #L385120.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L385126.  v1:= 54I;
  #L38512a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385130.  v2:= temp @kind object;
  #L385132.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L385138.  v3:= temp @kind object;
  #L38513a.  v4:= "9" @kind object;
  #L38513e.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385144.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L38514a.  v0:= new `java.util.HashSet`;
  #L38514e.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L385154.  v3:= 86I;
  #L385158.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38515e.  v4:= temp @kind object;
  #L385160.  call temp:= `add`(v0, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L385166.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L38516c.  v4:= new `java.util.HashSet`;
  #L385170.  call `<init>`(v4) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L385176.  v5:= 52I;
  #L38517a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385180.  v6:= temp @kind object;
  #L385182.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L385188.  v5:= temp @kind object;
  #L38518a.  call temp:= `add`(v4, v5) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L385190.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L385196.  v1:= temp @kind object;
  #L385198.  call temp:= `add`(v4, v1) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L38519e.  v1:= 55I;
  #L3851a2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3851a8.  v5:= temp @kind object;
  #L3851aa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3851b0.  v1:= temp @kind object;
  #L3851b2.  call temp:= `add`(v4, v1) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3851b8.  v1:= 62I;
  #L3851bc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3851c2.  v1:= temp @kind object;
  #L3851c4.  call temp:= `add`(v4, v1) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3851ca.  call temp:= `addAll`(v4, v0) @signature `Ljava/util/HashSet;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3851d0.  call temp:= `unmodifiableSet`(v4) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3851d6.  v0:= new `java.util.HashMap`;
  #L3851da.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3851e0.  v1:= 48I;
  #L3851e4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3851ea.  v4:= temp @kind object;
  #L3851ec.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3851f2.  v1:= temp @kind object;
  #L3851f4.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3851fa.  v1:= 49I;
  #L3851fe.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385204.  v1:= temp @kind object;
  #L385206.  v4:= 49I;
  #L38520a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385210.  v4:= temp @kind object;
  #L385212.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385218.  v1:= 50I;
  #L38521c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385222.  v1:= temp @kind object;
  #L385224.  call temp:= `put`(v0, v1, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38522a.  v4:= 51I;
  #L38522e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385234.  v4:= temp @kind object;
  #L385236.  call temp:= `put`(v0, v4, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38523c.  call temp:= `put`(v0, v6, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385242.  v7:= 53I;
  #L385246.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38524c.  v7:= temp @kind object;
  #L38524e.  call temp:= `put`(v0, v7, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385254.  call temp:= `put`(v0, v2, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38525a.  call temp:= `put`(v0, v5, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385260.  v8:= 56I;
  #L385264.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38526a.  v9:= temp @kind object;
  #L38526c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385272.  v10:= temp @kind object;
  #L385274.  call temp:= `put`(v0, v9, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38527a.  v9:= 57I;
  #L38527e.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385284.  v9:= temp @kind object;
  #L385286.  call temp:= `put`(v0, v9, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38528c.  v10:= new `java.util.HashMap`;
  #L385290.  v11:= 40I;
  #L385294.  call `<init>`(v10, v11) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L38529a.  v11:= 65I;
  #L38529e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852a4.  v11:= temp @kind object;
  #L3852a6.  call temp:= `put`(v10, v11, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3852ac.  v11:= 66I;
  #L3852b0.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852b6.  v12:= temp @kind object;
  #L3852b8.  call temp:= `put`(v10, v12, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3852be.  v12:= 67I;
  #L3852c2.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852c8.  v12:= temp @kind object;
  #L3852ca.  call temp:= `put`(v10, v12, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3852d0.  v1:= 68I;
  #L3852d4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852da.  v1:= temp @kind object;
  #L3852dc.  call temp:= `put`(v10, v1, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3852e2.  v1:= 69I;
  #L3852e6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852ec.  v1:= temp @kind object;
  #L3852ee.  call temp:= `put`(v10, v1, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3852f4.  v1:= 70I;
  #L3852f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3852fe.  v1:= temp @kind object;
  #L385300.  call temp:= `put`(v10, v1, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385306.  v1:= 71I;
  #L38530a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385310.  v1:= temp @kind object;
  #L385312.  call temp:= `put`(v10, v1, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385318.  v1:= 72I;
  #L38531c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385322.  v1:= temp @kind object;
  #L385324.  call temp:= `put`(v10, v1, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38532a.  v1:= 73I;
  #L38532e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385334.  v1:= temp @kind object;
  #L385336.  call temp:= `put`(v10, v1, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38533c.  v1:= 74I;
  #L385340.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385346.  v1:= temp @kind object;
  #L385348.  call temp:= `put`(v10, v1, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38534e.  v1:= 75I;
  #L385352.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385358.  v1:= temp @kind object;
  #L38535a.  call temp:= `put`(v10, v1, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385360.  v1:= 76I;
  #L385364.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38536a.  v1:= temp @kind object;
  #L38536c.  call temp:= `put`(v10, v1, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385372.  v1:= 77I;
  #L385376.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38537c.  v1:= temp @kind object;
  #L38537e.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385384.  v1:= 78I;
  #L385388.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38538e.  v1:= temp @kind object;
  #L385390.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385396.  v1:= 79I;
  #L38539a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853a0.  v1:= temp @kind object;
  #L3853a2.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3853a8.  v1:= 80I;
  #L3853ac.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853b2.  v1:= temp @kind object;
  #L3853b4.  call temp:= `put`(v10, v1, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3853ba.  v1:= 81I;
  #L3853be.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853c4.  v1:= temp @kind object;
  #L3853c6.  call temp:= `put`(v10, v1, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3853cc.  v1:= 82I;
  #L3853d0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853d6.  v1:= temp @kind object;
  #L3853d8.  call temp:= `put`(v10, v1, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3853de.  v1:= 83I;
  #L3853e2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853e8.  v1:= temp @kind object;
  #L3853ea.  call temp:= `put`(v10, v1, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3853f0.  v1:= 84I;
  #L3853f4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3853fa.  v1:= temp @kind object;
  #L3853fc.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385402.  v2:= temp @kind object;
  #L385404.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38540a.  v1:= 85I;
  #L38540e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385414.  v1:= temp @kind object;
  #L385416.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38541c.  v2:= temp @kind object;
  #L38541e.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385424.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38542a.  v1:= temp @kind object;
  #L38542c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385432.  v2:= temp @kind object;
  #L385434.  call temp:= `put`(v10, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38543a.  v1:= 87I;
  #L38543e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385444.  v1:= temp @kind object;
  #L385446.  call temp:= `put`(v10, v1, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38544c.  v1:= 88I;
  #L385450.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385456.  v1:= temp @kind object;
  #L385458.  call temp:= `put`(v10, v1, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38545e.  v1:= 89I;
  #L385462.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385468.  v1:= temp @kind object;
  #L38546a.  call temp:= `put`(v10, v1, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385470.  v1:= 90I;
  #L385474.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38547a.  v1:= temp @kind object;
  #L38547c.  call temp:= `put`(v10, v1, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385482.  call temp:= `unmodifiableMap`(v10) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L385488.  v1:= temp @kind object;
  #L38548a.  `@@e.e.d.a.j.j` @type ^`java.util.Map` := v1 @kind object;
  #L38548e.  v1:= new `java.util.HashMap`;
  #L385492.  v2:= 100I;
  #L385496.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L38549c.  v2:= `@@e.e.d.a.j.j` @type ^`java.util.Map` @kind object;
  #L3854a0.  call `putAll`(v1, v2) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L3854a6.  call `putAll`(v1, v0) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L3854ac.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3854b2.  v1:= temp @kind object;
  #L3854b4.  `@@e.e.d.a.j.k` @type ^`java.util.Map` := v1 @kind object;
  #L3854b8.  v1:= new `java.util.HashMap`;
  #L3854bc.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3854c2.  call `putAll`(v1, v0) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L3854c8.  v2:= 43I;
  #L3854cc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3854d2.  v2:= temp @kind object;
  #L3854d4.  v3:= 43I;
  #L3854d8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3854de.  v3:= temp @kind object;
  #L3854e0.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3854e6.  v2:= 42I;
  #L3854ea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3854f0.  v2:= temp @kind object;
  #L3854f2.  v3:= 42I;
  #L3854f6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3854fc.  v3:= temp @kind object;
  #L3854fe.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385504.  v2:= 35I;
  #L385508.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38550e.  v2:= temp @kind object;
  #L385510.  v3:= 35I;
  #L385514.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38551a.  v3:= temp @kind object;
  #L38551c.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385522.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L385528.  v1:= temp @kind object;
  #L38552a.  `@@e.e.d.a.j.i` @type ^`java.util.Map` := v1 @kind object;
  #L38552e.  v1:= new `java.util.HashMap`;
  #L385532.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L385538.  v2:= `@@e.e.d.a.j.j` @type ^`java.util.Map` @kind object;
  #L38553c.  call temp:= `keySet`(v2) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L385542.  v2:= temp @kind object;
  #L385544.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38554a.  v2:= temp @kind object;
  #L38554c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L385552.  v3:= temp;
  #L385554.  if v3 == 0 then goto L3855a2;
  #L385558.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38555e.  v3:= temp @kind object;
  #L385560.  v3:= (`java.lang.Character`) v3 @kind object;
  #L385564.  call temp:= `charValue`(v3) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L38556a.  v3:= temp;
  #L38556c.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L385572.  v4:= temp;
  #L385574.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38557a.  v4:= temp @kind object;
  #L38557c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385582.  v5:= temp @kind object;
  #L385584.  call temp:= `put`(v1, v4, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38558a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385590.  v4:= temp @kind object;
  #L385592.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385598.  v3:= temp @kind object;
  #L38559a.  call temp:= `put`(v1, v4, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3855a0.  goto L38554c;
  #L3855a2.  call `putAll`(v1, v0) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L3855a8.  v0:= 45I;
  #L3855ac.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855b2.  v2:= temp @kind object;
  #L3855b4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855ba.  v3:= temp @kind object;
  #L3855bc.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3855c2.  v2:= 65293I;
  #L3855c8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855ce.  v2:= temp @kind object;
  #L3855d0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855d6.  v3:= temp @kind object;
  #L3855d8.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3855de.  v2:= 8208I;
  #L3855e2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855e8.  v2:= temp @kind object;
  #L3855ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3855f0.  v3:= temp @kind object;
  #L3855f2.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3855f8.  v2:= 8209I;
  #L3855fc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385602.  v2:= temp @kind object;
  #L385604.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38560a.  v3:= temp @kind object;
  #L38560c.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385612.  v2:= 8210I;
  #L385616.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38561c.  v2:= temp @kind object;
  #L38561e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385624.  v3:= temp @kind object;
  #L385626.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38562c.  v2:= 8211I;
  #L385630.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385636.  v2:= temp @kind object;
  #L385638.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38563e.  v3:= temp @kind object;
  #L385640.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385646.  v2:= 8212I;
  #L38564a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385650.  v2:= temp @kind object;
  #L385652.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385658.  v3:= temp @kind object;
  #L38565a.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385660.  v2:= 8213I;
  #L385664.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38566a.  v2:= temp @kind object;
  #L38566c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385672.  v3:= temp @kind object;
  #L385674.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38567a.  v2:= 8722I;
  #L38567e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385684.  v2:= temp @kind object;
  #L385686.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38568c.  v0:= temp @kind object;
  #L38568e.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385694.  v0:= 47I;
  #L385698.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38569e.  v2:= temp @kind object;
  #L3856a0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856a6.  v3:= temp @kind object;
  #L3856a8.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3856ae.  v2:= 65295I;
  #L3856b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856ba.  v2:= temp @kind object;
  #L3856bc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856c2.  v0:= temp @kind object;
  #L3856c4.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3856ca.  v0:= 32I;
  #L3856ce.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856d4.  v2:= temp @kind object;
  #L3856d6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856dc.  v3:= temp @kind object;
  #L3856de.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3856e4.  v2:= 12288I;
  #L3856e8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856ee.  v2:= temp @kind object;
  #L3856f0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L3856f6.  v3:= temp @kind object;
  #L3856f8.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3856fe.  v2:= 8288I;
  #L385702.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385708.  v2:= temp @kind object;
  #L38570a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385710.  v0:= temp @kind object;
  #L385712.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385718.  v0:= 46I;
  #L38571c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385722.  v2:= temp @kind object;
  #L385724.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38572a.  v3:= temp @kind object;
  #L38572c.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L385732.  v2:= 65294I;
  #L385738.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L38573e.  v2:= temp @kind object;
  #L385740.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L385746.  v0:= temp @kind object;
  #L385748.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38574e.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L385754.  v0:= "[\\d]+(?:[~⁓∼～][\\d]+)?" @kind object;
  #L385758.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38575e.  v0:= new `java.lang.StringBuilder`;
  #L385762.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385768.  v1:= `@@e.e.d.a.j.j` @type ^`java.util.Map` @kind object;
  #L38576c.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L385772.  v1:= temp @kind object;
  #L385774.  call temp:= `toArray`(v1) @signature `Ljava/util/Set;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L38577a.  v1:= temp @kind object;
  #L38577c.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L385782.  v1:= temp @kind object;
  #L385784.  v2:= "[, \\[\\]]" @kind object;
  #L385788.  v3:= "" @kind object;
  #L38578c.  call temp:= `replaceAll`(v1, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L385792.  v1:= temp @kind object;
  #L385794.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38579a.  v1:= `@@e.e.d.a.j.j` @type ^`java.util.Map` @kind object;
  #L38579e.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3857a4.  v1:= temp @kind object;
  #L3857a6.  call temp:= `toArray`(v1) @signature `Ljava/util/Set;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3857ac.  v1:= temp @kind object;
  #L3857ae.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3857b4.  v1:= temp @kind object;
  #L3857b6.  call temp:= `toLowerCase`(v1) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L3857bc.  v1:= temp @kind object;
  #L3857be.  v2:= "[, \\[\\]]" @kind object;
  #L3857c2.  v3:= "" @kind object;
  #L3857c6.  call temp:= `replaceAll`(v1, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3857cc.  v1:= temp @kind object;
  #L3857ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3857d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3857da.  v0:= temp @kind object;
  #L3857dc.  `@@e.e.d.a.j.l` @type ^`java.lang.String` := v0 @kind object;
  #L3857e0.  v0:= "[+＋]+" @kind object;
  #L3857e4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3857ea.  v0:= temp @kind object;
  #L3857ec.  `@@e.e.d.a.j.m` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3857f0.  v0:= "[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]+" @kind object;
  #L3857f4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3857fa.  v0:= temp @kind object;
  #L3857fc.  `@@e.e.d.a.j.n` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385800.  v0:= "(\\p{Nd})" @kind object;
  #L385804.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38580a.  v0:= temp @kind object;
  #L38580c.  `@@e.e.d.a.j.o` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385810.  v0:= "[+＋\\p{Nd}]" @kind object;
  #L385814.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38581a.  v0:= temp @kind object;
  #L38581c.  `@@e.e.d.a.j.p` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385820.  v0:= "[\\\\/] *x" @kind object;
  #L385824.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38582a.  v0:= temp @kind object;
  #L38582c.  `@@e.e.d.a.j.q` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385830.  v0:= "[[\\P{N}&&\\P{L}]&&[^#]]+$" @kind object;
  #L385834.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38583a.  v0:= temp @kind object;
  #L38583c.  `@@e.e.d.a.j.r` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385840.  v0:= "(?:.*?[A-Za-z]){3}.*" @kind object;
  #L385844.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38584a.  v0:= temp @kind object;
  #L38584c.  `@@e.e.d.a.j.s` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385850.  v0:= new `java.lang.StringBuilder`;
  #L385854.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38585a.  v1:= "\\p{Nd}{2}|[+＋]*+(?:[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*]*\\p{Nd}){3,}[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～*" @kind object;
  #L38585e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385864.  v1:= `@@e.e.d.a.j.l` @type ^`java.lang.String` @kind object;
  #L385868.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38586e.  v1:= "\\p{Nd}" @kind object;
  #L385872.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385878.  v1:= "]*" @kind object;
  #L38587c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385882.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L385888.  v0:= temp @kind object;
  #L38588a.  `@@e.e.d.a.j.t` @type ^`java.lang.String` := v0 @kind object;
  #L38588e.  v0:= "xｘ#＃~～" @kind object;
  #L385892.  v1:= new `java.lang.StringBuilder`;
  #L385896.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38589c.  v2:= ",;" @kind object;
  #L3858a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3858a6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3858ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3858b2.  v1:= temp @kind object;
  #L3858b4.  call temp:= `d`(v1) @signature `Le/e/d/a/j;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3858ba.  v1:= temp @kind object;
  #L3858bc.  `@@e.e.d.a.j.u` @type ^`java.lang.String` := v1 @kind object;
  #L3858c0.  call temp:= `d`(v0) @signature `Le/e/d/a/j;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3858c6.  v0:= new `java.lang.StringBuilder`;
  #L3858ca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3858d0.  v1:= "(?:" @kind object;
  #L3858d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3858da.  v1:= `@@e.e.d.a.j.u` @type ^`java.lang.String` @kind object;
  #L3858de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3858e4.  v1:= ")$" @kind object;
  #L3858e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3858ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3858f4.  v0:= temp @kind object;
  #L3858f6.  call temp:= `compile`(v0, v11) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L3858fc.  v0:= temp @kind object;
  #L3858fe.  `@@e.e.d.a.j.v` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385902.  v0:= new `java.lang.StringBuilder`;
  #L385906.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38590c.  v1:= `@@e.e.d.a.j.t` @type ^`java.lang.String` @kind object;
  #L385910.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385916.  v1:= "(?:" @kind object;
  #L38591a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385920.  v1:= `@@e.e.d.a.j.u` @type ^`java.lang.String` @kind object;
  #L385924.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38592a.  v1:= ")?" @kind object;
  #L38592e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385934.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38593a.  v0:= temp @kind object;
  #L38593c.  call temp:= `compile`(v0, v11) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L385942.  v0:= temp @kind object;
  #L385944.  `@@e.e.d.a.j.w` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385948.  v0:= "(\\D+)" @kind object;
  #L38594c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L385952.  v0:= "(\\$\\d)" @kind object;
  #L385956.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38595c.  v0:= temp @kind object;
  #L38595e.  `@@e.e.d.a.j.x` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385962.  v0:= "\\(?\\$1\\)?" @kind object;
  #L385966.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L38596c.  v0:= temp @kind object;
  #L38596e.  `@@e.e.d.a.j.y` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L385972.  v0:= 0I;
  #L385974.  `@@e.e.d.a.j.z` @type ^`e.e.d.a.j` := v0 @kind object;
  #L385978.  return @kind void;
}
procedure `void` `<init>`(`e.e.d.a.j` v5 @kind this, `e.e.d.a.f` v6 @kind object, `java.util.Map` v7 @kind object) @signature `Le/e/d/a/j;.<init>:(Le/e/d/a/f;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38598c.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L385992.  call temp:= `a`() @signature `Le/e/d/a/q/b;.a:()Le/e/d/a/q/a;` @kind static;
  #L385998.  v0:= temp @kind object;
  #L38599a.  v5.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` := v0 @kind object;
  #L38599e.  v0:= new `java.util.HashSet`;
  #L3859a2.  v1:= 35I;
  #L3859a6.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L3859ac.  v5.`e.e.d.a.j.d` @type ^`java.util.Set` := v0 @kind object;
  #L3859b0.  v0:= new `e.e.d.a.q.c`;
  #L3859b4.  v1:= 100I;
  #L3859b8.  call `<init>`(v0, v1) @signature `Le/e/d/a/q/c;.<init>:(I)V` @kind direct;
  #L3859be.  v5.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` := v0 @kind object;
  #L3859c2.  v0:= new `java.util.HashSet`;
  #L3859c6.  v1:= 320I;
  #L3859ca.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L3859d0.  v5.`e.e.d.a.j.f` @type ^`java.util.Set` := v0 @kind object;
  #L3859d4.  v0:= new `java.util.HashSet`;
  #L3859d8.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3859de.  v5.`e.e.d.a.j.g` @type ^`java.util.Set` := v0 @kind object;
  #L3859e2.  v5.`e.e.d.a.j.a` @type ^`e.e.d.a.f` := v6 @kind object;
  #L3859e6.  v5.`e.e.d.a.j.b` @type ^`java.util.Map` := v7 @kind object;
  #L3859ea.  call temp:= `entrySet`(v7) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3859f0.  v6:= temp @kind object;
  #L3859f2.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3859f8.  v6:= temp @kind object;
  #L3859fa.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L385a00.  v0:= temp;
  #L385a02.  v1:= 1I;
  #L385a04.  v2:= "001" @kind object;
  #L385a08.  if v0 == 0 then goto L385a66;
  #L385a0c.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L385a12.  v0:= temp @kind object;
  #L385a14.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L385a18.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L385a1e.  v3:= temp @kind object;
  #L385a20.  v3:= (`java.util.List`) v3 @kind object;
  #L385a24.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L385a2a.  v4:= temp;
  #L385a2c.  if v4 != v1 then goto L385a5a;
  #L385a30.  v1:= 0I;
  #L385a32.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L385a38.  v1:= temp @kind object;
  #L385a3a.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L385a40.  v1:= temp;
  #L385a42.  if v1 == 0 then goto L385a5a;
  #L385a46.  v1:= v5.`e.e.d.a.j.g` @type ^`java.util.Set` @kind object;
  #L385a4a.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L385a50.  v0:= temp @kind object;
  #L385a52.  call temp:= `add`(v1, v0) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L385a58.  goto L3859fa;
  #L385a5a.  v0:= v5.`e.e.d.a.j.f` @type ^`java.util.Set` @kind object;
  #L385a5e.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L385a64.  goto L3859fa;
  #L385a66.  v6:= v5.`e.e.d.a.j.f` @type ^`java.util.Set` @kind object;
  #L385a6a.  call temp:= `remove`(v6, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L385a70.  v6:= temp;
  #L385a72.  if v6 == 0 then goto L385a88;
  #L385a76.  v6:= `@@e.e.d.a.j.h` @type ^`java.util.logging.Logger` @kind object;
  #L385a7a.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L385a7e.  v2:= "invalid metadata (country calling code was mapped to the non-geo entity as well as specific region(s))" @kind object;
  #L385a82.  call `log`(v6, v0, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L385a88.  v6:= v5.`e.e.d.a.j.d` @type ^`java.util.Set` @kind object;
  #L385a8c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L385a92.  v0:= temp @kind object;
  #L385a94.  call temp:= `get`(v7, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L385a9a.  v7:= temp @kind object;
  #L385a9c.  v7:= (`java.util.Collection`) v7 @kind object;
  #L385aa0.  call temp:= `addAll`(v6, v7) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L385aa6.  return @kind void;
}
procedure `e.e.d.a.j$c` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object, `e.e.d.a.l` v3 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;)Le/e/d/a/j$c;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3841b4.  call temp:= `c`(v3) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L3841ba.  v0:= temp @kind object;
  #L3841bc.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3841c2.  v0:= temp;
  #L3841c4.  if v0 != 0 then goto L3841ce;
  #L3841c8.  v2:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L3841cc.  return v2 @kind object;
  #L3841ce.  call temp:= `p`(v3) @signature `Le/e/d/a/l;.p:()Le/e/d/a/n;` @kind virtual;
  #L3841d4.  v0:= temp @kind object;
  #L3841d6.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3841dc.  v0:= temp;
  #L3841de.  if v0 == 0 then goto L3841e8;
  #L3841e2.  v2:= `@@e.e.d.a.j$c.f` @type ^`e.e.d.a.j$c` @kind object;
  #L3841e6.  return v2 @kind object;
  #L3841e8.  call temp:= `s`(v3) @signature `Le/e/d/a/l;.s:()Le/e/d/a/n;` @kind virtual;
  #L3841ee.  v0:= temp @kind object;
  #L3841f0.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3841f6.  v0:= temp;
  #L3841f8.  if v0 == 0 then goto L384202;
  #L3841fc.  v2:= `@@e.e.d.a.j$c.e` @type ^`e.e.d.a.j$c` @kind object;
  #L384200.  return v2 @kind object;
  #L384202.  call temp:= `r`(v3) @signature `Le/e/d/a/l;.r:()Le/e/d/a/n;` @kind virtual;
  #L384208.  v0:= temp @kind object;
  #L38420a.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L384210.  v0:= temp;
  #L384212.  if v0 == 0 then goto L38421c;
  #L384216.  v2:= `@@e.e.d.a.j$c.g` @type ^`e.e.d.a.j$c` @kind object;
  #L38421a.  return v2 @kind object;
  #L38421c.  call temp:= `v`(v3) @signature `Le/e/d/a/l;.v:()Le/e/d/a/n;` @kind virtual;
  #L384222.  v0:= temp @kind object;
  #L384224.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L38422a.  v0:= temp;
  #L38422c.  if v0 == 0 then goto L384236;
  #L384230.  v2:= `@@e.e.d.a.j$c.h` @type ^`e.e.d.a.j$c` @kind object;
  #L384234.  return v2 @kind object;
  #L384236.  call temp:= `n`(v3) @signature `Le/e/d/a/l;.n:()Le/e/d/a/n;` @kind virtual;
  #L38423c.  v0:= temp @kind object;
  #L38423e.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L384244.  v0:= temp;
  #L384246.  if v0 == 0 then goto L384250;
  #L38424a.  v2:= `@@e.e.d.a.j$c.i` @type ^`e.e.d.a.j$c` @kind object;
  #L38424e.  return v2 @kind object;
  #L384250.  call temp:= `m`(v3) @signature `Le/e/d/a/l;.m:()Le/e/d/a/n;` @kind virtual;
  #L384256.  v0:= temp @kind object;
  #L384258.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L38425e.  v0:= temp;
  #L384260.  if v0 == 0 then goto L38426a;
  #L384264.  v2:= `@@e.e.d.a.j$c.j` @type ^`e.e.d.a.j$c` @kind object;
  #L384268.  return v2 @kind object;
  #L38426a.  call temp:= `t`(v3) @signature `Le/e/d/a/l;.t:()Le/e/d/a/n;` @kind virtual;
  #L384270.  v0:= temp @kind object;
  #L384272.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L384278.  v0:= temp;
  #L38427a.  if v0 == 0 then goto L384284;
  #L38427e.  v2:= `@@e.e.d.a.j$c.k` @type ^`e.e.d.a.j$c` @kind object;
  #L384282.  return v2 @kind object;
  #L384284.  call temp:= `u`(v3) @signature `Le/e/d/a/l;.u:()Le/e/d/a/n;` @kind virtual;
  #L38428a.  v0:= temp @kind object;
  #L38428c.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L384292.  v0:= temp;
  #L384294.  if v0 == 0 then goto L38429e;
  #L384298.  v2:= `@@e.e.d.a.j$c.l` @type ^`e.e.d.a.j$c` @kind object;
  #L38429c.  return v2 @kind object;
  #L38429e.  call temp:= `b`(v3) @signature `Le/e/d/a/l;.b:()Le/e/d/a/n;` @kind virtual;
  #L3842a4.  v0:= temp @kind object;
  #L3842a6.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3842ac.  v0:= temp;
  #L3842ae.  if v0 == 0 then goto L3842e4;
  #L3842b2.  call temp:= `q`(v3) @signature `Le/e/d/a/l;.q:()Z` @kind virtual;
  #L3842b8.  v0:= temp;
  #L3842ba.  if v0 == 0 then goto L3842c4;
  #L3842be.  v2:= `@@e.e.d.a.j$c.d` @type ^`e.e.d.a.j$c` @kind object;
  #L3842c2.  return v2 @kind object;
  #L3842c4.  call temp:= `h`(v3) @signature `Le/e/d/a/l;.h:()Le/e/d/a/n;` @kind virtual;
  #L3842ca.  v3:= temp @kind object;
  #L3842cc.  call temp:= `a`(v1, v2, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3842d2.  v2:= temp;
  #L3842d4.  if v2 == 0 then goto L3842de;
  #L3842d8.  v2:= `@@e.e.d.a.j$c.d` @type ^`e.e.d.a.j$c` @kind object;
  #L3842dc.  return v2 @kind object;
  #L3842de.  v2:= `@@e.e.d.a.j$c.b` @type ^`e.e.d.a.j$c` @kind object;
  #L3842e2.  return v2 @kind object;
  #L3842e4.  call temp:= `q`(v3) @signature `Le/e/d/a/l;.q:()Z` @kind virtual;
  #L3842ea.  v0:= temp;
  #L3842ec.  if v0 != 0 then goto L38430a;
  #L3842f0.  call temp:= `h`(v3) @signature `Le/e/d/a/l;.h:()Le/e/d/a/n;` @kind virtual;
  #L3842f6.  v3:= temp @kind object;
  #L3842f8.  call temp:= `a`(v1, v2, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @kind virtual;
  #L3842fe.  v2:= temp;
  #L384300.  if v2 == 0 then goto L38430a;
  #L384304.  v2:= `@@e.e.d.a.j$c.c` @type ^`e.e.d.a.j$c` @kind object;
  #L384308.  return v2 @kind object;
  #L38430a.  v2:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L38430e.  return v2 @kind object;
}
procedure `e.e.d.a.j$d` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `e.e.d.a.l` v3 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;)Le/e/d/a/j$d;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L384320.  v0:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L384324.  call temp:= `a`(v1, v2, v3, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/j$d;` @kind direct;
  #L38432a.  v2:= temp @kind object;
  #L38432c.  return v2 @kind object;
}
procedure `e.e.d.a.j$d` `a`(`e.e.d.a.j` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `e.e.d.a.l` v5 @kind object, `e.e.d.a.j$c` v6 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/j$d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L384340.  call temp:= `a`(v3, v5, v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/n;` @kind virtual;
  #L384346.  v0:= temp @kind object;
  #L384348.  call temp:= `c`(v0) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L38434e.  v1:= temp @kind object;
  #L384350.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L384356.  v1:= temp;
  #L384358.  if v1 == 0 then goto L38436e;
  #L38435c.  call temp:= `c`(v5) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L384362.  v1:= temp @kind object;
  #L384364.  call temp:= `c`(v1) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L38436a.  v1:= temp @kind object;
  #L38436c.  goto L384376;
  #L38436e.  call temp:= `c`(v0) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L384374.  v1:= temp @kind object;
  #L384376.  call temp:= `e`(v0) @signature `Le/e/d/a/n;.e:()Ljava/util/List;` @kind virtual;
  #L38437c.  v0:= temp @kind object;
  #L38437e.  v2:= `@@e.e.d.a.j$c.d` @type ^`e.e.d.a.j$c` @kind object;
  #L384382.  if v6 != v2 then goto L384438;
  #L384386.  v6:= `@@e.e.d.a.j$c.b` @type ^`e.e.d.a.j$c` @kind object;
  #L38438a.  call temp:= `a`(v3, v5, v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/n;` @kind virtual;
  #L384390.  v6:= temp @kind object;
  #L384392.  call temp:= `a`(v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/n;)Z` @kind static;
  #L384398.  v6:= temp;
  #L38439a.  if v6 != 0 then goto L3843ac;
  #L38439e.  v6:= `@@e.e.d.a.j$c.c` @type ^`e.e.d.a.j$c` @kind object;
  #L3843a2.  call temp:= `a`(v3, v4, v5, v6) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/j$d;` @kind direct;
  #L3843a8.  v4:= temp @kind object;
  #L3843aa.  return v4 @kind object;
  #L3843ac.  v6:= `@@e.e.d.a.j$c.c` @type ^`e.e.d.a.j$c` @kind object;
  #L3843b0.  call temp:= `a`(v3, v5, v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/n;` @kind virtual;
  #L3843b6.  v6:= temp @kind object;
  #L3843b8.  call temp:= `a`(v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/n;)Z` @kind static;
  #L3843be.  v2:= temp;
  #L3843c0.  if v2 == 0 then goto L384438;
  #L3843c4.  v2:= new `java.util.ArrayList`;
  #L3843c8.  call `<init>`(v2, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3843ce.  call temp:= `b`(v6) @signature `Le/e/d/a/n;.b:()I` @kind virtual;
  #L3843d4.  v1:= temp;
  #L3843d6.  if v1 != 0 then goto L3843ec;
  #L3843da.  call temp:= `c`(v5) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L3843e0.  v5:= temp @kind object;
  #L3843e2.  call temp:= `c`(v5) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L3843e8.  v5:= temp @kind object;
  #L3843ea.  goto L3843f4;
  #L3843ec.  call temp:= `c`(v6) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L3843f2.  v5:= temp @kind object;
  #L3843f4.  call temp:= `addAll`(v2, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3843fa.  call `sort`(v2) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L384400.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L384406.  v5:= temp;
  #L384408.  if v5 == 0 then goto L384416;
  #L38440c.  call temp:= `e`(v6) @signature `Le/e/d/a/n;.e:()Ljava/util/List;` @kind virtual;
  #L384412.  v0:= temp @kind object;
  #L384414.  goto L38443a;
  #L384416.  v5:= new `java.util.ArrayList`;
  #L38441a.  call `<init>`(v5, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L384420.  call temp:= `e`(v6) @signature `Le/e/d/a/n;.e:()Ljava/util/List;` @kind virtual;
  #L384426.  v6:= temp @kind object;
  #L384428.  call temp:= `addAll`(v5, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L38442e.  call `sort`(v5) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L384434.  v0:= v5 @kind object;
  #L384436.  goto L38443a;
  #L384438.  v2:= v1 @kind object;
  #L38443a.  v5:= 0I;
  #L38443c.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L384442.  v6:= temp @kind object;
  #L384444.  v6:= (`java.lang.Integer`) v6 @kind object;
  #L384448.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38444e.  v6:= temp;
  #L384450.  v1:= -1I;
  #L384452.  if v6 != v1 then goto L38445c;
  #L384456.  v4:= `@@e.e.d.a.j$d.f` @type ^`e.e.d.a.j$d` @kind object;
  #L38445a.  return v4 @kind object;
  #L38445c.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L384462.  v4:= temp;
  #L384464.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38446a.  v6:= temp @kind object;
  #L38446c.  call temp:= `contains`(v0, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L384472.  v6:= temp;
  #L384474.  if v6 == 0 then goto L38447e;
  #L384478.  v4:= `@@e.e.d.a.j$d.c` @type ^`e.e.d.a.j$d` @kind object;
  #L38447c.  return v4 @kind object;
  #L38447e.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L384484.  v5:= temp @kind object;
  #L384486.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L38448a.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L384490.  v5:= temp;
  #L384492.  if v5 != v4 then goto L38449c;
  #L384496.  v4:= `@@e.e.d.a.j$d.b` @type ^`e.e.d.a.j$d` @kind object;
  #L38449a.  return v4 @kind object;
  #L38449c.  if v5 <= v4 then goto L3844a6;
  #L3844a0.  v4:= `@@e.e.d.a.j$d.e` @type ^`e.e.d.a.j$d` @kind object;
  #L3844a4.  return v4 @kind object;
  #L3844a6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3844ac.  v5:= temp;
  #L3844ae.  v6:= 1I;
  #L3844b0.  v5:= v5 - v6 @kind int;
  #L3844b2.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3844b8.  v5:= temp @kind object;
  #L3844ba.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L3844be.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3844c4.  v5:= temp;
  #L3844c6.  if v5 >= v4 then goto L3844d0;
  #L3844ca.  v4:= `@@e.e.d.a.j$d.g` @type ^`e.e.d.a.j$d` @kind object;
  #L3844ce.  return v4 @kind object;
  #L3844d0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3844d6.  v5:= temp;
  #L3844d8.  call temp:= `subList`(v2, v6, v5) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3844de.  v5:= temp @kind object;
  #L3844e0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3844e6.  v4:= temp @kind object;
  #L3844e8.  call temp:= `contains`(v5, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3844ee.  v4:= temp;
  #L3844f0.  if v4 == 0 then goto L3844fa;
  #L3844f4.  v4:= `@@e.e.d.a.j$d.b` @type ^`e.e.d.a.j$d` @kind object;
  #L3844f8.  goto L3844fe;
  #L3844fa.  v4:= `@@e.e.d.a.j$d.f` @type ^`e.e.d.a.j$d` @kind object;
  #L3844fe.  return v4 @kind object;
}
procedure `e.e.d.a.j` `a`() @signature `Le/e/d/a/j;.a:()Le/e/d/a/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L384124.  v0:= constclass @type ^`e.e.d.a.j` @kind object;
  #L384128.  @monitorenter v0
  #L38412a.  v1:= `@@e.e.d.a.j.z` @type ^`e.e.d.a.j` @kind object;
  #L38412e.  if v1 != 0 then goto L384144;
  #L384132.  v1:= `@@e.e.d.a.e.a` @type ^`e.e.d.a.d` @kind object;
  #L384136.  call temp:= `a`(v1) @signature `Le/e/d/a/j;.a:(Le/e/d/a/d;)Le/e/d/a/j;` @kind static;
  #L38413c.  v1:= temp @kind object;
  #L38413e.  call `a`(v1) @signature `Le/e/d/a/j;.a:(Le/e/d/a/j;)V` @kind static;
  #L384144.  v1:= `@@e.e.d.a.j.z` @type ^`e.e.d.a.j` @kind object;
  #L384148.  @monitorexit v0
  #L38414a.  return v1 @kind object;
  #L38414c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38414e.  @monitorexit v0
  #L384150.  throw v1;
  catch `java.lang.Throwable` @[L38412a..L384148] goto L38414c;
}
procedure `e.e.d.a.j` `a`(`e.e.d.a.d` v1 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/d;)Le/e/d/a/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3840b4.  if v1 == 0 then goto L3840cc;
  #L3840b8.  v0:= new `e.e.d.a.g`;
  #L3840bc.  call `<init>`(v0, v1) @signature `Le/e/d/a/g;.<init>:(Le/e/d/a/d;)V` @kind direct;
  #L3840c2.  call temp:= `a`(v0) @signature `Le/e/d/a/j;.a:(Le/e/d/a/f;)Le/e/d/a/j;` @kind static;
  #L3840c8.  v1:= temp @kind object;
  #L3840ca.  return v1 @kind object;
  #L3840cc.  v1:= new `java.lang.IllegalArgumentException`;
  #L3840d0.  v0:= "metadataLoader could not be null." @kind object;
  #L3840d4.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3840da.  throw v1;
}
procedure `e.e.d.a.j` `a`(`e.e.d.a.f` v2 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/f;)Le/e/d/a/j;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3840ec.  if v2 == 0 then goto L384104;
  #L3840f0.  v0:= new `e.e.d.a.j`;
  #L3840f4.  call temp:= `a`() @signature `Le/e/d/a/c;.a:()Ljava/util/Map;` @kind static;
  #L3840fa.  v1:= temp @kind object;
  #L3840fc.  call `<init>`(v0, v2, v1) @signature `Le/e/d/a/j;.<init>:(Le/e/d/a/f;Ljava/util/Map;)V` @kind direct;
  #L384102.  return v0 @kind object;
  #L384104.  v2:= new `java.lang.IllegalArgumentException`;
  #L384108.  v0:= "metadataSource could not be null." @kind object;
  #L38410c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L384112.  throw v2;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.j` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Le/e/d/a/j;.a:(ILjava/lang/String;)Le/e/d/a/l;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L384614.  v0:= "001" @kind object;
  #L384618.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38461e.  v0:= temp;
  #L384620.  if v0 == 0 then goto L38462e;
  #L384624.  call temp:= `a`(v1, v2) @signature `Le/e/d/a/j;.a:(I)Le/e/d/a/l;` @kind virtual;
  #L38462a.  v2:= temp @kind object;
  #L38462c.  goto L384636;
  #L38462e.  call temp:= `c`(v1, v3) @signature `Le/e/d/a/j;.c:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L384634.  v2:= temp @kind object;
  #L384636.  return v2 @kind object;
}
procedure `java.lang.CharSequence` `a`(`java.lang.CharSequence` v3 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L384a40.  v0:= `@@e.e.d.a.j.p` @type ^`java.util.regex.Pattern` @kind object;
  #L384a44.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384a4a.  v0:= temp @kind object;
  #L384a4c.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L384a52.  v1:= temp;
  #L384a54.  if v1 == 0 then goto L384ac4;
  #L384a58.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L384a5e.  v0:= temp;
  #L384a60.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L384a66.  v1:= temp;
  #L384a68.  call temp:= `subSequence`(v3, v0, v1) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L384a6e.  v3:= temp @kind object;
  #L384a70.  v0:= `@@e.e.d.a.j.r` @type ^`java.util.regex.Pattern` @kind object;
  #L384a74.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384a7a.  v0:= temp @kind object;
  #L384a7c.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L384a82.  v1:= temp;
  #L384a84.  v2:= 0I;
  #L384a86.  if v1 == 0 then goto L384a9a;
  #L384a8a.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L384a90.  v0:= temp;
  #L384a92.  call temp:= `subSequence`(v3, v2, v0) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L384a98.  v3:= temp @kind object;
  #L384a9a.  v0:= `@@e.e.d.a.j.q` @type ^`java.util.regex.Pattern` @kind object;
  #L384a9e.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384aa4.  v0:= temp @kind object;
  #L384aa6.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L384aac.  v1:= temp;
  #L384aae.  if v1 == 0 then goto L384ac2;
  #L384ab2.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L384ab8.  v0:= temp;
  #L384aba.  call temp:= `subSequence`(v3, v2, v0) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L384ac0.  v3:= temp @kind object;
  #L384ac2.  return v3 @kind object;
  #L384ac4.  v3:= "" @kind object;
  #L384ac8.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v3 @kind this, `e.e.d.a.o` v4 @kind object, `java.util.List` v5 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L384e6c.  call temp:= `a`(v3, v4) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L384e72.  v4:= temp @kind object;
  #L384e74.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L384e7a.  v5:= temp @kind object;
  #L384e7c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L384e82.  v0:= temp;
  #L384e84.  if v0 == 0 then goto L384ee4;
  #L384e88.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L384e8e.  v0:= temp @kind object;
  #L384e90.  v0:= (`java.lang.String`) v0 @kind object;
  #L384e94.  call temp:= `c`(v3, v0) @signature `Le/e/d/a/j;.c:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L384e9a.  v1:= temp @kind object;
  #L384e9c.  call temp:= `w`(v1) @signature `Le/e/d/a/l;.w:()Z` @kind virtual;
  #L384ea2.  v2:= temp;
  #L384ea4.  if v2 == 0 then goto L384ed2;
  #L384ea8.  v2:= v3.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L384eac.  call temp:= `g`(v1) @signature `Le/e/d/a/l;.g:()Ljava/lang/String;` @kind virtual;
  #L384eb2.  v1:= temp @kind object;
  #L384eb4.  call temp:= `a`(v2, v1) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L384eba.  v1:= temp @kind object;
  #L384ebc.  call temp:= `matcher`(v1, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384ec2.  v1:= temp @kind object;
  #L384ec4.  call temp:= `lookingAt`(v1) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L384eca.  v1:= temp;
  #L384ecc.  if v1 == 0 then goto L384e7c;
  #L384ed0.  return v0 @kind object;
  #L384ed2.  call temp:= `a`(v3, v4, v1) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;)Le/e/d/a/j$c;` @kind direct;
  #L384ed8.  v1:= temp @kind object;
  #L384eda.  v2:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L384ede.  if v1 == v2 then goto L384e7c;
  #L384ee2.  return v0 @kind object;
  #L384ee4.  v4:= 0I;
  #L384ee6.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.CharSequence` v4 @kind object, `java.util.Map` v5 @kind object, `boolean` v6 ) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L384fc8.  v0:= new `java.lang.StringBuilder`;
  #L384fcc.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L384fd2.  v1:= temp;
  #L384fd4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L384fda.  v1:= 0I;
  #L384fdc.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L384fe2.  v2:= temp;
  #L384fe4.  if v1 >= v2 then goto L385028;
  #L384fe8.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L384fee.  v2:= temp;
  #L384ff0.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L384ff6.  v3:= temp;
  #L384ff8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L384ffe.  v3:= temp @kind object;
  #L385000.  call temp:= `get`(v5, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L385006.  v3:= temp @kind object;
  #L385008.  v3:= (`java.lang.Character`) v3 @kind object;
  #L38500c.  if v3 == 0 then goto L385018;
  #L385010.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385016.  goto L385022;
  #L385018.  if v6 != 0 then goto L385022;
  #L38501c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L385022.  v1:= v1 + 1;
  #L385026.  goto L384fdc;
  #L385028.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38502e.  v4:= temp @kind object;
  #L385030.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v3 @kind this, `java.lang.String` v4 @kind object, `e.e.d.a.k` v5 @kind object, `e.e.d.a.j$b` v6 @kind object, `java.lang.CharSequence` v7 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/k;Le/e/d/a/j$b;Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L384c1c.  call temp:= `b`(v5) @signature `Le/e/d/a/k;.b:()Ljava/lang/String;` @kind virtual;
  #L384c22.  v0:= temp @kind object;
  #L384c24.  v1:= v3.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L384c28.  call temp:= `f`(v5) @signature `Le/e/d/a/k;.f:()Ljava/lang/String;` @kind virtual;
  #L384c2e.  v2:= temp @kind object;
  #L384c30.  call temp:= `a`(v1, v2) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L384c36.  v1:= temp @kind object;
  #L384c38.  call temp:= `matcher`(v1, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384c3e.  v4:= temp @kind object;
  #L384c40.  v1:= `@@e.e.d.a.j$b.d` @type ^`e.e.d.a.j$b` @kind object;
  #L384c44.  if v6 != v1 then goto L384c82;
  #L384c48.  if v7 == 0 then goto L384c82;
  #L384c4c.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L384c52.  v1:= temp;
  #L384c54.  if v1 <= 0 then goto L384c82;
  #L384c58.  call temp:= `a`(v5) @signature `Le/e/d/a/k;.a:()Ljava/lang/String;` @kind virtual;
  #L384c5e.  v1:= temp @kind object;
  #L384c60.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L384c66.  v1:= temp;
  #L384c68.  if v1 <= 0 then goto L384c82;
  #L384c6c.  call temp:= `a`(v5) @signature `Le/e/d/a/k;.a:()Ljava/lang/String;` @kind virtual;
  #L384c72.  v5:= temp @kind object;
  #L384c74.  v1:= "$CC" @kind object;
  #L384c78.  call temp:= `replace`(v5, v1, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L384c7e.  v5:= temp @kind object;
  #L384c80.  goto L384ca2;
  #L384c82.  call temp:= `d`(v5) @signature `Le/e/d/a/k;.d:()Ljava/lang/String;` @kind virtual;
  #L384c88.  v5:= temp @kind object;
  #L384c8a.  v7:= `@@e.e.d.a.j$b.d` @type ^`e.e.d.a.j$b` @kind object;
  #L384c8e.  if v6 != v7 then goto L384cc0;
  #L384c92.  if v5 == 0 then goto L384cc0;
  #L384c96.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L384c9c.  v7:= temp;
  #L384c9e.  if v7 <= 0 then goto L384cc0;
  #L384ca2.  v7:= `@@e.e.d.a.j.x` @type ^`java.util.regex.Pattern` @kind object;
  #L384ca6.  call temp:= `matcher`(v7, v0) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384cac.  v7:= temp @kind object;
  #L384cae.  call temp:= `replaceFirst`(v7, v5) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L384cb4.  v5:= temp @kind object;
  #L384cb6.  call temp:= `replaceAll`(v4, v5) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L384cbc.  v4:= temp @kind object;
  #L384cbe.  goto L384cc8;
  #L384cc0.  call temp:= `replaceAll`(v4, v0) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L384cc6.  v4:= temp @kind object;
  #L384cc8.  v5:= `@@e.e.d.a.j$b.e` @type ^`e.e.d.a.j$b` @kind object;
  #L384ccc.  if v6 != v5 then goto L384d08;
  #L384cd0.  v5:= `@@e.e.d.a.j.n` @type ^`java.util.regex.Pattern` @kind object;
  #L384cd4.  call temp:= `matcher`(v5, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384cda.  v5:= temp @kind object;
  #L384cdc.  call temp:= `lookingAt`(v5) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L384ce2.  v6:= temp;
  #L384ce4.  if v6 == 0 then goto L384cf4;
  #L384ce8.  v4:= "" @kind object;
  #L384cec.  call temp:= `replaceFirst`(v5, v4) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L384cf2.  v4:= temp @kind object;
  #L384cf4.  call temp:= `reset`(v5, v4) @signature `Ljava/util/regex/Matcher;.reset:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384cfa.  v4:= temp @kind object;
  #L384cfc.  v5:= "-" @kind object;
  #L384d00.  call temp:= `replaceAll`(v4, v5) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L384d06.  v4:= temp @kind object;
  #L384d08.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object, `e.e.d.a.l` v3 @kind object, `e.e.d.a.j$b` v4 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;Le/e/d/a/j$b;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L384ba8.  v0:= 0I;
  #L384baa.  call temp:= `a`(v1, v2, v3, v4, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;Le/e/d/a/j$b;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind direct;
  #L384bb0.  v2:= temp @kind object;
  #L384bb2.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object, `e.e.d.a.l` v3 @kind object, `e.e.d.a.j$b` v4 @kind object, `java.lang.CharSequence` v5 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;Le/e/d/a/j$b;Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L384bc4.  call temp:= `f`(v3) @signature `Le/e/d/a/l;.f:()Ljava/util/List;` @kind virtual;
  #L384bca.  v0:= temp @kind object;
  #L384bcc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L384bd2.  v0:= temp;
  #L384bd4.  if v0 == 0 then goto L384bec;
  #L384bd8.  v0:= `@@e.e.d.a.j$b.d` @type ^`e.e.d.a.j$b` @kind object;
  #L384bdc.  if v4 != v0 then goto L384be2;
  #L384be0.  goto L384bec;
  #L384be2.  call temp:= `f`(v3) @signature `Le/e/d/a/l;.f:()Ljava/util/List;` @kind virtual;
  #L384be8.  v3:= temp @kind object;
  #L384bea.  goto L384bf4;
  #L384bec.  call temp:= `l`(v3) @signature `Le/e/d/a/l;.l:()Ljava/util/List;` @kind virtual;
  #L384bf2.  v3:= temp @kind object;
  #L384bf4.  call temp:= `a`(v1, v3, v2) @signature `Le/e/d/a/j;.a:(Ljava/util/List;Ljava/lang/String;)Le/e/d/a/k;` @kind virtual;
  #L384bfa.  v3:= temp @kind object;
  #L384bfc.  if v3 != 0 then goto L384c02;
  #L384c00.  goto L384c0a;
  #L384c02.  call temp:= `a`(v1, v2, v3, v4, v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/k;Le/e/d/a/j$b;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind direct;
  #L384c08.  v2:= temp @kind object;
  #L384c0a.  return v2 @kind object;
}
procedure `java.lang.StringBuilder` `a`(`java.lang.CharSequence` v5 @kind object, `boolean` v6 ) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Z)Ljava/lang/StringBuilder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3850a0.  v0:= new `java.lang.StringBuilder`;
  #L3850a4.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3850aa.  v1:= temp;
  #L3850ac.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3850b2.  v1:= 0I;
  #L3850b4.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3850ba.  v2:= temp;
  #L3850bc.  if v1 >= v2 then goto L3850f2;
  #L3850c0.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3850c6.  v2:= temp;
  #L3850c8.  v3:= 10I;
  #L3850cc.  call temp:= `digit`(v2, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3850d2.  v3:= temp;
  #L3850d4.  v4:= -1I;
  #L3850d6.  if v3 == v4 then goto L3850e2;
  #L3850da.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3850e0.  goto L3850ec;
  #L3850e2.  if v6 == 0 then goto L3850ec;
  #L3850e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3850ec.  v1:= v1 + 1;
  #L3850f0.  goto L3850b4;
  #L3850f2.  return v0 @kind object;
}
procedure `void` `a`(`e.e.d.a.j` v3 @kind this, `int` v4 , `e.e.d.a.j$b` v5 @kind object, `java.lang.StringBuilder` v6 @kind object) @signature `Le/e/d/a/j;.a:(ILe/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L385f3c.  v0:= `@@e.e.d.a.j$a.b` @type ^`int`[] @kind object;
  #L385f40.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L385f46.  v5:= temp;
  #L385f48.  v5:= v0[v5];
  #L385f4c.  v0:= 1I;
  #L385f4e.  v1:= 43I;
  #L385f52.  v2:= 0I;
  #L385f54.  if v5 == v0 then goto L385faa;
  #L385f58.  v0:= 2I;
  #L385f5a.  if v5 == v0 then goto L385f8e;
  #L385f5e.  v0:= 3I;
  #L385f60.  if v5 == v0 then goto L385f66;
  #L385f64.  return @kind void;
  #L385f66.  v5:= "-" @kind object;
  #L385f6a.  call temp:= `insert`(v6, v2, v5) @signature `Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385f70.  v5:= temp @kind object;
  #L385f72.  call temp:= `insert`(v5, v2, v4) @signature `Ljava/lang/StringBuilder;.insert:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L385f78.  v4:= temp @kind object;
  #L385f7a.  call temp:= `insert`(v4, v2, v1) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L385f80.  v4:= temp @kind object;
  #L385f82.  v5:= "tel:" @kind object;
  #L385f86.  call temp:= `insert`(v4, v2, v5) @signature `Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385f8c.  return @kind void;
  #L385f8e.  v5:= " " @kind object;
  #L385f92.  call temp:= `insert`(v6, v2, v5) @signature `Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385f98.  v5:= temp @kind object;
  #L385f9a.  call temp:= `insert`(v5, v2, v4) @signature `Ljava/lang/StringBuilder;.insert:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L385fa0.  v4:= temp @kind object;
  #L385fa2.  call temp:= `insert`(v4, v2, v1) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L385fa8.  return @kind void;
  #L385faa.  call temp:= `insert`(v6, v2, v4) @signature `Ljava/lang/StringBuilder;.insert:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L385fb0.  v4:= temp @kind object;
  #L385fb2.  call temp:= `insert`(v4, v2, v1) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L385fb8.  return @kind void;
}
procedure `void` `a`(`e.e.d.a.j` v1 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/j;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L385fcc.  v0:= constclass @type ^`e.e.d.a.j` @kind object;
  #L385fd0.  @monitorenter v0
  #L385fd2.  `@@e.e.d.a.j.z` @type ^`e.e.d.a.j` := v1 @kind object;
  #L385fd6.  @monitorexit v0
  #L385fd8.  return @kind void;
  #L385fda.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L385fdc.  @monitorexit v0
  #L385fde.  throw v1;
  catch `java.lang.Throwable` @[L385fd2..L385fd6] goto L385fda;
}
procedure `void` `a`(`e.e.d.a.j` v1 @kind this, `e.e.d.a.o` v2 @kind object, `e.e.d.a.l` v3 @kind object, `e.e.d.a.j$b` v4 @kind object, `java.lang.StringBuilder` v5 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/l;Le/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L385c00.  call temp:= `j`(v2) @signature `Le/e/d/a/o;.j:()Z` @kind virtual;
  #L385c06.  v0:= temp;
  #L385c08.  if v0 == 0 then goto L385c5e;
  #L385c0c.  call temp:= `d`(v2) @signature `Le/e/d/a/o;.d:()Ljava/lang/String;` @kind virtual;
  #L385c12.  v0:= temp @kind object;
  #L385c14.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L385c1a.  v0:= temp;
  #L385c1c.  if v0 <= 0 then goto L385c5e;
  #L385c20.  v0:= `@@e.e.d.a.j$b.e` @type ^`e.e.d.a.j$b` @kind object;
  #L385c24.  if v4 != v0 then goto L385c42;
  #L385c28.  v3:= ";ext=" @kind object;
  #L385c2c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385c32.  call temp:= `d`(v2) @signature `Le/e/d/a/o;.d:()Ljava/lang/String;` @kind virtual;
  #L385c38.  v2:= temp @kind object;
  #L385c3a.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385c40.  goto L385c5e;
  #L385c42.  call temp:= `y`(v3) @signature `Le/e/d/a/l;.y:()Z` @kind virtual;
  #L385c48.  v4:= temp;
  #L385c4a.  if v4 == 0 then goto L385c58;
  #L385c4e.  call temp:= `o`(v3) @signature `Le/e/d/a/l;.o:()Ljava/lang/String;` @kind virtual;
  #L385c54.  v3:= temp @kind object;
  #L385c56.  goto L385c2c;
  #L385c58.  v3:= " ext. " @kind object;
  #L385c5c.  goto L385c2c;
  #L385c5e.  return @kind void;
}
procedure `void` `a`(`java.lang.CharSequence` v4 @kind object, `e.e.d.a.o` v5 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/o;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385ffc.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L386002.  v0:= temp;
  #L386004.  v1:= 1I;
  #L386006.  if v0 <= v1 then goto L38604e;
  #L38600a.  v0:= 0I;
  #L38600c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L386012.  v0:= temp;
  #L386014.  v2:= 48I;
  #L386018.  if v0 != v2 then goto L38604e;
  #L38601c.  call temp:= `a`(v5, v1) @signature `Le/e/d/a/o;.a:(Z)Le/e/d/a/o;` @kind virtual;
  #L386022.  v0:= 1I;
  #L386024.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L38602a.  v3:= temp;
  #L38602c.  v3:= v3 - v1 @kind int;
  #L38602e.  if v0 >= v3 then goto L386044;
  #L386032.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L386038.  v3:= temp;
  #L38603a.  if v3 != v2 then goto L386044;
  #L38603e.  v0:= v0 + 1;
  #L386042.  goto L386024;
  #L386044.  if v0 == v1 then goto L38604e;
  #L386048.  call temp:= `b`(v5, v0) @signature `Le/e/d/a/o;.b:(I)Le/e/d/a/o;` @kind virtual;
  #L38604e.  return @kind void;
}
procedure `void` `a`(`e.e.d.a.j` v8 @kind this, `java.lang.CharSequence` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `e.e.d.a.o` v13 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;ZZLe/e/d/a/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L385c94.  if v9 == 0 then goto L385f08;
  #L385c98.  call temp:= `length`(v9) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L385c9e.  v0:= temp;
  #L385ca0.  v1:= 250I;
  #L385ca4.  if v0 > v1 then goto L385ef4;
  #L385ca8.  v0:= new `java.lang.StringBuilder`;
  #L385cac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385cb2.  call temp:= `toString`(v9) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L385cb8.  v9:= temp @kind object;
  #L385cba.  call `a`(v8, v9, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Ljava/lang/StringBuilder;)V` @kind direct;
  #L385cc0.  call temp:= `b`(v0) @signature `Le/e/d/a/j;.b:(Ljava/lang/CharSequence;)Z` @kind static;
  #L385cc6.  v1:= temp;
  #L385cc8.  if v1 == 0 then goto L385ee0;
  #L385ccc.  if v12 == 0 then goto L385cf2;
  #L385cd0.  call temp:= `b`(v8, v0, v10) @signature `Le/e/d/a/j;.b:(Ljava/lang/CharSequence;Ljava/lang/String;)Z` @kind direct;
  #L385cd6.  v12:= temp;
  #L385cd8.  if v12 == 0 then goto L385cde;
  #L385cdc.  goto L385cf2;
  #L385cde.  v9:= new `e.e.d.a.h`;
  #L385ce2.  v10:= `@@e.e.d.a.h$a.b` @type ^`e.e.d.a.h$a` @kind object;
  #L385ce6.  v11:= "Missing or invalid default region." @kind object;
  #L385cea.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385cf0.  throw v9;
  #L385cf2.  if v11 == 0 then goto L385cfc;
  #L385cf6.  call temp:= `c`(v13, v9) @signature `Le/e/d/a/o;.c:(Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L385cfc.  call temp:= `a`(v8, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind virtual;
  #L385d02.  v9:= temp @kind object;
  #L385d04.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L385d0a.  v12:= temp;
  #L385d0c.  if v12 <= 0 then goto L385d16;
  #L385d10.  call temp:= `a`(v13, v9) @signature `Le/e/d/a/o;.a:(Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L385d16.  call temp:= `c`(v8, v10) @signature `Le/e/d/a/j;.c:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L385d1c.  v9:= temp @kind object;
  #L385d1e.  v12:= new `java.lang.StringBuilder`;
  #L385d22.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385d28.  v2:= v8 @kind object;
  #L385d2a.  v3:= v0 @kind object;
  #L385d2c.  v4:= v9 @kind object;
  #L385d2e.  v5:= v12 @kind object;
  #L385d30.  v6:= v11;
  #L385d32.  v7:= v13 @kind object;
  #L385d34.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Ljava/lang/StringBuilder;ZLe/e/d/a/o;)I` @kind virtual;
  #L385d3a.  v1:= temp;
  #L385d3c.  goto L385d8e;
  #L385d3e.  v1:= Exception @type ^`e.e.d.a.h` @kind object;
  #L385d40.  v2:= `@@e.e.d.a.j.m` @type ^`java.util.regex.Pattern` @kind object;
  #L385d44.  call temp:= `matcher`(v2, v0) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L385d4a.  v2:= temp @kind object;
  #L385d4c.  call temp:= `a`(v1) @signature `Le/e/d/a/h;.a:()Le/e/d/a/h$a;` @kind virtual;
  #L385d52.  v3:= temp @kind object;
  #L385d54.  v4:= `@@e.e.d.a.h$a.b` @type ^`e.e.d.a.h$a` @kind object;
  #L385d58.  if v3 != v4 then goto L385ec4;
  #L385d5c.  call temp:= `lookingAt`(v2) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L385d62.  v3:= temp;
  #L385d64.  if v3 == 0 then goto L385ec4;
  #L385d68.  call temp:= `end`(v2) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L385d6e.  v1:= temp;
  #L385d70.  call temp:= `substring`(v0, v1) @signature `Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L385d76.  v2:= temp @kind object;
  #L385d78.  v1:= v8 @kind object;
  #L385d7a.  v3:= v9 @kind object;
  #L385d7c.  v4:= v12 @kind object;
  #L385d7e.  v5:= v11;
  #L385d80.  v6:= v13 @kind object;
  #L385d82.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Ljava/lang/StringBuilder;ZLe/e/d/a/o;)I` @kind virtual;
  #L385d88.  v1:= temp;
  #L385d8a.  if v1 == 0 then goto L385eb0;
  #L385d8e.  if v1 == 0 then goto L385db0;
  #L385d92.  call temp:= `b`(v8, v1) @signature `Le/e/d/a/j;.b:(I)Ljava/lang/String;` @kind virtual;
  #L385d98.  v0:= temp @kind object;
  #L385d9a.  call temp:= `equals`(v0, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L385da0.  v10:= temp;
  #L385da2.  if v10 != 0 then goto L385dda;
  #L385da6.  call temp:= `a`(v8, v1, v0) @signature `Le/e/d/a/j;.a:(ILjava/lang/String;)Le/e/d/a/l;` @kind direct;
  #L385dac.  v9:= temp @kind object;
  #L385dae.  goto L385dda;
  #L385db0.  call temp:= `b`(v0) @signature `Le/e/d/a/j;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L385db6.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385dbc.  if v10 == 0 then goto L385dd0;
  #L385dc0.  call temp:= `a`(v9) @signature `Le/e/d/a/l;.a:()I` @kind virtual;
  #L385dc6.  v10:= temp;
  #L385dc8.  call temp:= `a`(v13, v10) @signature `Le/e/d/a/o;.a:(I)Le/e/d/a/o;` @kind virtual;
  #L385dce.  goto L385dda;
  #L385dd0.  if v11 == 0 then goto L385dda;
  #L385dd4.  call temp:= `a`(v13) @signature `Le/e/d/a/o;.a:()Le/e/d/a/o;` @kind virtual;
  #L385dda.  call temp:= `length`(v12) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L385de0.  v10:= temp;
  #L385de2.  v0:= "The string supplied is too short to be a phone number." @kind object;
  #L385de6.  v1:= 2I;
  #L385de8.  if v10 < v1 then goto L385ea0;
  #L385dec.  if v9 == 0 then goto L385e4a;
  #L385df0.  v10:= new `java.lang.StringBuilder`;
  #L385df4.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385dfa.  v2:= new `java.lang.StringBuilder`;
  #L385dfe.  call `<init>`(v2, v12) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L385e04.  call temp:= `a`(v8, v2, v9, v10) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Le/e/d/a/l;Ljava/lang/StringBuilder;)Z` @kind virtual;
  #L385e0a.  call temp:= `a`(v8, v2, v9) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;)Le/e/d/a/j$d;` @kind direct;
  #L385e10.  v9:= temp @kind object;
  #L385e12.  v3:= `@@e.e.d.a.j$d.e` @type ^`e.e.d.a.j$d` @kind object;
  #L385e16.  if v9 == v3 then goto L385e4a;
  #L385e1a.  v3:= `@@e.e.d.a.j$d.c` @type ^`e.e.d.a.j$d` @kind object;
  #L385e1e.  if v9 == v3 then goto L385e4a;
  #L385e22.  v3:= `@@e.e.d.a.j$d.f` @type ^`e.e.d.a.j$d` @kind object;
  #L385e26.  if v9 == v3 then goto L385e4a;
  #L385e2a.  if v11 == 0 then goto L385e48;
  #L385e2e.  call temp:= `length`(v10) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L385e34.  v9:= temp;
  #L385e36.  if v9 <= 0 then goto L385e48;
  #L385e3a.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L385e40.  v9:= temp @kind object;
  #L385e42.  call temp:= `b`(v13, v9) @signature `Le/e/d/a/o;.b:(Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L385e48.  v12:= v2 @kind object;
  #L385e4a.  call temp:= `length`(v12) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L385e50.  v9:= temp;
  #L385e52.  if v9 < v1 then goto L385e90;
  #L385e56.  v10:= 17I;
  #L385e5a.  if v9 > v10 then goto L385e7c;
  #L385e5e.  call `a`(v12, v13) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/o;)V` @kind static;
  #L385e64.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L385e6a.  v9:= temp @kind object;
  #L385e6c.  call temp:= `parseLong`(v9) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L385e72.  v9:= temp @kind wide;
  #L385e74.  call temp:= `a`(v13, v9) @signature `Le/e/d/a/o;.a:(J)Le/e/d/a/o;` @kind virtual;
  #L385e7a.  return @kind void;
  #L385e7c.  v9:= new `e.e.d.a.h`;
  #L385e80.  v10:= `@@e.e.d.a.h$a.f` @type ^`e.e.d.a.h$a` @kind object;
  #L385e84.  v11:= "The string supplied is too long to be a phone number." @kind object;
  #L385e88.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385e8e.  throw v9;
  #L385e90.  v9:= new `e.e.d.a.h`;
  #L385e94.  v10:= `@@e.e.d.a.h$a.e` @type ^`e.e.d.a.h$a` @kind object;
  #L385e98.  call `<init>`(v9, v10, v0) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385e9e.  throw v9;
  #L385ea0.  v9:= new `e.e.d.a.h`;
  #L385ea4.  v10:= `@@e.e.d.a.h$a.e` @type ^`e.e.d.a.h$a` @kind object;
  #L385ea8.  call `<init>`(v9, v10, v0) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385eae.  throw v9;
  #L385eb0.  v9:= new `e.e.d.a.h`;
  #L385eb4.  v10:= `@@e.e.d.a.h$a.b` @type ^`e.e.d.a.h$a` @kind object;
  #L385eb8.  v11:= "Could not interpret numbers after plus-sign." @kind object;
  #L385ebc.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385ec2.  throw v9;
  #L385ec4.  v9:= new `e.e.d.a.h`;
  #L385ec8.  call temp:= `a`(v1) @signature `Le/e/d/a/h;.a:()Le/e/d/a/h$a;` @kind virtual;
  #L385ece.  v10:= temp @kind object;
  #L385ed0.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L385ed6.  v11:= temp @kind object;
  #L385ed8.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385ede.  throw v9;
  #L385ee0.  v9:= new `e.e.d.a.h`;
  #L385ee4.  v10:= `@@e.e.d.a.h$a.c` @type ^`e.e.d.a.h$a` @kind object;
  #L385ee8.  v11:= "The string supplied did not seem to be a phone number." @kind object;
  #L385eec.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385ef2.  throw v9;
  #L385ef4.  v9:= new `e.e.d.a.h`;
  #L385ef8.  v10:= `@@e.e.d.a.h$a.f` @type ^`e.e.d.a.h$a` @kind object;
  #L385efc.  v11:= "The string supplied was too long to parse." @kind object;
  #L385f00.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385f06.  throw v9;
  #L385f08.  v9:= new `e.e.d.a.h`;
  #L385f0c.  v10:= `@@e.e.d.a.h$a.c` @type ^`e.e.d.a.h$a` @kind object;
  #L385f10.  v11:= "The phone number supplied was null." @kind object;
  #L385f14.  call `<init>`(v9, v10, v11) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L385f1a.  throw v9;
  catch `e.e.d.a.h` @[L385d34..L385d3c] goto L385d3e;
}
procedure `void` `a`(`e.e.d.a.j` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.StringBuilder` v6 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385ab8.  v0:= ";phone-context=" @kind object;
  #L385abc.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L385ac2.  v0:= temp;
  #L385ac4.  if v0 < 0 then goto L385b3c;
  #L385ac8.  v1:= v0 + 15;
  #L385acc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L385ad2.  v2:= temp;
  #L385ad4.  v2:= v2 + -1;
  #L385ad8.  if v1 >= v2 then goto L385b14;
  #L385adc.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L385ae2.  v2:= temp;
  #L385ae4.  v3:= 43I;
  #L385ae8.  if v2 != v3 then goto L385b14;
  #L385aec.  v2:= 59I;
  #L385af0.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L385af6.  v2:= temp;
  #L385af8.  if v2 <= 0 then goto L385b06;
  #L385afc.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L385b02.  v1:= temp @kind object;
  #L385b04.  goto L385b0e;
  #L385b06.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L385b0c.  v1:= temp @kind object;
  #L385b0e.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385b14.  v1:= "tel:" @kind object;
  #L385b18.  call temp:= `indexOf`(v5, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L385b1e.  v1:= temp;
  #L385b20.  if v1 < 0 then goto L385b2a;
  #L385b24.  v1:= v1 + 4;
  #L385b28.  goto L385b2c;
  #L385b2a.  v1:= 0I;
  #L385b2c.  call temp:= `substring`(v5, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L385b32.  v5:= temp @kind object;
  #L385b34.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385b3a.  goto L385b4a;
  #L385b3c.  call temp:= `a`(v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L385b42.  v5:= temp @kind object;
  #L385b44.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385b4a.  v5:= ";isub=" @kind object;
  #L385b4e.  call temp:= `indexOf`(v6, v5) @signature `Ljava/lang/StringBuilder;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L385b54.  v5:= temp;
  #L385b56.  if v5 <= 0 then goto L385b68;
  #L385b5a.  call temp:= `length`(v6) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L385b60.  v0:= temp;
  #L385b62.  call temp:= `delete`(v6, v5, v0) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L385b68.  return @kind void;
}
procedure `boolean` `a`(`e.e.d.a.n` v3 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/n;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L383cec.  call temp:= `b`(v3) @signature `Le/e/d/a/n;.b:()I` @kind virtual;
  #L383cf2.  v0:= temp;
  #L383cf4.  v1:= 0I;
  #L383cf6.  v2:= 1I;
  #L383cf8.  if v0 != v2 then goto L383d0a;
  #L383cfc.  call temp:= `a`(v3, v1) @signature `Le/e/d/a/n;.a:(I)I` @kind virtual;
  #L383d02.  v3:= temp;
  #L383d04.  v0:= -1I;
  #L383d06.  if v3 == v0 then goto L383d0c;
  #L383d0a.  v1:= 1I;
  #L383d0c.  return v1;
}
procedure `boolean` `a`(`e.e.d.a.j` v4 @kind this, `java.util.regex.Pattern` v5 @kind object, `java.lang.StringBuilder` v6 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/util/regex/Pattern;Ljava/lang/StringBuilder;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38401c.  call temp:= `matcher`(v5, v6) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384022.  v5:= temp @kind object;
  #L384024.  call temp:= `lookingAt`(v5) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L38402a.  v0:= temp;
  #L38402c.  v1:= 0I;
  #L38402e.  if v0 == 0 then goto L384086;
  #L384032.  call temp:= `end`(v5) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L384038.  v5:= temp;
  #L38403a.  v0:= `@@e.e.d.a.j.o` @type ^`java.util.regex.Pattern` @kind object;
  #L38403e.  call temp:= `substring`(v6, v5) @signature `Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L384044.  v2:= temp @kind object;
  #L384046.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L38404c.  v0:= temp @kind object;
  #L38404e.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L384054.  v2:= temp;
  #L384056.  v3:= 1I;
  #L384058.  if v2 == 0 then goto L38407e;
  #L38405c.  call temp:= `group`(v0, v3) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L384062.  v0:= temp @kind object;
  #L384064.  call temp:= `d`(v0) @signature `Le/e/d/a/j;.d:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L38406a.  v0:= temp @kind object;
  #L38406c.  v2:= "0" @kind object;
  #L384070.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L384076.  v0:= temp;
  #L384078.  if v0 == 0 then goto L38407e;
  #L38407c.  return v1;
  #L38407e.  call temp:= `delete`(v6, v1, v5) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L384084.  return v3;
  #L384086.  return v1;
}
procedure `java.lang.StringBuilder` `b`(`java.lang.StringBuilder` v4 @kind object) @signature `Le/e/d/a/j;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385044.  v0:= `@@e.e.d.a.j.s` @type ^`java.util.regex.Pattern` @kind object;
  #L385048.  call temp:= `matcher`(v0, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L38504e.  v0:= temp @kind object;
  #L385050.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L385056.  v0:= temp;
  #L385058.  v1:= 0I;
  #L38505a.  if v0 == 0 then goto L385076;
  #L38505e.  call temp:= `length`(v4) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L385064.  v0:= temp;
  #L385066.  v2:= `@@e.e.d.a.j.k` @type ^`java.util.Map` @kind object;
  #L38506a.  v3:= 1I;
  #L38506c.  call temp:= `a`(v4, v2, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Ljava/lang/String;` @kind static;
  #L385072.  v2:= temp @kind object;
  #L385074.  goto L385086;
  #L385076.  call temp:= `length`(v4) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L38507c.  v0:= temp;
  #L38507e.  call temp:= `d`(v4) @signature `Le/e/d/a/j;.d:(Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L385084.  v2:= temp @kind object;
  #L385086.  call temp:= `replace`(v4, v1, v0, v2) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38508c.  return v4 @kind object;
}
procedure `boolean` `b`(`java.lang.CharSequence` v2 @kind object) @signature `Le/e/d/a/j;.b:(Ljava/lang/CharSequence;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L383e8c.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L383e92.  v0:= temp;
  #L383e94.  v1:= 2I;
  #L383e96.  if v0 >= v1 then goto L383e9e;
  #L383e9a.  v2:= 0I;
  #L383e9c.  return v2;
  #L383e9e.  v0:= `@@e.e.d.a.j.w` @type ^`java.util.regex.Pattern` @kind object;
  #L383ea2.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L383ea8.  v2:= temp @kind object;
  #L383eaa.  call temp:= `matches`(v2) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L383eb0.  v2:= temp;
  #L383eb2.  return v2;
}
procedure `boolean` `b`(`e.e.d.a.j` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/j;.b:(Ljava/lang/CharSequence;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L383ca0.  call temp:= `g`(v0, v2) @signature `Le/e/d/a/j;.g:(Ljava/lang/String;)Z` @kind direct;
  #L383ca6.  v2:= temp;
  #L383ca8.  if v2 != 0 then goto L383cd8;
  #L383cac.  if v1 == 0 then goto L383cd4;
  #L383cb0.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L383cb6.  v2:= temp;
  #L383cb8.  if v2 == 0 then goto L383cd4;
  #L383cbc.  v2:= `@@e.e.d.a.j.m` @type ^`java.util.regex.Pattern` @kind object;
  #L383cc0.  call temp:= `matcher`(v2, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L383cc6.  v1:= temp @kind object;
  #L383cc8.  call temp:= `lookingAt`(v1) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L383cce.  v1:= temp;
  #L383cd0.  if v1 != 0 then goto L383cd8;
  #L383cd4.  v1:= 0I;
  #L383cd6.  return v1;
  #L383cd8.  v1:= 1I;
  #L383cda.  return v1;
}
procedure `java.lang.String` `c`(`java.lang.CharSequence` v2 @kind object) @signature `Le/e/d/a/j;.c:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L384f84.  v0:= `@@e.e.d.a.j.i` @type ^`java.util.Map` @kind object;
  #L384f88.  v1:= 1I;
  #L384f8a.  call temp:= `a`(v2, v0, v1) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/util/Map;Z)Ljava/lang/String;` @kind static;
  #L384f90.  v2:= temp @kind object;
  #L384f92.  return v2 @kind object;
}
procedure `boolean` `c`(`e.e.d.a.j` v1 @kind this, `int` v2 ) @signature `Le/e/d/a/j;.c:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L383d60.  v0:= v1.`e.e.d.a.j.b` @type ^`java.util.Map` @kind object;
  #L383d64.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L383d6a.  v2:= temp @kind object;
  #L383d6c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L383d72.  v2:= temp;
  #L383d74.  return v2;
}
procedure `java.lang.String` `d`(`java.lang.CharSequence` v1 @kind object) @signature `Le/e/d/a/j;.d:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L384fa4.  v0:= 0I;
  #L384fa6.  call temp:= `a`(v1, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Z)Ljava/lang/StringBuilder;` @kind static;
  #L384fac.  v1:= temp @kind object;
  #L384fae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384fb4.  v1:= temp @kind object;
  #L384fb6.  return v1 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String` v2 @kind object) @signature `Le/e/d/a/j;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L384adc.  v0:= new `java.lang.StringBuilder`;
  #L384ae0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384ae6.  v1:= ";ext=(\\p{Nd}{1,7})|[  \\t,]*(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|[" @kind object;
  #L384aea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384af0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384af6.  v2:= "]|int|anexo|ｉｎｔ)[:\\.．]?[  \\t,-]*" @kind object;
  #L384afa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384b00.  v2:= "(\\p{Nd}{1,7})" @kind object;
  #L384b04.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384b0a.  v2:= "#?|[- ]+(" @kind object;
  #L384b0e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384b14.  v2:= "\\p{Nd}" @kind object;
  #L384b18.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384b1e.  v2:= "{1,5})#" @kind object;
  #L384b22.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384b28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384b2e.  v2:= temp @kind object;
  #L384b30.  return v2 @kind object;
}
procedure `boolean` `e`(`java.lang.String` v1 @kind object) @signature `Le/e/d/a/j;.e:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L383d20.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L383d26.  v0:= temp;
  #L383d28.  if v0 == 0 then goto L383d4a;
  #L383d2c.  v0:= `@@e.e.d.a.j.y` @type ^`java.util.regex.Pattern` @kind object;
  #L383d30.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L383d36.  v1:= temp @kind object;
  #L383d38.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L383d3e.  v1:= temp;
  #L383d40.  if v1 == 0 then goto L383d46;
  #L383d44.  goto L383d4a;
  #L383d46.  v1:= 0I;
  #L383d48.  goto L383d4c;
  #L383d4a.  v1:= 1I;
  #L383d4c.  return v1;
}
procedure `int` `f`(`e.e.d.a.j` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Le/e/d/a/j;.f:(Ljava/lang/String;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3848a4.  call temp:= `c`(v3, v4) @signature `Le/e/d/a/j;.c:(Ljava/lang/String;)Le/e/d/a/l;` @kind virtual;
  #L3848aa.  v0:= temp @kind object;
  #L3848ac.  if v0 == 0 then goto L3848ba;
  #L3848b0.  call temp:= `a`(v0) @signature `Le/e/d/a/l;.a:()I` @kind virtual;
  #L3848b6.  v4:= temp;
  #L3848b8.  return v4;
  #L3848ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L3848be.  v1:= new `java.lang.StringBuilder`;
  #L3848c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3848c8.  v2:= "Invalid region code: " @kind object;
  #L3848cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848d2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848d8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3848de.  v4:= temp @kind object;
  #L3848e0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3848e6.  throw v0;
}
procedure `boolean` `g`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/j;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L383e60.  if v2 == 0 then goto L383e78;
  #L383e64.  v0:= v1.`e.e.d.a.j.f` @type ^`java.util.Set` @kind object;
  #L383e68.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L383e6e.  v2:= temp;
  #L383e70.  if v2 == 0 then goto L383e78;
  #L383e74.  v2:= 1I;
  #L383e76.  goto L383e7a;
  #L383e78.  v2:= 0I;
  #L383e7a.  return v2;
}
procedure `int` `a`(`e.e.d.a.j` v5 @kind this, `java.lang.CharSequence` v6 @kind object, `e.e.d.a.l` v7 @kind object, `java.lang.StringBuilder` v8 @kind object, `boolean` v9 , `e.e.d.a.o` v10 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;Ljava/lang/StringBuilder;ZLe/e/d/a/o;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3848f8.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3848fe.  v0:= temp;
  #L384900.  v1:= 0I;
  #L384902.  if v0 != 0 then goto L384908;
  #L384906.  return v1;
  #L384908.  v0:= new `java.lang.StringBuilder`;
  #L38490c.  call `<init>`(v0, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L384912.  if v7 == 0 then goto L384920;
  #L384916.  call temp:= `d`(v7) @signature `Le/e/d/a/l;.d:()Ljava/lang/String;` @kind virtual;
  #L38491c.  v6:= temp @kind object;
  #L38491e.  goto L384924;
  #L384920.  v6:= "NonMatch" @kind object;
  #L384924.  call temp:= `a`(v5, v0, v6) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Ljava/lang/String;)Le/e/d/a/o$a;` @kind virtual;
  #L38492a.  v6:= temp @kind object;
  #L38492c.  if v9 == 0 then goto L384936;
  #L384930.  call temp:= `a`(v10, v6) @signature `Le/e/d/a/o;.a:(Le/e/d/a/o$a;)Le/e/d/a/o;` @kind virtual;
  #L384936.  v2:= `@@e.e.d.a.o$a.e` @type ^`e.e.d.a.o$a` @kind object;
  #L38493a.  if v6 == v2 then goto L384988;
  #L38493e.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L384944.  v6:= temp;
  #L384946.  v7:= 2I;
  #L384948.  if v6 <= v7 then goto L384974;
  #L38494c.  call temp:= `a`(v5, v0, v8) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)I` @kind virtual;
  #L384952.  v6:= temp;
  #L384954.  if v6 == 0 then goto L384960;
  #L384958.  call temp:= `a`(v10, v6) @signature `Le/e/d/a/o;.a:(I)Le/e/d/a/o;` @kind virtual;
  #L38495e.  return v6;
  #L384960.  v6:= new `e.e.d.a.h`;
  #L384964.  v7:= `@@e.e.d.a.h$a.b` @type ^`e.e.d.a.h$a` @kind object;
  #L384968.  v8:= "Country calling code supplied was not recognised." @kind object;
  #L38496c.  call `<init>`(v6, v7, v8) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L384972.  throw v6;
  #L384974.  v6:= new `e.e.d.a.h`;
  #L384978.  v7:= `@@e.e.d.a.h$a.d` @type ^`e.e.d.a.h$a` @kind object;
  #L38497c.  v8:= "Phone number had an IDD, but after this was not long enough to be a viable phone number." @kind object;
  #L384980.  call `<init>`(v6, v7, v8) @signature `Le/e/d/a/h;.<init>:(Le/e/d/a/h$a;Ljava/lang/String;)V` @kind direct;
  #L384986.  throw v6;
  #L384988.  if v7 == 0 then goto L384a26;
  #L38498c.  call temp:= `a`(v7) @signature `Le/e/d/a/l;.a:()I` @kind virtual;
  #L384992.  v6:= temp;
  #L384994.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L38499a.  v2:= temp @kind object;
  #L38499c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3849a2.  v3:= temp @kind object;
  #L3849a4.  call temp:= `startsWith`(v3, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3849aa.  v4:= temp;
  #L3849ac.  if v4 == 0 then goto L384a26;
  #L3849b0.  v4:= new `java.lang.StringBuilder`;
  #L3849b4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3849ba.  v2:= temp;
  #L3849bc.  call temp:= `substring`(v3, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3849c2.  v2:= temp @kind object;
  #L3849c4.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3849ca.  call temp:= `c`(v7) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L3849d0.  v2:= temp @kind object;
  #L3849d2.  v3:= 0I;
  #L3849d4.  call temp:= `a`(v5, v4, v7, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Le/e/d/a/l;Ljava/lang/StringBuilder;)Z` @kind virtual;
  #L3849da.  v3:= v5.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L3849de.  call temp:= `a`(v3, v0, v2, v1) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L3849e4.  v3:= temp;
  #L3849e6.  if v3 != 0 then goto L3849fa;
  #L3849ea.  v3:= v5.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L3849ee.  call temp:= `a`(v3, v4, v2, v1) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L3849f4.  v2:= temp;
  #L3849f6.  if v2 != 0 then goto L384a0a;
  #L3849fa.  call temp:= `a`(v5, v0, v7) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Le/e/d/a/l;)Le/e/d/a/j$d;` @kind direct;
  #L384a00.  v7:= temp @kind object;
  #L384a02.  v0:= `@@e.e.d.a.j$d.g` @type ^`e.e.d.a.j$d` @kind object;
  #L384a06.  if v7 != v0 then goto L384a26;
  #L384a0a.  call temp:= `append`(v8, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384a10.  if v9 == 0 then goto L384a1e;
  #L384a14.  v7:= `@@e.e.d.a.o$a.d` @type ^`e.e.d.a.o$a` @kind object;
  #L384a18.  call temp:= `a`(v10, v7) @signature `Le/e/d/a/o;.a:(Le/e/d/a/o$a;)Le/e/d/a/o;` @kind virtual;
  #L384a1e.  call temp:= `a`(v10, v6) @signature `Le/e/d/a/o;.a:(I)Le/e/d/a/o;` @kind virtual;
  #L384a24.  return v6;
  #L384a26.  call temp:= `a`(v10, v1) @signature `Le/e/d/a/o;.a:(I)Le/e/d/a/o;` @kind virtual;
  #L384a2c.  return v1;
}
procedure `int` `a`(`e.e.d.a.j` v6 @kind this, `java.lang.StringBuilder` v7 @kind object, `java.lang.StringBuilder` v8 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3847b4.  call temp:= `length`(v7) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3847ba.  v0:= temp;
  #L3847bc.  v1:= 0I;
  #L3847be.  if v0 == 0 then goto L384826;
  #L3847c2.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3847c8.  v0:= temp;
  #L3847ca.  v2:= 48I;
  #L3847ce.  if v0 != v2 then goto L3847d4;
  #L3847d2.  goto L384826;
  #L3847d4.  call temp:= `length`(v7) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3847da.  v0:= temp;
  #L3847dc.  v2:= 1I;
  #L3847de.  v3:= 3I;
  #L3847e0.  if v2 > v3 then goto L384826;
  #L3847e4.  if v2 > v0 then goto L384826;
  #L3847e8.  call temp:= `substring`(v7, v1, v2) @signature `Ljava/lang/StringBuilder;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3847ee.  v3:= temp @kind object;
  #L3847f0.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3847f6.  v3:= temp;
  #L3847f8.  v4:= v6.`e.e.d.a.j.b` @type ^`java.util.Map` @kind object;
  #L3847fc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L384802.  v5:= temp @kind object;
  #L384804.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L38480a.  v4:= temp;
  #L38480c.  if v4 == 0 then goto L384820;
  #L384810.  call temp:= `substring`(v7, v2) @signature `Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L384816.  v7:= temp @kind object;
  #L384818.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38481e.  return v3;
  #L384820.  v2:= v2 + 1;
  #L384824.  goto L3847de;
  #L384826.  return v1;
}
procedure `e.e.d.a.b` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;)Le/e/d/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L384098.  v0:= new `e.e.d.a.b`;
  #L38409c.  call `<init>`(v0, v2) @signature `Le/e/d/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3840a2.  return v0 @kind object;
}
procedure `e.e.d.a.k` `a`(`e.e.d.a.j` v3 @kind this, `java.util.List` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/util/List;Ljava/lang/String;)Le/e/d/a/k;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L384510.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L384516.  v4:= temp @kind object;
  #L384518.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38451e.  v0:= temp;
  #L384520.  if v0 == 0 then goto L384592;
  #L384524.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38452a.  v0:= temp @kind object;
  #L38452c.  v0:= (`e.e.d.a.k`) v0 @kind object;
  #L384530.  call temp:= `c`(v0) @signature `Le/e/d/a/k;.c:()I` @kind virtual;
  #L384536.  v1:= temp;
  #L384538.  if v1 == 0 then goto L384568;
  #L38453c.  v2:= v3.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L384540.  v1:= v1 + -1;
  #L384544.  call temp:= `a`(v0, v1) @signature `Le/e/d/a/k;.a:(I)Ljava/lang/String;` @kind virtual;
  #L38454a.  v1:= temp @kind object;
  #L38454c.  call temp:= `a`(v2, v1) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L384552.  v1:= temp @kind object;
  #L384554.  call temp:= `matcher`(v1, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L38455a.  v1:= temp @kind object;
  #L38455c.  call temp:= `lookingAt`(v1) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L384562.  v1:= temp;
  #L384564.  if v1 == 0 then goto L384518;
  #L384568.  v1:= v3.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L38456c.  call temp:= `f`(v0) @signature `Le/e/d/a/k;.f:()Ljava/lang/String;` @kind virtual;
  #L384572.  v2:= temp @kind object;
  #L384574.  call temp:= `a`(v1, v2) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L38457a.  v1:= temp @kind object;
  #L38457c.  call temp:= `matcher`(v1, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384582.  v1:= temp @kind object;
  #L384584.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L38458a.  v1:= temp;
  #L38458c.  if v1 == 0 then goto L384518;
  #L384590.  return v0 @kind object;
  #L384592.  v4:= 0I;
  #L384594.  return v4 @kind object;
}
procedure `e.e.d.a.l` `a`(`e.e.d.a.j` v2 @kind this, `int` v3 ) @signature `Le/e/d/a/j;.a:(I)Le/e/d/a/l;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3845a8.  v0:= v2.`e.e.d.a.j.b` @type ^`java.util.Map` @kind object;
  #L3845ac.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3845b2.  v1:= temp @kind object;
  #L3845b4.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3845ba.  v0:= temp;
  #L3845bc.  if v0 != 0 then goto L3845c4;
  #L3845c0.  v3:= 0I;
  #L3845c2.  return v3 @kind object;
  #L3845c4.  v0:= v2.`e.e.d.a.j.a` @type ^`e.e.d.a.f` @kind object;
  #L3845c8.  call temp:= `a`(v0, v3) @signature `Le/e/d/a/f;.a:(I)Le/e/d/a/l;` @kind interface;
  #L3845ce.  v3:= temp @kind object;
  #L3845d0.  return v3 @kind object;
}
procedure `e.e.d.a.n` `a`(`e.e.d.a.j` v1 @kind this, `e.e.d.a.l` v2 @kind object, `e.e.d.a.j$c` v3 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/l;Le/e/d/a/j$c;)Le/e/d/a/n;` @AccessFlag  {
    temp;
    v0;

  #L384648.  v0:= `@@e.e.d.a.j$a.c` @type ^`int`[] @kind object;
  #L38464c.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L384652.  v3:= temp;
  #L384654.  v3:= v0[v3];
  #L384658.  goto L3846cc;
  #L38465e.  call temp:= `c`(v2) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L384664.  v2:= temp @kind object;
  #L384666.  return v2 @kind object;
  #L384668.  call temp:= `u`(v2) @signature `Le/e/d/a/l;.u:()Le/e/d/a/n;` @kind virtual;
  #L38466e.  v2:= temp @kind object;
  #L384670.  return v2 @kind object;
  #L384672.  call temp:= `t`(v2) @signature `Le/e/d/a/l;.t:()Le/e/d/a/n;` @kind virtual;
  #L384678.  v2:= temp @kind object;
  #L38467a.  return v2 @kind object;
  #L38467c.  call temp:= `m`(v2) @signature `Le/e/d/a/l;.m:()Le/e/d/a/n;` @kind virtual;
  #L384682.  v2:= temp @kind object;
  #L384684.  return v2 @kind object;
  #L384686.  call temp:= `n`(v2) @signature `Le/e/d/a/l;.n:()Le/e/d/a/n;` @kind virtual;
  #L38468c.  v2:= temp @kind object;
  #L38468e.  return v2 @kind object;
  #L384690.  call temp:= `v`(v2) @signature `Le/e/d/a/l;.v:()Le/e/d/a/n;` @kind virtual;
  #L384696.  v2:= temp @kind object;
  #L384698.  return v2 @kind object;
  #L38469a.  call temp:= `r`(v2) @signature `Le/e/d/a/l;.r:()Le/e/d/a/n;` @kind virtual;
  #L3846a0.  v2:= temp @kind object;
  #L3846a2.  return v2 @kind object;
  #L3846a4.  call temp:= `b`(v2) @signature `Le/e/d/a/l;.b:()Le/e/d/a/n;` @kind virtual;
  #L3846aa.  v2:= temp @kind object;
  #L3846ac.  return v2 @kind object;
  #L3846ae.  call temp:= `h`(v2) @signature `Le/e/d/a/l;.h:()Le/e/d/a/n;` @kind virtual;
  #L3846b4.  v2:= temp @kind object;
  #L3846b6.  return v2 @kind object;
  #L3846b8.  call temp:= `s`(v2) @signature `Le/e/d/a/l;.s:()Le/e/d/a/n;` @kind virtual;
  #L3846be.  v2:= temp @kind object;
  #L3846c0.  return v2 @kind object;
  #L3846c2.  call temp:= `p`(v2) @signature `Le/e/d/a/l;.p:()Le/e/d/a/n;` @kind virtual;
  #L3846c8.  v2:= temp @kind object;
  #L3846ca.  return v2 @kind object;
  #L3846cc.  switch v3
                  | 1 => goto L3846c2
                  | 2 => goto L3846b8
                  | 3 => goto L3846ae
                  | 4 => goto L3846a4
                  | 5 => goto L3846a4
                  | 6 => goto L38469a
                  | 7 => goto L384690
                  | 8 => goto L384686
                  | 9 => goto L38467c
                  | 10 => goto L384672
                  | 11 => goto L384668
                  | else => goto L38465e;
}
procedure `e.e.d.a.o$a` `a`(`e.e.d.a.j` v2 @kind this, `java.lang.StringBuilder` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Ljava/lang/String;)Le/e/d/a/o$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L384734.  call temp:= `length`(v3) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L38473a.  v0:= temp;
  #L38473c.  if v0 != 0 then goto L384746;
  #L384740.  v3:= `@@e.e.d.a.o$a.e` @type ^`e.e.d.a.o$a` @kind object;
  #L384744.  return v3 @kind object;
  #L384746.  v0:= `@@e.e.d.a.j.m` @type ^`java.util.regex.Pattern` @kind object;
  #L38474a.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384750.  v0:= temp @kind object;
  #L384752.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L384758.  v1:= temp;
  #L38475a.  if v1 == 0 then goto L38477a;
  #L38475e.  v4:= 0I;
  #L384760.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L384766.  v0:= temp;
  #L384768.  call temp:= `delete`(v3, v4, v0) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L38476e.  call temp:= `b`(v3) @signature `Le/e/d/a/j;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L384774.  v3:= `@@e.e.d.a.o$a.b` @type ^`e.e.d.a.o$a` @kind object;
  #L384778.  return v3 @kind object;
  #L38477a.  v0:= v2.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L38477e.  call temp:= `a`(v0, v4) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L384784.  v4:= temp @kind object;
  #L384786.  call temp:= `b`(v3) @signature `Le/e/d/a/j;.b:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;` @kind static;
  #L38478c.  call temp:= `a`(v2, v4, v3) @signature `Le/e/d/a/j;.a:(Ljava/util/regex/Pattern;Ljava/lang/StringBuilder;)Z` @kind direct;
  #L384792.  v3:= temp;
  #L384794.  if v3 == 0 then goto L38479e;
  #L384798.  v3:= `@@e.e.d.a.o$a.c` @type ^`e.e.d.a.o$a` @kind object;
  #L38479c.  goto L3847a2;
  #L38479e.  v3:= `@@e.e.d.a.o$a.e` @type ^`e.e.d.a.o$a` @kind object;
  #L3847a2.  return v3 @kind object;
}
procedure `e.e.d.a.o` `a`(`e.e.d.a.j` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L384710.  v0:= new `e.e.d.a.o`;
  #L384714.  call `<init>`(v0) @signature `Le/e/d/a/o;.<init>:()V` @kind direct;
  #L38471a.  call `a`(v1, v2, v3, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;Le/e/d/a/o;)V` @kind virtual;
  #L384720.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v3 @kind this, `e.e.d.a.o` v4 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L384d1c.  v0:= new `java.lang.StringBuilder`;
  #L384d20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384d26.  call temp:= `o`(v4) @signature `Le/e/d/a/o;.o:()Z` @kind virtual;
  #L384d2c.  v1:= temp;
  #L384d2e.  if v1 == 0 then goto L384d64;
  #L384d32.  call temp:= `f`(v4) @signature `Le/e/d/a/o;.f:()I` @kind virtual;
  #L384d38.  v1:= temp;
  #L384d3a.  if v1 <= 0 then goto L384d64;
  #L384d3e.  call temp:= `f`(v4) @signature `Le/e/d/a/o;.f:()I` @kind virtual;
  #L384d44.  v1:= temp;
  #L384d46.  v1:= new `char`[v1];
  #L384d4a.  v2:= 48I;
  #L384d4e.  call `fill`(v1, v2) @signature `Ljava/util/Arrays;.fill:([CC)V` @kind static;
  #L384d54.  v2:= new `java.lang.String`;
  #L384d58.  call `<init>`(v2, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L384d5e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384d64.  call temp:= `e`(v4) @signature `Le/e/d/a/o;.e:()J` @kind virtual;
  #L384d6a.  v1:= temp @kind wide;
  #L384d6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L384d72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384d78.  v4:= temp @kind object;
  #L384d7a.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v5 @kind this, `e.e.d.a.o` v6 @kind object, `e.e.d.a.j$b` v7 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/j$b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L384b44.  call temp:= `e`(v6) @signature `Le/e/d/a/o;.e:()J` @kind virtual;
  #L384b4a.  v0:= temp @kind wide;
  #L384b4c.  v2:= 0L;
  #L384b50.  v4:= lcmp(v0, v2);
  #L384b54.  if v4 != 0 then goto L384b7a;
  #L384b58.  call temp:= `n`(v6) @signature `Le/e/d/a/o;.n:()Z` @kind virtual;
  #L384b5e.  v0:= temp;
  #L384b60.  if v0 == 0 then goto L384b7a;
  #L384b64.  call temp:= `h`(v6) @signature `Le/e/d/a/o;.h:()Ljava/lang/String;` @kind virtual;
  #L384b6a.  v0:= temp @kind object;
  #L384b6c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L384b72.  v1:= temp;
  #L384b74.  if v1 <= 0 then goto L384b7a;
  #L384b78.  return v0 @kind object;
  #L384b7a.  v0:= new `java.lang.StringBuilder`;
  #L384b7e.  v1:= 20I;
  #L384b82.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L384b88.  call `a`(v5, v6, v7, v0) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @kind virtual;
  #L384b8e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384b94.  v6:= temp @kind object;
  #L384b96.  return v6 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.j` v4 @kind this, `java.lang.StringBuilder` v5 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L384ef8.  v0:= `@@e.e.d.a.j.v` @type ^`java.util.regex.Pattern` @kind object;
  #L384efc.  call temp:= `matcher`(v0, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L384f02.  v0:= temp @kind object;
  #L384f04.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L384f0a.  v1:= temp;
  #L384f0c.  if v1 == 0 then goto L384f6e;
  #L384f10.  v1:= 0I;
  #L384f12.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L384f18.  v2:= temp;
  #L384f1a.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/StringBuilder;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L384f20.  v1:= temp @kind object;
  #L384f22.  call temp:= `b`(v1) @signature `Le/e/d/a/j;.b:(Ljava/lang/CharSequence;)Z` @kind static;
  #L384f28.  v1:= temp;
  #L384f2a.  if v1 == 0 then goto L384f6e;
  #L384f2e.  call temp:= `groupCount`(v0) @signature `Ljava/util/regex/Matcher;.groupCount:()I` @kind virtual;
  #L384f34.  v1:= temp;
  #L384f36.  v2:= 1I;
  #L384f38.  if v2 > v1 then goto L384f6e;
  #L384f3c.  call temp:= `group`(v0, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L384f42.  v3:= temp @kind object;
  #L384f44.  if v3 == 0 then goto L384f68;
  #L384f48.  call temp:= `group`(v0, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L384f4e.  v1:= temp @kind object;
  #L384f50.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L384f56.  v0:= temp;
  #L384f58.  call temp:= `length`(v5) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L384f5e.  v2:= temp;
  #L384f60.  call temp:= `delete`(v5, v0, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L384f66.  return v1 @kind object;
  #L384f68.  v2:= v2 + 1;
  #L384f6c.  goto L384f38;
  #L384f6e.  v5:= "" @kind object;
  #L384f72.  return v5 @kind object;
}
procedure `void` `a`(`e.e.d.a.j` v3 @kind this, `e.e.d.a.o` v4 @kind object, `e.e.d.a.j$b` v5 @kind object, `java.lang.StringBuilder` v6 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L385b7c.  v0:= 0I;
  #L385b7e.  call `setLength`(v6, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L385b84.  call temp:= `b`(v4) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L385b8a.  v0:= temp;
  #L385b8c.  call temp:= `a`(v3, v4) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L385b92.  v1:= temp @kind object;
  #L385b94.  v2:= `@@e.e.d.a.j$b.b` @type ^`e.e.d.a.j$b` @kind object;
  #L385b98.  if v5 != v2 then goto L385bae;
  #L385b9c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385ba2.  v4:= `@@e.e.d.a.j$b.b` @type ^`e.e.d.a.j$b` @kind object;
  #L385ba6.  call `a`(v3, v0, v4, v6) @signature `Le/e/d/a/j;.a:(ILe/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @kind direct;
  #L385bac.  return @kind void;
  #L385bae.  call temp:= `c`(v3, v0) @signature `Le/e/d/a/j;.c:(I)Z` @kind direct;
  #L385bb4.  v2:= temp;
  #L385bb6.  if v2 != 0 then goto L385bc2;
  #L385bba.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385bc0.  return @kind void;
  #L385bc2.  call temp:= `b`(v3, v0) @signature `Le/e/d/a/j;.b:(I)Ljava/lang/String;` @kind virtual;
  #L385bc8.  v2:= temp @kind object;
  #L385bca.  call temp:= `a`(v3, v0, v2) @signature `Le/e/d/a/j;.a:(ILjava/lang/String;)Le/e/d/a/l;` @kind direct;
  #L385bd0.  v2:= temp @kind object;
  #L385bd2.  call temp:= `a`(v3, v1, v2, v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;Le/e/d/a/j$b;)Ljava/lang/String;` @kind direct;
  #L385bd8.  v1:= temp @kind object;
  #L385bda.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385be0.  call `a`(v3, v4, v2, v5, v6) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/l;Le/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @kind direct;
  #L385be6.  call `a`(v3, v0, v5, v6) @signature `Le/e/d/a/j;.a:(ILe/e/d/a/j$b;Ljava/lang/StringBuilder;)V` @kind direct;
  #L385bec.  return @kind void;
}
procedure `void` `a`(`e.e.d.a.j` v6 @kind this, `java.lang.CharSequence` v7 @kind object, `java.lang.String` v8 @kind object, `e.e.d.a.o` v9 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;Le/e/d/a/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L385c70.  v3:= 0I;
  #L385c72.  v4:= 1I;
  #L385c74.  v0:= v6 @kind object;
  #L385c76.  v1:= v7 @kind object;
  #L385c78.  v2:= v8 @kind object;
  #L385c7a.  v5:= v9 @kind object;
  #L385c7c.  call `a`(v0, v1, v2, v3, v4, v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;ZZLe/e/d/a/o;)V` @kind direct;
  #L385c82.  return @kind void;
}
procedure `boolean` `a`(`e.e.d.a.j` v4 @kind this, `e.e.d.a.o` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L383e00.  call temp:= `b`(v5) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L383e06.  v0:= temp;
  #L383e08.  call temp:= `a`(v4, v0, v6) @signature `Le/e/d/a/j;.a:(ILjava/lang/String;)Le/e/d/a/l;` @kind direct;
  #L383e0e.  v1:= temp @kind object;
  #L383e10.  v2:= 0I;
  #L383e12.  if v1 == 0 then goto L383e4e;
  #L383e16.  v3:= "001" @kind object;
  #L383e1a.  call temp:= `equals`(v3, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L383e20.  v3:= temp;
  #L383e22.  if v3 != 0 then goto L383e34;
  #L383e26.  call temp:= `f`(v4, v6) @signature `Le/e/d/a/j;.f:(Ljava/lang/String;)I` @kind direct;
  #L383e2c.  v6:= temp;
  #L383e2e.  if v0 == v6 then goto L383e34;
  #L383e32.  goto L383e4e;
  #L383e34.  call temp:= `a`(v4, v5) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L383e3a.  v5:= temp @kind object;
  #L383e3c.  call temp:= `a`(v4, v5, v1) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;)Le/e/d/a/j$c;` @kind direct;
  #L383e42.  v5:= temp @kind object;
  #L383e44.  v6:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L383e48.  if v5 == v6 then goto L383e4e;
  #L383e4c.  v2:= 1I;
  #L383e4e.  return v2;
}
procedure `boolean` `a`(`e.e.d.a.j` v4 @kind this, `java.lang.String` v5 @kind object, `e.e.d.a.n` v6 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/n;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L383d88.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L383d8e.  v0:= temp;
  #L383d90.  call temp:= `c`(v6) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @kind virtual;
  #L383d96.  v1:= temp @kind object;
  #L383d98.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L383d9e.  v2:= temp;
  #L383da0.  v3:= 0I;
  #L383da2.  if v2 <= 0 then goto L383dbc;
  #L383da6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L383dac.  v0:= temp @kind object;
  #L383dae.  call temp:= `contains`(v1, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L383db4.  v0:= temp;
  #L383db6.  if v0 != 0 then goto L383dbc;
  #L383dba.  return v3;
  #L383dbc.  v0:= v4.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L383dc0.  call temp:= `a`(v0, v5, v6, v3) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L383dc6.  v5:= temp;
  #L383dc8.  return v5;
}
procedure `boolean` `a`(`e.e.d.a.j` v8 @kind this, `java.lang.StringBuilder` v9 @kind object, `e.e.d.a.l` v10 @kind object, `java.lang.StringBuilder` v11 @kind object) @signature `Le/e/d/a/j;.a:(Ljava/lang/StringBuilder;Le/e/d/a/l;Ljava/lang/StringBuilder;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L383ec4.  call temp:= `length`(v9) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L383eca.  v0:= temp;
  #L383ecc.  call temp:= `i`(v10) @signature `Le/e/d/a/l;.i:()Ljava/lang/String;` @kind virtual;
  #L383ed2.  v1:= temp @kind object;
  #L383ed4.  v2:= 0I;
  #L383ed6.  if v0 == 0 then goto L38400a;
  #L383eda.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L383ee0.  v3:= temp;
  #L383ee2.  if v3 != 0 then goto L383eea;
  #L383ee6.  goto L38400a;
  #L383eea.  v3:= v8.`e.e.d.a.j.e` @type ^`e.e.d.a.q.c` @kind object;
  #L383eee.  call temp:= `a`(v3, v1) @signature `Le/e/d/a/q/c;.a:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind virtual;
  #L383ef4.  v1:= temp @kind object;
  #L383ef6.  call temp:= `matcher`(v1, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L383efc.  v1:= temp @kind object;
  #L383efe.  call temp:= `lookingAt`(v1) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L383f04.  v3:= temp;
  #L383f06.  if v3 == 0 then goto L38400a;
  #L383f0a.  call temp:= `c`(v10) @signature `Le/e/d/a/l;.c:()Le/e/d/a/n;` @kind virtual;
  #L383f10.  v3:= temp @kind object;
  #L383f12.  v4:= v8.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L383f16.  call temp:= `a`(v4, v9, v3, v2) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L383f1c.  v4:= temp;
  #L383f1e.  call temp:= `groupCount`(v1) @signature `Ljava/util/regex/Matcher;.groupCount:()I` @kind virtual;
  #L383f24.  v5:= temp;
  #L383f26.  call temp:= `j`(v10) @signature `Le/e/d/a/l;.j:()Ljava/lang/String;` @kind virtual;
  #L383f2c.  v10:= temp @kind object;
  #L383f2e.  v6:= 1I;
  #L383f30.  if v10 == 0 then goto L383fb2;
  #L383f34.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L383f3a.  v7:= temp;
  #L383f3c.  if v7 == 0 then goto L383fb2;
  #L383f40.  call temp:= `group`(v1, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L383f46.  v7:= temp @kind object;
  #L383f48.  if v7 != 0 then goto L383f4e;
  #L383f4c.  goto L383fb2;
  #L383f4e.  v7:= new `java.lang.StringBuilder`;
  #L383f52.  call `<init>`(v7, v9) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L383f58.  call temp:= `replaceFirst`(v1, v10) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L383f5e.  v10:= temp @kind object;
  #L383f60.  call temp:= `replace`(v7, v2, v0, v10) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383f66.  if v4 == 0 then goto L383f84;
  #L383f6a.  v10:= v8.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L383f6e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383f74.  v0:= temp @kind object;
  #L383f76.  call temp:= `a`(v10, v0, v3, v2) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L383f7c.  v10:= temp;
  #L383f7e.  if v10 != 0 then goto L383f84;
  #L383f82.  return v2;
  #L383f84.  if v11 == 0 then goto L383f9a;
  #L383f88.  if v5 <= v6 then goto L383f9a;
  #L383f8c.  call temp:= `group`(v1, v6) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L383f92.  v10:= temp @kind object;
  #L383f94.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383f9a.  call temp:= `length`(v9) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L383fa0.  v10:= temp;
  #L383fa2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383fa8.  v11:= temp @kind object;
  #L383faa.  call temp:= `replace`(v9, v2, v10, v11) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383fb0.  return v6;
  #L383fb2.  if v4 == 0 then goto L383fd8;
  #L383fb6.  v10:= v8.`e.e.d.a.j.c` @type ^`e.e.d.a.q.a` @kind object;
  #L383fba.  call temp:= `end`(v1) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L383fc0.  v0:= temp;
  #L383fc2.  call temp:= `substring`(v9, v0) @signature `Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L383fc8.  v0:= temp @kind object;
  #L383fca.  call temp:= `a`(v10, v0, v3, v2) @signature `Le/e/d/a/q/a;.a:(Ljava/lang/CharSequence;Le/e/d/a/n;Z)Z` @kind interface;
  #L383fd0.  v10:= temp;
  #L383fd2.  if v10 != 0 then goto L383fd8;
  #L383fd6.  return v2;
  #L383fd8.  if v11 == 0 then goto L383ffa;
  #L383fdc.  if v5 <= 0 then goto L383ffa;
  #L383fe0.  call temp:= `group`(v1, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L383fe6.  v10:= temp @kind object;
  #L383fe8.  if v10 == 0 then goto L383ffa;
  #L383fec.  call temp:= `group`(v1, v6) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L383ff2.  v10:= temp @kind object;
  #L383ff4.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383ffa.  call temp:= `end`(v1) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L384000.  v10:= temp;
  #L384002.  call temp:= `delete`(v9, v2, v10) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L384008.  return v6;
  #L38400a.  return v2;
}
procedure `int` `b`(`e.e.d.a.j` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Le/e/d/a/j;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L384838.  call temp:= `g`(v4, v5) @signature `Le/e/d/a/j;.g:(Ljava/lang/String;)Z` @kind direct;
  #L38483e.  v0:= temp;
  #L384840.  if v0 != 0 then goto L38488a;
  #L384844.  v0:= `@@e.e.d.a.j.h` @type ^`java.util.logging.Logger` @kind object;
  #L384848.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L38484c.  v2:= new `java.lang.StringBuilder`;
  #L384850.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384856.  v3:= "Invalid or missing region code (" @kind object;
  #L38485a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384860.  if v5 != 0 then goto L384868;
  #L384864.  v5:= "null" @kind object;
  #L384868.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38486e.  v5:= ") provided." @kind object;
  #L384872.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384878.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38487e.  v5:= temp @kind object;
  #L384880.  call `log`(v0, v1, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L384886.  v5:= 0I;
  #L384888.  return v5;
  #L38488a.  call temp:= `f`(v4, v5) @signature `Le/e/d/a/j;.f:(Ljava/lang/String;)I` @kind direct;
  #L384890.  v5:= temp;
  #L384892.  return v5;
}
procedure `e.e.d.a.j$c` `b`(`e.e.d.a.j` v2 @kind this, `e.e.d.a.o` v3 @kind object) @signature `Le/e/d/a/j;.b:(Le/e/d/a/o;)Le/e/d/a/j$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L384170.  call temp:= `c`(v2, v3) @signature `Le/e/d/a/j;.c:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L384176.  v0:= temp @kind object;
  #L384178.  call temp:= `b`(v3) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L38417e.  v1:= temp;
  #L384180.  call temp:= `a`(v2, v1, v0) @signature `Le/e/d/a/j;.a:(ILjava/lang/String;)Le/e/d/a/l;` @kind direct;
  #L384186.  v0:= temp @kind object;
  #L384188.  if v0 != 0 then goto L384192;
  #L38418c.  v3:= `@@e.e.d.a.j$c.m` @type ^`e.e.d.a.j$c` @kind object;
  #L384190.  return v3 @kind object;
  #L384192.  call temp:= `a`(v2, v3) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L384198.  v3:= temp @kind object;
  #L38419a.  call temp:= `a`(v2, v3, v0) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;Le/e/d/a/l;)Le/e/d/a/j$c;` @kind direct;
  #L3841a0.  v3:= temp @kind object;
  #L3841a2.  return v3 @kind object;
}
procedure `java.lang.String` `b`(`e.e.d.a.j` v1 @kind this, `int` v2 ) @signature `Le/e/d/a/j;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L384d8c.  v0:= v1.`e.e.d.a.j.b` @type ^`java.util.Map` @kind object;
  #L384d90.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L384d96.  v2:= temp @kind object;
  #L384d98.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L384d9e.  v2:= temp @kind object;
  #L384da0.  v2:= (`java.util.List`) v2 @kind object;
  #L384da4.  if v2 != 0 then goto L384dae;
  #L384da8.  v2:= "ZZ" @kind object;
  #L384dac.  goto L384dbc;
  #L384dae.  v0:= 0I;
  #L384db0.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L384db6.  v2:= temp @kind object;
  #L384db8.  v2:= (`java.lang.String`) v2 @kind object;
  #L384dbc.  return v2 @kind object;
}
procedure `e.e.d.a.l` `c`(`e.e.d.a.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/j;.c:(Ljava/lang/String;)Le/e/d/a/l;` @AccessFlag  {
    temp;
    v0;

  #L3845e4.  call temp:= `g`(v1, v2) @signature `Le/e/d/a/j;.g:(Ljava/lang/String;)Z` @kind direct;
  #L3845ea.  v0:= temp;
  #L3845ec.  if v0 != 0 then goto L3845f4;
  #L3845f0.  v2:= 0I;
  #L3845f2.  return v2 @kind object;
  #L3845f4.  v0:= v1.`e.e.d.a.j.a` @type ^`e.e.d.a.f` @kind object;
  #L3845f8.  call temp:= `a`(v0, v2) @signature `Le/e/d/a/f;.a:(Ljava/lang/String;)Le/e/d/a/l;` @kind interface;
  #L3845fe.  v2:= temp @kind object;
  #L384600.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`e.e.d.a.j` v4 @kind this, `e.e.d.a.o` v5 @kind object) @signature `Le/e/d/a/j;.c:(Le/e/d/a/o;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L384dd0.  call temp:= `b`(v5) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L384dd6.  v0:= temp;
  #L384dd8.  v1:= v4.`e.e.d.a.j.b` @type ^`java.util.Map` @kind object;
  #L384ddc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L384de2.  v2:= temp @kind object;
  #L384de4.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L384dea.  v1:= temp @kind object;
  #L384dec.  v1:= (`java.util.List`) v1 @kind object;
  #L384df0.  if v1 != 0 then goto L384e32;
  #L384df4.  v5:= `@@e.e.d.a.j.h` @type ^`java.util.logging.Logger` @kind object;
  #L384df8.  v1:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L384dfc.  v2:= new `java.lang.StringBuilder`;
  #L384e00.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384e06.  v3:= "Missing/invalid country_code (" @kind object;
  #L384e0a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384e10.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L384e16.  v0:= ")" @kind object;
  #L384e1a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384e20.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384e26.  v0:= temp @kind object;
  #L384e28.  call `log`(v5, v1, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L384e2e.  v5:= 0I;
  #L384e30.  return v5 @kind object;
  #L384e32.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L384e38.  v0:= temp;
  #L384e3a.  v2:= 1I;
  #L384e3c.  if v0 != v2 then goto L384e50;
  #L384e40.  v5:= 0I;
  #L384e42.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L384e48.  v5:= temp @kind object;
  #L384e4a.  v5:= (`java.lang.String`) v5 @kind object;
  #L384e4e.  return v5 @kind object;
  #L384e50.  call temp:= `a`(v4, v5, v1) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L384e56.  v5:= temp @kind object;
  #L384e58.  return v5 @kind object;
}
procedure `boolean` `d`(`e.e.d.a.j` v1 @kind this, `e.e.d.a.o` v2 @kind object) @signature `Le/e/d/a/j;.d:(Le/e/d/a/o;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L383ddc.  call temp:= `c`(v1, v2) @signature `Le/e/d/a/j;.c:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L383de2.  v0:= temp @kind object;
  #L383de4.  call temp:= `a`(v1, v2, v0) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Ljava/lang/String;)Z` @kind virtual;
  #L383dea.  v2:= temp;
  #L383dec.  return v2;
}
