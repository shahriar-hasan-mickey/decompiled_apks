record `e.e.e.b.a.c$a` @kind class @AccessFlag PUBLIC {
  `int` `e.e.e.b.a.c$a.a` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `e.e.e.b.a.c$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.e.b.a.c$a` v1 @kind this) @signature `Le/e/e/b/a/c$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38c1c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38c1c6.  v0:= 0I;
  #L38c1c8.  v1.`e.e.e.b.a.c$a.a` @type ^`int` := v0;
  #L38c1cc.  return @kind void;
}
procedure `e.e.e.b.a.c$a` `a`(`e.e.e.b.a.c$a` v3 @kind this, `int` v4 , `int`[] v5 @kind object) @signature `Le/e/e/b/a/c$a;.a:(I[I)Le/e/e/b/a/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38c188.  v3.`e.e.e.b.a.c$a.a` @type ^`int` := v4;
  #L38c18c.  if v5 == 0 then goto L38c1ac;
  #L38c190.  v4:= length @variable v5;
  #L38c192.  v0:= 0I;
  #L38c194.  if v0 >= v4 then goto L38c1ac;
  #L38c198.  v1:= v5[v0];
  #L38c19c.  v2:= v3.`e.e.e.b.a.c$a.a` @type ^`int`;
  #L38c1a0.  v1:= v1 ^| v2 @kind int;
  #L38c1a2.  v3.`e.e.e.b.a.c$a.a` @type ^`int` := v1;
  #L38c1a6.  v0:= v0 + 1;
  #L38c1aa.  goto L38c194;
  #L38c1ac.  return v3 @kind object;
}
procedure `e.e.e.b.a.c` `a`(`e.e.e.b.a.c$a` v4 @kind this) @signature `Le/e/e/b/a/c$a;.a:()Le/e/e/b/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38c160.  v0:= new `e.e.e.b.a.c`;
  #L38c164.  v1:= v4.`e.e.e.b.a.c$a.a` @type ^`int`;
  #L38c168.  v2:= v4.`e.e.e.b.a.c$a.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L38c16c.  v3:= 0I;
  #L38c16e.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/e/b/a/c;.<init>:(ILjava/util/concurrent/Executor;Le/e/e/b/a/e;)V` @kind direct;
  #L38c174.  return v0 @kind object;
}
