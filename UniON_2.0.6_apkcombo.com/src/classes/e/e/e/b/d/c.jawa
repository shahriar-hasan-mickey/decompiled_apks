record `e.e.e.b.d.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.mlkit.vision.common.internal.f$b` @kind interface {
  `java.util.concurrent.Executor` `e.e.e.b.d.c.a` @AccessFlag PRIVATE_FINAL;
  `float` `e.e.e.b.d.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.b.d.c` v1 @kind this, `e.e.e.b.d.c$a` v2 @kind object) @signature `Le/e/e/b/d/c;.<init>:(Le/e/e/b/d/c$a;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3928d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3928da.  call temp:= `a`(v2) @signature `Le/e/e/b/d/c$a;.a:(Le/e/e/b/d/c$a;)F` @kind static;
  #L3928e0.  v0:= temp;
  #L3928e2.  v1.`e.e.e.b.d.c.b` @type ^`float` := v0;
  #L3928e6.  call temp:= `b`(v2) @signature `Le/e/e/b/d/c$a;.b:(Le/e/e/b/d/c$a;)Ljava/util/concurrent/Executor;` @kind static;
  #L3928ec.  v2:= temp @kind object;
  #L3928ee.  v1.`e.e.e.b.d.c.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3928f2.  return @kind void;
}
procedure `float` `a`(`e.e.e.b.d.c` v1 @kind this) @signature `Le/e/e/b/d/c;.a:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392864.  v0:= v1.`e.e.e.b.d.c.b` @type ^`float`;
  #L392868.  return v0;
}
procedure `java.util.concurrent.Executor` `b`(`e.e.e.b.d.c` v1 @kind this) @signature `Le/e/e/b/d/c;.b:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3928bc.  v0:= v1.`e.e.e.b.d.c.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L3928c0.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.e.b.d.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/e/b/d/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L392808.  v0:= 1I;
  #L39280a.  if v5 != v4 then goto L392810;
  #L39280e.  return v0;
  #L392810.  v1:= instanceof @variable v5 @type ^`e.e.e.b.d.c` @kind boolean;
  #L392814.  v2:= 0I;
  #L392816.  if v1 != 0 then goto L39281c;
  #L39281a.  return v2;
  #L39281c.  v5:= (`e.e.e.b.d.c`) v5 @kind object;
  #L392820.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L392826.  v1:= temp @kind object;
  #L392828.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L39282e.  v3:= temp @kind object;
  #L392830.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L392836.  v1:= temp;
  #L392838.  if v1 == 0 then goto L392852;
  #L39283c.  v1:= v4.`e.e.e.b.d.c.b` @type ^`float`;
  #L392840.  v5:= v5.`e.e.e.b.d.c.b` @type ^`float`;
  #L392844.  call temp:= `compare`(v1, v5) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L39284a.  v5:= temp;
  #L39284c.  if v5 != 0 then goto L392852;
  #L392850.  return v0;
  #L392852.  return v2;
}
procedure `int` `hashCode`(`e.e.e.b.d.c` v3 @kind this) @signature `Le/e/e/b/d/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39287c.  v0:= 2I;
  #L39287e.  v0:= new `java.lang.Object`[v0];
  #L392882.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L392888.  v1:= temp @kind object;
  #L39288a.  v2:= 0I;
  #L39288c.  v0[v2]:= v1 @kind object;
  #L392890.  v1:= v3.`e.e.e.b.d.c.b` @type ^`float`;
  #L392894.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L39289a.  v1:= temp @kind object;
  #L39289c.  v2:= 1I;
  #L39289e.  v0[v2]:= v1 @kind object;
  #L3928a2.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/p;.a:([Ljava/lang/Object;)I` @kind static;
  #L3928a8.  v0:= temp;
  #L3928aa.  return v0;
}
