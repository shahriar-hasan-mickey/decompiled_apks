record `e.e.e.b.d.c$a` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `float` `e.e.e.b.d.c$a.a` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `e.e.e.b.d.c$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.e.b.d.c$a` v1 @kind this) @signature `Le/e/e/b/d/c$a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3927e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3927ee.  v0:= -1.0F;
  #L3927f2.  v1.`e.e.e.b.d.c$a.a` @type ^`float` := v0;
  #L3927f6.  return @kind void;
}
procedure `float` `a`(`e.e.e.b.d.c$a` v0 @kind object) @signature `Le/e/e/b/d/c$a;.a:(Le/e/e/b/d/c$a;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3927b8.  v0:= v0.`e.e.e.b.d.c$a.a` @type ^`float`;
  #L3927bc.  return v0;
}
procedure `java.util.concurrent.Executor` `b`(`e.e.e.b.d.c$a` v0 @kind object) @signature `Le/e/e/b/d/c$a;.b:(Le/e/e/b/d/c$a;)Ljava/util/concurrent/Executor;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3927d0.  v0:= v0.`e.e.e.b.d.c$a.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L3927d4.  return v0 @kind object;
}
procedure `e.e.e.b.d.c$a` `a`(`e.e.e.b.d.c$a` v2 @kind this, `float` v3 ) @signature `Le/e/e/b/d/c$a;.a:(F)Le/e/e/b/d/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L392774.  v0:= 0I;
  #L392776.  call temp:= `compare`(v3, v0) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L39277c.  v0:= temp;
  #L39277e.  v1:= 0I;
  #L392780.  if v0 < 0 then goto L392796;
  #L392784.  v0:= 1.0F;
  #L392788.  call temp:= `compare`(v3, v0) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L39278e.  v0:= temp;
  #L392790.  if v0 > 0 then goto L392796;
  #L392794.  v1:= 1I;
  #L392796.  v0:= "Confidence Threshold should be in range [0.0f, 1.0f]." @kind object;
  #L39279a.  call `a`(v1, v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(ZLjava/lang/Object;)V` @kind static;
  #L3927a0.  v2.`e.e.e.b.d.c$a.a` @type ^`float` := v3;
  #L3927a4.  return v2 @kind object;
}
