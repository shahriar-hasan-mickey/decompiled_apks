record `e.e.e.b.e.c$a` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `int` `e.e.e.b.e.c$a.a` @AccessFlag PRIVATE;
  `boolean` `e.e.e.b.e.c$a.b` @AccessFlag PRIVATE;
  `boolean` `e.e.e.b.e.c$a.c` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `e.e.e.b.e.c$a.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.e.b.e.c$a` v1 @kind this) @signature `Le/e/e/b/e/c$a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L393878.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39387e.  v0:= 1I;
  #L393880.  v1.`e.e.e.b.e.c$a.a` @type ^`int` := v0;
  #L393884.  v0:= 0I;
  #L393886.  v1.`e.e.e.b.e.c$a.b` @type ^`boolean` := v0 @kind boolean;
  #L39388a.  v1.`e.e.e.b.e.c$a.c` @type ^`boolean` := v0 @kind boolean;
  #L39388e.  return @kind void;
}
procedure `int` `a`(`e.e.e.b.e.c$a` v0 @kind object) @signature `Le/e/e/b/e/c$a;.a:(Le/e/e/b/e/c$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393848.  v0:= v0.`e.e.e.b.e.c$a.a` @type ^`int`;
  #L39384c.  return v0;
}
procedure `boolean` `b`(`e.e.e.b.e.c$a` v0 @kind object) @signature `Le/e/e/b/e/c$a;.b:(Le/e/e/b/e/c$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393818.  v0:= v0.`e.e.e.b.e.c$a.b` @type ^`boolean` @kind boolean;
  #L39381c.  return v0;
}
procedure `boolean` `c`(`e.e.e.b.e.c$a` v0 @kind object) @signature `Le/e/e/b/e/c$a;.c:(Le/e/e/b/e/c$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393830.  v0:= v0.`e.e.e.b.e.c$a.c` @type ^`boolean` @kind boolean;
  #L393834.  return v0;
}
procedure `java.util.concurrent.Executor` `d`(`e.e.e.b.e.c$a` v0 @kind object) @signature `Le/e/e/b/e/c$a;.d:(Le/e/e/b/e/c$a;)Ljava/util/concurrent/Executor;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393860.  v0:= v0.`e.e.e.b.e.c$a.d` @type ^`java.util.concurrent.Executor` @kind object;
  #L393864.  return v0 @kind object;
}
