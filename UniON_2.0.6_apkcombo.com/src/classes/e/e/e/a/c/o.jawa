record `e.e.e.a.c.o` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `e.e.e.a.c.o.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.e.a.c.o.b` @AccessFlag PRIVATE;
  `java.util.Queue` `e.e.e.a.c.o.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `e.e.e.a.c.o.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.a.c.o` v1 @kind this) @signature `Le/e/e/a/c/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38ac60.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38ac66.  v0:= new `java.lang.Object`;
  #L38ac6a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38ac70.  v1.`e.e.e.a.c.o.a` @type ^`java.lang.Object` := v0 @kind object;
  #L38ac74.  v0:= new `java.util.ArrayDeque`;
  #L38ac78.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L38ac7e.  v1.`e.e.e.a.c.o.c` @type ^`java.util.Queue` := v0 @kind object;
  #L38ac82.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L38ac86.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L38ac8c.  v1.`e.e.e.a.c.o.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L38ac90.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicReference` `a`(`e.e.e.a.c.o` v0 @kind object) @signature `Le/e/e/a/c/o;.a:(Le/e/e/a/c/o;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac48.  v0:= v0.`e.e.e.a.c.o.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L38ac4c.  return v0 @kind object;
}
procedure `void` `b`(`e.e.e.a.c.o` v2 @kind this) @signature `Le/e/e/a/c/o;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L38ad90.  v0:= v2.`e.e.e.a.c.o.a` @type ^`java.lang.Object` @kind object;
  #L38ad94.  @monitorenter v0
  #L38ad96.  v1:= v2.`e.e.e.a.c.o.c` @type ^`java.util.Queue` @kind object;
  #L38ad9a.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L38ada0.  v1:= temp;
  #L38ada2.  if v1 == 0 then goto L38adb0;
  #L38ada6.  v1:= 0I;
  #L38ada8.  v2.`e.e.e.a.c.o.b` @type ^`boolean` := v1 @kind boolean;
  #L38adac.  @monitorexit v0
  #L38adae.  return @kind void;
  #L38adb0.  v1:= v2.`e.e.e.a.c.o.c` @type ^`java.util.Queue` @kind object;
  #L38adb4.  call temp:= `remove`(v1) @signature `Ljava/util/Queue;.remove:()Ljava/lang/Object;` @kind interface;
  #L38adba.  v1:= temp @kind object;
  #L38adbc.  v1:= (`e.e.e.a.c.f0`) v1 @kind object;
  #L38adc0.  @monitorexit v0
  #L38adc2.  v0:= v1.`e.e.e.a.c.f0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L38adc6.  v1:= v1.`e.e.e.a.c.f0.b` @type ^`java.lang.Runnable` @kind object;
  #L38adca.  call `b`(v2, v0, v1) @signature `Le/e/e/a/c/o;.b:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind direct;
  #L38add0.  return @kind void;
  #L38add2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38add4.  @monitorexit v0
  #L38add6.  throw v1;
  catch `java.lang.Throwable` @[L38ad96..L38adc2] goto L38add2;
  catch `java.lang.Throwable` @[L38add4..L38add6] goto L38add2;
}
procedure `void` `b`(`e.e.e.a.c.o` v0 @kind object) @signature `Le/e/e/a/c/o;.b:(Le/e/e/a/c/o;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ad3c.  call `b`(v0) @signature `Le/e/e/a/c/o;.b:()V` @kind direct;
  #L38ad42.  return @kind void;
}
procedure `void` `b`(`e.e.e.a.c.o` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Le/e/e/a/c/o;.b:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L38ad54.  v0:= new `e.e.e.a.c.d0`;
  #L38ad58.  call `<init>`(v0, v1, v3) @signature `Le/e/e/a/c/d0;.<init>:(Le/e/e/a/c/o;Ljava/lang/Runnable;)V` @kind direct;
  #L38ad5e.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L38ad64.  return @kind void;
  #L38ad66.  call `b`(v1) @signature `Le/e/e/a/c/o;.b:()V` @kind direct;
  #L38ad6c.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L38ad5e..L38ad64] goto L38ad66;
}
procedure `void` `a`(`e.e.e.a.c.o` v2 @kind this) @signature `Le/e/e/a/c/o;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38aca4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38acaa.  v0:= temp @kind object;
  #L38acac.  v1:= v2.`e.e.e.a.c.o.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L38acb0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38acb6.  v1:= temp @kind object;
  #L38acb8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38acbe.  v0:= temp;
  #L38acc0.  call `b`(v0) @signature `Lcom/google/android/gms/common/internal/r;.b:(Z)V` @kind static;
  #L38acc6.  return @kind void;
}
procedure `void` `a`(`e.e.e.a.c.o` v4 @kind this, `java.util.concurrent.Executor` v5 @kind object, `java.lang.Runnable` v6 @kind object) @signature `Le/e/e/a/c/o;.a:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38acd8.  v0:= v4.`e.e.e.a.c.o.a` @type ^`java.lang.Object` @kind object;
  #L38acdc.  @monitorenter v0
  #L38acde.  v1:= v4.`e.e.e.a.c.o.b` @type ^`boolean` @kind boolean;
  #L38ace2.  if v1 == 0 then goto L38ad00;
  #L38ace6.  v1:= v4.`e.e.e.a.c.o.c` @type ^`java.util.Queue` @kind object;
  #L38acea.  v2:= new `e.e.e.a.c.f0`;
  #L38acee.  v3:= 0I;
  #L38acf0.  call `<init>`(v2, v5, v6, v3) @signature `Le/e/e/a/c/f0;.<init>:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;Le/e/e/a/c/e0;)V` @kind direct;
  #L38acf6.  call temp:= `add`(v1, v2) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38acfc.  @monitorexit v0
  #L38acfe.  return @kind void;
  #L38ad00.  v1:= 1I;
  #L38ad02.  v4.`e.e.e.a.c.o.b` @type ^`boolean` := v1 @kind boolean;
  #L38ad06.  @monitorexit v0
  #L38ad08.  call `b`(v4, v5, v6) @signature `Le/e/e/a/c/o;.b:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind direct;
  #L38ad0e.  return @kind void;
  #L38ad10.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38ad12.  @monitorexit v0
  #L38ad14.  throw v5;
  catch `java.lang.Throwable` @[L38acde..L38ad08] goto L38ad10;
  catch `java.lang.Throwable` @[L38ad12..L38ad14] goto L38ad10;
}
