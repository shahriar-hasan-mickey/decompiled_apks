record `e.e.e.a.c.a` @kind class @AccessFlag PUBLIC {
  `java.lang.ref.ReferenceQueue` `e.e.e.a.c.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `e.e.e.a.c.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.a.c.a` v1 @kind this) @signature `Le/e/e/a/c/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L38a080.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38a086.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L38a08a.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L38a090.  v1.`e.e.e.a.c.a.a` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L38a094.  v0:= new `java.util.HashSet`;
  #L38a098.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L38a09e.  call temp:= `synchronizedSet`(v0) @signature `Ljava/util/Collections;.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L38a0a4.  v0:= temp @kind object;
  #L38a0a6.  v1.`e.e.e.a.c.a.b` @type ^`java.util.Set` := v0 @kind object;
  #L38a0aa.  return @kind void;
}
procedure `e.e.e.a.c.a` `a`() @signature `Le/e/e/a/c/a;.a:()Le/e/e/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L389ff4.  v0:= new `e.e.e.a.c.a`;
  #L389ff8.  call `<init>`(v0) @signature `Le/e/e/a/c/a;.<init>:()V` @kind direct;
  #L389ffe.  v1:= `@@e.e.e.a.c.q.b` @type ^`java.lang.Runnable` @kind object;
  #L38a002.  call temp:= `a`(v0, v0, v1) @signature `Le/e/e/a/c/a;.a:(Ljava/lang/Object;Ljava/lang/Runnable;)Le/e/e/a/c/a$a;` @kind virtual;
  #L38a008.  v1:= v0.`e.e.e.a.c.a.a` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L38a00c.  v2:= v0.`e.e.e.a.c.a.b` @type ^`java.util.Set` @kind object;
  #L38a010.  v3:= new `e.e.e.a.c.r`;
  #L38a014.  call `<init>`(v3, v1, v2) @signature `Le/e/e/a/c/r;.<init>:(Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;)V` @kind direct;
  #L38a01a.  v1:= new `java.lang.Thread`;
  #L38a01e.  v2:= "MlKitCleaner" @kind object;
  #L38a022.  call `<init>`(v1, v3, v2) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L38a028.  v2:= 1I;
  #L38a02a.  call `setDaemon`(v1, v2) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L38a030.  call `start`(v1) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L38a036.  return v0 @kind object;
}
procedure `e.e.e.a.c.a$a` `a`(`e.e.e.a.c.a` v7 @kind this, `java.lang.Object` v8 @kind object, `java.lang.Runnable` v9 @kind object) @signature `Le/e/e/a/c/a;.a:(Ljava/lang/Object;Ljava/lang/Runnable;)Le/e/e/a/c/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38a048.  v6:= new `e.e.e.a.c.t`;
  #L38a04c.  v2:= v7.`e.e.e.a.c.a.a` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L38a050.  v3:= v7.`e.e.e.a.c.a.b` @type ^`java.util.Set` @kind object;
  #L38a054.  v5:= 0I;
  #L38a056.  v0:= v6 @kind object;
  #L38a058.  v1:= v8 @kind object;
  #L38a05a.  v4:= v9 @kind object;
  #L38a05c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Le/e/e/a/c/t;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;Ljava/lang/Runnable;Le/e/e/a/c/s;)V` @kind direct;
  #L38a062.  v8:= v7.`e.e.e.a.c.a.b` @type ^`java.util.Set` @kind object;
  #L38a066.  call temp:= `add`(v8, v6) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38a06c.  return v6 @kind object;
}
