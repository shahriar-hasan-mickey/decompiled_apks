record `e.e.e.a.c.t` @kind class @AccessFlag FINAL extends `java.lang.ref.PhantomReference` @kind class, `e.e.e.a.c.a$a` @kind interface {
  `java.util.Set` `e.e.e.a.c.t.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `e.e.e.a.c.t.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.a.c.t` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object, `java.util.Set` v3 @kind object, `java.lang.Runnable` v4 @kind object, `e.e.e.a.c.s` v5 @kind object) @signature `Le/e/e/a/c/t;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;Ljava/lang/Runnable;Le/e/e/a/c/s;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L38affc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/ref/PhantomReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L38b002.  v0.`e.e.e.a.c.t.a` @type ^`java.util.Set` := v3 @kind object;
  #L38b006.  v0.`e.e.e.a.c.t.b` @type ^`java.lang.Runnable` := v4 @kind object;
  #L38b00a.  return @kind void;
}
procedure `void` `a`(`e.e.e.a.c.t` v1 @kind this) @signature `Le/e/e/a/c/t;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38b01c.  v0:= v1.`e.e.e.a.c.t.a` @type ^`java.util.Set` @kind object;
  #L38b020.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L38b026.  v0:= temp;
  #L38b028.  if v0 != 0 then goto L38b02e;
  #L38b02c.  return @kind void;
  #L38b02e.  call `clear`(v1) @signature `Ljava/lang/ref/PhantomReference;.clear:()V` @kind virtual;
  #L38b034.  v0:= v1.`e.e.e.a.c.t.b` @type ^`java.lang.Runnable` @kind object;
  #L38b038.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L38b03e.  return @kind void;
}
