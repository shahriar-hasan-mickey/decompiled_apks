record `e.e.e.a.c.g` @kind class @AccessFlag PUBLIC {
  `android.os.Handler` `e.e.e.a.c.g.a` @AccessFlag PRIVATE;
}
global `java.lang.Object` `@@e.e.e.a.c.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.e.a.c.g` `@@e.e.e.a.c.g.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/e/e/a/c/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L38a3c4.  v0:= new `java.lang.Object`;
  #L38a3c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38a3ce.  `@@e.e.e.a.c.g.b` @type ^`java.lang.Object` := v0 @kind object;
  #L38a3d2.  return @kind void;
}
procedure `void` `<init>`(`e.e.e.a.c.g` v1 @kind this, `android.os.Looper` v2 @kind object) @signature `Le/e/e/a/c/g;.<init>:(Landroid/os/Looper;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L38a3e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38a3ea.  v0:= new `e.e.a.b.f.i.a`;
  #L38a3ee.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/i/a;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L38a3f4.  v1.`e.e.e.a.c.g.a` @type ^`android.os.Handler` := v0 @kind object;
  #L38a3f8.  return @kind void;
}
procedure `android.os.Handler` `a`(`e.e.e.a.c.g` v0 @kind object) @signature `Le/e/e/a/c/g;.a:(Le/e/e/a/c/g;)Landroid/os/Handler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a2f8.  v0:= v0.`e.e.e.a.c.g.a` @type ^`android.os.Handler` @kind object;
  #L38a2fc.  return v0 @kind object;
}
procedure `e.e.e.a.c.g` `a`() @signature `Le/e/e/a/c/g;.a:()Le/e/e/a/c/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38a344.  v0:= `@@e.e.e.a.c.g.b` @type ^`java.lang.Object` @kind object;
  #L38a348.  @monitorenter v0
  #L38a34a.  v1:= `@@e.e.e.a.c.g.c` @type ^`e.e.e.a.c.g` @kind object;
  #L38a34e.  if v1 != 0 then goto L38a380;
  #L38a352.  v1:= new `android.os.HandlerThread`;
  #L38a356.  v2:= "MLHandler" @kind object;
  #L38a35a.  v3:= 9I;
  #L38a35e.  call `<init>`(v1, v2, v3) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38a364.  call `start`(v1) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L38a36a.  call temp:= `getLooper`(v1) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L38a370.  v1:= temp @kind object;
  #L38a372.  v2:= new `e.e.e.a.c.g`;
  #L38a376.  call `<init>`(v2, v1) @signature `Le/e/e/a/c/g;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L38a37c.  `@@e.e.e.a.c.g.c` @type ^`e.e.e.a.c.g` := v2 @kind object;
  #L38a380.  v1:= `@@e.e.e.a.c.g.c` @type ^`e.e.e.a.c.g` @kind object;
  #L38a384.  @monitorexit v0
  #L38a386.  return v1 @kind object;
  #L38a388.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38a38a.  @monitorexit v0
  #L38a38c.  throw v1;
  catch `java.lang.Throwable` @[L38a34a..L38a38c] goto L38a388;
}
procedure `java.util.concurrent.Executor` `b`() @signature `Le/e/e/a/c/g;.b:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38a3ac.  v0:= `@@e.e.e.a.c.v.b` @type ^`e.e.e.a.c.v` @kind object;
  #L38a3b0.  return v0 @kind object;
}
procedure `e.e.a.b.j.l` `a`(`e.e.e.a.c.g` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object) @signature `Le/e/e/a/c/g;.a:(Ljava/util/concurrent/Callable;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38a310.  v0:= new `e.e.a.b.j.m`;
  #L38a314.  call `<init>`(v0) @signature `Le/e/a/b/j/m;.<init>:()V` @kind direct;
  #L38a31a.  v1:= new `e.e.e.a.c.u`;
  #L38a31e.  call `<init>`(v1, v3, v0) @signature `Le/e/e/a/c/u;.<init>:(Ljava/util/concurrent/Callable;Le/e/a/b/j/m;)V` @kind direct;
  #L38a324.  call `a`(v2, v1) @signature `Le/e/e/a/c/g;.a:(Ljava/lang/Runnable;)V` @kind virtual;
  #L38a32a.  call temp:= `a`(v0) @signature `Le/e/a/b/j/m;.a:()Le/e/a/b/j/l;` @kind virtual;
  #L38a330.  v3:= temp @kind object;
  #L38a332.  return v3 @kind object;
}
procedure `void` `a`(`e.e.e.a.c.g` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Le/e/e/a/c/g;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a40c.  call temp:= `b`() @signature `Le/e/e/a/c/g;.b:()Ljava/util/concurrent/Executor;` @kind static;
  #L38a412.  v0:= temp @kind object;
  #L38a414.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L38a41a.  return @kind void;
}
