record `e.e.e.a.c.r` @kind class @AccessFlag FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `java.lang.ref.ReferenceQueue` `e.e.e.a.c.r.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `e.e.e.a.c.r.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.a.c.r` v0 @kind this, `java.lang.ref.ReferenceQueue` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Le/e/e/a/c/r;.<init>:(Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38af8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38af92.  v0.`e.e.e.a.c.r.b` @type ^`java.lang.ref.ReferenceQueue` := v1 @kind object;
  #L38af96.  v0.`e.e.e.a.c.r.c` @type ^`java.util.Set` := v2 @kind object;
  #L38af9a.  return @kind void;
}
procedure `void` `run`(`e.e.e.a.c.r` v3 @kind this) @signature `Le/e/e/a/c/r;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L38afac.  v0:= v3.`e.e.e.a.c.r.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L38afb0.  v1:= v3.`e.e.e.a.c.r.c` @type ^`java.util.Set` @kind object;
  #L38afb4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L38afba.  v2:= temp;
  #L38afbc.  if v2 != 0 then goto L38afd8;
  #L38afc0.  call temp:= `remove`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.remove:()Ljava/lang/ref/Reference;` @kind virtual;
  #L38afc6.  v2:= temp @kind object;
  #L38afc8.  v2:= (`e.e.e.a.c.t`) v2 @kind object;
  #L38afcc.  call `a`(v2) @signature `Le/e/e/a/c/a$a;.a:()V` @kind interface;
  #L38afd2.  goto L38afb4;
  #L38afd4.  
  #L38afd6.  goto L38afb4;
  #L38afd8.  return @kind void;
  catch `java.lang.InterruptedException` @[L38afc0..L38afd2] goto L38afd4;
}
