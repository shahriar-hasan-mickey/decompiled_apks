record `e.e.e.a.b.d` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `e.e.e.a.b.d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.e.a.b.d` v3 @kind this, `java.util.Set` v4 @kind object) @signature `Le/e/e/a/b/d;.<init>:(Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L389e68.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389e6e.  v0:= new `java.util.HashMap`;
  #L389e72.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L389e78.  v3.`e.e.e.a.b.d.a` @type ^`java.util.Map` := v0 @kind object;
  #L389e7c.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L389e82.  v4:= temp @kind object;
  #L389e84.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L389e8a.  v0:= temp;
  #L389e8c.  if v0 == 0 then goto L389eb8;
  #L389e90.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L389e96.  v0:= temp @kind object;
  #L389e98.  v0:= (`e.e.e.a.b.d$a`) v0 @kind object;
  #L389e9c.  v1:= v3.`e.e.e.a.b.d.a` @type ^`java.util.Map` @kind object;
  #L389ea0.  call temp:= `a`(v0) @signature `Le/e/e/a/b/d$a;.a:()Ljava/lang/Class;` @kind virtual;
  #L389ea6.  v2:= temp @kind object;
  #L389ea8.  call temp:= `b`(v0) @signature `Le/e/e/a/b/d$a;.b:()Lcom/google/firebase/p/b;` @kind virtual;
  #L389eae.  v0:= temp @kind object;
  #L389eb0.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L389eb6.  goto L389e84;
  #L389eb8.  return @kind void;
}
