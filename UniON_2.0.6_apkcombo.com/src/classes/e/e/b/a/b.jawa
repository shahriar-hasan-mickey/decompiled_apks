record `e.e.b.a.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/b/a/b;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35c89c.  if v0 == 0 then goto L35c8a2;
  #L35c8a0.  return v0 @kind object;
  #L35c8a2.  v0:= new `java.lang.NullPointerException`;
  #L35c8a6.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L35c8ac.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/b/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35c8c0.  if v0 == 0 then goto L35c8c6;
  #L35c8c4.  return v0 @kind object;
  #L35c8c6.  v0:= new `java.lang.NullPointerException`;
  #L35c8ca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35c8d0.  v1:= temp @kind object;
  #L35c8d2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35c8d8.  throw v0;
}
procedure `void` `a`(`boolean` v2 , `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/b/a/b;.a:(ZLjava/lang/String;II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35c8ec.  if v2 == 0 then goto L35c8f2;
  #L35c8f0.  return @kind void;
  #L35c8f2.  v2:= new `java.lang.IllegalArgumentException`;
  #L35c8f6.  v0:= 2I;
  #L35c8f8.  v0:= new `java.lang.Object`[v0];
  #L35c8fc.  v1:= 0I;
  #L35c8fe.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L35c904.  v4:= temp @kind object;
  #L35c906.  v0[v1]:= v4 @kind object;
  #L35c90a.  v4:= 1I;
  #L35c90c.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L35c912.  v5:= temp @kind object;
  #L35c914.  v0[v4]:= v5 @kind object;
  #L35c918.  call temp:= `a`(v3, v0) @signature `Le/e/b/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35c91e.  v3:= temp @kind object;
  #L35c920.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35c926.  throw v2;
}
procedure `void` `a`(`boolean` v2 , `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/b/a/b;.a:(ZLjava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35c938.  if v2 == 0 then goto L35c93e;
  #L35c93c.  return @kind void;
  #L35c93e.  v2:= new `java.lang.IllegalStateException`;
  #L35c942.  v0:= 1I;
  #L35c944.  v0:= new `java.lang.Object`[v0];
  #L35c948.  v1:= 0I;
  #L35c94a.  v0[v1]:= v4 @kind object;
  #L35c94e.  call temp:= `a`(v3, v0) @signature `Le/e/b/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35c954.  v3:= temp @kind object;
  #L35c956.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35c95c.  throw v2;
}
