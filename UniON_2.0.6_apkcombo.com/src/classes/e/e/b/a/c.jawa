record `e.e.b.a.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.Object` v5 @kind object) @signature `Le/e/b/a/c;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35ca74.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35ca7a.  v5:= temp @kind object;
  #L35ca7c.  return v5 @kind object;
  #L35ca7e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L35ca80.  v1:= new `java.lang.StringBuilder`;
  #L35ca84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35ca8a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35ca90.  v2:= temp @kind object;
  #L35ca92.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L35ca98.  v2:= temp @kind object;
  #L35ca9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35caa0.  v2:= 64I;
  #L35caa4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35caaa.  call temp:= `identityHashCode`(v5) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L35cab0.  v5:= temp;
  #L35cab2.  call temp:= `toHexString`(v5) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L35cab8.  v5:= temp @kind object;
  #L35caba.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cac0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35cac6.  v5:= temp @kind object;
  #L35cac8.  v1:= "com.google.common.base.Strings" @kind object;
  #L35cacc.  call temp:= `getLogger`(v1) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L35cad2.  v1:= temp @kind object;
  #L35cad4.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L35cad8.  v3:= new `java.lang.StringBuilder`;
  #L35cadc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35cae2.  v4:= "Exception during lenientFormat for " @kind object;
  #L35cae6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35caec.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35caf2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35caf8.  v3:= temp @kind object;
  #L35cafa.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35cb00.  v1:= new `java.lang.StringBuilder`;
  #L35cb04.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35cb0a.  v2:= "<" @kind object;
  #L35cb0e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cb14.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cb1a.  v5:= " threw " @kind object;
  #L35cb1e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cb24.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35cb2a.  v5:= temp @kind object;
  #L35cb2c.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L35cb32.  v5:= temp @kind object;
  #L35cb34.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cb3a.  v5:= ">" @kind object;
  #L35cb3e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35cb44.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35cb4a.  v5:= temp @kind object;
  #L35cb4c.  return v5 @kind object;
  catch `java.lang.Exception` @[L35ca74..L35ca7c] goto L35ca7e;
}
procedure `java.lang.String` `a`(`java.lang.String` v6 @kind object, `java.lang.Object`[] v7 @kind object) @signature `Le/e/b/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35c970.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35c976.  v6:= temp @kind object;
  #L35c978.  v0:= 0I;
  #L35c97a.  if v7 != 0 then goto L35c98e;
  #L35c97e.  v7:= 1I;
  #L35c980.  v7:= new `java.lang.Object`[v7];
  #L35c984.  v1:= "(Object[])null" @kind object;
  #L35c988.  v7[v0]:= v1 @kind object;
  #L35c98c.  goto L35c9ac;
  #L35c98e.  v1:= 0I;
  #L35c990.  v2:= length @variable v7;
  #L35c992.  if v1 >= v2 then goto L35c9ac;
  #L35c996.  v2:= v7[v1] @kind object;
  #L35c99a.  call temp:= `a`(v2) @signature `Le/e/b/a/c;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35c9a0.  v2:= temp @kind object;
  #L35c9a2.  v7[v1]:= v2 @kind object;
  #L35c9a6.  v1:= v1 + 1;
  #L35c9aa.  goto L35c990;
  #L35c9ac.  v1:= new `java.lang.StringBuilder`;
  #L35c9b0.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L35c9b6.  v2:= temp;
  #L35c9b8.  v3:= length @variable v7;
  #L35c9ba.  v3:= v3 * 16;
  #L35c9be.  v2:= v2 + v3 @kind int;
  #L35c9c0.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L35c9c6.  v2:= 0I;
  #L35c9c8.  v3:= length @variable v7;
  #L35c9ca.  if v0 >= v3 then goto L35ca02;
  #L35c9ce.  v3:= "%s" @kind object;
  #L35c9d2.  call temp:= `indexOf`(v6, v3, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L35c9d8.  v3:= temp;
  #L35c9da.  v4:= -1I;
  #L35c9dc.  if v3 != v4 then goto L35c9e2;
  #L35c9e0.  goto L35ca02;
  #L35c9e2.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L35c9e8.  v2:= v0 + 1;
  #L35c9ec.  v0:= v7[v0] @kind object;
  #L35c9f0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35c9f6.  v0:= v3 + 2;
  #L35c9fa.  v5:= v2;
  #L35c9fc.  v2:= v0;
  #L35c9fe.  v0:= v5;
  #L35ca00.  goto L35c9c8;
  #L35ca02.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L35ca08.  v3:= temp;
  #L35ca0a.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca10.  v6:= length @variable v7;
  #L35ca12.  if v0 >= v6 then goto L35ca5a;
  #L35ca16.  v6:= " [" @kind object;
  #L35ca1a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca20.  v6:= v0 + 1;
  #L35ca24.  v0:= v7[v0] @kind object;
  #L35ca28.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca2e.  v0:= length @variable v7;
  #L35ca30.  if v6 >= v0 then goto L35ca50;
  #L35ca34.  v0:= ", " @kind object;
  #L35ca38.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca3e.  v0:= v6 + 1;
  #L35ca42.  v6:= v7[v6] @kind object;
  #L35ca46.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca4c.  v6:= v0;
  #L35ca4e.  goto L35ca2e;
  #L35ca50.  v6:= 93I;
  #L35ca54.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ca5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35ca60.  v6:= temp @kind object;
  #L35ca62.  return v6 @kind object;
}
