record `e.e.b.b.a.a$c` @kind class @AccessFlag FINAL {
  `boolean` `e.e.b.b.a.a$c.a` @AccessFlag FINAL;
  `java.lang.Throwable` `e.e.b.b.a.a$c.b` @AccessFlag FINAL;
}
global `e.e.b.b.a.a$c` `@@e.e.b.b.a.a$c.c` @AccessFlag STATIC_FINAL;
global `e.e.b.b.a.a$c` `@@e.e.b.b.a.a$c.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/b/b/a/a$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L35cd4c.  call temp:= `f`() @signature `Le/e/b/b/a/a;.f:()Z` @kind static;
  #L35cd52.  v0:= temp;
  #L35cd54.  v1:= 0I;
  #L35cd56.  if v0 == 0 then goto L35cd64;
  #L35cd5a.  `@@e.e.b.b.a.a$c.d` @type ^`e.e.b.b.a.a$c` := v1 @kind object;
  #L35cd5e.  `@@e.e.b.b.a.a$c.c` @type ^`e.e.b.b.a.a$c` := v1 @kind object;
  #L35cd62.  goto L35cd84;
  #L35cd64.  v0:= new `e.e.b.b.a.a$c`;
  #L35cd68.  v2:= 0I;
  #L35cd6a.  call `<init>`(v0, v2, v1) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35cd70.  `@@e.e.b.b.a.a$c.d` @type ^`e.e.b.b.a.a$c` := v0 @kind object;
  #L35cd74.  v0:= new `e.e.b.b.a.a$c`;
  #L35cd78.  v2:= 1I;
  #L35cd7a.  call `<init>`(v0, v2, v1) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35cd80.  `@@e.e.b.b.a.a$c.c` @type ^`e.e.b.b.a.a$c` := v0 @kind object;
  #L35cd84.  return @kind void;
}
procedure `void` `<init>`(`e.e.b.b.a.a$c` v0 @kind this, `boolean` v1 , `java.lang.Throwable` v2 @kind object) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35cd98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35cd9e.  v0.`e.e.b.b.a.a$c.a` @type ^`boolean` := v1 @kind boolean;
  #L35cda2.  v0.`e.e.b.b.a.a$c.b` @type ^`java.lang.Throwable` := v2 @kind object;
  #L35cda6.  return @kind void;
}
