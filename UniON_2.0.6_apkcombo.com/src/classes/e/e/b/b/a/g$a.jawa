record `e.e.b.b.a.g$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.util.concurrent.ThreadFactory` `e.e.b.b.a.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `e.e.b.b.a.g$a.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicLong` `e.e.b.b.a.g$a.c` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Boolean` `e.e.b.b.a.g$a.d` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Integer` `e.e.b.b.a.g$a.e` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Thread$UncaughtExceptionHandler` `e.e.b.b.a.g$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.b.b.a.g$a` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.concurrent.atomic.AtomicLong` v3 @kind object, `java.lang.Boolean` v4 @kind object, `java.lang.Integer` v5 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v6 @kind object) @signature `Le/e/b/b/a/g$a;.<init>:(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35e6b0.  v0.`e.e.b.b.a.g$a.a` @type ^`java.util.concurrent.ThreadFactory` := v1 @kind object;
  #L35e6b4.  v0.`e.e.b.b.a.g$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L35e6b8.  v0.`e.e.b.b.a.g$a.c` @type ^`java.util.concurrent.atomic.AtomicLong` := v3 @kind object;
  #L35e6bc.  v0.`e.e.b.b.a.g$a.d` @type ^`java.lang.Boolean` := v4 @kind object;
  #L35e6c0.  v0.`e.e.b.b.a.g$a.e` @type ^`java.lang.Integer` := v5 @kind object;
  #L35e6c4.  v0.`e.e.b.b.a.g$a.f` @type ^`java.lang.Thread$UncaughtExceptionHandler` := v6 @kind object;
  #L35e6c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e6ce.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`e.e.b.b.a.g$a` v5 @kind this, `java.lang.Runnable` v6 @kind object) @signature `Le/e/b/b/a/g$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35e620.  v0:= v5.`e.e.b.b.a.g$a.a` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L35e624.  call temp:= `newThread`(v0, v6) @signature `Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind interface;
  #L35e62a.  v6:= temp @kind object;
  #L35e62c.  v0:= v5.`e.e.b.b.a.g$a.b` @type ^`java.lang.String` @kind object;
  #L35e630.  if v0 == 0 then goto L35e662;
  #L35e634.  v1:= 1I;
  #L35e636.  v1:= new `java.lang.Object`[v1];
  #L35e63a.  v2:= 0I;
  #L35e63c.  v3:= v5.`e.e.b.b.a.g$a.c` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L35e640.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J` @kind virtual;
  #L35e646.  v3:= temp @kind wide;
  #L35e648.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L35e64e.  v3:= temp @kind object;
  #L35e650.  v1[v2]:= v3 @kind object;
  #L35e654.  call temp:= `a`(v0, v1) @signature `Le/e/b/b/a/g;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35e65a.  v0:= temp @kind object;
  #L35e65c.  call `setName`(v6, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L35e662.  v0:= v5.`e.e.b.b.a.g$a.d` @type ^`java.lang.Boolean` @kind object;
  #L35e666.  if v0 == 0 then goto L35e678;
  #L35e66a.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L35e670.  v0:= temp;
  #L35e672.  call `setDaemon`(v6, v0) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L35e678.  v0:= v5.`e.e.b.b.a.g$a.e` @type ^`java.lang.Integer` @kind object;
  #L35e67c.  if v0 == 0 then goto L35e68e;
  #L35e680.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L35e686.  v0:= temp;
  #L35e688.  call `setPriority`(v6, v0) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L35e68e.  v0:= v5.`e.e.b.b.a.g$a.f` @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind object;
  #L35e692.  if v0 == 0 then goto L35e69c;
  #L35e696.  call `setUncaughtExceptionHandler`(v6, v0) @signature `Ljava/lang/Thread;.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V` @kind virtual;
  #L35e69c.  return v6 @kind object;
}
