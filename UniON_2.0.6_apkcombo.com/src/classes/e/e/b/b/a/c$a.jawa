record `e.e.b.b.a.c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Future` `e.e.b.b.a.c$a.b` @AccessFlag FINAL;
  `e.e.b.b.a.b` `e.e.b.b.a.c$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.b.b.a.c$a` v0 @kind this, `java.util.concurrent.Future` v1 @kind object, `e.e.b.b.a.b` v2 @kind object) @signature `Le/e/b/b/a/c$a;.<init>:(Ljava/util/concurrent/Future;Le/e/b/b/a/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35e4dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e4e2.  v0.`e.e.b.b.a.c$a.b` @type ^`java.util.concurrent.Future` := v1 @kind object;
  #L35e4e6.  v0.`e.e.b.b.a.c$a.c` @type ^`e.e.b.b.a.b` := v2 @kind object;
  #L35e4ea.  return @kind void;
}
procedure `void` `run`(`e.e.b.b.a.c$a` v2 @kind this) @signature `Le/e/b/b/a/c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35e4fc.  v0:= v2.`e.e.b.b.a.c$a.b` @type ^`java.util.concurrent.Future` @kind object;
  #L35e500.  call temp:= `a`(v0) @signature `Le/e/b/b/a/c;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @kind static;
  #L35e506.  v0:= temp @kind object;
  #L35e508.  v1:= v2.`e.e.b.b.a.c$a.c` @type ^`e.e.b.b.a.b` @kind object;
  #L35e50c.  call `a`(v1, v0) @signature `Le/e/b/b/a/b;.a:(Ljava/lang/Object;)V` @kind interface;
  #L35e512.  return @kind void;
  #L35e514.  v0:= Exception @type ^`java.lang.Error` @kind object;
  #L35e516.  goto L35e51a;
  #L35e518.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L35e51a.  v1:= v2.`e.e.b.b.a.c$a.c` @type ^`e.e.b.b.a.b` @kind object;
  #L35e51e.  call `a`(v1, v0) @signature `Le/e/b/b/a/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L35e524.  return @kind void;
  #L35e526.  v0:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L35e528.  v1:= v2.`e.e.b.b.a.c$a.c` @type ^`e.e.b.b.a.b` @kind object;
  #L35e52c.  call temp:= `getCause`(v0) @signature `Ljava/util/concurrent/ExecutionException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L35e532.  v0:= temp @kind object;
  #L35e534.  call `a`(v1, v0) @signature `Le/e/b/b/a/b;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L35e53a.  return @kind void;
  catch `java.util.concurrent.ExecutionException` @[L35e4fc..L35e508] goto L35e526;
  catch `java.lang.RuntimeException` @[L35e4fc..L35e508] goto L35e518;
  catch `java.lang.Error` @[L35e4fc..L35e508] goto L35e514;
}
procedure `java.lang.String` `toString`(`e.e.b.b.a.c$a` v2 @kind this) @signature `Le/e/b/b/a/c$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35e4b0.  call temp:= `a`(v2) @signature `Le/e/b/a/a;.a:(Ljava/lang/Object;)Le/e/b/a/a$b;` @kind static;
  #L35e4b6.  v0:= temp @kind object;
  #L35e4b8.  v1:= v2.`e.e.b.b.a.c$a.c` @type ^`e.e.b.b.a.b` @kind object;
  #L35e4bc.  call temp:= `a`(v0, v1) @signature `Le/e/b/a/a$b;.a:(Ljava/lang/Object;)Le/e/b/a/a$b;` @kind virtual;
  #L35e4c2.  call temp:= `toString`(v0) @signature `Le/e/b/a/a$b;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e4c8.  v0:= temp @kind object;
  #L35e4ca.  return v0 @kind object;
}
