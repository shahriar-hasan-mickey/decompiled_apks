record `e.e.b.b.a.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.b.b.a.i.a` @kind class, `e.e.b.b.a.e` @kind interface {
  `java.lang.Object` `e.e.b.b.a.a.b` @AccessFlag PRIVATE_VOLATILE;
  `e.e.b.b.a.a$e` `e.e.b.b.a.a.c` @AccessFlag PRIVATE_VOLATILE;
  `e.e.b.b.a.a$l` `e.e.b.b.a.a.d` @AccessFlag PRIVATE_VOLATILE;
}
global `boolean` `@@e.e.b.b.a.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@e.e.b.b.a.a.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.b.b.a.a$b` `@@e.e.b.b.a.a.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@e.e.b.b.a.a.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/b/b/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35e078.  v0:= constclass @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e07c.  v1:= "guava.concurrent.generate_cancellation_cause" @kind object;
  #L35e080.  v2:= "false" @kind object;
  #L35e084.  call temp:= `getProperty`(v1, v2) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L35e08a.  v1:= temp @kind object;
  #L35e08c.  call temp:= `parseBoolean`(v1) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L35e092.  v1:= temp;
  #L35e094.  `@@e.e.b.b.a.a.e` @type ^`boolean` := v1 @kind boolean;
  #L35e098.  v1:= constclass @type ^`e.e.b.b.a.a` @kind object;
  #L35e09c.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L35e0a2.  v1:= temp @kind object;
  #L35e0a4.  call temp:= `getLogger`(v1) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L35e0aa.  v1:= temp @kind object;
  #L35e0ac.  `@@e.e.b.b.a.a.f` @type ^`java.util.logging.Logger` := v1 @kind object;
  #L35e0b0.  v1:= 0I;
  #L35e0b2.  v2:= new `e.e.b.b.a.a$k`;
  #L35e0b6.  call `<init>`(v2, v1) @signature `Le/e/b/b/a/a$k;.<init>:(Le/e/b/b/a/a$a;)V` @kind direct;
  #L35e0bc.  v0:= v1 @kind object;
  #L35e0be.  goto L35e13a;
  #L35e0c0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35e0c2.  v9:= new `e.e.b.b.a.a$f`;
  #L35e0c6.  v3:= constclass @type ^`java.lang.Thread` @kind object;
  #L35e0ca.  v4:= "a" @kind object;
  #L35e0ce.  call temp:= `newUpdater`(v0, v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L35e0d4.  v4:= temp @kind object;
  #L35e0d6.  v3:= "b" @kind object;
  #L35e0da.  call temp:= `newUpdater`(v0, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L35e0e0.  v5:= temp @kind object;
  #L35e0e2.  v3:= constclass @type ^`e.e.b.b.a.a` @kind object;
  #L35e0e6.  v6:= "d" @kind object;
  #L35e0ea.  call temp:= `newUpdater`(v3, v0, v6) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L35e0f0.  v6:= temp @kind object;
  #L35e0f2.  v0:= constclass @type ^`e.e.b.b.a.a` @kind object;
  #L35e0f6.  v3:= constclass @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e0fa.  v7:= "c" @kind object;
  #L35e0fe.  call temp:= `newUpdater`(v0, v3, v7) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L35e104.  v7:= temp @kind object;
  #L35e106.  v0:= constclass @type ^`e.e.b.b.a.a` @kind object;
  #L35e10a.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L35e10e.  v8:= "b" @kind object;
  #L35e112.  call temp:= `newUpdater`(v0, v3, v8) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L35e118.  v8:= temp @kind object;
  #L35e11a.  v3:= v9 @kind object;
  #L35e11c.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Le/e/b/b/a/a$f;.<init>:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)V` @kind direct;
  #L35e122.  v0:= v2 @kind object;
  #L35e124.  v2:= v9 @kind object;
  #L35e126.  goto L35e13a;
  #L35e128.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35e12a.  v3:= new `e.e.b.b.a.a$h`;
  #L35e12e.  call `<init>`(v3, v1) @signature `Le/e/b/b/a/a$h;.<init>:(Le/e/b/b/a/a$a;)V` @kind direct;
  #L35e134.  v1:= v0 @kind object;
  #L35e136.  v0:= v2 @kind object;
  #L35e138.  v2:= v3 @kind object;
  #L35e13a.  `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` := v2 @kind object;
  #L35e13e.  v2:= constclass @type ^`java.util.concurrent.locks.LockSupport` @kind object;
  #L35e142.  if v1 == 0 then goto L35e16a;
  #L35e146.  v2:= `@@e.e.b.b.a.a.f` @type ^`java.util.logging.Logger` @kind object;
  #L35e14a.  v3:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L35e14e.  v4:= "UnsafeAtomicHelper is broken!" @kind object;
  #L35e152.  call `log`(v2, v3, v4, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35e158.  v0:= `@@e.e.b.b.a.a.f` @type ^`java.util.logging.Logger` @kind object;
  #L35e15c.  v2:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L35e160.  v3:= "SafeAtomicHelper is broken!" @kind object;
  #L35e164.  call `log`(v0, v2, v3, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35e16a.  v0:= new `java.lang.Object`;
  #L35e16e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e174.  `@@e.e.b.b.a.a.h` @type ^`java.lang.Object` := v0 @kind object;
  #L35e178.  return @kind void;
  catch `java.lang.Throwable` @[L35e0b2..L35e0bc] goto L35e0c0;
  catch `java.lang.Throwable` @[L35e0c2..L35e0ca] goto L35e128;
  catch `java.lang.Throwable` @[L35e0ce..L35e0d6] goto L35e128;
  catch `java.lang.Throwable` @[L35e0da..L35e0e6] goto L35e128;
  catch `java.lang.Throwable` @[L35e0ea..L35e0fa] goto L35e128;
  catch `java.lang.Throwable` @[L35e0fe..L35e10e] goto L35e128;
  catch `java.lang.Throwable` @[L35e112..L35e122] goto L35e128;
}
procedure `void` `<init>`(`e.e.b.b.a.a` v0 @kind this) @signature `Le/e/b/b/a/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L35e1cc.  call `<init>`(v0) @signature `Le/e/b/b/a/i/a;.<init>:()V` @kind direct;
  #L35e1d2.  return @kind void;
}
procedure `e.e.b.b.a.a$e` `a`(`e.e.b.b.a.a` v4 @kind this, `e.e.b.b.a.a$e` v5 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$e;)Le/e/b/b/a/a$e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35d6f8.  v0:= v4.`e.e.b.b.a.a.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35d6fc.  v1:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d700.  v2:= `@@e.e.b.b.a.a$e.d` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35d704.  call temp:= `a`(v1, v4, v0, v2) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$e;Le/e/b/b/a/a$e;)Z` @kind virtual;
  #L35d70a.  v1:= temp;
  #L35d70c.  if v1 == 0 then goto L35d6f8;
  #L35d710.  v3:= v0 @kind object;
  #L35d712.  v0:= v5 @kind object;
  #L35d714.  v5:= v3 @kind object;
  #L35d716.  if v5 == 0 then goto L35d728;
  #L35d71a.  v1:= v5.`e.e.b.b.a.a$e.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35d71e.  v5.`e.e.b.b.a.a$e.c` @type ^`e.e.b.b.a.a$e` := v0 @kind object;
  #L35d722.  v0:= v5 @kind object;
  #L35d724.  v5:= v1 @kind object;
  #L35d726.  goto L35d716;
  #L35d728.  return v0 @kind object;
}
procedure `e.e.b.b.a.a$e` `a`(`e.e.b.b.a.a` v0 @kind object, `e.e.b.b.a.a$e` v1 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$e;)Le/e/b/b/a/a$e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d6e0.  v0.`e.e.b.b.a.a.c` @type ^`e.e.b.b.a.a$e` := v1 @kind object;
  #L35d6e4.  return v1 @kind object;
}
procedure `e.e.b.b.a.a$l` `a`(`e.e.b.b.a.a` v0 @kind object, `e.e.b.b.a.a$l` v1 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$l;)Le/e/b/b/a/a$l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d754.  v0.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` := v1 @kind object;
  #L35d758.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.b.b.a.a` v0 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d76c.  v0:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d770.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.b.b.a.a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d784.  v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L35d788.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.b.b.a.e` v0 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/e;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d79c.  call temp:= `b`(v0) @signature `Le/e/b/b/a/a;.b:(Le/e/b/b/a/e;)Ljava/lang/Object;` @kind static;
  #L35d7a2.  v0:= temp @kind object;
  #L35d7a4.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.util.concurrent.Future` v1 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L35de08.  v0:= 0I;
  #L35de0a.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;` @kind interface;
  #L35de10.  v1:= temp @kind object;
  #L35de12.  if v0 == 0 then goto L35de24;
  #L35de16.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L35de1c.  v0:= temp @kind object;
  #L35de1e.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L35de24.  return v1 @kind object;
  #L35de26.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35de28.  if v0 == 0 then goto L35de3a;
  #L35de2c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L35de32.  v0:= temp @kind object;
  #L35de34.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L35de3a.  throw v1;
  #L35de3c.  v0:= 1I;
  #L35de3e.  goto L35de0a;
  catch `java.lang.InterruptedException` @[L35de0a..L35de12] goto L35de3c;
  catch `java.lang.Throwable` @[L35de0a..L35de12] goto L35de26;
}
procedure `java.util.concurrent.CancellationException` `a`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L35e054.  v0:= new `java.util.concurrent.CancellationException`;
  #L35e058.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e05e.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L35e064.  return v0 @kind object;
}
procedure `void` `a`(`e.e.b.b.a.a` v4 @kind this, `e.e.b.b.a.a$l` v5 @kind object) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$l;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e44c.  v0:= 0I;
  #L35e44e.  v5.`e.e.b.b.a.a$l.a` @type ^`java.lang.Thread` := v0 @kind object;
  #L35e452.  v5:= v4.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e456.  v1:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e45a.  if v5 != v1 then goto L35e460;
  #L35e45e.  return @kind void;
  #L35e460.  v1:= v0 @kind object;
  #L35e462.  if v5 == 0 then goto L35e49e;
  #L35e466.  v2:= v5.`e.e.b.b.a.a$l.b` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e46a.  v3:= v5.`e.e.b.b.a.a$l.a` @type ^`java.lang.Thread` @kind object;
  #L35e46e.  if v3 == 0 then goto L35e476;
  #L35e472.  v1:= v5 @kind object;
  #L35e474.  goto L35e49a;
  #L35e476.  if v1 == 0 then goto L35e488;
  #L35e47a.  v1.`e.e.b.b.a.a$l.b` @type ^`e.e.b.b.a.a$l` := v2 @kind object;
  #L35e47e.  v5:= v1.`e.e.b.b.a.a$l.a` @type ^`java.lang.Thread` @kind object;
  #L35e482.  if v5 != 0 then goto L35e49a;
  #L35e486.  goto L35e452;
  #L35e488.  v3:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35e48c.  call temp:= `a`(v3, v4, v5, v2) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$l;Le/e/b/b/a/a$l;)Z` @kind virtual;
  #L35e492.  v5:= temp;
  #L35e494.  if v5 != 0 then goto L35e49a;
  #L35e498.  goto L35e452;
  #L35e49a.  v5:= v2 @kind object;
  #L35e49c.  goto L35e462;
  #L35e49e.  return @kind void;
}
procedure `void` `a`(`e.e.b.b.a.a` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L35e1fc.  v0:= "]" @kind object;
  #L35e200.  call temp:= `a`(v3) @signature `Le/e/b/b/a/a;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @kind static;
  #L35e206.  v1:= temp @kind object;
  #L35e208.  v2:= "SUCCESS, result=[" @kind object;
  #L35e20c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e212.  call temp:= `c`(v3, v1) @signature `Le/e/b/b/a/a;.c:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L35e218.  v1:= temp @kind object;
  #L35e21a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e220.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e226.  goto L35e26e;
  #L35e228.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L35e22a.  v1:= "UNKNOWN, cause=[" @kind object;
  #L35e22e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e234.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35e23a.  v0:= temp @kind object;
  #L35e23c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e242.  v0:= " thrown from get()]" @kind object;
  #L35e246.  goto L35e268;
  #L35e248.  v0:= "CANCELLED" @kind object;
  #L35e24c.  goto L35e268;
  #L35e24e.  v1:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L35e250.  v2:= "FAILURE, cause=[" @kind object;
  #L35e254.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e25a.  call temp:= `getCause`(v1) @signature `Ljava/util/concurrent/ExecutionException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L35e260.  v1:= temp @kind object;
  #L35e262.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e268.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e26e.  return @kind void;
  catch `java.util.concurrent.ExecutionException` @[L35e200..L35e226] goto L35e24e;
  catch `java.util.concurrent.CancellationException` @[L35e200..L35e226] goto L35e248;
  catch `java.lang.RuntimeException` @[L35e200..L35e226] goto L35e228;
}
procedure `java.lang.Object` `b`(`e.e.b.b.a.e` v6 @kind object) @signature `Le/e/b/b/a/a;.b:(Le/e/b/b/a/e;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35dc68.  v0:= "get() did not throw CancellationException, despite reporting isCancelled() == true: " @kind object;
  #L35dc6c.  v1:= instanceof @variable v6 @type ^`e.e.b.b.a.a$i` @kind boolean;
  #L35dc70.  v2:= 0I;
  #L35dc72.  if v1 == 0 then goto L35dcb0;
  #L35dc76.  v6:= (`e.e.b.b.a.a`) v6 @kind object;
  #L35dc7a.  v6:= v6.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35dc7e.  v0:= instanceof @variable v6 @type ^`e.e.b.b.a.a$c` @kind boolean;
  #L35dc82.  if v0 == 0 then goto L35dcae;
  #L35dc86.  v0:= v6 @kind object;
  #L35dc88.  v0:= (`e.e.b.b.a.a$c`) v0 @kind object;
  #L35dc8c.  v1:= v0.`e.e.b.b.a.a$c.a` @type ^`boolean` @kind boolean;
  #L35dc90.  if v1 == 0 then goto L35dcae;
  #L35dc94.  v6:= v0.`e.e.b.b.a.a$c.b` @type ^`java.lang.Throwable` @kind object;
  #L35dc98.  if v6 == 0 then goto L35dcaa;
  #L35dc9c.  v0:= new `e.e.b.b.a.a$c`;
  #L35dca0.  call `<init>`(v0, v2, v6) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35dca6.  v6:= v0 @kind object;
  #L35dca8.  goto L35dcae;
  #L35dcaa.  v6:= `@@e.e.b.b.a.a$c.d` @type ^`e.e.b.b.a.a$c` @kind object;
  #L35dcae.  return v6 @kind object;
  #L35dcb0.  v1:= instanceof @variable v6 @type ^`e.e.b.b.a.i.a` @kind boolean;
  #L35dcb4.  if v1 == 0 then goto L35dcd6;
  #L35dcb8.  v1:= v6 @kind object;
  #L35dcba.  v1:= (`e.e.b.b.a.i.a`) v1 @kind object;
  #L35dcbe.  call temp:= `a`(v1) @signature `Le/e/b/b/a/i/b;.a:(Le/e/b/b/a/i/a;)Ljava/lang/Throwable;` @kind static;
  #L35dcc4.  v1:= temp @kind object;
  #L35dcc6.  if v1 == 0 then goto L35dcd6;
  #L35dcca.  v6:= new `e.e.b.b.a.a$d`;
  #L35dcce.  call `<init>`(v6, v1) @signature `Le/e/b/b/a/a$d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35dcd4.  return v6 @kind object;
  #L35dcd6.  call temp:= `isCancelled`(v6) @signature `Ljava/util/concurrent/Future;.isCancelled:()Z` @kind interface;
  #L35dcdc.  v1:= temp;
  #L35dcde.  v3:= `@@e.e.b.b.a.a.e` @type ^`boolean` @kind boolean;
  #L35dce2.  v3:= v3 ^~ 1;
  #L35dce6.  v3:= v3 ^& v1 @kind int;
  #L35dce8.  if v3 == 0 then goto L35dcf2;
  #L35dcec.  v6:= `@@e.e.b.b.a.a$c.d` @type ^`e.e.b.b.a.a$c` @kind object;
  #L35dcf0.  return v6 @kind object;
  #L35dcf2.  call temp:= `a`(v6) @signature `Le/e/b/b/a/a;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @kind static;
  #L35dcf8.  v3:= temp @kind object;
  #L35dcfa.  if v1 == 0 then goto L35dd32;
  #L35dcfe.  v3:= new `e.e.b.b.a.a$c`;
  #L35dd02.  v4:= new `java.lang.IllegalArgumentException`;
  #L35dd06.  v5:= new `java.lang.StringBuilder`;
  #L35dd0a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35dd10.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dd16.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dd1c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dd22.  v5:= temp @kind object;
  #L35dd24.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35dd2a.  call `<init>`(v3, v2, v4) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35dd30.  return v3 @kind object;
  #L35dd32.  if v3 != 0 then goto L35dd3a;
  #L35dd36.  v3:= `@@e.e.b.b.a.a.h` @type ^`java.lang.Object` @kind object;
  #L35dd3a.  return v3 @kind object;
  #L35dd3c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35dd3e.  v0:= new `e.e.b.b.a.a$d`;
  #L35dd42.  call `<init>`(v0, v6) @signature `Le/e/b/b/a/a$d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35dd48.  return v0 @kind object;
  #L35dd4a.  v0:= Exception @type ^`java.util.concurrent.CancellationException` @kind object;
  #L35dd4c.  if v1 != 0 then goto L35dd88;
  #L35dd50.  v1:= new `e.e.b.b.a.a$d`;
  #L35dd54.  v2:= new `java.lang.IllegalArgumentException`;
  #L35dd58.  v3:= new `java.lang.StringBuilder`;
  #L35dd5c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35dd62.  v4:= "get() threw CancellationException, despite reporting isCancelled() == false: " @kind object;
  #L35dd66.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dd6c.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dd72.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dd78.  v6:= temp @kind object;
  #L35dd7a.  call `<init>`(v2, v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L35dd80.  call `<init>`(v1, v2) @signature `Le/e/b/b/a/a$d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35dd86.  return v1 @kind object;
  #L35dd88.  v6:= new `e.e.b.b.a.a$c`;
  #L35dd8c.  call `<init>`(v6, v2, v0) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35dd92.  return v6 @kind object;
  #L35dd94.  v3:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L35dd96.  if v1 == 0 then goto L35ddce;
  #L35dd9a.  v1:= new `e.e.b.b.a.a$c`;
  #L35dd9e.  v4:= new `java.lang.IllegalArgumentException`;
  #L35dda2.  v5:= new `java.lang.StringBuilder`;
  #L35dda6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35ddac.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ddb2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35ddb8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35ddbe.  v6:= temp @kind object;
  #L35ddc0.  call `<init>`(v4, v6, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L35ddc6.  call `<init>`(v1, v2, v4) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35ddcc.  return v1 @kind object;
  #L35ddce.  v6:= new `e.e.b.b.a.a$d`;
  #L35ddd2.  call temp:= `getCause`(v3) @signature `Ljava/util/concurrent/ExecutionException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L35ddd8.  v0:= temp @kind object;
  #L35ddda.  call `<init>`(v6, v0) @signature `Le/e/b/b/a/a$d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35dde0.  return v6 @kind object;
  catch `java.util.concurrent.ExecutionException` @[L35dcf2..L35dd3a] goto L35dd94;
  catch `java.util.concurrent.CancellationException` @[L35dcf2..L35dd3a] goto L35dd4a;
  catch `java.lang.Throwable` @[L35dcf2..L35dd3a] goto L35dd3c;
}
procedure `java.lang.Object` `b`(`e.e.b.b.a.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L35dc10.  v0:= instanceof @variable v2 @type ^`e.e.b.b.a.a$c` @kind boolean;
  #L35dc14.  if v0 != 0 then goto L35dc40;
  #L35dc18.  v0:= instanceof @variable v2 @type ^`e.e.b.b.a.a$d` @kind boolean;
  #L35dc1c.  if v0 != 0 then goto L35dc2c;
  #L35dc20.  v0:= `@@e.e.b.b.a.a.h` @type ^`java.lang.Object` @kind object;
  #L35dc24.  if v2 != v0 then goto L35dc2a;
  #L35dc28.  v2:= 0I;
  #L35dc2a.  return v2 @kind object;
  #L35dc2c.  v0:= new `java.util.concurrent.ExecutionException`;
  #L35dc30.  v2:= (`e.e.b.b.a.a$d`) v2 @kind object;
  #L35dc34.  v2:= v2.`e.e.b.b.a.a$d.a` @type ^`java.lang.Throwable` @kind object;
  #L35dc38.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35dc3e.  throw v0;
  #L35dc40.  v2:= (`e.e.b.b.a.a$c`) v2 @kind object;
  #L35dc44.  v2:= v2.`e.e.b.b.a.a$c.b` @type ^`java.lang.Throwable` @kind object;
  #L35dc48.  v0:= "Task was cancelled." @kind object;
  #L35dc4c.  call temp:= `a`(v0, v2) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L35dc52.  v2:= temp @kind object;
  #L35dc54.  throw v2;
}
procedure `void` `b`(`e.e.b.b.a.a` v0 @kind object) @signature `Le/e/b/b/a/a;.b:(Le/e/b/b/a/a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35e1e4.  call `e`(v0) @signature `Le/e/b/b/a/a;.e:(Le/e/b/b/a/a;)V` @kind static;
  #L35e1ea.  return @kind void;
}
procedure `void` `b`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35e390.  call `execute`(v6, v5) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L35e396.  goto L35e3da;
  #L35e398.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L35e39a.  v1:= `@@e.e.b.b.a.a.f` @type ^`java.util.logging.Logger` @kind object;
  #L35e39e.  v2:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L35e3a2.  v3:= new `java.lang.StringBuilder`;
  #L35e3a6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e3ac.  v4:= "RuntimeException while executing runnable " @kind object;
  #L35e3b0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e3b6.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e3bc.  v5:= " with executor " @kind object;
  #L35e3c0.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e3c6.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e3cc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e3d2.  v5:= temp @kind object;
  #L35e3d4.  call `log`(v1, v2, v5, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L35e3da.  return @kind void;
  catch `java.lang.RuntimeException` @[L35e390..L35e396] goto L35e398;
}
procedure `e.e.b.b.a.a$l` `c`(`e.e.b.b.a.a` v0 @kind object) @signature `Le/e/b/b/a/a;.c:(Le/e/b/b/a/a;)Le/e/b/b/a/a$l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d73c.  v0:= v0.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d740.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`e.e.b.b.a.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/b/b/a/a;.c:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;

  #L35dffc.  if v1 != v0 then goto L35e006;
  #L35e000.  v1:= "this future" @kind object;
  #L35e004.  return v1 @kind object;
  #L35e006.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35e00c.  v1:= temp @kind object;
  #L35e00e.  return v1 @kind object;
}
procedure `e.e.b.b.a.a$e` `d`(`e.e.b.b.a.a` v0 @kind object) @signature `Le/e/b/b/a/a;.d:(Le/e/b/b/a/a;)Le/e/b/b/a/a$e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L35d6c8.  v0:= v0.`e.e.b.b.a.a.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35d6cc.  return v0 @kind object;
}
procedure `e.e.b.b.a.a$b` `e`() @signature `Le/e/b/b/a/a;.e:()Le/e/b/b/a/a$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L35d6b0.  v0:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d6b4.  return v0 @kind object;
}
procedure `void` `e`(`e.e.b.b.a.a` v4 @kind object) @signature `Le/e/b/b/a/a;.e:(Le/e/b/b/a/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e318.  v0:= 0I;
  #L35e31a.  call `g`(v4) @signature `Le/e/b/b/a/a;.g:()V` @kind direct;
  #L35e320.  call `b`(v4) @signature `Le/e/b/b/a/a;.b:()V` @kind virtual;
  #L35e326.  call temp:= `a`(v4, v0) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$e;)Le/e/b/b/a/a$e;` @kind direct;
  #L35e32c.  v4:= temp @kind object;
  #L35e32e.  if v4 == 0 then goto L35e37e;
  #L35e332.  v0:= v4.`e.e.b.b.a.a$e.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e336.  v1:= v4.`e.e.b.b.a.a$e.a` @type ^`java.lang.Runnable` @kind object;
  #L35e33a.  v2:= instanceof @variable v1 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35e33e.  if v2 == 0 then goto L35e370;
  #L35e342.  v1:= (`e.e.b.b.a.a$g`) v1 @kind object;
  #L35e346.  v4:= v1.`e.e.b.b.a.a$g.b` @type ^`e.e.b.b.a.a` @kind object;
  #L35e34a.  v2:= v4.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35e34e.  if v2 != v1 then goto L35e37a;
  #L35e352.  v2:= v1.`e.e.b.b.a.a$g.c` @type ^`e.e.b.b.a.e` @kind object;
  #L35e356.  call temp:= `b`(v2) @signature `Le/e/b/b/a/a;.b:(Le/e/b/b/a/e;)Ljava/lang/Object;` @kind static;
  #L35e35c.  v2:= temp @kind object;
  #L35e35e.  v3:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35e362.  call temp:= `a`(v3, v4, v1, v2) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L35e368.  v1:= temp;
  #L35e36a.  if v1 == 0 then goto L35e37a;
  #L35e36e.  goto L35e31a;
  #L35e370.  v4:= v4.`e.e.b.b.a.a$e.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L35e374.  call `b`(v1, v4) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @kind static;
  #L35e37a.  v4:= v0 @kind object;
  #L35e37c.  goto L35e32e;
  #L35e37e.  return @kind void;
}
procedure `boolean` `f`() @signature `Le/e/b/b/a/a;.f:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L35d4fc.  v0:= `@@e.e.b.b.a.a.e` @type ^`boolean` @kind boolean;
  #L35d500.  return v0;
}
procedure `void` `g`(`e.e.b.b.a.a` v3 @kind this) @signature `Le/e/b/b/a/a;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L35e410.  v0:= v3.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e414.  v1:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35e418.  v2:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e41c.  call temp:= `a`(v1, v3, v0, v2) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$l;Le/e/b/b/a/a$l;)Z` @kind virtual;
  #L35e422.  v1:= temp;
  #L35e424.  if v1 == 0 then goto L35e410;
  #L35e428.  if v0 == 0 then goto L35e438;
  #L35e42c.  call `a`(v0) @signature `Le/e/b/b/a/a$l;.a:()V` @kind virtual;
  #L35e432.  v0:= v0.`e.e.b.b.a.a$l.b` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35e436.  goto L35e428;
  #L35e438.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`e.e.b.b.a.a` v2 @kind this) @signature `Le/e/b/b/a/a;.a:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L35e020.  v0:= instanceof @variable v2 @type ^`e.e.b.b.a.a$i` @kind boolean;
  #L35e024.  if v0 == 0 then goto L35e03e;
  #L35e028.  v0:= v2.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35e02c.  v1:= instanceof @variable v0 @type ^`e.e.b.b.a.a$d` @kind boolean;
  #L35e030.  if v1 == 0 then goto L35e03e;
  #L35e034.  v0:= (`e.e.b.b.a.a$d`) v0 @kind object;
  #L35e038.  v0:= v0.`e.e.b.b.a.a$d.a` @type ^`java.lang.Throwable` @kind object;
  #L35e03c.  return v0 @kind object;
  #L35e03e.  v0:= 0I;
  #L35e040.  return v0 @kind object;
}
procedure `void` `a`(`e.e.b.b.a.a` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35e294.  v0:= "Runnable was null." @kind object;
  #L35e298.  call temp:= `a`(v4, v0) @signature `Le/e/b/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e29e.  v0:= "Executor was null." @kind object;
  #L35e2a2.  call temp:= `a`(v5, v0) @signature `Le/e/b/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35e2a8.  call temp:= `isDone`(v3) @signature `Le/e/b/b/a/a;.isDone:()Z` @kind virtual;
  #L35e2ae.  v0:= temp;
  #L35e2b0.  if v0 != 0 then goto L35e2ec;
  #L35e2b4.  v0:= v3.`e.e.b.b.a.a.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e2b8.  v1:= `@@e.e.b.b.a.a$e.d` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e2bc.  if v0 == v1 then goto L35e2ec;
  #L35e2c0.  v1:= new `e.e.b.b.a.a$e`;
  #L35e2c4.  call `<init>`(v1, v4, v5) @signature `Le/e/b/b/a/a$e;.<init>:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L35e2ca.  v1.`e.e.b.b.a.a$e.c` @type ^`e.e.b.b.a.a$e` := v0 @kind object;
  #L35e2ce.  v2:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35e2d2.  call temp:= `a`(v2, v3, v0, v1) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$e;Le/e/b/b/a/a$e;)Z` @kind virtual;
  #L35e2d8.  v0:= temp;
  #L35e2da.  if v0 == 0 then goto L35e2e0;
  #L35e2de.  return @kind void;
  #L35e2e0.  v0:= v3.`e.e.b.b.a.a.c` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e2e4.  v2:= `@@e.e.b.b.a.a$e.d` @type ^`e.e.b.b.a.a$e` @kind object;
  #L35e2e8.  if v0 != v2 then goto L35e2ca;
  #L35e2ec.  call `b`(v4, v5) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @kind static;
  #L35e2f2.  return @kind void;
}
procedure `boolean` `a`(`e.e.b.b.a.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L35d634.  if v3 != 0 then goto L35d63c;
  #L35d638.  v3:= `@@e.e.b.b.a.a.h` @type ^`java.lang.Object` @kind object;
  #L35d63c.  v0:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d640.  v1:= 0I;
  #L35d642.  call temp:= `a`(v0, v2, v1, v3) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L35d648.  v3:= temp;
  #L35d64a.  if v3 == 0 then goto L35d658;
  #L35d64e.  call `e`(v2) @signature `Le/e/b/b/a/a;.e:(Le/e/b/b/a/a;)V` @kind static;
  #L35d654.  v3:= 1I;
  #L35d656.  return v3;
  #L35d658.  v3:= 0I;
  #L35d65a.  return v3;
}
procedure `boolean` `a`(`e.e.b.b.a.a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L35d66c.  v0:= new `e.e.b.b.a.a$d`;
  #L35d670.  call temp:= `a`(v3) @signature `Le/e/b/a/b;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L35d676.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L35d67a.  call `<init>`(v0, v3) @signature `Le/e/b/b/a/a$d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L35d680.  v3:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d684.  v1:= 0I;
  #L35d686.  call temp:= `a`(v3, v2, v1, v0) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L35d68c.  v3:= temp;
  #L35d68e.  if v3 == 0 then goto L35d69c;
  #L35d692.  call `e`(v2) @signature `Le/e/b/b/a/a;.e:(Le/e/b/b/a/a;)V` @kind static;
  #L35d698.  v3:= 1I;
  #L35d69a.  return v3;
  #L35d69c.  v3:= 0I;
  #L35d69e.  return v3;
}
procedure `void` `b`(`e.e.b.b.a.a` v0 @kind this) @signature `Le/e/b/b/a/a;.b:()V` @AccessFlag PROTECTED {
    temp;

  #L35e304.  return @kind void;
}
procedure `void` `c`(`e.e.b.b.a.a` v0 @kind this) @signature `Le/e/b/b/a/a;.c:()V` @AccessFlag PROTECTED {
    temp;

  #L35e3fc.  return @kind void;
}
procedure `boolean` `cancel`(`e.e.b.b.a.a` v7 @kind this, `boolean` v8 ) @signature `Le/e/b/b/a/a;.cancel:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35d514.  v0:= v7.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d518.  v1:= 1I;
  #L35d51a.  v2:= 0I;
  #L35d51c.  if v0 != 0 then goto L35d524;
  #L35d520.  v3:= 1I;
  #L35d522.  goto L35d526;
  #L35d524.  v3:= 0I;
  #L35d526.  v4:= instanceof @variable v0 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d52a.  v3:= v3 ^| v4 @kind int;
  #L35d52c.  if v3 == 0 then goto L35d5d6;
  #L35d530.  v3:= `@@e.e.b.b.a.a.e` @type ^`boolean` @kind boolean;
  #L35d534.  if v3 == 0 then goto L35d552;
  #L35d538.  v3:= new `e.e.b.b.a.a$c`;
  #L35d53c.  v4:= new `java.util.concurrent.CancellationException`;
  #L35d540.  v5:= "Future.cancel() was called." @kind object;
  #L35d544.  call `<init>`(v4, v5) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35d54a.  call `<init>`(v3, v8, v4) @signature `Le/e/b/b/a/a$c;.<init>:(ZLjava/lang/Throwable;)V` @kind direct;
  #L35d550.  goto L35d560;
  #L35d552.  if v8 == 0 then goto L35d55c;
  #L35d556.  v3:= `@@e.e.b.b.a.a$c.c` @type ^`e.e.b.b.a.a$c` @kind object;
  #L35d55a.  goto L35d560;
  #L35d55c.  v3:= `@@e.e.b.b.a.a$c.d` @type ^`e.e.b.b.a.a$c` @kind object;
  #L35d560.  v5:= 0I;
  #L35d562.  v4:= v0 @kind object;
  #L35d564.  v0:= v7 @kind object;
  #L35d566.  v6:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d56a.  call temp:= `a`(v6, v0, v4, v3) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L35d570.  v6:= temp;
  #L35d572.  if v6 == 0 then goto L35d5c6;
  #L35d576.  if v8 == 0 then goto L35d580;
  #L35d57a.  call `c`(v0) @signature `Le/e/b/b/a/a;.c:()V` @kind virtual;
  #L35d580.  call `e`(v0) @signature `Le/e/b/b/a/a;.e:(Le/e/b/b/a/a;)V` @kind static;
  #L35d586.  v0:= instanceof @variable v4 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d58a.  if v0 == 0 then goto L35d5d8;
  #L35d58e.  v4:= (`e.e.b.b.a.a$g`) v4 @kind object;
  #L35d592.  v0:= v4.`e.e.b.b.a.a$g.c` @type ^`e.e.b.b.a.e` @kind object;
  #L35d596.  v4:= instanceof @variable v0 @type ^`e.e.b.b.a.a$i` @kind boolean;
  #L35d59a.  if v4 == 0 then goto L35d5be;
  #L35d59e.  v0:= (`e.e.b.b.a.a`) v0 @kind object;
  #L35d5a2.  v4:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d5a6.  if v4 != 0 then goto L35d5ae;
  #L35d5aa.  v5:= 1I;
  #L35d5ac.  goto L35d5b0;
  #L35d5ae.  v5:= 0I;
  #L35d5b0.  v6:= instanceof @variable v4 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d5b4.  v5:= v5 ^| v6 @kind int;
  #L35d5b6.  if v5 == 0 then goto L35d5d8;
  #L35d5ba.  v5:= 1I;
  #L35d5bc.  goto L35d566;
  #L35d5be.  call temp:= `cancel`(v0, v8) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L35d5c4.  goto L35d5d8;
  #L35d5c6.  v4:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d5ca.  v6:= instanceof @variable v4 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d5ce.  if v6 != 0 then goto L35d566;
  #L35d5d2.  v1:= v5;
  #L35d5d4.  goto L35d5d8;
  #L35d5d6.  v1:= 0I;
  #L35d5d8.  return v1;
}
procedure `java.lang.String` `d`(`e.e.b.b.a.a` v3 @kind this) @signature `Le/e/b/b/a/a;.d:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L35de60.  v0:= v3.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35de64.  v1:= instanceof @variable v0 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35de68.  if v1 == 0 then goto L35deaa;
  #L35de6c.  v1:= new `java.lang.StringBuilder`;
  #L35de70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35de76.  v2:= "setFuture=[" @kind object;
  #L35de7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35de80.  v0:= (`e.e.b.b.a.a$g`) v0 @kind object;
  #L35de84.  v0:= v0.`e.e.b.b.a.a$g.c` @type ^`e.e.b.b.a.e` @kind object;
  #L35de88.  call temp:= `c`(v3, v0) @signature `Le/e/b/b/a/a;.c:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L35de8e.  v0:= temp @kind object;
  #L35de90.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35de96.  v0:= "]" @kind object;
  #L35de9a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dea0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dea6.  v0:= temp @kind object;
  #L35dea8.  return v0 @kind object;
  #L35deaa.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.ScheduledFuture` @kind boolean;
  #L35deae.  if v0 == 0 then goto L35def2;
  #L35deb2.  v0:= new `java.lang.StringBuilder`;
  #L35deb6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35debc.  v1:= "remaining delay=[" @kind object;
  #L35dec0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dec6.  v1:= v3 @kind object;
  #L35dec8.  v1:= (`java.util.concurrent.ScheduledFuture`) v1 @kind object;
  #L35decc.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35ded0.  call temp:= `getDelay`(v1, v2) @signature `Ljava/util/concurrent/ScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J` @kind interface;
  #L35ded6.  v1:= temp @kind wide;
  #L35ded8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dede.  v1:= " ms]" @kind object;
  #L35dee2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dee8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35deee.  v0:= temp @kind object;
  #L35def0.  return v0 @kind object;
  #L35def2.  v0:= 0I;
  #L35def4.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.b.b.a.a` v6 @kind this) @signature `Le/e/b/b/a/a;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35d7b8.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L35d7be.  v0:= temp;
  #L35d7c0.  if v0 != 0 then goto L35d87a;
  #L35d7c4.  v0:= v6.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d7c8.  v1:= 0I;
  #L35d7ca.  v2:= 1I;
  #L35d7cc.  if v0 == 0 then goto L35d7d4;
  #L35d7d0.  v3:= 1I;
  #L35d7d2.  goto L35d7d6;
  #L35d7d4.  v3:= 0I;
  #L35d7d6.  v4:= instanceof @variable v0 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d7da.  v4:= v4 ^~ v2 @kind int;
  #L35d7dc.  v3:= v3 ^& v4 @kind int;
  #L35d7de.  if v3 == 0 then goto L35d7ec;
  #L35d7e2.  call temp:= `b`(v6, v0) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d7e8.  v0:= temp @kind object;
  #L35d7ea.  return v0 @kind object;
  #L35d7ec.  v0:= v6.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d7f0.  v3:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d7f4.  if v0 == v3 then goto L35d86c;
  #L35d7f8.  v3:= new `e.e.b.b.a.a$l`;
  #L35d7fc.  call `<init>`(v3) @signature `Le/e/b/b/a/a$l;.<init>:()V` @kind direct;
  #L35d802.  call `a`(v3, v0) @signature `Le/e/b/b/a/a$l;.a:(Le/e/b/b/a/a$l;)V` @kind virtual;
  #L35d808.  v4:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d80c.  call temp:= `a`(v4, v6, v0, v3) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$l;Le/e/b/b/a/a$l;)Z` @kind virtual;
  #L35d812.  v0:= temp;
  #L35d814.  if v0 == 0 then goto L35d860;
  #L35d818.  call `park`(v6) @signature `Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V` @kind static;
  #L35d81e.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L35d824.  v0:= temp;
  #L35d826.  if v0 != 0 then goto L35d84e;
  #L35d82a.  v0:= v6.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d82e.  if v0 == 0 then goto L35d836;
  #L35d832.  v4:= 1I;
  #L35d834.  goto L35d838;
  #L35d836.  v4:= 0I;
  #L35d838.  v5:= instanceof @variable v0 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d83c.  v5:= v5 ^~ v2 @kind int;
  #L35d83e.  v4:= v4 ^& v5 @kind int;
  #L35d840.  if v4 == 0 then goto L35d818;
  #L35d844.  call temp:= `b`(v6, v0) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d84a.  v0:= temp @kind object;
  #L35d84c.  return v0 @kind object;
  #L35d84e.  call `a`(v6, v3) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$l;)V` @kind direct;
  #L35d854.  v0:= new `java.lang.InterruptedException`;
  #L35d858.  call `<init>`(v0) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L35d85e.  throw v0;
  #L35d860.  v0:= v6.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d864.  v4:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d868.  if v0 != v4 then goto L35d802;
  #L35d86c.  v0:= v6.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d870.  call temp:= `b`(v6, v0) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d876.  v0:= temp @kind object;
  #L35d878.  return v0 @kind object;
  #L35d87a.  v0:= new `java.lang.InterruptedException`;
  #L35d87e.  call `<init>`(v0) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L35d884.  throw v0;
}
procedure `java.lang.Object` `get`(`e.e.b.b.a.a` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Le/e/b/b/a/a;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L35d898.  v0:= v19 @kind object;
  #L35d89c.  v1:= v20 @kind wide;
  #L35d8a0.  v3:= v22 @kind object;
  #L35d8a4.  call temp:= `toNanos`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L35d8aa.  v4:= temp @kind wide;
  #L35d8ac.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L35d8b2.  v6:= temp;
  #L35d8b4.  if v6 != 0 then goto L35dbf4;
  #L35d8b8.  v6:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d8bc.  v8:= 1I;
  #L35d8be.  if v6 == 0 then goto L35d8c6;
  #L35d8c2.  v9:= 1I;
  #L35d8c4.  goto L35d8c8;
  #L35d8c6.  v9:= 0I;
  #L35d8c8.  v10:= instanceof @variable v6 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d8cc.  v10:= v10 ^~ v8 @kind int;
  #L35d8ce.  v9:= v9 ^& v10 @kind int;
  #L35d8d0.  if v9 == 0 then goto L35d8de;
  #L35d8d4.  call temp:= `b`(v0, v6) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d8da.  v1:= temp @kind object;
  #L35d8dc.  return v1 @kind object;
  #L35d8de.  v9:= 0L;
  #L35d8e2.  v6:= lcmp(v4, v9);
  #L35d8e6.  if v6 <= 0 then goto L35d8f6;
  #L35d8ea.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L35d8f0.  v11:= temp @kind wide;
  #L35d8f2.  v11:= v11 + v4 @kind long;
  #L35d8f4.  goto L35d8f8;
  #L35d8f6.  v11:= v9 @kind wide;
  #L35d8f8.  v13:= 1000L;
  #L35d8fc.  v6:= lcmp(v4, v13);
  #L35d900.  if v6 < 0 then goto L35d9ae;
  #L35d904.  v6:= v0.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d908.  v15:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d90c.  if v6 == v15 then goto L35d9a0;
  #L35d910.  v15:= new `e.e.b.b.a.a$l`;
  #L35d914.  call `<init>`(v15) @signature `Le/e/b/b/a/a$l;.<init>:()V` @kind direct;
  #L35d91a.  call `a`(v15, v6) @signature `Le/e/b/b/a/a$l;.a:(Le/e/b/b/a/a$l;)V` @kind virtual;
  #L35d920.  v7:= `@@e.e.b.b.a.a.g` @type ^`e.e.b.b.a.a$b` @kind object;
  #L35d924.  call temp:= `a`(v7, v0, v6, v15) @signature `Le/e/b/b/a/a$b;.a:(Le/e/b/b/a/a;Le/e/b/b/a/a$l;Le/e/b/b/a/a$l;)Z` @kind virtual;
  #L35d92a.  v6:= temp;
  #L35d92c.  if v6 == 0 then goto L35d994;
  #L35d930.  call `parkNanos`(v0, v4) @signature `Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V` @kind static;
  #L35d936.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L35d93c.  v4:= temp;
  #L35d93e.  if v4 != 0 then goto L35d982;
  #L35d942.  v4:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d946.  if v4 == 0 then goto L35d94e;
  #L35d94a.  v5:= 1I;
  #L35d94c.  goto L35d950;
  #L35d94e.  v5:= 0I;
  #L35d950.  v6:= instanceof @variable v4 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d954.  v6:= v6 ^~ v8 @kind int;
  #L35d956.  v5:= v5 ^& v6 @kind int;
  #L35d958.  if v5 == 0 then goto L35d966;
  #L35d95c.  call temp:= `b`(v0, v4) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d962.  v1:= temp @kind object;
  #L35d964.  return v1 @kind object;
  #L35d966.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L35d96c.  v4:= temp @kind wide;
  #L35d96e.  v4:= v11 - v4 @kind long;
  #L35d972.  v6:= lcmp(v4, v13);
  #L35d976.  if v6 >= 0 then goto L35d930;
  #L35d97a.  call `a`(v0, v15) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$l;)V` @kind direct;
  #L35d980.  goto L35d9ae;
  #L35d982.  call `a`(v0, v15) @signature `Le/e/b/b/a/a;.a:(Le/e/b/b/a/a$l;)V` @kind direct;
  #L35d988.  v1:= new `java.lang.InterruptedException`;
  #L35d98c.  call `<init>`(v1) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L35d992.  throw v1;
  #L35d994.  v6:= v0.`e.e.b.b.a.a.d` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d998.  v7:= `@@e.e.b.b.a.a$l.c` @type ^`e.e.b.b.a.a$l` @kind object;
  #L35d99c.  if v6 != v7 then goto L35d91a;
  #L35d9a0.  v1:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d9a4.  call temp:= `b`(v0, v1) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d9aa.  v1:= temp @kind object;
  #L35d9ac.  return v1 @kind object;
  #L35d9ae.  v6:= lcmp(v4, v9);
  #L35d9b2.  if v6 <= 0 then goto L35da00;
  #L35d9b6.  v4:= v0.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d9ba.  if v4 == 0 then goto L35d9c2;
  #L35d9be.  v5:= 1I;
  #L35d9c0.  goto L35d9c4;
  #L35d9c2.  v5:= 0I;
  #L35d9c4.  v6:= instanceof @variable v4 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d9c8.  v6:= v6 ^~ v8 @kind int;
  #L35d9ca.  v5:= v5 ^& v6 @kind int;
  #L35d9cc.  if v5 == 0 then goto L35d9da;
  #L35d9d0.  call temp:= `b`(v0, v4) @signature `Le/e/b/b/a/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L35d9d6.  v1:= temp @kind object;
  #L35d9d8.  return v1 @kind object;
  #L35d9da.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L35d9e0.  v4:= temp;
  #L35d9e2.  if v4 != 0 then goto L35d9f4;
  #L35d9e6.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L35d9ec.  v4:= temp @kind wide;
  #L35d9ee.  v4:= v11 - v4 @kind long;
  #L35d9f2.  goto L35d9ae;
  #L35d9f4.  v1:= new `java.lang.InterruptedException`;
  #L35d9f8.  call `<init>`(v1) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L35d9fe.  throw v1;
  #L35da00.  call temp:= `toString`(v19) @signature `Le/e/b/b/a/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L35da06.  v6:= temp @kind object;
  #L35da08.  call temp:= `toString`(v22) @signature `Ljava/util/concurrent/TimeUnit;.toString:()Ljava/lang/String;` @kind virtual;
  #L35da0e.  v7:= temp @kind object;
  #L35da10.  v11:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L35da14.  call temp:= `toLowerCase`(v7, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L35da1a.  v7:= temp @kind object;
  #L35da1c.  v11:= new `java.lang.StringBuilder`;
  #L35da20.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35da26.  v12:= "Waited " @kind object;
  #L35da2a.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da30.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da36.  v1:= " " @kind object;
  #L35da3a.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da40.  call temp:= `toString`(v22) @signature `Ljava/util/concurrent/TimeUnit;.toString:()Ljava/lang/String;` @kind virtual;
  #L35da46.  v2:= temp @kind object;
  #L35da48.  v12:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L35da4c.  call temp:= `toLowerCase`(v2, v12) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L35da52.  v2:= temp @kind object;
  #L35da54.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da5a.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35da60.  v2:= temp @kind object;
  #L35da62.  v11:= v4 + v13 @kind long;
  #L35da66.  v15:= lcmp(v11, v9);
  #L35da6a.  if v15 >= 0 then goto L35db86;
  #L35da6e.  v11:= new `java.lang.StringBuilder`;
  #L35da72.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35da78.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da7e.  v2:= " (plus " @kind object;
  #L35da82.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35da88.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35da8e.  v2:= temp @kind object;
  #L35da90.  v4:= -v4 @kind long;
  #L35da92.  v11:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35da96.  call temp:= `convert`(v3, v4, v11) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L35da9c.  v11:= temp @kind wide;
  #L35da9e.  call temp:= `toNanos`(v3, v11) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L35daa4.  v17:= temp @kind wide;
  #L35daa6.  v4:= v4 - v17 @kind long;
  #L35daaa.  v3:= lcmp(v11, v9);
  #L35daae.  if v3 == 0 then goto L35dac2;
  #L35dab2.  v9:= lcmp(v4, v13);
  #L35dab6.  if v9 <= 0 then goto L35dabc;
  #L35daba.  goto L35dac2;
  #L35dabc.  v16:= 0I;
  #L35dac0.  goto L35dac6;
  #L35dac2.  v16:= 1I;
  #L35dac6.  if v3 <= 0 then goto L35db38;
  #L35daca.  v3:= new `java.lang.StringBuilder`;
  #L35dace.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35dad4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dada.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dae0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dae6.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35daec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35daf2.  v2:= temp @kind object;
  #L35daf4.  if v16 == 0 then goto L35db1a;
  #L35daf8.  v3:= new `java.lang.StringBuilder`;
  #L35dafc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35db02.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db08.  v2:= "," @kind object;
  #L35db0c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db12.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35db18.  v2:= temp @kind object;
  #L35db1a.  v3:= new `java.lang.StringBuilder`;
  #L35db1e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35db24.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db2a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db30.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35db36.  v2:= temp @kind object;
  #L35db38.  if v16 == 0 then goto L35db64;
  #L35db3c.  v1:= new `java.lang.StringBuilder`;
  #L35db40.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35db46.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db4c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db52.  v2:= " nanoseconds " @kind object;
  #L35db56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db5c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35db62.  v2:= temp @kind object;
  #L35db64.  v1:= new `java.lang.StringBuilder`;
  #L35db68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35db6e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db74.  v2:= "delay)" @kind object;
  #L35db78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35db7e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35db84.  v2:= temp @kind object;
  #L35db86.  call temp:= `isDone`(v19) @signature `Le/e/b/b/a/a;.isDone:()Z` @kind virtual;
  #L35db8c.  v1:= temp;
  #L35db8e.  if v1 == 0 then goto L35dbc0;
  #L35db92.  v1:= new `java.util.concurrent.TimeoutException`;
  #L35db96.  v3:= new `java.lang.StringBuilder`;
  #L35db9a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35dba0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dba6.  v2:= " but future completed as timeout expired" @kind object;
  #L35dbaa.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dbb0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dbb6.  v2:= temp @kind object;
  #L35dbb8.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35dbbe.  throw v1;
  #L35dbc0.  v1:= new `java.util.concurrent.TimeoutException`;
  #L35dbc4.  v3:= new `java.lang.StringBuilder`;
  #L35dbc8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35dbce.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dbd4.  v2:= " for " @kind object;
  #L35dbd8.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dbde.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dbe4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dbea.  v2:= temp @kind object;
  #L35dbec.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35dbf2.  throw v1;
  #L35dbf4.  v1:= new `java.lang.InterruptedException`;
  #L35dbf8.  call `<init>`(v1) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L35dbfe.  throw v1;
}
procedure `boolean` `isCancelled`(`e.e.b.b.a.a` v1 @kind this) @signature `Le/e/b/b/a/a;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35d5ec.  v0:= v1.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d5f0.  v0:= instanceof @variable v0 @type ^`e.e.b.b.a.a$c` @kind boolean;
  #L35d5f4.  return v0;
}
procedure `boolean` `isDone`(`e.e.b.b.a.a` v3 @kind this) @signature `Le/e/b/b/a/a;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35d608.  v0:= v3.`e.e.b.b.a.a.b` @type ^`java.lang.Object` @kind object;
  #L35d60c.  v1:= 1I;
  #L35d60e.  if v0 == 0 then goto L35d616;
  #L35d612.  v2:= 1I;
  #L35d614.  goto L35d618;
  #L35d616.  v2:= 0I;
  #L35d618.  v0:= instanceof @variable v0 @type ^`e.e.b.b.a.a$g` @kind boolean;
  #L35d61c.  v0:= v0 ^~ v1 @kind int;
  #L35d61e.  v0:= v0 ^& v2 @kind int;
  #L35d620.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.b.b.a.a` v5 @kind this) @signature `Le/e/b/b/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35df08.  v0:= new `java.lang.StringBuilder`;
  #L35df0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35df12.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L35df18.  v1:= temp @kind object;
  #L35df1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35df20.  v1:= "[status=" @kind object;
  #L35df24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35df2a.  call temp:= `isCancelled`(v5) @signature `Le/e/b/b/a/a;.isCancelled:()Z` @kind virtual;
  #L35df30.  v1:= temp;
  #L35df32.  v2:= "]" @kind object;
  #L35df36.  if v1 == 0 then goto L35df46;
  #L35df3a.  v1:= "CANCELLED" @kind object;
  #L35df3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35df44.  goto L35dfcc;
  #L35df46.  call temp:= `isDone`(v5) @signature `Le/e/b/b/a/a;.isDone:()Z` @kind virtual;
  #L35df4c.  v1:= temp;
  #L35df4e.  if v1 == 0 then goto L35df5a;
  #L35df52.  call `a`(v5, v0) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L35df58.  goto L35dfcc;
  #L35df5a.  call temp:= `d`(v5) @signature `Le/e/b/b/a/a;.d:()Ljava/lang/String;` @kind virtual;
  #L35df60.  v1:= temp @kind object;
  #L35df62.  goto L35df90;
  #L35df64.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L35df66.  v3:= new `java.lang.StringBuilder`;
  #L35df6a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35df70.  v4:= "Exception thrown from implementation: " @kind object;
  #L35df74.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35df7a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L35df80.  v1:= temp @kind object;
  #L35df82.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35df88.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35df8e.  v1:= temp @kind object;
  #L35df90.  if v1 == 0 then goto L35dfb8;
  #L35df94.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L35df9a.  v3:= temp;
  #L35df9c.  if v3 != 0 then goto L35dfb8;
  #L35dfa0.  v3:= "PENDING, info=[" @kind object;
  #L35dfa4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dfaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dfb0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dfb6.  goto L35dfcc;
  #L35dfb8.  call temp:= `isDone`(v5) @signature `Le/e/b/b/a/a;.isDone:()Z` @kind virtual;
  #L35dfbe.  v1:= temp;
  #L35dfc0.  if v1 == 0 then goto L35dfc6;
  #L35dfc4.  goto L35df52;
  #L35dfc6.  v1:= "PENDING" @kind object;
  #L35dfca.  goto L35df3e;
  #L35dfcc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35dfd2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35dfd8.  v0:= temp @kind object;
  #L35dfda.  return v0 @kind object;
  catch `java.lang.RuntimeException` @[L35df5a..L35df62] goto L35df64;
}
