record `e.e.b.b.a.h` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.util.concurrent.Future` v1 @kind object) @signature `Le/e/b/b/a/h;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35e840.  v0:= 0I;
  #L35e842.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;` @kind interface;
  #L35e848.  v1:= temp @kind object;
  #L35e84a.  if v0 == 0 then goto L35e85c;
  #L35e84e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L35e854.  v0:= temp @kind object;
  #L35e856.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L35e85c.  return v1 @kind object;
  #L35e85e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35e860.  if v0 == 0 then goto L35e872;
  #L35e864.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L35e86a.  v0:= temp @kind object;
  #L35e86c.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L35e872.  throw v1;
  #L35e874.  v0:= 1I;
  #L35e876.  goto L35e842;
  catch `java.lang.InterruptedException` @[L35e842..L35e84a] goto L35e874;
  catch `java.lang.Throwable` @[L35e842..L35e84a] goto L35e85e;
}
