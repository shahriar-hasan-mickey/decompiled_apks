record `e.e.b.b.a.a$j` @kind class @AccessFlag ABSTRACT extends `e.e.b.b.a.a` @kind class, `e.e.b.b.a.a$i` @kind interface {
}
procedure `void` `<init>`(`e.e.b.b.a.a$j` v0 @kind this) @signature `Le/e/b/b/a/a$j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35d158.  call `<init>`(v0) @signature `Le/e/b/b/a/a;.<init>:()V` @kind direct;
  #L35d15e.  return @kind void;
}
procedure `void` `a`(`e.e.b.b.a.a$j` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Le/e/b/b/a/a$j;.a:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L35d170.  call `a`(v0, v1, v2) @signature `Le/e/b/b/a/a;.a:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @kind super;
  #L35d176.  return @kind void;
}
procedure `boolean` `cancel`(`e.e.b.b.a.a$j` v0 @kind this, `boolean` v1 ) @signature `Le/e/b/b/a/a$j;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L35d0cc.  call temp:= `cancel`(v0, v1) @signature `Le/e/b/b/a/a;.cancel:(Z)Z` @kind super;
  #L35d0d2.  v1:= temp;
  #L35d0d4.  return v1;
}
procedure `java.lang.Object` `get`(`e.e.b.b.a.a$j` v1 @kind this) @signature `Le/e/b/b/a/a$j;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L35d120.  call temp:= `get`(v1) @signature `Le/e/b/b/a/a;.get:()Ljava/lang/Object;` @kind super;
  #L35d126.  v0:= temp @kind object;
  #L35d128.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.b.b.a.a$j` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Le/e/b/b/a/a$j;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L35d13c.  call temp:= `get`(v0, v1, v3) @signature `Le/e/b/b/a/a;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @kind super;
  #L35d142.  v1:= temp @kind object;
  #L35d144.  return v1 @kind object;
}
procedure `boolean` `isCancelled`(`e.e.b.b.a.a$j` v1 @kind this) @signature `Le/e/b/b/a/a$j;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L35d0e8.  call temp:= `isCancelled`(v1) @signature `Le/e/b/b/a/a;.isCancelled:()Z` @kind super;
  #L35d0ee.  v0:= temp;
  #L35d0f0.  return v0;
}
procedure `boolean` `isDone`(`e.e.b.b.a.a$j` v1 @kind this) @signature `Le/e/b/b/a/a$j;.isDone:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L35d104.  call temp:= `isDone`(v1) @signature `Le/e/b/b/a/a;.isDone:()Z` @kind super;
  #L35d10a.  v0:= temp;
  #L35d10c.  return v0;
}
