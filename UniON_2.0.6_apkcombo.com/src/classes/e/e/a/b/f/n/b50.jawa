record `e.e.a.b.f.n.b50` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int`[] `@@e.e.a.b.f.n.b50.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/b50;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ba2a4.  call temp:= `a`() @signature `Le/e/a/b/f/n/s1;.a:()[I` @kind static;
  #L2ba2aa.  v0:= 7I;
  #L2ba2ac.  v1:= new `int`[v0];
  #L2ba2b0.  `@@e.e.a.b.f.n.b50.a` @type ^`int`[] := v1 @kind object;
  #L2ba2b4.  v1:= 1I;
  #L2ba2b6.  v2:= 3I;
  #L2ba2b8.  v3:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2bc.  v3[v2]:= v1;
  #L2ba2c0.  v3:= 2I;
  #L2ba2c2.  v4:= 4I;
  #L2ba2c4.  v5:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2c8.  v5[v4]:= v3;
  #L2ba2cc.  v5:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2d0.  v5[v3]:= v2;
  #L2ba2d4.  v2:= 5I;
  #L2ba2d6.  v3:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2da.  v3[v2]:= v4;
  #L2ba2de.  v3:= 6I;
  #L2ba2e0.  v4:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2e4.  v4[v3]:= v2;
  #L2ba2e8.  v2:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2ec.  v4:= 0I;
  #L2ba2ee.  v2[v4]:= v3;
  #L2ba2f2.  v2:= `@@e.e.a.b.f.n.b50.a` @type ^`int`[] @kind object;
  #L2ba2f6.  v2[v1]:= v0;
  #L2ba2fa.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L2ba2b8..L2ba2c0] goto L2ba2c0;
  catch `java.lang.NoSuchFieldError` @[L2ba2c4..L2ba2cc] goto L2ba2cc;
  catch `java.lang.NoSuchFieldError` @[L2ba2cc..L2ba2d4] goto L2ba2d4;
  catch `java.lang.NoSuchFieldError` @[L2ba2d6..L2ba2de] goto L2ba2de;
  catch `java.lang.NoSuchFieldError` @[L2ba2e0..L2ba2e8] goto L2ba2e8;
  catch `java.lang.NoSuchFieldError` @[L2ba2e8..L2ba2f2] goto L2ba2f2;
  catch `java.lang.NoSuchFieldError` @[L2ba2f2..L2ba2fa] goto L2ba2fa;
}
