record `e.e.a.b.f.l.q7` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.l.m7` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `e.e.a.b.f.l.y7` `@@e.e.a.b.f.l.q7.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/l/q7;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2630b8.  v0:= new `e.e.a.b.f.l.o7`;
  #L2630bc.  v1:= `@@e.e.a.b.f.l.u7.f` @type ^`e.e.a.b.f.l.q7` @kind object;
  #L2630c0.  v2:= 0I;
  #L2630c2.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/l/o7;.<init>:(Le/e/a/b/f/l/q7;I)V` @kind direct;
  #L2630c8.  `@@e.e.a.b.f.l.q7.c` @type ^`e.e.a.b.f.l.y7` := v0 @kind object;
  #L2630cc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.l.q7` v0 @kind this) @signature `Le/e/a/b/f/l/q7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2630e0.  call `<init>`(v0) @signature `Le/e/a/b/f/l/m7;.<init>:()V` @kind direct;
  #L2630e6.  return @kind void;
}
procedure `e.e.a.b.f.l.q7` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/l/q7;.a:(Ljava/lang/Object;)Le/e/a/b/f/l/q7;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L262e74.  v0:= 1I;
  #L262e76.  v1:= new `java.lang.Object`[v0];
  #L262e7a.  v2:= 0I;
  #L262e7c.  v1[v2]:= v3 @kind object;
  #L262e80.  v3:= v1[v2] @kind object;
  #L262e84.  call temp:= `a`(v3, v2) @signature `Le/e/a/b/f/l/t7;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L262e8a.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/l/q7;.b:([Ljava/lang/Object;I)Le/e/a/b/f/l/q7;` @kind static;
  #L262e90.  v3:= temp @kind object;
  #L262e92.  return v3 @kind object;
}
procedure `e.e.a.b.f.l.q7` `b`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/l/q7;.b:([Ljava/lang/Object;I)Le/e/a/b/f/l/q7;` @AccessFlag STATIC {
    temp;
    v0;

  #L262ea4.  if v2 != 0 then goto L262eae;
  #L262ea8.  v1:= `@@e.e.a.b.f.l.u7.f` @type ^`e.e.a.b.f.l.q7` @kind object;
  #L262eac.  return v1 @kind object;
  #L262eae.  v0:= new `e.e.a.b.f.l.u7`;
  #L262eb2.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/l/u7;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L262eb8.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.l.q7` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/l/q7;.a:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L262fdc.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L262fe2.  v4:= temp;
  #L262fe4.  v0:= 0I;
  #L262fe6.  if v0 >= v4 then goto L262ffc;
  #L262fea.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262ff0.  v1:= temp @kind object;
  #L262ff2.  v3[v0]:= v1 @kind object;
  #L262ff6.  v0:= v0 + 1;
  #L262ffa.  goto L262fe6;
  #L262ffc.  return v4;
}
procedure `e.e.a.b.f.l.q7` `a`(`e.e.a.b.f.l.q7` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/l/q7;.a:(II)Le/e/a/b/f/l/q7;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L262e30.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L262e36.  v0:= temp;
  #L262e38.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/l/f4;.a:(III)V` @kind static;
  #L262e3e.  v3:= v3 - v2 @kind int;
  #L262e40.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L262e46.  v0:= temp;
  #L262e48.  if v3 != v0 then goto L262e4e;
  #L262e4c.  return v1 @kind object;
  #L262e4e.  if v3 != 0 then goto L262e58;
  #L262e52.  v2:= `@@e.e.a.b.f.l.u7.f` @type ^`e.e.a.b.f.l.q7` @kind object;
  #L262e56.  return v2 @kind object;
  #L262e58.  v0:= new `e.e.a.b.f.l.p7`;
  #L262e5c.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/a/b/f/l/p7;.<init>:(Le/e/a/b/f/l/q7;II)V` @kind direct;
  #L262e62.  return v0 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/l/q7;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2630f8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2630fc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L263102.  throw v1;
}
procedure `boolean` `addAll`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/l/q7;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L262d24.  v1:= new `java.lang.UnsupportedOperationException`;
  #L262d28.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L262d2e.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.l.q7` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/l/q7;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L262d40.  call temp:= `indexOf`(v0, v1) @signature `Le/e/a/b/f/l/q7;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L262d46.  v1:= temp;
  #L262d48.  if v1 < 0 then goto L262d50;
  #L262d4c.  v1:= 1I;
  #L262d4e.  return v1;
  #L262d50.  v1:= 0I;
  #L262d52.  return v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.l.q7` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/l/q7;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L262d64.  v0:= 1I;
  #L262d66.  v1:= 0I;
  #L262d68.  if v7 != v6 then goto L262d70;
  #L262d6c.  v1:= 1I;
  #L262d6e.  goto L262e1c;
  #L262d70.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L262d74.  if v2 != 0 then goto L262d7a;
  #L262d78.  goto L262e1c;
  #L262d7a.  v7:= (`java.util.List`) v7 @kind object;
  #L262d7e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L262d84.  v2:= temp;
  #L262d86.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L262d8c.  v3:= temp;
  #L262d8e.  if v2 == v3 then goto L262d94;
  #L262d92.  goto L262e1c;
  #L262d94.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L262d98.  if v3 == 0 then goto L262dc6;
  #L262d9c.  v3:= 0I;
  #L262d9e.  if v3 >= v2 then goto L262d6c;
  #L262da2.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262da8.  v4:= temp @kind object;
  #L262daa.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262db0.  v5:= temp @kind object;
  #L262db2.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/l/b0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L262db8.  v4:= temp;
  #L262dba.  if v4 != 0 then goto L262dc0;
  #L262dbe.  goto L262e1c;
  #L262dc0.  v3:= v3 + 1;
  #L262dc4.  goto L262d9e;
  #L262dc6.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L262dcc.  v2:= temp @kind object;
  #L262dce.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L262dd4.  v7:= temp @kind object;
  #L262dd6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L262ddc.  v3:= temp;
  #L262dde.  if v3 == 0 then goto L262e0e;
  #L262de2.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L262de8.  v3:= temp;
  #L262dea.  if v3 != 0 then goto L262df0;
  #L262dee.  goto L262e1c;
  #L262df0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L262df6.  v3:= temp @kind object;
  #L262df8.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L262dfe.  v4:= temp @kind object;
  #L262e00.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/l/b0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L262e06.  v3:= temp;
  #L262e08.  if v3 != 0 then goto L262dd6;
  #L262e0c.  goto L262e1c;
  #L262e0e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L262e14.  v7:= temp;
  #L262e16.  if v7 != 0 then goto L262e1c;
  #L262e1a.  goto L262d6c;
  #L262e1c.  return v1;
}
procedure `e.e.a.b.f.l.y7` `f`(`e.e.a.b.f.l.q7` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/l/q7;.f:(I)Le/e/a/b/f/l/y7;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L262ecc.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L262ed2.  v0:= temp;
  #L262ed4.  v1:= "index" @kind object;
  #L262ed8.  call temp:= `b`(v3, v0, v1) @signature `Le/e/a/b/f/l/f4;.b:(IILjava/lang/String;)I` @kind static;
  #L262ede.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L262ee4.  v0:= temp;
  #L262ee6.  if v0 == 0 then goto L262ef0;
  #L262eea.  v3:= `@@e.e.a.b.f.l.q7.c` @type ^`e.e.a.b.f.l.y7` @kind object;
  #L262eee.  return v3 @kind object;
  #L262ef0.  v0:= new `e.e.a.b.f.l.o7`;
  #L262ef4.  call `<init>`(v0, v2, v3) @signature `Le/e/a/b/f/l/o7;.<init>:(Le/e/a/b/f/l/q7;I)V` @kind direct;
  #L262efa.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.l.q7` v4 @kind this) @signature `Le/e/a/b/f/l/q7;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L262f0c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L262f12.  v0:= temp;
  #L262f14.  v1:= 1I;
  #L262f16.  v2:= 0I;
  #L262f18.  if v2 >= v0 then goto L262f38;
  #L262f1c.  v1:= v1 * 31;
  #L262f20.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262f26.  v3:= temp @kind object;
  #L262f28.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L262f2e.  v3:= temp;
  #L262f30.  v1:= v1 + v3 @kind int;
  #L262f32.  v2:= v2 + 1;
  #L262f36.  goto L262f18;
  #L262f38.  return v1;
}
procedure `int` `indexOf`(`e.e.a.b.f.l.q7` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/l/q7;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L262f4c.  v0:= -1I;
  #L262f4e.  if v5 != 0 then goto L262f54;
  #L262f52.  return v0;
  #L262f54.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L262f5a.  v1:= temp;
  #L262f5c.  v2:= 0I;
  #L262f5e.  if v2 >= v1 then goto L262f80;
  #L262f62.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262f68.  v3:= temp @kind object;
  #L262f6a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L262f70.  v3:= temp;
  #L262f72.  if v3 == 0 then goto L262f7a;
  #L262f76.  v0:= v2;
  #L262f78.  goto L262f80;
  #L262f7a.  v2:= v2 + 1;
  #L262f7e.  goto L262f5e;
  #L262f80.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.l.q7` v1 @kind this) @signature `Le/e/a/b/f/l/q7;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L263048.  v0:= 0I;
  #L26304a.  call temp:= `f`(v1, v0) @signature `Le/e/a/b/f/l/q7;.f:(I)Le/e/a/b/f/l/y7;` @kind virtual;
  #L263050.  v0:= temp @kind object;
  #L263052.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`e.e.a.b.f.l.q7` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/l/q7;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L262f94.  v0:= -1I;
  #L262f96.  if v4 != 0 then goto L262f9c;
  #L262f9a.  return v0;
  #L262f9c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L262fa2.  v1:= temp;
  #L262fa4.  v1:= v1 + v0 @kind int;
  #L262fa6.  if v1 < 0 then goto L262fc8;
  #L262faa.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262fb0.  v2:= temp @kind object;
  #L262fb2.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L262fb8.  v2:= temp;
  #L262fba.  if v2 == 0 then goto L262fc2;
  #L262fbe.  v0:= v1;
  #L262fc0.  goto L262fc8;
  #L262fc2.  v1:= v1 + -1;
  #L262fc6.  goto L262fa6;
  #L262fc8.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.l.q7` v1 @kind this) @signature `Le/e/a/b/f/l/q7;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L263080.  v0:= 0I;
  #L263082.  call temp:= `f`(v1, v0) @signature `Le/e/a/b/f/l/q7;.f:(I)Le/e/a/b/f/l/y7;` @kind virtual;
  #L263088.  v0:= temp @kind object;
  #L26308a.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/l/q7;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L26309c.  call temp:= `f`(v0, v1) @signature `Le/e/a/b/f/l/q7;.f:(I)Le/e/a/b/f/l/y7;` @kind virtual;
  #L2630a2.  v1:= temp @kind object;
  #L2630a4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/l/q7;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L263010.  v1:= new `java.lang.UnsupportedOperationException`;
  #L263014.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L26301a.  throw v1;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/l/q7;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L26302c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L263030.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L263036.  throw v1;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.l.q7` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/l/q7;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L263064.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/l/q7;.a:(II)Le/e/a/b/f/l/q7;` @kind virtual;
  #L26306a.  v1:= temp @kind object;
  #L26306c.  return v1 @kind object;
}
