record `e.e.a.b.f.j.q6` @kind class @AccessFlag FINAL extends `java.security.PrivilegedExceptionAction` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.j.q6` v0 @kind this) @signature `Le/e/a/b/f/j/q6;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2318b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2318be.  return @kind void;
}
procedure `java.lang.Object` `run`(`e.e.a.b.f.j.q6` v7 @kind this) @signature `Le/e/a/b/f/j/q6;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23185c.  v0:= constclass @type ^`sun.misc.Unsafe` @kind object;
  #L231860.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L231866.  v1:= temp @kind object;
  #L231868.  v2:= length @variable v1;
  #L23186a.  v3:= 0I;
  #L23186c.  v4:= 0I;
  #L23186e.  if v3 >= v2 then goto L2318a6;
  #L231872.  v5:= v1[v3] @kind object;
  #L231876.  v6:= 1I;
  #L231878.  call `setAccessible`(v5, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L23187e.  call temp:= `get`(v5, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L231884.  v4:= temp @kind object;
  #L231886.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L23188c.  v5:= temp;
  #L23188e.  if v5 == 0 then goto L2318a0;
  #L231892.  call temp:= `cast`(v0, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L231898.  v0:= temp @kind object;
  #L23189a.  v0:= (`sun.misc.Unsafe`) v0 @kind object;
  #L23189e.  return v0 @kind object;
  #L2318a0.  v3:= v3 + 1;
  #L2318a4.  goto L23186c;
  #L2318a6.  return v4 @kind object;
}
