record `e.e.a.b.f.q.e4` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.q.e4.b` @AccessFlag ;
  `int` `e.e.a.b.f.q.e4.c` @AccessFlag ;
  `int` `e.e.a.b.f.q.e4.d` @AccessFlag ;
  `e.e.a.b.f.q.z4` `e.e.a.b.f.q.e4.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.e4` v0 @kind this, `e.e.a.b.f.q.z4` v1 @kind object, `e.e.a.b.f.q.c0` v2 @kind object) @signature `Le/e/a/b/f/q/e4;.<init>:(Le/e/a/b/f/q/z4;Le/e/a/b/f/q/c0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e19e0.  v0.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` := v1 @kind object;
  #L2e19e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e19ea.  v1:= v0.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e19ee.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/z4;.a:(Le/e/a/b/f/q/z4;)I` @kind static;
  #L2e19f4.  v1:= temp;
  #L2e19f6.  v0.`e.e.a.b.f.q.e4.b` @type ^`int` := v1;
  #L2e19fa.  v1:= v0.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e19fe.  call temp:= `d`(v1) @signature `Le/e/a/b/f/q/z4;.d:()I` @kind virtual;
  #L2e1a04.  v1:= temp;
  #L2e1a06.  v0.`e.e.a.b.f.q.e4.c` @type ^`int` := v1;
  #L2e1a0a.  v1:= -1I;
  #L2e1a0c.  v0.`e.e.a.b.f.q.e4.d` @type ^`int` := v1;
  #L2e1a10.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.e4` v2 @kind this) @signature `Le/e/a/b/f/q/e4;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2e1a88.  v0:= v2.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1a8c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/z4;.a:(Le/e/a/b/f/q/z4;)I` @kind static;
  #L2e1a92.  v0:= temp;
  #L2e1a94.  v1:= v2.`e.e.a.b.f.q.e4.b` @type ^`int`;
  #L2e1a98.  if v0 != v1 then goto L2e1a9e;
  #L2e1a9c.  return @kind void;
  #L2e1a9e.  v0:= new `java.util.ConcurrentModificationException`;
  #L2e1aa2.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L2e1aa8.  throw v0;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Le/e/a/b/f/q/e4;.a:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.e4` v1 @kind this) @signature `Le/e/a/b/f/q/e4;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e0fb4.  v0:= v1.`e.e.a.b.f.q.e4.c` @type ^`int`;
  #L2e0fb8.  if v0 < 0 then goto L2e0fc0;
  #L2e0fbc.  v0:= 1I;
  #L2e0fbe.  return v0;
  #L2e0fc0.  v0:= 0I;
  #L2e0fc2.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.e4` v3 @kind this) @signature `Le/e/a/b/f/q/e4;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e1440.  call `a`(v3) @signature `Le/e/a/b/f/q/e4;.a:()V` @kind direct;
  #L2e1446.  call temp:= `hasNext`(v3) @signature `Le/e/a/b/f/q/e4;.hasNext:()Z` @kind virtual;
  #L2e144c.  v0:= temp;
  #L2e144e.  if v0 == 0 then goto L2e1478;
  #L2e1452.  v0:= v3.`e.e.a.b.f.q.e4.c` @type ^`int`;
  #L2e1456.  v3.`e.e.a.b.f.q.e4.d` @type ^`int` := v0;
  #L2e145a.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/q/e4;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L2e1460.  v0:= temp @kind object;
  #L2e1462.  v1:= v3.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1466.  v2:= v3.`e.e.a.b.f.q.e4.c` @type ^`int`;
  #L2e146a.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/q/z4;.b:(I)I` @kind virtual;
  #L2e1470.  v1:= temp;
  #L2e1472.  v3.`e.e.a.b.f.q.e4.c` @type ^`int` := v1;
  #L2e1476.  return v0 @kind object;
  #L2e1478.  v0:= new `java.util.NoSuchElementException`;
  #L2e147c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2e1482.  throw v0;
}
procedure `void` `remove`(`e.e.a.b.f.q.e4` v3 @kind this) @signature `Le/e/a/b/f/q/e4;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e1a24.  call `a`(v3) @signature `Le/e/a/b/f/q/e4;.a:()V` @kind direct;
  #L2e1a2a.  v0:= v3.`e.e.a.b.f.q.e4.d` @type ^`int`;
  #L2e1a2e.  if v0 < 0 then goto L2e1a36;
  #L2e1a32.  v0:= 1I;
  #L2e1a34.  goto L2e1a38;
  #L2e1a36.  v0:= 0I;
  #L2e1a38.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L2e1a3c.  call `a`(v0, v1) @signature `Le/e/a/b/f/q/vb;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2e1a42.  v0:= v3.`e.e.a.b.f.q.e4.b` @type ^`int`;
  #L2e1a46.  v0:= v0 + 32;
  #L2e1a4a.  v3.`e.e.a.b.f.q.e4.b` @type ^`int` := v0;
  #L2e1a4e.  v0:= v3.`e.e.a.b.f.q.e4.e` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1a52.  v1:= v0.`e.e.a.b.f.q.z4.d` @type ^`java.lang.Object`[] @kind object;
  #L2e1a56.  v2:= v3.`e.e.a.b.f.q.e4.d` @type ^`int`;
  #L2e1a5a.  v1:= v1[v2] @kind object;
  #L2e1a5e.  call temp:= `remove`(v0, v1) @signature `Le/e/a/b/f/q/z4;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e1a64.  v0:= v3.`e.e.a.b.f.q.e4.c` @type ^`int`;
  #L2e1a68.  v1:= -1I;
  #L2e1a6a.  v0:= v0 + v1 @kind int;
  #L2e1a6c.  v3.`e.e.a.b.f.q.e4.c` @type ^`int` := v0;
  #L2e1a70.  v3.`e.e.a.b.f.q.e4.d` @type ^`int` := v1;
  #L2e1a74.  return @kind void;
}
