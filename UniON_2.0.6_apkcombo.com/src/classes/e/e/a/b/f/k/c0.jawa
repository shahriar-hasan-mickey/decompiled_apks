record `e.e.a.b.f.k.c0` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.k.c0.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.k.c0.c` @AccessFlag FINAL;
  `e.e.a.b.f.k.d0` `e.e.a.b.f.k.c0.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.c0` v1 @kind this, `e.e.a.b.f.k.d0` v2 @kind object) @signature `Le/e/a/b/f/k/c0;.<init>:(Le/e/a/b/f/k/d0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L243e08.  v1.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` := v2 @kind object;
  #L243e0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243e12.  v0:= v1.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243e16.  v0:= v0.`e.e.a.b.f.k.d0.c` @type ^`java.util.Collection` @kind object;
  #L243e1a.  v1.`e.e.a.b.f.k.c0.c` @type ^`java.util.Collection` := v0 @kind object;
  #L243e1e.  v2:= v2.`e.e.a.b.f.k.d0.c` @type ^`java.util.Collection` @kind object;
  #L243e22.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L243e26.  if v0 == 0 then goto L243e38;
  #L243e2a.  v2:= (`java.util.List`) v2 @kind object;
  #L243e2e.  call temp:= `listIterator`(v2) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L243e34.  v2:= temp @kind object;
  #L243e36.  goto L243e40;
  #L243e38.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L243e3e.  v2:= temp @kind object;
  #L243e40.  v1.`e.e.a.b.f.k.c0.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L243e44.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.k.c0` v0 @kind this, `e.e.a.b.f.k.d0` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/k/c0;.<init>:(Le/e/a/b/f/k/d0;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243e58.  v0.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` := v1 @kind object;
  #L243e5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243e62.  v1:= v0.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243e66.  v1:= v1.`e.e.a.b.f.k.d0.c` @type ^`java.util.Collection` @kind object;
  #L243e6a.  v0.`e.e.a.b.f.k.c0.c` @type ^`java.util.Collection` := v1 @kind object;
  #L243e6e.  v0.`e.e.a.b.f.k.c0.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L243e72.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.k.c0` v1 @kind this) @signature `Le/e/a/b/f/k/c0;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243dac.  call `zza`(v1) @signature `Le/e/a/b/f/k/c0;.zza:()V` @kind virtual;
  #L243db2.  v0:= v1.`e.e.a.b.f.k.c0.b` @type ^`java.util.Iterator` @kind object;
  #L243db6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L243dbc.  v0:= temp;
  #L243dbe.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.k.c0` v1 @kind this) @signature `Le/e/a/b/f/k/c0;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243dd0.  call `zza`(v1) @signature `Le/e/a/b/f/k/c0;.zza:()V` @kind virtual;
  #L243dd6.  v0:= v1.`e.e.a.b.f.k.c0.b` @type ^`java.util.Iterator` @kind object;
  #L243dda.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L243de0.  v0:= temp @kind object;
  #L243de2.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.k.c0` v1 @kind this) @signature `Le/e/a/b/f/k/c0;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243e84.  v0:= v1.`e.e.a.b.f.k.c0.b` @type ^`java.util.Iterator` @kind object;
  #L243e88.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L243e8e.  v0:= v1.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243e92.  v0:= v0.`e.e.a.b.f.k.d0.f` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243e96.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;)I` @kind static;
  #L243e9c.  v0:= v1.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243ea0.  call `zzb`(v0) @signature `Le/e/a/b/f/k/d0;.zzb:()V` @kind virtual;
  #L243ea6.  return @kind void;
}
procedure `void` `zza`(`e.e.a.b.f.k.c0` v2 @kind this) @signature `Le/e/a/b/f/k/c0;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L243eb8.  v0:= v2.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243ebc.  call `zza`(v0) @signature `Le/e/a/b/f/k/d0;.zza:()V` @kind virtual;
  #L243ec2.  v0:= v2.`e.e.a.b.f.k.c0.d` @type ^`e.e.a.b.f.k.d0` @kind object;
  #L243ec6.  v0:= v0.`e.e.a.b.f.k.d0.c` @type ^`java.util.Collection` @kind object;
  #L243eca.  v1:= v2.`e.e.a.b.f.k.c0.c` @type ^`java.util.Collection` @kind object;
  #L243ece.  if v0 != v1 then goto L243ed4;
  #L243ed2.  return @kind void;
  #L243ed4.  v0:= new `java.util.ConcurrentModificationException`;
  #L243ed8.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L243ede.  throw v0;
}
