record `e.e.a.b.f.b.l3` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface, `java.util.Map$Entry` @kind interface {
  `java.lang.Comparable` `e.e.a.b.f.b.l3.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.b.f.b.l3.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.b.e3` `e.e.a.b.f.b.l3.d` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.b.l3` v0 @kind this, `e.e.a.b.f.b.e3` v1 @kind object, `java.lang.Comparable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/l3;.<init>:(Le/e/a/b/f/b/e3;Ljava/lang/Comparable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20daa8.  v0.`e.e.a.b.f.b.l3.d` @type ^`e.e.a.b.f.b.e3` := v1 @kind object;
  #L20daac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20dab2.  v0.`e.e.a.b.f.b.l3.b` @type ^`java.lang.Comparable` := v2 @kind object;
  #L20dab6.  v0.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` := v3 @kind object;
  #L20daba.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.l3` v1 @kind this, `e.e.a.b.f.b.e3` v2 @kind object, `java.util.Map$Entry` v3 @kind object) @signature `Le/e/a/b/f/b/l3;.<init>:(Le/e/a/b/f/b/e3;Ljava/util/Map$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L20dacc.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L20dad2.  v0:= temp @kind object;
  #L20dad4.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L20dad8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L20dade.  v3:= temp @kind object;
  #L20dae0.  call `<init>`(v1, v2, v0, v3) @signature `Le/e/a/b/f/b/l3;.<init>:(Le/e/a/b/f/b/e3;Ljava/lang/Comparable;Ljava/lang/Object;)V` @kind direct;
  #L20dae6.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/l3;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20d93c.  if v0 != 0 then goto L20d94c;
  #L20d940.  if v1 != 0 then goto L20d948;
  #L20d944.  v0:= 1I;
  #L20d946.  return v0;
  #L20d948.  v0:= 0I;
  #L20d94a.  return v0;
  #L20d94c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20d952.  v0:= temp;
  #L20d954.  return v0;
}
procedure `int` `compareTo`(`e.e.a.b.f.b.l3` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/l3;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L20d968.  v2:= (`e.e.a.b.f.b.l3`) v2 @kind object;
  #L20d96c.  call temp:= `getKey`(v1) @signature `Le/e/a/b/f/b/l3;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L20d972.  v0:= temp @kind object;
  #L20d974.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L20d978.  call temp:= `getKey`(v2) @signature `Le/e/a/b/f/b/l3;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L20d97e.  v2:= temp @kind object;
  #L20d980.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L20d984.  call temp:= `compareTo`(v0, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L20d98a.  v2:= temp;
  #L20d98c.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.l3` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/b/l3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20d8e0.  v0:= 1I;
  #L20d8e2.  if v5 != v4 then goto L20d8e8;
  #L20d8e6.  return v0;
  #L20d8e8.  v1:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L20d8ec.  v2:= 0I;
  #L20d8ee.  if v1 != 0 then goto L20d8f4;
  #L20d8f2.  return v2;
  #L20d8f4.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L20d8f8.  v1:= v4.`e.e.a.b.f.b.l3.b` @type ^`java.lang.Comparable` @kind object;
  #L20d8fc.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L20d902.  v3:= temp @kind object;
  #L20d904.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/b/l3;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20d90a.  v1:= temp;
  #L20d90c.  if v1 == 0 then goto L20d92a;
  #L20d910.  v1:= v4.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` @kind object;
  #L20d914.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L20d91a.  v5:= temp @kind object;
  #L20d91c.  call temp:= `a`(v1, v5) @signature `Le/e/a/b/f/b/l3;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20d922.  v5:= temp;
  #L20d924.  if v5 == 0 then goto L20d92a;
  #L20d928.  return v0;
  #L20d92a.  return v2;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.b.l3` v1 @kind this) @signature `Le/e/a/b/f/b/l3;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L20d9dc.  v0:= v1.`e.e.a.b.f.b.l3.b` @type ^`java.lang.Comparable` @kind object;
  #L20d9e0.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.b.l3` v1 @kind this) @signature `Le/e/a/b/f/b/l3;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20d9f4.  v0:= v1.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` @kind object;
  #L20d9f8.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.l3` v3 @kind this) @signature `Le/e/a/b/f/b/l3;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20d9a0.  v0:= v3.`e.e.a.b.f.b.l3.b` @type ^`java.lang.Comparable` @kind object;
  #L20d9a4.  v1:= 0I;
  #L20d9a6.  if v0 != 0 then goto L20d9ae;
  #L20d9aa.  v0:= 0I;
  #L20d9ac.  goto L20d9b6;
  #L20d9ae.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L20d9b4.  v0:= temp;
  #L20d9b6.  v2:= v3.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` @kind object;
  #L20d9ba.  if v2 != 0 then goto L20d9c0;
  #L20d9be.  goto L20d9c8;
  #L20d9c0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L20d9c6.  v1:= temp;
  #L20d9c8.  v0:= v0 ^~ v1 @kind int;
  #L20d9ca.  return v0;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.b.l3` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/l3;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20da0c.  v0:= v1.`e.e.a.b.f.b.l3.d` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L20da10.  call `a`(v0) @signature `Le/e/a/b/f/b/e3;.a:(Le/e/a/b/f/b/e3;)V` @kind static;
  #L20da16.  v0:= v1.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` @kind object;
  #L20da1a.  v1.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` := v2 @kind object;
  #L20da1e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.b.l3` v4 @kind this) @signature `Le/e/a/b/f/b/l3;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20da30.  v0:= v4.`e.e.a.b.f.b.l3.b` @type ^`java.lang.Comparable` @kind object;
  #L20da34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20da3a.  v0:= temp @kind object;
  #L20da3c.  v1:= v4.`e.e.a.b.f.b.l3.c` @type ^`java.lang.Object` @kind object;
  #L20da40.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20da46.  v1:= temp @kind object;
  #L20da48.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20da4e.  v2:= temp @kind object;
  #L20da50.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20da56.  v2:= temp;
  #L20da58.  v2:= v2 + 1;
  #L20da5c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20da62.  v3:= temp @kind object;
  #L20da64.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20da6a.  v3:= temp;
  #L20da6c.  v2:= v2 + v3 @kind int;
  #L20da6e.  v3:= new `java.lang.StringBuilder`;
  #L20da72.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L20da78.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20da7e.  v0:= "=" @kind object;
  #L20da82.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20da88.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20da8e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20da94.  v0:= temp @kind object;
  #L20da96.  return v0 @kind object;
}
