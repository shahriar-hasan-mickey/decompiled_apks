record `e.e.a.b.f.j.q8` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.j.q8.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.j.q8.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.j.q8` v4 @kind this) @signature `Le/e/a/b/f/j/q8;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L237334.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23733a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L23733e.  v1:= 16I;
  #L237342.  v2:= 0.75F;
  #L237346.  v3:= 10I;
  #L23734a.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L237350.  v4.`e.e.a.b.f.j.q8.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L237354.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L237358.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L23735e.  v4.`e.e.a.b.f.j.q8.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L237362.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.j.q8` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/j/q8;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2372b4.  v5:= v3.`e.e.a.b.f.j.q8.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2372b8.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L2372be.  v5:= temp @kind object;
  #L2372c0.  if v5 == 0 then goto L2372d0;
  #L2372c4.  v0:= v3.`e.e.a.b.f.j.q8.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2372c8.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2372ce.  goto L2372b4;
  #L2372d0.  v5:= new `e.e.a.b.f.j.t8`;
  #L2372d4.  v0:= 0I;
  #L2372d6.  call `<init>`(v5, v4, v0) @signature `Le/e/a/b/f/j/t8;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2372dc.  v0:= v3.`e.e.a.b.f.j.q8.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2372e0.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2372e6.  v5:= temp @kind object;
  #L2372e8.  v5:= (`java.util.List`) v5 @kind object;
  #L2372ec.  if v5 == 0 then goto L2372f2;
  #L2372f0.  return v5 @kind object;
  #L2372f2.  v5:= new `java.util.Vector`;
  #L2372f6.  v0:= 2I;
  #L2372f8.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L2372fe.  v0:= v3.`e.e.a.b.f.j.q8.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L237302.  v1:= new `e.e.a.b.f.j.t8`;
  #L237306.  v2:= v3.`e.e.a.b.f.j.q8.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L23730a.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/j/t8;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L237310.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L237316.  v4:= temp @kind object;
  #L237318.  v4:= (`java.util.List`) v4 @kind object;
  #L23731c.  if v4 != 0 then goto L237322;
  #L237320.  return v5 @kind object;
  #L237322.  return v4 @kind object;
}
