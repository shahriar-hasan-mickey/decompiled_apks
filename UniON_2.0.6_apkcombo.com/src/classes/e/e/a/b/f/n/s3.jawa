record `e.e.a.b.f.n.s3` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.h0` @kind class {
  `e.e.a.b.f.n.u3` `e.e.a.b.f.n.s3.b` @AccessFlag FINAL;
  `e.e.a.b.f.n.l0` `e.e.a.b.f.n.s3.c` @AccessFlag ;
  `e.e.a.b.f.n.v3` `e.e.a.b.f.n.s3.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.s3` v2 @kind this, `e.e.a.b.f.n.v3` v3 @kind object) @signature `Le/e/a/b/f/n/s3;.<init>:(Le/e/a/b/f/n/v3;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L288894.  v2.`e.e.a.b.f.n.s3.d` @type ^`e.e.a.b.f.n.v3` := v3 @kind object;
  #L288898.  call `<init>`(v2) @signature `Le/e/a/b/f/n/h0;.<init>:()V` @kind direct;
  #L28889e.  v3:= new `e.e.a.b.f.n.u3`;
  #L2888a2.  v0:= v2.`e.e.a.b.f.n.s3.d` @type ^`e.e.a.b.f.n.v3` @kind object;
  #L2888a6.  v1:= 0I;
  #L2888a8.  call `<init>`(v3, v0, v1) @signature `Le/e/a/b/f/n/u3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/s3;)V` @kind direct;
  #L2888ae.  v2.`e.e.a.b.f.n.s3.b` @type ^`e.e.a.b.f.n.u3` := v3 @kind object;
  #L2888b2.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/s3;.a:()Le/e/a/b/f/n/l0;` @kind direct;
  #L2888b8.  v3:= temp @kind object;
  #L2888ba.  v2.`e.e.a.b.f.n.s3.c` @type ^`e.e.a.b.f.n.l0` := v3 @kind object;
  #L2888be.  return @kind void;
}
procedure `e.e.a.b.f.n.l0` `a`(`e.e.a.b.f.n.s3` v1 @kind this) @signature `Le/e/a/b/f/n/s3;.a:()Le/e/a/b/f/n/l0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L288858.  v0:= v1.`e.e.a.b.f.n.s3.b` @type ^`e.e.a.b.f.n.u3` @kind object;
  #L28885c.  call temp:= `hasNext`(v0) @signature `Le/e/a/b/f/n/u3;.hasNext:()Z` @kind virtual;
  #L288862.  v0:= temp;
  #L288864.  if v0 == 0 then goto L28887e;
  #L288868.  v0:= v1.`e.e.a.b.f.n.s3.b` @type ^`e.e.a.b.f.n.u3` @kind object;
  #L28886c.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288872.  v0:= temp @kind object;
  #L288874.  call temp:= `g`(v0) @signature `Le/e/a/b/f/n/q0;.g:()Le/e/a/b/f/n/l0;` @kind virtual;
  #L28887a.  v0:= temp @kind object;
  #L28887c.  return v0 @kind object;
  #L28887e.  v0:= 0I;
  #L288880.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.n.s3` v1 @kind this) @signature `Le/e/a/b/f/n/s3;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2887ec.  v0:= v1.`e.e.a.b.f.n.s3.c` @type ^`e.e.a.b.f.n.l0` @kind object;
  #L2887f0.  if v0 == 0 then goto L2887f8;
  #L2887f4.  v0:= 1I;
  #L2887f6.  return v0;
  #L2887f8.  v0:= 0I;
  #L2887fa.  return v0;
}
procedure `byte` `zza`(`e.e.a.b.f.n.s3` v2 @kind this) @signature `Le/e/a/b/f/n/s3;.zza:()B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L28880c.  v0:= v2.`e.e.a.b.f.n.s3.c` @type ^`e.e.a.b.f.n.l0` @kind object;
  #L288810.  if v0 == 0 then goto L28883a;
  #L288814.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/n/l0;.zza:()B` @kind interface;
  #L28881a.  v0:= temp;
  #L28881c.  v1:= v2.`e.e.a.b.f.n.s3.c` @type ^`e.e.a.b.f.n.l0` @kind object;
  #L288820.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L288826.  v1:= temp;
  #L288828.  if v1 != 0 then goto L288838;
  #L28882c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/s3;.a:()Le/e/a/b/f/n/l0;` @kind direct;
  #L288832.  v1:= temp @kind object;
  #L288834.  v2.`e.e.a.b.f.n.s3.c` @type ^`e.e.a.b.f.n.l0` := v1 @kind object;
  #L288838.  return v0;
  #L28883a.  v0:= new `java.util.NoSuchElementException`;
  #L28883e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L288844.  throw v0;
}
