record `e.e.a.b.f.r.i` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Map$Entry` `e.e.a.b.f.r.i.b` @AccessFlag ;
  `java.util.Iterator` `e.e.a.b.f.r.i.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.a.b.f.r.j` `e.e.a.b.f.r.i.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.i` v0 @kind this, `e.e.a.b.f.r.j` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/r/i;.<init>:(Le/e/a/b/f/r/j;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30b2e8.  v0.`e.e.a.b.f.r.i.d` @type ^`e.e.a.b.f.r.j` := v1 @kind object;
  #L30b2ec.  v0.`e.e.a.b.f.r.i.c` @type ^`java.util.Iterator` := v2 @kind object;
  #L30b2f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30b2f6.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.r.i` v1 @kind this) @signature `Le/e/a/b/f/r/i;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b294.  v0:= v1.`e.e.a.b.f.r.i.c` @type ^`java.util.Iterator` @kind object;
  #L30b298.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30b29e.  v0:= temp;
  #L30b2a0.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.r.i` v1 @kind this) @signature `Le/e/a/b/f/r/i;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b2b4.  v0:= v1.`e.e.a.b.f.r.i.c` @type ^`java.util.Iterator` @kind object;
  #L30b2b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30b2be.  v0:= temp @kind object;
  #L30b2c0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L30b2c4.  v1.`e.e.a.b.f.r.i.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L30b2c8.  v0:= v1.`e.e.a.b.f.r.i.b` @type ^`java.util.Map$Entry` @kind object;
  #L30b2cc.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30b2d2.  v0:= temp @kind object;
  #L30b2d4.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.r.i` v3 @kind this) @signature `Le/e/a/b/f/r/i;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30b308.  v0:= v3.`e.e.a.b.f.r.i.b` @type ^`java.util.Map$Entry` @kind object;
  #L30b30c.  if v0 == 0 then goto L30b314;
  #L30b310.  v0:= 1I;
  #L30b312.  goto L30b316;
  #L30b314.  v0:= 0I;
  #L30b316.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L30b31a.  call `a`(v0, v1) @signature `Le/e/a/b/f/r/b;.a:(ZLjava/lang/Object;)V` @kind static;
  #L30b320.  v0:= v3.`e.e.a.b.f.r.i.b` @type ^`java.util.Map$Entry` @kind object;
  #L30b324.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30b32a.  v0:= temp @kind object;
  #L30b32c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L30b330.  v1:= v3.`e.e.a.b.f.r.i.c` @type ^`java.util.Iterator` @kind object;
  #L30b334.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L30b33a.  v1:= v3.`e.e.a.b.f.r.i.d` @type ^`e.e.a.b.f.r.j` @kind object;
  #L30b33e.  v1:= v1.`e.e.a.b.f.r.j.c` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b342.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b348.  v2:= temp;
  #L30b34a.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/r/p;.b:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b350.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L30b356.  v0:= 0I;
  #L30b358.  v3.`e.e.a.b.f.r.i.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L30b35c.  return @kind void;
}
