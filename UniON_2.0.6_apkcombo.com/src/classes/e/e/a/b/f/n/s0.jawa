record `e.e.a.b.f.n.s0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.t0` @kind class {
  `int` `e.e.a.b.f.n.s0.a` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.n.s0.b` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.n.s0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.n.s0` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `e.e.a.b.f.n.r0` v5 @kind object) @signature `Le/e/a/b/f/n/s0;.<init>:([BIIZLe/e/a/b/f/n/r0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L279e70.  v1:= 0I;
  #L279e72.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/t0;.<init>:(Le/e/a/b/f/n/r0;)V` @kind direct;
  #L279e78.  v1:= 2147483647I;
  #L279e7e.  v0.`e.e.a.b.f.n.s0.c` @type ^`int` := v1;
  #L279e82.  v1:= 0I;
  #L279e84.  v0.`e.e.a.b.f.n.s0.a` @type ^`int` := v1;
  #L279e88.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.n.s0` v3 @kind this, `int` v4 ) @signature `Le/e/a/b/f/n/s0;.b:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L279e34.  v4:= v3.`e.e.a.b.f.n.s0.c` @type ^`int`;
  #L279e38.  v0:= 0I;
  #L279e3a.  v3.`e.e.a.b.f.n.s0.c` @type ^`int` := v0;
  #L279e3e.  v1:= v3.`e.e.a.b.f.n.s0.a` @type ^`int`;
  #L279e42.  v2:= v3.`e.e.a.b.f.n.s0.b` @type ^`int`;
  #L279e46.  v1:= v1 + v2 @kind int;
  #L279e48.  v3.`e.e.a.b.f.n.s0.a` @type ^`int` := v1;
  #L279e4c.  if v1 <= 0 then goto L279e5a;
  #L279e50.  v3.`e.e.a.b.f.n.s0.b` @type ^`int` := v1;
  #L279e54.  v3.`e.e.a.b.f.n.s0.a` @type ^`int` := v0;
  #L279e58.  goto L279e5e;
  #L279e5a.  v3.`e.e.a.b.f.n.s0.b` @type ^`int` := v0;
  #L279e5e.  return v4;
}
