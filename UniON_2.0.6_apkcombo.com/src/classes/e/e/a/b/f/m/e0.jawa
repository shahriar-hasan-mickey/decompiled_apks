record `e.e.a.b.f.m.e0` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/m/e0;.a:(Ljava/lang/Object;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L266610.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L266614.  if v0 == 0 then goto L266626;
  #L266618.  v1:= (`byte`[]) v1 @kind object;
  #L26661c.  v1:= v1[v2] @kind byte;
  #L266620.  v1:= v1 ^& 255;
  #L266624.  return v1;
  #L266626.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L26662a.  if v0 == 0 then goto L26663a;
  #L26662e.  v1:= (`short`[]) v1 @kind object;
  #L266632.  v1:= v1[v2] @kind short;
  #L266636.  v1:= (`char`) v1 @kind i2c;
  #L266638.  return v1;
  #L26663a.  v1:= (`int`[]) v1 @kind object;
  #L26663e.  v1:= v1[v2];
  #L266642.  return v1;
}
procedure `int` `a`(`java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object, `int`[] v13 @kind object, `java.lang.Object`[] v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Le/e/a/b/f/m/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L26667c.  call temp:= `a`(v9) @signature `Le/e/a/b/f/m/f0;.a:(Ljava/lang/Object;)I` @kind static;
  #L266682.  v0:= temp;
  #L266684.  v1:= v0 ^& v11 @kind int;
  #L266688.  call temp:= `a`(v12, v1) @signature `Le/e/a/b/f/m/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L26668e.  v2:= temp;
  #L266690.  v3:= -1I;
  #L266692.  if v2 == 0 then goto L2666fe;
  #L266696.  v4:= ~v11 @kind int;
  #L266698.  v0:= v0 ^& v4 @kind int;
  #L26669a.  v5:= -1I;
  #L26669c.  v2:= v2 + v3 @kind int;
  #L26669e.  v6:= v13[v2];
  #L2666a2.  v7:= v6 ^& v4 @kind int;
  #L2666a6.  if v7 != v0 then goto L2666ee;
  #L2666aa.  v7:= v14[v2] @kind object;
  #L2666ae.  call temp:= `a`(v9, v7) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2666b4.  v7:= temp;
  #L2666b6.  if v7 == 0 then goto L2666ee;
  #L2666ba.  if v15 == 0 then goto L2666ce;
  #L2666be.  v7:= v15[v2] @kind object;
  #L2666c2.  call temp:= `a`(v10, v7) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2666c8.  v7:= temp;
  #L2666ca.  if v7 == 0 then goto L2666ee;
  #L2666ce.  v9:= v6 ^& v11 @kind int;
  #L2666d2.  if v5 != v3 then goto L2666de;
  #L2666d6.  call `a`(v12, v1, v9) @signature `Le/e/a/b/f/m/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2666dc.  goto L2666ec;
  #L2666de.  v10:= v13[v5];
  #L2666e2.  v10:= v10 ^& v4 @kind int;
  #L2666e4.  v9:= v9 ^& v11 @kind int;
  #L2666e6.  v9:= v9 ^| v10 @kind int;
  #L2666e8.  v13[v5]:= v9;
  #L2666ec.  return v2;
  #L2666ee.  v5:= v6 ^& v11 @kind int;
  #L2666f2.  if v5 == 0 then goto L2666fe;
  #L2666f6.  v8:= v5;
  #L2666f8.  v5:= v2;
  #L2666fa.  v2:= v8;
  #L2666fc.  goto L26669c;
  #L2666fe.  return v3;
}
procedure `java.lang.Object` `a`(`int` v3 ) @signature `Le/e/a/b/f/m/e0;.a:(I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L266710.  v0:= 2I;
  #L266712.  if v3 < v0 then goto L26674c;
  #L266716.  v0:= 2.0F;
  #L26671a.  if v3 > v0 then goto L26674c;
  #L26671e.  call temp:= `highestOneBit`(v3) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L266724.  v0:= temp;
  #L266726.  if v0 != v3 then goto L26674c;
  #L26672a.  v0:= 256I;
  #L26672e.  if v3 > v0 then goto L266738;
  #L266732.  v3:= new `byte`[v3];
  #L266736.  return v3 @kind object;
  #L266738.  v0:= 65536I;
  #L26673c.  if v3 > v0 then goto L266746;
  #L266740.  v3:= new `short`[v3];
  #L266744.  return v3 @kind object;
  #L266746.  v3:= new `int`[v3];
  #L26674a.  return v3 @kind object;
  #L26674c.  v0:= new `java.lang.IllegalArgumentException`;
  #L266750.  v1:= new `java.lang.StringBuilder`;
  #L266754.  v2:= 52I;
  #L266758.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L26675e.  v2:= "must be power of 2 between 2^1 and 2^30: " @kind object;
  #L266762.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L266768.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L26676e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L266774.  v3:= temp @kind object;
  #L266776.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26677c.  throw v0;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/m/e0;.a:(Ljava/lang/Object;II)V` @AccessFlag STATIC {
    temp;
    v0;

  #L266790.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L266794.  if v0 == 0 then goto L2667a4;
  #L266798.  v1:= (`byte`[]) v1 @kind object;
  #L26679c.  v3:= (`byte`) v3 @kind i2b;
  #L26679e.  v1[v2]:= v3 @kind byte;
  #L2667a2.  return @kind void;
  #L2667a4.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L2667a8.  if v0 == 0 then goto L2667b8;
  #L2667ac.  v1:= (`short`[]) v1 @kind object;
  #L2667b0.  v3:= (`short`) v3 @kind i2s;
  #L2667b2.  v1[v2]:= v3 @kind short;
  #L2667b6.  return @kind void;
  #L2667b8.  v1:= (`int`[]) v1 @kind object;
  #L2667bc.  v1[v2]:= v3;
  #L2667c0.  return @kind void;
}
procedure `int` `b`(`int` v1 ) @signature `Le/e/a/b/f/m/e0;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L266654.  v0:= 32I;
  #L266658.  if v1 >= v0 then goto L266660;
  #L26665c.  v0:= 4I;
  #L26665e.  goto L266662;
  #L266660.  v0:= 2I;
  #L266662.  v1:= v1 + 1;
  #L266666.  v0:= v0 * v1 @kind int;
  #L26666a.  return v0;
}
