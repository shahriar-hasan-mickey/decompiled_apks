record `e.e.a.b.f.n.g4` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `e.e.a.b.f.n.h4` `e.e.a.b.f.n.g4.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.g4` v0 @kind this, `e.e.a.b.f.n.h4` v1 @kind object, `e.e.a.b.f.n.z3` v2 @kind object) @signature `Le/e/a/b/f/n/g4;.<init>:(Le/e/a/b/f/n/h4;Le/e/a/b/f/n/z3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28a94c.  v0.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` := v1 @kind object;
  #L28a950.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L28a956.  return @kind void;
}
procedure `boolean` `add`(`e.e.a.b.f.n.g4` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/n/g4;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28a834.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L28a838.  call temp:= `contains`(v2, v3) @signature `Le/e/a/b/f/n/g4;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28a83e.  v0:= temp;
  #L28a840.  if v0 != 0 then goto L28a866;
  #L28a844.  v0:= v2.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a848.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28a84e.  v1:= temp @kind object;
  #L28a850.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L28a854.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L28a85a.  v3:= temp @kind object;
  #L28a85c.  call temp:= `a`(v0, v1, v3) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28a862.  v3:= 1I;
  #L28a864.  return v3;
  #L28a866.  v3:= 0I;
  #L28a868.  return v3;
}
procedure `void` `clear`(`e.e.a.b.f.n.g4` v1 @kind this) @signature `Le/e/a/b/f/n/g4;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28a968.  v0:= v1.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a96c.  call `clear`(v0) @signature `Le/e/a/b/f/n/h4;.clear:()V` @kind virtual;
  #L28a972.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.n.g4` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/n/g4;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28a87c.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L28a880.  v0:= v3.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a884.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28a88a.  v1:= temp @kind object;
  #L28a88c.  call temp:= `get`(v0, v1) @signature `Le/e/a/b/f/n/h4;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28a892.  v0:= temp @kind object;
  #L28a894.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L28a89a.  v4:= temp @kind object;
  #L28a89c.  v1:= 0I;
  #L28a89e.  v2:= 1I;
  #L28a8a0.  if v0 == v4 then goto L28a8ba;
  #L28a8a4.  if v0 == 0 then goto L28a8b8;
  #L28a8a8.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28a8ae.  v4:= temp;
  #L28a8b0.  if v4 == 0 then goto L28a8b6;
  #L28a8b4.  goto L28a8ba;
  #L28a8b6.  return v1;
  #L28a8b8.  v2:= 0I;
  #L28a8ba.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.n.g4` v3 @kind this) @signature `Le/e/a/b/f/n/g4;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28a928.  v0:= new `e.e.a.b.f.n.e4`;
  #L28a92c.  v1:= v3.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a930.  v2:= 0I;
  #L28a932.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/n/e4;.<init>:(Le/e/a/b/f/n/h4;Le/e/a/b/f/n/z3;)V` @kind direct;
  #L28a938.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.n.g4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/g4;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28a8cc.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L28a8d0.  call temp:= `contains`(v1, v2) @signature `Le/e/a/b/f/n/g4;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28a8d6.  v0:= temp;
  #L28a8d8.  if v0 == 0 then goto L28a8f2;
  #L28a8dc.  v0:= v1.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a8e0.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28a8e6.  v2:= temp @kind object;
  #L28a8e8.  call temp:= `remove`(v0, v2) @signature `Le/e/a/b/f/n/h4;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28a8ee.  v2:= 1I;
  #L28a8f0.  return v2;
  #L28a8f2.  v2:= 0I;
  #L28a8f4.  return v2;
}
procedure `int` `size`(`e.e.a.b.f.n.g4` v1 @kind this) @signature `Le/e/a/b/f/n/g4;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28a908.  v0:= v1.`e.e.a.b.f.n.g4.b` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a90c.  call temp:= `size`(v0) @signature `Le/e/a/b/f/n/h4;.size:()I` @kind virtual;
  #L28a912.  v0:= temp;
  #L28a914.  return v0;
}
