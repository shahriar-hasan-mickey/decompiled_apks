record `e.e.a.b.f.r.g0` @kind class @AccessFlag  extends `e.e.a.b.f.r.h0` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.r.g0.a` @AccessFlag ;
  `int` `e.e.a.b.f.r.g0.b` @AccessFlag ;
  `boolean` `e.e.a.b.f.r.g0.c` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.a.b.f.r.g0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/r/g0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d5fc.  call `<init>`(v0) @signature `Le/e/a/b/f/r/h0;.<init>:()V` @kind direct;
  #L30d602.  v1:= 4I;
  #L30d604.  v1:= new `java.lang.Object`[v1];
  #L30d608.  v0.`e.e.a.b.f.r.g0.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L30d60c.  v1:= 0I;
  #L30d60e.  v0.`e.e.a.b.f.r.g0.b` @type ^`int` := v1;
  #L30d612.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.r.g0` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/r/g0;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30d624.  v0:= v4.`e.e.a.b.f.r.g0.a` @type ^`java.lang.Object`[] @kind object;
  #L30d628.  v1:= length @variable v0;
  #L30d62a.  v2:= 0I;
  #L30d62c.  if v1 >= v5 then goto L30d66a;
  #L30d630.  v3:= v1 ^> 1;
  #L30d634.  v1:= v1 + v3 @kind int;
  #L30d636.  v1:= v1 + 1;
  #L30d63a.  if v1 >= v5 then goto L30d64e;
  #L30d63e.  v5:= v5 + -1;
  #L30d642.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L30d648.  v5:= temp;
  #L30d64a.  v1:= v5 + v5 @kind int;
  #L30d64e.  if v1 >= 0 then goto L30d658;
  #L30d652.  v1:= 2147483647I;
  #L30d658.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L30d65e.  v5:= temp @kind object;
  #L30d660.  v4.`e.e.a.b.f.r.g0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L30d664.  v4.`e.e.a.b.f.r.g0.c` @type ^`boolean` := v2 @kind boolean;
  #L30d668.  return @kind void;
  #L30d66a.  v5:= v4.`e.e.a.b.f.r.g0.c` @type ^`boolean` @kind boolean;
  #L30d66e.  if v5 == 0 then goto L30d684;
  #L30d672.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L30d678.  v5:= temp @kind object;
  #L30d67a.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L30d67e.  v4.`e.e.a.b.f.r.g0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L30d682.  goto L30d664;
  #L30d684.  return @kind void;
}
procedure `e.e.a.b.f.r.g0` `a`(`e.e.a.b.f.r.g0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/g0;.a:(Ljava/lang/Object;)Le/e/a/b/f/r/g0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30d5c0.  if v4 == 0 then goto L30d5e8;
  #L30d5c4.  v0:= v3.`e.e.a.b.f.r.g0.b` @type ^`int`;
  #L30d5c8.  v0:= v0 + 1;
  #L30d5cc.  call `a`(v3, v0) @signature `Le/e/a/b/f/r/g0;.a:(I)V` @kind direct;
  #L30d5d2.  v0:= v3.`e.e.a.b.f.r.g0.a` @type ^`java.lang.Object`[] @kind object;
  #L30d5d6.  v1:= v3.`e.e.a.b.f.r.g0.b` @type ^`int`;
  #L30d5da.  v2:= v1 + 1;
  #L30d5de.  v3.`e.e.a.b.f.r.g0.b` @type ^`int` := v2;
  #L30d5e2.  v0[v1]:= v4 @kind object;
  #L30d5e6.  return v3 @kind object;
  #L30d5e8.  v4:= 0I;
  #L30d5ea.  throw v4;
}
