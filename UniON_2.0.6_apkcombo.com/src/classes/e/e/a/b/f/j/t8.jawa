record `e.e.a.b.f.j.t8` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `int` `e.e.a.b.f.j.t8.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.j.t8` v0 @kind this, `java.lang.Throwable` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object) @signature `Le/e/a/b/f/j/t8;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L237474.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L23747a.  if v1 == 0 then goto L23748c;
  #L23747e.  call temp:= `identityHashCode`(v1) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L237484.  v1:= temp;
  #L237486.  v0.`e.e.a.b.f.j.t8.a` @type ^`int` := v1;
  #L23748a.  return @kind void;
  #L23748c.  v1:= new `java.lang.NullPointerException`;
  #L237490.  v2:= "The referent cannot be null" @kind object;
  #L237494.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23749a.  throw v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.j.t8` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/j/t8;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L237404.  v0:= 0I;
  #L237406.  if v5 == 0 then goto L23744a;
  #L23740a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L237410.  v1:= temp @kind object;
  #L237412.  v2:= constclass @type ^`e.e.a.b.f.j.t8` @kind object;
  #L237416.  if v1 == v2 then goto L23741c;
  #L23741a.  goto L23744a;
  #L23741c.  v1:= 1I;
  #L23741e.  if v4 != v5 then goto L237424;
  #L237422.  return v1;
  #L237424.  v5:= (`e.e.a.b.f.j.t8`) v5 @kind object;
  #L237428.  v2:= v4.`e.e.a.b.f.j.t8.a` @type ^`int`;
  #L23742c.  v3:= v5.`e.e.a.b.f.j.t8.a` @type ^`int`;
  #L237430.  if v2 != v3 then goto L23744a;
  #L237434.  call temp:= `get`(v4) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L23743a.  v2:= temp @kind object;
  #L23743c.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L237442.  v5:= temp @kind object;
  #L237444.  if v2 != v5 then goto L23744a;
  #L237448.  return v1;
  #L23744a.  return v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.j.t8` v1 @kind this) @signature `Le/e/a/b/f/j/t8;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23745c.  v0:= v1.`e.e.a.b.f.j.t8.a` @type ^`int`;
  #L237460.  return v0;
}
