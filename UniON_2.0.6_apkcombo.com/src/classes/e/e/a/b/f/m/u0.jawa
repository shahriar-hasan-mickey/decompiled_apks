record `e.e.a.b.f.m.u0` @kind class @AccessFlag  extends `e.e.a.b.f.m.e1` @kind class {
  `java.util.Map` `e.e.a.b.f.m.u0.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.m.u0` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/m/u0;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2677a4.  call `<init>`(v0) @signature `Le/e/a/b/f/m/e1;.<init>:()V` @kind direct;
  #L2677aa.  if v1 == 0 then goto L2677b4;
  #L2677ae.  v0.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` := v1 @kind object;
  #L2677b2.  return @kind void;
  #L2677b4.  v1:= 0I;
  #L2677b6.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.m.u0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/u0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L267744.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L267748.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L26774e.  v2:= temp;
  #L267750.  return v2;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.m.u0` v1 @kind this) @signature `Le/e/a/b/f/m/u0;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L267764.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L267768.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L26776e.  v0:= temp;
  #L267770.  return v0;
}
procedure `int` `size`(`e.e.a.b.f.m.u0` v1 @kind this) @signature `Le/e/a/b/f/m/u0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L267784.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L267788.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L26778e.  v0:= temp;
  #L267790.  return v0;
}
