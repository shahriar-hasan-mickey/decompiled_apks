record `e.e.a.b.f.n.om` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.om.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.om` `@@e.e.a.b.f.n.om.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.om` `@@e.e.a.b.f.n.om.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.om` `@@e.e.a.b.f.n.om.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.om`[] `@@e.e.a.b.f.n.om.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/om;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a2668.  v0:= new `e.e.a.b.f.n.om`;
  #L2a266c.  v1:= 0I;
  #L2a266e.  v2:= "UNDEFINED" @kind object;
  #L2a2672.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/om;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2678.  `@@e.e.a.b.f.n.om.c` @type ^`e.e.a.b.f.n.om` := v0 @kind object;
  #L2a267c.  v0:= new `e.e.a.b.f.n.om`;
  #L2a2680.  v2:= 1I;
  #L2a2682.  v3:= "LEVELDB_UNCOMPRESSED" @kind object;
  #L2a2686.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/om;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a268c.  `@@e.e.a.b.f.n.om.d` @type ^`e.e.a.b.f.n.om` := v0 @kind object;
  #L2a2690.  v0:= new `e.e.a.b.f.n.om`;
  #L2a2694.  v3:= 2I;
  #L2a2696.  v4:= "LEVELDB_HASHED" @kind object;
  #L2a269a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/om;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a26a0.  `@@e.e.a.b.f.n.om.e` @type ^`e.e.a.b.f.n.om` := v0 @kind object;
  #L2a26a4.  v0:= 3I;
  #L2a26a6.  v0:= new `e.e.a.b.f.n.om`[v0];
  #L2a26aa.  v4:= `@@e.e.a.b.f.n.om.c` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a26ae.  v0[v1]:= v4 @kind object;
  #L2a26b2.  v1:= `@@e.e.a.b.f.n.om.d` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a26b6.  v0[v2]:= v1 @kind object;
  #L2a26ba.  v1:= `@@e.e.a.b.f.n.om.e` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a26be.  v0[v3]:= v1 @kind object;
  #L2a26c2.  `@@e.e.a.b.f.n.om.f` @type ^`e.e.a.b.f.n.om`[] := v0 @kind object;
  #L2a26c6.  v0:= new `e.e.a.b.f.n.mm`;
  #L2a26ca.  call `<init>`(v0) @signature `Le/e/a/b/f/n/mm;.<init>:()V` @kind direct;
  #L2a26d0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.om` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/om;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a26e4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a26ea.  v0.`e.e.a.b.f.n.om.b` @type ^`int` := v3;
  #L2a26ee.  return @kind void;
}
procedure `e.e.a.b.f.n.om` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/om;.a:(I)Le/e/a/b/f/n/om;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a2564.  if v1 == 0 then goto L2a2584;
  #L2a2568.  v0:= 1I;
  #L2a256a.  if v1 == v0 then goto L2a257e;
  #L2a256e.  v0:= 2I;
  #L2a2570.  if v1 == v0 then goto L2a2578;
  #L2a2574.  v1:= 0I;
  #L2a2576.  return v1 @kind object;
  #L2a2578.  v1:= `@@e.e.a.b.f.n.om.e` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a257c.  return v1 @kind object;
  #L2a257e.  v1:= `@@e.e.a.b.f.n.om.d` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a2582.  return v1 @kind object;
  #L2a2584.  v1:= `@@e.e.a.b.f.n.om.c` @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a2588.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/om;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a254c.  v0:= `@@e.e.a.b.f.n.nm.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2a2550.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.om`[] `values`() @signature `Le/e/a/b/f/n/om;.values:()[Le/e/a/b/f/n/om;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a259c.  v0:= `@@e.e.a.b.f.n.om.f` @type ^`e.e.a.b.f.n.om`[] @kind object;
  #L2a25a0.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/om;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a25a6.  v0:= temp @kind object;
  #L2a25a8.  v0:= (`e.e.a.b.f.n.om`[]) v0 @kind object;
  #L2a25ac.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.om` v2 @kind this) @signature `Le/e/a/b/f/n/om;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a25d8.  v0:= new `java.lang.StringBuilder`;
  #L2a25dc.  v1:= "<" @kind object;
  #L2a25e0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a25e6.  v1:= constclass @type ^`e.e.a.b.f.n.om` @kind object;
  #L2a25ea.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2a25f0.  v1:= temp @kind object;
  #L2a25f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a25f8.  v1:= 64I;
  #L2a25fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2602.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2a2608.  v1:= temp;
  #L2a260a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2a2610.  v1:= temp @kind object;
  #L2a2612.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2618.  v1:= " number=" @kind object;
  #L2a261c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2622.  v1:= v2.`e.e.a.b.f.n.om.b` @type ^`int`;
  #L2a2626.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a262c.  v1:= " name=" @kind object;
  #L2a2630.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2636.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2a263c.  v1:= temp @kind object;
  #L2a263e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2644.  v1:= 62I;
  #L2a2648.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a264e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a2654.  v0:= temp @kind object;
  #L2a2656.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.om` v1 @kind this) @signature `Le/e/a/b/f/n/om;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a25c0.  v0:= v1.`e.e.a.b.f.n.om.b` @type ^`int`;
  #L2a25c4.  return v0;
}
