record `e.e.a.b.f.b.g4` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.d4` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.b.g4` v0 @kind this) @signature `Le/e/a/b/f/b/g4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L210d30.  call `<init>`(v0) @signature `Le/e/a/b/f/b/d4;.<init>:()V` @kind direct;
  #L210d36.  return @kind void;
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 , `long` v4 , `int` v6 ) @signature `Le/e/a/b/f/b/g4;.a:([BIJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L21081c.  if v6 == 0 then goto L21086a;
  #L210820.  v0:= 1I;
  #L210822.  if v6 == v0 then goto L210858;
  #L210826.  v0:= 2I;
  #L210828.  if v6 != v0 then goto L21084c;
  #L21082c.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L210832.  v6:= temp;
  #L210834.  v0:= 1L;
  #L210838.  v4:= v4 + v0 @kind long;
  #L21083a.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L210840.  v2:= temp;
  #L210842.  call temp:= `b`(v3, v6, v2) @signature `Le/e/a/b/f/b/c4;.b:(III)I` @kind static;
  #L210848.  v2:= temp;
  #L21084a.  return v2;
  #L21084c.  v2:= new `java.lang.AssertionError`;
  #L210850.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L210856.  throw v2;
  #L210858.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L21085e.  v2:= temp;
  #L210860.  call temp:= `b`(v3, v2) @signature `Le/e/a/b/f/b/c4;.b:(II)I` @kind static;
  #L210866.  v2:= temp;
  #L210868.  return v2;
  #L21086a.  call temp:= `b`(v3) @signature `Le/e/a/b/f/b/c4;.b:(I)I` @kind static;
  #L210870.  v2:= temp;
  #L210872.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.b.g4` v15 @kind this, `int` v16 , `byte`[] v17 @kind object, `int` v18 , `int` v19 ) @signature `Le/e/a/b/f/b/g4;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L210884.  v0:= v17 @kind object;
  #L210888.  v1:= v18;
  #L21088c.  v2:= v19;
  #L210890.  v3:= v1 ^| v2 @kind int;
  #L210894.  v4:= length @variable v0;
  #L210896.  v4:= v4 - v2 @kind int;
  #L210898.  v3:= v3 ^| v4 @kind int;
  #L21089a.  v4:= 2I;
  #L21089c.  v5:= 3I;
  #L21089e.  v6:= 0I;
  #L2108a0.  if v3 < 0 then goto L2109f8;
  #L2108a4.  v7:= (`long`) v1 @kind i2l;
  #L2108a6.  v1:= (`long`) v2 @kind i2l;
  #L2108a8.  v1:= v1 - v7 @kind long;
  #L2108aa.  v2:= (`int`) v1 @kind l2i;
  #L2108ac.  v1:= 16I;
  #L2108b0.  v9:= 1L;
  #L2108b4.  if v2 >= v1 then goto L2108bc;
  #L2108b8.  v1:= 0I;
  #L2108ba.  goto L2108e0;
  #L2108bc.  v11:= v7 @kind wide;
  #L2108be.  v1:= 0I;
  #L2108c0.  if v1 >= v2 then goto L2108de;
  #L2108c4.  v13:= v11 + v9 @kind long;
  #L2108c8.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L2108ce.  v3:= temp;
  #L2108d0.  if v3 >= 0 then goto L2108d6;
  #L2108d4.  goto L2108e0;
  #L2108d6.  v1:= v1 + 1;
  #L2108da.  v11:= v13 @kind wide;
  #L2108dc.  goto L2108c0;
  #L2108de.  v1:= v2;
  #L2108e0.  v2:= v2 - v1 @kind int;
  #L2108e2.  v11:= (`long`) v1 @kind i2l;
  #L2108e4.  v7:= v7 + v11 @kind long;
  #L2108e6.  v1:= 0I;
  #L2108e8.  if v2 <= 0 then goto L210904;
  #L2108ec.  v11:= v7 + v9 @kind long;
  #L2108f0.  call temp:= `a`(v0, v7) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L2108f6.  v1:= temp;
  #L2108f8.  if v1 < 0 then goto L210906;
  #L2108fc.  v2:= v2 + -1;
  #L210900.  v7:= v11 @kind wide;
  #L210902.  goto L2108e8;
  #L210904.  v11:= v7 @kind wide;
  #L210906.  if v2 != 0 then goto L21090c;
  #L21090a.  return v6;
  #L21090c.  v2:= v2 + -1;
  #L210910.  v3:= -32I;
  #L210914.  v7:= -65I;
  #L210918.  v8:= -1I;
  #L21091a.  if v1 >= v3 then goto L210948;
  #L21091e.  if v2 != 0 then goto L210924;
  #L210922.  return v1;
  #L210924.  v2:= v2 + -1;
  #L210928.  v3:= -62I;
  #L21092c.  if v1 < v3 then goto L210946;
  #L210930.  v13:= v11 + v9 @kind long;
  #L210934.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L21093a.  v1:= temp;
  #L21093c.  if v1 <= v7 then goto L210942;
  #L210940.  goto L210946;
  #L210942.  v7:= v13 @kind wide;
  #L210944.  goto L2108e6;
  #L210946.  return v8;
  #L210948.  v13:= -16I;
  #L21094c.  if v1 >= v13 then goto L2109a2;
  #L210950.  if v2 >= v4 then goto L21095e;
  #L210954.  call temp:= `a`(v0, v1, v11, v2) @signature `Le/e/a/b/f/b/g4;.a:([BIJI)I` @kind static;
  #L21095a.  v0:= temp;
  #L21095c.  return v0;
  #L21095e.  v2:= v2 + -2;
  #L210962.  v13:= v11 + v9 @kind long;
  #L210966.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L21096c.  v11:= temp;
  #L21096e.  if v11 > v7 then goto L2109a0;
  #L210972.  v12:= -96I;
  #L210976.  if v1 != v3 then goto L21097e;
  #L21097a.  if v11 < v12 then goto L2109a0;
  #L21097e.  v3:= -19I;
  #L210982.  if v1 != v3 then goto L21098a;
  #L210986.  if v11 >= v12 then goto L2109a0;
  #L21098a.  v11:= v13 + v9 @kind long;
  #L21098e.  call temp:= `a`(v0, v13) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L210994.  v1:= temp;
  #L210996.  if v1 <= v7 then goto L21099c;
  #L21099a.  goto L2109a0;
  #L21099c.  v7:= v11 @kind wide;
  #L21099e.  goto L2108e6;
  #L2109a0.  return v8;
  #L2109a2.  if v2 >= v5 then goto L2109b0;
  #L2109a6.  call temp:= `a`(v0, v1, v11, v2) @signature `Le/e/a/b/f/b/g4;.a:([BIJI)I` @kind static;
  #L2109ac.  v0:= temp;
  #L2109ae.  return v0;
  #L2109b0.  v2:= v2 + -3;
  #L2109b4.  v13:= v11 + v9 @kind long;
  #L2109b8.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L2109be.  v3:= temp;
  #L2109c0.  if v3 > v7 then goto L2109f6;
  #L2109c4.  v1:= v1 ^< 28;
  #L2109c8.  v3:= v3 + 112;
  #L2109cc.  v1:= v1 + v3 @kind int;
  #L2109ce.  v1:= v1 ^> 30;
  #L2109d2.  if v1 != 0 then goto L2109f6;
  #L2109d6.  v11:= v13 + v9 @kind long;
  #L2109da.  call temp:= `a`(v0, v13) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L2109e0.  v1:= temp;
  #L2109e2.  if v1 > v7 then goto L2109f6;
  #L2109e6.  v13:= v11 + v9 @kind long;
  #L2109ea.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @kind static;
  #L2109f0.  v1:= temp;
  #L2109f2.  if v1 <= v7 then goto L210942;
  #L2109f6.  return v8;
  #L2109f8.  v3:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2109fc.  v5:= new `java.lang.Object`[v5];
  #L210a00.  v0:= length @variable v0;
  #L210a02.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L210a08.  v0:= temp @kind object;
  #L210a0a.  v5[v6]:= v0 @kind object;
  #L210a0e.  call temp:= `valueOf`(v18) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L210a14.  v0:= temp @kind object;
  #L210a16.  v1:= 1I;
  #L210a18.  v5[v1]:= v0 @kind object;
  #L210a1c.  call temp:= `valueOf`(v19) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L210a22.  v0:= temp @kind object;
  #L210a24.  v5[v4]:= v0 @kind object;
  #L210a28.  v0:= "Array length=%d, index=%d, limit=%d" @kind object;
  #L210a2c.  call temp:= `format`(v0, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L210a32.  v0:= temp @kind object;
  #L210a34.  call `<init>`(v3, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L210a3a.  throw v3;
}
procedure `int` `a`(`e.e.a.b.f.b.g4` v22 @kind this, `java.lang.CharSequence` v23 @kind object, `byte`[] v24 @kind object, `int` v25 , `int` v26 ) @signature `Le/e/a/b/f/b/g4;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L210a4c.  v0:= v23 @kind object;
  #L210a50.  v1:= v24 @kind object;
  #L210a54.  v2:= v25;
  #L210a58.  v3:= v26;
  #L210a5c.  v4:= (`long`) v2 @kind i2l;
  #L210a5e.  v6:= (`long`) v3 @kind i2l;
  #L210a60.  v6:= v6 + v4 @kind long;
  #L210a62.  call temp:= `length`(v23) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L210a68.  v8:= temp;
  #L210a6a.  v9:= " at index " @kind object;
  #L210a6e.  v10:= "Failed writing " @kind object;
  #L210a72.  if v8 > v3 then goto L210cd8;
  #L210a76.  v11:= length @variable v1;
  #L210a78.  v11:= v11 - v3 @kind int;
  #L210a7a.  if v11 < v2 then goto L210cd8;
  #L210a7e.  v2:= 0I;
  #L210a80.  v3:= 128I;
  #L210a84.  v11:= 1L;
  #L210a88.  if v2 >= v8 then goto L210aaa;
  #L210a8c.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210a92.  v13:= temp;
  #L210a94.  if v13 >= v3 then goto L210aaa;
  #L210a98.  v11:= v11 + v4 @kind long;
  #L210a9a.  v3:= (`byte`) v13 @kind i2b;
  #L210a9c.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210aa2.  v2:= v2 + 1;
  #L210aa6.  v4:= v11 @kind wide;
  #L210aa8.  goto L210a80;
  #L210aaa.  if v2 != v8 then goto L210ab2;
  #L210aae.  v0:= (`int`) v4 @kind l2i;
  #L210ab0.  return v0;
  #L210ab2.  if v2 >= v8 then goto L210cd4;
  #L210ab6.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210abc.  v13:= temp;
  #L210abe.  if v13 >= v3 then goto L210ae2;
  #L210ac2.  v14:= lcmp(v4, v6);
  #L210ac6.  if v14 >= 0 then goto L210ae2;
  #L210aca.  v14:= v4 + v11 @kind long;
  #L210ace.  v13:= (`byte`) v13 @kind i2b;
  #L210ad0.  call `a`(v1, v4, v13) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210ad6.  v4:= v11 @kind wide;
  #L210ad8.  v12:= v14 @kind wide;
  #L210ada.  v11:= 128I;
  #L210ade.  goto L210c42;
  #L210ae2.  v14:= 2048I;
  #L210ae6.  if v13 >= v14 then goto L210b36;
  #L210aea.  v14:= 2L;
  #L210aee.  v14:= v6 - v14 @kind long;
  #L210af2.  v16:= lcmp(v4, v14);
  #L210af6.  if v16 > 0 then goto L210b36;
  #L210afa.  v14:= v4 + v11 @kind long;
  #L210afe.  v3:= v13 ^>> 6;
  #L210b02.  v3:= v3 ^| 960;
  #L210b06.  v3:= (`byte`) v3 @kind i2b;
  #L210b08.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210b0e.  v3:= v14 + v11 @kind long;
  #L210b12.  v5:= v13 ^& 63;
  #L210b16.  v13:= 128I;
  #L210b1a.  v5:= v5 ^| v13 @kind int;
  #L210b1c.  v5:= (`byte`) v5 @kind i2b;
  #L210b1e.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210b24.  v20:= v11 @kind wide;
  #L210b28.  v11:= 128I;
  #L210b2c.  v12:= v3 @kind wide;
  #L210b2e.  v4:= v20 @kind wide;
  #L210b32.  goto L210c42;
  #L210b36.  v3:= 57343I;
  #L210b3c.  v14:= 55296I;
  #L210b42.  if v13 < v14 then goto L210b4a;
  #L210b46.  if v3 >= v13 then goto L210ba8;
  #L210b4a.  v15:= 3L;
  #L210b4e.  v15:= v6 - v15 @kind long;
  #L210b52.  v17:= lcmp(v4, v15);
  #L210b56.  if v17 > 0 then goto L210ba8;
  #L210b5a.  v14:= v4 + v11 @kind long;
  #L210b5e.  v3:= v13 ^>> 12;
  #L210b62.  v3:= v3 ^| 480;
  #L210b66.  v3:= (`byte`) v3 @kind i2b;
  #L210b68.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210b6e.  v3:= v14 + v11 @kind long;
  #L210b72.  v5:= v13 ^>> 6;
  #L210b76.  v5:= v5 ^& 63;
  #L210b7a.  v11:= 128I;
  #L210b7e.  v5:= v5 ^| v11 @kind int;
  #L210b80.  v5:= (`byte`) v5 @kind i2b;
  #L210b82.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210b88.  v14:= 1L;
  #L210b8c.  v18:= v3 + v14 @kind long;
  #L210b90.  v5:= v13 ^& 63;
  #L210b94.  v5:= v5 ^| v11 @kind int;
  #L210b96.  v5:= (`byte`) v5 @kind i2b;
  #L210b98.  call `a`(v1, v3, v5) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210b9e.  v12:= v18 @kind wide;
  #L210ba2.  v4:= 1L;
  #L210ba6.  goto L210ada;
  #L210ba8.  v11:= 4L;
  #L210bac.  v11:= v6 - v11 @kind long;
  #L210bb0.  v15:= lcmp(v4, v11);
  #L210bb4.  if v15 > 0 then goto L210c6a;
  #L210bb8.  v3:= v2 + 1;
  #L210bbc.  if v3 == v8 then goto L210c5a;
  #L210bc0.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210bc6.  v2:= temp;
  #L210bc8.  call temp:= `isSurrogatePair`(v13, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L210bce.  v11:= temp;
  #L210bd0.  if v11 == 0 then goto L210c58;
  #L210bd4.  call temp:= `toCodePoint`(v13, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L210bda.  v2:= temp;
  #L210bdc.  v11:= 1L;
  #L210be0.  v13:= v4 + v11 @kind long;
  #L210be4.  v15:= v2 ^>> 18;
  #L210be8.  v15:= v15 ^| 240;
  #L210bec.  v15:= (`byte`) v15 @kind i2b;
  #L210bee.  call `a`(v1, v4, v15) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210bf4.  v4:= v13 + v11 @kind long;
  #L210bf8.  v15:= v2 ^>> 12;
  #L210bfc.  v15:= v15 ^& 63;
  #L210c00.  v11:= 128I;
  #L210c04.  v12:= v15 ^| 128;
  #L210c08.  v12:= (`byte`) v12 @kind i2b;
  #L210c0a.  call `a`(v1, v13, v12) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210c10.  v12:= 1L;
  #L210c14.  v14:= v4 + v12 @kind long;
  #L210c18.  v16:= v2 ^>> 6;
  #L210c1c.  v12:= v16 ^& 63;
  #L210c20.  v12:= v12 ^| v11 @kind int;
  #L210c22.  v12:= (`byte`) v12 @kind i2b;
  #L210c24.  call `a`(v1, v4, v12) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210c2a.  v4:= 1L;
  #L210c2e.  v12:= v14 + v4 @kind long;
  #L210c32.  v2:= v2 ^& 63;
  #L210c36.  v2:= v2 ^| v11 @kind int;
  #L210c38.  v2:= (`byte`) v2 @kind i2b;
  #L210c3a.  call `a`(v1, v14, v2) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L210c40.  v2:= v3;
  #L210c42.  v2:= v2 + 1;
  #L210c46.  v3:= 128I;
  #L210c4a.  v20:= v4 @kind wide;
  #L210c4e.  v4:= v12 @kind wide;
  #L210c50.  v11:= v20 @kind wide;
  #L210c54.  goto L210ab2;
  #L210c58.  v2:= v3;
  #L210c5a.  v0:= new `e.e.a.b.f.b.f4`;
  #L210c5e.  v2:= v2 + -1;
  #L210c62.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210c68.  throw v0;
  #L210c6a.  if v14 > v13 then goto L210c9a;
  #L210c6e.  if v13 > v3 then goto L210c9a;
  #L210c72.  v1:= v2 + 1;
  #L210c76.  if v1 == v8 then goto L210c8e;
  #L210c7a.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210c80.  v0:= temp;
  #L210c82.  call temp:= `isSurrogatePair`(v13, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L210c88.  v0:= temp;
  #L210c8a.  if v0 != 0 then goto L210c9a;
  #L210c8e.  v0:= new `e.e.a.b.f.b.f4`;
  #L210c92.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210c98.  throw v0;
  #L210c9a.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L210c9e.  v1:= 46I;
  #L210ca2.  v2:= new `java.lang.StringBuilder`;
  #L210ca6.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L210cac.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210cb2.  call temp:= `append`(v2, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L210cb8.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210cbe.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L210cc4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L210cca.  v1:= temp @kind object;
  #L210ccc.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L210cd2.  throw v0;
  #L210cd4.  v0:= (`int`) v4 @kind l2i;
  #L210cd6.  return v0;
  #L210cd8.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L210cdc.  v8:= v8 + -1;
  #L210ce0.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210ce6.  v0:= temp;
  #L210ce8.  v2:= v2 + v3 @kind int;
  #L210cea.  v3:= 37I;
  #L210cee.  v4:= new `java.lang.StringBuilder`;
  #L210cf2.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L210cf8.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210cfe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L210d04.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210d0a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L210d10.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L210d16.  v0:= temp @kind object;
  #L210d18.  call `<init>`(v1, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L210d1e.  throw v1;
}
procedure `void` `a`(`e.e.a.b.f.b.g4` v21 @kind this, `java.lang.CharSequence` v22 @kind object, `java.nio.ByteBuffer` v23 @kind object) @signature `Le/e/a/b/f/b/g4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L210d48.  v0:= v22 @kind object;
  #L210d4c.  v1:= v23 @kind object;
  #L210d50.  call temp:= `a`(v23) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L210d56.  v2:= temp @kind wide;
  #L210d58.  call temp:= `position`(v23) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L210d5e.  v4:= temp;
  #L210d60.  v4:= (`long`) v4 @kind i2l;
  #L210d62.  v4:= v4 + v2 @kind long;
  #L210d64.  call temp:= `limit`(v23) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L210d6a.  v6:= temp;
  #L210d6c.  v6:= (`long`) v6 @kind i2l;
  #L210d6e.  v6:= v6 + v2 @kind long;
  #L210d70.  call temp:= `length`(v22) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L210d76.  v8:= temp;
  #L210d78.  v9:= (`long`) v8 @kind i2l;
  #L210d7a.  v11:= v6 - v4 @kind long;
  #L210d7e.  v13:= " at index " @kind object;
  #L210d82.  v14:= "Failed writing " @kind object;
  #L210d86.  v15:= lcmp(v9, v11);
  #L210d8a.  if v15 > 0 then goto L210fec;
  #L210d8e.  v9:= 0I;
  #L210d90.  v10:= 128I;
  #L210d94.  v11:= 1L;
  #L210d98.  if v9 >= v8 then goto L210dbc;
  #L210d9c.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210da2.  v15:= temp;
  #L210da4.  if v15 >= v10 then goto L210dbc;
  #L210da8.  v10:= v4 + v11 @kind long;
  #L210dac.  v12:= (`byte`) v15 @kind i2b;
  #L210dae.  call `a`(v4, v12) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210db4.  v9:= v9 + 1;
  #L210db8.  v4:= v10 @kind wide;
  #L210dba.  goto L210d90;
  #L210dbc.  if v9 != v8 then goto L210dcc;
  #L210dc0.  v4:= v4 - v2 @kind long;
  #L210dc2.  v0:= (`int`) v4 @kind l2i;
  #L210dc4.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L210dca.  return @kind void;
  #L210dcc.  if v9 >= v8 then goto L210fda;
  #L210dd0.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210dd6.  v15:= temp;
  #L210dd8.  if v15 >= v10 then goto L210e00;
  #L210ddc.  v16:= lcmp(v4, v6);
  #L210de0.  if v16 >= 0 then goto L210e00;
  #L210de4.  v16:= v4 + v11 @kind long;
  #L210de8.  v15:= (`byte`) v15 @kind i2b;
  #L210dea.  call `a`(v4, v15) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210df0.  v4:= v16 @kind wide;
  #L210df4.  v15:= 128I;
  #L210df8.  v17:= v2 @kind wide;
  #L210dfc.  goto L210f4a;
  #L210e00.  v10:= 2048I;
  #L210e04.  if v15 >= v10 then goto L210e50;
  #L210e08.  v17:= 2L;
  #L210e0c.  v17:= v6 - v17 @kind long;
  #L210e10.  v10:= lcmp(v4, v17);
  #L210e14.  if v10 > 0 then goto L210e50;
  #L210e18.  v17:= v2 @kind wide;
  #L210e1c.  v1:= v4 + v11 @kind long;
  #L210e20.  v3:= v15 ^>> 6;
  #L210e24.  v3:= v3 ^| 960;
  #L210e28.  v3:= (`byte`) v3 @kind i2b;
  #L210e2a.  call `a`(v4, v3) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210e30.  v3:= v1 + v11 @kind long;
  #L210e34.  v5:= v15 ^& 63;
  #L210e38.  v10:= 128I;
  #L210e3c.  v5:= v5 ^| v10 @kind int;
  #L210e3e.  v5:= (`byte`) v5 @kind i2b;
  #L210e40.  call `a`(v1, v5) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210e46.  v4:= v3 @kind wide;
  #L210e48.  v15:= 128I;
  #L210e4c.  goto L210f4a;
  #L210e50.  v17:= v2 @kind wide;
  #L210e54.  v1:= 57343I;
  #L210e5a.  v2:= 55296I;
  #L210e60.  if v15 < v2 then goto L210e68;
  #L210e64.  if v1 >= v15 then goto L210ebc;
  #L210e68.  v19:= 3L;
  #L210e6c.  v19:= v6 - v19 @kind long;
  #L210e70.  v3:= lcmp(v4, v19);
  #L210e74.  if v3 > 0 then goto L210ebc;
  #L210e78.  v1:= v4 + v11 @kind long;
  #L210e7c.  v3:= v15 ^>> 12;
  #L210e80.  v3:= v3 ^| 480;
  #L210e84.  v3:= (`byte`) v3 @kind i2b;
  #L210e86.  call `a`(v4, v3) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210e8c.  v3:= v1 + v11 @kind long;
  #L210e90.  v5:= v15 ^>> 6;
  #L210e94.  v5:= v5 ^& 63;
  #L210e98.  v10:= 128I;
  #L210e9c.  v5:= v5 ^| v10 @kind int;
  #L210e9e.  v5:= (`byte`) v5 @kind i2b;
  #L210ea0.  call `a`(v1, v5) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210ea6.  v1:= v3 + v11 @kind long;
  #L210eaa.  v5:= v15 ^& 63;
  #L210eae.  v5:= v5 ^| v10 @kind int;
  #L210eb0.  v5:= (`byte`) v5 @kind i2b;
  #L210eb2.  call `a`(v3, v5) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210eb8.  v4:= v1 @kind wide;
  #L210eba.  goto L210e48;
  #L210ebc.  v19:= 4L;
  #L210ec0.  v19:= v6 - v19 @kind long;
  #L210ec4.  v3:= lcmp(v4, v19);
  #L210ec8.  if v3 > 0 then goto L210f70;
  #L210ecc.  v1:= v9 + 1;
  #L210ed0.  if v1 == v8 then goto L210f5e;
  #L210ed4.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210eda.  v2:= temp;
  #L210edc.  call temp:= `isSurrogatePair`(v15, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L210ee2.  v3:= temp;
  #L210ee4.  if v3 == 0 then goto L210f60;
  #L210ee8.  call temp:= `toCodePoint`(v15, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L210eee.  v2:= temp;
  #L210ef0.  v9:= v4 + v11 @kind long;
  #L210ef4.  v3:= v2 ^>> 18;
  #L210ef8.  v3:= v3 ^| 240;
  #L210efc.  v3:= (`byte`) v3 @kind i2b;
  #L210efe.  call `a`(v4, v3) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210f04.  v3:= v9 + v11 @kind long;
  #L210f08.  v5:= v2 ^>> 12;
  #L210f0c.  v5:= v5 ^& 63;
  #L210f10.  v15:= 128I;
  #L210f14.  v5:= v5 ^| v15 @kind int;
  #L210f16.  v5:= (`byte`) v5 @kind i2b;
  #L210f18.  call `a`(v9, v5) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210f1e.  v9:= v3 + v11 @kind long;
  #L210f22.  v5:= v2 ^>> 6;
  #L210f26.  v5:= v5 ^& 63;
  #L210f2a.  v5:= v5 ^| v15 @kind int;
  #L210f2c.  v5:= (`byte`) v5 @kind i2b;
  #L210f2e.  call `a`(v3, v5) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210f34.  v3:= v9 + v11 @kind long;
  #L210f38.  v2:= v2 ^& 63;
  #L210f3c.  v2:= v2 ^| v15 @kind int;
  #L210f3e.  v2:= (`byte`) v2 @kind i2b;
  #L210f40.  call `a`(v9, v2) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L210f46.  v9:= v1;
  #L210f48.  v4:= v3 @kind wide;
  #L210f4a.  v9:= v9 + 1;
  #L210f4e.  v1:= v23 @kind object;
  #L210f52.  v2:= v17 @kind wide;
  #L210f56.  v10:= 128I;
  #L210f5a.  goto L210dcc;
  #L210f5e.  v1:= v9;
  #L210f60.  v0:= new `e.e.a.b.f.b.f4`;
  #L210f64.  v1:= v1 + -1;
  #L210f68.  call `<init>`(v0, v1, v8) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210f6e.  throw v0;
  #L210f70.  if v2 > v15 then goto L210fa0;
  #L210f74.  if v15 > v1 then goto L210fa0;
  #L210f78.  v1:= v9 + 1;
  #L210f7c.  if v1 == v8 then goto L210f94;
  #L210f80.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210f86.  v0:= temp;
  #L210f88.  call temp:= `isSurrogatePair`(v15, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L210f8e.  v0:= temp;
  #L210f90.  if v0 != 0 then goto L210fa0;
  #L210f94.  v0:= new `e.e.a.b.f.b.f4`;
  #L210f98.  call `<init>`(v0, v9, v8) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210f9e.  throw v0;
  #L210fa0.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L210fa4.  v1:= 46I;
  #L210fa8.  v2:= new `java.lang.StringBuilder`;
  #L210fac.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L210fb2.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210fb8.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L210fbe.  call temp:= `append`(v2, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210fc4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L210fca.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L210fd0.  v1:= temp @kind object;
  #L210fd2.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L210fd8.  throw v0;
  #L210fda.  v17:= v2 @kind wide;
  #L210fde.  v4:= v4 - v17 @kind long;
  #L210fe2.  v0:= (`int`) v4 @kind l2i;
  #L210fe4.  v1:= v23 @kind object;
  #L210fe8.  goto L210dc4;
  #L210fec.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L210ff0.  v8:= v8 + -1;
  #L210ff4.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210ffa.  v0:= temp;
  #L210ffc.  call temp:= `limit`(v23) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211002.  v1:= temp;
  #L211004.  v3:= 37I;
  #L211008.  v4:= new `java.lang.StringBuilder`;
  #L21100c.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L211012.  call temp:= `append`(v4, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L211018.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21101e.  call temp:= `append`(v4, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L211024.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21102a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L211030.  v0:= temp @kind object;
  #L211032.  call `<init>`(v2, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L211038.  throw v2;
}
