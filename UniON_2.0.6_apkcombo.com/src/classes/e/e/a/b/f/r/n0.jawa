record `e.e.a.b.f.r.n0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.r.i0` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `e.e.a.b.f.r.p1` `@@e.e.a.b.f.r.n0.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/r/n0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L30dec8.  v0:= new `e.e.a.b.f.r.l0`;
  #L30decc.  v1:= `@@e.e.a.b.f.r.h1.f` @type ^`e.e.a.b.f.r.n0` @kind object;
  #L30ded0.  v2:= 0I;
  #L30ded2.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/r/l0;.<init>:(Le/e/a/b/f/r/n0;I)V` @kind direct;
  #L30ded8.  `@@e.e.a.b.f.r.n0.c` @type ^`e.e.a.b.f.r.p1` := v0 @kind object;
  #L30dedc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.r.n0` v0 @kind this) @signature `Le/e/a/b/f/r/n0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30def0.  call `<init>`(v0) @signature `Le/e/a/b/f/r/i0;.<init>:()V` @kind direct;
  #L30def6.  return @kind void;
}
procedure `e.e.a.b.f.r.n0` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/r/n0;.a:(Ljava/lang/Object;)Le/e/a/b/f/r/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L30dc54.  v0:= 1I;
  #L30dc56.  v1:= new `java.lang.Object`[v0];
  #L30dc5a.  v2:= 0I;
  #L30dc5c.  v1[v2]:= v3 @kind object;
  #L30dc60.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/r/g1;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L30dc66.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/r/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/r/n0;` @kind static;
  #L30dc6c.  v3:= temp @kind object;
  #L30dc6e.  return v3 @kind object;
}
procedure `e.e.a.b.f.r.n0` `a`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/n0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Le/e/a/b/f/r/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L30dc80.  v0:= 2I;
  #L30dc82.  v1:= new `java.lang.Object`[v0];
  #L30dc86.  v2:= 0I;
  #L30dc88.  v1[v2]:= v3 @kind object;
  #L30dc8c.  v3:= 1I;
  #L30dc8e.  v1[v3]:= v4 @kind object;
  #L30dc92.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/r/g1;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L30dc98.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/r/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/r/n0;` @kind static;
  #L30dc9e.  v3:= temp @kind object;
  #L30dca0.  return v3 @kind object;
}
procedure `e.e.a.b.f.r.n0` `b`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/r/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/r/n0;` @AccessFlag STATIC {
    temp;
    v0;

  #L30dcb4.  if v2 != 0 then goto L30dcbe;
  #L30dcb8.  v1:= `@@e.e.a.b.f.r.h1.f` @type ^`e.e.a.b.f.r.n0` @kind object;
  #L30dcbc.  return v1 @kind object;
  #L30dcbe.  v0:= new `e.e.a.b.f.r.h1`;
  #L30dcc2.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/r/h1;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L30dcc8.  return v0 @kind object;
}
procedure `e.e.a.b.f.r.k0` `f`() @signature `Le/e/a/b/f/r/n0;.f:()Le/e/a/b/f/r/k0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L30dbf0.  v0:= new `e.e.a.b.f.r.k0`;
  #L30dbf4.  v1:= 4I;
  #L30dbf6.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/k0;.<init>:(I)V` @kind direct;
  #L30dbfc.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.r.n0` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/r/n0;.a:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L30ddec.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L30ddf2.  v4:= temp;
  #L30ddf4.  v0:= 0I;
  #L30ddf6.  if v0 >= v4 then goto L30de0c;
  #L30ddfa.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30de00.  v1:= temp @kind object;
  #L30de02.  v3[v0]:= v1 @kind object;
  #L30de06.  v0:= v0 + 1;
  #L30de0a.  goto L30ddf6;
  #L30de0c.  return v4;
}
procedure `e.e.a.b.f.r.n0` `a`(`e.e.a.b.f.r.n0` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/r/n0;.a:(II)Le/e/a/b/f/r/n0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30dc10.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L30dc16.  v0:= temp;
  #L30dc18.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/r/b;.a:(III)V` @kind static;
  #L30dc1e.  v3:= v3 - v2 @kind int;
  #L30dc20.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L30dc26.  v0:= temp;
  #L30dc28.  if v3 != v0 then goto L30dc2e;
  #L30dc2c.  return v1 @kind object;
  #L30dc2e.  if v3 != 0 then goto L30dc38;
  #L30dc32.  v2:= `@@e.e.a.b.f.r.h1.f` @type ^`e.e.a.b.f.r.n0` @kind object;
  #L30dc36.  return v2 @kind object;
  #L30dc38.  v0:= new `e.e.a.b.f.r.m0`;
  #L30dc3c.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/a/b/f/r/m0;.<init>:(Le/e/a/b/f/r/n0;II)V` @kind direct;
  #L30dc42.  return v0 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/n0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30df08.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30df0c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30df12.  throw v1;
}
procedure `boolean` `addAll`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/r/n0;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30dae4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30dae8.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30daee.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.r.n0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/n0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30db00.  call temp:= `indexOf`(v0, v1) @signature `Le/e/a/b/f/r/n0;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L30db06.  v1:= temp;
  #L30db08.  if v1 < 0 then goto L30db10;
  #L30db0c.  v1:= 1I;
  #L30db0e.  return v1;
  #L30db10.  v1:= 0I;
  #L30db12.  return v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.r.n0` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/r/n0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30db24.  v0:= 1I;
  #L30db26.  v1:= 0I;
  #L30db28.  if v7 != v6 then goto L30db30;
  #L30db2c.  v1:= 1I;
  #L30db2e.  goto L30dbdc;
  #L30db30.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L30db34.  if v2 != 0 then goto L30db3a;
  #L30db38.  goto L30dbdc;
  #L30db3a.  v7:= (`java.util.List`) v7 @kind object;
  #L30db3e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30db44.  v2:= temp;
  #L30db46.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30db4c.  v3:= temp;
  #L30db4e.  if v2 == v3 then goto L30db54;
  #L30db52.  goto L30dbdc;
  #L30db54.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L30db58.  if v3 == 0 then goto L30db86;
  #L30db5c.  v3:= 0I;
  #L30db5e.  if v3 >= v2 then goto L30db2c;
  #L30db62.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30db68.  v4:= temp @kind object;
  #L30db6a.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30db70.  v5:= temp @kind object;
  #L30db72.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30db78.  v4:= temp;
  #L30db7a.  if v4 != 0 then goto L30db80;
  #L30db7e.  goto L30dbdc;
  #L30db80.  v3:= v3 + 1;
  #L30db84.  goto L30db5e;
  #L30db86.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30db8c.  v2:= temp @kind object;
  #L30db8e.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30db94.  v7:= temp @kind object;
  #L30db96.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30db9c.  v3:= temp;
  #L30db9e.  if v3 == 0 then goto L30dbce;
  #L30dba2.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30dba8.  v3:= temp;
  #L30dbaa.  if v3 != 0 then goto L30dbb0;
  #L30dbae.  goto L30dbdc;
  #L30dbb0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30dbb6.  v3:= temp @kind object;
  #L30dbb8.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30dbbe.  v4:= temp @kind object;
  #L30dbc0.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30dbc6.  v3:= temp;
  #L30dbc8.  if v3 != 0 then goto L30db96;
  #L30dbcc.  goto L30dbdc;
  #L30dbce.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30dbd4.  v7:= temp;
  #L30dbd6.  if v7 != 0 then goto L30dbdc;
  #L30dbda.  goto L30db2c;
  #L30dbdc.  return v1;
}
procedure `e.e.a.b.f.r.p1` `h`(`e.e.a.b.f.r.n0` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/r/n0;.h:(I)Le/e/a/b/f/r/p1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30dcdc.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L30dce2.  v0:= temp;
  #L30dce4.  v1:= "index" @kind object;
  #L30dce8.  call temp:= `b`(v3, v0, v1) @signature `Le/e/a/b/f/r/b;.b:(IILjava/lang/String;)I` @kind static;
  #L30dcee.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L30dcf4.  v0:= temp;
  #L30dcf6.  if v0 == 0 then goto L30dd00;
  #L30dcfa.  v3:= `@@e.e.a.b.f.r.n0.c` @type ^`e.e.a.b.f.r.p1` @kind object;
  #L30dcfe.  return v3 @kind object;
  #L30dd00.  v0:= new `e.e.a.b.f.r.l0`;
  #L30dd04.  call `<init>`(v0, v2, v3) @signature `Le/e/a/b/f/r/l0;.<init>:(Le/e/a/b/f/r/n0;I)V` @kind direct;
  #L30dd0a.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.r.n0` v4 @kind this) @signature `Le/e/a/b/f/r/n0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30dd1c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L30dd22.  v0:= temp;
  #L30dd24.  v1:= 1I;
  #L30dd26.  v2:= 0I;
  #L30dd28.  if v2 >= v0 then goto L30dd48;
  #L30dd2c.  v1:= v1 * 31;
  #L30dd30.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30dd36.  v3:= temp @kind object;
  #L30dd38.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30dd3e.  v3:= temp;
  #L30dd40.  v1:= v1 + v3 @kind int;
  #L30dd42.  v2:= v2 + 1;
  #L30dd46.  goto L30dd28;
  #L30dd48.  return v1;
}
procedure `int` `indexOf`(`e.e.a.b.f.r.n0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/r/n0;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30dd5c.  v0:= -1I;
  #L30dd5e.  if v5 != 0 then goto L30dd64;
  #L30dd62.  return v0;
  #L30dd64.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30dd6a.  v1:= temp;
  #L30dd6c.  v2:= 0I;
  #L30dd6e.  if v2 >= v1 then goto L30dd90;
  #L30dd72.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30dd78.  v3:= temp @kind object;
  #L30dd7a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30dd80.  v3:= temp;
  #L30dd82.  if v3 == 0 then goto L30dd8a;
  #L30dd86.  v0:= v2;
  #L30dd88.  goto L30dd90;
  #L30dd8a.  v2:= v2 + 1;
  #L30dd8e.  goto L30dd6e;
  #L30dd90.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.r.n0` v1 @kind this) @signature `Le/e/a/b/f/r/n0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L30de58.  v0:= 0I;
  #L30de5a.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/r/n0;.h:(I)Le/e/a/b/f/r/p1;` @kind virtual;
  #L30de60.  v0:= temp @kind object;
  #L30de62.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`e.e.a.b.f.r.n0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/n0;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30dda4.  v0:= -1I;
  #L30dda6.  if v4 != 0 then goto L30ddac;
  #L30ddaa.  return v0;
  #L30ddac.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30ddb2.  v1:= temp;
  #L30ddb4.  v1:= v1 + v0 @kind int;
  #L30ddb6.  if v1 < 0 then goto L30ddd8;
  #L30ddba.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30ddc0.  v2:= temp @kind object;
  #L30ddc2.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ddc8.  v2:= temp;
  #L30ddca.  if v2 == 0 then goto L30ddd2;
  #L30ddce.  v0:= v1;
  #L30ddd0.  goto L30ddd8;
  #L30ddd2.  v1:= v1 + -1;
  #L30ddd6.  goto L30ddb6;
  #L30ddd8.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.r.n0` v1 @kind this) @signature `Le/e/a/b/f/r/n0;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L30de90.  v0:= 0I;
  #L30de92.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/r/n0;.h:(I)Le/e/a/b/f/r/p1;` @kind virtual;
  #L30de98.  v0:= temp @kind object;
  #L30de9a.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/r/n0;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L30deac.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/r/n0;.h:(I)Le/e/a/b/f/r/p1;` @kind virtual;
  #L30deb2.  v1:= temp @kind object;
  #L30deb4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/r/n0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30de20.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30de24.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30de2a.  throw v1;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/n0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30de3c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30de40.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30de46.  throw v1;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.r.n0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/r/n0;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30de74.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/r/n0;.a:(II)Le/e/a/b/f/r/n0;` @kind virtual;
  #L30de7a.  v1:= temp @kind object;
  #L30de7c.  return v1 @kind object;
}
