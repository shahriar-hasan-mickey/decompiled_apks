record `e.e.a.b.f.r.ob` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/r/ob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31c518.  v0:= constclass @type ^`e.e.a.b.f.r.ob` @kind object;
  #L31c51c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L31c522.  v0:= temp @kind object;
  #L31c524.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L31c52a.  v0:= new `e.e.a.b.f.r.nb`;
  #L31c52e.  v1:= 0I;
  #L31c530.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/nb;.<init>:(Le/e/a/b/f/r/mb;)V` @kind direct;
  #L31c536.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.r.ob` v0 @kind this) @signature `Le/e/a/b/f/r/ob;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31c548.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31c54e.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/r/ob;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;

  #L31c4ec.  if v0 == 0 then goto L31c502;
  #L31c4f0.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L31c4f6.  v0:= temp;
  #L31c4f8.  if v0 == 0 then goto L31c4fe;
  #L31c4fc.  goto L31c502;
  #L31c4fe.  v0:= 0I;
  #L31c500.  return v0;
  #L31c502.  v0:= 1I;
  #L31c504.  return v0;
}
