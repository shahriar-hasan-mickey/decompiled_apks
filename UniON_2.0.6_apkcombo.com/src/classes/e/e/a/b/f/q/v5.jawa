record `e.e.a.b.f.q.v5` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractMap` @kind class {
  `java.util.Set` `e.e.a.b.f.q.v5.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.q.v5.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.q.v5` v0 @kind this) @signature `Le/e/a/b/f/q/v5;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e40d8.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L2e40de.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Le/e/a/b/f/q/v5;.a:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.q.v5` v1 @kind this) @signature `Le/e/a/b/f/q/v5;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e40b0.  v0:= v1.`e.e.a.b.f.q.v5.b` @type ^`java.util.Set` @kind object;
  #L2e40b4.  if v0 != 0 then goto L2e40c4;
  #L2e40b8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/v5;.a:()Ljava/util/Set;` @kind virtual;
  #L2e40be.  v0:= temp @kind object;
  #L2e40c0.  v1.`e.e.a.b.f.q.v5.b` @type ^`java.util.Set` := v0 @kind object;
  #L2e40c4.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.q.v5` v1 @kind this) @signature `Le/e/a/b/f/q/v5;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e4088.  v0:= v1.`e.e.a.b.f.q.v5.c` @type ^`java.util.Collection` @kind object;
  #L2e408c.  if v0 != 0 then goto L2e409e;
  #L2e4090.  v0:= new `e.e.a.b.f.q.u5`;
  #L2e4094.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/u5;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2e409a.  v1.`e.e.a.b.f.q.v5.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2e409e.  return v0 @kind object;
}
