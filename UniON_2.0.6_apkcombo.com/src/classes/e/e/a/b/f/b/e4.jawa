record `e.e.a.b.f.b.e4` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.d4` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.b.e4` v0 @kind this) @signature `Le/e/a/b/f/b/e4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21079c.  call `<init>`(v0) @signature `Le/e/a/b/f/b/d4;.<init>:()V` @kind direct;
  #L2107a2.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.b.e4` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Le/e/a/b/f/b/e4;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21048c.  if v9 >= v10 then goto L21049e;
  #L210490.  v7:= v8[v9] @kind byte;
  #L210494.  if v7 < 0 then goto L21049e;
  #L210498.  v9:= v9 + 1;
  #L21049c.  goto L21048c;
  #L21049e.  v7:= 0I;
  #L2104a0.  if v9 < v10 then goto L2104a6;
  #L2104a4.  return v7;
  #L2104a6.  if v9 < v10 then goto L2104ac;
  #L2104aa.  return v7;
  #L2104ac.  v0:= v9 + 1;
  #L2104b0.  v9:= v8[v9] @kind byte;
  #L2104b4.  if v9 >= 0 then goto L210578;
  #L2104b8.  v1:= -32I;
  #L2104bc.  v2:= -1I;
  #L2104be.  v3:= -65I;
  #L2104c2.  if v9 >= v1 then goto L2104e2;
  #L2104c6.  if v0 < v10 then goto L2104cc;
  #L2104ca.  return v9;
  #L2104cc.  v1:= -62I;
  #L2104d0.  if v9 < v1 then goto L2104e0;
  #L2104d4.  v9:= v0 + 1;
  #L2104d8.  v0:= v8[v0] @kind byte;
  #L2104dc.  if v0 <= v3 then goto L2104a6;
  #L2104e0.  return v2;
  #L2104e2.  v4:= -16I;
  #L2104e6.  if v9 >= v4 then goto L21052e;
  #L2104ea.  v4:= v10 + -1;
  #L2104ee.  if v0 < v4 then goto L2104fc;
  #L2104f2.  call temp:= `c`(v8, v0, v10) @signature `Le/e/a/b/f/b/c4;.c:([BII)I` @kind static;
  #L2104f8.  v7:= temp;
  #L2104fa.  return v7;
  #L2104fc.  v4:= v0 + 1;
  #L210500.  v0:= v8[v0] @kind byte;
  #L210504.  if v0 > v3 then goto L21052c;
  #L210508.  v5:= -96I;
  #L21050c.  if v9 != v1 then goto L210514;
  #L210510.  if v0 < v5 then goto L21052c;
  #L210514.  v1:= -19I;
  #L210518.  if v9 != v1 then goto L210520;
  #L21051c.  if v0 >= v5 then goto L21052c;
  #L210520.  v9:= v4 + 1;
  #L210524.  v0:= v8[v4] @kind byte;
  #L210528.  if v0 <= v3 then goto L2104a6;
  #L21052c.  return v2;
  #L21052e.  v1:= v10 + -2;
  #L210532.  if v0 < v1 then goto L210540;
  #L210536.  call temp:= `c`(v8, v0, v10) @signature `Le/e/a/b/f/b/c4;.c:([BII)I` @kind static;
  #L21053c.  v7:= temp;
  #L21053e.  return v7;
  #L210540.  v1:= v0 + 1;
  #L210544.  v0:= v8[v0] @kind byte;
  #L210548.  if v0 > v3 then goto L210576;
  #L21054c.  v9:= v9 ^< 28;
  #L210550.  v0:= v0 + 112;
  #L210554.  v9:= v9 + v0 @kind int;
  #L210556.  v9:= v9 ^> 30;
  #L21055a.  if v9 != 0 then goto L210576;
  #L21055e.  v9:= v1 + 1;
  #L210562.  v0:= v8[v1] @kind byte;
  #L210566.  if v0 > v3 then goto L210576;
  #L21056a.  v0:= v9 + 1;
  #L21056e.  v9:= v8[v9] @kind byte;
  #L210572.  if v9 <= v3 then goto L210578;
  #L210576.  return v2;
  #L210578.  v9:= v0;
  #L21057a.  goto L2104a6;
}
procedure `int` `a`(`e.e.a.b.f.b.e4` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Le/e/a/b/f/b/e4;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21058c.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L210592.  v0:= temp;
  #L210594.  v11:= v11 + v10 @kind int;
  #L210596.  v1:= 0I;
  #L210598.  v2:= 128I;
  #L21059c.  if v1 >= v0 then goto L2105c0;
  #L2105a0.  v3:= v1 + v10 @kind int;
  #L2105a4.  if v3 >= v11 then goto L2105c0;
  #L2105a8.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2105ae.  v4:= temp;
  #L2105b0.  if v4 >= v2 then goto L2105c0;
  #L2105b4.  v2:= (`byte`) v4 @kind i2b;
  #L2105b6.  v9[v3]:= v2 @kind byte;
  #L2105ba.  v1:= v1 + 1;
  #L2105be.  goto L210598;
  #L2105c0.  if v1 != v0 then goto L2105c8;
  #L2105c4.  v10:= v10 + v0 @kind int;
  #L2105c6.  return v10;
  #L2105c8.  v10:= v10 + v1 @kind int;
  #L2105ca.  if v1 >= v0 then goto L21078a;
  #L2105ce.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2105d4.  v3:= temp;
  #L2105d6.  if v3 >= v2 then goto L2105ee;
  #L2105da.  if v10 >= v11 then goto L2105ee;
  #L2105de.  v4:= v10 + 1;
  #L2105e2.  v3:= (`byte`) v3 @kind i2b;
  #L2105e4.  v9[v10]:= v3 @kind byte;
  #L2105e8.  v10:= v4;
  #L2105ea.  goto L2106f6;
  #L2105ee.  v4:= 2048I;
  #L2105f2.  if v3 >= v4 then goto L210622;
  #L2105f6.  v4:= v11 + -2;
  #L2105fa.  if v10 > v4 then goto L210622;
  #L2105fe.  v4:= v10 + 1;
  #L210602.  v5:= v3 ^>> 6;
  #L210606.  v5:= v5 ^| 960;
  #L21060a.  v5:= (`byte`) v5 @kind i2b;
  #L21060c.  v9[v10]:= v5 @kind byte;
  #L210610.  v10:= v4 + 1;
  #L210614.  v3:= v3 ^& 63;
  #L210618.  v3:= v3 ^| v2 @kind int;
  #L21061a.  v3:= (`byte`) v3 @kind i2b;
  #L21061c.  v9[v4]:= v3 @kind byte;
  #L210620.  goto L2106f6;
  #L210622.  v4:= 57343I;
  #L210628.  v5:= 55296I;
  #L21062e.  if v3 < v5 then goto L210636;
  #L210632.  if v4 >= v3 then goto L210676;
  #L210636.  v6:= v11 + -3;
  #L21063a.  if v10 > v6 then goto L210676;
  #L21063e.  v4:= v10 + 1;
  #L210642.  v5:= v3 ^>> 12;
  #L210646.  v5:= v5 ^| 480;
  #L21064a.  v5:= (`byte`) v5 @kind i2b;
  #L21064c.  v9[v10]:= v5 @kind byte;
  #L210650.  v10:= v4 + 1;
  #L210654.  v5:= v3 ^>> 6;
  #L210658.  v5:= v5 ^& 63;
  #L21065c.  v5:= v5 ^| v2 @kind int;
  #L21065e.  v5:= (`byte`) v5 @kind i2b;
  #L210660.  v9[v4]:= v5 @kind byte;
  #L210664.  v4:= v10 + 1;
  #L210668.  v3:= v3 ^& 63;
  #L21066c.  v3:= v3 ^| v2 @kind int;
  #L21066e.  v3:= (`byte`) v3 @kind i2b;
  #L210670.  v9[v10]:= v3 @kind byte;
  #L210674.  goto L2105e8;
  #L210676.  v6:= v11 + -4;
  #L21067a.  if v10 > v6 then goto L210710;
  #L21067e.  v4:= v1 + 1;
  #L210682.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L210688.  v5:= temp;
  #L21068a.  if v4 == v5 then goto L210700;
  #L21068e.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210694.  v1:= temp;
  #L210696.  call temp:= `isSurrogatePair`(v3, v1) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L21069c.  v5:= temp;
  #L21069e.  if v5 == 0 then goto L2106fe;
  #L2106a2.  call temp:= `toCodePoint`(v3, v1) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L2106a8.  v1:= temp;
  #L2106aa.  v3:= v10 + 1;
  #L2106ae.  v5:= v1 ^>> 18;
  #L2106b2.  v5:= v5 ^| 240;
  #L2106b6.  v5:= (`byte`) v5 @kind i2b;
  #L2106b8.  v9[v10]:= v5 @kind byte;
  #L2106bc.  v10:= v3 + 1;
  #L2106c0.  v5:= v1 ^>> 12;
  #L2106c4.  v5:= v5 ^& 63;
  #L2106c8.  v5:= v5 ^| v2 @kind int;
  #L2106ca.  v5:= (`byte`) v5 @kind i2b;
  #L2106cc.  v9[v3]:= v5 @kind byte;
  #L2106d0.  v3:= v10 + 1;
  #L2106d4.  v5:= v1 ^>> 6;
  #L2106d8.  v5:= v5 ^& 63;
  #L2106dc.  v5:= v5 ^| v2 @kind int;
  #L2106de.  v5:= (`byte`) v5 @kind i2b;
  #L2106e0.  v9[v10]:= v5 @kind byte;
  #L2106e4.  v10:= v3 + 1;
  #L2106e8.  v1:= v1 ^& 63;
  #L2106ec.  v1:= v1 ^| v2 @kind int;
  #L2106ee.  v1:= (`byte`) v1 @kind i2b;
  #L2106f0.  v9[v3]:= v1 @kind byte;
  #L2106f4.  v1:= v4;
  #L2106f6.  v1:= v1 + 1;
  #L2106fa.  goto L2105ca;
  #L2106fe.  v1:= v4;
  #L210700.  v8:= new `e.e.a.b.f.b.f4`;
  #L210704.  v1:= v1 + -1;
  #L210708.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L21070e.  throw v8;
  #L210710.  if v5 > v3 then goto L210748;
  #L210714.  if v3 > v4 then goto L210748;
  #L210718.  v9:= v1 + 1;
  #L21071c.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L210722.  v11:= temp;
  #L210724.  if v9 == v11 then goto L21073c;
  #L210728.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L21072e.  v8:= temp;
  #L210730.  call temp:= `isSurrogatePair`(v3, v8) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L210736.  v8:= temp;
  #L210738.  if v8 != 0 then goto L210748;
  #L21073c.  v8:= new `e.e.a.b.f.b.f4`;
  #L210740.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210746.  throw v8;
  #L210748.  v8:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L21074c.  v9:= 37I;
  #L210750.  v11:= new `java.lang.StringBuilder`;
  #L210754.  call `<init>`(v11, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21075a.  v9:= "Failed writing " @kind object;
  #L21075e.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210764.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21076a.  v9:= " at index " @kind object;
  #L21076e.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L210774.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21077a.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L210780.  v9:= temp @kind object;
  #L210782.  call `<init>`(v8, v9) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L210788.  throw v8;
  #L21078a.  return v10;
}
procedure `void` `a`(`e.e.a.b.f.b.e4` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Le/e/a/b/f/b/e4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag FINAL {
    temp;

  #L2107b4.  call `b`(v1, v2) @signature `Le/e/a/b/f/b/d4;.b:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L2107ba.  return @kind void;
}
