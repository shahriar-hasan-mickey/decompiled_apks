record `e.e.a.b.f.u.e1$c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.u.v4` @kind interface {
  `int` `e.e.a.b.f.u.e1$c.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.u.e1$c` `@@e.e.a.b.f.u.e1$c.c` @AccessFlag PRIVATE_STATIC_FINAL_ENUM;
global `e.e.a.b.f.u.e1$c` `@@e.e.a.b.f.u.e1$c.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.u.e1$c` `@@e.e.a.b.f.u.e1$c.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.u.e1$c` `@@e.e.a.b.f.u.e1$c.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.u.e1$c`[] `@@e.e.a.b.f.u.e1$c.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/e1$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L321a60.  v0:= new `e.e.a.b.f.u.e1$c`;
  #L321a64.  v1:= 0I;
  #L321a66.  v2:= "LANDMARK_UNKNOWN" @kind object;
  #L321a6a.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/u/e1$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L321a70.  `@@e.e.a.b.f.u.e1$c.c` @type ^`e.e.a.b.f.u.e1$c` := v0 @kind object;
  #L321a74.  v0:= new `e.e.a.b.f.u.e1$c`;
  #L321a78.  v2:= 1I;
  #L321a7a.  v3:= "LANDMARK_NONE" @kind object;
  #L321a7e.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/u/e1$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L321a84.  `@@e.e.a.b.f.u.e1$c.d` @type ^`e.e.a.b.f.u.e1$c` := v0 @kind object;
  #L321a88.  v0:= new `e.e.a.b.f.u.e1$c`;
  #L321a8c.  v3:= 2I;
  #L321a8e.  v4:= "LANDMARK_ALL" @kind object;
  #L321a92.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/u/e1$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L321a98.  `@@e.e.a.b.f.u.e1$c.e` @type ^`e.e.a.b.f.u.e1$c` := v0 @kind object;
  #L321a9c.  v0:= new `e.e.a.b.f.u.e1$c`;
  #L321aa0.  v4:= 3I;
  #L321aa2.  v5:= "LANDMARK_CONTOUR" @kind object;
  #L321aa6.  call `<init>`(v0, v5, v4, v4) @signature `Le/e/a/b/f/u/e1$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L321aac.  `@@e.e.a.b.f.u.e1$c.f` @type ^`e.e.a.b.f.u.e1$c` := v0 @kind object;
  #L321ab0.  v0:= 4I;
  #L321ab2.  v0:= new `e.e.a.b.f.u.e1$c`[v0];
  #L321ab6.  v5:= `@@e.e.a.b.f.u.e1$c.c` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321aba.  v0[v1]:= v5 @kind object;
  #L321abe.  v1:= `@@e.e.a.b.f.u.e1$c.d` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321ac2.  v0[v2]:= v1 @kind object;
  #L321ac6.  v1:= `@@e.e.a.b.f.u.e1$c.e` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321aca.  v0[v3]:= v1 @kind object;
  #L321ace.  v1:= `@@e.e.a.b.f.u.e1$c.f` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321ad2.  v0[v4]:= v1 @kind object;
  #L321ad6.  `@@e.e.a.b.f.u.e1$c.g` @type ^`e.e.a.b.f.u.e1$c`[] := v0 @kind object;
  #L321ada.  v0:= new `e.e.a.b.f.u.x1`;
  #L321ade.  call `<init>`(v0) @signature `Le/e/a/b/f/u/x1;.<init>:()V` @kind direct;
  #L321ae4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.e1$c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/u/e1$c;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L321af8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L321afe.  v0.`e.e.a.b.f.u.e1$c.b` @type ^`int` := v3;
  #L321b02.  return @kind void;
}
procedure `e.e.a.b.f.u.e1$c` `a`(`int` v1 ) @signature `Le/e/a/b/f/u/e1$c;.a:(I)Le/e/a/b/f/u/e1$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L321938.  if v1 == 0 then goto L321964;
  #L32193c.  v0:= 1I;
  #L32193e.  if v1 == v0 then goto L32195e;
  #L321942.  v0:= 2I;
  #L321944.  if v1 == v0 then goto L321958;
  #L321948.  v0:= 3I;
  #L32194a.  if v1 == v0 then goto L321952;
  #L32194e.  v1:= 0I;
  #L321950.  return v1 @kind object;
  #L321952.  v1:= `@@e.e.a.b.f.u.e1$c.f` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321956.  return v1 @kind object;
  #L321958.  v1:= `@@e.e.a.b.f.u.e1$c.e` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L32195c.  return v1 @kind object;
  #L32195e.  v1:= `@@e.e.a.b.f.u.e1$c.d` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321962.  return v1 @kind object;
  #L321964.  v1:= `@@e.e.a.b.f.u.e1$c.c` @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L321968.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.e1$c`[] `values`() @signature `Le/e/a/b/f/u/e1$c;.values:()[Le/e/a/b/f/u/e1$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32197c.  v0:= `@@e.e.a.b.f.u.e1$c.g` @type ^`e.e.a.b.f.u.e1$c`[] @kind object;
  #L321980.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/u/e1$c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L321986.  v0:= temp @kind object;
  #L321988.  v0:= (`e.e.a.b.f.u.e1$c`[]) v0 @kind object;
  #L32198c.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.x4` `zzb`() @signature `Le/e/a/b/f/u/e1$c;.zzb:()Le/e/a/b/f/u/x4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3219a0.  v0:= `@@e.e.a.b.f.u.w1.a` @type ^`e.e.a.b.f.u.x4` @kind object;
  #L3219a4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.u.e1$c` v2 @kind this) @signature `Le/e/a/b/f/u/e1$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3219d0.  v0:= new `java.lang.StringBuilder`;
  #L3219d4.  v1:= "<" @kind object;
  #L3219d8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3219de.  v1:= constclass @type ^`e.e.a.b.f.u.e1$c` @kind object;
  #L3219e2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3219e8.  v1:= temp @kind object;
  #L3219ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3219f0.  v1:= 64I;
  #L3219f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3219fa.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L321a00.  v1:= temp;
  #L321a02.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L321a08.  v1:= temp @kind object;
  #L321a0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a10.  v1:= " number=" @kind object;
  #L321a14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a1a.  v1:= v2.`e.e.a.b.f.u.e1$c.b` @type ^`int`;
  #L321a1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a24.  v1:= " name=" @kind object;
  #L321a28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a2e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L321a34.  v1:= temp @kind object;
  #L321a36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a3c.  v1:= 62I;
  #L321a40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L321a46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321a4c.  v0:= temp @kind object;
  #L321a4e.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.u.e1$c` v1 @kind this) @signature `Le/e/a/b/f/u/e1$c;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3219b8.  v0:= v1.`e.e.a.b.f.u.e1$c.b` @type ^`int`;
  #L3219bc.  return v0;
}
