record `e.e.a.b.f.b.s1` @kind class @AccessFlag PUBLIC {
  `e.e.a.b.f.b.k2` `e.e.a.b.f.b.s1.a` @AccessFlag PRIVATE_VOLATILE;
  `e.e.a.b.f.b.a0` `e.e.a.b.f.b.s1.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/s1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L202a68.  call temp:= `b`() @signature `Le/e/a/b/f/b/r0;.b:()Le/e/a/b/f/b/r0;` @kind static;
  #L202a6e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.s1` v0 @kind this) @signature `Le/e/a/b/f/b/s1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L202a80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L202a86.  return @kind void;
}
procedure `e.e.a.b.f.b.k2` `b`(`e.e.a.b.f.b.s1` v1 @kind this, `e.e.a.b.f.b.k2` v2 @kind object) @signature `Le/e/a/b/f/b/s1;.b:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/k2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2028f8.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L2028fc.  if v0 != 0 then goto L202930;
  #L202900.  @monitorenter v1
  #L202902.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L202906.  if v0 == 0 then goto L20290e;
  #L20290a.  @monitorexit v1
  #L20290c.  goto L202930;
  #L20290e.  v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` := v2 @kind object;
  #L202912.  v0:= `@@e.e.a.b.f.b.a0.c` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L202916.  v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` := v0 @kind object;
  #L20291a.  goto L20290a;
  #L20291c.  v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` := v2 @kind object;
  #L202920.  v2:= `@@e.e.a.b.f.b.a0.c` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L202924.  v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` := v2 @kind object;
  #L202928.  goto L20290a;
  #L20292a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20292c.  @monitorexit v1
  #L20292e.  throw v2;
  #L202930.  v2:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L202934.  return v2 @kind object;
  catch `java.lang.Throwable` @[L202902..L20290c] goto L20292a;
  catch `e.e.a.b.f.b.l1` @[L20290e..L20291a] goto L20291c;
  catch `java.lang.Throwable` @[L20290e..L20291a] goto L20292a;
  catch `java.lang.Throwable` @[L20291c..L20292e] goto L20292a;
}
procedure `int` `a`(`e.e.a.b.f.b.s1` v1 @kind this) @signature `Le/e/a/b/f/b/s1;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20299c.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2029a0.  if v0 == 0 then goto L2029b2;
  #L2029a4.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2029a8.  call temp:= `size`(v0) @signature `Le/e/a/b/f/b/a0;.size:()I` @kind virtual;
  #L2029ae.  v0:= temp;
  #L2029b0.  return v0;
  #L2029b2.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L2029b6.  if v0 == 0 then goto L2029c8;
  #L2029ba.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L2029be.  call temp:= `q`(v0) @signature `Le/e/a/b/f/b/k2;.q:()I` @kind interface;
  #L2029c4.  v0:= temp;
  #L2029c6.  return v0;
  #L2029c8.  v0:= 0I;
  #L2029ca.  return v0;
}
procedure `e.e.a.b.f.b.k2` `a`(`e.e.a.b.f.b.s1` v2 @kind this, `e.e.a.b.f.b.k2` v3 @kind object) @signature `Le/e/a/b/f/b/s1;.a:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/k2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L202968.  v0:= v2.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L20296c.  v1:= 0I;
  #L20296e.  v2.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` := v1 @kind object;
  #L202972.  v2.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` := v3 @kind object;
  #L202976.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.a0` `b`(`e.e.a.b.f.b.s1` v1 @kind this) @signature `Le/e/a/b/f/b/s1;.b:()Le/e/a/b/f/b/a0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20288c.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L202890.  if v0 == 0 then goto L20289a;
  #L202894.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L202898.  return v0 @kind object;
  #L20289a.  @monitorenter v1
  #L20289c.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2028a0.  if v0 == 0 then goto L2028ac;
  #L2028a4.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2028a8.  @monitorexit v1
  #L2028aa.  return v0 @kind object;
  #L2028ac.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L2028b0.  if v0 != 0 then goto L2028be;
  #L2028b4.  v0:= `@@e.e.a.b.f.b.a0.c` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2028b8.  v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` := v0 @kind object;
  #L2028bc.  goto L2028cc;
  #L2028be.  v0:= v1.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L2028c2.  call temp:= `k`(v0) @signature `Le/e/a/b/f/b/k2;.k:()Le/e/a/b/f/b/a0;` @kind interface;
  #L2028c8.  v0:= temp @kind object;
  #L2028ca.  goto L2028b8;
  #L2028cc.  v0:= v1.`e.e.a.b.f.b.s1.b` @type ^`e.e.a.b.f.b.a0` @kind object;
  #L2028d0.  @monitorexit v1
  #L2028d2.  return v0 @kind object;
  #L2028d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2028d6.  @monitorexit v1
  #L2028d8.  throw v0;
  catch `java.lang.Throwable` @[L20289c..L2028d8] goto L2028d4;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.s1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/s1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2027f0.  if v2 != v3 then goto L2027f8;
  #L2027f4.  v3:= 1I;
  #L2027f6.  return v3;
  #L2027f8.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.b.s1` @kind boolean;
  #L2027fc.  if v0 != 0 then goto L202804;
  #L202800.  v3:= 0I;
  #L202802.  return v3;
  #L202804.  v3:= (`e.e.a.b.f.b.s1`) v3 @kind object;
  #L202808.  v0:= v2.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L20280c.  v1:= v3.`e.e.a.b.f.b.s1.a` @type ^`e.e.a.b.f.b.k2` @kind object;
  #L202810.  if v0 != 0 then goto L202832;
  #L202814.  if v1 != 0 then goto L202832;
  #L202818.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/s1;.b:()Le/e/a/b/f/b/a0;` @kind virtual;
  #L20281e.  v0:= temp @kind object;
  #L202820.  call temp:= `b`(v3) @signature `Le/e/a/b/f/b/s1;.b:()Le/e/a/b/f/b/a0;` @kind virtual;
  #L202826.  v3:= temp @kind object;
  #L202828.  call temp:= `equals`(v0, v3) @signature `Le/e/a/b/f/b/a0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20282e.  v3:= temp;
  #L202830.  return v3;
  #L202832.  if v0 == 0 then goto L202844;
  #L202836.  if v1 == 0 then goto L202844;
  #L20283a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L202840.  v3:= temp;
  #L202842.  return v3;
  #L202844.  if v0 == 0 then goto L202862;
  #L202848.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/m2;.b:()Le/e/a/b/f/b/k2;` @kind interface;
  #L20284e.  v1:= temp @kind object;
  #L202850.  call temp:= `b`(v3, v1) @signature `Le/e/a/b/f/b/s1;.b:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/k2;` @kind direct;
  #L202856.  v3:= temp @kind object;
  #L202858.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20285e.  v3:= temp;
  #L202860.  return v3;
  #L202862.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/m2;.b:()Le/e/a/b/f/b/k2;` @kind interface;
  #L202868.  v3:= temp @kind object;
  #L20286a.  call temp:= `b`(v2, v3) @signature `Le/e/a/b/f/b/s1;.b:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/k2;` @kind direct;
  #L202870.  v3:= temp @kind object;
  #L202872.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L202878.  v3:= temp;
  #L20287a.  return v3;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.s1` v1 @kind this) @signature `Le/e/a/b/f/b/s1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202988.  v0:= 1I;
  #L20298a.  return v0;
}
