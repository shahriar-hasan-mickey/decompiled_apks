record `e.e.a.b.f.q.gn` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `java.lang.Object` `e.e.a.b.f.q.gn.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.q.gn.c` @AccessFlag ;
  `e.e.a.b.f.q.gn` `e.e.a.b.f.q.gn.d` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.q.gn.e` @AccessFlag FINAL;
  `e.e.a.b.f.q.jq` `e.e.a.b.f.q.gn.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.gn` v0 @kind this, `e.e.a.b.f.q.jq` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Collection` v3 @kind object, `e.e.a.b.f.q.gn` v4 @kind object) @signature `Le/e/a/b/f/q/gn;.<init>:(Le/e/a/b/f/q/jq;Ljava/lang/Object;Ljava/util/Collection;Le/e/a/b/f/q/gn;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ff850.  v0.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` := v1 @kind object;
  #L2ff854.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L2ff85a.  v0.`e.e.a.b.f.q.gn.b` @type ^`java.lang.Object` := v2 @kind object;
  #L2ff85e.  v0.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` := v3 @kind object;
  #L2ff862.  v0.`e.e.a.b.f.q.gn.d` @type ^`e.e.a.b.f.q.gn` := v4 @kind object;
  #L2ff866.  if v4 != 0 then goto L2ff86e;
  #L2ff86a.  v1:= 0I;
  #L2ff86c.  goto L2ff872;
  #L2ff86e.  v1:= v4.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff872.  v0.`e.e.a.b.f.q.gn.e` @type ^`java.util.Collection` := v1 @kind object;
  #L2ff876.  return @kind void;
}
procedure `boolean` `add`(`e.e.a.b.f.q.gn` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/gn;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2fdc88.  call `zza`(v2) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fdc8e.  v0:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdc92.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2fdc98.  v0:= temp;
  #L2fdc9a.  v1:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdc9e.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2fdca4.  v3:= temp;
  #L2fdca6.  if v3 == 0 then goto L2fdcc0;
  #L2fdcaa.  v1:= v2.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fdcae.  call temp:= `c`(v1) @signature `Le/e/a/b/f/q/jq;.c:(Le/e/a/b/f/q/jq;)I` @kind static;
  #L2fdcb4.  if v0 == 0 then goto L2fdcc0;
  #L2fdcb8.  call `d`(v2) @signature `Le/e/a/b/f/q/gn;.d:()V` @kind virtual;
  #L2fdcbe.  v3:= 1I;
  #L2fdcc0.  return v3;
}
procedure `boolean` `addAll`(`e.e.a.b.f.q.gn` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/q/gn;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2fdcd4.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2fdcda.  v0:= temp;
  #L2fdcdc.  if v0 == 0 then goto L2fdce4;
  #L2fdce0.  v4:= 0I;
  #L2fdce2.  return v4;
  #L2fdce4.  call temp:= `size`(v3) @signature `Le/e/a/b/f/q/gn;.size:()I` @kind virtual;
  #L2fdcea.  v0:= temp;
  #L2fdcec.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdcf0.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2fdcf6.  v4:= temp;
  #L2fdcf8.  if v4 == 0 then goto L2fdd20;
  #L2fdcfc.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdd00.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2fdd06.  v1:= temp;
  #L2fdd08.  v2:= v3.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fdd0c.  v1:= v1 - v0 @kind int;
  #L2fdd0e.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;I)I` @kind static;
  #L2fdd14.  if v0 != 0 then goto L2fdd20;
  #L2fdd18.  call `d`(v3) @signature `Le/e/a/b/f/q/gn;.d:()V` @kind virtual;
  #L2fdd1e.  v4:= 1I;
  #L2fdd20.  return v4;
}
procedure `void` `clear`(`e.e.a.b.f.q.gn` v2 @kind this) @signature `Le/e/a/b/f/q/gn;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ff888.  call temp:= `size`(v2) @signature `Le/e/a/b/f/q/gn;.size:()I` @kind virtual;
  #L2ff88e.  v0:= temp;
  #L2ff890.  if v0 != 0 then goto L2ff896;
  #L2ff894.  return @kind void;
  #L2ff896.  v1:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff89a.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2ff8a0.  v1:= v2.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2ff8a4.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/q/jq;.b:(Le/e/a/b/f/q/jq;I)I` @kind static;
  #L2ff8aa.  call `zzb`(v2) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2ff8b0.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.gn` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/gn;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fdd34.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fdd3a.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdd3e.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2fdd44.  v2:= temp;
  #L2fdd46.  return v2;
}
procedure `boolean` `containsAll`(`e.e.a.b.f.q.gn` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/q/gn;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fdd58.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fdd5e.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdd62.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2fdd68.  v2:= temp;
  #L2fdd6a.  return v2;
}
procedure `void` `d`(`e.e.a.b.f.q.gn` v3 @kind this) @signature `Le/e/a/b/f/q/gn;.d:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ff980.  v0:= v3.`e.e.a.b.f.q.gn.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2ff984.  if v0 == 0 then goto L2ff990;
  #L2ff988.  call `d`(v0) @signature `Le/e/a/b/f/q/gn;.d:()V` @kind virtual;
  #L2ff98e.  return @kind void;
  #L2ff990.  v0:= v3.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2ff994.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;)Ljava/util/Map;` @kind static;
  #L2ff99a.  v0:= temp @kind object;
  #L2ff99c.  v1:= v3.`e.e.a.b.f.q.gn.b` @type ^`java.lang.Object` @kind object;
  #L2ff9a0.  v2:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff9a4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ff9aa.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.gn` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/gn;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fdd7c.  if v2 != v1 then goto L2fdd84;
  #L2fdd80.  v2:= 1I;
  #L2fdd82.  return v2;
  #L2fdd84.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fdd8a.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fdd8e.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Collection;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2fdd94.  v2:= temp;
  #L2fdd96.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.gn` v1 @kind this) @signature `Le/e/a/b/f/q/gn;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe704.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fe70a.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fe70e.  call temp:= `hashCode`(v0) @signature `Ljava/util/Collection;.hashCode:()I` @kind interface;
  #L2fe714.  v0:= temp;
  #L2fe716.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.gn` v1 @kind this) @signature `Le/e/a/b/f/q/gn;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe828.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fe82e.  v0:= new `e.e.a.b.f.q.fm`;
  #L2fe832.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/fm;.<init>:(Le/e/a/b/f/q/gn;)V` @kind direct;
  #L2fe838.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.q.gn` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/gn;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fdda8.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fddae.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fddb2.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2fddb8.  v2:= temp;
  #L2fddba.  if v2 == 0 then goto L2fddce;
  #L2fddbe.  v0:= v1.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fddc2.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/jq;.b:(Le/e/a/b/f/q/jq;)I` @kind static;
  #L2fddc8.  call `zzb`(v1) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2fddce.  return v2;
}
procedure `boolean` `removeAll`(`e.e.a.b.f.q.gn` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/q/gn;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2fdde0.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2fdde6.  v0:= temp;
  #L2fdde8.  if v0 == 0 then goto L2fddf0;
  #L2fddec.  v4:= 0I;
  #L2fddee.  return v4;
  #L2fddf0.  call temp:= `size`(v3) @signature `Le/e/a/b/f/q/gn;.size:()I` @kind virtual;
  #L2fddf6.  v0:= temp;
  #L2fddf8.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fddfc.  call temp:= `removeAll`(v1, v4) @signature `Ljava/util/Collection;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2fde02.  v4:= temp;
  #L2fde04.  if v4 == 0 then goto L2fde26;
  #L2fde08.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fde0c.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2fde12.  v1:= temp;
  #L2fde14.  v2:= v3.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fde18.  v1:= v1 - v0 @kind int;
  #L2fde1a.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;I)I` @kind static;
  #L2fde20.  call `zzb`(v3) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2fde26.  return v4;
}
procedure `boolean` `retainAll`(`e.e.a.b.f.q.gn` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/q/gn;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2fde38.  if v4 == 0 then goto L2fde74;
  #L2fde3c.  call temp:= `size`(v3) @signature `Le/e/a/b/f/q/gn;.size:()I` @kind virtual;
  #L2fde42.  v0:= temp;
  #L2fde44.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fde48.  call temp:= `retainAll`(v1, v4) @signature `Ljava/util/Collection;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2fde4e.  v4:= temp;
  #L2fde50.  if v4 == 0 then goto L2fde72;
  #L2fde54.  v1:= v3.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fde58.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2fde5e.  v1:= temp;
  #L2fde60.  v2:= v3.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fde64.  v1:= v1 - v0 @kind int;
  #L2fde66.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;I)I` @kind static;
  #L2fde6c.  call `zzb`(v3) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2fde72.  return v4;
  #L2fde74.  v4:= 0I;
  #L2fde76.  throw v4;
}
procedure `int` `size`(`e.e.a.b.f.q.gn` v1 @kind this) @signature `Le/e/a/b/f/q/gn;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe728.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fe72e.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fe732.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2fe738.  v0:= temp;
  #L2fe73a.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.q.gn` v1 @kind this) @signature `Le/e/a/b/f/q/gn;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe804.  call `zza`(v1) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fe80a.  v0:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fe80e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fe814.  v0:= temp @kind object;
  #L2fe816.  return v0 @kind object;
}
procedure `void` `zza`(`e.e.a.b.f.q.gn` v2 @kind this) @signature `Le/e/a/b/f/q/gn;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2ff8c4.  v0:= v2.`e.e.a.b.f.q.gn.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2ff8c8.  if v0 == 0 then goto L2ff8f0;
  #L2ff8cc.  call `zza`(v0) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2ff8d2.  v0:= v2.`e.e.a.b.f.q.gn.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2ff8d6.  v0:= v0.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff8da.  v1:= v2.`e.e.a.b.f.q.gn.e` @type ^`java.util.Collection` @kind object;
  #L2ff8de.  if v0 != v1 then goto L2ff8e4;
  #L2ff8e2.  goto L2ff924;
  #L2ff8e4.  v0:= new `java.util.ConcurrentModificationException`;
  #L2ff8e8.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L2ff8ee.  throw v0;
  #L2ff8f0.  v0:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff8f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2ff8fa.  v0:= temp;
  #L2ff8fc.  if v0 == 0 then goto L2ff924;
  #L2ff900.  v0:= v2.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2ff904.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;)Ljava/util/Map;` @kind static;
  #L2ff90a.  v0:= temp @kind object;
  #L2ff90c.  v1:= v2.`e.e.a.b.f.q.gn.b` @type ^`java.lang.Object` @kind object;
  #L2ff910.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ff916.  v0:= temp @kind object;
  #L2ff918.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2ff91c.  if v0 == 0 then goto L2ff924;
  #L2ff920.  v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2ff924.  return @kind void;
}
procedure `void` `zzb`(`e.e.a.b.f.q.gn` v2 @kind this) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2ff938.  v0:= v2.`e.e.a.b.f.q.gn.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2ff93c.  if v0 == 0 then goto L2ff948;
  #L2ff940.  call `zzb`(v0) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2ff946.  return @kind void;
  #L2ff948.  v0:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2ff94c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2ff952.  v0:= temp;
  #L2ff954.  if v0 == 0 then goto L2ff96e;
  #L2ff958.  v0:= v2.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2ff95c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;)Ljava/util/Map;` @kind static;
  #L2ff962.  v0:= temp @kind object;
  #L2ff964.  v1:= v2.`e.e.a.b.f.q.gn.b` @type ^`java.lang.Object` @kind object;
  #L2ff968.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ff96e.  return @kind void;
}
