record `e.e.a.b.f.q.ph` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Comparator` `e.e.a.b.f.q.ph.b` @AccessFlag FINAL;
  `e.e.a.b.f.q.oh` `e.e.a.b.f.q.ph.c` @AccessFlag ;
  `int` `e.e.a.b.f.q.ph.d` @AccessFlag ;
  `int` `e.e.a.b.f.q.ph.e` @AccessFlag ;
  `e.e.a.b.f.q.oh` `e.e.a.b.f.q.ph.f` @AccessFlag FINAL;
  `e.e.a.b.f.q.kh` `e.e.a.b.f.q.ph.g` @AccessFlag PRIVATE;
  `e.e.a.b.f.q.mh` `e.e.a.b.f.q.ph.h` @AccessFlag PRIVATE;
}
global `java.util.Comparator` `@@e.e.a.b.f.q.ph.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/ph;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f43a0.  v0:= new `e.e.a.b.f.q.ih`;
  #L2f43a4.  call `<init>`(v0) @signature `Le/e/a/b/f/q/ih;.<init>:()V` @kind direct;
  #L2f43aa.  `@@e.e.a.b.f.q.ph.i` @type ^`java.util.Comparator` := v0 @kind object;
  #L2f43ae.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.ph` v2 @kind this) @signature `Le/e/a/b/f/q/ph;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f43c0.  v0:= `@@e.e.a.b.f.q.ph.i` @type ^`java.util.Comparator` @kind object;
  #L2f43c4.  call `<init>`(v2) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L2f43ca.  v1:= 0I;
  #L2f43cc.  v2.`e.e.a.b.f.q.ph.d` @type ^`int` := v1;
  #L2f43d0.  v2.`e.e.a.b.f.q.ph.e` @type ^`int` := v1;
  #L2f43d4.  v1:= new `e.e.a.b.f.q.oh`;
  #L2f43d8.  call `<init>`(v1) @signature `Le/e/a/b/f/q/oh;.<init>:()V` @kind direct;
  #L2f43de.  v2.`e.e.a.b.f.q.ph.f` @type ^`e.e.a.b.f.q.oh` := v1 @kind object;
  #L2f43e2.  v2.`e.e.a.b.f.q.ph.b` @type ^`java.util.Comparator` := v0 @kind object;
  #L2f43e6.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.ph` v5 @kind this, `e.e.a.b.f.q.oh` v6 @kind object) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f466c.  v0:= v6.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4670.  v1:= v6.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4674.  v2:= v1.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4678.  v3:= v1.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f467c.  v6.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v2 @kind object;
  #L2f4680.  if v2 == 0 then goto L2f4688;
  #L2f4684.  v2.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v6 @kind object;
  #L2f4688.  call `a`(v5, v6, v1) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f468e.  v1.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v6 @kind object;
  #L2f4692.  v6.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v1 @kind object;
  #L2f4696.  v4:= 0I;
  #L2f4698.  if v0 == 0 then goto L2f46a2;
  #L2f469c.  v0:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f46a0.  goto L2f46a4;
  #L2f46a2.  v0:= 0I;
  #L2f46a4.  if v2 == 0 then goto L2f46ae;
  #L2f46a8.  v2:= v2.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f46ac.  goto L2f46b0;
  #L2f46ae.  v2:= 0I;
  #L2f46b0.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f46b6.  v0:= temp;
  #L2f46b8.  v0:= v0 + 1;
  #L2f46bc.  v6.`e.e.a.b.f.q.oh.i` @type ^`int` := v0;
  #L2f46c0.  if v3 == 0 then goto L2f46c8;
  #L2f46c4.  v4:= v3.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f46c8.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f46ce.  v6:= temp;
  #L2f46d0.  v6:= v6 + 1;
  #L2f46d4.  v1.`e.e.a.b.f.q.oh.i` @type ^`int` := v6;
  #L2f46d8.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.ph` v2 @kind this, `e.e.a.b.f.q.oh` v3 @kind object, `e.e.a.b.f.q.oh` v4 @kind object) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2f4538.  v0:= v3.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f453c.  v1:= 0I;
  #L2f453e.  v3.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v1 @kind object;
  #L2f4542.  if v4 == 0 then goto L2f454a;
  #L2f4546.  v4.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f454a.  if v0 == 0 then goto L2f4562;
  #L2f454e.  v1:= v0.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4552.  if v1 != v3 then goto L2f455c;
  #L2f4556.  v0.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v4 @kind object;
  #L2f455a.  return @kind void;
  #L2f455c.  v0.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v4 @kind object;
  #L2f4560.  return @kind void;
  #L2f4562.  v2.`e.e.a.b.f.q.ph.c` @type ^`e.e.a.b.f.q.oh` := v4 @kind object;
  #L2f4566.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.q.ph` v5 @kind this, `e.e.a.b.f.q.oh` v6 @kind object) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f46ec.  v0:= v6.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f46f0.  v1:= v6.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f46f4.  v2:= v0.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f46f8.  v3:= v0.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f46fc.  v6.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v3 @kind object;
  #L2f4700.  if v3 == 0 then goto L2f4708;
  #L2f4704.  v3.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v6 @kind object;
  #L2f4708.  call `a`(v5, v6, v0) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f470e.  v0.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v6 @kind object;
  #L2f4712.  v6.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f4716.  v4:= 0I;
  #L2f4718.  if v1 == 0 then goto L2f4722;
  #L2f471c.  v1:= v1.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f4720.  goto L2f4724;
  #L2f4722.  v1:= 0I;
  #L2f4724.  if v3 == 0 then goto L2f472e;
  #L2f4728.  v3:= v3.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f472c.  goto L2f4730;
  #L2f472e.  v3:= 0I;
  #L2f4730.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f4736.  v1:= temp;
  #L2f4738.  v1:= v1 + 1;
  #L2f473c.  v6.`e.e.a.b.f.q.oh.i` @type ^`int` := v1;
  #L2f4740.  if v2 == 0 then goto L2f4748;
  #L2f4744.  v4:= v2.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f4748.  call temp:= `max`(v1, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f474e.  v6:= temp;
  #L2f4750.  v6:= v6 + 1;
  #L2f4754.  v0.`e.e.a.b.f.q.oh.i` @type ^`int` := v6;
  #L2f4758.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.q.ph` v7 @kind this, `e.e.a.b.f.q.oh` v8 @kind object, `boolean` v9 ) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f4578.  if v8 == 0 then goto L2f465a;
  #L2f457c.  v0:= v8.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4580.  v1:= v8.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4584.  v2:= 0I;
  #L2f4586.  if v0 == 0 then goto L2f4590;
  #L2f458a.  v3:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f458e.  goto L2f4592;
  #L2f4590.  v3:= 0I;
  #L2f4592.  if v1 == 0 then goto L2f459c;
  #L2f4596.  v4:= v1.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f459a.  goto L2f459e;
  #L2f459c.  v4:= 0I;
  #L2f459e.  v5:= v3 - v4 @kind int;
  #L2f45a2.  v6:= -2I;
  #L2f45a4.  if v5 != v6 then goto L2f45e8;
  #L2f45a8.  v0:= v1.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f45ac.  v3:= v1.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f45b0.  if v3 == 0 then goto L2f45ba;
  #L2f45b4.  v3:= v3.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f45b8.  goto L2f45bc;
  #L2f45ba.  v3:= 0I;
  #L2f45bc.  if v0 == 0 then goto L2f45c4;
  #L2f45c0.  v2:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f45c4.  v2:= v2 - v3 @kind int;
  #L2f45c6.  v0:= -1I;
  #L2f45c8.  if v2 == v0 then goto L2f45dc;
  #L2f45cc.  if v2 != 0 then goto L2f45d6;
  #L2f45d0.  if v9 != 0 then goto L2f45d6;
  #L2f45d4.  goto L2f45dc;
  #L2f45d6.  call `b`(v7, v1) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f45dc.  call `a`(v7, v8) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f45e2.  if v9 != 0 then goto L2f465a;
  #L2f45e6.  goto L2f4654;
  #L2f45e8.  v1:= 2I;
  #L2f45ea.  v6:= 1I;
  #L2f45ec.  if v5 != v1 then goto L2f462e;
  #L2f45f0.  v1:= v0.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f45f4.  v3:= v0.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f45f8.  if v3 == 0 then goto L2f4602;
  #L2f45fc.  v3:= v3.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f4600.  goto L2f4604;
  #L2f4602.  v3:= 0I;
  #L2f4604.  if v1 == 0 then goto L2f460c;
  #L2f4608.  v2:= v1.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f460c.  v2:= v2 - v3 @kind int;
  #L2f460e.  if v2 == v6 then goto L2f4622;
  #L2f4612.  if v2 != 0 then goto L2f461c;
  #L2f4616.  if v9 != 0 then goto L2f461c;
  #L2f461a.  goto L2f4622;
  #L2f461c.  call `a`(v7, v0) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f4622.  call `b`(v7, v8) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f4628.  if v9 == 0 then goto L2f4654;
  #L2f462c.  goto L2f465a;
  #L2f462e.  if v5 != 0 then goto L2f4640;
  #L2f4632.  v3:= v3 + 1;
  #L2f4636.  v8.`e.e.a.b.f.q.oh.i` @type ^`int` := v3;
  #L2f463a.  if v9 == 0 then goto L2f4654;
  #L2f463e.  goto L2f465a;
  #L2f4640.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f4646.  v0:= temp;
  #L2f4648.  v0:= v0 + v6 @kind int;
  #L2f464a.  v8.`e.e.a.b.f.q.oh.i` @type ^`int` := v0;
  #L2f464e.  if v9 != 0 then goto L2f4654;
  #L2f4652.  goto L2f465a;
  #L2f4654.  v8:= v8.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4658.  goto L2f4578;
  #L2f465a.  return @kind void;
}
procedure `e.e.a.b.f.q.oh` `a`(`e.e.a.b.f.q.ph` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2f4200.  v0:= 0I;
  #L2f4202.  if v3 == 0 then goto L2f4212;
  #L2f4206.  v1:= 0I;
  #L2f4208.  call temp:= `a`(v2, v3, v1) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;Z)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f420e.  v0:= temp @kind object;
  #L2f4210.  
  #L2f4212.  return v0 @kind object;
  catch `java.lang.ClassCastException` @[L2f4208..L2f4210] goto L2f4212;
}
procedure `e.e.a.b.f.q.oh` `a`(`e.e.a.b.f.q.ph` v6 @kind this, `java.lang.Object` v7 @kind object, `boolean` v8 ) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;Z)Le/e/a/b/f/q/oh;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f40e8.  v0:= v6.`e.e.a.b.f.q.ph.b` @type ^`java.util.Comparator` @kind object;
  #L2f40ec.  v1:= v6.`e.e.a.b.f.q.ph.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f40f0.  v2:= 0I;
  #L2f40f2.  if v1 == 0 then goto L2f4140;
  #L2f40f6.  v3:= `@@e.e.a.b.f.q.ph.i` @type ^`java.util.Comparator` @kind object;
  #L2f40fa.  if v0 != v3 then goto L2f4106;
  #L2f40fe.  v3:= v7 @kind object;
  #L2f4100.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L2f4104.  goto L2f4108;
  #L2f4106.  v3:= v2 @kind object;
  #L2f4108.  v4:= v1.`e.e.a.b.f.q.oh.g` @type ^`java.lang.Object` @kind object;
  #L2f410c.  if v3 == 0 then goto L2f411a;
  #L2f4110.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L2f4116.  v4:= temp;
  #L2f4118.  goto L2f4122;
  #L2f411a.  call temp:= `compare`(v0, v7, v4) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2f4120.  v4:= temp;
  #L2f4122.  if v4 != 0 then goto L2f4128;
  #L2f4126.  return v1 @kind object;
  #L2f4128.  if v4 >= 0 then goto L2f4132;
  #L2f412c.  v5:= v1.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4130.  goto L2f4136;
  #L2f4132.  v5:= v1.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4136.  if v5 != 0 then goto L2f413c;
  #L2f413a.  goto L2f4142;
  #L2f413c.  v1:= v5 @kind object;
  #L2f413e.  goto L2f4108;
  #L2f4140.  v4:= 0I;
  #L2f4142.  if v8 != 0 then goto L2f4148;
  #L2f4146.  return v2 @kind object;
  #L2f4148.  v8:= v6.`e.e.a.b.f.q.ph.f` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f414c.  v3:= 1I;
  #L2f414e.  if v1 != 0 then goto L2f41b6;
  #L2f4152.  v1:= `@@e.e.a.b.f.q.ph.i` @type ^`java.util.Comparator` @kind object;
  #L2f4156.  if v0 != v1 then goto L2f41a2;
  #L2f415a.  v0:= instanceof @variable v7 @type ^`java.lang.Comparable` @kind boolean;
  #L2f415e.  if v0 == 0 then goto L2f4164;
  #L2f4162.  goto L2f41a2;
  #L2f4164.  v8:= new `java.lang.ClassCastException`;
  #L2f4168.  v0:= new `java.lang.StringBuilder`;
  #L2f416c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f4172.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2f4178.  v7:= temp @kind object;
  #L2f417a.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2f4180.  v7:= temp @kind object;
  #L2f4182.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f4188.  v7:= " is not Comparable" @kind object;
  #L2f418c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f4192.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f4198.  v7:= temp @kind object;
  #L2f419a.  call `<init>`(v8, v7) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f41a0.  throw v8;
  #L2f41a2.  v0:= new `e.e.a.b.f.q.oh`;
  #L2f41a6.  v1:= v8.`e.e.a.b.f.q.oh.f` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f41aa.  call `<init>`(v0, v2, v7, v8, v1) @signature `Le/e/a/b/f/q/oh;.<init>:(Le/e/a/b/f/q/oh;Ljava/lang/Object;Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f41b0.  v6.`e.e.a.b.f.q.ph.c` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f41b4.  goto L2f41d8;
  #L2f41b6.  v0:= new `e.e.a.b.f.q.oh`;
  #L2f41ba.  v2:= v8.`e.e.a.b.f.q.oh.f` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f41be.  call `<init>`(v0, v1, v7, v8, v2) @signature `Le/e/a/b/f/q/oh;.<init>:(Le/e/a/b/f/q/oh;Ljava/lang/Object;Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f41c4.  if v4 >= 0 then goto L2f41ce;
  #L2f41c8.  v1.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f41cc.  goto L2f41d2;
  #L2f41ce.  v1.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f41d2.  call `b`(v6, v1, v3) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;Z)V` @kind direct;
  #L2f41d8.  v7:= v6.`e.e.a.b.f.q.ph.d` @type ^`int`;
  #L2f41dc.  v7:= v7 + v3 @kind int;
  #L2f41de.  v6.`e.e.a.b.f.q.ph.d` @type ^`int` := v7;
  #L2f41e2.  v7:= v6.`e.e.a.b.f.q.ph.e` @type ^`int`;
  #L2f41e6.  v7:= v7 + v3 @kind int;
  #L2f41e8.  v6.`e.e.a.b.f.q.ph.e` @type ^`int` := v7;
  #L2f41ec.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.oh` `a`(`e.e.a.b.f.q.ph` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/util/Map$Entry;)Le/e/a/b/f/q/oh;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2f4234.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2f423a.  v0:= temp @kind object;
  #L2f423c.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f4242.  v0:= temp @kind object;
  #L2f4244.  if v0 == 0 then goto L2f426a;
  #L2f4248.  v1:= v0.`e.e.a.b.f.q.oh.h` @type ^`java.lang.Object` @kind object;
  #L2f424c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2f4252.  v3:= temp @kind object;
  #L2f4254.  if v1 == v3 then goto L2f4268;
  #L2f4258.  if v1 == 0 then goto L2f426a;
  #L2f425c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f4262.  v3:= temp;
  #L2f4264.  if v3 == 0 then goto L2f426a;
  #L2f4268.  return v0 @kind object;
  #L2f426a.  v3:= 0I;
  #L2f426c.  return v3 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.q.ph` v6 @kind this, `e.e.a.b.f.q.oh` v7 @kind object, `boolean` v8 ) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Z)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f4430.  if v8 == 0 then goto L2f4448;
  #L2f4434.  v8:= v7.`e.e.a.b.f.q.oh.f` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4438.  v0:= v7.`e.e.a.b.f.q.oh.e` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f443c.  v8.`e.e.a.b.f.q.oh.e` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f4440.  v0:= v7.`e.e.a.b.f.q.oh.e` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4444.  v0.`e.e.a.b.f.q.oh.f` @type ^`e.e.a.b.f.q.oh` := v8 @kind object;
  #L2f4448.  v8:= v7.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f444c.  v0:= v7.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4450.  v1:= v7.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4454.  v2:= 0I;
  #L2f4456.  v3:= 0I;
  #L2f4458.  if v8 == 0 then goto L2f44e2;
  #L2f445c.  if v0 == 0 then goto L2f44e2;
  #L2f4460.  v1:= v8.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f4464.  v4:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f4468.  if v1 <= v4 then goto L2f4480;
  #L2f446c.  v0:= v8.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4470.  v5:= v0 @kind object;
  #L2f4472.  v0:= v8 @kind object;
  #L2f4474.  v8:= v5 @kind object;
  #L2f4476.  if v8 == 0 then goto L2f447c;
  #L2f447a.  goto L2f446c;
  #L2f447c.  v8:= v0 @kind object;
  #L2f447e.  goto L2f4490;
  #L2f4480.  v8:= v0.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4484.  v5:= v0 @kind object;
  #L2f4486.  v0:= v8 @kind object;
  #L2f4488.  v8:= v5 @kind object;
  #L2f448a.  if v0 == 0 then goto L2f4490;
  #L2f448e.  goto L2f4480;
  #L2f4490.  call `a`(v6, v8, v2) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Z)V` @kind virtual;
  #L2f4496.  v0:= v7.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f449a.  if v0 == 0 then goto L2f44b0;
  #L2f449e.  v1:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f44a2.  v8.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f44a6.  v0.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v8 @kind object;
  #L2f44aa.  v7.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v3 @kind object;
  #L2f44ae.  goto L2f44b2;
  #L2f44b0.  v1:= 0I;
  #L2f44b2.  v0:= v7.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f44b6.  if v0 == 0 then goto L2f44ca;
  #L2f44ba.  v2:= v0.`e.e.a.b.f.q.oh.i` @type ^`int`;
  #L2f44be.  v8.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f44c2.  v0.`e.e.a.b.f.q.oh.b` @type ^`e.e.a.b.f.q.oh` := v8 @kind object;
  #L2f44c6.  v7.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v3 @kind object;
  #L2f44ca.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2f44d0.  v0:= temp;
  #L2f44d2.  v0:= v0 + 1;
  #L2f44d6.  v8.`e.e.a.b.f.q.oh.i` @type ^`int` := v0;
  #L2f44da.  call `a`(v6, v7, v8) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f44e0.  return @kind void;
  #L2f44e2.  if v8 == 0 then goto L2f44f2;
  #L2f44e6.  call `a`(v6, v7, v8) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f44ec.  v7.`e.e.a.b.f.q.oh.c` @type ^`e.e.a.b.f.q.oh` := v3 @kind object;
  #L2f44f0.  goto L2f4508;
  #L2f44f2.  if v0 == 0 then goto L2f4502;
  #L2f44f6.  call `a`(v6, v7, v0) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f44fc.  v7.`e.e.a.b.f.q.oh.d` @type ^`e.e.a.b.f.q.oh` := v3 @kind object;
  #L2f4500.  goto L2f4508;
  #L2f4502.  call `a`(v6, v7, v3) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Le/e/a/b/f/q/oh;)V` @kind direct;
  #L2f4508.  call `b`(v6, v1, v2) @signature `Le/e/a/b/f/q/ph;.b:(Le/e/a/b/f/q/oh;Z)V` @kind direct;
  #L2f450e.  v7:= v6.`e.e.a.b.f.q.ph.d` @type ^`int`;
  #L2f4512.  v7:= v7 + -1;
  #L2f4516.  v6.`e.e.a.b.f.q.ph.d` @type ^`int` := v7;
  #L2f451a.  v7:= v6.`e.e.a.b.f.q.ph.e` @type ^`int`;
  #L2f451e.  v7:= v7 + 1;
  #L2f4522.  v6.`e.e.a.b.f.q.ph.e` @type ^`int` := v7;
  #L2f4526.  return @kind void;
}
procedure `e.e.a.b.f.q.oh` `b`(`e.e.a.b.f.q.ph` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/ph;.b:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @AccessFlag FINAL {
    temp;
    v0;

  #L2f4280.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f4286.  v2:= temp @kind object;
  #L2f4288.  if v2 == 0 then goto L2f4294;
  #L2f428c.  v0:= 1I;
  #L2f428e.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Z)V` @kind virtual;
  #L2f4294.  return v2 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.q.ph` v1 @kind this) @signature `Le/e/a/b/f/q/ph;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f43f8.  v0:= 0I;
  #L2f43fa.  v1.`e.e.a.b.f.q.ph.c` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f43fe.  v0:= 0I;
  #L2f4400.  v1.`e.e.a.b.f.q.ph.d` @type ^`int` := v0;
  #L2f4404.  v0:= v1.`e.e.a.b.f.q.ph.e` @type ^`int`;
  #L2f4408.  v0:= v0 + 1;
  #L2f440c.  v1.`e.e.a.b.f.q.ph.e` @type ^`int` := v0;
  #L2f4410.  v0:= v1.`e.e.a.b.f.q.ph.f` @type ^`e.e.a.b.f.q.oh` @kind object;
  #L2f4414.  v0.`e.e.a.b.f.q.oh.f` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f4418.  v0.`e.e.a.b.f.q.oh.e` @type ^`e.e.a.b.f.q.oh` := v0 @kind object;
  #L2f441c.  return @kind void;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.q.ph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/ph;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f40c4.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f40ca.  v1:= temp @kind object;
  #L2f40cc.  if v1 == 0 then goto L2f40d4;
  #L2f40d0.  v1:= 1I;
  #L2f40d2.  return v1;
  #L2f40d4.  v1:= 0I;
  #L2f40d6.  return v1;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.q.ph` v1 @kind this) @signature `Le/e/a/b/f/q/ph;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f4348.  v0:= v1.`e.e.a.b.f.q.ph.g` @type ^`e.e.a.b.f.q.kh` @kind object;
  #L2f434c.  if v0 == 0 then goto L2f4352;
  #L2f4350.  return v0 @kind object;
  #L2f4352.  v0:= new `e.e.a.b.f.q.kh`;
  #L2f4356.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/kh;.<init>:(Le/e/a/b/f/q/ph;)V` @kind direct;
  #L2f435c.  v1.`e.e.a.b.f.q.ph.g` @type ^`e.e.a.b.f.q.kh` := v0 @kind object;
  #L2f4360.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.q.ph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/ph;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f42c0.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f42c6.  v1:= temp @kind object;
  #L2f42c8.  if v1 == 0 then goto L2f42d2;
  #L2f42cc.  v1:= v1.`e.e.a.b.f.q.oh.h` @type ^`java.lang.Object` @kind object;
  #L2f42d0.  return v1 @kind object;
  #L2f42d2.  v1:= 0I;
  #L2f42d4.  return v1 @kind object;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.q.ph` v1 @kind this) @signature `Le/e/a/b/f/q/ph;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f4374.  v0:= v1.`e.e.a.b.f.q.ph.h` @type ^`e.e.a.b.f.q.mh` @kind object;
  #L2f4378.  if v0 == 0 then goto L2f437e;
  #L2f437c.  return v0 @kind object;
  #L2f437e.  v0:= new `e.e.a.b.f.q.mh`;
  #L2f4382.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/mh;.<init>:(Le/e/a/b/f/q/ph;)V` @kind direct;
  #L2f4388.  v1.`e.e.a.b.f.q.ph.h` @type ^`e.e.a.b.f.q.mh` := v0 @kind object;
  #L2f438c.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.q.ph` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/ph;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f42e8.  if v2 == 0 then goto L2f4300;
  #L2f42ec.  v0:= 1I;
  #L2f42ee.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/lang/Object;Z)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f42f4.  v2:= temp @kind object;
  #L2f42f6.  v0:= v2.`e.e.a.b.f.q.oh.h` @type ^`java.lang.Object` @kind object;
  #L2f42fa.  v2.`e.e.a.b.f.q.oh.h` @type ^`java.lang.Object` := v3 @kind object;
  #L2f42fe.  return v0 @kind object;
  #L2f4300.  v2:= new `java.lang.NullPointerException`;
  #L2f4304.  v3:= "key == null" @kind object;
  #L2f4308.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f430e.  throw v2;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.q.ph` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/ph;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f4320.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/q/ph;.b:(Ljava/lang/Object;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f4326.  v1:= temp @kind object;
  #L2f4328.  if v1 == 0 then goto L2f4332;
  #L2f432c.  v1:= v1.`e.e.a.b.f.q.oh.h` @type ^`java.lang.Object` @kind object;
  #L2f4330.  return v1 @kind object;
  #L2f4332.  v1:= 0I;
  #L2f4334.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.q.ph` v1 @kind this) @signature `Le/e/a/b/f/q/ph;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f42a8.  v0:= v1.`e.e.a.b.f.q.ph.d` @type ^`int`;
  #L2f42ac.  return v0;
}
