record `e.e.a.b.f.n.q0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `e.e.a.b.f.n.q0.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.n.q0` `@@e.e.a.b.f.n.q0.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `e.e.a.b.f.n.k0` `@@e.e.a.b.f.n.q0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/q0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L279cec.  v0:= new `e.e.a.b.f.n.o0`;
  #L279cf0.  v1:= `@@e.e.a.b.f.n.e2.b` @type ^`byte`[] @kind object;
  #L279cf4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/o0;.<init>:([B)V` @kind direct;
  #L279cfa.  `@@e.e.a.b.f.n.q0.c` @type ^`e.e.a.b.f.n.q0` := v0 @kind object;
  #L279cfe.  call temp:= `a`() @signature `Le/e/a/b/f/n/w;.a:()Z` @kind static;
  #L279d04.  v0:= temp;
  #L279d06.  v1:= 0I;
  #L279d08.  if v0 == 0 then goto L279d18;
  #L279d0c.  v0:= new `e.e.a.b.f.n.p0`;
  #L279d10.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/p0;.<init>:(Le/e/a/b/f/n/f0;)V` @kind direct;
  #L279d16.  goto L279d22;
  #L279d18.  v0:= new `e.e.a.b.f.n.i0`;
  #L279d1c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/i0;.<init>:(Le/e/a/b/f/n/f0;)V` @kind direct;
  #L279d22.  `@@e.e.a.b.f.n.q0.d` @type ^`e.e.a.b.f.n.k0` := v0 @kind object;
  #L279d26.  v0:= new `e.e.a.b.f.n.g0`;
  #L279d2a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/g0;.<init>:()V` @kind direct;
  #L279d30.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.q0` v1 @kind this) @signature `Le/e/a/b/f/n/q0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L279d44.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L279d4a.  v0:= 0I;
  #L279d4c.  v1.`e.e.a.b.f.n.q0.b` @type ^`int` := v0;
  #L279d50.  return @kind void;
}
procedure `e.e.a.b.f.n.q0` `a`(`java.io.InputStream` v7 @kind object) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/io/InputStream;)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L279a38.  v0:= new `java.util.ArrayList`;
  #L279a3c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L279a42.  v1:= 256I;
  #L279a46.  v2:= new `byte`[v1];
  #L279a4a.  v3:= 0I;
  #L279a4c.  v4:= 0I;
  #L279a4e.  if v4 >= v1 then goto L279a6a;
  #L279a52.  v5:= v1 - v4 @kind int;
  #L279a56.  call temp:= `read`(v7, v2, v4, v5) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L279a5c.  v5:= temp;
  #L279a5e.  v6:= -1I;
  #L279a60.  if v5 != v6 then goto L279a66;
  #L279a64.  goto L279a6a;
  #L279a66.  v4:= v4 + v5 @kind int;
  #L279a68.  goto L279a4e;
  #L279a6a.  if v4 != 0 then goto L279a72;
  #L279a6e.  v2:= 0I;
  #L279a70.  goto L279a7a;
  #L279a72.  call temp:= `a`(v2, v3, v4) @signature `Le/e/a/b/f/n/q0;.a:([BII)Le/e/a/b/f/n/q0;` @kind static;
  #L279a78.  v2:= temp @kind object;
  #L279a7a.  if v2 != 0 then goto L279aa2;
  #L279a7e.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L279a84.  v7:= temp;
  #L279a86.  if v7 != 0 then goto L279a90;
  #L279a8a.  v7:= `@@e.e.a.b.f.n.q0.c` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L279a8e.  goto L279aa0;
  #L279a90.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L279a96.  v0:= temp @kind object;
  #L279a98.  call temp:= `a`(v0, v7) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/util/Iterator;I)Le/e/a/b/f/n/q0;` @kind static;
  #L279a9e.  v7:= temp @kind object;
  #L279aa0.  return v7 @kind object;
  #L279aa2.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L279aa8.  v1:= v1 + v1 @kind int;
  #L279aaa.  v2:= 8192I;
  #L279aae.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L279ab4.  v1:= temp;
  #L279ab6.  goto L279a46;
}
procedure `e.e.a.b.f.n.q0` `a`(`java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/lang/String;)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L279a10.  v0:= new `e.e.a.b.f.n.o0`;
  #L279a14.  v1:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L279a18.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L279a1e.  v2:= temp @kind object;
  #L279a20.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/n/o0;.<init>:([B)V` @kind direct;
  #L279a26.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.q0` `a`(`java.util.Iterator` v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/util/Iterator;I)Le/e/a/b/f/n/q0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2798fc.  v0:= 1I;
  #L2798fe.  if v4 <= 0 then goto L2799a2;
  #L279902.  if v4 != v0 then goto L279914;
  #L279906.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L27990c.  v3:= temp @kind object;
  #L27990e.  v3:= (`e.e.a.b.f.n.q0`) v3 @kind object;
  #L279912.  goto L27994e;
  #L279914.  v0:= v4 ^>> 1;
  #L279918.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/util/Iterator;I)Le/e/a/b/f/n/q0;` @kind static;
  #L27991e.  v1:= temp @kind object;
  #L279920.  v4:= v4 - v0 @kind int;
  #L279922.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/util/Iterator;I)Le/e/a/b/f/n/q0;` @kind static;
  #L279928.  v3:= temp @kind object;
  #L27992a.  v4:= 2147483647I;
  #L279930.  call temp:= `d`(v1) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279936.  v0:= temp;
  #L279938.  v4:= v4 - v0 @kind int;
  #L27993a.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279940.  v0:= temp;
  #L279942.  if v4 < v0 then goto L279950;
  #L279946.  call temp:= `b`(v1, v3) @signature `Le/e/a/b/f/n/v3;.b:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @kind static;
  #L27994c.  v3:= temp @kind object;
  #L27994e.  return v3 @kind object;
  #L279950.  v4:= new `java.lang.IllegalArgumentException`;
  #L279954.  call temp:= `d`(v1) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L27995a.  v0:= temp;
  #L27995c.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279962.  v3:= temp;
  #L279964.  v1:= new `java.lang.StringBuilder`;
  #L279968.  v2:= 53I;
  #L27996c.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279972.  v2:= "ByteString would be too long: " @kind object;
  #L279976.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27997c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279982.  v0:= "+" @kind object;
  #L279986.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27998c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279992.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279998.  v3:= temp @kind object;
  #L27999a.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2799a0.  throw v4;
  #L2799a2.  v3:= new `java.lang.IllegalArgumentException`;
  #L2799a6.  v0:= new `java.lang.Object`[v0];
  #L2799aa.  v1:= 0I;
  #L2799ac.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2799b2.  v4:= temp @kind object;
  #L2799b4.  v0[v1]:= v4 @kind object;
  #L2799b8.  v4:= "length (%s) must be >= 1" @kind object;
  #L2799bc.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2799c2.  v4:= temp @kind object;
  #L2799c4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2799ca.  throw v3;
}
procedure `e.e.a.b.f.n.q0` `a`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/n/q0;.a:([BII)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2799dc.  v0:= v3 + v4 @kind int;
  #L2799e0.  v1:= length @variable v2;
  #L2799e2.  call temp:= `c`(v3, v0, v1) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @kind static;
  #L2799e8.  v0:= new `e.e.a.b.f.n.o0`;
  #L2799ec.  v1:= `@@e.e.a.b.f.n.q0.d` @type ^`e.e.a.b.f.n.k0` @kind object;
  #L2799f0.  call temp:= `a`(v1, v2, v3, v4) @signature `Le/e/a/b/f/n/k0;.a:([BII)[B` @kind interface;
  #L2799f6.  v2:= temp @kind object;
  #L2799f8.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/n/o0;.<init>:([B)V` @kind direct;
  #L2799fe.  return v0 @kind object;
}
procedure `void` `b`(`int` v3 , `int` v4 ) @signature `Le/e/a/b/f/n/q0;.b:(II)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L279d9c.  v0:= v3 + 1;
  #L279da0.  v0:= v4 - v0 @kind int;
  #L279da4.  v0:= v0 ^| v3 @kind int;
  #L279da6.  if v0 >= 0 then goto L279e22;
  #L279daa.  if v3 >= 0 then goto L279de0;
  #L279dae.  v4:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L279db2.  v0:= new `java.lang.StringBuilder`;
  #L279db6.  v1:= 22I;
  #L279dba.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279dc0.  v1:= "Index < 0: " @kind object;
  #L279dc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279dca.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279dd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279dd6.  v3:= temp @kind object;
  #L279dd8.  call `<init>`(v4, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279dde.  throw v4;
  #L279de0.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L279de4.  v1:= new `java.lang.StringBuilder`;
  #L279de8.  v2:= 40I;
  #L279dec.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279df2.  v2:= "Index > length: " @kind object;
  #L279df6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279dfc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279e02.  v3:= ", " @kind object;
  #L279e06.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279e0c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279e12.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279e18.  v3:= temp @kind object;
  #L279e1a.  call `<init>`(v0, v3) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279e20.  throw v0;
  #L279e22.  return @kind void;
}
procedure `int` `c`(`int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L279b18.  v0:= v4 - v3 @kind int;
  #L279b1c.  v1:= v3 ^| v4 @kind int;
  #L279b20.  v1:= v1 ^| v0 @kind int;
  #L279b22.  v2:= v5 - v4 @kind int;
  #L279b26.  v1:= v1 ^| v2 @kind int;
  #L279b28.  if v1 >= 0 then goto L279bf4;
  #L279b2c.  if v3 < 0 then goto L279bb8;
  #L279b30.  if v4 >= v3 then goto L279b76;
  #L279b34.  v5:= new `java.lang.IndexOutOfBoundsException`;
  #L279b38.  v0:= new `java.lang.StringBuilder`;
  #L279b3c.  v1:= 66I;
  #L279b40.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279b46.  v1:= "Beginning index larger than ending index: " @kind object;
  #L279b4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b50.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b56.  v3:= ", " @kind object;
  #L279b5a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b60.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279b6c.  v3:= temp @kind object;
  #L279b6e.  call `<init>`(v5, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279b74.  throw v5;
  #L279b76.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L279b7a.  v0:= new `java.lang.StringBuilder`;
  #L279b7e.  v1:= 37I;
  #L279b82.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279b88.  v1:= "End index: " @kind object;
  #L279b8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b92.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279b98.  v4:= " >= " @kind object;
  #L279b9c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279ba2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279ba8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279bae.  v4:= temp @kind object;
  #L279bb0.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279bb6.  throw v3;
  #L279bb8.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L279bbc.  v5:= new `java.lang.StringBuilder`;
  #L279bc0.  v0:= 32I;
  #L279bc4.  call `<init>`(v5, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279bca.  v0:= "Beginning index: " @kind object;
  #L279bce.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279bd4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279bda.  v3:= " < 0" @kind object;
  #L279bde.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279be4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279bea.  v3:= temp @kind object;
  #L279bec.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279bf2.  throw v4;
  #L279bf4.  return v0;
}
procedure `e.e.a.b.f.n.m0` `h`(`int` v2 ) @signature `Le/e/a/b/f/n/q0;.h:(I)Le/e/a/b/f/n/m0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2798dc.  v0:= new `e.e.a.b.f.n.m0`;
  #L2798e0.  v1:= 0I;
  #L2798e2.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/n/m0;.<init>:(ILe/e/a/b/f/n/f0;)V` @kind direct;
  #L2798e8.  return v0 @kind object;
}
procedure `byte` `a`(`int` v0 ) @signature `Le/e/a/b/f/n/q0;.a:(I)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.e.a.b.f.n.q0` `a`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `a`(`java.nio.charset.Charset` v0 @kind object) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.n.e0` v0 @kind object) @signature `Le/e/a/b/f/n/q0;.a:(Le/e/a/b/f/n/e0;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `a`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `byte` `b`(`int` v0 ) @signature `Le/e/a/b/f/n/q0;.b:(I)B` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `b`() @signature `Le/e/a/b/f/n/q0;.b:()I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `b`(`e.e.a.b.f.n.q0` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Le/e/a/b/f/n/q0;.b:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L279ca4.  call temp:= `d`(v1) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279caa.  v0:= temp;
  #L279cac.  if v0 != 0 then goto L279cb6;
  #L279cb0.  v2:= "" @kind object;
  #L279cb4.  goto L279cbe;
  #L279cb6.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/q0;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L279cbc.  v2:= temp @kind object;
  #L279cbe.  return v2 @kind object;
}
procedure `void` `b`(`e.e.a.b.f.n.q0` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/n/q0;.b:([BIII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L279d64.  call temp:= `d`(v2) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279d6a.  v4:= temp;
  #L279d6c.  v0:= 0I;
  #L279d6e.  call temp:= `c`(v0, v6, v4) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @kind static;
  #L279d74.  v4:= v5 + v6 @kind int;
  #L279d78.  v1:= length @variable v3;
  #L279d7a.  call temp:= `c`(v5, v4, v1) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @kind static;
  #L279d80.  if v6 <= 0 then goto L279d8a;
  #L279d84.  call `a`(v2, v3, v0, v5, v6) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @kind virtual;
  #L279d8a.  return @kind void;
}
procedure `int` `d`() @signature `Le/e/a/b/f/n/q0;.d:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/n/q0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `f`() @signature `Le/e/a/b/f/n/q0;.f:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.f.n.l0` `g`(`e.e.a.b.f.n.q0` v1 @kind this) @signature `Le/e/a/b/f/n/q0;.g:()Le/e/a/b/f/n/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2798c0.  v0:= new `e.e.a.b.f.n.f0`;
  #L2798c4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/f0;.<init>:(Le/e/a/b/f/n/q0;)V` @kind direct;
  #L2798ca.  return v0 @kind object;
}
procedure `int` `h`(`e.e.a.b.f.n.q0` v1 @kind this) @signature `Le/e/a/b/f/n/q0;.h:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L279b00.  v0:= v1.`e.e.a.b.f.n.q0.b` @type ^`int`;
  #L279b04.  return v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.q0` v2 @kind this) @signature `Le/e/a/b/f/n/q0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L279ac8.  v0:= v2.`e.e.a.b.f.n.q0.b` @type ^`int`;
  #L279acc.  if v0 != 0 then goto L279aec;
  #L279ad0.  call temp:= `d`(v2) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279ad6.  v0:= temp;
  #L279ad8.  v1:= 0I;
  #L279ada.  call temp:= `b`(v2, v0, v1, v0) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @kind virtual;
  #L279ae0.  v0:= temp;
  #L279ae2.  if v0 != 0 then goto L279ae8;
  #L279ae6.  v0:= 1I;
  #L279ae8.  v2.`e.e.a.b.f.n.q0.b` @type ^`int` := v0;
  #L279aec.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.n.q0` v1 @kind this) @signature `Le/e/a/b/f/n/q0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L279cd0.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/q0;.g:()Le/e/a/b/f/n/l0;` @kind virtual;
  #L279cd6.  v0:= temp @kind object;
  #L279cd8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.q0` v5 @kind this) @signature `Le/e/a/b/f/n/q0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L279c08.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L279c0c.  v1:= 3I;
  #L279c0e.  v1:= new `java.lang.Object`[v1];
  #L279c12.  call temp:= `identityHashCode`(v5) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L279c18.  v2:= temp;
  #L279c1a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L279c20.  v2:= temp @kind object;
  #L279c22.  v3:= 0I;
  #L279c24.  v1[v3]:= v2 @kind object;
  #L279c28.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279c2e.  v2:= temp;
  #L279c30.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L279c36.  v2:= temp @kind object;
  #L279c38.  v4:= 1I;
  #L279c3a.  v1[v4]:= v2 @kind object;
  #L279c3e.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279c44.  v2:= temp;
  #L279c46.  v4:= 50I;
  #L279c4a.  if v2 > v4 then goto L279c58;
  #L279c4e.  call temp:= `a`(v5) @signature `Le/e/a/b/f/n/j4;.a:(Le/e/a/b/f/n/q0;)Ljava/lang/String;` @kind static;
  #L279c54.  v2:= temp @kind object;
  #L279c56.  goto L279c80;
  #L279c58.  v2:= 47I;
  #L279c5c.  call temp:= `a`(v5, v3, v2) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L279c62.  v2:= temp @kind object;
  #L279c64.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/j4;.a:(Le/e/a/b/f/n/q0;)Ljava/lang/String;` @kind static;
  #L279c6a.  v2:= temp @kind object;
  #L279c6c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L279c72.  v2:= temp @kind object;
  #L279c74.  v3:= "..." @kind object;
  #L279c78.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L279c7e.  v2:= temp @kind object;
  #L279c80.  v3:= 2I;
  #L279c82.  v1[v3]:= v2 @kind object;
  #L279c86.  v2:= "<ByteString@%s size=%d contents=\"%s\">" @kind object;
  #L279c8a.  call temp:= `format`(v0, v2, v1) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L279c90.  v0:= temp @kind object;
  #L279c92.  return v0 @kind object;
}
procedure `boolean` `u`() @signature `Le/e/a/b/f/n/q0;.u:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
