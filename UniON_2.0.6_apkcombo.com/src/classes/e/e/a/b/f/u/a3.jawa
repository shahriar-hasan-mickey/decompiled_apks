record `e.e.a.b.f.u.a3` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.u.b6` @kind interface {
  `int` `e.e.a.b.f.u.a3.zza` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`e.e.a.b.f.u.a3` v1 @kind this) @signature `Le/e/a/b/f/u/a3;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L325650.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L325656.  v0:= 0I;
  #L325658.  v1.`e.e.a.b.f.u.a3.zza` @type ^`int` := v0;
  #L32565c.  return @kind void;
}
procedure `void` `a`(`java.lang.Iterable` v6 @kind object, `java.util.List` v7 @kind object) @signature `Le/e/a/b/f/u/a3;.a:(Ljava/lang/Iterable;Ljava/util/List;)V` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L325670.  call temp:= `a`(v6) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L325676.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.m5` @kind boolean;
  #L32567a.  v1:= " is null." @kind object;
  #L32567e.  v2:= "Element at index " @kind object;
  #L325682.  v3:= 37I;
  #L325686.  if v0 == 0 then goto L32573c;
  #L32568a.  v6:= (`e.e.a.b.f.u.m5`) v6 @kind object;
  #L32568e.  call temp:= `c`(v6) @signature `Le/e/a/b/f/u/m5;.c:()Ljava/util/List;` @kind interface;
  #L325694.  v6:= temp @kind object;
  #L325696.  v0:= v7 @kind object;
  #L325698.  v0:= (`e.e.a.b.f.u.m5`) v0 @kind object;
  #L32569c.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3256a2.  v7:= temp;
  #L3256a4.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3256aa.  v6:= temp @kind object;
  #L3256ac.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3256b2.  v4:= temp;
  #L3256b4.  if v4 == 0 then goto L32573a;
  #L3256b8.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3256be.  v4:= temp @kind object;
  #L3256c0.  if v4 != 0 then goto L32571a;
  #L3256c4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3256ca.  v6:= temp;
  #L3256cc.  v6:= v6 - v7 @kind int;
  #L3256ce.  v4:= new `java.lang.StringBuilder`;
  #L3256d2.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3256d8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3256de.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3256e4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3256ea.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3256f0.  v6:= temp @kind object;
  #L3256f2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3256f8.  v1:= temp;
  #L3256fa.  v1:= v1 + -1;
  #L3256fe.  if v1 < v7 then goto L32570e;
  #L325702.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L325708.  v1:= v1 + -1;
  #L32570c.  goto L3256fe;
  #L32570e.  v7:= new `java.lang.NullPointerException`;
  #L325712.  call `<init>`(v7, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L325718.  throw v7;
  #L32571a.  v5:= instanceof @variable v4 @type ^`e.e.a.b.f.u.l3` @kind boolean;
  #L32571e.  if v5 == 0 then goto L32572e;
  #L325722.  v4:= (`e.e.a.b.f.u.l3`) v4 @kind object;
  #L325726.  call `a`(v0, v4) @signature `Le/e/a/b/f/u/m5;.a:(Le/e/a/b/f/u/l3;)V` @kind interface;
  #L32572c.  goto L3256ac;
  #L32572e.  v4:= (`java.lang.String`) v4 @kind object;
  #L325732.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L325738.  goto L3256ac;
  #L32573a.  return @kind void;
  #L32573c.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.m6` @kind boolean;
  #L325740.  if v0 == 0 then goto L325750;
  #L325744.  v6:= (`java.util.Collection`) v6 @kind object;
  #L325748.  call temp:= `addAll`(v7, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32574e.  return @kind void;
  #L325750.  v0:= instanceof @variable v7 @type ^`java.util.ArrayList` @kind boolean;
  #L325754.  if v0 == 0 then goto L325784;
  #L325758.  v0:= instanceof @variable v6 @type ^`java.util.Collection` @kind boolean;
  #L32575c.  if v0 == 0 then goto L325784;
  #L325760.  v0:= v7 @kind object;
  #L325762.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L325766.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32576c.  v4:= temp;
  #L32576e.  v5:= v6 @kind object;
  #L325770.  v5:= (`java.util.Collection`) v5 @kind object;
  #L325774.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L32577a.  v5:= temp;
  #L32577c.  v4:= v4 + v5 @kind int;
  #L32577e.  call `ensureCapacity`(v0, v4) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L325784.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32578a.  v0:= temp;
  #L32578c.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L325792.  v6:= temp @kind object;
  #L325794.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32579a.  v4:= temp;
  #L32579c.  if v4 == 0 then goto L32580a;
  #L3257a0.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3257a6.  v4:= temp @kind object;
  #L3257a8.  if v4 != 0 then goto L325802;
  #L3257ac.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3257b2.  v6:= temp;
  #L3257b4.  v6:= v6 - v0 @kind int;
  #L3257b6.  v4:= new `java.lang.StringBuilder`;
  #L3257ba.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3257c0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3257c6.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3257cc.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3257d2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3257d8.  v6:= temp @kind object;
  #L3257da.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3257e0.  v1:= temp;
  #L3257e2.  v1:= v1 + -1;
  #L3257e6.  if v1 < v0 then goto L3257f6;
  #L3257ea.  call temp:= `remove`(v7, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3257f0.  v1:= v1 + -1;
  #L3257f4.  goto L3257e6;
  #L3257f6.  v7:= new `java.lang.NullPointerException`;
  #L3257fa.  call `<init>`(v7, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L325800.  throw v7;
  #L325802.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L325808.  goto L325794;
  #L32580a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.a3` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/u/a3;.a:(I)V` @AccessFlag  {
    temp;

  #L32581c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L325820.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L325826.  throw v1;
}
procedure `byte`[] `e`(`e.e.a.b.f.u.a3` v6 @kind this) @signature `Le/e/a/b/f/u/a3;.e:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3254b0.  call temp:= `g`(v6) @signature `Le/e/a/b/f/u/b6;.g:()I` @kind interface;
  #L3254b6.  v0:= temp;
  #L3254b8.  v0:= new `byte`[v0];
  #L3254bc.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/a4;.a:([B)Le/e/a/b/f/u/a4;` @kind static;
  #L3254c2.  v1:= temp @kind object;
  #L3254c4.  call `a`(v6, v1) @signature `Le/e/a/b/f/u/b6;.a:(Le/e/a/b/f/u/a4;)V` @kind interface;
  #L3254ca.  call `b`(v1) @signature `Le/e/a/b/f/u/a4;.b:()V` @kind virtual;
  #L3254d0.  return v0 @kind object;
  #L3254d2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3254d4.  v1:= new `java.lang.RuntimeException`;
  #L3254d8.  v2:= "byte array" @kind object;
  #L3254dc.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3254e2.  v3:= temp @kind object;
  #L3254e4.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3254ea.  v3:= temp @kind object;
  #L3254ec.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3254f2.  v4:= temp @kind object;
  #L3254f4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3254fa.  v4:= temp;
  #L3254fc.  v4:= v4 + 62;
  #L325500.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L325506.  v5:= temp;
  #L325508.  v4:= v4 + v5 @kind int;
  #L32550a.  v5:= new `java.lang.StringBuilder`;
  #L32550e.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L325514.  v4:= "Serializing " @kind object;
  #L325518.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32551e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L325524.  v3:= " to a " @kind object;
  #L325528.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32552e.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L325534.  v2:= " threw an IOException (should never happen)." @kind object;
  #L325538.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32553e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L325544.  v2:= temp @kind object;
  #L325546.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L32554c.  throw v1;
  catch `java.io.IOException` @[L3254b0..L3254d0] goto L3254d2;
}
procedure `int` `f`(`e.e.a.b.f.u.a3` v1 @kind this) @signature `Le/e/a/b/f/u/a3;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L325634.  v0:= new `java.lang.UnsupportedOperationException`;
  #L325638.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L32563e.  throw v0;
}
procedure `e.e.a.b.f.u.l3` `u`(`e.e.a.b.f.u.a3` v6 @kind this) @signature `Le/e/a/b/f/u/a3;.u:()Le/e/a/b/f/u/l3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L325570.  call temp:= `g`(v6) @signature `Le/e/a/b/f/u/b6;.g:()I` @kind interface;
  #L325576.  v0:= temp;
  #L325578.  call temp:= `h`(v0) @signature `Le/e/a/b/f/u/l3;.h:(I)Le/e/a/b/f/u/u3;` @kind static;
  #L32557e.  v0:= temp @kind object;
  #L325580.  call temp:= `b`(v0) @signature `Le/e/a/b/f/u/u3;.b:()Le/e/a/b/f/u/a4;` @kind virtual;
  #L325586.  v1:= temp @kind object;
  #L325588.  call `a`(v6, v1) @signature `Le/e/a/b/f/u/b6;.a:(Le/e/a/b/f/u/a4;)V` @kind interface;
  #L32558e.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/u3;.a:()Le/e/a/b/f/u/l3;` @kind virtual;
  #L325594.  v0:= temp @kind object;
  #L325596.  return v0 @kind object;
  #L325598.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L32559a.  v1:= new `java.lang.RuntimeException`;
  #L32559e.  v2:= "ByteString" @kind object;
  #L3255a2.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3255a8.  v3:= temp @kind object;
  #L3255aa.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3255b0.  v3:= temp @kind object;
  #L3255b2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3255b8.  v4:= temp @kind object;
  #L3255ba.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3255c0.  v4:= temp;
  #L3255c2.  v4:= v4 + 62;
  #L3255c6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3255cc.  v5:= temp;
  #L3255ce.  v4:= v4 + v5 @kind int;
  #L3255d0.  v5:= new `java.lang.StringBuilder`;
  #L3255d4.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3255da.  v4:= "Serializing " @kind object;
  #L3255de.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3255e4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3255ea.  v3:= " to a " @kind object;
  #L3255ee.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3255f4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3255fa.  v2:= " threw an IOException (should never happen)." @kind object;
  #L3255fe.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L325604.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32560a.  v2:= temp @kind object;
  #L32560c.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L325612.  throw v1;
  catch `java.io.IOException` @[L325570..L325596] goto L325598;
}
