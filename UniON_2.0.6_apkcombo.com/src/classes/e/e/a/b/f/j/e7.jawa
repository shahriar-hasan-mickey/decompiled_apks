record `e.e.a.b.f.j.e7` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.j.p8` @kind class {
  `int` `e.e.a.b.f.j.e7.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.j.e7.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.j.e7` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/j/e7;.<init>:(II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L23656c.  call `<init>`(v0) @signature `Le/e/a/b/f/j/p8;.<init>:()V` @kind direct;
  #L236572.  call temp:= `b`(v2, v1) @signature `Le/e/a/b/f/j/d5;.b:(II)I` @kind static;
  #L236578.  v0.`e.e.a.b.f.j.e7.b` @type ^`int` := v1;
  #L23657c.  v0.`e.e.a.b.f.j.e7.c` @type ^`int` := v2;
  #L236580.  return @kind void;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Le/e/a/b/f/j/e7;.a:(I)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.j.e7` v2 @kind this) @signature `Le/e/a/b/f/j/e7;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L233d90.  v0:= v2.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L233d94.  v1:= v2.`e.e.a.b.f.j.e7.b` @type ^`int`;
  #L233d98.  if v0 >= v1 then goto L233da0;
  #L233d9c.  v0:= 1I;
  #L233d9e.  return v0;
  #L233da0.  v0:= 0I;
  #L233da2.  return v0;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.j.e7` v1 @kind this) @signature `Le/e/a/b/f/j/e7;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L233db4.  v0:= v1.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L233db8.  if v0 <= 0 then goto L233dc0;
  #L233dbc.  v0:= 1I;
  #L233dbe.  return v0;
  #L233dc0.  v0:= 0I;
  #L233dc2.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.j.e7` v2 @kind this) @signature `Le/e/a/b/f/j/e7;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L236260.  call temp:= `hasNext`(v2) @signature `Le/e/a/b/f/j/e7;.hasNext:()Z` @kind virtual;
  #L236266.  v0:= temp;
  #L236268.  if v0 == 0 then goto L236282;
  #L23626c.  v0:= v2.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L236270.  v1:= v0 + 1;
  #L236274.  v2.`e.e.a.b.f.j.e7.c` @type ^`int` := v1;
  #L236278.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/j/e7;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L23627e.  v0:= temp @kind object;
  #L236280.  return v0 @kind object;
  #L236282.  v0:= new `java.util.NoSuchElementException`;
  #L236286.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L23628c.  throw v0;
}
procedure `int` `nextIndex`(`e.e.a.b.f.j.e7` v1 @kind this) @signature `Le/e/a/b/f/j/e7;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L236214.  v0:= v1.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L236218.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.j.e7` v1 @kind this) @signature `Le/e/a/b/f/j/e7;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2362a0.  call temp:= `hasPrevious`(v1) @signature `Le/e/a/b/f/j/e7;.hasPrevious:()Z` @kind virtual;
  #L2362a6.  v0:= temp;
  #L2362a8.  if v0 == 0 then goto L2362c2;
  #L2362ac.  v0:= v1.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L2362b0.  v0:= v0 + -1;
  #L2362b4.  v1.`e.e.a.b.f.j.e7.c` @type ^`int` := v0;
  #L2362b8.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/j/e7;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L2362be.  v0:= temp @kind object;
  #L2362c0.  return v0 @kind object;
  #L2362c2.  v0:= new `java.util.NoSuchElementException`;
  #L2362c6.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2362cc.  throw v0;
}
procedure `int` `previousIndex`(`e.e.a.b.f.j.e7` v1 @kind this) @signature `Le/e/a/b/f/j/e7;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23622c.  v0:= v1.`e.e.a.b.f.j.e7.c` @type ^`int`;
  #L236230.  v0:= v0 + -1;
  #L236234.  return v0;
}
