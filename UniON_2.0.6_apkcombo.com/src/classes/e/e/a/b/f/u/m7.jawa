record `e.e.a.b.f.u.m7` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `e.e.a.b.f.u.m7.a` @AccessFlag PRIVATE;
  `int`[] `e.e.a.b.f.u.m7.b` @AccessFlag PRIVATE;
  `java.lang.Object`[] `e.e.a.b.f.u.m7.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.u.m7.d` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.u.m7.e` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.u.m7` `@@e.e.a.b.f.u.m7.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/m7;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33ad08.  v0:= new `e.e.a.b.f.u.m7`;
  #L33ad0c.  v1:= 0I;
  #L33ad0e.  v2:= new `int`[v1];
  #L33ad12.  v3:= new `java.lang.Object`[v1];
  #L33ad16.  call `<init>`(v0, v1, v2, v3, v1) @signature `Le/e/a/b/f/u/m7;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L33ad1c.  `@@e.e.a.b.f.u.m7.f` @type ^`e.e.a.b.f.u.m7` := v0 @kind object;
  #L33ad20.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.m7` v4 @kind this) @signature `Le/e/a/b/f/u/m7;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33ad34.  v0:= 8I;
  #L33ad38.  v1:= new `int`[v0];
  #L33ad3c.  v0:= new `java.lang.Object`[v0];
  #L33ad40.  v2:= 0I;
  #L33ad42.  v3:= 1I;
  #L33ad44.  call `<init>`(v4, v2, v1, v0, v3) @signature `Le/e/a/b/f/u/m7;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L33ad4a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.m7` v1 @kind this, `int` v2 , `int`[] v3 @kind object, `java.lang.Object`[] v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/u/m7;.<init>:(I[I[Ljava/lang/Object;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L33ad5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33ad62.  v0:= -1I;
  #L33ad64.  v1.`e.e.a.b.f.u.m7.d` @type ^`int` := v0;
  #L33ad68.  v1.`e.e.a.b.f.u.m7.a` @type ^`int` := v2;
  #L33ad6c.  v1.`e.e.a.b.f.u.m7.b` @type ^`int`[] := v3 @kind object;
  #L33ad70.  v1.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] := v4 @kind object;
  #L33ad74.  v1.`e.e.a.b.f.u.m7.e` @type ^`boolean` := v5 @kind boolean;
  #L33ad78.  return @kind void;
}
procedure `e.e.a.b.f.u.m7` `a`(`e.e.a.b.f.u.m7` v6 @kind object, `e.e.a.b.f.u.m7` v7 @kind object) @signature `Le/e/a/b/f/u/m7;.a:(Le/e/a/b/f/u/m7;Le/e/a/b/f/u/m7;)Le/e/a/b/f/u/m7;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33aab4.  v0:= v6.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aab8.  v1:= v7.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aabc.  v0:= v0 + v1 @kind int;
  #L33aabe.  v1:= v6.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33aac2.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L33aac8.  v1:= temp @kind object;
  #L33aaca.  v2:= v7.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33aace.  v3:= v6.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aad2.  v4:= v7.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aad6.  v5:= 0I;
  #L33aad8.  call `arraycopy`(v2, v5, v1, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33aade.  v2:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33aae2.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L33aae8.  v2:= temp @kind object;
  #L33aaea.  v3:= v7.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33aaee.  v6:= v6.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aaf2.  v7:= v7.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aaf6.  call `arraycopy`(v3, v5, v2, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33aafc.  v6:= new `e.e.a.b.f.u.m7`;
  #L33ab00.  v7:= 1I;
  #L33ab02.  call `<init>`(v6, v0, v1, v2, v7) @signature `Le/e/a/b/f/u/m7;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L33ab08.  return v6 @kind object;
}
procedure `void` `a`(`int` v2 , `java.lang.Object` v3 @kind object, `e.e.a.b.f.u.g8` v4 @kind object) @signature `Le/e/a/b/f/u/m7;.a:(ILjava/lang/Object;Le/e/a/b/f/u/g8;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L33ae90.  v0:= v2 ^>> 3;
  #L33ae94.  v2:= v2 ^& 7;
  #L33ae98.  if v2 == 0 then goto L33af3c;
  #L33ae9c.  v1:= 1I;
  #L33ae9e.  if v2 == v1 then goto L33af28;
  #L33aea2.  v1:= 2I;
  #L33aea4.  if v2 == v1 then goto L33af1c;
  #L33aea8.  v1:= 3I;
  #L33aeaa.  if v2 == v1 then goto L33aedc;
  #L33aeae.  v1:= 5I;
  #L33aeb0.  if v2 != v1 then goto L33aec8;
  #L33aeb4.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L33aeb8.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L33aebe.  v2:= temp;
  #L33aec0.  call `d`(v4, v0, v2) @signature `Le/e/a/b/f/u/g8;.d:(II)V` @kind interface;
  #L33aec6.  return @kind void;
  #L33aec8.  v2:= new `java.lang.RuntimeException`;
  #L33aecc.  call temp:= `d`() @signature `Le/e/a/b/f/u/b5;.d:()Le/e/a/b/f/u/e5;` @kind static;
  #L33aed2.  v3:= temp @kind object;
  #L33aed4.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L33aeda.  throw v2;
  #L33aedc.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/g8;.zza:()I` @kind interface;
  #L33aee2.  v2:= temp;
  #L33aee4.  v1:= `@@e.e.a.b.f.u.f8.a` @type ^`int`;
  #L33aee8.  if v2 != v1 then goto L33af04;
  #L33aeec.  call `a`(v4, v0) @signature `Le/e/a/b/f/u/g8;.a:(I)V` @kind interface;
  #L33aef2.  v3:= (`e.e.a.b.f.u.m7`) v3 @kind object;
  #L33aef6.  call `b`(v3, v4) @signature `Le/e/a/b/f/u/m7;.b:(Le/e/a/b/f/u/g8;)V` @kind virtual;
  #L33aefc.  call `b`(v4, v0) @signature `Le/e/a/b/f/u/g8;.b:(I)V` @kind interface;
  #L33af02.  return @kind void;
  #L33af04.  call `b`(v4, v0) @signature `Le/e/a/b/f/u/g8;.b:(I)V` @kind interface;
  #L33af0a.  v3:= (`e.e.a.b.f.u.m7`) v3 @kind object;
  #L33af0e.  call `b`(v3, v4) @signature `Le/e/a/b/f/u/m7;.b:(Le/e/a/b/f/u/g8;)V` @kind virtual;
  #L33af14.  call `a`(v4, v0) @signature `Le/e/a/b/f/u/g8;.a:(I)V` @kind interface;
  #L33af1a.  return @kind void;
  #L33af1c.  v3:= (`e.e.a.b.f.u.l3`) v3 @kind object;
  #L33af20.  call `a`(v4, v0, v3) @signature `Le/e/a/b/f/u/g8;.a:(ILe/e/a/b/f/u/l3;)V` @kind interface;
  #L33af26.  return @kind void;
  #L33af28.  v3:= (`java.lang.Long`) v3 @kind object;
  #L33af2c.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L33af32.  v2:= temp @kind wide;
  #L33af34.  call `c`(v4, v0, v2) @signature `Le/e/a/b/f/u/g8;.c:(IJ)V` @kind interface;
  #L33af3a.  return @kind void;
  #L33af3c.  v3:= (`java.lang.Long`) v3 @kind object;
  #L33af40.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L33af46.  v2:= temp @kind wide;
  #L33af48.  call `d`(v4, v0, v2) @signature `Le/e/a/b/f/u/g8;.d:(IJ)V` @kind interface;
  #L33af4e.  return @kind void;
}
procedure `e.e.a.b.f.u.m7` `d`() @signature `Le/e/a/b/f/u/m7;.d:()Le/e/a/b/f/u/m7;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33aa9c.  v0:= `@@e.e.a.b.f.u.m7.f` @type ^`e.e.a.b.f.u.m7` @kind object;
  #L33aaa0.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.m7` `e`() @signature `Le/e/a/b/f/u/m7;.e:()Le/e/a/b/f/u/m7;` @AccessFlag STATIC {
    temp;
    v0;

  #L33ab1c.  v0:= new `e.e.a.b.f.u.m7`;
  #L33ab20.  call `<init>`(v0) @signature `Le/e/a/b/f/u/m7;.<init>:()V` @kind direct;
  #L33ab26.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.m7` v1 @kind this) @signature `Le/e/a/b/f/u/m7;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33b020.  v0:= 0I;
  #L33b022.  v1.`e.e.a.b.f.u.m7.e` @type ^`boolean` := v0 @kind boolean;
  #L33b026.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.m7` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/u/m7;.a:(ILjava/lang/Object;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L33ae08.  v0:= v2.`e.e.a.b.f.u.m7.e` @type ^`boolean` @kind boolean;
  #L33ae0c.  if v0 == 0 then goto L33ae72;
  #L33ae10.  v0:= v2.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ae14.  v1:= v2.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33ae18.  v1:= length @variable v1;
  #L33ae1a.  if v0 != v1 then goto L33ae54;
  #L33ae1e.  v1:= 4I;
  #L33ae20.  if v0 >= v1 then goto L33ae2a;
  #L33ae24.  v0:= 8I;
  #L33ae28.  goto L33ae2e;
  #L33ae2a.  v0:= v0 ^> 1;
  #L33ae2e.  v1:= v2.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ae32.  v1:= v1 + v0 @kind int;
  #L33ae34.  v0:= v2.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33ae38.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L33ae3e.  v0:= temp @kind object;
  #L33ae40.  v2.`e.e.a.b.f.u.m7.b` @type ^`int`[] := v0 @kind object;
  #L33ae44.  v0:= v2.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ae48.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L33ae4e.  v0:= temp @kind object;
  #L33ae50.  v2.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L33ae54.  v0:= v2.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33ae58.  v1:= v2.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ae5c.  v0[v1]:= v3;
  #L33ae60.  v3:= v2.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ae64.  v3[v1]:= v4 @kind object;
  #L33ae68.  v1:= v1 + 1;
  #L33ae6c.  v2.`e.e.a.b.f.u.m7.a` @type ^`int` := v1;
  #L33ae70.  return @kind void;
  #L33ae72.  v3:= new `java.lang.UnsupportedOperationException`;
  #L33ae76.  call `<init>`(v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L33ae7c.  throw v3;
}
procedure `void` `a`(`e.e.a.b.f.u.m7` v3 @kind this, `e.e.a.b.f.u.g8` v4 @kind object) @signature `Le/e/a/b/f/u/m7;.a:(Le/e/a/b/f/u/g8;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L33ad8c.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/g8;.zza:()I` @kind interface;
  #L33ad92.  v0:= temp;
  #L33ad94.  v1:= `@@e.e.a.b.f.u.f8.b` @type ^`int`;
  #L33ad98.  if v0 != v1 then goto L33adca;
  #L33ad9c.  v0:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ada0.  v0:= v0 + -1;
  #L33ada4.  if v0 < 0 then goto L33adc8;
  #L33ada8.  v1:= v3.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33adac.  v1:= v1[v0];
  #L33adb0.  v1:= v1 ^>> 3;
  #L33adb4.  v2:= v3.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33adb8.  v2:= v2[v0] @kind object;
  #L33adbc.  call `a`(v4, v1, v2) @signature `Le/e/a/b/f/u/g8;.a:(ILjava/lang/Object;)V` @kind interface;
  #L33adc2.  v0:= v0 + -1;
  #L33adc6.  goto L33ada4;
  #L33adc8.  return @kind void;
  #L33adca.  v0:= 0I;
  #L33adcc.  v1:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33add0.  if v0 >= v1 then goto L33adf4;
  #L33add4.  v1:= v3.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33add8.  v1:= v1[v0];
  #L33addc.  v1:= v1 ^>> 3;
  #L33ade0.  v2:= v3.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ade4.  v2:= v2[v0] @kind object;
  #L33ade8.  call `a`(v4, v1, v2) @signature `Le/e/a/b/f/u/g8;.a:(ILjava/lang/Object;)V` @kind interface;
  #L33adee.  v0:= v0 + 1;
  #L33adf2.  goto L33adcc;
  #L33adf4.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.m7` v3 @kind this, `java.lang.StringBuilder` v4 @kind object, `int` v5 ) @signature `Le/e/a/b/f/u/m7;.a:(Ljava/lang/StringBuilder;I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L33af60.  v0:= 0I;
  #L33af62.  v1:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33af66.  if v0 >= v1 then goto L33af92;
  #L33af6a.  v1:= v3.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33af6e.  v1:= v1[v0];
  #L33af72.  v1:= v1 ^>> 3;
  #L33af76.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L33af7c.  v1:= temp @kind object;
  #L33af7e.  v2:= v3.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33af82.  v2:= v2[v0] @kind object;
  #L33af86.  call `a`(v4, v5, v1, v2) @signature `Le/e/a/b/f/u/g6;.a:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L33af8c.  v0:= v0 + 1;
  #L33af90.  goto L33af62;
  #L33af92.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.u.m7` v4 @kind this) @signature `Le/e/a/b/f/u/m7;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33aba8.  v0:= v4.`e.e.a.b.f.u.m7.d` @type ^`int`;
  #L33abac.  v1:= -1I;
  #L33abae.  if v0 == v1 then goto L33abb4;
  #L33abb2.  return v0;
  #L33abb4.  v0:= 0I;
  #L33abb6.  v1:= 0I;
  #L33abb8.  v2:= v4.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33abbc.  if v0 >= v2 then goto L33abe8;
  #L33abc0.  v2:= v4.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33abc4.  v2:= v2[v0];
  #L33abc8.  v2:= v2 ^>> 3;
  #L33abcc.  v3:= v4.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33abd0.  v3:= v3[v0] @kind object;
  #L33abd4.  v3:= (`e.e.a.b.f.u.l3`) v3 @kind object;
  #L33abd8.  call temp:= `d`(v2, v3) @signature `Le/e/a/b/f/u/a4;.d:(ILe/e/a/b/f/u/l3;)I` @kind static;
  #L33abde.  v2:= temp;
  #L33abe0.  v1:= v1 + v2 @kind int;
  #L33abe2.  v0:= v0 + 1;
  #L33abe6.  goto L33abb8;
  #L33abe8.  v4.`e.e.a.b.f.u.m7.d` @type ^`int` := v1;
  #L33abec.  return v1;
}
procedure `void` `b`(`e.e.a.b.f.u.m7` v3 @kind this, `e.e.a.b.f.u.g8` v4 @kind object) @signature `Le/e/a/b/f/u/m7;.b:(Le/e/a/b/f/u/g8;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L33afa4.  v0:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33afa8.  if v0 != 0 then goto L33afae;
  #L33afac.  return @kind void;
  #L33afae.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/g8;.zza:()I` @kind interface;
  #L33afb4.  v0:= temp;
  #L33afb6.  v1:= `@@e.e.a.b.f.u.f8.a` @type ^`int`;
  #L33afba.  if v0 != v1 then goto L33afe6;
  #L33afbe.  v0:= 0I;
  #L33afc0.  v1:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33afc4.  if v0 >= v1 then goto L33afe4;
  #L33afc8.  v1:= v3.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33afcc.  v1:= v1[v0];
  #L33afd0.  v2:= v3.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33afd4.  v2:= v2[v0] @kind object;
  #L33afd8.  call `a`(v1, v2, v4) @signature `Le/e/a/b/f/u/m7;.a:(ILjava/lang/Object;Le/e/a/b/f/u/g8;)V` @kind static;
  #L33afde.  v0:= v0 + 1;
  #L33afe2.  goto L33afc0;
  #L33afe4.  return @kind void;
  #L33afe6.  v0:= v3.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33afea.  v0:= v0 + -1;
  #L33afee.  if v0 < 0 then goto L33b00e;
  #L33aff2.  v1:= v3.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33aff6.  v1:= v1[v0];
  #L33affa.  v2:= v3.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33affe.  v2:= v2[v0] @kind object;
  #L33b002.  call `a`(v1, v2, v4) @signature `Le/e/a/b/f/u/m7;.a:(ILjava/lang/Object;Le/e/a/b/f/u/g8;)V` @kind static;
  #L33b008.  v0:= v0 + -1;
  #L33b00c.  goto L33afee;
  #L33b00e.  return @kind void;
}
procedure `int` `c`(`e.e.a.b.f.u.m7` v6 @kind this) @signature `Le/e/a/b/f/u/m7;.c:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33ac00.  v0:= v6.`e.e.a.b.f.u.m7.d` @type ^`int`;
  #L33ac04.  v1:= -1I;
  #L33ac06.  if v0 == v1 then goto L33ac0c;
  #L33ac0a.  return v0;
  #L33ac0c.  v0:= 0I;
  #L33ac0e.  v1:= 0I;
  #L33ac10.  v2:= v6.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ac14.  if v0 >= v2 then goto L33acf0;
  #L33ac18.  v2:= v6.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33ac1c.  v2:= v2[v0];
  #L33ac20.  v3:= v2 ^>> 3;
  #L33ac24.  v2:= v2 ^& 7;
  #L33ac28.  if v2 == 0 then goto L33accc;
  #L33ac2c.  v4:= 1I;
  #L33ac2e.  if v2 == v4 then goto L33acae;
  #L33ac32.  v5:= 2I;
  #L33ac34.  if v2 == v5 then goto L33ac98;
  #L33ac38.  v5:= 3I;
  #L33ac3a.  if v2 == v5 then goto L33ac76;
  #L33ac3e.  v4:= 5I;
  #L33ac40.  if v2 != v4 then goto L33ac62;
  #L33ac44.  v2:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ac48.  v2:= v2[v0] @kind object;
  #L33ac4c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L33ac50.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L33ac56.  v2:= temp;
  #L33ac58.  call temp:= `i`(v3, v2) @signature `Le/e/a/b/f/u/a4;.i:(II)I` @kind static;
  #L33ac5e.  v2:= temp;
  #L33ac60.  goto L33ace8;
  #L33ac62.  v0:= new `java.lang.IllegalStateException`;
  #L33ac66.  call temp:= `d`() @signature `Le/e/a/b/f/u/b5;.d:()Le/e/a/b/f/u/e5;` @kind static;
  #L33ac6c.  v1:= temp @kind object;
  #L33ac6e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L33ac74.  throw v0;
  #L33ac76.  call temp:= `e`(v3) @signature `Le/e/a/b/f/u/a4;.e:(I)I` @kind static;
  #L33ac7c.  v2:= temp;
  #L33ac7e.  v2:= v2 ^< v4 @kind int;
  #L33ac80.  v3:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ac84.  v3:= v3[v0] @kind object;
  #L33ac88.  v3:= (`e.e.a.b.f.u.m7`) v3 @kind object;
  #L33ac8c.  call temp:= `c`(v3) @signature `Le/e/a/b/f/u/m7;.c:()I` @kind virtual;
  #L33ac92.  v3:= temp;
  #L33ac94.  v2:= v2 + v3 @kind int;
  #L33ac96.  goto L33ace8;
  #L33ac98.  v2:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ac9c.  v2:= v2[v0] @kind object;
  #L33aca0.  v2:= (`e.e.a.b.f.u.l3`) v2 @kind object;
  #L33aca4.  call temp:= `c`(v3, v2) @signature `Le/e/a/b/f/u/a4;.c:(ILe/e/a/b/f/u/l3;)I` @kind static;
  #L33acaa.  v2:= temp;
  #L33acac.  goto L33ace8;
  #L33acae.  v2:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33acb2.  v2:= v2[v0] @kind object;
  #L33acb6.  v2:= (`java.lang.Long`) v2 @kind object;
  #L33acba.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L33acc0.  v4:= temp @kind wide;
  #L33acc2.  call temp:= `g`(v3, v4) @signature `Le/e/a/b/f/u/a4;.g:(IJ)I` @kind static;
  #L33acc8.  v2:= temp;
  #L33acca.  goto L33ace8;
  #L33accc.  v2:= v6.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33acd0.  v2:= v2[v0] @kind object;
  #L33acd4.  v2:= (`java.lang.Long`) v2 @kind object;
  #L33acd8.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L33acde.  v4:= temp @kind wide;
  #L33ace0.  call temp:= `e`(v3, v4) @signature `Le/e/a/b/f/u/a4;.e:(IJ)I` @kind static;
  #L33ace6.  v2:= temp;
  #L33ace8.  v1:= v1 + v2 @kind int;
  #L33acea.  v0:= v0 + 1;
  #L33acee.  goto L33ac10;
  #L33acf0.  v6.`e.e.a.b.f.u.m7.d` @type ^`int` := v1;
  #L33acf4.  return v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.m7` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/u/m7;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L33a9fc.  v0:= 1I;
  #L33a9fe.  if v8 != v9 then goto L33aa04;
  #L33aa02.  return v0;
  #L33aa04.  v1:= 0I;
  #L33aa06.  if v9 != 0 then goto L33aa0c;
  #L33aa0a.  return v1;
  #L33aa0c.  v2:= instanceof @variable v9 @type ^`e.e.a.b.f.u.m7` @kind boolean;
  #L33aa10.  if v2 != 0 then goto L33aa16;
  #L33aa14.  return v1;
  #L33aa16.  v9:= (`e.e.a.b.f.u.m7`) v9 @kind object;
  #L33aa1a.  v2:= v8.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aa1e.  v3:= v9.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aa22.  if v2 != v3 then goto L33aa8a;
  #L33aa26.  v3:= v8.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33aa2a.  v4:= v9.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33aa2e.  v5:= 0I;
  #L33aa30.  if v5 >= v2 then goto L33aa4a;
  #L33aa34.  v6:= v3[v5];
  #L33aa38.  v7:= v4[v5];
  #L33aa3c.  if v6 == v7 then goto L33aa44;
  #L33aa40.  v2:= 0I;
  #L33aa42.  goto L33aa4c;
  #L33aa44.  v5:= v5 + 1;
  #L33aa48.  goto L33aa30;
  #L33aa4a.  v2:= 1I;
  #L33aa4c.  if v2 == 0 then goto L33aa8a;
  #L33aa50.  v2:= v8.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33aa54.  v9:= v9.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33aa58.  v3:= v8.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33aa5c.  v4:= 0I;
  #L33aa5e.  if v4 >= v3 then goto L33aa80;
  #L33aa62.  v5:= v2[v4] @kind object;
  #L33aa66.  v6:= v9[v4] @kind object;
  #L33aa6a.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33aa70.  v5:= temp;
  #L33aa72.  if v5 != 0 then goto L33aa7a;
  #L33aa76.  v9:= 0I;
  #L33aa78.  goto L33aa82;
  #L33aa7a.  v4:= v4 + 1;
  #L33aa7e.  goto L33aa5e;
  #L33aa80.  v9:= 1I;
  #L33aa82.  if v9 != 0 then goto L33aa88;
  #L33aa86.  goto L33aa8a;
  #L33aa88.  return v0;
  #L33aa8a.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.m7` v8 @kind this) @signature `Le/e/a/b/f/u/m7;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L33ab38.  v0:= v8.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ab3c.  v1:= v0 + 527;
  #L33ab40.  v1:= v1 * 31;
  #L33ab44.  v2:= v8.`e.e.a.b.f.u.m7.b` @type ^`int`[] @kind object;
  #L33ab48.  v3:= 0I;
  #L33ab4a.  v4:= 17I;
  #L33ab4e.  v5:= 0I;
  #L33ab50.  v6:= 17I;
  #L33ab54.  if v5 >= v0 then goto L33ab68;
  #L33ab58.  v6:= v6 * 31;
  #L33ab5c.  v7:= v2[v5];
  #L33ab60.  v6:= v6 + v7 @kind int;
  #L33ab62.  v5:= v5 + 1;
  #L33ab66.  goto L33ab54;
  #L33ab68.  v1:= v1 + v6 @kind int;
  #L33ab6a.  v1:= v1 * 31;
  #L33ab6e.  v0:= v8.`e.e.a.b.f.u.m7.c` @type ^`java.lang.Object`[] @kind object;
  #L33ab72.  v2:= v8.`e.e.a.b.f.u.m7.a` @type ^`int`;
  #L33ab76.  if v3 >= v2 then goto L33ab92;
  #L33ab7a.  v4:= v4 * 31;
  #L33ab7e.  v5:= v0[v3] @kind object;
  #L33ab82.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L33ab88.  v5:= temp;
  #L33ab8a.  v4:= v4 + v5 @kind int;
  #L33ab8c.  v3:= v3 + 1;
  #L33ab90.  goto L33ab76;
  #L33ab92.  v1:= v1 + v4 @kind int;
  #L33ab94.  return v1;
}
