record `e.e.a.b.f.q.ah` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.q.ah.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.q.ah.c` @AccessFlag ;
  `e.e.a.b.f.q.bi` `e.e.a.b.f.q.ah.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.ah` v0 @kind this, `e.e.a.b.f.q.bi` v1 @kind object) @signature `Le/e/a/b/f/q/ah;.<init>:(Le/e/a/b/f/q/bi;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f4960.  v0.`e.e.a.b.f.q.ah.d` @type ^`e.e.a.b.f.q.bi` := v1 @kind object;
  #L2f4964.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f496a.  v1:= v0.`e.e.a.b.f.q.ah.d` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f496e.  v1:= v1.`e.e.a.b.f.q.bi.d` @type ^`java.util.Map` @kind object;
  #L2f4972.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2f4978.  v1:= temp @kind object;
  #L2f497a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2f4980.  v1:= temp @kind object;
  #L2f4982.  v0.`e.e.a.b.f.q.ah.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L2f4986.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.ah` v1 @kind this) @signature `Le/e/a/b/f/q/ah;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f3914.  v0:= v1.`e.e.a.b.f.q.ah.b` @type ^`java.util.Iterator` @kind object;
  #L2f3918.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f391e.  v0:= temp;
  #L2f3920.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.ah` v3 @kind this) @signature `Le/e/a/b/f/q/ah;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2f3bf0.  v0:= v3.`e.e.a.b.f.q.ah.b` @type ^`java.util.Iterator` @kind object;
  #L2f3bf4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f3bfa.  v0:= temp @kind object;
  #L2f3bfc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2f3c00.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2f3c06.  v1:= temp @kind object;
  #L2f3c08.  v1:= (`java.util.Collection`) v1 @kind object;
  #L2f3c0c.  v3.`e.e.a.b.f.q.ah.c` @type ^`java.util.Collection` := v1 @kind object;
  #L2f3c10.  v1:= v3.`e.e.a.b.f.q.ah.d` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f3c14.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2f3c1a.  v2:= temp @kind object;
  #L2f3c1c.  v1:= v1.`e.e.a.b.f.q.bi.e` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2f3c20.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2f3c26.  v0:= temp @kind object;
  #L2f3c28.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2f3c2c.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/q/jq;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L2f3c32.  v0:= temp @kind object;
  #L2f3c34.  v1:= new `e.e.a.b.f.q.f5`;
  #L2f3c38.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/q/f5;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L2f3c3e.  return v1 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.q.ah` v2 @kind this) @signature `Le/e/a/b/f/q/ah;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2f4998.  v0:= v2.`e.e.a.b.f.q.ah.c` @type ^`java.util.Collection` @kind object;
  #L2f499c.  if v0 == 0 then goto L2f49a4;
  #L2f49a0.  v0:= 1I;
  #L2f49a2.  goto L2f49a6;
  #L2f49a4.  v0:= 0I;
  #L2f49a6.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L2f49aa.  call `a`(v0, v1) @signature `Le/e/a/b/f/q/vb;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2f49b0.  v0:= v2.`e.e.a.b.f.q.ah.b` @type ^`java.util.Iterator` @kind object;
  #L2f49b4.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2f49ba.  v0:= v2.`e.e.a.b.f.q.ah.d` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f49be.  v0:= v0.`e.e.a.b.f.q.bi.e` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2f49c2.  v1:= v2.`e.e.a.b.f.q.ah.c` @type ^`java.util.Collection` @kind object;
  #L2f49c6.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2f49cc.  v1:= temp;
  #L2f49ce.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/q/jq;.b:(Le/e/a/b/f/q/jq;I)I` @kind static;
  #L2f49d4.  v0:= v2.`e.e.a.b.f.q.ah.c` @type ^`java.util.Collection` @kind object;
  #L2f49d8.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2f49de.  v0:= 0I;
  #L2f49e0.  v2.`e.e.a.b.f.q.ah.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2f49e4.  return @kind void;
}
