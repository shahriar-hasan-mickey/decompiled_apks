record `e.e.a.b.f.u.w4` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@e.e.a.b.f.u.w4.a` @AccessFlag STATIC_FINAL;
global `byte`[] `@@e.e.a.b.f.u.w4.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/w4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32e5a4.  v0:= "UTF-8" @kind object;
  #L32e5a8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L32e5ae.  v0:= temp @kind object;
  #L32e5b0.  `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L32e5b4.  v0:= "ISO-8859-1" @kind object;
  #L32e5b8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L32e5be.  v0:= 0I;
  #L32e5c0.  v1:= new `byte`[v0];
  #L32e5c4.  `@@e.e.a.b.f.u.w4.b` @type ^`byte`[] := v1 @kind object;
  #L32e5c8.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L32e5ce.  v1:= `@@e.e.a.b.f.u.w4.b` @type ^`byte`[] @kind object;
  #L32e5d2.  v2:= length @variable v1;
  #L32e5d4.  call temp:= `a`(v1, v0, v2, v0) @signature `Le/e/a/b/f/u/y3;.a:([BIIZ)Le/e/a/b/f/u/y3;` @kind static;
  #L32e5da.  return @kind void;
}
procedure `int` `a`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/u/w4;.a:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e498.  v0:= v2;
  #L32e49a.  v2:= v4;
  #L32e49c.  v1:= v4 + v5 @kind int;
  #L32e4a0.  if v2 >= v1 then goto L32e4b4;
  #L32e4a4.  v0:= v0 * 31;
  #L32e4a8.  v1:= v3[v2] @kind byte;
  #L32e4ac.  v0:= v0 + v1 @kind int;
  #L32e4ae.  v2:= v2 + 1;
  #L32e4b2.  goto L32e49c;
  #L32e4b4.  return v0;
}
procedure `int` `a`(`long` v2 ) @signature `Le/e/a/b/f/u/w4;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32e4c8.  v0:= 32I;
  #L32e4cc.  v0:= v2 ^>> v0 @kind long;
  #L32e4d0.  v2:= v2 ^~ v0 @kind long;
  #L32e4d2.  v3:= (`int`) v2 @kind l2i;
  #L32e4d4.  return v3;
}
procedure `int` `a`(`boolean` v0 ) @signature `Le/e/a/b/f/u/w4;.a:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32e478.  if v0 == 0 then goto L32e482;
  #L32e47c.  v0:= 1231I;
  #L32e480.  return v0;
  #L32e482.  v0:= 1237I;
  #L32e486.  return v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L32e50c.  if v0 == 0 then goto L32e512;
  #L32e510.  return v0 @kind object;
  #L32e512.  v0:= new `java.lang.NullPointerException`;
  #L32e516.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L32e51c.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L32e530.  v0:= (`e.e.a.b.f.u.b6`) v0 @kind object;
  #L32e534.  call temp:= `c`(v0) @signature `Le/e/a/b/f/u/b6;.c:()Le/e/a/b/f/u/e6;` @kind interface;
  #L32e53a.  v0:= temp @kind object;
  #L32e53c.  v1:= (`e.e.a.b.f.u.b6`) v1 @kind object;
  #L32e540.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/u/e6;.a:(Le/e/a/b/f/u/b6;)Le/e/a/b/f/u/e6;` @kind interface;
  #L32e546.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/e6;.a:()Le/e/a/b/f/u/b6;` @kind interface;
  #L32e54c.  v0:= temp @kind object;
  #L32e54e.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L32e560.  if v0 == 0 then goto L32e566;
  #L32e564.  return v0 @kind object;
  #L32e566.  v0:= new `java.lang.NullPointerException`;
  #L32e56a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e570.  throw v0;
}
procedure `boolean` `a`(`e.e.a.b.f.u.b6` v1 @kind object) @signature `Le/e/a/b/f/u/w4;.a:(Le/e/a/b/f/u/b6;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L32e458.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.u.c3` @kind boolean;
  #L32e45c.  if v0 == 0 then goto L32e464;
  #L32e460.  v1:= (`e.e.a.b.f.u.c3`) v1 @kind object;
  #L32e464.  v1:= 0I;
  #L32e466.  return v1;
}
procedure `boolean` `a`(`byte`[] v0 @kind object) @signature `Le/e/a/b/f/u/w4;.a:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32e43c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/s7;.a:([B)Z` @kind static;
  #L32e442.  v0:= temp;
  #L32e444.  return v0;
}
procedure `java.lang.String` `b`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/u/w4;.b:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32e584.  v0:= new `java.lang.String`;
  #L32e588.  v1:= `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` @kind object;
  #L32e58c.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L32e592.  return v0 @kind object;
}
procedure `int` `c`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/u/w4;.c:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32e4e8.  v0:= length @variable v2;
  #L32e4ea.  v1:= 0I;
  #L32e4ec.  call temp:= `a`(v0, v2, v1, v0) @signature `Le/e/a/b/f/u/w4;.a:(I[BII)I` @kind static;
  #L32e4f2.  v2:= temp;
  #L32e4f4.  if v2 != 0 then goto L32e4fa;
  #L32e4f8.  v2:= 1I;
  #L32e4fa.  return v2;
}
