record `e.e.a.b.f.r.n1` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.r.m1` @kind class, `java.util.ListIterator` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.r.n1` v0 @kind this, `java.util.ListIterator` v1 @kind object) @signature `Le/e/a/b/f/r/n1;.<init>:(Ljava/util/ListIterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30f2a4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/m1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L30f2aa.  return @kind void;
}
procedure `void` `add`(`e.e.a.b.f.r.n1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/n1;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30f2bc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30f2c0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30f2c6.  throw v1;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.r.n1` v1 @kind this) @signature `Le/e/a/b/f/r/n1;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f20c.  v0:= v1.`e.e.a.b.f.r.m1.b` @type ^`java.util.Iterator` @kind object;
  #L30f210.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L30f214.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L30f21a.  v0:= temp;
  #L30f21c.  return v0;
}
procedure `int` `nextIndex`(`e.e.a.b.f.r.n1` v1 @kind this) @signature `Le/e/a/b/f/r/n1;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f230.  v0:= v1.`e.e.a.b.f.r.m1.b` @type ^`java.util.Iterator` @kind object;
  #L30f234.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L30f238.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L30f23e.  v0:= temp;
  #L30f240.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.r.n1` v1 @kind this) @signature `Le/e/a/b/f/r/n1;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f278.  v0:= v1.`e.e.a.b.f.r.m1.b` @type ^`java.util.Iterator` @kind object;
  #L30f27c.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L30f280.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L30f286.  v0:= temp @kind object;
  #L30f288.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/r/m1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30f28e.  v0:= temp @kind object;
  #L30f290.  return v0 @kind object;
}
procedure `int` `previousIndex`(`e.e.a.b.f.r.n1` v1 @kind this) @signature `Le/e/a/b/f/r/n1;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f254.  v0:= v1.`e.e.a.b.f.r.m1.b` @type ^`java.util.Iterator` @kind object;
  #L30f258.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L30f25c.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L30f262.  v0:= temp;
  #L30f264.  return v0;
}
procedure `void` `set`(`e.e.a.b.f.r.n1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/n1;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30f2d8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L30f2dc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L30f2e2.  throw v1;
}
