record `e.e.a.b.f.u.a4` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.u.i3` @kind class {
  `e.e.a.b.f.u.c4` `e.e.a.b.f.u.a4.a` @AccessFlag ;
}
global `java.util.logging.Logger` `@@e.e.a.b.f.u.a4.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.u.a4.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/a4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3289a0.  v0:= constclass @type ^`e.e.a.b.f.u.a4` @kind object;
  #L3289a4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3289aa.  v0:= temp @kind object;
  #L3289ac.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3289b2.  v0:= temp @kind object;
  #L3289b4.  `@@e.e.a.b.f.u.a4.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3289b8.  call temp:= `a`() @signature `Le/e/a/b/f/u/p7;.a:()Z` @kind static;
  #L3289be.  v0:= temp;
  #L3289c0.  `@@e.e.a.b.f.u.a4.c` @type ^`boolean` := v0 @kind boolean;
  #L3289c4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.a4` v0 @kind this) @signature `Le/e/a/b/f/u/a4;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3289d8.  call `<init>`(v0) @signature `Le/e/a/b/f/u/i3;.<init>:()V` @kind direct;
  #L3289de.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.a4` v0 @kind this, `e.e.a.b.f.u.b4` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.<init>:(Le/e/a/b/f/u/b4;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3289f0.  call `<init>`(v0) @signature `Le/e/a/b/f/u/a4;.<init>:()V` @kind direct;
  #L3289f6.  return @kind void;
}
procedure `int` `a`(`int` v1 , `e.e.a.b.f.u.k5` v2 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(ILe/e/a/b/f/u/k5;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L328278.  v1:= v1 ^< 3;
  #L32827c.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328282.  v1:= temp;
  #L328284.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/k5;.a:()I` @kind virtual;
  #L32828a.  v2:= temp;
  #L32828c.  call temp:= `g`(v2) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328292.  v0:= temp;
  #L328294.  v0:= v0 + v2 @kind int;
  #L328296.  v1:= v1 + v0 @kind int;
  #L328298.  return v1;
}
procedure `int` `a`(`e.e.a.b.f.u.b6` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/b6;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L328304.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/b6;.g:()I` @kind interface;
  #L32830a.  v1:= temp;
  #L32830c.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328312.  v0:= temp;
  #L328314.  v0:= v0 + v1 @kind int;
  #L328316.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.u.b6` v2 @kind object, `e.e.a.b.f.u.s6` v3 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/b6;Le/e/a/b/f/u/s6;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32823c.  v2:= (`e.e.a.b.f.u.a3`) v2 @kind object;
  #L328240.  call temp:= `f`(v2) @signature `Le/e/a/b/f/u/a3;.f:()I` @kind virtual;
  #L328246.  v0:= temp;
  #L328248.  v1:= -1I;
  #L32824a.  if v0 != v1 then goto L32825c;
  #L32824e.  call temp:= `a`(v3, v2) @signature `Le/e/a/b/f/u/s6;.a:(Ljava/lang/Object;)I` @kind interface;
  #L328254.  v0:= temp;
  #L328256.  call `a`(v2, v0) @signature `Le/e/a/b/f/u/a3;.a:(I)V` @kind virtual;
  #L32825c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328262.  v2:= temp;
  #L328264.  v2:= v2 + v0 @kind int;
  #L328266.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.u.k5` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/k5;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L328218.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/k5;.a:()I` @kind virtual;
  #L32821e.  v1:= temp;
  #L328220.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328226.  v0:= temp;
  #L328228.  v0:= v0 + v1 @kind int;
  #L32822a.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.u.l3` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/l3;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3282e0.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L3282e6.  v1:= temp;
  #L3282e8.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3282ee.  v0:= temp;
  #L3282f0.  v0:= v0 + v1 @kind int;
  #L3282f2.  return v0;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L328494.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/s7;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L32849a.  v1:= temp;
  #L32849c.  goto L3284ac;
  #L32849e.  v0:= `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3284a2.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3284a8.  v1:= temp @kind object;
  #L3284aa.  v1:= length @variable v1;
  #L3284ac.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3284b2.  v0:= temp;
  #L3284b4.  v0:= v0 + v1 @kind int;
  #L3284b6.  return v0;
  catch `e.e.a.b.f.u.v7` @[L328494..L32849c] goto L32849e;
}
procedure `e.e.a.b.f.u.a4` `a`(`byte`[] v3 @kind object) @signature `Le/e/a/b/f/u/a4;.a:([B)Le/e/a/b/f/u/a4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3281f8.  v0:= length @variable v3;
  #L3281fa.  v1:= new `e.e.a.b.f.u.a4$a`;
  #L3281fe.  v2:= 0I;
  #L328200.  call `<init>`(v1, v3, v2, v0) @signature `Le/e/a/b/f/u/a4$a;.<init>:([BII)V` @kind direct;
  #L328206.  return v1 @kind object;
}
procedure `int` `b`(`double` v0 ) @signature `Le/e/a/b/f/u/a4;.b:(D)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328328.  v0:= 8I;
  #L32832c.  return v0;
}
procedure `int` `b`(`float` v0 ) @signature `Le/e/a/b/f/u/a4;.b:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328340.  v0:= 4I;
  #L328342.  return v0;
}
procedure `int` `b`(`int` v0 , `double` v1 ) @signature `Le/e/a/b/f/u/a4;.b:(ID)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328424.  v0:= v0 ^< 3;
  #L328428.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32842e.  v0:= temp;
  #L328430.  v0:= v0 + 8;
  #L328434.  return v0;
}
procedure `int` `b`(`int` v0 , `float` v1 ) @signature `Le/e/a/b/f/u/a4;.b:(IF)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328448.  v0:= v0 ^< 3;
  #L32844c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328452.  v0:= temp;
  #L328454.  v0:= v0 + 4;
  #L328458.  return v0;
}
procedure `int` `b`(`int` v2 , `e.e.a.b.f.u.b6` v3 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/b6;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3283b4.  v0:= 8I;
  #L3283b8.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3283be.  v0:= temp;
  #L3283c0.  v0:= v0 ^< 1;
  #L3283c4.  v1:= 2I;
  #L3283c6.  call temp:= `g`(v1, v2) @signature `Le/e/a/b/f/u/a4;.g:(II)I` @kind static;
  #L3283cc.  v2:= temp;
  #L3283ce.  v0:= v0 + v2 @kind int;
  #L3283d0.  v2:= 24I;
  #L3283d4.  call temp:= `g`(v2) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3283da.  v2:= temp;
  #L3283dc.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/b6;)I` @kind static;
  #L3283e2.  v3:= temp;
  #L3283e4.  v2:= v2 + v3 @kind int;
  #L3283e6.  v0:= v0 + v2 @kind int;
  #L3283e8.  return v0;
}
procedure `int` `b`(`int` v0 , `e.e.a.b.f.u.b6` v1 @kind object, `e.e.a.b.f.u.s6` v2 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/b6;Le/e/a/b/f/u/s6;)I` @AccessFlag STATIC {
    temp;

  #L3283fc.  v0:= v0 ^< 3;
  #L328400.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328406.  v0:= temp;
  #L328408.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/b6;Le/e/a/b/f/u/s6;)I` @kind static;
  #L32840e.  v1:= temp;
  #L328410.  v0:= v0 + v1 @kind int;
  #L328412.  return v0;
}
procedure `int` `b`(`int` v2 , `e.e.a.b.f.u.k5` v3 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/k5;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L328378.  v0:= 8I;
  #L32837c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328382.  v0:= temp;
  #L328384.  v0:= v0 ^< 1;
  #L328388.  v1:= 2I;
  #L32838a.  call temp:= `g`(v1, v2) @signature `Le/e/a/b/f/u/a4;.g:(II)I` @kind static;
  #L328390.  v2:= temp;
  #L328392.  v0:= v0 + v2 @kind int;
  #L328394.  v2:= 3I;
  #L328396.  call temp:= `a`(v2, v3) @signature `Le/e/a/b/f/u/a4;.a:(ILe/e/a/b/f/u/k5;)I` @kind static;
  #L32839c.  v2:= temp;
  #L32839e.  v0:= v0 + v2 @kind int;
  #L3283a0.  return v0;
}
procedure `int` `b`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32846c.  v0:= v0 ^< 3;
  #L328470.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328476.  v0:= temp;
  #L328478.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/a4;.a:(Ljava/lang/String;)I` @kind static;
  #L32847e.  v1:= temp;
  #L328480.  v0:= v0 + v1 @kind int;
  #L328482.  return v0;
}
procedure `int` `b`(`int` v0 , `boolean` v1 ) @signature `Le/e/a/b/f/u/a4;.b:(IZ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328354.  v0:= v0 ^< 3;
  #L328358.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32835e.  v0:= temp;
  #L328360.  v0:= v0 + 1;
  #L328364.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.u.b6` v0 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(Le/e/a/b/f/u/b6;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3284d8.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/b6;.g:()I` @kind interface;
  #L3284de.  v0:= temp;
  #L3284e0.  return v0;
}
procedure `int` `b`(`boolean` v0 ) @signature `Le/e/a/b/f/u/a4;.b:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3282ac.  v0:= 1I;
  #L3282ae.  return v0;
}
procedure `int` `b`(`byte`[] v1 @kind object) @signature `Le/e/a/b/f/u/a4;.b:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3282c0.  v1:= length @variable v1;
  #L3282c2.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3282c8.  v0:= temp;
  #L3282ca.  v0:= v0 + v1 @kind int;
  #L3282cc.  return v0;
}
procedure `int` `c`(`int` v2 , `e.e.a.b.f.u.b6` v3 @kind object, `e.e.a.b.f.u.s6` v4 @kind object) @signature `Le/e/a/b/f/u/a4;.c:(ILe/e/a/b/f/u/b6;Le/e/a/b/f/u/s6;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L328528.  v2:= v2 ^< 3;
  #L32852c.  call temp:= `g`(v2) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328532.  v2:= temp;
  #L328534.  v2:= v2 ^< 1;
  #L328538.  v3:= (`e.e.a.b.f.u.a3`) v3 @kind object;
  #L32853c.  call temp:= `f`(v3) @signature `Le/e/a/b/f/u/a3;.f:()I` @kind virtual;
  #L328542.  v0:= temp;
  #L328544.  v1:= -1I;
  #L328546.  if v0 != v1 then goto L328558;
  #L32854a.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/u/s6;.a:(Ljava/lang/Object;)I` @kind interface;
  #L328550.  v0:= temp;
  #L328552.  call `a`(v3, v0) @signature `Le/e/a/b/f/u/a3;.a:(I)V` @kind virtual;
  #L328558.  v2:= v2 + v0 @kind int;
  #L32855a.  return v2;
}
procedure `int` `c`(`int` v1 , `e.e.a.b.f.u.l3` v2 @kind object) @signature `Le/e/a/b/f/u/a4;.c:(ILe/e/a/b/f/u/l3;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3284f4.  v1:= v1 ^< 3;
  #L3284f8.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3284fe.  v1:= temp;
  #L328500.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L328506.  v2:= temp;
  #L328508.  call temp:= `g`(v2) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32850e.  v0:= temp;
  #L328510.  v0:= v0 + v2 @kind int;
  #L328512.  v1:= v1 + v0 @kind int;
  #L328514.  return v1;
}
procedure `boolean` `c`() @signature `Le/e/a/b/f/u/a4;.c:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3281e0.  v0:= `@@e.e.a.b.f.u.a4.c` @type ^`boolean` @kind boolean;
  #L3281e4.  return v0;
}
procedure `int` `d`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.d:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3285a8.  v0:= v0 ^< 3;
  #L3285ac.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3285b2.  v0:= temp;
  #L3285b4.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L3285ba.  v1:= temp;
  #L3285bc.  v0:= v0 + v1 @kind int;
  #L3285be.  return v0;
}
procedure `int` `d`(`int` v2 , `e.e.a.b.f.u.l3` v3 @kind object) @signature `Le/e/a/b/f/u/a4;.d:(ILe/e/a/b/f/u/l3;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32856c.  v0:= 8I;
  #L328570.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328576.  v0:= temp;
  #L328578.  v0:= v0 ^< 1;
  #L32857c.  v1:= 2I;
  #L32857e.  call temp:= `g`(v1, v2) @signature `Le/e/a/b/f/u/a4;.g:(II)I` @kind static;
  #L328584.  v2:= temp;
  #L328586.  v0:= v0 + v2 @kind int;
  #L328588.  v2:= 3I;
  #L32858a.  call temp:= `c`(v2, v3) @signature `Le/e/a/b/f/u/a4;.c:(ILe/e/a/b/f/u/l3;)I` @kind static;
  #L328590.  v2:= temp;
  #L328592.  v0:= v0 + v2 @kind int;
  #L328594.  return v0;
}
procedure `int` `d`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.d:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3285d0.  call temp:= `e`(v0) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L3285d6.  v0:= temp;
  #L3285d8.  return v0;
}
procedure `int` `e`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.e:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3285ec.  v0:= v0 ^< 3;
  #L3285f0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3285f6.  v0:= temp;
  #L3285f8.  return v0;
}
procedure `int` `e`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.e:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32860c.  v0:= v0 ^< 3;
  #L328610.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328616.  v0:= temp;
  #L328618.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L32861e.  v1:= temp;
  #L328620.  v0:= v0 + v1 @kind int;
  #L328622.  return v0;
}
procedure `int` `e`(`long` v6 ) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L328634.  v0:= -128L;
  #L328638.  v0:= v0 ^& v6 @kind long;
  #L32863a.  v2:= 0L;
  #L32863e.  v4:= lcmp(v0, v2);
  #L328642.  if v4 != 0 then goto L32864a;
  #L328646.  v6:= 1I;
  #L328648.  return v6;
  #L32864a.  v0:= lcmp(v6, v2);
  #L32864e.  if v0 >= 0 then goto L328658;
  #L328652.  v6:= 10I;
  #L328656.  return v6;
  #L328658.  v0:= -34359738368L;
  #L328662.  v0:= v0 ^& v6 @kind long;
  #L328664.  v4:= lcmp(v0, v2);
  #L328668.  if v4 == 0 then goto L328676;
  #L32866c.  v0:= 6I;
  #L32866e.  v1:= 28I;
  #L328672.  v6:= v6 ^>> v1 @kind long;
  #L328674.  goto L328678;
  #L328676.  v0:= 2I;
  #L328678.  v4:= -2097152L;
  #L32867e.  v4:= v4 ^& v6 @kind long;
  #L328680.  v1:= lcmp(v4, v2);
  #L328684.  if v1 == 0 then goto L328692;
  #L328688.  v0:= v0 + 2;
  #L32868c.  v1:= 14I;
  #L328690.  v6:= v6 ^>> v1 @kind long;
  #L328692.  v4:= -16384L;
  #L328696.  v6:= v6 ^& v4 @kind long;
  #L328698.  v1:= lcmp(v6, v2);
  #L32869c.  if v1 == 0 then goto L3286a4;
  #L3286a0.  v0:= v0 + 1;
  #L3286a4.  return v0;
}
procedure `int` `f`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.f:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3286b8.  if v0 < 0 then goto L3286c6;
  #L3286bc.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3286c2.  v0:= temp;
  #L3286c4.  return v0;
  #L3286c6.  v0:= 10I;
  #L3286ca.  return v0;
}
procedure `int` `f`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.f:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3286dc.  v0:= v0 ^< 3;
  #L3286e0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3286e6.  v0:= temp;
  #L3286e8.  call temp:= `f`(v1) @signature `Le/e/a/b/f/u/a4;.f:(I)I` @kind static;
  #L3286ee.  v1:= temp;
  #L3286f0.  v0:= v0 + v1 @kind int;
  #L3286f2.  return v0;
}
procedure `int` `f`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.f:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328704.  v0:= v0 ^< 3;
  #L328708.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32870e.  v0:= temp;
  #L328710.  call temp:= `i`(v1) @signature `Le/e/a/b/f/u/a4;.i:(J)J` @kind static;
  #L328716.  v1:= temp @kind wide;
  #L328718.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L32871e.  v1:= temp;
  #L328720.  v0:= v0 + v1 @kind int;
  #L328722.  return v0;
}
procedure `int` `f`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.f:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328734.  call temp:= `i`(v0) @signature `Le/e/a/b/f/u/a4;.i:(J)J` @kind static;
  #L32873a.  v0:= temp @kind wide;
  #L32873c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L328742.  v0:= temp;
  #L328744.  return v0;
}
procedure `int` `g`(`int` v1 ) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L328758.  v0:= v1 ^& -128;
  #L32875c.  if v0 != 0 then goto L328764;
  #L328760.  v1:= 1I;
  #L328762.  return v1;
  #L328764.  v0:= v1 ^& -16384;
  #L328768.  if v0 != 0 then goto L328770;
  #L32876c.  v1:= 2I;
  #L32876e.  return v1;
  #L328770.  v0:= -2097152I;
  #L328774.  v0:= v0 ^& v1 @kind int;
  #L328776.  if v0 != 0 then goto L32877e;
  #L32877a.  v1:= 3I;
  #L32877c.  return v1;
  #L32877e.  v0:= -268435456I;
  #L328782.  v1:= v1 ^& v0 @kind int;
  #L328784.  if v1 != 0 then goto L32878c;
  #L328788.  v1:= 4I;
  #L32878a.  return v1;
  #L32878c.  v1:= 5I;
  #L32878e.  return v1;
}
procedure `int` `g`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.g:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3287a0.  v0:= v0 ^< 3;
  #L3287a4.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3287aa.  v0:= temp;
  #L3287ac.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3287b2.  v1:= temp;
  #L3287b4.  v0:= v0 + v1 @kind int;
  #L3287b6.  return v0;
}
procedure `int` `g`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.g:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3287c8.  v0:= v0 ^< 3;
  #L3287cc.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3287d2.  v0:= temp;
  #L3287d4.  v0:= v0 + 8;
  #L3287d8.  return v0;
}
procedure `int` `g`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.g:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3287ec.  v0:= 8I;
  #L3287f0.  return v0;
}
procedure `int` `h`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.h:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328804.  call temp:= `m`(v0) @signature `Le/e/a/b/f/u/a4;.m:(I)I` @kind static;
  #L32880a.  v0:= temp;
  #L32880c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328812.  v0:= temp;
  #L328814.  return v0;
}
procedure `int` `h`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.h:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328828.  v0:= v0 ^< 3;
  #L32882c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328832.  v0:= temp;
  #L328834.  call temp:= `m`(v1) @signature `Le/e/a/b/f/u/a4;.m:(I)I` @kind static;
  #L32883a.  v1:= temp;
  #L32883c.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328842.  v1:= temp;
  #L328844.  v0:= v0 + v1 @kind int;
  #L328846.  return v0;
}
procedure `int` `h`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.h:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328858.  v0:= v0 ^< 3;
  #L32885c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L328862.  v0:= temp;
  #L328864.  v0:= v0 + 8;
  #L328868.  return v0;
}
procedure `int` `h`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.h:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32887c.  v0:= 8I;
  #L328880.  return v0;
}
procedure `int` `i`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.i:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328894.  v0:= 4I;
  #L328896.  return v0;
}
procedure `int` `i`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.i:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3288a8.  v0:= v0 ^< 3;
  #L3288ac.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3288b2.  v0:= temp;
  #L3288b4.  v0:= v0 + 4;
  #L3288b8.  return v0;
}
procedure `long` `i`(`long` v3 ) @signature `Le/e/a/b/f/u/a4;.i:(J)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L328980.  v0:= 1I;
  #L328982.  v0:= v3 ^< v0 @kind long;
  #L328986.  v2:= 63I;
  #L32898a.  v3:= v3 ^> v2 @kind long;
  #L32898c.  v3:= v3 ^~ v0 @kind long;
  #L32898e.  return v3 @kind wide;
}
procedure `int` `j`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.j:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3288cc.  v0:= 4I;
  #L3288ce.  return v0;
}
procedure `int` `j`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.j:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3288e0.  v0:= v0 ^< 3;
  #L3288e4.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L3288ea.  v0:= temp;
  #L3288ec.  v0:= v0 + 4;
  #L3288f0.  return v0;
}
procedure `int` `k`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.k:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328904.  call temp:= `f`(v0) @signature `Le/e/a/b/f/u/a4;.f:(I)I` @kind static;
  #L32890a.  v0:= temp;
  #L32890c.  return v0;
}
procedure `int` `k`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.k:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328920.  v0:= v0 ^< 3;
  #L328924.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32892a.  v0:= temp;
  #L32892c.  call temp:= `f`(v1) @signature `Le/e/a/b/f/u/a4;.f:(I)I` @kind static;
  #L328932.  v1:= temp;
  #L328934.  v0:= v0 + v1 @kind int;
  #L328936.  return v0;
}
procedure `int` `l`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.l:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L328948.  call temp:= `g`(v0) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32894e.  v0:= temp;
  #L328950.  return v0;
}
procedure `int` `m`(`int` v1 ) @signature `Le/e/a/b/f/u/a4;.m:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L328964.  v0:= v1 ^< 1;
  #L328968.  v1:= v1 ^> 31;
  #L32896c.  v1:= v1 ^~ v0 @kind int;
  #L32896e.  return v1;
}
procedure `int` `a`() @signature `Le/e/a/b/f/u/a4;.a:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`byte` v0 ) @signature `Le/e/a/b/f/u/a4;.a:(B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v0 @kind this, `double` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(D)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328a24.  call temp:= `doubleToRawLongBits`(v1) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L328a2a.  v1:= temp @kind wide;
  #L328a2c.  call `c`(v0, v1) @signature `Le/e/a/b/f/u/a4;.c:(J)V` @kind virtual;
  #L328a32.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v0 @kind this, `float` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(F)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328a44.  call temp:= `floatToRawIntBits`(v1) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L328a4a.  v1:= temp;
  #L328a4c.  call `d`(v0, v1) @signature `Le/e/a/b/f/u/a4;.d:(I)V` @kind virtual;
  #L328a52.  return @kind void;
}
procedure `void` `a`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.a:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v0 @kind this, `int` v1 , `double` v2 ) @signature `Le/e/a/b/f/u/a4;.a:(ID)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328a64.  call temp:= `doubleToRawLongBits`(v2) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L328a6a.  v2:= temp @kind wide;
  #L328a6c.  call `c`(v0, v1, v2) @signature `Le/e/a/b/f/u/a4;.c:(IJ)V` @kind virtual;
  #L328a72.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v0 @kind this, `int` v1 , `float` v2 ) @signature `Le/e/a/b/f/u/a4;.a:(IF)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328a84.  call temp:= `floatToRawIntBits`(v2) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L328a8a.  v2:= temp;
  #L328a8c.  call `e`(v0, v1, v2) @signature `Le/e/a/b/f/u/a4;.e:(II)V` @kind virtual;
  #L328a92.  return @kind void;
}
procedure `void` `a`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.u.b6` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(ILe/e/a/b/f/u/b6;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.u.b6` v1 @kind object, `e.e.a.b.f.u.s6` v2 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(ILe/e/a/b/f/u/b6;Le/e/a/b/f/u/s6;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.u.l3` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(ILe/e/a/b/f/u/l3;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `boolean` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(IZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.a:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v6 @kind this, `java.lang.String` v7 @kind object, `e.e.a.b.f.u.v7` v8 @kind object) @signature `Le/e/a/b/f/u/a4;.a:(Ljava/lang/String;Le/e/a/b/f/u/v7;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L328aa4.  v0:= `@@e.e.a.b.f.u.a4.b` @type ^`java.util.logging.Logger` @kind object;
  #L328aa8.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L328aac.  v2:= "com.google.protobuf.CodedOutputStream" @kind object;
  #L328ab0.  v3:= "inefficientWriteStringNoTag" @kind object;
  #L328ab4.  v4:= "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!" @kind object;
  #L328ab8.  v5:= v8 @kind object;
  #L328aba.  call `logp`(v0, v1, v2, v3, v4, v5) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L328ac0.  v8:= `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` @kind object;
  #L328ac4.  call temp:= `getBytes`(v7, v8) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L328aca.  v7:= temp @kind object;
  #L328acc.  v8:= length @variable v7;
  #L328ace.  call `b`(v6, v8) @signature `Le/e/a/b/f/u/a4;.b:(I)V` @kind virtual;
  #L328ad4.  v8:= 0I;
  #L328ad6.  v0:= length @variable v7;
  #L328ad8.  call `a`(v6, v7, v8, v0) @signature `Le/e/a/b/f/u/i3;.a:([BII)V` @kind virtual;
  #L328ade.  return @kind void;
  #L328ae0.  v7:= Exception @type ^`e.e.a.b.f.u.a4$b` @kind object;
  #L328ae2.  throw v7;
  #L328ae4.  v7:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L328ae6.  v8:= new `e.e.a.b.f.u.a4$b`;
  #L328aea.  call `<init>`(v8, v7) @signature `Le/e/a/b/f/u/a4$b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L328af0.  throw v8;
  catch `java.lang.IndexOutOfBoundsException` @[L328acc..L328ade] goto L328ae4;
  catch `e.e.a.b.f.u.a4$b` @[L328acc..L328ade] goto L328ae0;
}
procedure `void` `a`(`e.e.a.b.f.u.a4` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/u/a4;.a:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328a08.  v1:= (`byte`) v1 @kind i2b;
  #L328a0a.  call `a`(v0, v1) @signature `Le/e/a/b/f/u/a4;.a:(B)V` @kind virtual;
  #L328a10.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.u.a4` v2 @kind this) @signature `Le/e/a/b/f/u/a4;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L328b14.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:()I` @kind virtual;
  #L328b1a.  v0:= temp;
  #L328b1c.  if v0 != 0 then goto L328b22;
  #L328b20.  return @kind void;
  #L328b22.  v0:= new `java.lang.IllegalStateException`;
  #L328b26.  v1:= "Did not write as much data as expected." @kind object;
  #L328b2a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L328b30.  throw v0;
}
procedure `void` `b`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.b:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.b:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`e.e.a.b.f.u.a4` v0 @kind this, `int` v1 , `long` v2 ) @signature `Le/e/a/b/f/u/a4;.b:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328b44.  call temp:= `i`(v2) @signature `Le/e/a/b/f/u/a4;.i:(J)J` @kind static;
  #L328b4a.  v2:= temp @kind wide;
  #L328b4c.  call `a`(v0, v1, v2) @signature `Le/e/a/b/f/u/a4;.a:(IJ)V` @kind virtual;
  #L328b52.  return @kind void;
}
procedure `void` `b`(`int` v0 , `e.e.a.b.f.u.l3` v1 @kind object) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/l3;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`e.e.a.b.f.u.a4` v0 @kind this, `long` v1 ) @signature `Le/e/a/b/f/u/a4;.b:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328b64.  call temp:= `i`(v1) @signature `Le/e/a/b/f/u/a4;.i:(J)J` @kind static;
  #L328b6a.  v1:= temp @kind wide;
  #L328b6c.  call `a`(v0, v1) @signature `Le/e/a/b/f/u/a4;.a:(J)V` @kind virtual;
  #L328b72.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.u.a4` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/u/a4;.c:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328b84.  call temp:= `m`(v1) @signature `Le/e/a/b/f/u/a4;.m:(I)I` @kind static;
  #L328b8a.  v1:= temp;
  #L328b8c.  call `b`(v0, v1) @signature `Le/e/a/b/f/u/a4;.b:(I)V` @kind virtual;
  #L328b92.  return @kind void;
}
procedure `void` `c`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.c:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/u/a4;.c:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`long` v0 ) @signature `Le/e/a/b/f/u/a4;.c:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`int` v0 ) @signature `Le/e/a/b/f/u/a4;.d:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`e.e.a.b.f.u.a4` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/u/a4;.d:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L328ba4.  call temp:= `m`(v2) @signature `Le/e/a/b/f/u/a4;.m:(I)I` @kind static;
  #L328baa.  v2:= temp;
  #L328bac.  call `c`(v0, v1, v2) @signature `Le/e/a/b/f/u/a4;.c:(II)V` @kind virtual;
  #L328bb2.  return @kind void;
}
procedure `void` `e`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/a4;.e:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
