record `e.e.a.b.f.o.ra` @kind class @AccessFlag FINAL extends `e.e.a.b.f.o.pa` @kind class, `java.util.ListIterator` @kind interface {
  `e.e.a.b.f.o.sa` `e.e.a.b.f.o.ra.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.o.ra` v0 @kind this, `e.e.a.b.f.o.sa` v1 @kind object) @signature `Le/e/a/b/f/o/ra;.<init>:(Le/e/a/b/f/o/sa;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cfbec.  v0.`e.e.a.b.f.o.ra.e` @type ^`e.e.a.b.f.o.sa` := v1 @kind object;
  #L2cfbf0.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/pa;.<init>:(Le/e/a/b/f/o/qa;)V` @kind direct;
  #L2cfbf6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.o.ra` v1 @kind this, `e.e.a.b.f.o.sa` v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/o/ra;.<init>:(Le/e/a/b/f/o/sa;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cfc08.  v1.`e.e.a.b.f.o.ra.e` @type ^`e.e.a.b.f.o.sa` := v2 @kind object;
  #L2cfc0c.  v0:= v2.`e.e.a.b.f.o.qa.c` @type ^`java.util.Collection` @kind object;
  #L2cfc10.  v0:= (`java.util.List`) v0 @kind object;
  #L2cfc14.  call temp:= `listIterator`(v0, v3) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L2cfc1a.  v3:= temp @kind object;
  #L2cfc1c.  call `<init>`(v1, v2, v3) @signature `Le/e/a/b/f/o/pa;.<init>:(Le/e/a/b/f/o/qa;Ljava/util/Iterator;)V` @kind direct;
  #L2cfc22.  return @kind void;
}
procedure `void` `add`(`e.e.a.b.f.o.ra` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/o/ra;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cfc34.  v0:= v2.`e.e.a.b.f.o.ra.e` @type ^`e.e.a.b.f.o.sa` @kind object;
  #L2cfc38.  call temp:= `isEmpty`(v0) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L2cfc3e.  v0:= temp;
  #L2cfc40.  call `zza`(v2) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfc46.  v1:= v2.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfc4a.  v1:= (`java.util.ListIterator`) v1 @kind object;
  #L2cfc4e.  call `add`(v1, v3) @signature `Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V` @kind interface;
  #L2cfc54.  v3:= v2.`e.e.a.b.f.o.ra.e` @type ^`e.e.a.b.f.o.sa` @kind object;
  #L2cfc58.  v3:= v3.`e.e.a.b.f.o.sa.g` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2cfc5c.  call temp:= `c`(v3) @signature `Le/e/a/b/f/o/ta;.c:(Le/e/a/b/f/o/ta;)I` @kind static;
  #L2cfc62.  if v0 == 0 then goto L2cfc70;
  #L2cfc66.  v3:= v2.`e.e.a.b.f.o.ra.e` @type ^`e.e.a.b.f.o.sa` @kind object;
  #L2cfc6a.  call `d`(v3) @signature `Le/e/a/b/f/o/qa;.d:()V` @kind virtual;
  #L2cfc70.  return @kind void;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.o.ra` v1 @kind this) @signature `Le/e/a/b/f/o/ra;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfb4c.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfb52.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfb56.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L2cfb5a.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L2cfb60.  v0:= temp;
  #L2cfb62.  return v0;
}
procedure `int` `nextIndex`(`e.e.a.b.f.o.ra` v1 @kind this) @signature `Le/e/a/b/f/o/ra;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfb74.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfb7a.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfb7e.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L2cfb82.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L2cfb88.  v0:= temp;
  #L2cfb8a.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.o.ra` v1 @kind this) @signature `Le/e/a/b/f/o/ra;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfbc4.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfbca.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfbce.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L2cfbd2.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L2cfbd8.  v0:= temp @kind object;
  #L2cfbda.  return v0 @kind object;
}
procedure `int` `previousIndex`(`e.e.a.b.f.o.ra` v1 @kind this) @signature `Le/e/a/b/f/o/ra;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfb9c.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfba2.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfba6.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L2cfbaa.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L2cfbb0.  v0:= temp;
  #L2cfbb2.  return v0;
}
procedure `void` `set`(`e.e.a.b.f.o.ra` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/ra;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfc84.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cfc8a.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cfc8e.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L2cfc92.  call `set`(v0, v2) @signature `Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V` @kind interface;
  #L2cfc98.  return @kind void;
}
