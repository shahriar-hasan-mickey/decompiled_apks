record `e.e.a.b.f.q.u1` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface, `java.lang.Comparable` @kind interface {
  `java.lang.Comparable` `e.e.a.b.f.q.u1.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.b.f.q.u1.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.q.x1` `e.e.a.b.f.q.u1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.u1` v0 @kind this, `e.e.a.b.f.q.x1` v1 @kind object, `java.lang.Comparable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/u1;.<init>:(Le/e/a/b/f/q/x1;Ljava/lang/Comparable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dc420.  v0.`e.e.a.b.f.q.u1.d` @type ^`e.e.a.b.f.q.x1` := v1 @kind object;
  #L2dc424.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dc42a.  v0.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` := v2 @kind object;
  #L2dc42e.  v0.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` := v3 @kind object;
  #L2dc432.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/u1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2dc2ac.  if v0 != 0 then goto L2dc2bc;
  #L2dc2b0.  if v1 == 0 then goto L2dc2b8;
  #L2dc2b4.  v0:= 0I;
  #L2dc2b6.  goto L2dc2c4;
  #L2dc2b8.  v0:= 1I;
  #L2dc2ba.  return v0;
  #L2dc2bc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2dc2c2.  v0:= temp;
  #L2dc2c4.  return v0;
}
procedure `int` `compareTo`(`e.e.a.b.f.q.u1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/u1;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2dc2d8.  v2:= (`e.e.a.b.f.q.u1`) v2 @kind object;
  #L2dc2dc.  v0:= v1.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc2e0.  v2:= v2.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc2e4.  call temp:= `compareTo`(v0, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L2dc2ea.  v2:= temp;
  #L2dc2ec.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.u1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/u1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dc250.  v0:= 1I;
  #L2dc252.  if v5 != v4 then goto L2dc258;
  #L2dc256.  return v0;
  #L2dc258.  v1:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L2dc25c.  v2:= 0I;
  #L2dc25e.  if v1 != 0 then goto L2dc264;
  #L2dc262.  return v2;
  #L2dc264.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L2dc268.  v1:= v4.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc26c.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2dc272.  v3:= temp @kind object;
  #L2dc274.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/q/u1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2dc27a.  v1:= temp;
  #L2dc27c.  if v1 == 0 then goto L2dc29a;
  #L2dc280.  v1:= v4.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` @kind object;
  #L2dc284.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2dc28a.  v5:= temp @kind object;
  #L2dc28c.  call temp:= `a`(v1, v5) @signature `Le/e/a/b/f/q/u1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2dc292.  v5:= temp;
  #L2dc294.  if v5 == 0 then goto L2dc29a;
  #L2dc298.  return v0;
  #L2dc29a.  return v2;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.q.u1` v1 @kind this) @signature `Le/e/a/b/f/q/u1;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2dc354.  v0:= v1.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc358.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.q.u1` v1 @kind this) @signature `Le/e/a/b/f/q/u1;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dc36c.  v0:= v1.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` @kind object;
  #L2dc370.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.u1` v3 @kind this) @signature `Le/e/a/b/f/q/u1;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2dc300.  v0:= v3.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc304.  v1:= 0I;
  #L2dc306.  if v0 != 0 then goto L2dc30e;
  #L2dc30a.  v0:= 0I;
  #L2dc30c.  goto L2dc316;
  #L2dc30e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2dc314.  v0:= temp;
  #L2dc316.  v2:= v3.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` @kind object;
  #L2dc31a.  if v2 != 0 then goto L2dc320;
  #L2dc31e.  goto L2dc328;
  #L2dc320.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2dc326.  v1:= temp;
  #L2dc328.  v0:= v0 ^~ v1 @kind int;
  #L2dc32a.  return v0;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.q.u1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/u1;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dc384.  v0:= v1.`e.e.a.b.f.q.u1.d` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc388.  call `a`(v0) @signature `Le/e/a/b/f/q/x1;.a:(Le/e/a/b/f/q/x1;)V` @kind static;
  #L2dc38e.  v0:= v1.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` @kind object;
  #L2dc392.  v1.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` := v2 @kind object;
  #L2dc396.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.q.u1` v5 @kind this) @signature `Le/e/a/b/f/q/u1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dc3a8.  v0:= v5.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc3ac.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dc3b2.  v0:= temp @kind object;
  #L2dc3b4.  v1:= v5.`e.e.a.b.f.q.u1.c` @type ^`java.lang.Object` @kind object;
  #L2dc3b8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dc3be.  v1:= temp @kind object;
  #L2dc3c0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dc3c6.  v2:= temp @kind object;
  #L2dc3c8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2dc3ce.  v2:= temp;
  #L2dc3d0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dc3d6.  v3:= temp @kind object;
  #L2dc3d8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2dc3de.  v3:= temp;
  #L2dc3e0.  v4:= new `java.lang.StringBuilder`;
  #L2dc3e4.  v2:= v2 + 1;
  #L2dc3e8.  v2:= v2 + v3 @kind int;
  #L2dc3ea.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2dc3f0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dc3f6.  v0:= "=" @kind object;
  #L2dc3fa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dc400.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dc406.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dc40c.  v0:= temp @kind object;
  #L2dc40e.  return v0 @kind object;
}
procedure `java.lang.Comparable` `zza`(`e.e.a.b.f.q.u1` v1 @kind this) @signature `Le/e/a/b/f/q/u1;.zza:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dc33c.  v0:= v1.`e.e.a.b.f.q.u1.b` @type ^`java.lang.Comparable` @kind object;
  #L2dc340.  return v0 @kind object;
}
