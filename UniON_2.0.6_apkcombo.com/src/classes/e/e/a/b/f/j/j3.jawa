record `e.e.a.b.f.j.j3` @kind class @AccessFlag FINAL {
}
global `e.e.a.b.f.j.h3` `@@e.e.a.b.f.j.j3.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.j.h3` `@@e.e.a.b.f.j.j3.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/j/j3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L224e18.  v0:= new `e.e.a.b.f.j.k3`;
  #L224e1c.  call `<init>`(v0) @signature `Le/e/a/b/f/j/k3;.<init>:()V` @kind direct;
  #L224e22.  `@@e.e.a.b.f.j.j3.a` @type ^`e.e.a.b.f.j.h3` := v0 @kind object;
  #L224e26.  call temp:= `c`() @signature `Le/e/a/b/f/j/j3;.c:()Le/e/a/b/f/j/h3;` @kind static;
  #L224e2c.  v0:= temp @kind object;
  #L224e2e.  `@@e.e.a.b.f.j.j3.b` @type ^`e.e.a.b.f.j.h3` := v0 @kind object;
  #L224e32.  return @kind void;
}
procedure `e.e.a.b.f.j.h3` `a`() @signature `Le/e/a/b/f/j/j3;.a:()Le/e/a/b/f/j/h3;` @AccessFlag STATIC {
    temp;
    v0;

  #L224d84.  v0:= `@@e.e.a.b.f.j.j3.a` @type ^`e.e.a.b.f.j.h3` @kind object;
  #L224d88.  return v0 @kind object;
}
procedure `e.e.a.b.f.j.h3` `b`() @signature `Le/e/a/b/f/j/j3;.b:()Le/e/a/b/f/j/h3;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L224d9c.  v0:= `@@e.e.a.b.f.j.j3.b` @type ^`e.e.a.b.f.j.h3` @kind object;
  #L224da0.  if v0 == 0 then goto L224da6;
  #L224da4.  return v0 @kind object;
  #L224da6.  v0:= new `java.lang.IllegalStateException`;
  #L224daa.  v1:= "Protobuf runtime is not correctly loaded." @kind object;
  #L224dae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L224db4.  throw v0;
}
procedure `e.e.a.b.f.j.h3` `c`() @signature `Le/e/a/b/f/j/j3;.c:()Le/e/a/b/f/j/h3;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L224dc8.  v0:= "com.google.protobuf.ExtensionSchemaFull" @kind object;
  #L224dcc.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L224dd2.  v0:= temp @kind object;
  #L224dd4.  v1:= 0I;
  #L224dd6.  v2:= new `java.lang.Class`[v1];
  #L224dda.  call temp:= `getDeclaredConstructor`(v0, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L224de0.  v0:= temp @kind object;
  #L224de2.  v1:= new `java.lang.Object`[v1];
  #L224de6.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L224dec.  v0:= temp @kind object;
  #L224dee.  v0:= (`e.e.a.b.f.j.h3`) v0 @kind object;
  #L224df2.  return v0 @kind object;
  #L224df4.  v0:= 0I;
  #L224df6.  return v0 @kind object;
  catch `java.lang.Exception` @[L224dcc..L224df2] goto L224df4;
}
