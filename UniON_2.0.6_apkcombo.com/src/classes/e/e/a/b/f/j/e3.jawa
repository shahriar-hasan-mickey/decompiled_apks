record `e.e.a.b.f.j.e3` @kind class @AccessFlag FINAL extends `e.e.a.b.f.j.b3` @kind class {
  `int` `e.e.a.b.f.j.e3.a` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.j.e3.b` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.j.e3.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.j.e3.d` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.j.e3.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.j.e3` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 ) @signature `Le/e/a/b/f/j/e3;.<init>:([BIIZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L223d80.  v1:= 0I;
  #L223d82.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/b3;.<init>:(Le/e/a/b/f/j/a3;)V` @kind direct;
  #L223d88.  v1:= 2147483647I;
  #L223d8e.  v0.`e.e.a.b.f.j.e3.e` @type ^`int` := v1;
  #L223d92.  v3:= v3 + v2 @kind int;
  #L223d94.  v0.`e.e.a.b.f.j.e3.a` @type ^`int` := v3;
  #L223d98.  v0.`e.e.a.b.f.j.e3.c` @type ^`int` := v2;
  #L223d9c.  v1:= v0.`e.e.a.b.f.j.e3.c` @type ^`int`;
  #L223da0.  v0.`e.e.a.b.f.j.e3.d` @type ^`int` := v1;
  #L223da4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.e3` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `e.e.a.b.f.j.a3` v5 @kind object) @signature `Le/e/a/b/f/j/e3;.<init>:([BIIZLe/e/a/b/f/j/a3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L223db8.  v2:= 0I;
  #L223dba.  call `<init>`(v0, v1, v2, v3, v2) @signature `Le/e/a/b/f/j/e3;.<init>:([BIIZ)V` @kind direct;
  #L223dc0.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.j.e3` v2 @kind this) @signature `Le/e/a/b/f/j/e3;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L223cdc.  v0:= v2.`e.e.a.b.f.j.e3.c` @type ^`int`;
  #L223ce0.  v1:= v2.`e.e.a.b.f.j.e3.d` @type ^`int`;
  #L223ce4.  v0:= v0 - v1 @kind int;
  #L223ce6.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.j.e3` v3 @kind this, `int` v4 ) @signature `Le/e/a/b/f/j/e3;.a:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L223cf8.  if v4 < 0 then goto L223d5e;
  #L223cfc.  call temp:= `a`(v3) @signature `Le/e/a/b/f/j/e3;.a:()I` @kind virtual;
  #L223d02.  v0:= temp;
  #L223d04.  v4:= v4 + v0 @kind int;
  #L223d06.  v0:= v3.`e.e.a.b.f.j.e3.e` @type ^`int`;
  #L223d0a.  if v4 > v0 then goto L223d4e;
  #L223d0e.  v3.`e.e.a.b.f.j.e3.e` @type ^`int` := v4;
  #L223d12.  v4:= v3.`e.e.a.b.f.j.e3.a` @type ^`int`;
  #L223d16.  v1:= v3.`e.e.a.b.f.j.e3.b` @type ^`int`;
  #L223d1a.  v4:= v4 + v1 @kind int;
  #L223d1c.  v3.`e.e.a.b.f.j.e3.a` @type ^`int` := v4;
  #L223d20.  v4:= v3.`e.e.a.b.f.j.e3.a` @type ^`int`;
  #L223d24.  v1:= v3.`e.e.a.b.f.j.e3.d` @type ^`int`;
  #L223d28.  v1:= v4 - v1 @kind int;
  #L223d2c.  v2:= v3.`e.e.a.b.f.j.e3.e` @type ^`int`;
  #L223d30.  if v1 <= v2 then goto L223d46;
  #L223d34.  v1:= v1 - v2 @kind int;
  #L223d36.  v3.`e.e.a.b.f.j.e3.b` @type ^`int` := v1;
  #L223d3a.  v1:= v3.`e.e.a.b.f.j.e3.b` @type ^`int`;
  #L223d3e.  v4:= v4 - v1 @kind int;
  #L223d40.  v3.`e.e.a.b.f.j.e3.a` @type ^`int` := v4;
  #L223d44.  goto L223d4c;
  #L223d46.  v4:= 0I;
  #L223d48.  v3.`e.e.a.b.f.j.e3.b` @type ^`int` := v4;
  #L223d4c.  return v0;
  #L223d4e.  v4:= new `e.e.a.b.f.j.b4`;
  #L223d52.  v0:= "While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either that the input has been truncated or that an embedded message misreported its own length." @kind object;
  #L223d56.  call `<init>`(v4, v0) @signature `Le/e/a/b/f/j/b4;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223d5c.  throw v4;
  #L223d5e.  v4:= new `e.e.a.b.f.j.b4`;
  #L223d62.  v0:= "CodedInputStream encountered an embedded string or message which claimed to have negative size." @kind object;
  #L223d66.  call `<init>`(v4, v0) @signature `Le/e/a/b/f/j/b4;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223d6c.  throw v4;
}
