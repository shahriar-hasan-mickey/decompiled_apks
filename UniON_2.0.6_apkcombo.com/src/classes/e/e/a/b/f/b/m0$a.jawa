record `e.e.a.b.f.b.m0$a` @kind class @AccessFlag  extends `e.e.a.b.f.b.m0` @kind class {
  `byte`[] `e.e.a.b.f.b.m0$a.d` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.m0$a.e` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.m0$a.f` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.m0$a.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.m0$a` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/b/m0$a;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1fafd8.  v0:= 0I;
  #L1fafda.  call `<init>`(v3, v0) @signature `Le/e/a/b/f/b/m0;.<init>:(Le/e/a/b/f/b/n0;)V` @kind direct;
  #L1fafe0.  if v4 == 0 then goto L1fb052;
  #L1fafe4.  v0:= v5 ^| v6 @kind int;
  #L1fafe8.  v1:= length @variable v4;
  #L1fafea.  v2:= v5 + v6 @kind int;
  #L1fafee.  v1:= v1 - v2 @kind int;
  #L1faff0.  v0:= v0 ^| v1 @kind int;
  #L1faff2.  if v0 < 0 then goto L1fb008;
  #L1faff6.  v3.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] := v4 @kind object;
  #L1faffa.  v3.`e.e.a.b.f.b.m0$a.e` @type ^`int` := v5;
  #L1faffe.  v3.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v5;
  #L1fb002.  v3.`e.e.a.b.f.b.m0$a.f` @type ^`int` := v2;
  #L1fb006.  return @kind void;
  #L1fb008.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fb00c.  v1:= 3I;
  #L1fb00e.  v1:= new `java.lang.Object`[v1];
  #L1fb012.  v2:= 0I;
  #L1fb014.  v4:= length @variable v4;
  #L1fb016.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb01c.  v4:= temp @kind object;
  #L1fb01e.  v1[v2]:= v4 @kind object;
  #L1fb022.  v4:= 1I;
  #L1fb024.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb02a.  v5:= temp @kind object;
  #L1fb02c.  v1[v4]:= v5 @kind object;
  #L1fb030.  v4:= 2I;
  #L1fb032.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb038.  v5:= temp @kind object;
  #L1fb03a.  v1[v4]:= v5 @kind object;
  #L1fb03e.  v4:= "Array range is invalid. Buffer.length=%d, offset=%d, length=%d" @kind object;
  #L1fb042.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb048.  v4:= temp @kind object;
  #L1fb04a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fb050.  throw v0;
  #L1fb052.  v4:= new `java.lang.NullPointerException`;
  #L1fb056.  v5:= "buffer" @kind object;
  #L1fb05a.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fb060.  throw v4;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v0 @kind this) @signature `Le/e/a/b/f/b/m0$a;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L1fb074.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v4 @kind this, `byte` v5 ) @signature `Le/e/a/b/f/b/m0$a;.a:(B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb114.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb118.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb11c.  v2:= v1 + 1;
  #L1fb120.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb124.  v0[v1]:= v5 @kind byte;
  #L1fb128.  return @kind void;
  #L1fb12a.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb12c.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fb130.  v1:= 3I;
  #L1fb132.  v1:= new `java.lang.Object`[v1];
  #L1fb136.  v2:= 0I;
  #L1fb138.  v3:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb13c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb142.  v3:= temp @kind object;
  #L1fb144.  v1[v2]:= v3 @kind object;
  #L1fb148.  v2:= v4.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb14c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb152.  v2:= temp @kind object;
  #L1fb154.  v3:= 1I;
  #L1fb156.  v1[v3]:= v2 @kind object;
  #L1fb15a.  v2:= 2I;
  #L1fb15c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb162.  v3:= temp @kind object;
  #L1fb164.  v1[v2]:= v3 @kind object;
  #L1fb168.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb16c.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb172.  v1:= temp @kind object;
  #L1fb174.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb17a.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb114..L1fb128] goto L1fb12a;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/m0$a;.a:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fb768.  if v3 < 0 then goto L1fb774;
  #L1fb76c.  call `b`(v2, v3) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb772.  return @kind void;
  #L1fb774.  v0:= (`long`) v3 @kind i2l;
  #L1fb776.  call `a`(v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(J)V` @kind virtual;
  #L1fb77c.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fb35c.  v1:= v1 ^< 3;
  #L1fb360.  v1:= v1 ^| v2 @kind int;
  #L1fb362.  call `b`(v0, v1) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb368.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$a;.a:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb288.  v0:= 0I;
  #L1fb28a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb290.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.a:(J)V` @kind virtual;
  #L1fb296.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `e.e.a.b.f.b.a0` v3 @kind object) @signature `Le/e/a/b/f/b/m0$a;.a:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb1dc.  v0:= 2I;
  #L1fb1de.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb1e4.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.b:(Le/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fb1ea.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `e.e.a.b.f.b.k2` v3 @kind object) @signature `Le/e/a/b/f/b/m0$a;.a:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb1fc.  v0:= 2I;
  #L1fb1fe.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb204.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.c:(Le/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fb20a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v2 @kind this, `int` v3 , `e.e.a.b.f.b.k2` v4 @kind object, `e.e.a.b.f.b.b3` v5 @kind object) @signature `Le/e/a/b/f/b/m0$a;.a:(ILe/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L1fb21c.  v0:= 2I;
  #L1fb21e.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb224.  v3:= v4 @kind object;
  #L1fb226.  v3:= (`e.e.a.b.f.b.q`) v3 @kind object;
  #L1fb22a.  call temp:= `c`(v3) @signature `Le/e/a/b/f/b/q;.c:()I` @kind virtual;
  #L1fb230.  v0:= temp;
  #L1fb232.  v1:= -1I;
  #L1fb234.  if v0 != v1 then goto L1fb246;
  #L1fb238.  call temp:= `d`(v5, v3) @signature `Le/e/a/b/f/b/b3;.d:(Ljava/lang/Object;)I` @kind interface;
  #L1fb23e.  v0:= temp;
  #L1fb240.  call `a`(v3, v0) @signature `Le/e/a/b/f/b/q;.a:(I)V` @kind virtual;
  #L1fb246.  call `b`(v2, v0) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb24c.  v3:= v2.`e.e.a.b.f.b.m0.a` @type ^`e.e.a.b.f.b.o0` @kind object;
  #L1fb250.  call `a`(v5, v4, v3) @signature `Le/e/a/b/f/b/b3;.a:(Ljava/lang/Object;Le/e/a/b/f/b/o4;)V` @kind interface;
  #L1fb256.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Le/e/a/b/f/b/m0$a;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb268.  v0:= 2I;
  #L1fb26a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb270.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.b:(Ljava/lang/String;)V` @kind virtual;
  #L1fb276.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Le/e/a/b/f/b/m0$a;.a:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb2d0.  v0:= 0I;
  #L1fb2d2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb2d8.  v2:= (`byte`) v3 @kind i2b;
  #L1fb2da.  call `a`(v1, v2) @signature `Le/e/a/b/f/b/m0$a;.a:(B)V` @kind virtual;
  #L1fb2e0.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v9 @kind this, `long` v10 ) @signature `Le/e/a/b/f/b/m0$a;.a:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1fb37c.  call temp:= `c`() @signature `Le/e/a/b/f/b/m0;.c:()Z` @kind static;
  #L1fb382.  v0:= temp;
  #L1fb384.  v1:= 7I;
  #L1fb386.  v2:= 0L;
  #L1fb38a.  v4:= -128L;
  #L1fb38e.  if v0 == 0 then goto L1fb3f4;
  #L1fb392.  call temp:= `b`(v9) @signature `Le/e/a/b/f/b/m0$a;.b:()I` @kind virtual;
  #L1fb398.  v0:= temp;
  #L1fb39a.  v6:= 10I;
  #L1fb39e.  if v0 < v6 then goto L1fb3f4;
  #L1fb3a2.  v6:= v10 ^& v4 @kind long;
  #L1fb3a6.  v0:= lcmp(v6, v2);
  #L1fb3aa.  if v0 != 0 then goto L1fb3cc;
  #L1fb3ae.  v0:= v9.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb3b2.  v1:= v9.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb3b6.  v2:= v1 + 1;
  #L1fb3ba.  v9.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb3be.  v1:= (`long`) v1 @kind i2l;
  #L1fb3c0.  v11:= (`int`) v10 @kind l2i;
  #L1fb3c2.  v10:= (`byte`) v11 @kind i2b;
  #L1fb3c4.  call `a`(v0, v1, v10) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L1fb3ca.  return @kind void;
  #L1fb3cc.  v0:= v9.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb3d0.  v6:= v9.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb3d4.  v7:= v6 + 1;
  #L1fb3d8.  v9.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v7;
  #L1fb3dc.  v6:= (`long`) v6 @kind i2l;
  #L1fb3de.  v8:= (`int`) v10 @kind l2i;
  #L1fb3e0.  v8:= v8 ^& 127;
  #L1fb3e4.  v8:= v8 ^| 128;
  #L1fb3e8.  v8:= (`byte`) v8 @kind i2b;
  #L1fb3ea.  call `a`(v0, v6, v8) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L1fb3f0.  v10:= v10 ^>> v1 @kind long;
  #L1fb3f2.  goto L1fb3a2;
  #L1fb3f4.  v6:= v10 ^& v4 @kind long;
  #L1fb3f8.  v0:= lcmp(v6, v2);
  #L1fb3fc.  if v0 != 0 then goto L1fb41a;
  #L1fb400.  v0:= v9.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb404.  v1:= v9.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb408.  v2:= v1 + 1;
  #L1fb40c.  v9.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb410.  v11:= (`int`) v10 @kind l2i;
  #L1fb412.  v10:= (`byte`) v11 @kind i2b;
  #L1fb414.  v0[v1]:= v10 @kind byte;
  #L1fb418.  return @kind void;
  #L1fb41a.  v0:= v9.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb41e.  v6:= v9.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb422.  v7:= v6 + 1;
  #L1fb426.  v9.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v7;
  #L1fb42a.  v7:= (`int`) v10 @kind l2i;
  #L1fb42c.  v7:= v7 ^& 127;
  #L1fb430.  v7:= v7 ^| 128;
  #L1fb434.  v7:= (`byte`) v7 @kind i2b;
  #L1fb436.  v0[v6]:= v7 @kind byte;
  #L1fb43a.  v10:= v10 ^>> v1 @kind long;
  #L1fb43c.  goto L1fb3f4;
  #L1fb43e.  v10:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb440.  v11:= new `e.e.a.b.f.b.m0$c`;
  #L1fb444.  v0:= 3I;
  #L1fb446.  v0:= new `java.lang.Object`[v0];
  #L1fb44a.  v1:= 0I;
  #L1fb44c.  v2:= v9.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb450.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb456.  v2:= temp @kind object;
  #L1fb458.  v0[v1]:= v2 @kind object;
  #L1fb45c.  v1:= v9.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb460.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb466.  v1:= temp @kind object;
  #L1fb468.  v2:= 1I;
  #L1fb46a.  v0[v2]:= v1 @kind object;
  #L1fb46e.  v1:= 2I;
  #L1fb470.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb476.  v2:= temp @kind object;
  #L1fb478.  v0[v1]:= v2 @kind object;
  #L1fb47c.  v1:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb480.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb486.  v0:= temp @kind object;
  #L1fb488.  call `<init>`(v11, v0, v10) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb48e.  throw v11;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb400..L1fb43a] goto L1fb43e;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$a` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$a;.a:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fb19c.  call `b`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/m0$a;.b:([BII)V` @kind virtual;
  #L1fb1a2.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.b.m0$a` v2 @kind this) @signature `Le/e/a/b/f/b/m0$a;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fafa0.  v0:= v2.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fafa4.  v1:= v2.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fafa8.  v0:= v0 - v1 @kind int;
  #L1fafaa.  return v0;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb790.  call temp:= `c`() @signature `Le/e/a/b/f/b/m0;.c:()Z` @kind static;
  #L1fb796.  v0:= temp;
  #L1fb798.  if v0 == 0 then goto L1fb7f8;
  #L1fb79c.  call temp:= `b`(v4) @signature `Le/e/a/b/f/b/m0$a;.b:()I` @kind virtual;
  #L1fb7a2.  v0:= temp;
  #L1fb7a4.  v1:= 10I;
  #L1fb7a8.  if v0 < v1 then goto L1fb7f8;
  #L1fb7ac.  v0:= v5 ^& -128;
  #L1fb7b0.  if v0 != 0 then goto L1fb7d0;
  #L1fb7b4.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb7b8.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb7bc.  v2:= v1 + 1;
  #L1fb7c0.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb7c4.  v1:= (`long`) v1 @kind i2l;
  #L1fb7c6.  v5:= (`byte`) v5 @kind i2b;
  #L1fb7c8.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L1fb7ce.  return @kind void;
  #L1fb7d0.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb7d4.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb7d8.  v2:= v1 + 1;
  #L1fb7dc.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb7e0.  v1:= (`long`) v1 @kind i2l;
  #L1fb7e2.  v3:= v5 ^& 127;
  #L1fb7e6.  v3:= v3 ^| 128;
  #L1fb7ea.  v3:= (`byte`) v3 @kind i2b;
  #L1fb7ec.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @kind static;
  #L1fb7f2.  v5:= v5 ^>> 7;
  #L1fb7f6.  goto L1fb7ac;
  #L1fb7f8.  v0:= v5 ^& -128;
  #L1fb7fc.  if v0 != 0 then goto L1fb818;
  #L1fb800.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb804.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb808.  v2:= v1 + 1;
  #L1fb80c.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb810.  v5:= (`byte`) v5 @kind i2b;
  #L1fb812.  v0[v1]:= v5 @kind byte;
  #L1fb816.  return @kind void;
  #L1fb818.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb81c.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb820.  v2:= v1 + 1;
  #L1fb824.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb828.  v2:= v5 ^& 127;
  #L1fb82c.  v2:= v2 ^| 128;
  #L1fb830.  v2:= (`byte`) v2 @kind i2b;
  #L1fb832.  v0[v1]:= v2 @kind byte;
  #L1fb836.  v5:= v5 ^>> 7;
  #L1fb83a.  goto L1fb7f8;
  #L1fb83c.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb83e.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fb842.  v1:= 3I;
  #L1fb844.  v1:= new `java.lang.Object`[v1];
  #L1fb848.  v2:= 0I;
  #L1fb84a.  v3:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb84e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb854.  v3:= temp @kind object;
  #L1fb856.  v1[v2]:= v3 @kind object;
  #L1fb85a.  v2:= v4.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb85e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb864.  v2:= temp @kind object;
  #L1fb866.  v3:= 1I;
  #L1fb868.  v1[v3]:= v2 @kind object;
  #L1fb86c.  v2:= 2I;
  #L1fb86e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb874.  v3:= temp @kind object;
  #L1fb876.  v1[v2]:= v3 @kind object;
  #L1fb87a.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb87e.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb884.  v1:= temp @kind object;
  #L1fb886.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb88c.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb800..L1fb836] goto L1fb83c;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$a;.b:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb4b0.  v0:= 0I;
  #L1fb4b2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb4b8.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.a:(I)V` @kind virtual;
  #L1fb4be.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v3 @kind this, `int` v4 , `e.e.a.b.f.b.a0` v5 @kind object) @signature `Le/e/a/b/f/b/m0$a;.b:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fb2f4.  v0:= 3I;
  #L1fb2f6.  v1:= 1I;
  #L1fb2f8.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb2fe.  v2:= 2I;
  #L1fb300.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$a;.c:(II)V` @kind virtual;
  #L1fb306.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$a;.a:(ILe/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fb30c.  v4:= 4I;
  #L1fb30e.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb314.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v3 @kind this, `int` v4 , `e.e.a.b.f.b.k2` v5 @kind object) @signature `Le/e/a/b/f/b/m0$a;.b:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fb328.  v0:= 3I;
  #L1fb32a.  v1:= 1I;
  #L1fb32c.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb332.  v2:= 2I;
  #L1fb334.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$a;.c:(II)V` @kind virtual;
  #L1fb33a.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$a;.a:(ILe/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fb340.  v4:= 4I;
  #L1fb342.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb348.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v1 @kind this, `e.e.a.b.f.b.a0` v2 @kind object) @signature `Le/e/a/b/f/b/m0$a;.b:(Le/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb1b4.  call temp:= `size`(v2) @signature `Le/e/a/b/f/b/a0;.size:()I` @kind virtual;
  #L1fb1ba.  v0:= temp;
  #L1fb1bc.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb1c2.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/a0;.a:(Le/e/a/b/f/b/z;)V` @kind virtual;
  #L1fb1c8.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Le/e/a/b/f/b/m0$a;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fb69c.  v0:= v5.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb6a0.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fb6a6.  v1:= temp;
  #L1fb6a8.  v1:= v1 * 3;
  #L1fb6ac.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fb6b2.  v1:= temp;
  #L1fb6b4.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fb6ba.  v2:= temp;
  #L1fb6bc.  call temp:= `g`(v2) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fb6c2.  v2:= temp;
  #L1fb6c4.  if v2 != v1 then goto L1fb6fe;
  #L1fb6c8.  v1:= v0 + v2 @kind int;
  #L1fb6cc.  v5.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v1;
  #L1fb6d0.  v1:= v5.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb6d4.  v3:= v5.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb6d8.  call temp:= `b`(v5) @signature `Le/e/a/b/f/b/m0$a;.b:()I` @kind virtual;
  #L1fb6de.  v4:= temp;
  #L1fb6e0.  call temp:= `a`(v6, v1, v3, v4) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;[BII)I` @kind static;
  #L1fb6e6.  v1:= temp;
  #L1fb6e8.  v5.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v0;
  #L1fb6ec.  v3:= v1 - v0 @kind int;
  #L1fb6f0.  v3:= v3 - v2 @kind int;
  #L1fb6f2.  call `b`(v5, v3) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb6f8.  v5.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v1;
  #L1fb6fc.  return @kind void;
  #L1fb6fe.  call temp:= `a`(v6) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L1fb704.  v1:= temp;
  #L1fb706.  call `b`(v5, v1) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb70c.  v1:= v5.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb710.  v2:= v5.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb714.  call temp:= `b`(v5) @signature `Le/e/a/b/f/b/m0$a;.b:()I` @kind virtual;
  #L1fb71a.  v3:= temp;
  #L1fb71c.  call temp:= `a`(v6, v1, v2, v3) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;[BII)I` @kind static;
  #L1fb722.  v1:= temp;
  #L1fb724.  v5.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v1;
  #L1fb728.  return @kind void;
  #L1fb72a.  v6:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb72c.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fb730.  call `<init>`(v0, v6) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fb736.  throw v0;
  #L1fb738.  v1:= Exception @type ^`e.e.a.b.f.b.f4` @kind object;
  #L1fb73a.  v5.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v0;
  #L1fb73e.  call `a`(v5, v6, v1) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;Le/e/a/b/f/b/f4;)V` @kind virtual;
  #L1fb744.  return @kind void;
  catch `e.e.a.b.f.b.f4` @[L1fb6a0..L1fb728] goto L1fb738;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb6a0..L1fb728] goto L1fb72a;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$a` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/b/m0$a;.b:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fb088.  v0:= v3.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb08c.  v1:= v3.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb090.  call `arraycopy`(v4, v5, v0, v1, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1fb096.  v4:= v3.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb09a.  v4:= v4 + v6 @kind int;
  #L1fb09c.  v3.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v4;
  #L1fb0a0.  return @kind void;
  #L1fb0a2.  v4:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb0a4.  v5:= new `e.e.a.b.f.b.m0$c`;
  #L1fb0a8.  v0:= 3I;
  #L1fb0aa.  v0:= new `java.lang.Object`[v0];
  #L1fb0ae.  v1:= 0I;
  #L1fb0b0.  v2:= v3.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb0b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb0ba.  v2:= temp @kind object;
  #L1fb0bc.  v0[v1]:= v2 @kind object;
  #L1fb0c0.  v1:= 1I;
  #L1fb0c2.  v2:= v3.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb0c6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb0cc.  v2:= temp @kind object;
  #L1fb0ce.  v0[v1]:= v2 @kind object;
  #L1fb0d2.  v1:= 2I;
  #L1fb0d4.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb0da.  v6:= temp @kind object;
  #L1fb0dc.  v0[v1]:= v6 @kind object;
  #L1fb0e0.  v6:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb0e4.  call temp:= `format`(v6, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb0ea.  v6:= temp @kind object;
  #L1fb0ec.  call `<init>`(v5, v6, v4) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb0f2.  throw v5;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb088..L1fb0a0] goto L1fb0a2;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$a;.c:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb4f0.  v0:= 0I;
  #L1fb4f2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb4f8.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb4fe.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$a;.c:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb4d0.  v0:= 1I;
  #L1fb4d2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb4d8.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.c:(J)V` @kind virtual;
  #L1fb4de.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$a` v4 @kind this, `long` v5 ) @signature `Le/e/a/b/f/b/m0$a;.c:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb510.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb514.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb518.  v2:= v1 + 1;
  #L1fb51c.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb520.  v2:= (`int`) v5 @kind l2i;
  #L1fb522.  v2:= (`byte`) v2 @kind i2b;
  #L1fb524.  v0[v1]:= v2 @kind byte;
  #L1fb528.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb52c.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb530.  v2:= v1 + 1;
  #L1fb534.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb538.  v2:= 8I;
  #L1fb53c.  v2:= v5 ^> v2 @kind long;
  #L1fb540.  v3:= (`int`) v2 @kind l2i;
  #L1fb542.  v2:= (`byte`) v3 @kind i2b;
  #L1fb544.  v0[v1]:= v2 @kind byte;
  #L1fb548.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb54c.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb550.  v2:= v1 + 1;
  #L1fb554.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb558.  v2:= 16I;
  #L1fb55c.  v2:= v5 ^> v2 @kind long;
  #L1fb560.  v3:= (`int`) v2 @kind l2i;
  #L1fb562.  v2:= (`byte`) v3 @kind i2b;
  #L1fb564.  v0[v1]:= v2 @kind byte;
  #L1fb568.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb56c.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb570.  v2:= v1 + 1;
  #L1fb574.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb578.  v2:= 24I;
  #L1fb57c.  v2:= v5 ^> v2 @kind long;
  #L1fb580.  v3:= (`int`) v2 @kind l2i;
  #L1fb582.  v2:= (`byte`) v3 @kind i2b;
  #L1fb584.  v0[v1]:= v2 @kind byte;
  #L1fb588.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb58c.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb590.  v2:= v1 + 1;
  #L1fb594.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb598.  v2:= 32I;
  #L1fb59c.  v2:= v5 ^> v2 @kind long;
  #L1fb5a0.  v3:= (`int`) v2 @kind l2i;
  #L1fb5a2.  v2:= (`byte`) v3 @kind i2b;
  #L1fb5a4.  v0[v1]:= v2 @kind byte;
  #L1fb5a8.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb5ac.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb5b0.  v2:= v1 + 1;
  #L1fb5b4.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb5b8.  v2:= 40I;
  #L1fb5bc.  v2:= v5 ^> v2 @kind long;
  #L1fb5c0.  v3:= (`int`) v2 @kind l2i;
  #L1fb5c2.  v2:= (`byte`) v3 @kind i2b;
  #L1fb5c4.  v0[v1]:= v2 @kind byte;
  #L1fb5c8.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb5cc.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb5d0.  v2:= v1 + 1;
  #L1fb5d4.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb5d8.  v2:= 48I;
  #L1fb5dc.  v2:= v5 ^> v2 @kind long;
  #L1fb5e0.  v3:= (`int`) v2 @kind l2i;
  #L1fb5e2.  v2:= (`byte`) v3 @kind i2b;
  #L1fb5e4.  v0[v1]:= v2 @kind byte;
  #L1fb5e8.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb5ec.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb5f0.  v2:= v1 + 1;
  #L1fb5f4.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb5f8.  v2:= 56I;
  #L1fb5fc.  v5:= v5 ^> v2 @kind long;
  #L1fb5fe.  v6:= (`int`) v5 @kind l2i;
  #L1fb600.  v5:= (`byte`) v6 @kind i2b;
  #L1fb602.  v0[v1]:= v5 @kind byte;
  #L1fb606.  return @kind void;
  #L1fb608.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb60a.  v6:= new `e.e.a.b.f.b.m0$c`;
  #L1fb60e.  v0:= 3I;
  #L1fb610.  v0:= new `java.lang.Object`[v0];
  #L1fb614.  v1:= 0I;
  #L1fb616.  v2:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb61a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb620.  v2:= temp @kind object;
  #L1fb622.  v0[v1]:= v2 @kind object;
  #L1fb626.  v1:= v4.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb62a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb630.  v1:= temp @kind object;
  #L1fb632.  v2:= 1I;
  #L1fb634.  v0[v2]:= v1 @kind object;
  #L1fb638.  v1:= 2I;
  #L1fb63a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb640.  v2:= temp @kind object;
  #L1fb642.  v0[v1]:= v2 @kind object;
  #L1fb646.  v1:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb64a.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb650.  v0:= temp @kind object;
  #L1fb652.  call `<init>`(v6, v0, v5) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb658.  throw v6;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb510..L1fb606] goto L1fb608;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$a` v1 @kind this, `e.e.a.b.f.b.k2` v2 @kind object) @signature `Le/e/a/b/f/b/m0$a;.c:(Le/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb2a8.  call temp:= `q`(v2) @signature `Le/e/a/b/f/b/k2;.q:()I` @kind interface;
  #L1fb2ae.  v0:= temp;
  #L1fb2b0.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$a;.b:(I)V` @kind virtual;
  #L1fb2b6.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/k2;.a:(Le/e/a/b/f/b/m0;)V` @kind interface;
  #L1fb2bc.  return @kind void;
}
procedure `int` `d`(`e.e.a.b.f.b.m0$a` v2 @kind this) @signature `Le/e/a/b/f/b/m0$a;.d:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fafbc.  v0:= v2.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fafc0.  v1:= v2.`e.e.a.b.f.b.m0$a.e` @type ^`int`;
  #L1fafc4.  v0:= v0 - v1 @kind int;
  #L1fafc6.  return v0;
}
procedure `void` `d`(`e.e.a.b.f.b.m0$a` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/b/m0$a;.d:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb8b0.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb8b4.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb8b8.  v2:= v1 + 1;
  #L1fb8bc.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb8c0.  v2:= (`byte`) v5 @kind i2b;
  #L1fb8c2.  v0[v1]:= v2 @kind byte;
  #L1fb8c6.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb8ca.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb8ce.  v2:= v1 + 1;
  #L1fb8d2.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb8d6.  v2:= v5 ^> 8;
  #L1fb8da.  v2:= (`byte`) v2 @kind i2b;
  #L1fb8dc.  v0[v1]:= v2 @kind byte;
  #L1fb8e0.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb8e4.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb8e8.  v2:= v1 + 1;
  #L1fb8ec.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb8f0.  v2:= v5 ^> 16;
  #L1fb8f4.  v2:= (`byte`) v2 @kind i2b;
  #L1fb8f6.  v0[v1]:= v2 @kind byte;
  #L1fb8fa.  v0:= v4.`e.e.a.b.f.b.m0$a.d` @type ^`byte`[] @kind object;
  #L1fb8fe.  v1:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb902.  v2:= v1 + 1;
  #L1fb906.  v4.`e.e.a.b.f.b.m0$a.g` @type ^`int` := v2;
  #L1fb90a.  v5:= v5 ^> 24;
  #L1fb90e.  v0[v1]:= v5 @kind byte;
  #L1fb912.  return @kind void;
  #L1fb914.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fb916.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fb91a.  v1:= 3I;
  #L1fb91c.  v1:= new `java.lang.Object`[v1];
  #L1fb920.  v2:= 0I;
  #L1fb922.  v3:= v4.`e.e.a.b.f.b.m0$a.g` @type ^`int`;
  #L1fb926.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb92c.  v3:= temp @kind object;
  #L1fb92e.  v1[v2]:= v3 @kind object;
  #L1fb932.  v2:= v4.`e.e.a.b.f.b.m0$a.f` @type ^`int`;
  #L1fb936.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb93c.  v2:= temp @kind object;
  #L1fb93e.  v3:= 1I;
  #L1fb940.  v1[v3]:= v2 @kind object;
  #L1fb944.  v2:= 2I;
  #L1fb946.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fb94c.  v3:= temp @kind object;
  #L1fb94e.  v1[v2]:= v3 @kind object;
  #L1fb952.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fb956.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fb95c.  v1:= temp @kind object;
  #L1fb95e.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb964.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L1fb8b0..L1fb912] goto L1fb914;
}
procedure `void` `e`(`e.e.a.b.f.b.m0$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$a;.e:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fb67c.  v0:= 5I;
  #L1fb67e.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$a;.a:(II)V` @kind virtual;
  #L1fb684.  call `d`(v1, v3) @signature `Le/e/a/b/f/b/m0$a;.d:(I)V` @kind virtual;
  #L1fb68a.  return @kind void;
}
