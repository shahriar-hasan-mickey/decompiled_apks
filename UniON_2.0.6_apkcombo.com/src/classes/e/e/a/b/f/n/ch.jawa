record `e.e.a.b.f.n.ch` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int`[] `@@e.e.a.b.f.n.ch.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/ch;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L29caa8.  call temp:= `a`() @signature `Le/e/a/b/f/n/s1;.a:()[I` @kind static;
  #L29caae.  v0:= 7I;
  #L29cab0.  v1:= new `int`[v0];
  #L29cab4.  `@@e.e.a.b.f.n.ch.a` @type ^`int`[] := v1 @kind object;
  #L29cab8.  v1:= 1I;
  #L29caba.  v2:= 3I;
  #L29cabc.  v3:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cac0.  v3[v2]:= v1;
  #L29cac4.  v3:= 2I;
  #L29cac6.  v4:= 4I;
  #L29cac8.  v5:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cacc.  v5[v4]:= v3;
  #L29cad0.  v5:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cad4.  v5[v3]:= v2;
  #L29cad8.  v2:= 5I;
  #L29cada.  v3:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cade.  v3[v2]:= v4;
  #L29cae2.  v3:= 6I;
  #L29cae4.  v4:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cae8.  v4[v3]:= v2;
  #L29caec.  v2:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29caf0.  v4:= 0I;
  #L29caf2.  v2[v4]:= v3;
  #L29caf6.  v2:= `@@e.e.a.b.f.n.ch.a` @type ^`int`[] @kind object;
  #L29cafa.  v2[v1]:= v0;
  #L29cafe.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L29cabc..L29cac4] goto L29cac4;
  catch `java.lang.NoSuchFieldError` @[L29cac8..L29cad0] goto L29cad0;
  catch `java.lang.NoSuchFieldError` @[L29cad0..L29cad8] goto L29cad8;
  catch `java.lang.NoSuchFieldError` @[L29cada..L29cae2] goto L29cae2;
  catch `java.lang.NoSuchFieldError` @[L29cae4..L29caec] goto L29caec;
  catch `java.lang.NoSuchFieldError` @[L29caec..L29caf6] goto L29caf6;
  catch `java.lang.NoSuchFieldError` @[L29caf6..L29cafe] goto L29cafe;
}
