record `e.e.a.b.f.l.j7` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.l.j7` `@@e.e.a.b.f.l.j7.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.l.j7` v0 @kind this) @signature `Le/e/a/b/f/l/j7;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L262834.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26283a.  return @kind void;
}
procedure `e.e.a.b.f.l.j7` `a`() @signature `Le/e/a/b/f/l/j7;.a:()Le/e/a/b/f/l/j7;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2627ec.  v0:= constclass @type ^`e.e.a.b.f.l.j7` @kind object;
  #L2627f0.  @monitorenter v0
  #L2627f2.  v1:= `@@e.e.a.b.f.l.j7.a` @type ^`e.e.a.b.f.l.j7` @kind object;
  #L2627f6.  if v1 != 0 then goto L262808;
  #L2627fa.  v1:= new `e.e.a.b.f.l.j7`;
  #L2627fe.  call `<init>`(v1) @signature `Le/e/a/b/f/l/j7;.<init>:()V` @kind direct;
  #L262804.  `@@e.e.a.b.f.l.j7.a` @type ^`e.e.a.b.f.l.j7` := v1 @kind object;
  #L262808.  v1:= `@@e.e.a.b.f.l.j7.a` @type ^`e.e.a.b.f.l.j7` @kind object;
  #L26280c.  @monitorexit v0
  #L26280e.  return v1 @kind object;
  #L262810.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L262812.  @monitorexit v0
  #L262814.  throw v1;
  catch `java.lang.Throwable` @[L2627f2..L26280c] goto L262810;
}
