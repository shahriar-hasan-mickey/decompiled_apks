record `e.e.a.b.f.k.s` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/k/s;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L243388.  v0:= 0I;
  #L24338a.  v1:= 0I;
  #L24338c.  v2:= length @variable v12;
  #L24338e.  if v1 >= v2 then goto L2434ea;
  #L243392.  v2:= v12[v1] @kind object;
  #L243396.  if v2 != 0 then goto L2433a2;
  #L24339a.  v2:= "null" @kind object;
  #L24339e.  goto L2434de;
  #L2433a2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2433a8.  v2:= temp @kind object;
  #L2433aa.  goto L2434de;
  #L2433ae.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L2433b0.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2433b6.  v3:= temp @kind object;
  #L2433b8.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2433be.  v3:= temp @kind object;
  #L2433c0.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2433c6.  v2:= temp;
  #L2433c8.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2433ce.  v2:= temp @kind object;
  #L2433d0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2433d6.  v4:= temp @kind object;
  #L2433d8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2433de.  v4:= temp;
  #L2433e0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2433e6.  v5:= temp @kind object;
  #L2433e8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2433ee.  v5:= temp;
  #L2433f0.  v6:= new `java.lang.StringBuilder`;
  #L2433f4.  v4:= v4 + 1;
  #L2433f8.  v4:= v4 + v5 @kind int;
  #L2433fa.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L243400.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243406.  v3:= 64I;
  #L24340a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L243410.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243416.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24341c.  v2:= temp @kind object;
  #L24341e.  v3:= "com.google.common.base.Strings" @kind object;
  #L243422.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L243428.  v3:= temp @kind object;
  #L24342a.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L24342e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L243434.  v5:= temp @kind object;
  #L243436.  v6:= "Exception during lenientFormat for " @kind object;
  #L24343a.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L243440.  v7:= temp;
  #L243442.  if v7 == 0 then goto L243450;
  #L243446.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L24344c.  v5:= temp @kind object;
  #L24344e.  goto L24345a;
  #L243450.  v5:= new `java.lang.String`;
  #L243454.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24345a.  v7:= v5 @kind object;
  #L24345c.  v5:= "com.google.common.base.Strings" @kind object;
  #L243460.  v6:= "lenientToString" @kind object;
  #L243464.  v8:= v9 @kind object;
  #L243466.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L24346c.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L243472.  v3:= temp @kind object;
  #L243474.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24347a.  v3:= temp @kind object;
  #L24347c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L243482.  v4:= temp @kind object;
  #L243484.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24348a.  v4:= temp;
  #L24348c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L243492.  v5:= temp @kind object;
  #L243494.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24349a.  v5:= temp;
  #L24349c.  v6:= new `java.lang.StringBuilder`;
  #L2434a0.  v4:= v4 + 9;
  #L2434a4.  v4:= v4 + v5 @kind int;
  #L2434a6.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2434ac.  v4:= "<" @kind object;
  #L2434b0.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2434b6.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2434bc.  v2:= " threw " @kind object;
  #L2434c0.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2434c6.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2434cc.  v2:= ">" @kind object;
  #L2434d0.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2434d6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2434dc.  v2:= temp @kind object;
  #L2434de.  v12[v1]:= v2 @kind object;
  #L2434e2.  v1:= v1 + 1;
  #L2434e6.  goto L24338c;
  #L2434ea.  v1:= new `java.lang.StringBuilder`;
  #L2434ee.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2434f4.  v3:= temp;
  #L2434f6.  v2:= v2 * 16;
  #L2434fa.  v3:= v3 + v2 @kind int;
  #L2434fc.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L243502.  v2:= 0I;
  #L243504.  v3:= length @variable v12;
  #L243506.  if v0 >= v3 then goto L24353e;
  #L24350a.  v4:= "%s" @kind object;
  #L24350e.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L243514.  v4:= temp;
  #L243516.  v5:= -1I;
  #L243518.  if v4 != v5 then goto L24351e;
  #L24351c.  goto L24353e;
  #L24351e.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L243524.  v2:= v0 + 1;
  #L243528.  v0:= v12[v0] @kind object;
  #L24352c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243532.  v0:= v4 + 2;
  #L243536.  v10:= v2;
  #L243538.  v2:= v0;
  #L24353a.  v0:= v10;
  #L24353c.  goto L243504;
  #L24353e.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L243544.  v4:= temp;
  #L243546.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L24354c.  if v0 >= v3 then goto L243594;
  #L243550.  v11:= " [" @kind object;
  #L243554.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24355a.  v11:= v0 + 1;
  #L24355e.  v0:= v12[v0] @kind object;
  #L243562.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243568.  v0:= length @variable v12;
  #L24356a.  if v11 >= v0 then goto L24358a;
  #L24356e.  v0:= ", " @kind object;
  #L243572.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243578.  v0:= v11 + 1;
  #L24357c.  v11:= v12[v11] @kind object;
  #L243580.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L243586.  v11:= v0;
  #L243588.  goto L243568;
  #L24358a.  v11:= 93I;
  #L24358e.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L243594.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24359a.  v11:= temp @kind object;
  #L24359c.  return v11 @kind object;
  catch `java.lang.Exception` @[L2433a2..L2433aa] goto L2433ae;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/k/s;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L24336c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/k/q;.a:(Ljava/lang/String;)Z` @kind static;
  #L243372.  v0:= temp;
  #L243374.  return v0;
}
