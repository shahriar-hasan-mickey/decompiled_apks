record `e.e.a.b.f.n.gt` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.ot` @kind class {
}
global `e.e.a.b.f.n.gt` `@@e.e.a.b.f.n.gt.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/gt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa8bc.  v0:= new `e.e.a.b.f.n.gt`;
  #L2aa8c0.  call `<init>`(v0) @signature `Le/e/a/b/f/n/gt;.<init>:()V` @kind direct;
  #L2aa8c6.  `@@e.e.a.b.f.n.gt.b` @type ^`e.e.a.b.f.n.gt` := v0 @kind object;
  #L2aa8ca.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.gt` v0 @kind this) @signature `Le/e/a/b/f/n/gt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2aa8dc.  call `<init>`(v0) @signature `Le/e/a/b/f/n/ot;.<init>:()V` @kind direct;
  #L2aa8e2.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.n.gt` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/gt;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa888.  v0:= "use Optional.orNull() instead of Optional.or(null)" @kind object;
  #L2aa88c.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/n/pt;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2aa892.  return v2 @kind object;
}
procedure `boolean` `a`(`e.e.a.b.f.n.gt` v1 @kind this) @signature `Le/e/a/b/f/n/gt;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa83c.  v0:= 0I;
  #L2aa83e.  return v0;
}
procedure `java.lang.Object` `b`(`e.e.a.b.f.n.gt` v2 @kind this) @signature `Le/e/a/b/f/n/gt;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2aa868.  v0:= new `java.lang.IllegalStateException`;
  #L2aa86c.  v1:= "Optional.get() cannot be called on an absent value" @kind object;
  #L2aa870.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2aa876.  throw v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.gt` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/gt;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2aa820.  if v1 != v0 then goto L2aa828;
  #L2aa824.  v1:= 1I;
  #L2aa826.  return v1;
  #L2aa828.  v1:= 0I;
  #L2aa82a.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.gt` v1 @kind this) @signature `Le/e/a/b/f/n/gt;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa850.  v0:= 2040732332I;
  #L2aa856.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.gt` v1 @kind this) @signature `Le/e/a/b/f/n/gt;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa8a4.  v0:= "Optional.absent()" @kind object;
  #L2aa8a8.  return v0 @kind object;
}
