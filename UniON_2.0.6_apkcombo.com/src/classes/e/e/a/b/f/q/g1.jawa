record `e.e.a.b.f.q.g1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.n1` @kind interface {
  `e.e.a.b.f.q.b2` `e.e.a.b.f.q.g1.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.b.f.q.g1.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.q.h` `e.e.a.b.f.q.g1.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.g1` v0 @kind this, `e.e.a.b.f.q.b2` v1 @kind object, `e.e.a.b.f.q.h` v2 @kind object, `e.e.a.b.f.q.b1` v3 @kind object) @signature `Le/e/a/b/f/q/g1;.<init>:(Le/e/a/b/f/q/b2;Le/e/a/b/f/q/h;Le/e/a/b/f/q/b1;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2dac30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dac36.  v0.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` := v1 @kind object;
  #L2dac3a.  call temp:= `a`(v2, v3) @signature `Le/e/a/b/f/q/h;.a:(Le/e/a/b/f/q/b1;)Z` @kind virtual;
  #L2dac40.  v1:= temp;
  #L2dac42.  v0.`e.e.a.b.f.q.g1.b` @type ^`boolean` := v1 @kind boolean;
  #L2dac46.  v0.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` := v2 @kind object;
  #L2dac4a.  return @kind void;
}
procedure `e.e.a.b.f.q.g1` `a`(`e.e.a.b.f.q.b2` v1 @kind object, `e.e.a.b.f.q.h` v2 @kind object, `e.e.a.b.f.q.b1` v3 @kind object) @signature `Le/e/a/b/f/q/g1;.a:(Le/e/a/b/f/q/b2;Le/e/a/b/f/q/h;Le/e/a/b/f/q/b1;)Le/e/a/b/f/q/g1;` @AccessFlag STATIC {
    temp;
    v0;

  #L2dab84.  v0:= new `e.e.a.b.f.q.g1`;
  #L2dab88.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/a/b/f/q/g1;.<init>:(Le/e/a/b/f/q/b2;Le/e/a/b/f/q/h;Le/e/a/b/f/q/b1;)V` @kind direct;
  #L2dab8e.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.q.g1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/g1;.a:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2daba0.  v0:= v2.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2daba4.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dabaa.  v0:= temp @kind object;
  #L2dabac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2dabb2.  v0:= temp;
  #L2dabb4.  v1:= v2.`e.e.a.b.f.q.g1.b` @type ^`boolean` @kind boolean;
  #L2dabb8.  if v1 == 0 then goto L2dabda;
  #L2dabbc.  v0:= v0 * 53;
  #L2dabc0.  v1:= v2.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dabc4.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dabca.  v3:= temp @kind object;
  #L2dabcc.  v3:= v3.`e.e.a.b.f.q.l.a` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dabd0.  call temp:= `hashCode`(v3) @signature `Le/e/a/b/f/q/x1;.hashCode:()I` @kind virtual;
  #L2dabd6.  v3:= temp;
  #L2dabd8.  v0:= v0 + v3 @kind int;
  #L2dabda.  return v0;
}
procedure `void` `a`(`e.e.a.b.f.q.g1` v2 @kind this, `java.lang.Object` v3 @kind object, `e.e.a.b.f.q.f` v4 @kind object) @signature `Le/e/a/b/f/q/g1;.a:(Ljava/lang/Object;Le/e/a/b/f/q/f;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dacb4.  v0:= v2.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dacb8.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dacbe.  v0:= temp @kind object;
  #L2dacc0.  call temp:= `d`(v0) @signature `Le/e/a/b/f/q/l;.d:()Ljava/util/Iterator;` @kind virtual;
  #L2dacc6.  v0:= temp @kind object;
  #L2dacc8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2dacce.  v1:= temp;
  #L2dacd0.  if v1 != 0 then goto L2dace8;
  #L2dacd4.  v0:= v2.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2dacd8.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dacde.  v3:= temp @kind object;
  #L2dace0.  call `b`(v0, v3, v4) @signature `Le/e/a/b/f/q/b2;.b:(Ljava/lang/Object;Le/e/a/b/f/q/f;)V` @kind virtual;
  #L2dace6.  return @kind void;
  #L2dace8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2dacee.  v3:= temp @kind object;
  #L2dacf0.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2dacf4.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2dacfa.  v3:= temp @kind object;
  #L2dacfc.  v3:= (`e.e.a.b.f.q.k`) v3 @kind object;
  #L2dad00.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/k;.d:()Le/e/a/b/f/q/u2;` @kind interface;
  #L2dad06.  v3:= 0I;
  #L2dad08.  throw v3;
}
procedure `boolean` `a`(`e.e.a.b.f.q.g1` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/q/g1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2daaf4.  v0:= v2.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2daaf8.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2daafe.  v0:= temp @kind object;
  #L2dab00.  v1:= v2.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2dab04.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dab0a.  v1:= temp @kind object;
  #L2dab0c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2dab12.  v0:= temp;
  #L2dab14.  if v0 != 0 then goto L2dab1c;
  #L2dab18.  v3:= 0I;
  #L2dab1a.  return v3;
  #L2dab1c.  v0:= v2.`e.e.a.b.f.q.g1.b` @type ^`boolean` @kind boolean;
  #L2dab20.  if v0 == 0 then goto L2dab46;
  #L2dab24.  v0:= v2.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dab28.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dab2e.  v3:= temp @kind object;
  #L2dab30.  v0:= v2.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dab34.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dab3a.  v4:= temp @kind object;
  #L2dab3c.  call temp:= `equals`(v3, v4) @signature `Le/e/a/b/f/q/l;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2dab42.  v3:= temp;
  #L2dab44.  return v3;
  #L2dab46.  v3:= 1I;
  #L2dab48.  return v3;
}
procedure `void` `b`(`e.e.a.b.f.q.g1` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/g1;.b:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dac5c.  v0:= v1.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2dac60.  call `a`(v0, v2, v3) @signature `Le/e/a/b/f/q/p1;.a:(Le/e/a/b/f/q/b2;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2dac66.  v0:= v1.`e.e.a.b.f.q.g1.b` @type ^`boolean` @kind boolean;
  #L2dac6a.  if v0 == 0 then goto L2dac78;
  #L2dac6e.  v0:= v1.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dac72.  call `a`(v0, v2, v3) @signature `Le/e/a/b/f/q/p1;.a:(Le/e/a/b/f/q/h;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2dac78.  return @kind void;
}
procedure `int` `d`(`e.e.a.b.f.q.g1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/g1;.d:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dabec.  v0:= v2.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2dabf0.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dabf6.  v1:= temp @kind object;
  #L2dabf8.  call temp:= `c`(v0, v1) @signature `Le/e/a/b/f/q/b2;.c:(Ljava/lang/Object;)I` @kind virtual;
  #L2dabfe.  v0:= temp;
  #L2dac00.  v1:= v2.`e.e.a.b.f.q.g1.b` @type ^`boolean` @kind boolean;
  #L2dac04.  if v1 == 0 then goto L2dac1e;
  #L2dac08.  v1:= v2.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dac0c.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dac12.  v3:= temp @kind object;
  #L2dac14.  call temp:= `f`(v3) @signature `Le/e/a/b/f/q/l;.f:()I` @kind virtual;
  #L2dac1a.  v3:= temp;
  #L2dac1c.  v0:= v0 + v3 @kind int;
  #L2dac1e.  return v0;
}
procedure `void` `e`(`e.e.a.b.f.q.g1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/g1;.e:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dac8c.  v0:= v1.`e.e.a.b.f.q.g1.a` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2dac90.  call `b`(v0, v2) @signature `Le/e/a/b/f/q/b2;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L2dac96.  v0:= v1.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dac9a.  call `c`(v0, v2) @signature `Le/e/a/b/f/q/h;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L2daca0.  return @kind void;
}
procedure `boolean` `f`(`e.e.a.b.f.q.g1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/g1;.f:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dab5c.  v0:= v1.`e.e.a.b.f.q.g1.c` @type ^`e.e.a.b.f.q.h` @kind object;
  #L2dab60.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dab66.  v2:= temp @kind object;
  #L2dab68.  call temp:= `e`(v2) @signature `Le/e/a/b/f/q/l;.e:()Z` @kind virtual;
  #L2dab6e.  v2:= temp;
  #L2dab70.  return v2;
}
