record `e.e.a.b.f.n.or` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.or.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/or;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a847c.  v0:= new `e.e.a.b.f.n.or`;
  #L2a8480.  call `<init>`(v0) @signature `Le/e/a/b/f/n/or;.<init>:()V` @kind direct;
  #L2a8486.  `@@e.e.a.b.f.n.or.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2a848a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.or` v0 @kind this) @signature `Le/e/a/b/f/n/or;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a849c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a84a2.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.or` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/or;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a8458.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/pr;.a:(I)Le/e/a/b/f/n/pr;` @kind static;
  #L2a845e.  v1:= temp @kind object;
  #L2a8460.  if v1 == 0 then goto L2a8468;
  #L2a8464.  v1:= 1I;
  #L2a8466.  return v1;
  #L2a8468.  v1:= 0I;
  #L2a846a.  return v1;
}
