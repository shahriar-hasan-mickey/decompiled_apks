record `e.e.a.b.f.j.d3` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.j.n2` @kind class {
  `e.e.a.b.f.j.g3` `e.e.a.b.f.j.d3.a` @AccessFlag ;
}
global `java.util.logging.Logger` `@@e.e.a.b.f.j.d3.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.j.d3.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/j/d3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L223ab8.  v0:= constclass @type ^`e.e.a.b.f.j.d3` @kind object;
  #L223abc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L223ac2.  v0:= temp @kind object;
  #L223ac4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L223aca.  v0:= temp @kind object;
  #L223acc.  `@@e.e.a.b.f.j.d3.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L223ad0.  call temp:= `a`() @signature `Le/e/a/b/f/j/r6;.a:()Z` @kind static;
  #L223ad6.  v0:= temp;
  #L223ad8.  `@@e.e.a.b.f.j.d3.c` @type ^`boolean` := v0 @kind boolean;
  #L223adc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.d3` v0 @kind this) @signature `Le/e/a/b/f/j/d3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L223af0.  call `<init>`(v0) @signature `Le/e/a/b/f/j/n2;.<init>:()V` @kind direct;
  #L223af6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.d3` v0 @kind this, `e.e.a.b.f.j.f3` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.<init>:(Le/e/a/b/f/j/f3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L223b08.  call `<init>`(v0) @signature `Le/e/a/b/f/j/d3;.<init>:()V` @kind direct;
  #L223b0e.  return @kind void;
}
procedure `int` `a`(`int` v1 , `e.e.a.b.f.j.h4` v2 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(ILe/e/a/b/f/j/h4;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L223490.  v1:= v1 ^< 3;
  #L223494.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22349a.  v1:= temp;
  #L22349c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/j/h4;.a:()I` @kind virtual;
  #L2234a2.  v2:= temp;
  #L2234a4.  call temp:= `g`(v2) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2234aa.  v0:= temp;
  #L2234ac.  v0:= v0 + v2 @kind int;
  #L2234ae.  v1:= v1 + v0 @kind int;
  #L2234b0.  return v1;
}
procedure `int` `a`(`e.e.a.b.f.j.c5` v2 @kind object, `e.e.a.b.f.j.s5` v3 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(Le/e/a/b/f/j/c5;Le/e/a/b/f/j/s5;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L223454.  v2:= (`e.e.a.b.f.j.i2`) v2 @kind object;
  #L223458.  call temp:= `c`(v2) @signature `Le/e/a/b/f/j/i2;.c:()I` @kind virtual;
  #L22345e.  v0:= temp;
  #L223460.  v1:= -1I;
  #L223462.  if v0 != v1 then goto L223474;
  #L223466.  call temp:= `d`(v3, v2) @signature `Le/e/a/b/f/j/s5;.d:(Ljava/lang/Object;)I` @kind interface;
  #L22346c.  v0:= temp;
  #L22346e.  call `a`(v2, v0) @signature `Le/e/a/b/f/j/i2;.a:(I)V` @kind virtual;
  #L223474.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22347a.  v2:= temp;
  #L22347c.  v2:= v2 + v0 @kind int;
  #L22347e.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.j.h4` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(Le/e/a/b/f/j/h4;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L223430.  call temp:= `a`(v1) @signature `Le/e/a/b/f/j/h4;.a:()I` @kind virtual;
  #L223436.  v1:= temp;
  #L223438.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22343e.  v0:= temp;
  #L223440.  v0:= v0 + v1 @kind int;
  #L223442.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.j.q2` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(Le/e/a/b/f/j/q2;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2234d8.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L2234de.  v1:= temp;
  #L2234e0.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2234e6.  v0:= temp;
  #L2234e8.  v0:= v0 + v1 @kind int;
  #L2234ea.  return v0;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2235e4.  call temp:= `a`(v1) @signature `Le/e/a/b/f/j/t6;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L2235ea.  v1:= temp;
  #L2235ec.  goto L2235fc;
  #L2235ee.  v0:= `@@e.e.a.b.f.j.s3.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2235f2.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2235f8.  v1:= temp @kind object;
  #L2235fa.  v1:= length @variable v1;
  #L2235fc.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223602.  v0:= temp;
  #L223604.  v0:= v0 + v1 @kind int;
  #L223606.  return v0;
  catch `e.e.a.b.f.j.u6` @[L2235e4..L2235ec] goto L2235ee;
}
procedure `e.e.a.b.f.j.d3` `a`(`byte`[] v3 @kind object) @signature `Le/e/a/b/f/j/d3;.a:([B)Le/e/a/b/f/j/d3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L223410.  v0:= length @variable v3;
  #L223412.  v1:= new `e.e.a.b.f.j.d3$a`;
  #L223416.  v2:= 0I;
  #L223418.  call `<init>`(v1, v3, v2, v0) @signature `Le/e/a/b/f/j/d3$a;.<init>:([BII)V` @kind direct;
  #L22341e.  return v1 @kind object;
}
procedure `int` `b`(`double` v0 ) @signature `Le/e/a/b/f/j/d3;.b:(D)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2234fc.  v0:= 8I;
  #L223500.  return v0;
}
procedure `int` `b`(`float` v0 ) @signature `Le/e/a/b/f/j/d3;.b:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223514.  v0:= 4I;
  #L223516.  return v0;
}
procedure `int` `b`(`int` v0 , `double` v1 ) @signature `Le/e/a/b/f/j/d3;.b:(ID)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223574.  v0:= v0 ^< 3;
  #L223578.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22357e.  v0:= temp;
  #L223580.  v0:= v0 + 8;
  #L223584.  return v0;
}
procedure `int` `b`(`int` v0 , `float` v1 ) @signature `Le/e/a/b/f/j/d3;.b:(IF)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223598.  v0:= v0 ^< 3;
  #L22359c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2235a2.  v0:= temp;
  #L2235a4.  v0:= v0 + 4;
  #L2235a8.  return v0;
}
procedure `int` `b`(`int` v0 , `e.e.a.b.f.j.c5` v1 @kind object, `e.e.a.b.f.j.s5` v2 @kind object) @signature `Le/e/a/b/f/j/d3;.b:(ILe/e/a/b/f/j/c5;Le/e/a/b/f/j/s5;)I` @AccessFlag STATIC {
    temp;

  #L22354c.  v0:= v0 ^< 3;
  #L223550.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223556.  v0:= temp;
  #L223558.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/j/d3;.a:(Le/e/a/b/f/j/c5;Le/e/a/b/f/j/s5;)I` @kind static;
  #L22355e.  v1:= temp;
  #L223560.  v0:= v0 + v1 @kind int;
  #L223562.  return v0;
}
procedure `int` `b`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.b:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2235bc.  v0:= v0 ^< 3;
  #L2235c0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2235c6.  v0:= temp;
  #L2235c8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/j/d3;.a:(Ljava/lang/String;)I` @kind static;
  #L2235ce.  v1:= temp;
  #L2235d0.  v0:= v0 + v1 @kind int;
  #L2235d2.  return v0;
}
procedure `int` `b`(`int` v0 , `boolean` v1 ) @signature `Le/e/a/b/f/j/d3;.b:(IZ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223528.  v0:= v0 ^< 3;
  #L22352c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223532.  v0:= temp;
  #L223534.  v0:= v0 + 1;
  #L223538.  return v0;
}
procedure `int` `b`(`boolean` v0 ) @signature `Le/e/a/b/f/j/d3;.b:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2234c4.  v0:= 1I;
  #L2234c6.  return v0;
}
procedure `int` `c`(`int` v2 , `e.e.a.b.f.j.c5` v3 @kind object, `e.e.a.b.f.j.s5` v4 @kind object) @signature `Le/e/a/b/f/j/d3;.c:(ILe/e/a/b/f/j/c5;Le/e/a/b/f/j/s5;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22365c.  v2:= v2 ^< 3;
  #L223660.  call temp:= `g`(v2) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223666.  v2:= temp;
  #L223668.  v2:= v2 ^< 1;
  #L22366c.  v3:= (`e.e.a.b.f.j.i2`) v3 @kind object;
  #L223670.  call temp:= `c`(v3) @signature `Le/e/a/b/f/j/i2;.c:()I` @kind virtual;
  #L223676.  v0:= temp;
  #L223678.  v1:= -1I;
  #L22367a.  if v0 != v1 then goto L22368c;
  #L22367e.  call temp:= `d`(v4, v3) @signature `Le/e/a/b/f/j/s5;.d:(Ljava/lang/Object;)I` @kind interface;
  #L223684.  v0:= temp;
  #L223686.  call `a`(v3, v0) @signature `Le/e/a/b/f/j/i2;.a:(I)V` @kind virtual;
  #L22368c.  v2:= v2 + v0 @kind int;
  #L22368e.  return v2;
}
procedure `int` `c`(`int` v1 , `e.e.a.b.f.j.q2` v2 @kind object) @signature `Le/e/a/b/f/j/d3;.c:(ILe/e/a/b/f/j/q2;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L223628.  v1:= v1 ^< 3;
  #L22362c.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223632.  v1:= temp;
  #L223634.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L22363a.  v2:= temp;
  #L22363c.  call temp:= `g`(v2) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223642.  v0:= temp;
  #L223644.  v0:= v0 + v2 @kind int;
  #L223646.  v1:= v1 + v0 @kind int;
  #L223648.  return v1;
}
procedure `boolean` `c`() @signature `Le/e/a/b/f/j/d3;.c:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2233f8.  v0:= `@@e.e.a.b.f.j.d3.c` @type ^`boolean` @kind boolean;
  #L2233fc.  return v0;
}
procedure `int` `d`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.d:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2236dc.  v0:= v0 ^< 3;
  #L2236e0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2236e6.  v0:= temp;
  #L2236e8.  call temp:= `e`(v1) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @kind static;
  #L2236ee.  v1:= temp;
  #L2236f0.  v0:= v0 + v1 @kind int;
  #L2236f2.  return v0;
}
procedure `int` `d`(`int` v2 , `e.e.a.b.f.j.q2` v3 @kind object) @signature `Le/e/a/b/f/j/d3;.d:(ILe/e/a/b/f/j/q2;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2236a0.  v0:= 8I;
  #L2236a4.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2236aa.  v0:= temp;
  #L2236ac.  v0:= v0 ^< 1;
  #L2236b0.  v1:= 2I;
  #L2236b2.  call temp:= `g`(v1, v2) @signature `Le/e/a/b/f/j/d3;.g:(II)I` @kind static;
  #L2236b8.  v2:= temp;
  #L2236ba.  v0:= v0 + v2 @kind int;
  #L2236bc.  v2:= 3I;
  #L2236be.  call temp:= `c`(v2, v3) @signature `Le/e/a/b/f/j/d3;.c:(ILe/e/a/b/f/j/q2;)I` @kind static;
  #L2236c4.  v2:= temp;
  #L2236c6.  v0:= v0 + v2 @kind int;
  #L2236c8.  return v0;
}
procedure `int` `d`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.d:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223704.  call temp:= `e`(v0) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @kind static;
  #L22370a.  v0:= temp;
  #L22370c.  return v0;
}
procedure `int` `e`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.e:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223720.  v0:= v0 ^< 3;
  #L223724.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22372a.  v0:= temp;
  #L22372c.  return v0;
}
procedure `int` `e`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.e:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223740.  v0:= v0 ^< 3;
  #L223744.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22374a.  v0:= temp;
  #L22374c.  call temp:= `e`(v1) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @kind static;
  #L223752.  v1:= temp;
  #L223754.  v0:= v0 + v1 @kind int;
  #L223756.  return v0;
}
procedure `int` `e`(`long` v6 ) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L223768.  v0:= -128L;
  #L22376c.  v0:= v0 ^& v6 @kind long;
  #L22376e.  v2:= 0L;
  #L223772.  v4:= lcmp(v0, v2);
  #L223776.  if v4 != 0 then goto L22377e;
  #L22377a.  v6:= 1I;
  #L22377c.  return v6;
  #L22377e.  v0:= lcmp(v6, v2);
  #L223782.  if v0 >= 0 then goto L22378c;
  #L223786.  v6:= 10I;
  #L22378a.  return v6;
  #L22378c.  v0:= -34359738368L;
  #L223796.  v0:= v0 ^& v6 @kind long;
  #L223798.  v4:= lcmp(v0, v2);
  #L22379c.  if v4 == 0 then goto L2237aa;
  #L2237a0.  v0:= 6I;
  #L2237a2.  v1:= 28I;
  #L2237a6.  v6:= v6 ^>> v1 @kind long;
  #L2237a8.  goto L2237ac;
  #L2237aa.  v0:= 2I;
  #L2237ac.  v4:= -2097152L;
  #L2237b2.  v4:= v4 ^& v6 @kind long;
  #L2237b4.  v1:= lcmp(v4, v2);
  #L2237b8.  if v1 == 0 then goto L2237c6;
  #L2237bc.  v0:= v0 + 2;
  #L2237c0.  v1:= 14I;
  #L2237c4.  v6:= v6 ^>> v1 @kind long;
  #L2237c6.  v4:= -16384L;
  #L2237ca.  v6:= v6 ^& v4 @kind long;
  #L2237cc.  v1:= lcmp(v6, v2);
  #L2237d0.  if v1 == 0 then goto L2237d8;
  #L2237d4.  v0:= v0 + 1;
  #L2237d8.  return v0;
}
procedure `int` `f`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.f:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2237ec.  if v0 < 0 then goto L2237fa;
  #L2237f0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2237f6.  v0:= temp;
  #L2237f8.  return v0;
  #L2237fa.  v0:= 10I;
  #L2237fe.  return v0;
}
procedure `int` `f`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.f:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223810.  v0:= v0 ^< 3;
  #L223814.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L22381a.  v0:= temp;
  #L22381c.  call temp:= `f`(v1) @signature `Le/e/a/b/f/j/d3;.f:(I)I` @kind static;
  #L223822.  v1:= temp;
  #L223824.  v0:= v0 + v1 @kind int;
  #L223826.  return v0;
}
procedure `int` `f`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.f:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223838.  v0:= v0 ^< 3;
  #L22383c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223842.  v0:= temp;
  #L223844.  call temp:= `i`(v1) @signature `Le/e/a/b/f/j/d3;.i:(J)J` @kind static;
  #L22384a.  v1:= temp @kind wide;
  #L22384c.  call temp:= `e`(v1) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @kind static;
  #L223852.  v1:= temp;
  #L223854.  v0:= v0 + v1 @kind int;
  #L223856.  return v0;
}
procedure `int` `f`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.f:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223868.  call temp:= `i`(v0) @signature `Le/e/a/b/f/j/d3;.i:(J)J` @kind static;
  #L22386e.  v0:= temp @kind wide;
  #L223870.  call temp:= `e`(v0) @signature `Le/e/a/b/f/j/d3;.e:(J)I` @kind static;
  #L223876.  v0:= temp;
  #L223878.  return v0;
}
procedure `int` `g`(`int` v1 ) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22388c.  v0:= v1 ^& -128;
  #L223890.  if v0 != 0 then goto L223898;
  #L223894.  v1:= 1I;
  #L223896.  return v1;
  #L223898.  v0:= v1 ^& -16384;
  #L22389c.  if v0 != 0 then goto L2238a4;
  #L2238a0.  v1:= 2I;
  #L2238a2.  return v1;
  #L2238a4.  v0:= -2097152I;
  #L2238a8.  v0:= v0 ^& v1 @kind int;
  #L2238aa.  if v0 != 0 then goto L2238b2;
  #L2238ae.  v1:= 3I;
  #L2238b0.  return v1;
  #L2238b2.  v0:= -268435456I;
  #L2238b6.  v1:= v1 ^& v0 @kind int;
  #L2238b8.  if v1 != 0 then goto L2238c0;
  #L2238bc.  v1:= 4I;
  #L2238be.  return v1;
  #L2238c0.  v1:= 5I;
  #L2238c2.  return v1;
}
procedure `int` `g`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.g:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2238d4.  v0:= v0 ^< 3;
  #L2238d8.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2238de.  v0:= temp;
  #L2238e0.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2238e6.  v1:= temp;
  #L2238e8.  v0:= v0 + v1 @kind int;
  #L2238ea.  return v0;
}
procedure `int` `g`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.g:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2238fc.  v0:= v0 ^< 3;
  #L223900.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223906.  v0:= temp;
  #L223908.  v0:= v0 + 8;
  #L22390c.  return v0;
}
procedure `int` `g`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.g:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223920.  v0:= 8I;
  #L223924.  return v0;
}
procedure `int` `h`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.h:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223938.  call temp:= `l`(v0) @signature `Le/e/a/b/f/j/d3;.l:(I)I` @kind static;
  #L22393e.  v0:= temp;
  #L223940.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223946.  v0:= temp;
  #L223948.  return v0;
}
procedure `int` `h`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.h:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L22395c.  v0:= v0 ^< 3;
  #L223960.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223966.  v0:= temp;
  #L223968.  call temp:= `l`(v1) @signature `Le/e/a/b/f/j/d3;.l:(I)I` @kind static;
  #L22396e.  v1:= temp;
  #L223970.  call temp:= `g`(v1) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223976.  v1:= temp;
  #L223978.  v0:= v0 + v1 @kind int;
  #L22397a.  return v0;
}
procedure `int` `h`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.h:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L22398c.  v0:= v0 ^< 3;
  #L223990.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223996.  v0:= temp;
  #L223998.  v0:= v0 + 8;
  #L22399c.  return v0;
}
procedure `int` `h`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.h:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2239b0.  v0:= 8I;
  #L2239b4.  return v0;
}
procedure `int` `i`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.i:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2239c8.  v0:= 4I;
  #L2239ca.  return v0;
}
procedure `int` `i`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.i:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2239dc.  v0:= v0 ^< 3;
  #L2239e0.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L2239e6.  v0:= temp;
  #L2239e8.  v0:= v0 + 4;
  #L2239ec.  return v0;
}
procedure `long` `i`(`long` v3 ) @signature `Le/e/a/b/f/j/d3;.i:(J)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L223a98.  v0:= 1I;
  #L223a9a.  v0:= v3 ^< v0 @kind long;
  #L223a9e.  v2:= 63I;
  #L223aa2.  v3:= v3 ^> v2 @kind long;
  #L223aa4.  v3:= v3 ^~ v0 @kind long;
  #L223aa6.  return v3 @kind wide;
}
procedure `int` `j`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.j:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223a00.  v0:= 4I;
  #L223a02.  return v0;
}
procedure `int` `j`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.j:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223a14.  v0:= v0 ^< 3;
  #L223a18.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223a1e.  v0:= temp;
  #L223a20.  v0:= v0 + 4;
  #L223a24.  return v0;
}
procedure `int` `k`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.k:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223a38.  call temp:= `f`(v0) @signature `Le/e/a/b/f/j/d3;.f:(I)I` @kind static;
  #L223a3e.  v0:= temp;
  #L223a40.  return v0;
}
procedure `int` `k`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.k:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L223a54.  v0:= v0 ^< 3;
  #L223a58.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/d3;.g:(I)I` @kind static;
  #L223a5e.  v0:= temp;
  #L223a60.  call temp:= `f`(v1) @signature `Le/e/a/b/f/j/d3;.f:(I)I` @kind static;
  #L223a66.  v1:= temp;
  #L223a68.  v0:= v0 + v1 @kind int;
  #L223a6a.  return v0;
}
procedure `int` `l`(`int` v1 ) @signature `Le/e/a/b/f/j/d3;.l:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L223a7c.  v0:= v1 ^< 1;
  #L223a80.  v1:= v1 ^> 31;
  #L223a84.  v1:= v1 ^~ v0 @kind int;
  #L223a86.  return v1;
}
procedure `int` `a`() @signature `Le/e/a/b/f/j/d3;.a:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`byte` v0 ) @signature `Le/e/a/b/f/j/d3;.a:(B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v0 @kind this, `double` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(D)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223b3c.  call temp:= `doubleToRawLongBits`(v1) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L223b42.  v1:= temp @kind wide;
  #L223b44.  call `c`(v0, v1) @signature `Le/e/a/b/f/j/d3;.c:(J)V` @kind virtual;
  #L223b4a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v0 @kind this, `float` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(F)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223b5c.  call temp:= `floatToRawIntBits`(v1) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L223b62.  v1:= temp;
  #L223b64.  call `d`(v0, v1) @signature `Le/e/a/b/f/j/d3;.d:(I)V` @kind virtual;
  #L223b6a.  return @kind void;
}
procedure `void` `a`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.a:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v0 @kind this, `int` v1 , `double` v2 ) @signature `Le/e/a/b/f/j/d3;.a:(ID)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223b7c.  call temp:= `doubleToRawLongBits`(v2) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L223b82.  v2:= temp @kind wide;
  #L223b84.  call `c`(v0, v1, v2) @signature `Le/e/a/b/f/j/d3;.c:(IJ)V` @kind virtual;
  #L223b8a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v0 @kind this, `int` v1 , `float` v2 ) @signature `Le/e/a/b/f/j/d3;.a:(IF)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223b9c.  call temp:= `floatToRawIntBits`(v2) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L223ba2.  v2:= temp;
  #L223ba4.  call `e`(v0, v1, v2) @signature `Le/e/a/b/f/j/d3;.e:(II)V` @kind virtual;
  #L223baa.  return @kind void;
}
procedure `void` `a`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.j.c5` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(ILe/e/a/b/f/j/c5;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.j.c5` v1 @kind object, `e.e.a.b.f.j.s5` v2 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(ILe/e/a/b/f/j/c5;Le/e/a/b/f/j/s5;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.j.q2` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(ILe/e/a/b/f/j/q2;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `boolean` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(IZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.a:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v6 @kind this, `java.lang.String` v7 @kind object, `e.e.a.b.f.j.u6` v8 @kind object) @signature `Le/e/a/b/f/j/d3;.a:(Ljava/lang/String;Le/e/a/b/f/j/u6;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L223bbc.  v0:= `@@e.e.a.b.f.j.d3.b` @type ^`java.util.logging.Logger` @kind object;
  #L223bc0.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L223bc4.  v2:= "com.google.protobuf.CodedOutputStream" @kind object;
  #L223bc8.  v3:= "inefficientWriteStringNoTag" @kind object;
  #L223bcc.  v4:= "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!" @kind object;
  #L223bd0.  v5:= v8 @kind object;
  #L223bd2.  call `logp`(v0, v1, v2, v3, v4, v5) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L223bd8.  v8:= `@@e.e.a.b.f.j.s3.a` @type ^`java.nio.charset.Charset` @kind object;
  #L223bdc.  call temp:= `getBytes`(v7, v8) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L223be2.  v7:= temp @kind object;
  #L223be4.  v8:= length @variable v7;
  #L223be6.  call `b`(v6, v8) @signature `Le/e/a/b/f/j/d3;.b:(I)V` @kind virtual;
  #L223bec.  v8:= 0I;
  #L223bee.  v0:= length @variable v7;
  #L223bf0.  call `a`(v6, v7, v8, v0) @signature `Le/e/a/b/f/j/n2;.a:([BII)V` @kind virtual;
  #L223bf6.  return @kind void;
  #L223bf8.  v7:= Exception @type ^`e.e.a.b.f.j.d3$b` @kind object;
  #L223bfa.  throw v7;
  #L223bfc.  v7:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L223bfe.  v8:= new `e.e.a.b.f.j.d3$b`;
  #L223c02.  call `<init>`(v8, v7) @signature `Le/e/a/b/f/j/d3$b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L223c08.  throw v8;
  catch `java.lang.IndexOutOfBoundsException` @[L223be4..L223bf6] goto L223bfc;
  catch `e.e.a.b.f.j.d3$b` @[L223be4..L223bf6] goto L223bf8;
}
procedure `void` `a`(`e.e.a.b.f.j.d3` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/j/d3;.a:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223b20.  v1:= (`byte`) v1 @kind i2b;
  #L223b22.  call `a`(v0, v1) @signature `Le/e/a/b/f/j/d3;.a:(B)V` @kind virtual;
  #L223b28.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.j.d3` v2 @kind this) @signature `Le/e/a/b/f/j/d3;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L223c2c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/j/d3;.a:()I` @kind virtual;
  #L223c32.  v0:= temp;
  #L223c34.  if v0 != 0 then goto L223c3a;
  #L223c38.  return @kind void;
  #L223c3a.  v0:= new `java.lang.IllegalStateException`;
  #L223c3e.  v1:= "Did not write as much data as expected." @kind object;
  #L223c42.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223c48.  throw v0;
}
procedure `void` `b`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.b:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.b:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`e.e.a.b.f.j.d3` v0 @kind this, `int` v1 , `long` v2 ) @signature `Le/e/a/b/f/j/d3;.b:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223c5c.  call temp:= `i`(v2) @signature `Le/e/a/b/f/j/d3;.i:(J)J` @kind static;
  #L223c62.  v2:= temp @kind wide;
  #L223c64.  call `a`(v0, v1, v2) @signature `Le/e/a/b/f/j/d3;.a:(IJ)V` @kind virtual;
  #L223c6a.  return @kind void;
}
procedure `void` `b`(`int` v0 , `e.e.a.b.f.j.q2` v1 @kind object) @signature `Le/e/a/b/f/j/d3;.b:(ILe/e/a/b/f/j/q2;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`e.e.a.b.f.j.d3` v0 @kind this, `long` v1 ) @signature `Le/e/a/b/f/j/d3;.b:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223c7c.  call temp:= `i`(v1) @signature `Le/e/a/b/f/j/d3;.i:(J)J` @kind static;
  #L223c82.  v1:= temp @kind wide;
  #L223c84.  call `a`(v0, v1) @signature `Le/e/a/b/f/j/d3;.a:(J)V` @kind virtual;
  #L223c8a.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.j.d3` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/j/d3;.c:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223c9c.  call temp:= `l`(v1) @signature `Le/e/a/b/f/j/d3;.l:(I)I` @kind static;
  #L223ca2.  v1:= temp;
  #L223ca4.  call `b`(v0, v1) @signature `Le/e/a/b/f/j/d3;.b:(I)V` @kind virtual;
  #L223caa.  return @kind void;
}
procedure `void` `c`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.c:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/j/d3;.c:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`long` v0 ) @signature `Le/e/a/b/f/j/d3;.c:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`int` v0 ) @signature `Le/e/a/b/f/j/d3;.d:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`e.e.a.b.f.j.d3` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/j/d3;.d:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L223cbc.  call temp:= `l`(v2) @signature `Le/e/a/b/f/j/d3;.l:(I)I` @kind static;
  #L223cc2.  v2:= temp;
  #L223cc4.  call `c`(v0, v1, v2) @signature `Le/e/a/b/f/j/d3;.c:(II)V` @kind virtual;
  #L223cca.  return @kind void;
}
procedure `void` `e`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/j/d3;.e:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
