record `e.e.a.b.f.k.o0` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `e.e.a.b.f.k.t0` `e.e.a.b.f.k.o0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.o0` v0 @kind this, `e.e.a.b.f.k.t0` v1 @kind object) @signature `Le/e/a/b/f/k/o0;.<init>:(Le/e/a/b/f/k/t0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L244e80.  v0.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` := v1 @kind object;
  #L244e84.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L244e8a.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.k.o0` v1 @kind this) @signature `Le/e/a/b/f/k/o0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244e9c.  v0:= v1.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244ea0.  call `clear`(v0) @signature `Le/e/a/b/f/k/t0;.clear:()V` @kind virtual;
  #L244ea6.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.k.o0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/o0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L244ce0.  v0:= v3.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244ce4.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L244cea.  v0:= temp @kind object;
  #L244cec.  if v0 == 0 then goto L244d02;
  #L244cf0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L244cf6.  v0:= temp @kind object;
  #L244cf8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L244cfe.  v4:= temp;
  #L244d00.  return v4;
  #L244d02.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L244d06.  v1:= 0I;
  #L244d08.  if v0 == 0 then goto L244d4e;
  #L244d0c.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L244d10.  v0:= v3.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244d14.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L244d1a.  v2:= temp @kind object;
  #L244d1c.  call temp:= `b`(v0, v2) @signature `Le/e/a/b/f/k/t0;.b:(Le/e/a/b/f/k/t0;Ljava/lang/Object;)I` @kind static;
  #L244d22.  v0:= temp;
  #L244d24.  v2:= -1I;
  #L244d26.  if v0 == v2 then goto L244d4e;
  #L244d2a.  v2:= v3.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244d2e.  v2:= v2.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L244d32.  v0:= v2[v0] @kind object;
  #L244d36.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L244d3c.  v4:= temp @kind object;
  #L244d3e.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L244d44.  v4:= temp;
  #L244d46.  if v4 == 0 then goto L244d4e;
  #L244d4a.  v4:= 1I;
  #L244d4c.  return v4;
  #L244d4e.  return v1;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.o0` v2 @kind this) @signature `Le/e/a/b/f/k/o0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L244e40.  v0:= v2.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244e44.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L244e4a.  v1:= temp @kind object;
  #L244e4c.  if v1 == 0 then goto L244e62;
  #L244e50.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L244e56.  v0:= temp @kind object;
  #L244e58.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L244e5e.  v0:= temp @kind object;
  #L244e60.  goto L244e6e;
  #L244e62.  v1:= new `e.e.a.b.f.k.m0`;
  #L244e66.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/k/m0;.<init>:(Le/e/a/b/f/k/t0;)V` @kind direct;
  #L244e6c.  v0:= v1 @kind object;
  #L244e6e.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.k.o0` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Le/e/a/b/f/k/o0;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L244d60.  v0:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244d64.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L244d6a.  v0:= temp @kind object;
  #L244d6c.  if v0 == 0 then goto L244d82;
  #L244d70.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L244d76.  v0:= temp @kind object;
  #L244d78.  call temp:= `remove`(v0, v10) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L244d7e.  v10:= temp;
  #L244d80.  return v10;
  #L244d82.  v0:= instanceof @variable v10 @type ^`java.util.Map$Entry` @kind boolean;
  #L244d86.  v1:= 0I;
  #L244d88.  if v0 == 0 then goto L244e0e;
  #L244d8c.  v10:= (`java.util.Map$Entry`) v10 @kind object;
  #L244d90.  v0:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244d94.  call temp:= `a`(v0) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L244d9a.  v0:= temp;
  #L244d9c.  if v0 == 0 then goto L244da2;
  #L244da0.  return v1;
  #L244da2.  v0:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244da6.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/t0;.b:(Le/e/a/b/f/k/t0;)I` @kind static;
  #L244dac.  v0:= temp;
  #L244dae.  call temp:= `getKey`(v10) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L244db4.  v2:= temp @kind object;
  #L244db6.  call temp:= `getValue`(v10) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L244dbc.  v3:= temp @kind object;
  #L244dbe.  v10:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244dc2.  call temp:= `c`(v10) @signature `Le/e/a/b/f/k/t0;.c:(Le/e/a/b/f/k/t0;)Ljava/lang/Object;` @kind static;
  #L244dc8.  v5:= temp @kind object;
  #L244dca.  v10:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244dce.  v6:= v10.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L244dd2.  v7:= v10.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L244dd6.  v8:= v10.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L244dda.  v4:= v0;
  #L244ddc.  call temp:= `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L244de2.  v10:= temp;
  #L244de4.  v2:= -1I;
  #L244de6.  if v10 != v2 then goto L244dec;
  #L244dea.  return v1;
  #L244dec.  v1:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244df0.  call `a`(v1, v10, v0) @signature `Le/e/a/b/f/k/t0;.a:(II)V` @kind virtual;
  #L244df6.  v10:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244dfa.  call temp:= `d`(v10) @signature `Le/e/a/b/f/k/t0;.d:(Le/e/a/b/f/k/t0;)I` @kind static;
  #L244e00.  v10:= v9.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244e04.  call `c`(v10) @signature `Le/e/a/b/f/k/t0;.c:()V` @kind virtual;
  #L244e0a.  v10:= 1I;
  #L244e0c.  return v10;
  #L244e0e.  return v1;
}
procedure `int` `size`(`e.e.a.b.f.k.o0` v1 @kind this) @signature `Le/e/a/b/f/k/o0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244e20.  v0:= v1.`e.e.a.b.f.k.o0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L244e24.  call temp:= `size`(v0) @signature `Le/e/a/b/f/k/t0;.size:()I` @kind virtual;
  #L244e2a.  v0:= temp;
  #L244e2c.  return v0;
}
