record `e.e.a.b.f.j.r9$a` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.j.q3$b` @kind class, `e.e.a.b.f.j.f5` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.j.r9$a` v1 @kind this) @signature `Le/e/a/b/f/j/r9$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23ba80.  call temp:= `l`() @signature `Le/e/a/b/f/j/r9;.l:()Le/e/a/b/f/j/r9;` @kind static;
  #L23ba86.  v0:= temp @kind object;
  #L23ba88.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/j/q3$b;.<init>:(Le/e/a/b/f/j/q3;)V` @kind direct;
  #L23ba8e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.r9$a` v0 @kind this, `e.e.a.b.f.j.v8` v1 @kind object) @signature `Le/e/a/b/f/j/r9$a;.<init>:(Le/e/a/b/f/j/v8;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23baa0.  call `<init>`(v0) @signature `Le/e/a/b/f/j/r9$a;.<init>:()V` @kind direct;
  #L23baa6.  return @kind void;
}
procedure `e.e.a.b.f.j.r9$a` `a`(`e.e.a.b.f.j.r9$a` v1 @kind this, `e.e.a.b.f.j.c9$a` v2 @kind object) @signature `Le/e/a/b/f/j/r9$a;.a:(Le/e/a/b/f/j/c9$a;)Le/e/a/b/f/j/r9$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23ba40.  v0:= v1.`e.e.a.b.f.j.q3$b.d` @type ^`boolean` @kind boolean;
  #L23ba44.  if v0 == 0 then goto L23ba54;
  #L23ba48.  call `c`(v1) @signature `Le/e/a/b/f/j/q3$b;.c:()V` @kind virtual;
  #L23ba4e.  v0:= 0I;
  #L23ba50.  v1.`e.e.a.b.f.j.q3$b.d` @type ^`boolean` := v0 @kind boolean;
  #L23ba54.  v0:= v1.`e.e.a.b.f.j.q3$b.c` @type ^`e.e.a.b.f.j.q3` @kind object;
  #L23ba58.  v0:= (`e.e.a.b.f.j.r9`) v0 @kind object;
  #L23ba5c.  call temp:= `e`(v2) @signature `Le/e/a/b/f/j/q3$b;.e:()Le/e/a/b/f/j/c5;` @kind virtual;
  #L23ba62.  v2:= temp @kind object;
  #L23ba64.  v2:= (`e.e.a.b.f.j.c9`) v2 @kind object;
  #L23ba68.  call `a`(v0, v2) @signature `Le/e/a/b/f/j/r9;.a:(Le/e/a/b/f/j/r9;Le/e/a/b/f/j/c9;)V` @kind static;
  #L23ba6e.  return v1 @kind object;
}
