record `e.e.a.b.f.i.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/i/b;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L21b9cc.  v0:= 0I;
  #L21b9ce.  v1:= 0I;
  #L21b9d0.  v2:= length @variable v12;
  #L21b9d2.  if v1 >= v2 then goto L21bb2e;
  #L21b9d6.  v2:= v12[v1] @kind object;
  #L21b9da.  if v2 != 0 then goto L21b9e6;
  #L21b9de.  v2:= "null" @kind object;
  #L21b9e2.  goto L21bb22;
  #L21b9e6.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b9ec.  v2:= temp @kind object;
  #L21b9ee.  goto L21bb22;
  #L21b9f2.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L21b9f4.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21b9fa.  v3:= temp @kind object;
  #L21b9fc.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L21ba02.  v3:= temp @kind object;
  #L21ba04.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L21ba0a.  v2:= temp;
  #L21ba0c.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L21ba12.  v2:= temp @kind object;
  #L21ba14.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21ba1a.  v4:= temp @kind object;
  #L21ba1c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21ba22.  v4:= temp;
  #L21ba24.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21ba2a.  v5:= temp @kind object;
  #L21ba2c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21ba32.  v5:= temp;
  #L21ba34.  v6:= new `java.lang.StringBuilder`;
  #L21ba38.  v4:= v4 + 1;
  #L21ba3c.  v4:= v4 + v5 @kind int;
  #L21ba3e.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21ba44.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba4a.  v3:= 64I;
  #L21ba4e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba54.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba5a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ba60.  v2:= temp @kind object;
  #L21ba62.  v3:= "com.google.common.base.Strings" @kind object;
  #L21ba66.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L21ba6c.  v3:= temp @kind object;
  #L21ba6e.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L21ba72.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21ba78.  v5:= temp @kind object;
  #L21ba7a.  v6:= "Exception during lenientFormat for " @kind object;
  #L21ba7e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21ba84.  v7:= temp;
  #L21ba86.  if v7 == 0 then goto L21ba94;
  #L21ba8a.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21ba90.  v5:= temp @kind object;
  #L21ba92.  goto L21ba9e;
  #L21ba94.  v5:= new `java.lang.String`;
  #L21ba98.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21ba9e.  v7:= v5 @kind object;
  #L21baa0.  v5:= "com.google.common.base.Strings" @kind object;
  #L21baa4.  v6:= "lenientToString" @kind object;
  #L21baa8.  v8:= v9 @kind object;
  #L21baaa.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21bab0.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21bab6.  v3:= temp @kind object;
  #L21bab8.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L21babe.  v3:= temp @kind object;
  #L21bac0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21bac6.  v4:= temp @kind object;
  #L21bac8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21bace.  v4:= temp;
  #L21bad0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21bad6.  v5:= temp @kind object;
  #L21bad8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21bade.  v5:= temp;
  #L21bae0.  v6:= new `java.lang.StringBuilder`;
  #L21bae4.  v4:= v4 + 9;
  #L21bae8.  v4:= v4 + v5 @kind int;
  #L21baea.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21baf0.  v4:= "<" @kind object;
  #L21baf4.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bafa.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb00.  v2:= " threw " @kind object;
  #L21bb04.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb0a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb10.  v2:= ">" @kind object;
  #L21bb14.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb1a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bb20.  v2:= temp @kind object;
  #L21bb22.  v12[v1]:= v2 @kind object;
  #L21bb26.  v1:= v1 + 1;
  #L21bb2a.  goto L21b9d0;
  #L21bb2e.  v1:= new `java.lang.StringBuilder`;
  #L21bb32.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21bb38.  v3:= temp;
  #L21bb3a.  v2:= v2 * 16;
  #L21bb3e.  v3:= v3 + v2 @kind int;
  #L21bb40.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21bb46.  v2:= 0I;
  #L21bb48.  v3:= length @variable v12;
  #L21bb4a.  if v0 >= v3 then goto L21bb82;
  #L21bb4e.  v4:= "%s" @kind object;
  #L21bb52.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L21bb58.  v4:= temp;
  #L21bb5a.  v5:= -1I;
  #L21bb5c.  if v4 != v5 then goto L21bb62;
  #L21bb60.  goto L21bb82;
  #L21bb62.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb68.  v2:= v0 + 1;
  #L21bb6c.  v0:= v12[v0] @kind object;
  #L21bb70.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb76.  v0:= v4 + 2;
  #L21bb7a.  v10:= v2;
  #L21bb7c.  v2:= v0;
  #L21bb7e.  v0:= v10;
  #L21bb80.  goto L21bb48;
  #L21bb82.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21bb88.  v4:= temp;
  #L21bb8a.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb90.  if v0 >= v3 then goto L21bbd8;
  #L21bb94.  v11:= " [" @kind object;
  #L21bb98.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bb9e.  v11:= v0 + 1;
  #L21bba2.  v0:= v12[v0] @kind object;
  #L21bba6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bbac.  v0:= length @variable v12;
  #L21bbae.  if v11 >= v0 then goto L21bbce;
  #L21bbb2.  v0:= ", " @kind object;
  #L21bbb6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bbbc.  v0:= v11 + 1;
  #L21bbc0.  v11:= v12[v11] @kind object;
  #L21bbc4.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bbca.  v11:= v0;
  #L21bbcc.  goto L21bbac;
  #L21bbce.  v11:= 93I;
  #L21bbd2.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bbd8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bbde.  v11:= temp @kind object;
  #L21bbe0.  return v11 @kind object;
  catch `java.lang.Exception` @[L21b9e6..L21b9ee] goto L21b9f2;
}
