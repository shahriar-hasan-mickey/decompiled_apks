record `e.e.a.b.f.u.j0` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/j0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31fcd8.  v0:= constclass @type ^`e.e.a.b.f.u.j0` @kind object;
  #L31fcdc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L31fce2.  v0:= temp @kind object;
  #L31fce4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L31fcea.  v0:= new `e.e.a.b.f.u.j0$a`;
  #L31fcee.  v1:= 0I;
  #L31fcf0.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/j0$a;.<init>:(Le/e/a/b/f/u/k0;)V` @kind direct;
  #L31fcf6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.j0` v0 @kind this) @signature `Le/e/a/b/f/u/j0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31fd08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31fd0e.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/u/j0;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;

  #L31fc8c.  if v0 != 0 then goto L31fc94;
  #L31fc90.  v0:= "" @kind object;
  #L31fc94.  return v0 @kind object;
}
