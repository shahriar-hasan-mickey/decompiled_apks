record `e.e.a.b.f.u.i4` @kind class @AccessFlag FINAL {
}
global `e.e.a.b.f.u.h4` `@@e.e.a.b.f.u.i4.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.u.h4` `@@e.e.a.b.f.u.i4.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/i4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32a93c.  v0:= new `e.e.a.b.f.u.g4`;
  #L32a940.  call `<init>`(v0) @signature `Le/e/a/b/f/u/g4;.<init>:()V` @kind direct;
  #L32a946.  `@@e.e.a.b.f.u.i4.a` @type ^`e.e.a.b.f.u.h4` := v0 @kind object;
  #L32a94a.  call temp:= `c`() @signature `Le/e/a/b/f/u/i4;.c:()Le/e/a/b/f/u/h4;` @kind static;
  #L32a950.  v0:= temp @kind object;
  #L32a952.  `@@e.e.a.b.f.u.i4.b` @type ^`e.e.a.b.f.u.h4` := v0 @kind object;
  #L32a956.  return @kind void;
}
procedure `e.e.a.b.f.u.h4` `a`() @signature `Le/e/a/b/f/u/i4;.a:()Le/e/a/b/f/u/h4;` @AccessFlag STATIC {
    temp;
    v0;

  #L32a8a8.  v0:= `@@e.e.a.b.f.u.i4.a` @type ^`e.e.a.b.f.u.h4` @kind object;
  #L32a8ac.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.h4` `b`() @signature `Le/e/a/b/f/u/i4;.b:()Le/e/a/b/f/u/h4;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32a8c0.  v0:= `@@e.e.a.b.f.u.i4.b` @type ^`e.e.a.b.f.u.h4` @kind object;
  #L32a8c4.  if v0 == 0 then goto L32a8ca;
  #L32a8c8.  return v0 @kind object;
  #L32a8ca.  v0:= new `java.lang.IllegalStateException`;
  #L32a8ce.  v1:= "Protobuf runtime is not correctly loaded." @kind object;
  #L32a8d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32a8d8.  throw v0;
}
procedure `e.e.a.b.f.u.h4` `c`() @signature `Le/e/a/b/f/u/i4;.c:()Le/e/a/b/f/u/h4;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32a8ec.  v0:= "com.google.protobuf.ExtensionSchemaFull" @kind object;
  #L32a8f0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L32a8f6.  v0:= temp @kind object;
  #L32a8f8.  v1:= 0I;
  #L32a8fa.  v2:= new `java.lang.Class`[v1];
  #L32a8fe.  call temp:= `getDeclaredConstructor`(v0, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L32a904.  v0:= temp @kind object;
  #L32a906.  v1:= new `java.lang.Object`[v1];
  #L32a90a.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32a910.  v0:= temp @kind object;
  #L32a912.  v0:= (`e.e.a.b.f.u.h4`) v0 @kind object;
  #L32a916.  return v0 @kind object;
  #L32a918.  v0:= 0I;
  #L32a91a.  return v0 @kind object;
  catch `java.lang.Exception` @[L32a8f0..L32a916] goto L32a918;
}
