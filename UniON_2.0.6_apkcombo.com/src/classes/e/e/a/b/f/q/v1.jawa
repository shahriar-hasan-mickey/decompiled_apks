record `e.e.a.b.f.q.v1` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.q.v1.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.q.v1.c` @AccessFlag PRIVATE;
  `java.util.Iterator` `e.e.a.b.f.q.v1.d` @AccessFlag PRIVATE;
  `e.e.a.b.f.q.x1` `e.e.a.b.f.q.v1.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.v1` v0 @kind this, `e.e.a.b.f.q.x1` v1 @kind object, `e.e.a.b.f.q.q1` v2 @kind object) @signature `Le/e/a/b/f/q/v1;.<init>:(Le/e/a/b/f/q/x1;Le/e/a/b/f/q/q1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2dc554.  v0.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` := v1 @kind object;
  #L2dc558.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dc55e.  v1:= -1I;
  #L2dc560.  v0.`e.e.a.b.f.q.v1.b` @type ^`int` := v1;
  #L2dc564.  return @kind void;
}
procedure `java.util.Iterator` `zza`(`e.e.a.b.f.q.v1` v1 @kind this) @signature `Le/e/a/b/f/q/v1;.zza:()Ljava/util/Iterator;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2dc514.  v0:= v1.`e.e.a.b.f.q.v1.d` @type ^`java.util.Iterator` @kind object;
  #L2dc518.  if v0 != 0 then goto L2dc53c;
  #L2dc51c.  v0:= v1.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc520.  call temp:= `c`(v0) @signature `Le/e/a/b/f/q/x1;.c:(Le/e/a/b/f/q/x1;)Ljava/util/Map;` @kind static;
  #L2dc526.  v0:= temp @kind object;
  #L2dc528.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2dc52e.  v0:= temp @kind object;
  #L2dc530.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2dc536.  v0:= temp @kind object;
  #L2dc538.  v1.`e.e.a.b.f.q.v1.d` @type ^`java.util.Iterator` := v0 @kind object;
  #L2dc53c.  v0:= v1.`e.e.a.b.f.q.v1.d` @type ^`java.util.Iterator` @kind object;
  #L2dc540.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.v1` v4 @kind this) @signature `Le/e/a/b/f/q/v1;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dc444.  v0:= v4.`e.e.a.b.f.q.v1.b` @type ^`int`;
  #L2dc448.  v1:= 1I;
  #L2dc44a.  v0:= v0 + v1 @kind int;
  #L2dc44c.  v2:= v4.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc450.  call temp:= `b`(v2) @signature `Le/e/a/b/f/q/x1;.b:(Le/e/a/b/f/q/x1;)Ljava/util/List;` @kind static;
  #L2dc456.  v2:= temp @kind object;
  #L2dc458.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dc45e.  v2:= temp;
  #L2dc460.  v3:= 0I;
  #L2dc462.  if v0 < v2 then goto L2dc498;
  #L2dc466.  v0:= v4.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc46a.  call temp:= `c`(v0) @signature `Le/e/a/b/f/q/x1;.c:(Le/e/a/b/f/q/x1;)Ljava/util/Map;` @kind static;
  #L2dc470.  v0:= temp @kind object;
  #L2dc472.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2dc478.  v0:= temp;
  #L2dc47a.  if v0 != 0 then goto L2dc496;
  #L2dc47e.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/q/v1;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2dc484.  v0:= temp @kind object;
  #L2dc486.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2dc48c.  v0:= temp;
  #L2dc48e.  if v0 == 0 then goto L2dc494;
  #L2dc492.  goto L2dc498;
  #L2dc494.  return v3;
  #L2dc496.  v1:= 0I;
  #L2dc498.  return v1;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.v1` v2 @kind this) @signature `Le/e/a/b/f/q/v1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2dc4ac.  v0:= 1I;
  #L2dc4ae.  v2.`e.e.a.b.f.q.v1.c` @type ^`boolean` := v0 @kind boolean;
  #L2dc4b2.  v1:= v2.`e.e.a.b.f.q.v1.b` @type ^`int`;
  #L2dc4b6.  v1:= v1 + v0 @kind int;
  #L2dc4b8.  v2.`e.e.a.b.f.q.v1.b` @type ^`int` := v1;
  #L2dc4bc.  v0:= v2.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc4c0.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/x1;.b:(Le/e/a/b/f/q/x1;)Ljava/util/List;` @kind static;
  #L2dc4c6.  v0:= temp @kind object;
  #L2dc4c8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dc4ce.  v0:= temp;
  #L2dc4d0.  if v1 >= v0 then goto L2dc4ee;
  #L2dc4d4.  v0:= v2.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc4d8.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/x1;.b:(Le/e/a/b/f/q/x1;)Ljava/util/List;` @kind static;
  #L2dc4de.  v0:= temp @kind object;
  #L2dc4e0.  v1:= v2.`e.e.a.b.f.q.v1.b` @type ^`int`;
  #L2dc4e4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dc4ea.  v0:= temp @kind object;
  #L2dc4ec.  goto L2dc4fe;
  #L2dc4ee.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/q/v1;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2dc4f4.  v0:= temp @kind object;
  #L2dc4f6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2dc4fc.  v0:= temp @kind object;
  #L2dc4fe.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2dc502.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.q.v1` v3 @kind this) @signature `Le/e/a/b/f/q/v1;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2dc578.  v0:= v3.`e.e.a.b.f.q.v1.c` @type ^`boolean` @kind boolean;
  #L2dc57c.  if v0 == 0 then goto L2dc5d4;
  #L2dc580.  v0:= 0I;
  #L2dc582.  v3.`e.e.a.b.f.q.v1.c` @type ^`boolean` := v0 @kind boolean;
  #L2dc586.  v0:= v3.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc58a.  call `a`(v0) @signature `Le/e/a/b/f/q/x1;.a:(Le/e/a/b/f/q/x1;)V` @kind static;
  #L2dc590.  v0:= v3.`e.e.a.b.f.q.v1.b` @type ^`int`;
  #L2dc594.  v1:= v3.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc598.  call temp:= `b`(v1) @signature `Le/e/a/b/f/q/x1;.b:(Le/e/a/b/f/q/x1;)Ljava/util/List;` @kind static;
  #L2dc59e.  v1:= temp @kind object;
  #L2dc5a0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dc5a6.  v1:= temp;
  #L2dc5a8.  if v0 >= v1 then goto L2dc5c4;
  #L2dc5ac.  v0:= v3.`e.e.a.b.f.q.v1.e` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dc5b0.  v1:= v3.`e.e.a.b.f.q.v1.b` @type ^`int`;
  #L2dc5b4.  v2:= v1 + -1;
  #L2dc5b8.  v3.`e.e.a.b.f.q.v1.b` @type ^`int` := v2;
  #L2dc5bc.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/x1;.a:(Le/e/a/b/f/q/x1;I)Ljava/lang/Object;` @kind static;
  #L2dc5c2.  return @kind void;
  #L2dc5c4.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/q/v1;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2dc5ca.  v0:= temp @kind object;
  #L2dc5cc.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2dc5d2.  return @kind void;
  #L2dc5d4.  v0:= new `java.lang.IllegalStateException`;
  #L2dc5d8.  v1:= "remove() was called before next()" @kind object;
  #L2dc5dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dc5e2.  throw v0;
}
