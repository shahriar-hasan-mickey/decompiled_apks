record `e.e.a.b.f.k.w0` @kind class @AccessFlag  extends `e.e.a.b.f.k.x0` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.k.w0.a` @AccessFlag ;
  `int` `e.e.a.b.f.k.w0.b` @AccessFlag ;
  `boolean` `e.e.a.b.f.k.w0.c` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.a.b.f.k.w0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/k/w0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L245f58.  call `<init>`(v0) @signature `Le/e/a/b/f/k/x0;.<init>:()V` @kind direct;
  #L245f5e.  v1:= 4I;
  #L245f60.  v1:= new `java.lang.Object`[v1];
  #L245f64.  v0.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L245f68.  v1:= 0I;
  #L245f6a.  v0.`e.e.a.b.f.k.w0.b` @type ^`int` := v1;
  #L245f6e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.k.w0` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/k/w0;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L245f80.  v0:= v4.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] @kind object;
  #L245f84.  v1:= length @variable v0;
  #L245f86.  v2:= 0I;
  #L245f88.  if v1 >= v5 then goto L245fc6;
  #L245f8c.  v3:= v1 ^> 1;
  #L245f90.  v1:= v1 + v3 @kind int;
  #L245f92.  v1:= v1 + 1;
  #L245f96.  if v1 >= v5 then goto L245faa;
  #L245f9a.  v5:= v5 + -1;
  #L245f9e.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L245fa4.  v5:= temp;
  #L245fa6.  v1:= v5 + v5 @kind int;
  #L245faa.  if v1 >= 0 then goto L245fb4;
  #L245fae.  v1:= 2147483647I;
  #L245fb4.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L245fba.  v5:= temp @kind object;
  #L245fbc.  v4.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L245fc0.  v4.`e.e.a.b.f.k.w0.c` @type ^`boolean` := v2 @kind boolean;
  #L245fc4.  return @kind void;
  #L245fc6.  v5:= v4.`e.e.a.b.f.k.w0.c` @type ^`boolean` @kind boolean;
  #L245fca.  if v5 == 0 then goto L245fe0;
  #L245fce.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L245fd4.  v5:= temp @kind object;
  #L245fd6.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L245fda.  v4.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L245fde.  goto L245fc0;
  #L245fe0.  return @kind void;
}
procedure `e.e.a.b.f.k.x0` `a`(`e.e.a.b.f.k.w0` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Le/e/a/b/f/k/w0;.a:(Ljava/lang/Iterable;)Le/e/a/b/f/k/x0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L245ee0.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L245ee4.  if v0 == 0 then goto L245f20;
  #L245ee8.  v0:= v2.`e.e.a.b.f.k.w0.b` @type ^`int`;
  #L245eec.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L245ef2.  v1:= temp;
  #L245ef4.  v0:= v0 + v1 @kind int;
  #L245ef6.  call `a`(v2, v0) @signature `Le/e/a/b/f/k/w0;.a:(I)V` @kind direct;
  #L245efc.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.k.y0` @kind boolean;
  #L245f00.  if v0 != 0 then goto L245f06;
  #L245f04.  goto L245f20;
  #L245f06.  v3:= (`e.e.a.b.f.k.y0`) v3 @kind object;
  #L245f0a.  v0:= v2.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] @kind object;
  #L245f0e.  v1:= v2.`e.e.a.b.f.k.w0.b` @type ^`int`;
  #L245f12.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/k/y0;.a:([Ljava/lang/Object;I)I` @kind virtual;
  #L245f18.  v3:= temp;
  #L245f1a.  v2.`e.e.a.b.f.k.w0.b` @type ^`int` := v3;
  #L245f1e.  return v2 @kind object;
  #L245f20.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L245f26.  v3:= temp @kind object;
  #L245f28.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L245f2e.  v0:= temp;
  #L245f30.  if v0 == 0 then goto L245f44;
  #L245f34.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L245f3a.  v0:= temp @kind object;
  #L245f3c.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/k/x0;.a:(Ljava/lang/Object;)Le/e/a/b/f/k/x0;` @kind virtual;
  #L245f42.  goto L245f28;
  #L245f44.  return v2 @kind object;
}
procedure `e.e.a.b.f.k.w0` `b`(`e.e.a.b.f.k.w0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/w0;.b:(Ljava/lang/Object;)Le/e/a/b/f/k/w0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L245ea4.  if v4 == 0 then goto L245ecc;
  #L245ea8.  v0:= v3.`e.e.a.b.f.k.w0.b` @type ^`int`;
  #L245eac.  v0:= v0 + 1;
  #L245eb0.  call `a`(v3, v0) @signature `Le/e/a/b/f/k/w0;.a:(I)V` @kind direct;
  #L245eb6.  v0:= v3.`e.e.a.b.f.k.w0.a` @type ^`java.lang.Object`[] @kind object;
  #L245eba.  v1:= v3.`e.e.a.b.f.k.w0.b` @type ^`int`;
  #L245ebe.  v2:= v1 + 1;
  #L245ec2.  v3.`e.e.a.b.f.k.w0.b` @type ^`int` := v2;
  #L245ec6.  v0[v1]:= v4 @kind object;
  #L245eca.  return v3 @kind object;
  #L245ecc.  v4:= 0I;
  #L245ece.  throw v4;
}
