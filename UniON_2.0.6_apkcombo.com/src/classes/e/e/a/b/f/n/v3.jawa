record `e.e.a.b.f.n.v3` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.q0` @kind class {
  `int` `e.e.a.b.f.n.v3.e` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.n.q0` `e.e.a.b.f.n.v3.f` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.n.q0` `e.e.a.b.f.n.v3.g` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.n.v3.h` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.n.v3.i` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@e.e.a.b.f.n.v3.j` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/v3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L28924c.  v0:= 47I;
  #L289250.  v0:= new `int`[v0];
  #L289254.  goto L289260;
  #L28925a.  `@@e.e.a.b.f.n.v3.j` @type ^`int`[] := v0 @kind object;
  #L28925e.  return @kind void;
  #L289260.  v0:= (1I, 1I, 2I, 3I, 5I, 8I, 13I, 21I, 34I, 55I, 89I, 144I, 233I, 377I, 610I, 987I, 1597I, 2584I, 4181I, 6765I, 10946I, 17711I, 28657I, 46368I, 75025I, 121393I, 196418I, 317811I, 514229I, 832040I, 1346269I, 2178309I, 3524578I, 5702887I, 9227465I, 14930352I, 24157817I, 39088169I, 63245986I, 102334155I, 165580141I, 267914296I, 433494437I, 701408733I, 1134903170I, 1836311903I, 2147483647I) @kind object;
  #L289323.  goto L28925a;
}
procedure `void` `<init>`(`e.e.a.b.f.n.v3` v2 @kind this, `e.e.a.b.f.n.q0` v3 @kind object, `e.e.a.b.f.n.q0` v4 @kind object) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L289334.  call `<init>`(v2) @signature `Le/e/a/b/f/n/q0;.<init>:()V` @kind direct;
  #L28933a.  v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` := v3 @kind object;
  #L28933e.  v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` := v4 @kind object;
  #L289342.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L289348.  v0:= temp;
  #L28934a.  v2.`e.e.a.b.f.n.v3.h` @type ^`int` := v0;
  #L28934e.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L289354.  v1:= temp;
  #L289356.  v0:= v0 + v1 @kind int;
  #L289358.  v2.`e.e.a.b.f.n.v3.e` @type ^`int` := v0;
  #L28935c.  call temp:= `b`(v3) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L289362.  v3:= temp;
  #L289364.  call temp:= `b`(v4) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L28936a.  v4:= temp;
  #L28936c.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L289372.  v3:= temp;
  #L289374.  v3:= v3 + 1;
  #L289378.  v2.`e.e.a.b.f.n.v3.i` @type ^`int` := v3;
  #L28937c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.v3` v0 @kind this, `e.e.a.b.f.n.q0` v1 @kind object, `e.e.a.b.f.n.q0` v2 @kind object, `e.e.a.b.f.n.s3` v3 @kind object) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;Le/e/a/b/f/n/s3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L289390.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L289396.  return @kind void;
}
procedure `e.e.a.b.f.n.q0` `a`(`e.e.a.b.f.n.q0` v4 @kind object, `e.e.a.b.f.n.q0` v5 @kind object) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L288eac.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288eb2.  v0:= temp;
  #L288eb4.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288eba.  v1:= temp;
  #L288ebc.  v2:= v0 + v1 @kind int;
  #L288ec0.  v2:= new `byte`[v2];
  #L288ec4.  v3:= 0I;
  #L288ec6.  call `b`(v4, v2, v3, v3, v0) @signature `Le/e/a/b/f/n/q0;.b:([BIII)V` @kind virtual;
  #L288ecc.  call `b`(v5, v2, v3, v0, v1) @signature `Le/e/a/b/f/n/q0;.b:([BIII)V` @kind virtual;
  #L288ed2.  v4:= new `e.e.a.b.f.n.o0`;
  #L288ed6.  call `<init>`(v4, v2) @signature `Le/e/a/b/f/n/o0;.<init>:([B)V` @kind direct;
  #L288edc.  return v4 @kind object;
}
procedure `e.e.a.b.f.n.q0` `a`(`e.e.a.b.f.n.v3` v0 @kind object) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/v3;)Le/e/a/b/f/n/q0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2890ac.  v0:= v0.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2890b0.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.q0` `b`(`e.e.a.b.f.n.q0` v5 @kind object, `e.e.a.b.f.n.q0` v6 @kind object) @signature `Le/e/a/b/f/n/v3;.b:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L288ef0.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288ef6.  v0:= temp;
  #L288ef8.  if v0 != 0 then goto L288efe;
  #L288efc.  return v5 @kind object;
  #L288efe.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288f04.  v0:= temp;
  #L288f06.  if v0 != 0 then goto L288f0c;
  #L288f0a.  return v6 @kind object;
  #L288f0c.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288f12.  v0:= temp;
  #L288f14.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288f1a.  v1:= temp;
  #L288f1c.  v0:= v0 + v1 @kind int;
  #L288f1e.  v1:= 128I;
  #L288f22.  if v0 >= v1 then goto L288f30;
  #L288f26.  call temp:= `a`(v5, v6) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @kind static;
  #L288f2c.  v5:= temp @kind object;
  #L288f2e.  return v5 @kind object;
  #L288f30.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.n.v3` @kind boolean;
  #L288f34.  if v2 == 0 then goto L288fc0;
  #L288f38.  v2:= v5 @kind object;
  #L288f3a.  v2:= (`e.e.a.b.f.n.v3`) v2 @kind object;
  #L288f3e.  v3:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288f42.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288f48.  v3:= temp;
  #L288f4a.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288f50.  v4:= temp;
  #L288f52.  v3:= v3 + v4 @kind int;
  #L288f54.  if v3 >= v1 then goto L288f74;
  #L288f58.  v5:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288f5c.  call temp:= `a`(v5, v6) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @kind static;
  #L288f62.  v5:= temp @kind object;
  #L288f64.  v6:= new `e.e.a.b.f.n.v3`;
  #L288f68.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288f6c.  call `<init>`(v6, v0, v5) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L288f72.  return v6 @kind object;
  #L288f74.  v1:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288f78.  call temp:= `b`(v1) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L288f7e.  v1:= temp;
  #L288f80.  v3:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288f84.  call temp:= `b`(v3) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L288f8a.  v3:= temp;
  #L288f8c.  if v1 <= v3 then goto L288fc0;
  #L288f90.  v1:= v2.`e.e.a.b.f.n.v3.i` @type ^`int`;
  #L288f94.  call temp:= `b`(v6) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L288f9a.  v3:= temp;
  #L288f9c.  if v1 > v3 then goto L288fa2;
  #L288fa0.  goto L288fc0;
  #L288fa2.  v5:= new `e.e.a.b.f.n.v3`;
  #L288fa6.  v0:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288faa.  call `<init>`(v5, v0, v6) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L288fb0.  v6:= new `e.e.a.b.f.n.v3`;
  #L288fb4.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288fb8.  call `<init>`(v6, v0, v5) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L288fbe.  return v6 @kind object;
  #L288fc0.  call temp:= `b`(v5) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L288fc6.  v1:= temp;
  #L288fc8.  call temp:= `b`(v6) @signature `Le/e/a/b/f/n/q0;.b:()I` @kind virtual;
  #L288fce.  v2:= temp;
  #L288fd0.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L288fd6.  v1:= temp;
  #L288fd8.  v1:= v1 + 1;
  #L288fdc.  call temp:= `e`(v1) @signature `Le/e/a/b/f/n/v3;.e:(I)I` @kind static;
  #L288fe2.  v1:= temp;
  #L288fe4.  if v0 < v1 then goto L288ff4;
  #L288fe8.  v0:= new `e.e.a.b.f.n.v3`;
  #L288fec.  call `<init>`(v0, v5, v6) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L288ff2.  return v0 @kind object;
  #L288ff4.  v0:= new `e.e.a.b.f.n.t3`;
  #L288ff8.  v1:= 0I;
  #L288ffa.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/t3;.<init>:(Le/e/a/b/f/n/s3;)V` @kind direct;
  #L289000.  call temp:= `a`(v0, v5, v6) @signature `Le/e/a/b/f/n/t3;.a:(Le/e/a/b/f/n/t3;Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/q0;` @kind static;
  #L289006.  v5:= temp @kind object;
  #L289008.  return v5 @kind object;
}
procedure `e.e.a.b.f.n.q0` `b`(`e.e.a.b.f.n.v3` v0 @kind object) @signature `Le/e/a/b/f/n/v3;.b:(Le/e/a/b/f/n/v3;)Le/e/a/b/f/n/q0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2890c4.  v0:= v0.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2890c8.  return v0 @kind object;
}
procedure `int` `e`(`int` v2 ) @signature `Le/e/a/b/f/n/v3;.e:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L28910c.  v0:= `@@e.e.a.b.f.n.v3.j` @type ^`int`[] @kind object;
  #L289110.  v1:= length @variable v0;
  #L289112.  v1:= 47I;
  #L289116.  if v2 < v1 then goto L289122;
  #L28911a.  v2:= 2147483647I;
  #L289120.  return v2;
  #L289122.  v2:= v0[v2];
  #L289126.  return v2;
}
procedure `byte` `a`(`e.e.a.b.f.n.v3` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/v3;.a:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L288e34.  v0:= v1.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L288e38.  call `b`(v2, v0) @signature `Le/e/a/b/f/n/q0;.b:(II)V` @kind static;
  #L288e3e.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/n/v3;.b:(I)B` @kind virtual;
  #L288e44.  v2:= temp;
  #L288e46.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.n.v3` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/v3;.a:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L289138.  v0:= v2.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L28913c.  v1:= v4 + v5 @kind int;
  #L289140.  if v1 > v0 then goto L289152;
  #L289144.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289148.  call temp:= `a`(v0, v3, v4, v5) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L28914e.  v3:= temp;
  #L289150.  return v3;
  #L289152.  if v4 < v0 then goto L289166;
  #L289156.  v1:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L28915a.  v4:= v4 - v0 @kind int;
  #L28915c.  call temp:= `a`(v1, v3, v4, v5) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L289162.  v3:= temp;
  #L289164.  return v3;
  #L289166.  v0:= v0 - v4 @kind int;
  #L289168.  v1:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L28916c.  call temp:= `a`(v1, v3, v4, v0) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L289172.  v3:= temp;
  #L289174.  v4:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289178.  v1:= 0I;
  #L28917a.  v5:= v5 - v0 @kind int;
  #L28917c.  call temp:= `a`(v4, v3, v1, v5) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L289182.  v3:= temp;
  #L289184.  return v3;
}
procedure `e.e.a.b.f.n.q0` `a`(`e.e.a.b.f.n.v3` v3 @kind this, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/v3;.a:(II)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28901c.  v0:= v3.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L289020.  call temp:= `c`(v4, v5, v0) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @kind static;
  #L289026.  v0:= temp;
  #L289028.  if v0 != 0 then goto L289032;
  #L28902c.  v4:= `@@e.e.a.b.f.n.q0.c` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289030.  return v4 @kind object;
  #L289032.  v1:= v3.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L289036.  if v0 != v1 then goto L28903c;
  #L28903a.  return v3 @kind object;
  #L28903c.  v0:= v3.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L289040.  if v5 > v0 then goto L289052;
  #L289044.  v0:= v3.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289048.  call temp:= `a`(v0, v4, v5) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L28904e.  v4:= temp @kind object;
  #L289050.  return v4 @kind object;
  #L289052.  if v4 < v0 then goto L289068;
  #L289056.  v1:= v3.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L28905a.  v4:= v4 - v0 @kind int;
  #L28905c.  v5:= v5 - v0 @kind int;
  #L28905e.  call temp:= `a`(v1, v4, v5) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L289064.  v4:= temp @kind object;
  #L289066.  return v4 @kind object;
  #L289068.  v0:= v3.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L28906c.  call temp:= `d`(v0) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L289072.  v1:= temp;
  #L289074.  call temp:= `a`(v0, v4, v1) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L28907a.  v4:= temp @kind object;
  #L28907c.  v0:= v3.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289080.  v1:= v3.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L289084.  v2:= 0I;
  #L289086.  v5:= v5 - v1 @kind int;
  #L289088.  call temp:= `a`(v0, v2, v5) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L28908e.  v5:= temp @kind object;
  #L289090.  v0:= new `e.e.a.b.f.n.v3`;
  #L289094.  call `<init>`(v0, v4, v5) @signature `Le/e/a/b/f/n/v3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/q0;)V` @kind direct;
  #L28909a.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.n.v3` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Le/e/a/b/f/n/v3;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2891f8.  v0:= new `java.lang.String`;
  #L2891fc.  v1:= v4.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L289200.  if v1 != 0 then goto L28920a;
  #L289204.  v1:= `@@e.e.a.b.f.n.e2.b` @type ^`byte`[] @kind object;
  #L289208.  goto L289218;
  #L28920a.  v2:= new `byte`[v1];
  #L28920e.  v3:= 0I;
  #L289210.  call `a`(v4, v2, v3, v3, v1) @signature `Le/e/a/b/f/n/v3;.a:([BIII)V` @kind virtual;
  #L289216.  v1:= v2 @kind object;
  #L289218.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L28921e.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.v3` v1 @kind this, `e.e.a.b.f.n.e0` v2 @kind object) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/e0;)V` @AccessFlag FINAL {
    temp;
    v0;

  #L289400.  v0:= v1.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L289404.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/q0;.a:(Le/e/a/b/f/n/e0;)V` @kind virtual;
  #L28940a.  v0:= v1.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L28940e.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/q0;.a:(Le/e/a/b/f/n/e0;)V` @kind virtual;
  #L289414.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.v3` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/n/v3;.a:([BIII)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L2893a8.  v0:= v2.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L2893ac.  v1:= v4 + v6 @kind int;
  #L2893b0.  if v1 > v0 then goto L2893c0;
  #L2893b4.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2893b8.  call `a`(v0, v3, v4, v5, v6) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @kind virtual;
  #L2893be.  return @kind void;
  #L2893c0.  if v4 < v0 then goto L2893d2;
  #L2893c4.  v1:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2893c8.  v4:= v4 - v0 @kind int;
  #L2893ca.  call `a`(v1, v3, v4, v5, v6) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @kind virtual;
  #L2893d0.  return @kind void;
  #L2893d2.  v0:= v0 - v4 @kind int;
  #L2893d4.  v1:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2893d8.  call `a`(v1, v3, v4, v5, v0) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @kind virtual;
  #L2893de.  v4:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2893e2.  v1:= 0I;
  #L2893e4.  v5:= v5 + v0 @kind int;
  #L2893e6.  v6:= v6 - v0 @kind int;
  #L2893e8.  call `a`(v4, v3, v1, v5, v6) @signature `Le/e/a/b/f/n/q0;.a:([BIII)V` @kind virtual;
  #L2893ee.  return @kind void;
}
procedure `byte` `b`(`e.e.a.b.f.n.v3` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/n/v3;.b:(I)B` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L288e58.  v0:= v2.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L288e5c.  if v3 >= v0 then goto L288e6e;
  #L288e60.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288e64.  call temp:= `b`(v0, v3) @signature `Le/e/a/b/f/n/q0;.b:(I)B` @kind virtual;
  #L288e6a.  v3:= temp;
  #L288e6c.  return v3;
  #L288e6e.  v1:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288e72.  v3:= v3 - v0 @kind int;
  #L288e74.  call temp:= `b`(v1, v3) @signature `Le/e/a/b/f/n/q0;.b:(I)B` @kind virtual;
  #L288e7a.  v3:= temp;
  #L288e7c.  return v3;
}
procedure `int` `b`(`e.e.a.b.f.n.v3` v1 @kind this) @signature `Le/e/a/b/f/n/v3;.b:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2890f4.  v0:= v1.`e.e.a.b.f.n.v3.i` @type ^`int`;
  #L2890f8.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.n.v3` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/v3;.b:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L289198.  v0:= v2.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L28919c.  v1:= v4 + v5 @kind int;
  #L2891a0.  if v1 > v0 then goto L2891b2;
  #L2891a4.  v0:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2891a8.  call temp:= `b`(v0, v3, v4, v5) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @kind virtual;
  #L2891ae.  v3:= temp;
  #L2891b0.  return v3;
  #L2891b2.  if v4 < v0 then goto L2891c6;
  #L2891b6.  v1:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2891ba.  v4:= v4 - v0 @kind int;
  #L2891bc.  call temp:= `b`(v1, v3, v4, v5) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @kind virtual;
  #L2891c2.  v3:= temp;
  #L2891c4.  return v3;
  #L2891c6.  v0:= v0 - v4 @kind int;
  #L2891c8.  v1:= v2.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2891cc.  call temp:= `b`(v1, v3, v4, v0) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @kind virtual;
  #L2891d2.  v3:= temp;
  #L2891d4.  v4:= v2.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L2891d8.  v1:= 0I;
  #L2891da.  v5:= v5 - v0 @kind int;
  #L2891dc.  call temp:= `b`(v4, v3, v1, v5) @signature `Le/e/a/b/f/n/q0;.b:(III)I` @kind virtual;
  #L2891e2.  v3:= temp;
  #L2891e4.  return v3;
}
procedure `int` `d`(`e.e.a.b.f.n.v3` v1 @kind this) @signature `Le/e/a/b/f/n/v3;.d:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2890dc.  v0:= v1.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L2890e0.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.v3` v12 @kind this, `java.lang.Object` v13 @kind object) @signature `Le/e/a/b/f/n/v3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L288cb8.  v0:= 1I;
  #L288cba.  if v13 != v12 then goto L288cc0;
  #L288cbe.  return v0;
  #L288cc0.  v1:= instanceof @variable v13 @type ^`e.e.a.b.f.n.q0` @kind boolean;
  #L288cc4.  v2:= 0I;
  #L288cc6.  if v1 != 0 then goto L288ccc;
  #L288cca.  return v2;
  #L288ccc.  v13:= (`e.e.a.b.f.n.q0`) v13 @kind object;
  #L288cd0.  v1:= v12.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L288cd4.  call temp:= `d`(v13) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288cda.  v3:= temp;
  #L288cdc.  if v1 == v3 then goto L288ce2;
  #L288ce0.  return v2;
  #L288ce2.  v1:= v12.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L288ce6.  if v1 != 0 then goto L288cec;
  #L288cea.  return v0;
  #L288cec.  call temp:= `h`(v12) @signature `Le/e/a/b/f/n/q0;.h:()I` @kind virtual;
  #L288cf2.  v1:= temp;
  #L288cf4.  call temp:= `h`(v13) @signature `Le/e/a/b/f/n/q0;.h:()I` @kind virtual;
  #L288cfa.  v3:= temp;
  #L288cfc.  if v1 == 0 then goto L288d0c;
  #L288d00.  if v3 == 0 then goto L288d0c;
  #L288d04.  if v1 != v3 then goto L288d0a;
  #L288d08.  goto L288d0c;
  #L288d0a.  return v2;
  #L288d0c.  v1:= new `e.e.a.b.f.n.u3`;
  #L288d10.  v3:= 0I;
  #L288d12.  call `<init>`(v1, v12, v3) @signature `Le/e/a/b/f/n/u3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/s3;)V` @kind direct;
  #L288d18.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288d1e.  v4:= temp @kind object;
  #L288d20.  v5:= new `e.e.a.b.f.n.u3`;
  #L288d24.  call `<init>`(v5, v13, v3) @signature `Le/e/a/b/f/n/u3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/s3;)V` @kind direct;
  #L288d2a.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288d30.  v13:= temp @kind object;
  #L288d32.  v3:= v13 @kind object;
  #L288d34.  v13:= 0I;
  #L288d36.  v6:= 0I;
  #L288d38.  v7:= 0I;
  #L288d3a.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288d40.  v8:= temp;
  #L288d42.  v8:= v8 - v13 @kind int;
  #L288d44.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288d4a.  v9:= temp;
  #L288d4c.  v9:= v9 - v6 @kind int;
  #L288d4e.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L288d54.  v10:= temp;
  #L288d56.  if v13 != 0 then goto L288d64;
  #L288d5a.  call temp:= `a`(v4, v3, v6, v10) @signature `Le/e/a/b/f/n/n0;.a:(Le/e/a/b/f/n/q0;II)Z` @kind virtual;
  #L288d60.  v11:= temp;
  #L288d62.  goto L288d6c;
  #L288d64.  call temp:= `a`(v3, v4, v13, v10) @signature `Le/e/a/b/f/n/n0;.a:(Le/e/a/b/f/n/q0;II)Z` @kind virtual;
  #L288d6a.  v11:= temp;
  #L288d6c.  if v11 != 0 then goto L288d74;
  #L288d70.  v0:= 0I;
  #L288d72.  goto L288d82;
  #L288d74.  v7:= v7 + v10 @kind int;
  #L288d76.  v11:= v12.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L288d7a.  if v7 < v11 then goto L288d90;
  #L288d7e.  if v7 != v11 then goto L288d84;
  #L288d82.  return v0;
  #L288d84.  v13:= new `java.lang.IllegalStateException`;
  #L288d88.  call `<init>`(v13) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L288d8e.  throw v13;
  #L288d90.  if v10 != v8 then goto L288da2;
  #L288d94.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288d9a.  v13:= temp @kind object;
  #L288d9c.  v4:= v13 @kind object;
  #L288d9e.  v13:= 0I;
  #L288da0.  goto L288da4;
  #L288da2.  v13:= v13 + v10 @kind int;
  #L288da4.  if v10 != v9 then goto L288db4;
  #L288da8.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288dae.  v3:= temp @kind object;
  #L288db0.  v6:= 0I;
  #L288db2.  goto L288d3a;
  #L288db4.  v6:= v6 + v10 @kind int;
  #L288db6.  goto L288d3a;
}
procedure `boolean` `f`(`e.e.a.b.f.n.v3` v4 @kind this) @signature `Le/e/a/b/f/n/v3;.f:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L288df4.  v0:= v4.`e.e.a.b.f.n.v3.f` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288df8.  v1:= v4.`e.e.a.b.f.n.v3.h` @type ^`int`;
  #L288dfc.  v2:= 0I;
  #L288dfe.  call temp:= `a`(v0, v2, v2, v1) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L288e04.  v0:= temp;
  #L288e06.  v1:= v4.`e.e.a.b.f.n.v3.g` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L288e0a.  call temp:= `d`(v1) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288e10.  v3:= temp;
  #L288e12.  call temp:= `a`(v1, v0, v2, v3) @signature `Le/e/a/b/f/n/q0;.a:(III)I` @kind virtual;
  #L288e18.  v0:= temp;
  #L288e1a.  if v0 != 0 then goto L288e22;
  #L288e1e.  v0:= 1I;
  #L288e20.  return v0;
  #L288e22.  return v2;
}
procedure `e.e.a.b.f.n.l0` `g`(`e.e.a.b.f.n.v3` v1 @kind this) @signature `Le/e/a/b/f/n/v3;.g:()Le/e/a/b/f/n/l0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L288e90.  v0:= new `e.e.a.b.f.n.s3`;
  #L288e94.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/s3;.<init>:(Le/e/a/b/f/n/v3;)V` @kind direct;
  #L288e9a.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.n.v3` v1 @kind this) @signature `Le/e/a/b/f/n/v3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L289230.  v0:= new `e.e.a.b.f.n.s3`;
  #L289234.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/s3;.<init>:(Le/e/a/b/f/n/v3;)V` @kind direct;
  #L28923a.  return v0 @kind object;
}
procedure `boolean` `u`(`e.e.a.b.f.n.v3` v2 @kind this) @signature `Le/e/a/b/f/n/v3;.u:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L288dc8.  v0:= v2.`e.e.a.b.f.n.v3.e` @type ^`int`;
  #L288dcc.  v1:= v2.`e.e.a.b.f.n.v3.i` @type ^`int`;
  #L288dd0.  call temp:= `e`(v1) @signature `Le/e/a/b/f/n/v3;.e:(I)I` @kind static;
  #L288dd6.  v1:= temp;
  #L288dd8.  if v0 < v1 then goto L288de0;
  #L288ddc.  v0:= 1I;
  #L288dde.  return v0;
  #L288de0.  v0:= 0I;
  #L288de2.  return v0;
}
