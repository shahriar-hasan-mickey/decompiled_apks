record `e.e.a.b.f.u.w6` @kind class @AccessFlag  extends `java.util.AbstractMap` @kind class {
  `int` `e.e.a.b.f.u.w6.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.e.a.b.f.u.w6.c` @AccessFlag PRIVATE;
  `java.util.Map` `e.e.a.b.f.u.w6.d` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.u.w6.e` @AccessFlag PRIVATE;
  `e.e.a.b.f.u.d7` `e.e.a.b.f.u.w6.f` @AccessFlag PRIVATE_VOLATILE;
  `java.util.Map` `e.e.a.b.f.u.w6.g` @AccessFlag PRIVATE;
  `e.e.a.b.f.u.x6` `e.e.a.b.f.u.w6.h` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`e.e.a.b.f.u.w6` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/u/w6;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L339d14.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L339d1a.  v0.`e.e.a.b.f.u.w6.b` @type ^`int` := v1;
  #L339d1e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L339d24.  v1:= temp @kind object;
  #L339d26.  v0.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` := v1 @kind object;
  #L339d2a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L339d30.  v1:= temp @kind object;
  #L339d32.  v0.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` := v1 @kind object;
  #L339d36.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L339d3c.  v1:= temp @kind object;
  #L339d3e.  v0.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` := v1 @kind object;
  #L339d42.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.w6` v0 @kind this, `int` v1 , `e.e.a.b.f.u.v6` v2 @kind object) @signature `Le/e/a/b/f/u/w6;.<init>:(ILe/e/a/b/f/u/v6;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L339d54.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/w6;.<init>:(I)V` @kind direct;
  #L339d5a.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.u.w6` v4 @kind this, `java.lang.Comparable` v5 @kind object) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L339898.  v0:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L33989c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3398a2.  v0:= temp;
  #L3398a4.  v0:= v0 + -1;
  #L3398a8.  if v0 < 0 then goto L3398e2;
  #L3398ac.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L3398b0.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3398b6.  v1:= temp @kind object;
  #L3398b8.  v1:= (`e.e.a.b.f.u.b7`) v1 @kind object;
  #L3398bc.  call temp:= `getKey`(v1) @signature `Le/e/a/b/f/u/b7;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3398c2.  v1:= temp @kind object;
  #L3398c4.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L3398c8.  call temp:= `compareTo`(v5, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L3398ce.  v1:= temp;
  #L3398d0.  if v1 <= 0 then goto L3398dc;
  #L3398d4.  v0:= v0 + 2;
  #L3398d8.  v5:= -v0 @kind int;
  #L3398da.  return v5;
  #L3398dc.  if v1 != 0 then goto L3398e2;
  #L3398e0.  return v0;
  #L3398e2.  v1:= 0I;
  #L3398e4.  if v1 > v0 then goto L33992a;
  #L3398e8.  v2:= v1 + v0 @kind int;
  #L3398ec.  v2:= v2 / 2;
  #L3398f0.  v3:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L3398f4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3398fa.  v3:= temp @kind object;
  #L3398fc.  v3:= (`e.e.a.b.f.u.b7`) v3 @kind object;
  #L339900.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/u/b7;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L339906.  v3:= temp @kind object;
  #L339908.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L33990c.  call temp:= `compareTo`(v5, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L339912.  v3:= temp;
  #L339914.  if v3 >= 0 then goto L33991e;
  #L339918.  v0:= v2 + -1;
  #L33991c.  goto L3398e4;
  #L33991e.  if v3 <= 0 then goto L339928;
  #L339922.  v1:= v2 + 1;
  #L339926.  goto L3398e4;
  #L339928.  return v2;
  #L33992a.  v1:= v1 + 1;
  #L33992e.  v5:= -v1 @kind int;
  #L339930.  return v5;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.u.w6` v0 @kind object, `int` v1 ) @signature `Le/e/a/b/f/u/w6;.a:(Le/e/a/b/f/u/w6;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L339a58.  call temp:= `c`(v0, v1) @signature `Le/e/a/b/f/u/w6;.c:(I)Ljava/lang/Object;` @kind direct;
  #L339a5e.  v0:= temp @kind object;
  #L339a60.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.w6` v0 @kind object) @signature `Le/e/a/b/f/u/w6;.a:(Le/e/a/b/f/u/w6;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L339e2c.  call `f`(v0) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339e32.  return @kind void;
}
procedure `e.e.a.b.f.u.w6` `b`(`int` v1 ) @signature `Le/e/a/b/f/u/w6;.b:(I)Le/e/a/b/f/u/w6;` @AccessFlag STATIC {
    temp;
    v0;

  #L3397f0.  v0:= new `e.e.a.b.f.u.v6`;
  #L3397f4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/v6;.<init>:(I)V` @kind direct;
  #L3397fa.  return v0 @kind object;
}
procedure `java.util.List` `b`(`e.e.a.b.f.u.w6` v0 @kind object) @signature `Le/e/a/b/f/u/w6;.b:(Le/e/a/b/f/u/w6;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L339be8.  v0:= v0.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339bec.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`e.e.a.b.f.u.w6` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/u/w6;.c:(I)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L339b68.  call `f`(v4) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339b6e.  v0:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339b72.  call temp:= `remove`(v0, v5) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L339b78.  v5:= temp @kind object;
  #L339b7a.  v5:= (`e.e.a.b.f.u.b7`) v5 @kind object;
  #L339b7e.  call temp:= `getValue`(v5) @signature `Le/e/a/b/f/u/b7;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L339b84.  v5:= temp @kind object;
  #L339b86.  v0:= v4.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339b8a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339b90.  v0:= temp;
  #L339b92.  if v0 != 0 then goto L339bd4;
  #L339b96.  call temp:= `g`(v4) @signature `Le/e/a/b/f/u/w6;.g:()Ljava/util/SortedMap;` @kind direct;
  #L339b9c.  v0:= temp @kind object;
  #L339b9e.  call temp:= `entrySet`(v0) @signature `Ljava/util/SortedMap;.entrySet:()Ljava/util/Set;` @kind interface;
  #L339ba4.  v0:= temp @kind object;
  #L339ba6.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L339bac.  v0:= temp @kind object;
  #L339bae.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339bb2.  v2:= new `e.e.a.b.f.u.b7`;
  #L339bb6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L339bbc.  v3:= temp @kind object;
  #L339bbe.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L339bc2.  call `<init>`(v2, v4, v3) @signature `Le/e/a/b/f/u/b7;.<init>:(Le/e/a/b/f/u/w6;Ljava/util/Map$Entry;)V` @kind direct;
  #L339bc8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L339bce.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L339bd4.  return v5 @kind object;
}
procedure `java.util.Map` `c`(`e.e.a.b.f.u.w6` v0 @kind object) @signature `Le/e/a/b/f/u/w6;.c:(Le/e/a/b/f/u/w6;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L339c00.  v0:= v0.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339c04.  return v0 @kind object;
}
procedure `java.util.Map` `d`(`e.e.a.b.f.u.w6` v0 @kind object) @signature `Le/e/a/b/f/u/w6;.d:(Le/e/a/b/f/u/w6;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L339c18.  v0:= v0.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` @kind object;
  #L339c1c.  return v0 @kind object;
}
procedure `void` `f`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.f:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L339e44.  v0:= v1.`e.e.a.b.f.u.w6.e` @type ^`boolean` @kind boolean;
  #L339e48.  if v0 != 0 then goto L339e4e;
  #L339e4c.  return @kind void;
  #L339e4e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L339e52.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L339e58.  throw v0;
}
procedure `java.util.SortedMap` `g`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.g:()Ljava/util/SortedMap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L339cb4.  call `f`(v1) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339cba.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339cbe.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339cc4.  v0:= temp;
  #L339cc6.  if v0 == 0 then goto L339cf8;
  #L339cca.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339cce.  v0:= instanceof @variable v0 @type ^`java.util.TreeMap` @kind boolean;
  #L339cd2.  if v0 != 0 then goto L339cf8;
  #L339cd6.  v0:= new `java.util.TreeMap`;
  #L339cda.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L339ce0.  v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` := v0 @kind object;
  #L339ce4.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339ce8.  v0:= (`java.util.TreeMap`) v0 @kind object;
  #L339cec.  call temp:= `descendingMap`(v0) @signature `Ljava/util/TreeMap;.descendingMap:()Ljava/util/NavigableMap;` @kind virtual;
  #L339cf2.  v0:= temp @kind object;
  #L339cf4.  v1.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` := v0 @kind object;
  #L339cf8.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339cfc.  v0:= (`java.util.SortedMap`) v0 @kind object;
  #L339d00.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.u.w6` v4 @kind this, `java.lang.Comparable` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L339a74.  call `f`(v4) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339a7a.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L339a80.  v0:= temp;
  #L339a82.  if v0 < 0 then goto L339aa0;
  #L339a86.  v5:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339a8a.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339a90.  v5:= temp @kind object;
  #L339a92.  v5:= (`e.e.a.b.f.u.b7`) v5 @kind object;
  #L339a96.  call temp:= `setValue`(v5, v6) @signature `Le/e/a/b/f/u/b7;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L339a9c.  v5:= temp @kind object;
  #L339a9e.  return v5 @kind object;
  #L339aa0.  call `f`(v4) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339aa6.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339aaa.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L339ab0.  v1:= temp;
  #L339ab2.  if v1 == 0 then goto L339ad4;
  #L339ab6.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339aba.  v1:= instanceof @variable v1 @type ^`java.util.ArrayList` @kind boolean;
  #L339abe.  if v1 != 0 then goto L339ad4;
  #L339ac2.  v1:= new `java.util.ArrayList`;
  #L339ac6.  v2:= v4.`e.e.a.b.f.u.w6.b` @type ^`int`;
  #L339aca.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L339ad0.  v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` := v1 @kind object;
  #L339ad4.  v0:= v0 + 1;
  #L339ad8.  v0:= -v0 @kind int;
  #L339ada.  v1:= v4.`e.e.a.b.f.u.w6.b` @type ^`int`;
  #L339ade.  if v0 < v1 then goto L339af4;
  #L339ae2.  call temp:= `g`(v4) @signature `Le/e/a/b/f/u/w6;.g:()Ljava/util/SortedMap;` @kind direct;
  #L339ae8.  v0:= temp @kind object;
  #L339aea.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/SortedMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L339af0.  v5:= temp @kind object;
  #L339af2.  return v5 @kind object;
  #L339af4.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339af8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339afe.  v1:= temp;
  #L339b00.  v2:= v4.`e.e.a.b.f.u.w6.b` @type ^`int`;
  #L339b04.  if v1 != v2 then goto L339b3e;
  #L339b08.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339b0c.  v2:= v2 + -1;
  #L339b10.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L339b16.  v1:= temp @kind object;
  #L339b18.  v1:= (`e.e.a.b.f.u.b7`) v1 @kind object;
  #L339b1c.  call temp:= `g`(v4) @signature `Le/e/a/b/f/u/w6;.g:()Ljava/util/SortedMap;` @kind direct;
  #L339b22.  v2:= temp @kind object;
  #L339b24.  call temp:= `getKey`(v1) @signature `Le/e/a/b/f/u/b7;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L339b2a.  v3:= temp @kind object;
  #L339b2c.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L339b30.  call temp:= `getValue`(v1) @signature `Le/e/a/b/f/u/b7;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L339b36.  v1:= temp @kind object;
  #L339b38.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/SortedMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L339b3e.  v1:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339b42.  v2:= new `e.e.a.b.f.u.b7`;
  #L339b46.  call `<init>`(v2, v4, v5, v6) @signature `Le/e/a/b/f/u/b7;.<init>:(Le/e/a/b/f/u/w6;Ljava/lang/Comparable;Ljava/lang/Object;)V` @kind direct;
  #L339b4c.  call `add`(v1, v0, v2) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L339b52.  v5:= 0I;
  #L339b54.  return v5 @kind object;
}
procedure `java.util.Map$Entry` `a`(`e.e.a.b.f.u.w6` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L339c30.  v0:= v1.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339c34.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339c3a.  v2:= temp @kind object;
  #L339c3c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L339c40.  return v2 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339db8.  v0:= v1.`e.e.a.b.f.u.w6.e` @type ^`boolean` @kind boolean;
  #L339dbc.  if v0 != 0 then goto L339e1a;
  #L339dc0.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339dc4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339dca.  v0:= temp;
  #L339dcc.  if v0 == 0 then goto L339dda;
  #L339dd0.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L339dd6.  v0:= temp @kind object;
  #L339dd8.  goto L339de6;
  #L339dda.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339dde.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L339de4.  v0:= temp @kind object;
  #L339de6.  v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` := v0 @kind object;
  #L339dea.  v0:= v1.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` @kind object;
  #L339dee.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339df4.  v0:= temp;
  #L339df6.  if v0 == 0 then goto L339e04;
  #L339dfa.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L339e00.  v0:= temp @kind object;
  #L339e02.  goto L339e10;
  #L339e04.  v0:= v1.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` @kind object;
  #L339e08.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L339e0e.  v0:= temp @kind object;
  #L339e10.  v1.`e.e.a.b.f.u.w6.g` @type ^`java.util.Map` := v0 @kind object;
  #L339e14.  v0:= 1I;
  #L339e16.  v1.`e.e.a.b.f.u.w6.e` @type ^`boolean` := v0 @kind boolean;
  #L339e1a.  return @kind void;
}
procedure `boolean` `b`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3397d8.  v0:= v1.`e.e.a.b.f.u.w6.e` @type ^`boolean` @kind boolean;
  #L3397dc.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.c:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L339944.  v0:= v1.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339948.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33994e.  v0:= temp;
  #L339950.  return v0;
}
procedure `void` `clear`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339d6c.  call `f`(v1) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339d72.  v0:= v1.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339d76.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L339d7c.  v0:= temp;
  #L339d7e.  if v0 != 0 then goto L339d8c;
  #L339d82.  v0:= v1.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339d86.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L339d8c.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339d90.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339d96.  v0:= temp;
  #L339d98.  if v0 != 0 then goto L339da6;
  #L339d9c.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339da0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L339da6.  return @kind void;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.u.w6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/w6;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3396e4.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L3396e8.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L3396ee.  v0:= temp;
  #L3396f0.  if v0 >= 0 then goto L33970a;
  #L3396f4.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L3396f8.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3396fe.  v2:= temp;
  #L339700.  if v2 == 0 then goto L339706;
  #L339704.  goto L33970a;
  #L339706.  v2:= 0I;
  #L339708.  return v2;
  #L33970a.  v2:= 1I;
  #L33970c.  return v2;
}
procedure `java.lang.Iterable` `d`(`e.e.a.b.f.u.w6` v1 @kind this) @signature `Le/e/a/b/f/u/w6;.d:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L339964.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339968.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L33996e.  v0:= temp;
  #L339970.  if v0 == 0 then goto L33997e;
  #L339974.  call temp:= `a`() @signature `Le/e/a/b/f/u/a7;.a:()Ljava/lang/Iterable;` @kind static;
  #L33997a.  v0:= temp @kind object;
  #L33997c.  return v0 @kind object;
  #L33997e.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339982.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L339988.  v0:= temp @kind object;
  #L33998a.  return v0 @kind object;
}
procedure `java.util.Set` `e`(`e.e.a.b.f.u.w6` v2 @kind this) @signature `Le/e/a/b/f/u/w6;.e:()Ljava/util/Set;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L339c84.  v0:= v2.`e.e.a.b.f.u.w6.h` @type ^`e.e.a.b.f.u.x6` @kind object;
  #L339c88.  if v0 != 0 then goto L339c9c;
  #L339c8c.  v0:= new `e.e.a.b.f.u.x6`;
  #L339c90.  v1:= 0I;
  #L339c92.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/u/x6;.<init>:(Le/e/a/b/f/u/w6;Le/e/a/b/f/u/v6;)V` @kind direct;
  #L339c98.  v2.`e.e.a.b.f.u.w6.h` @type ^`e.e.a.b.f.u.x6` := v0 @kind object;
  #L339c9c.  v0:= v2.`e.e.a.b.f.u.w6.h` @type ^`e.e.a.b.f.u.x6` @kind object;
  #L339ca0.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.u.w6` v2 @kind this) @signature `Le/e/a/b/f/u/w6;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L339c54.  v0:= v2.`e.e.a.b.f.u.w6.f` @type ^`e.e.a.b.f.u.d7` @kind object;
  #L339c58.  if v0 != 0 then goto L339c6c;
  #L339c5c.  v0:= new `e.e.a.b.f.u.d7`;
  #L339c60.  v1:= 0I;
  #L339c62.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/u/d7;.<init>:(Le/e/a/b/f/u/w6;Le/e/a/b/f/u/v6;)V` @kind direct;
  #L339c68.  v2.`e.e.a.b.f.u.w6.f` @type ^`e.e.a.b.f.u.d7` := v0 @kind object;
  #L339c6c.  v0:= v2.`e.e.a.b.f.u.w6.f` @type ^`e.e.a.b.f.u.d7` @kind object;
  #L339c70.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.w6` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/b/f/u/w6;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L339720.  v0:= 1I;
  #L339722.  if v7 != v8 then goto L339728;
  #L339726.  return v0;
  #L339728.  v1:= instanceof @variable v8 @type ^`e.e.a.b.f.u.w6` @kind boolean;
  #L33972c.  if v1 != 0 then goto L33973a;
  #L339730.  call temp:= `equals`(v7, v8) @signature `Ljava/util/AbstractMap;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L339736.  v8:= temp;
  #L339738.  return v8;
  #L33973a.  v8:= (`e.e.a.b.f.u.w6`) v8 @kind object;
  #L33973e.  call temp:= `size`(v7) @signature `Le/e/a/b/f/u/w6;.size:()I` @kind virtual;
  #L339744.  v1:= temp;
  #L339746.  call temp:= `size`(v8) @signature `Le/e/a/b/f/u/w6;.size:()I` @kind virtual;
  #L33974c.  v2:= temp;
  #L33974e.  v3:= 0I;
  #L339750.  if v1 == v2 then goto L339756;
  #L339754.  return v3;
  #L339756.  call temp:= `c`(v7) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L33975c.  v2:= temp;
  #L33975e.  call temp:= `c`(v8) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L339764.  v4:= temp;
  #L339766.  if v2 == v4 then goto L339784;
  #L33976a.  call temp:= `entrySet`(v7) @signature `Le/e/a/b/f/u/w6;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L339770.  v0:= temp @kind object;
  #L339772.  call temp:= `entrySet`(v8) @signature `Le/e/a/b/f/u/w6;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L339778.  v8:= temp @kind object;
  #L33977a.  call temp:= `equals`(v0, v8) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L339780.  v8:= temp;
  #L339782.  return v8;
  #L339784.  v4:= 0I;
  #L339786.  if v4 >= v2 then goto L3397ae;
  #L33978a.  call temp:= `a`(v7, v4) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L339790.  v5:= temp @kind object;
  #L339792.  call temp:= `a`(v8, v4) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L339798.  v6:= temp @kind object;
  #L33979a.  call temp:= `equals`(v5, v6) @signature `Ljava/util/Map$Entry;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3397a0.  v5:= temp;
  #L3397a2.  if v5 != 0 then goto L3397a8;
  #L3397a6.  return v3;
  #L3397a8.  v4:= v4 + 1;
  #L3397ac.  goto L339786;
  #L3397ae.  if v2 == v1 then goto L3397c4;
  #L3397b2.  v0:= v7.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L3397b6.  v8:= v8.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L3397ba.  call temp:= `equals`(v0, v8) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3397c0.  v8:= temp;
  #L3397c2.  return v8;
  #L3397c4.  return v0;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.u.w6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/w6;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33999c.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L3399a0.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L3399a6.  v0:= temp;
  #L3399a8.  if v0 < 0 then goto L3399c6;
  #L3399ac.  v2:= v1.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L3399b0.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3399b6.  v2:= temp @kind object;
  #L3399b8.  v2:= (`e.e.a.b.f.u.b7`) v2 @kind object;
  #L3399bc.  call temp:= `getValue`(v2) @signature `Le/e/a/b/f/u/b7;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3399c2.  v2:= temp @kind object;
  #L3399c4.  return v2 @kind object;
  #L3399c6.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L3399ca.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3399d0.  v2:= temp @kind object;
  #L3399d2.  return v2 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.w6` v4 @kind this) @signature `Le/e/a/b/f/u/w6;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33980c.  call temp:= `c`(v4) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L339812.  v0:= temp;
  #L339814.  v1:= 0I;
  #L339816.  v2:= 0I;
  #L339818.  if v1 >= v0 then goto L33983c;
  #L33981c.  v3:= v4.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339820.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339826.  v3:= temp @kind object;
  #L339828.  v3:= (`e.e.a.b.f.u.b7`) v3 @kind object;
  #L33982c.  call temp:= `hashCode`(v3) @signature `Le/e/a/b/f/u/b7;.hashCode:()I` @kind virtual;
  #L339832.  v3:= temp;
  #L339834.  v2:= v2 + v3 @kind int;
  #L339836.  v1:= v1 + 1;
  #L33983a.  goto L339818;
  #L33983c.  v0:= v4.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339840.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L339846.  v0:= temp;
  #L339848.  if v0 <= 0 then goto L33985a;
  #L33984c.  v0:= v4.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339850.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L339856.  v0:= temp;
  #L339858.  v2:= v2 + v0 @kind int;
  #L33985a.  return v2;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.u.w6` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/w6;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3399e4.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L3399e8.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3399ee.  v1:= temp @kind object;
  #L3399f0.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.u.w6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/w6;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339a04.  call `f`(v1) @signature `Le/e/a/b/f/u/w6;.f:()V` @kind direct;
  #L339a0a.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L339a0e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L339a14.  v0:= temp;
  #L339a16.  if v0 < 0 then goto L339a24;
  #L339a1a.  call temp:= `c`(v1, v0) @signature `Le/e/a/b/f/u/w6;.c:(I)Ljava/lang/Object;` @kind direct;
  #L339a20.  v2:= temp @kind object;
  #L339a22.  return v2 @kind object;
  #L339a24.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339a28.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L339a2e.  v0:= temp;
  #L339a30.  if v0 == 0 then goto L339a38;
  #L339a34.  v2:= 0I;
  #L339a36.  return v2 @kind object;
  #L339a38.  v0:= v1.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L339a3c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L339a42.  v2:= temp @kind object;
  #L339a44.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.u.w6` v2 @kind this) @signature `Le/e/a/b/f/u/w6;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33986c.  v0:= v2.`e.e.a.b.f.u.w6.c` @type ^`java.util.List` @kind object;
  #L339870.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339876.  v0:= temp;
  #L339878.  v1:= v2.`e.e.a.b.f.u.w6.d` @type ^`java.util.Map` @kind object;
  #L33987c.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L339882.  v1:= temp;
  #L339884.  v0:= v0 + v1 @kind int;
  #L339886.  return v0;
}
