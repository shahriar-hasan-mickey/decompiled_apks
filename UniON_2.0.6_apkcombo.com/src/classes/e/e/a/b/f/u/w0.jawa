record `e.e.a.b.f.u.w0` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.u.w0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.u.w0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.w0` v4 @kind this) @signature `Le/e/a/b/f/u/w0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32032c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L320332.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L320336.  v1:= 16I;
  #L32033a.  v2:= 0.75F;
  #L32033e.  v3:= 10I;
  #L320342.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L320348.  v4.`e.e.a.b.f.u.w0.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L32034c.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L320350.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L320356.  v4.`e.e.a.b.f.u.w0.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L32035a.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.u.w0` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/u/w0;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3202a4.  v0:= v3.`e.e.a.b.f.u.w0.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L3202a8.  call temp:= `poll`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L3202ae.  v0:= temp @kind object;
  #L3202b0.  if v0 == 0 then goto L3202c0;
  #L3202b4.  v1:= v3.`e.e.a.b.f.u.w0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3202b8.  call temp:= `remove`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3202be.  goto L3202a4;
  #L3202c0.  v0:= new `e.e.a.b.f.u.v0`;
  #L3202c4.  v1:= 0I;
  #L3202c6.  call `<init>`(v0, v4, v1) @signature `Le/e/a/b/f/u/v0;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L3202cc.  v1:= v3.`e.e.a.b.f.u.w0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3202d0.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3202d6.  v0:= temp @kind object;
  #L3202d8.  v0:= (`java.util.List`) v0 @kind object;
  #L3202dc.  if v5 != 0 then goto L3202e2;
  #L3202e0.  return v0 @kind object;
  #L3202e2.  if v0 == 0 then goto L3202e8;
  #L3202e6.  return v0 @kind object;
  #L3202e8.  v5:= new `java.util.Vector`;
  #L3202ec.  v0:= 2I;
  #L3202ee.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L3202f4.  v0:= v3.`e.e.a.b.f.u.w0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3202f8.  v1:= new `e.e.a.b.f.u.v0`;
  #L3202fc.  v2:= v3.`e.e.a.b.f.u.w0.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L320300.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/u/v0;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L320306.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32030c.  v4:= temp @kind object;
  #L32030e.  v4:= (`java.util.List`) v4 @kind object;
  #L320312.  if v4 != 0 then goto L320318;
  #L320316.  return v5 @kind object;
  #L320318.  return v4 @kind object;
}
