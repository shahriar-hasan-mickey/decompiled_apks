record `e.e.a.b.f.n.py` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.py.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/py;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0254.  v0:= new `e.e.a.b.f.n.py`;
  #L2b0258.  call `<init>`(v0) @signature `Le/e/a/b/f/n/py;.<init>:()V` @kind direct;
  #L2b025e.  `@@e.e.a.b.f.n.py.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2b0262.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.py` v0 @kind this) @signature `Le/e/a/b/f/n/py;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b0274.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b027a.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.py` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/py;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2b0230.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/qy;.a:(I)Le/e/a/b/f/n/qy;` @kind static;
  #L2b0236.  v1:= temp @kind object;
  #L2b0238.  if v1 == 0 then goto L2b0240;
  #L2b023c.  v1:= 1I;
  #L2b023e.  return v1;
  #L2b0240.  v1:= 0I;
  #L2b0242.  return v1;
}
