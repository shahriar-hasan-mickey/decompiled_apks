record `e.e.a.b.f.k.g1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.y1` @kind class {
  `boolean` `e.e.a.b.f.k.g1.b` @AccessFlag ;
  `java.lang.Object` `e.e.a.b.f.k.g1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.g1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/g1;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L246c84.  v0.`e.e.a.b.f.k.g1.c` @type ^`java.lang.Object` := v1 @kind object;
  #L246c88.  call `<init>`(v0) @signature `Le/e/a/b/f/k/y1;.<init>:()V` @kind direct;
  #L246c8e.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.k.g1` v1 @kind this) @signature `Le/e/a/b/f/k/g1;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246c34.  v0:= v1.`e.e.a.b.f.k.g1.b` @type ^`boolean` @kind boolean;
  #L246c38.  if v0 != 0 then goto L246c40;
  #L246c3c.  v0:= 1I;
  #L246c3e.  return v0;
  #L246c40.  v0:= 0I;
  #L246c42.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.k.g1` v1 @kind this) @signature `Le/e/a/b/f/k/g1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246c54.  v0:= v1.`e.e.a.b.f.k.g1.b` @type ^`boolean` @kind boolean;
  #L246c58.  if v0 != 0 then goto L246c68;
  #L246c5c.  v0:= 1I;
  #L246c5e.  v1.`e.e.a.b.f.k.g1.b` @type ^`boolean` := v0 @kind boolean;
  #L246c62.  v0:= v1.`e.e.a.b.f.k.g1.c` @type ^`java.lang.Object` @kind object;
  #L246c66.  return v0 @kind object;
  #L246c68.  v0:= new `java.util.NoSuchElementException`;
  #L246c6c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L246c72.  throw v0;
}
