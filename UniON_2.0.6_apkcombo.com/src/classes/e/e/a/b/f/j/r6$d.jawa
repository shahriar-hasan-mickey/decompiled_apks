record `e.e.a.b.f.j.r6$d` @kind class @AccessFlag FINAL extends `e.e.a.b.f.j.r6$c` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.j.r6$d` v0 @kind this, `sun.misc.Unsafe` v1 @kind object) @signature `Le/e/a/b/f/j/r6$d;.<init>:(Lsun/misc/Unsafe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L231c8c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/r6$c;.<init>:(Lsun/misc/Unsafe;)V` @kind direct;
  #L231c92.  return @kind void;
}
procedure `byte` `a`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/j/r6$d;.a:(Ljava/lang/Object;J)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231c2c.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231c30.  call temp:= `getByte`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getByte:(Ljava/lang/Object;J)B` @kind virtual;
  #L231c36.  v2:= temp;
  #L231c38.  return v2;
}
procedure `void` `a`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `byte` v5 ) @signature `Le/e/a/b/f/j/r6$d;.a:(Ljava/lang/Object;JB)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231cc0.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231cc4.  call `putByte`(v0, v2, v3, v5) @signature `Lsun/misc/Unsafe;.putByte:(Ljava/lang/Object;JB)V` @kind virtual;
  #L231cca.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.r6$d` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 , `double` v10 ) @signature `Le/e/a/b/f/j/r6$d;.a:(Ljava/lang/Object;JD)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L231cdc.  v0:= v6.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231ce0.  v1:= v7 @kind object;
  #L231ce2.  v2:= v8 @kind wide;
  #L231ce4.  v4:= v10 @kind wide;
  #L231ce6.  call `putDouble`(v0, v1, v2, v4) @signature `Lsun/misc/Unsafe;.putDouble:(Ljava/lang/Object;JD)V` @kind virtual;
  #L231cec.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `float` v5 ) @signature `Le/e/a/b/f/j/r6$d;.a:(Ljava/lang/Object;JF)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231d00.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231d04.  call `putFloat`(v0, v2, v3, v5) @signature `Lsun/misc/Unsafe;.putFloat:(Ljava/lang/Object;JF)V` @kind virtual;
  #L231d0a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `boolean` v5 ) @signature `Le/e/a/b/f/j/r6$d;.a:(Ljava/lang/Object;JZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231ca4.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231ca8.  call `putBoolean`(v0, v2, v3, v5) @signature `Lsun/misc/Unsafe;.putBoolean:(Ljava/lang/Object;JZ)V` @kind virtual;
  #L231cae.  return @kind void;
}
procedure `boolean` `b`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/j/r6$d;.b:(Ljava/lang/Object;J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231c0c.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231c10.  call temp:= `getBoolean`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getBoolean:(Ljava/lang/Object;J)Z` @kind virtual;
  #L231c16.  v2:= temp;
  #L231c18.  return v2;
}
procedure `float` `c`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/j/r6$d;.c:(Ljava/lang/Object;J)F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231c6c.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231c70.  call temp:= `getFloat`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getFloat:(Ljava/lang/Object;J)F` @kind virtual;
  #L231c76.  v2:= temp;
  #L231c78.  return v2;
}
procedure `double` `d`(`e.e.a.b.f.j.r6$d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/j/r6$d;.d:(Ljava/lang/Object;J)D` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L231c4c.  v0:= v1.`e.e.a.b.f.j.r6$c.a` @type ^`sun.misc.Unsafe` @kind object;
  #L231c50.  call temp:= `getDouble`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getDouble:(Ljava/lang/Object;J)D` @kind virtual;
  #L231c56.  v2:= temp @kind wide;
  #L231c58.  return v2 @kind wide;
}
