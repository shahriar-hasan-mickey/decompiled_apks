record `e.e.a.b.f.q.uu` @kind class @AccessFlag FINAL {
}
global `java.lang.Class` `@@e.e.a.b.f.q.uu.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.q.uu.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/uu;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L309e78.  v0:= "libcore.io.Memory" @kind object;
  #L309e7c.  v1:= 0I;
  #L309e7e.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L309e84.  v0:= temp @kind object;
  #L309e86.  goto L309e8a;
  #L309e88.  v0:= v1 @kind object;
  #L309e8a.  `@@e.e.a.b.f.q.uu.a` @type ^`java.lang.Class` := v0 @kind object;
  #L309e8e.  v0:= "org.robolectric.Robolectric" @kind object;
  #L309e92.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L309e98.  v1:= temp @kind object;
  #L309e9a.  goto L309e9e;
  #L309e9c.  
  #L309e9e.  if v1 == 0 then goto L309ea6;
  #L309ea2.  v0:= 1I;
  #L309ea4.  goto L309ea8;
  #L309ea6.  v0:= 0I;
  #L309ea8.  `@@e.e.a.b.f.q.uu.b` @type ^`boolean` := v0 @kind boolean;
  #L309eac.  return @kind void;
  catch `java.lang.Throwable` @[L309e7e..L309e86] goto L309e88;
  catch `java.lang.Throwable` @[L309e92..L309e9a] goto L309e9c;
}
procedure `boolean` `a`() @signature `Le/e/a/b/f/q/uu;.a:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L309e38.  v0:= `@@e.e.a.b.f.q.uu.a` @type ^`java.lang.Class` @kind object;
  #L309e3c.  if v0 == 0 then goto L309e4c;
  #L309e40.  v0:= `@@e.e.a.b.f.q.uu.b` @type ^`boolean` @kind boolean;
  #L309e44.  if v0 != 0 then goto L309e4c;
  #L309e48.  v0:= 1I;
  #L309e4a.  return v0;
  #L309e4c.  v0:= 0I;
  #L309e4e.  return v0;
}
procedure `java.lang.Class` `b`() @signature `Le/e/a/b/f/q/uu;.b:()Ljava/lang/Class;` @AccessFlag STATIC {
    temp;
    v0;

  #L309e60.  v0:= `@@e.e.a.b.f.q.uu.a` @type ^`java.lang.Class` @kind object;
  #L309e64.  return v0 @kind object;
}
