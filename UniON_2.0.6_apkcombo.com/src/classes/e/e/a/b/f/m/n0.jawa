record `e.e.a.b.f.m.n0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.m.i0` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `e.e.a.b.f.m.j1` `@@e.e.a.b.f.m.n0.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/m/n0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L267108.  v0:= new `e.e.a.b.f.m.l0`;
  #L26710c.  v1:= `@@e.e.a.b.f.m.c1.f` @type ^`e.e.a.b.f.m.n0` @kind object;
  #L267110.  v2:= 0I;
  #L267112.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/m/l0;.<init>:(Le/e/a/b/f/m/n0;I)V` @kind direct;
  #L267118.  `@@e.e.a.b.f.m.n0.c` @type ^`e.e.a.b.f.m.j1` := v0 @kind object;
  #L26711c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.m.n0` v0 @kind this) @signature `Le/e/a/b/f/m/n0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L267130.  call `<init>`(v0) @signature `Le/e/a/b/f/m/i0;.<init>:()V` @kind direct;
  #L267136.  return @kind void;
}
procedure `e.e.a.b.f.m.n0` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/m/n0;.a:(Ljava/lang/Object;)Le/e/a/b/f/m/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L266e94.  v0:= 1I;
  #L266e96.  v1:= new `java.lang.Object`[v0];
  #L266e9a.  v2:= 0I;
  #L266e9c.  v1[v2]:= v3 @kind object;
  #L266ea0.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/m/a1;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L266ea6.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/m/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/m/n0;` @kind static;
  #L266eac.  v3:= temp @kind object;
  #L266eae.  return v3 @kind object;
}
procedure `e.e.a.b.f.m.n0` `a`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/m/n0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Le/e/a/b/f/m/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L266ec0.  v0:= 2I;
  #L266ec2.  v1:= new `java.lang.Object`[v0];
  #L266ec6.  v2:= 0I;
  #L266ec8.  v1[v2]:= v3 @kind object;
  #L266ecc.  v3:= 1I;
  #L266ece.  v1[v3]:= v4 @kind object;
  #L266ed2.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/m/a1;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L266ed8.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/m/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/m/n0;` @kind static;
  #L266ede.  v3:= temp @kind object;
  #L266ee0.  return v3 @kind object;
}
procedure `e.e.a.b.f.m.n0` `b`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/m/n0;.b:([Ljava/lang/Object;I)Le/e/a/b/f/m/n0;` @AccessFlag STATIC {
    temp;
    v0;

  #L266ef4.  if v2 != 0 then goto L266efe;
  #L266ef8.  v1:= `@@e.e.a.b.f.m.c1.f` @type ^`e.e.a.b.f.m.n0` @kind object;
  #L266efc.  return v1 @kind object;
  #L266efe.  v0:= new `e.e.a.b.f.m.c1`;
  #L266f02.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/m/c1;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L266f08.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.m.n0` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/m/n0;.a:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L26702c.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L267032.  v4:= temp;
  #L267034.  v0:= 0I;
  #L267036.  if v0 >= v4 then goto L26704c;
  #L26703a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L267040.  v1:= temp @kind object;
  #L267042.  v3[v0]:= v1 @kind object;
  #L267046.  v0:= v0 + 1;
  #L26704a.  goto L267036;
  #L26704c.  return v4;
}
procedure `e.e.a.b.f.m.n0` `a`(`e.e.a.b.f.m.n0` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/m/n0;.a:(II)Le/e/a/b/f/m/n0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266e50.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L266e56.  v0:= temp;
  #L266e58.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/m/b;.a:(III)V` @kind static;
  #L266e5e.  v3:= v3 - v2 @kind int;
  #L266e60.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L266e66.  v0:= temp;
  #L266e68.  if v3 != v0 then goto L266e6e;
  #L266e6c.  return v1 @kind object;
  #L266e6e.  if v3 != 0 then goto L266e78;
  #L266e72.  v2:= `@@e.e.a.b.f.m.c1.f` @type ^`e.e.a.b.f.m.n0` @kind object;
  #L266e76.  return v2 @kind object;
  #L266e78.  v0:= new `e.e.a.b.f.m.m0`;
  #L266e7c.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/a/b/f/m/m0;.<init>:(Le/e/a/b/f/m/n0;II)V` @kind direct;
  #L266e82.  return v0 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/n0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L267148.  v1:= new `java.lang.UnsupportedOperationException`;
  #L26714c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L267152.  throw v1;
}
procedure `boolean` `addAll`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/m/n0;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L266d44.  v1:= new `java.lang.UnsupportedOperationException`;
  #L266d48.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L266d4e.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.m.n0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/m/n0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L266d60.  call temp:= `indexOf`(v0, v1) @signature `Le/e/a/b/f/m/n0;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L266d66.  v1:= temp;
  #L266d68.  if v1 < 0 then goto L266d70;
  #L266d6c.  v1:= 1I;
  #L266d6e.  return v1;
  #L266d70.  v1:= 0I;
  #L266d72.  return v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.m.n0` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/m/n0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L266d84.  v0:= 1I;
  #L266d86.  v1:= 0I;
  #L266d88.  if v7 != v6 then goto L266d90;
  #L266d8c.  v1:= 1I;
  #L266d8e.  goto L266e3c;
  #L266d90.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L266d94.  if v2 != 0 then goto L266d9a;
  #L266d98.  goto L266e3c;
  #L266d9a.  v7:= (`java.util.List`) v7 @kind object;
  #L266d9e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L266da4.  v2:= temp;
  #L266da6.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L266dac.  v3:= temp;
  #L266dae.  if v2 == v3 then goto L266db4;
  #L266db2.  goto L266e3c;
  #L266db4.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L266db8.  if v3 == 0 then goto L266de6;
  #L266dbc.  v3:= 0I;
  #L266dbe.  if v3 >= v2 then goto L266d8c;
  #L266dc2.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L266dc8.  v4:= temp @kind object;
  #L266dca.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L266dd0.  v5:= temp @kind object;
  #L266dd2.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L266dd8.  v4:= temp;
  #L266dda.  if v4 != 0 then goto L266de0;
  #L266dde.  goto L266e3c;
  #L266de0.  v3:= v3 + 1;
  #L266de4.  goto L266dbe;
  #L266de6.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L266dec.  v2:= temp @kind object;
  #L266dee.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L266df4.  v7:= temp @kind object;
  #L266df6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L266dfc.  v3:= temp;
  #L266dfe.  if v3 == 0 then goto L266e2e;
  #L266e02.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L266e08.  v3:= temp;
  #L266e0a.  if v3 != 0 then goto L266e10;
  #L266e0e.  goto L266e3c;
  #L266e10.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L266e16.  v3:= temp @kind object;
  #L266e18.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L266e1e.  v4:= temp @kind object;
  #L266e20.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L266e26.  v3:= temp;
  #L266e28.  if v3 != 0 then goto L266df6;
  #L266e2c.  goto L266e3c;
  #L266e2e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L266e34.  v7:= temp;
  #L266e36.  if v7 != 0 then goto L266e3c;
  #L266e3a.  goto L266d8c;
  #L266e3c.  return v1;
}
procedure `e.e.a.b.f.m.j1` `h`(`e.e.a.b.f.m.n0` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/m/n0;.h:(I)Le/e/a/b/f/m/j1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L266f1c.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L266f22.  v0:= temp;
  #L266f24.  v1:= "index" @kind object;
  #L266f28.  call temp:= `b`(v3, v0, v1) @signature `Le/e/a/b/f/m/b;.b:(IILjava/lang/String;)I` @kind static;
  #L266f2e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L266f34.  v0:= temp;
  #L266f36.  if v0 == 0 then goto L266f40;
  #L266f3a.  v3:= `@@e.e.a.b.f.m.n0.c` @type ^`e.e.a.b.f.m.j1` @kind object;
  #L266f3e.  return v3 @kind object;
  #L266f40.  v0:= new `e.e.a.b.f.m.l0`;
  #L266f44.  call `<init>`(v0, v2, v3) @signature `Le/e/a/b/f/m/l0;.<init>:(Le/e/a/b/f/m/n0;I)V` @kind direct;
  #L266f4a.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.m.n0` v4 @kind this) @signature `Le/e/a/b/f/m/n0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L266f5c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L266f62.  v0:= temp;
  #L266f64.  v1:= 1I;
  #L266f66.  v2:= 0I;
  #L266f68.  if v2 >= v0 then goto L266f88;
  #L266f6c.  v1:= v1 * 31;
  #L266f70.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L266f76.  v3:= temp @kind object;
  #L266f78.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L266f7e.  v3:= temp;
  #L266f80.  v1:= v1 + v3 @kind int;
  #L266f82.  v2:= v2 + 1;
  #L266f86.  goto L266f68;
  #L266f88.  return v1;
}
procedure `int` `indexOf`(`e.e.a.b.f.m.n0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/m/n0;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L266f9c.  v0:= -1I;
  #L266f9e.  if v5 != 0 then goto L266fa4;
  #L266fa2.  return v0;
  #L266fa4.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L266faa.  v1:= temp;
  #L266fac.  v2:= 0I;
  #L266fae.  if v2 >= v1 then goto L266fd0;
  #L266fb2.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L266fb8.  v3:= temp @kind object;
  #L266fba.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L266fc0.  v3:= temp;
  #L266fc2.  if v3 == 0 then goto L266fca;
  #L266fc6.  v0:= v2;
  #L266fc8.  goto L266fd0;
  #L266fca.  v2:= v2 + 1;
  #L266fce.  goto L266fae;
  #L266fd0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.n0` v1 @kind this) @signature `Le/e/a/b/f/m/n0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L267098.  v0:= 0I;
  #L26709a.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/m/n0;.h:(I)Le/e/a/b/f/m/j1;` @kind virtual;
  #L2670a0.  v0:= temp @kind object;
  #L2670a2.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`e.e.a.b.f.m.n0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/m/n0;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L266fe4.  v0:= -1I;
  #L266fe6.  if v4 != 0 then goto L266fec;
  #L266fea.  return v0;
  #L266fec.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L266ff2.  v1:= temp;
  #L266ff4.  v1:= v1 + v0 @kind int;
  #L266ff6.  if v1 < 0 then goto L267018;
  #L266ffa.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L267000.  v2:= temp @kind object;
  #L267002.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L267008.  v2:= temp;
  #L26700a.  if v2 == 0 then goto L267012;
  #L26700e.  v0:= v1;
  #L267010.  goto L267018;
  #L267012.  v1:= v1 + -1;
  #L267016.  goto L266ff6;
  #L267018.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.m.n0` v1 @kind this) @signature `Le/e/a/b/f/m/n0;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2670d0.  v0:= 0I;
  #L2670d2.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/m/n0;.h:(I)Le/e/a/b/f/m/j1;` @kind virtual;
  #L2670d8.  v0:= temp @kind object;
  #L2670da.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/m/n0;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2670ec.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/m/n0;.h:(I)Le/e/a/b/f/m/j1;` @kind virtual;
  #L2670f2.  v1:= temp @kind object;
  #L2670f4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/m/n0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L267060.  v1:= new `java.lang.UnsupportedOperationException`;
  #L267064.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L26706a.  throw v1;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/n0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L26707c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L267080.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L267086.  throw v1;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.m.n0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/m/n0;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2670b4.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/m/n0;.a:(II)Le/e/a/b/f/m/n0;` @kind virtual;
  #L2670ba.  v1:= temp @kind object;
  #L2670bc.  return v1 @kind object;
}
