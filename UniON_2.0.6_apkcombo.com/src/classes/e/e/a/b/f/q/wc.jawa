record `e.e.a.b.f.q.wc` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/q/wc;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2ee210.  v0:= 0I;
  #L2ee212.  v1:= 0I;
  #L2ee214.  v2:= length @variable v12;
  #L2ee216.  if v1 >= v2 then goto L2ee372;
  #L2ee21a.  v2:= v12[v1] @kind object;
  #L2ee21e.  if v2 != 0 then goto L2ee22a;
  #L2ee222.  v2:= "null" @kind object;
  #L2ee226.  goto L2ee366;
  #L2ee22a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee230.  v2:= temp @kind object;
  #L2ee232.  goto L2ee366;
  #L2ee236.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L2ee238.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ee23e.  v3:= temp @kind object;
  #L2ee240.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ee246.  v3:= temp @kind object;
  #L2ee248.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ee24e.  v2:= temp;
  #L2ee250.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2ee256.  v2:= temp @kind object;
  #L2ee258.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ee25e.  v4:= temp @kind object;
  #L2ee260.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee266.  v4:= temp;
  #L2ee268.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ee26e.  v5:= temp @kind object;
  #L2ee270.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee276.  v5:= temp;
  #L2ee278.  v6:= new `java.lang.StringBuilder`;
  #L2ee27c.  v4:= v4 + 1;
  #L2ee280.  v4:= v4 + v5 @kind int;
  #L2ee282.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ee288.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee28e.  v3:= 64I;
  #L2ee292.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee298.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee29e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee2a4.  v2:= temp @kind object;
  #L2ee2a6.  v3:= "com.google.common.base.Strings" @kind object;
  #L2ee2aa.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2ee2b0.  v3:= temp @kind object;
  #L2ee2b2.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L2ee2b6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ee2bc.  v5:= temp @kind object;
  #L2ee2be.  v6:= "Exception during lenientFormat for " @kind object;
  #L2ee2c2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee2c8.  v7:= temp;
  #L2ee2ca.  if v7 == 0 then goto L2ee2d8;
  #L2ee2ce.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2ee2d4.  v5:= temp @kind object;
  #L2ee2d6.  goto L2ee2e2;
  #L2ee2d8.  v5:= new `java.lang.String`;
  #L2ee2dc.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ee2e2.  v7:= v5 @kind object;
  #L2ee2e4.  v5:= "com.google.common.base.Strings" @kind object;
  #L2ee2e8.  v6:= "lenientToString" @kind object;
  #L2ee2ec.  v8:= v9 @kind object;
  #L2ee2ee.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2ee2f4.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ee2fa.  v3:= temp @kind object;
  #L2ee2fc.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ee302.  v3:= temp @kind object;
  #L2ee304.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ee30a.  v4:= temp @kind object;
  #L2ee30c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee312.  v4:= temp;
  #L2ee314.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ee31a.  v5:= temp @kind object;
  #L2ee31c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee322.  v5:= temp;
  #L2ee324.  v6:= new `java.lang.StringBuilder`;
  #L2ee328.  v4:= v4 + 9;
  #L2ee32c.  v4:= v4 + v5 @kind int;
  #L2ee32e.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ee334.  v4:= "<" @kind object;
  #L2ee338.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee33e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee344.  v2:= " threw " @kind object;
  #L2ee348.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee34e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee354.  v2:= ">" @kind object;
  #L2ee358.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee35e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee364.  v2:= temp @kind object;
  #L2ee366.  v12[v1]:= v2 @kind object;
  #L2ee36a.  v1:= v1 + 1;
  #L2ee36e.  goto L2ee214;
  #L2ee372.  v1:= new `java.lang.StringBuilder`;
  #L2ee376.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee37c.  v3:= temp;
  #L2ee37e.  v2:= v2 * 16;
  #L2ee382.  v3:= v3 + v2 @kind int;
  #L2ee384.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ee38a.  v2:= 0I;
  #L2ee38c.  v3:= length @variable v12;
  #L2ee38e.  if v0 >= v3 then goto L2ee3c6;
  #L2ee392.  v4:= "%s" @kind object;
  #L2ee396.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L2ee39c.  v4:= temp;
  #L2ee39e.  v5:= -1I;
  #L2ee3a0.  if v4 != v5 then goto L2ee3a6;
  #L2ee3a4.  goto L2ee3c6;
  #L2ee3a6.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee3ac.  v2:= v0 + 1;
  #L2ee3b0.  v0:= v12[v0] @kind object;
  #L2ee3b4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee3ba.  v0:= v4 + 2;
  #L2ee3be.  v10:= v2;
  #L2ee3c0.  v2:= v0;
  #L2ee3c2.  v0:= v10;
  #L2ee3c4.  goto L2ee38c;
  #L2ee3c6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ee3cc.  v4:= temp;
  #L2ee3ce.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee3d4.  if v0 >= v3 then goto L2ee41c;
  #L2ee3d8.  v11:= " [" @kind object;
  #L2ee3dc.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee3e2.  v11:= v0 + 1;
  #L2ee3e6.  v0:= v12[v0] @kind object;
  #L2ee3ea.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee3f0.  v0:= length @variable v12;
  #L2ee3f2.  if v11 >= v0 then goto L2ee412;
  #L2ee3f6.  v0:= ", " @kind object;
  #L2ee3fa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee400.  v0:= v11 + 1;
  #L2ee404.  v11:= v12[v11] @kind object;
  #L2ee408.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee40e.  v11:= v0;
  #L2ee410.  goto L2ee3f0;
  #L2ee412.  v11:= 93I;
  #L2ee416.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ee41c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee422.  v11:= temp @kind object;
  #L2ee424.  return v11 @kind object;
  catch `java.lang.Exception` @[L2ee22a..L2ee232] goto L2ee236;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/q/wc;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2edc4c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/ua;.a:(Ljava/lang/String;)Z` @kind static;
  #L2edc52.  v0:= temp;
  #L2edc54.  return v0;
}
