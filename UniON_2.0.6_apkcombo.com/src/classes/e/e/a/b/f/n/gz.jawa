record `e.e.a.b.f.n.gz` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.gz.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.gz` `@@e.e.a.b.f.n.gz.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.gz` `@@e.e.a.b.f.n.gz.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.gz` `@@e.e.a.b.f.n.gz.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.gz`[] `@@e.e.a.b.f.n.gz.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/gz;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b2ae8.  v0:= new `e.e.a.b.f.n.gz`;
  #L2b2aec.  v1:= 0I;
  #L2b2aee.  v2:= "UNKNOWN_PERFORMANCE" @kind object;
  #L2b2af2.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/gz;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b2af8.  `@@e.e.a.b.f.n.gz.c` @type ^`e.e.a.b.f.n.gz` := v0 @kind object;
  #L2b2afc.  v0:= new `e.e.a.b.f.n.gz`;
  #L2b2b00.  v2:= 1I;
  #L2b2b02.  v3:= "FAST" @kind object;
  #L2b2b06.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/gz;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b2b0c.  `@@e.e.a.b.f.n.gz.d` @type ^`e.e.a.b.f.n.gz` := v0 @kind object;
  #L2b2b10.  v0:= new `e.e.a.b.f.n.gz`;
  #L2b2b14.  v3:= 2I;
  #L2b2b16.  v4:= "ACCURATE" @kind object;
  #L2b2b1a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/gz;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b2b20.  `@@e.e.a.b.f.n.gz.e` @type ^`e.e.a.b.f.n.gz` := v0 @kind object;
  #L2b2b24.  v0:= 3I;
  #L2b2b26.  v0:= new `e.e.a.b.f.n.gz`[v0];
  #L2b2b2a.  v4:= `@@e.e.a.b.f.n.gz.c` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2b2e.  v0[v1]:= v4 @kind object;
  #L2b2b32.  v1:= `@@e.e.a.b.f.n.gz.d` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2b36.  v0[v2]:= v1 @kind object;
  #L2b2b3a.  v1:= `@@e.e.a.b.f.n.gz.e` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2b3e.  v0[v3]:= v1 @kind object;
  #L2b2b42.  `@@e.e.a.b.f.n.gz.f` @type ^`e.e.a.b.f.n.gz`[] := v0 @kind object;
  #L2b2b46.  v0:= new `e.e.a.b.f.n.ez`;
  #L2b2b4a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/ez;.<init>:()V` @kind direct;
  #L2b2b50.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.gz` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/gz;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b2b64.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b2b6a.  v0.`e.e.a.b.f.n.gz.b` @type ^`int` := v3;
  #L2b2b6e.  return @kind void;
}
procedure `e.e.a.b.f.n.gz` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/gz;.a:(I)Le/e/a/b/f/n/gz;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b29e4.  if v1 == 0 then goto L2b2a04;
  #L2b29e8.  v0:= 1I;
  #L2b29ea.  if v1 == v0 then goto L2b29fe;
  #L2b29ee.  v0:= 2I;
  #L2b29f0.  if v1 == v0 then goto L2b29f8;
  #L2b29f4.  v1:= 0I;
  #L2b29f6.  return v1 @kind object;
  #L2b29f8.  v1:= `@@e.e.a.b.f.n.gz.e` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b29fc.  return v1 @kind object;
  #L2b29fe.  v1:= `@@e.e.a.b.f.n.gz.d` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2a02.  return v1 @kind object;
  #L2b2a04.  v1:= `@@e.e.a.b.f.n.gz.c` @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2a08.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/gz;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b29cc.  v0:= `@@e.e.a.b.f.n.fz.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b29d0.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.gz`[] `values`() @signature `Le/e/a/b/f/n/gz;.values:()[Le/e/a/b/f/n/gz;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b2a1c.  v0:= `@@e.e.a.b.f.n.gz.f` @type ^`e.e.a.b.f.n.gz`[] @kind object;
  #L2b2a20.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/gz;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b2a26.  v0:= temp @kind object;
  #L2b2a28.  v0:= (`e.e.a.b.f.n.gz`[]) v0 @kind object;
  #L2b2a2c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.gz` v2 @kind this) @signature `Le/e/a/b/f/n/gz;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b2a58.  v0:= new `java.lang.StringBuilder`;
  #L2b2a5c.  v1:= "<" @kind object;
  #L2b2a60.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2a66.  v1:= constclass @type ^`e.e.a.b.f.n.gz` @kind object;
  #L2b2a6a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b2a70.  v1:= temp @kind object;
  #L2b2a72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2a78.  v1:= 64I;
  #L2b2a7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2a82.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b2a88.  v1:= temp;
  #L2b2a8a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b2a90.  v1:= temp @kind object;
  #L2b2a92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2a98.  v1:= " number=" @kind object;
  #L2b2a9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2aa2.  v1:= v2.`e.e.a.b.f.n.gz.b` @type ^`int`;
  #L2b2aa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2aac.  v1:= " name=" @kind object;
  #L2b2ab0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2ab6.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b2abc.  v1:= temp @kind object;
  #L2b2abe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2ac4.  v1:= 62I;
  #L2b2ac8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2ace.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b2ad4.  v0:= temp @kind object;
  #L2b2ad6.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.gz` v1 @kind this) @signature `Le/e/a/b/f/n/gz;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b2a40.  v0:= v1.`e.e.a.b.f.n.gz.b` @type ^`int`;
  #L2b2a44.  return v0;
}
