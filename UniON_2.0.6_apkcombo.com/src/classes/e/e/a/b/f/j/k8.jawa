record `e.e.a.b.f.j.k8` @kind class @AccessFlag FINAL extends `e.e.a.b.f.j.i8` @kind class {
  `int` `e.e.a.b.f.j.k8.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `e.e.a.b.f.j.k8.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `e.e.a.b.f.j.i8` `e.e.a.b.f.j.k8.f` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.j.k8` v0 @kind this, `e.e.a.b.f.j.i8` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/j/k8;.<init>:(Le/e/a/b/f/j/i8;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L236f2c.  v0.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` := v1 @kind object;
  #L236f30.  call `<init>`(v0) @signature `Le/e/a/b/f/j/i8;.<init>:()V` @kind direct;
  #L236f36.  v0.`e.e.a.b.f.j.k8.d` @type ^`int` := v2;
  #L236f3a.  v0.`e.e.a.b.f.j.k8.e` @type ^`int` := v3;
  #L236f3e.  return @kind void;
}
procedure `e.e.a.b.f.j.i8` `a`(`e.e.a.b.f.j.k8` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/j/k8;.a:(II)Le/e/a/b/f/j/i8;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L236e24.  v0:= v2.`e.e.a.b.f.j.k8.e` @type ^`int`;
  #L236e28.  call `a`(v3, v4, v0) @signature `Le/e/a/b/f/j/d5;.a:(III)V` @kind static;
  #L236e2e.  v0:= v2.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` @kind object;
  #L236e32.  v1:= v2.`e.e.a.b.f.j.k8.d` @type ^`int`;
  #L236e36.  v3:= v3 + v1 @kind int;
  #L236e38.  v4:= v4 + v1 @kind int;
  #L236e3a.  call temp:= `subList`(v0, v3, v4) @signature `Le/e/a/b/f/j/i8;.subList:(II)Ljava/util/List;` @kind virtual;
  #L236e40.  v3:= temp @kind object;
  #L236e42.  v3:= (`e.e.a.b.f.j.i8`) v3 @kind object;
  #L236e46.  return v3 @kind object;
}
procedure `int` `c`(`e.e.a.b.f.j.k8` v2 @kind this) @signature `Le/e/a/b/f/j/k8;.c:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L236e94.  v0:= v2.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` @kind object;
  #L236e98.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/j8;.d:()I` @kind virtual;
  #L236e9e.  v0:= temp;
  #L236ea0.  v1:= v2.`e.e.a.b.f.j.k8.d` @type ^`int`;
  #L236ea4.  v0:= v0 + v1 @kind int;
  #L236ea6.  v1:= v2.`e.e.a.b.f.j.k8.e` @type ^`int`;
  #L236eaa.  v0:= v0 + v1 @kind int;
  #L236eac.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.j.k8` v2 @kind this) @signature `Le/e/a/b/f/j/k8;.d:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L236e70.  v0:= v2.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` @kind object;
  #L236e74.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/j8;.d:()I` @kind virtual;
  #L236e7a.  v0:= temp;
  #L236e7c.  v1:= v2.`e.e.a.b.f.j.k8.d` @type ^`int`;
  #L236e80.  v0:= v0 + v1 @kind int;
  #L236e82.  return v0;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.j.k8` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/j/k8;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L236ec0.  v0:= v2.`e.e.a.b.f.j.k8.e` @type ^`int`;
  #L236ec4.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/j/d5;.a:(II)I` @kind static;
  #L236eca.  v0:= v2.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` @kind object;
  #L236ece.  v1:= v2.`e.e.a.b.f.j.k8.d` @type ^`int`;
  #L236ed2.  v3:= v3 + v1 @kind int;
  #L236ed4.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L236eda.  v3:= temp @kind object;
  #L236edc.  return v3 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.j.k8` v1 @kind this) @signature `Le/e/a/b/f/j/k8;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L236e58.  v0:= v1.`e.e.a.b.f.j.k8.e` @type ^`int`;
  #L236e5c.  return v0;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.j.k8` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/j/k8;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L236f10.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/j/k8;.a:(II)Le/e/a/b/f/j/i8;` @kind virtual;
  #L236f16.  v1:= temp @kind object;
  #L236f18.  return v1 @kind object;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.j.k8` v1 @kind this) @signature `Le/e/a/b/f/j/k8;.zzb:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L236ef0.  v0:= v1.`e.e.a.b.f.j.k8.f` @type ^`e.e.a.b.f.j.i8` @kind object;
  #L236ef4.  call temp:= `zzb`(v0) @signature `Le/e/a/b/f/j/j8;.zzb:()[Ljava/lang/Object;` @kind virtual;
  #L236efa.  v0:= temp @kind object;
  #L236efc.  return v0 @kind object;
}
