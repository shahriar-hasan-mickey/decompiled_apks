record `e.e.a.b.f.u.v5` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.LinkedHashMap` @kind class {
  `boolean` `e.e.a.b.f.u.v5.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.u.v5` `@@e.e.a.b.f.u.v5.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/v5;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32ffcc.  v0:= new `e.e.a.b.f.u.v5`;
  #L32ffd0.  call `<init>`(v0) @signature `Le/e/a/b/f/u/v5;.<init>:()V` @kind direct;
  #L32ffd6.  `@@e.e.a.b.f.u.v5.c` @type ^`e.e.a.b.f.u.v5` := v0 @kind object;
  #L32ffda.  v1:= 0I;
  #L32ffdc.  v0.`e.e.a.b.f.u.v5.b` @type ^`boolean` := v1 @kind boolean;
  #L32ffe0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L32fff4.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L32fffa.  v0:= 1I;
  #L32fffc.  v1.`e.e.a.b.f.u.v5.b` @type ^`boolean` := v0 @kind boolean;
  #L330000.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.v5` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/u/v5;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L330014.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L33001a.  v1:= 1I;
  #L33001c.  v0.`e.e.a.b.f.u.v5.b` @type ^`boolean` := v1 @kind boolean;
  #L330020.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/u/v5;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32ff0c.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L32ff10.  if v0 == 0 then goto L32ff22;
  #L32ff14.  v1:= (`byte`[]) v1 @kind object;
  #L32ff18.  call temp:= `c`(v1) @signature `Le/e/a/b/f/u/w4;.c:([B)I` @kind static;
  #L32ff1e.  v1:= temp;
  #L32ff20.  return v1;
  #L32ff22.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.u.v4` @kind boolean;
  #L32ff26.  if v0 != 0 then goto L32ff34;
  #L32ff2a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32ff30.  v1:= temp;
  #L32ff32.  return v1;
  #L32ff34.  v1:= new `java.lang.UnsupportedOperationException`;
  #L32ff38.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L32ff3e.  throw v1;
}
procedure `void` `a`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3300f0.  v0:= v1.`e.e.a.b.f.u.v5.b` @type ^`boolean` @kind boolean;
  #L3300f4.  if v0 == 0 then goto L3300fa;
  #L3300f8.  return @kind void;
  #L3300fa.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3300fe.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L330104.  throw v0;
}
procedure `e.e.a.b.f.u.v5` `zza`() @signature `Le/e/a/b/f/u/v5;.zza:()Le/e/a/b/f/u/v5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32fe5c.  v0:= `@@e.e.a.b.f.u.v5.c` @type ^`e.e.a.b.f.u.v5` @kind object;
  #L32fe60.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.v5` v1 @kind this, `e.e.a.b.f.u.v5` v2 @kind object) @signature `Le/e/a/b/f/u/v5;.a:(Le/e/a/b/f/u/v5;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3300ac.  call `a`(v1) @signature `Le/e/a/b/f/u/v5;.a:()V` @kind direct;
  #L3300b2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L3300b8.  v0:= temp;
  #L3300ba.  if v0 != 0 then goto L3300c4;
  #L3300be.  call `putAll`(v1, v2) @signature `Le/e/a/b/f/u/v5;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L3300c4.  return @kind void;
}
procedure `e.e.a.b.f.u.v5` `c`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.c:()Le/e/a/b/f/u/v5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32fe74.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L32fe7a.  v0:= temp;
  #L32fe7c.  if v0 == 0 then goto L32fe8c;
  #L32fe80.  v0:= new `e.e.a.b.f.u.v5`;
  #L32fe84.  call `<init>`(v0) @signature `Le/e/a/b/f/u/v5;.<init>:()V` @kind direct;
  #L32fe8a.  return v0 @kind object;
  #L32fe8c.  v0:= new `e.e.a.b.f.u.v5`;
  #L32fe90.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/v5;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L32fe96.  return v0 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.u.v5` v0 @kind this) @signature `Le/e/a/b/f/u/v5;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L330034.  call `a`(v0) @signature `Le/e/a/b/f/u/v5;.a:()V` @kind direct;
  #L33003a.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind super;
  #L330040.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.d:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3300d8.  v0:= 0I;
  #L3300da.  v1.`e.e.a.b.f.u.v5.b` @type ^`boolean` := v0 @kind boolean;
  #L3300de.  return @kind void;
}
procedure `boolean` `e`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32fe44.  v0:= v1.`e.e.a.b.f.u.v5.b` @type ^`boolean` @kind boolean;
  #L32fe48.  return v0;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.u.v5` v1 @kind this) @signature `Le/e/a/b/f/u/v5;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32ff9c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L32ffa2.  v0:= temp;
  #L32ffa4.  if v0 == 0 then goto L32ffb2;
  #L32ffa8.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L32ffae.  v0:= temp @kind object;
  #L32ffb0.  return v0 @kind object;
  #L32ffb2.  call temp:= `entrySet`(v1) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind super;
  #L32ffb8.  v0:= temp @kind object;
  #L32ffba.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.v5` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/u/v5;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32fd78.  v0:= instanceof @variable v7 @type ^`java.util.Map` @kind boolean;
  #L32fd7c.  v1:= 0I;
  #L32fd7e.  if v0 == 0 then goto L32fe32;
  #L32fd82.  v7:= (`java.util.Map`) v7 @kind object;
  #L32fd86.  v0:= 1I;
  #L32fd88.  if v6 == v7 then goto L32fe2a;
  #L32fd8c.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L32fd92.  v2:= temp;
  #L32fd94.  call temp:= `size`(v7) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L32fd9a.  v3:= temp;
  #L32fd9c.  if v2 == v3 then goto L32fda4;
  #L32fda0.  v7:= 0I;
  #L32fda2.  goto L32fe2c;
  #L32fda4.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L32fdaa.  v2:= temp @kind object;
  #L32fdac.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32fdb2.  v2:= temp @kind object;
  #L32fdb4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32fdba.  v3:= temp;
  #L32fdbc.  if v3 == 0 then goto L32fe2a;
  #L32fdc0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32fdc6.  v3:= temp @kind object;
  #L32fdc8.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L32fdcc.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32fdd2.  v4:= temp @kind object;
  #L32fdd4.  call temp:= `containsKey`(v7, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L32fdda.  v4:= temp;
  #L32fddc.  if v4 != 0 then goto L32fde2;
  #L32fde0.  goto L32fda0;
  #L32fde2.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32fde8.  v4:= temp @kind object;
  #L32fdea.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32fdf0.  v3:= temp @kind object;
  #L32fdf2.  call temp:= `get`(v7, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32fdf8.  v3:= temp @kind object;
  #L32fdfa.  v5:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L32fdfe.  if v5 == 0 then goto L32fe1c;
  #L32fe02.  v5:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L32fe06.  if v5 == 0 then goto L32fe1c;
  #L32fe0a.  v4:= (`byte`[]) v4 @kind object;
  #L32fe0e.  v3:= (`byte`[]) v3 @kind object;
  #L32fe12.  call temp:= `equals`(v4, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L32fe18.  v3:= temp;
  #L32fe1a.  goto L32fe24;
  #L32fe1c.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32fe22.  v3:= temp;
  #L32fe24.  if v3 != 0 then goto L32fdb4;
  #L32fe28.  goto L32fda0;
  #L32fe2a.  v7:= 1I;
  #L32fe2c.  if v7 == 0 then goto L32fe32;
  #L32fe30.  return v0;
  #L32fe32.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.v5` v4 @kind this) @signature `Le/e/a/b/f/u/v5;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32fea8.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L32feae.  v0:= temp @kind object;
  #L32feb0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32feb6.  v0:= temp @kind object;
  #L32feb8.  v1:= 0I;
  #L32feba.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32fec0.  v2:= temp;
  #L32fec2.  if v2 == 0 then goto L32fef8;
  #L32fec6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32fecc.  v2:= temp @kind object;
  #L32fece.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32fed2.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32fed8.  v3:= temp @kind object;
  #L32feda.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/v5;.a:(Ljava/lang/Object;)I` @kind static;
  #L32fee0.  v3:= temp;
  #L32fee2.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32fee8.  v2:= temp @kind object;
  #L32feea.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/v5;.a:(Ljava/lang/Object;)I` @kind static;
  #L32fef0.  v2:= temp;
  #L32fef2.  v2:= v2 ^~ v3 @kind int;
  #L32fef4.  v1:= v1 + v2 @kind int;
  #L32fef6.  goto L32feba;
  #L32fef8.  return v1;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.u.v5` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/v5;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L32ff50.  call `a`(v0) @signature `Le/e/a/b/f/u/v5;.a:()V` @kind direct;
  #L32ff56.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32ff5c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32ff62.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L32ff68.  v1:= temp @kind object;
  #L32ff6a.  return v1 @kind object;
}
procedure `void` `putAll`(`e.e.a.b.f.u.v5` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Le/e/a/b/f/u/v5;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L330054.  call `a`(v2) @signature `Le/e/a/b/f/u/v5;.a:()V` @kind direct;
  #L33005a.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L330060.  v0:= temp @kind object;
  #L330062.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L330068.  v0:= temp @kind object;
  #L33006a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L330070.  v1:= temp;
  #L330072.  if v1 == 0 then goto L330094;
  #L330076.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33007c.  v1:= temp @kind object;
  #L33007e.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L330084.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L33008a.  v1:= temp @kind object;
  #L33008c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L330092.  goto L33006a;
  #L330094.  call `putAll`(v2, v3) @signature `Ljava/util/LinkedHashMap;.putAll:(Ljava/util/Map;)V` @kind super;
  #L33009a.  return @kind void;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.u.v5` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/u/v5;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L32ff7c.  call `a`(v0) @signature `Le/e/a/b/f/u/v5;.a:()V` @kind direct;
  #L32ff82.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L32ff88.  v1:= temp @kind object;
  #L32ff8a.  return v1 @kind object;
}
