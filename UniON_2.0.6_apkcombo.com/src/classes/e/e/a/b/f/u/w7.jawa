record `e.e.a.b.f.u.w7` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.t7` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.u.w7` v0 @kind this) @signature `Le/e/a/b/f/u/w7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33cfe0.  call `<init>`(v0) @signature `Le/e/a/b/f/u/t7;.<init>:()V` @kind direct;
  #L33cfe6.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.u.w7` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Le/e/a/b/f/u/w7;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33cb24.  if v9 >= v10 then goto L33cb36;
  #L33cb28.  v7:= v8[v9] @kind byte;
  #L33cb2c.  if v7 < 0 then goto L33cb36;
  #L33cb30.  v9:= v9 + 1;
  #L33cb34.  goto L33cb24;
  #L33cb36.  v7:= 0I;
  #L33cb38.  if v9 < v10 then goto L33cb3e;
  #L33cb3c.  return v7;
  #L33cb3e.  if v9 < v10 then goto L33cb44;
  #L33cb42.  return v7;
  #L33cb44.  v0:= v9 + 1;
  #L33cb48.  v9:= v8[v9] @kind byte;
  #L33cb4c.  if v9 >= 0 then goto L33cc10;
  #L33cb50.  v1:= -32I;
  #L33cb54.  v2:= -1I;
  #L33cb56.  v3:= -65I;
  #L33cb5a.  if v9 >= v1 then goto L33cb7a;
  #L33cb5e.  if v0 < v10 then goto L33cb64;
  #L33cb62.  return v9;
  #L33cb64.  v1:= -62I;
  #L33cb68.  if v9 < v1 then goto L33cb78;
  #L33cb6c.  v9:= v0 + 1;
  #L33cb70.  v0:= v8[v0] @kind byte;
  #L33cb74.  if v0 <= v3 then goto L33cb3e;
  #L33cb78.  return v2;
  #L33cb7a.  v4:= -16I;
  #L33cb7e.  if v9 >= v4 then goto L33cbc6;
  #L33cb82.  v4:= v10 + -1;
  #L33cb86.  if v0 < v4 then goto L33cb94;
  #L33cb8a.  call temp:= `c`(v8, v0, v10) @signature `Le/e/a/b/f/u/s7;.c:([BII)I` @kind static;
  #L33cb90.  v7:= temp;
  #L33cb92.  return v7;
  #L33cb94.  v4:= v0 + 1;
  #L33cb98.  v0:= v8[v0] @kind byte;
  #L33cb9c.  if v0 > v3 then goto L33cbc4;
  #L33cba0.  v5:= -96I;
  #L33cba4.  if v9 != v1 then goto L33cbac;
  #L33cba8.  if v0 < v5 then goto L33cbc4;
  #L33cbac.  v1:= -19I;
  #L33cbb0.  if v9 != v1 then goto L33cbb8;
  #L33cbb4.  if v0 >= v5 then goto L33cbc4;
  #L33cbb8.  v9:= v4 + 1;
  #L33cbbc.  v0:= v8[v4] @kind byte;
  #L33cbc0.  if v0 <= v3 then goto L33cb3e;
  #L33cbc4.  return v2;
  #L33cbc6.  v1:= v10 + -2;
  #L33cbca.  if v0 < v1 then goto L33cbd8;
  #L33cbce.  call temp:= `c`(v8, v0, v10) @signature `Le/e/a/b/f/u/s7;.c:([BII)I` @kind static;
  #L33cbd4.  v7:= temp;
  #L33cbd6.  return v7;
  #L33cbd8.  v1:= v0 + 1;
  #L33cbdc.  v0:= v8[v0] @kind byte;
  #L33cbe0.  if v0 > v3 then goto L33cc0e;
  #L33cbe4.  v9:= v9 ^< 28;
  #L33cbe8.  v0:= v0 + 112;
  #L33cbec.  v9:= v9 + v0 @kind int;
  #L33cbee.  v9:= v9 ^> 30;
  #L33cbf2.  if v9 != 0 then goto L33cc0e;
  #L33cbf6.  v9:= v1 + 1;
  #L33cbfa.  v0:= v8[v1] @kind byte;
  #L33cbfe.  if v0 > v3 then goto L33cc0e;
  #L33cc02.  v0:= v9 + 1;
  #L33cc06.  v9:= v8[v9] @kind byte;
  #L33cc0a.  if v9 <= v3 then goto L33cc10;
  #L33cc0e.  return v2;
  #L33cc10.  v9:= v0;
  #L33cc12.  goto L33cb3e;
}
procedure `int` `a`(`e.e.a.b.f.u.w7` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Le/e/a/b/f/u/w7;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33cc24.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L33cc2a.  v0:= temp;
  #L33cc2c.  v11:= v11 + v10 @kind int;
  #L33cc2e.  v1:= 0I;
  #L33cc30.  v2:= 128I;
  #L33cc34.  if v1 >= v0 then goto L33cc58;
  #L33cc38.  v3:= v1 + v10 @kind int;
  #L33cc3c.  if v3 >= v11 then goto L33cc58;
  #L33cc40.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33cc46.  v4:= temp;
  #L33cc48.  if v4 >= v2 then goto L33cc58;
  #L33cc4c.  v2:= (`byte`) v4 @kind i2b;
  #L33cc4e.  v9[v3]:= v2 @kind byte;
  #L33cc52.  v1:= v1 + 1;
  #L33cc56.  goto L33cc30;
  #L33cc58.  if v1 != v0 then goto L33cc60;
  #L33cc5c.  v10:= v10 + v0 @kind int;
  #L33cc5e.  return v10;
  #L33cc60.  v10:= v10 + v1 @kind int;
  #L33cc62.  if v1 >= v0 then goto L33ce22;
  #L33cc66.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33cc6c.  v3:= temp;
  #L33cc6e.  if v3 >= v2 then goto L33cc86;
  #L33cc72.  if v10 >= v11 then goto L33cc86;
  #L33cc76.  v4:= v10 + 1;
  #L33cc7a.  v3:= (`byte`) v3 @kind i2b;
  #L33cc7c.  v9[v10]:= v3 @kind byte;
  #L33cc80.  v10:= v4;
  #L33cc82.  goto L33cd8e;
  #L33cc86.  v4:= 2048I;
  #L33cc8a.  if v3 >= v4 then goto L33ccba;
  #L33cc8e.  v4:= v11 + -2;
  #L33cc92.  if v10 > v4 then goto L33ccba;
  #L33cc96.  v4:= v10 + 1;
  #L33cc9a.  v5:= v3 ^>> 6;
  #L33cc9e.  v5:= v5 ^| 960;
  #L33cca2.  v5:= (`byte`) v5 @kind i2b;
  #L33cca4.  v9[v10]:= v5 @kind byte;
  #L33cca8.  v10:= v4 + 1;
  #L33ccac.  v3:= v3 ^& 63;
  #L33ccb0.  v3:= v3 ^| v2 @kind int;
  #L33ccb2.  v3:= (`byte`) v3 @kind i2b;
  #L33ccb4.  v9[v4]:= v3 @kind byte;
  #L33ccb8.  goto L33cd8e;
  #L33ccba.  v4:= 57343I;
  #L33ccc0.  v5:= 55296I;
  #L33ccc6.  if v3 < v5 then goto L33ccce;
  #L33ccca.  if v4 >= v3 then goto L33cd0e;
  #L33ccce.  v6:= v11 + -3;
  #L33ccd2.  if v10 > v6 then goto L33cd0e;
  #L33ccd6.  v4:= v10 + 1;
  #L33ccda.  v5:= v3 ^>> 12;
  #L33ccde.  v5:= v5 ^| 480;
  #L33cce2.  v5:= (`byte`) v5 @kind i2b;
  #L33cce4.  v9[v10]:= v5 @kind byte;
  #L33cce8.  v10:= v4 + 1;
  #L33ccec.  v5:= v3 ^>> 6;
  #L33ccf0.  v5:= v5 ^& 63;
  #L33ccf4.  v5:= v5 ^| v2 @kind int;
  #L33ccf6.  v5:= (`byte`) v5 @kind i2b;
  #L33ccf8.  v9[v4]:= v5 @kind byte;
  #L33ccfc.  v4:= v10 + 1;
  #L33cd00.  v3:= v3 ^& 63;
  #L33cd04.  v3:= v3 ^| v2 @kind int;
  #L33cd06.  v3:= (`byte`) v3 @kind i2b;
  #L33cd08.  v9[v10]:= v3 @kind byte;
  #L33cd0c.  goto L33cc80;
  #L33cd0e.  v6:= v11 + -4;
  #L33cd12.  if v10 > v6 then goto L33cda8;
  #L33cd16.  v4:= v1 + 1;
  #L33cd1a.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L33cd20.  v5:= temp;
  #L33cd22.  if v4 == v5 then goto L33cd98;
  #L33cd26.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33cd2c.  v1:= temp;
  #L33cd2e.  call temp:= `isSurrogatePair`(v3, v1) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L33cd34.  v5:= temp;
  #L33cd36.  if v5 == 0 then goto L33cd96;
  #L33cd3a.  call temp:= `toCodePoint`(v3, v1) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L33cd40.  v1:= temp;
  #L33cd42.  v3:= v10 + 1;
  #L33cd46.  v5:= v1 ^>> 18;
  #L33cd4a.  v5:= v5 ^| 240;
  #L33cd4e.  v5:= (`byte`) v5 @kind i2b;
  #L33cd50.  v9[v10]:= v5 @kind byte;
  #L33cd54.  v10:= v3 + 1;
  #L33cd58.  v5:= v1 ^>> 12;
  #L33cd5c.  v5:= v5 ^& 63;
  #L33cd60.  v5:= v5 ^| v2 @kind int;
  #L33cd62.  v5:= (`byte`) v5 @kind i2b;
  #L33cd64.  v9[v3]:= v5 @kind byte;
  #L33cd68.  v3:= v10 + 1;
  #L33cd6c.  v5:= v1 ^>> 6;
  #L33cd70.  v5:= v5 ^& 63;
  #L33cd74.  v5:= v5 ^| v2 @kind int;
  #L33cd76.  v5:= (`byte`) v5 @kind i2b;
  #L33cd78.  v9[v10]:= v5 @kind byte;
  #L33cd7c.  v10:= v3 + 1;
  #L33cd80.  v1:= v1 ^& 63;
  #L33cd84.  v1:= v1 ^| v2 @kind int;
  #L33cd86.  v1:= (`byte`) v1 @kind i2b;
  #L33cd88.  v9[v3]:= v1 @kind byte;
  #L33cd8c.  v1:= v4;
  #L33cd8e.  v1:= v1 + 1;
  #L33cd92.  goto L33cc62;
  #L33cd96.  v1:= v4;
  #L33cd98.  v8:= new `e.e.a.b.f.u.v7`;
  #L33cd9c.  v1:= v1 + -1;
  #L33cda0.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/u/v7;.<init>:(II)V` @kind direct;
  #L33cda6.  throw v8;
  #L33cda8.  if v5 > v3 then goto L33cde0;
  #L33cdac.  if v3 > v4 then goto L33cde0;
  #L33cdb0.  v9:= v1 + 1;
  #L33cdb4.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L33cdba.  v11:= temp;
  #L33cdbc.  if v9 == v11 then goto L33cdd4;
  #L33cdc0.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33cdc6.  v8:= temp;
  #L33cdc8.  call temp:= `isSurrogatePair`(v3, v8) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L33cdce.  v8:= temp;
  #L33cdd0.  if v8 != 0 then goto L33cde0;
  #L33cdd4.  v8:= new `e.e.a.b.f.u.v7`;
  #L33cdd8.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/u/v7;.<init>:(II)V` @kind direct;
  #L33cdde.  throw v8;
  #L33cde0.  v8:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33cde4.  v9:= 37I;
  #L33cde8.  v11:= new `java.lang.StringBuilder`;
  #L33cdec.  call `<init>`(v11, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L33cdf2.  v9:= "Failed writing " @kind object;
  #L33cdf6.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33cdfc.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33ce02.  v9:= " at index " @kind object;
  #L33ce06.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33ce0c.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33ce12.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33ce18.  v9:= temp @kind object;
  #L33ce1a.  call `<init>`(v8, v9) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33ce20.  throw v8;
  #L33ce22.  return v10;
}
procedure `java.lang.String` `b`(`e.e.a.b.f.u.w7` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Le/e/a/b/f/u/w7;.b:([BII)Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L33ce34.  v0:= v13 ^| v14 @kind int;
  #L33ce38.  v1:= length @variable v12;
  #L33ce3a.  v1:= v1 - v13 @kind int;
  #L33ce3c.  v1:= v1 - v14 @kind int;
  #L33ce3e.  v0:= v0 ^| v1 @kind int;
  #L33ce40.  v1:= 0I;
  #L33ce42.  v2:= 1I;
  #L33ce44.  if v0 < 0 then goto L33cf8a;
  #L33ce48.  v0:= v13 + v14 @kind int;
  #L33ce4c.  v14:= new `char`[v14];
  #L33ce50.  v3:= 0I;
  #L33ce52.  if v13 >= v0 then goto L33ce78;
  #L33ce56.  v4:= v12[v13] @kind byte;
  #L33ce5a.  call temp:= `a`(v4) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33ce60.  v5:= temp;
  #L33ce62.  if v5 == 0 then goto L33ce78;
  #L33ce66.  v13:= v13 + 1;
  #L33ce6a.  v5:= v3 + 1;
  #L33ce6e.  call `a`(v4, v14, v3) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33ce74.  v3:= v5;
  #L33ce76.  goto L33ce52;
  #L33ce78.  v8:= v3;
  #L33ce7a.  if v13 >= v0 then goto L33cf7e;
  #L33ce7e.  v3:= v13 + 1;
  #L33ce82.  v13:= v12[v13] @kind byte;
  #L33ce86.  call temp:= `a`(v13) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33ce8c.  v4:= temp;
  #L33ce8e.  if v4 == 0 then goto L33cec8;
  #L33ce92.  v4:= v8 + 1;
  #L33ce96.  call `a`(v13, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33ce9c.  if v3 >= v0 then goto L33cec2;
  #L33cea0.  v13:= v12[v3] @kind byte;
  #L33cea4.  call temp:= `a`(v13) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33ceaa.  v5:= temp;
  #L33ceac.  if v5 == 0 then goto L33cec2;
  #L33ceb0.  v3:= v3 + 1;
  #L33ceb4.  v5:= v4 + 1;
  #L33ceb8.  call `a`(v13, v14, v4) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33cebe.  v4:= v5;
  #L33cec0.  goto L33ce9c;
  #L33cec2.  v13:= v3;
  #L33cec4.  v8:= v4;
  #L33cec6.  goto L33ce7a;
  #L33cec8.  call temp:= `b`(v13) @signature `Le/e/a/b/f/u/u7;.b:(B)Z` @kind static;
  #L33cece.  v4:= temp;
  #L33ced0.  if v4 == 0 then goto L33cefa;
  #L33ced4.  if v3 >= v0 then goto L33cef0;
  #L33ced8.  v4:= v3 + 1;
  #L33cedc.  v3:= v12[v3] @kind byte;
  #L33cee0.  v5:= v8 + 1;
  #L33cee4.  call `a`(v13, v3, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(BB[CI)V` @kind static;
  #L33ceea.  v13:= v4;
  #L33ceec.  v8:= v5;
  #L33ceee.  goto L33ce7a;
  #L33cef0.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33cef6.  v12:= temp @kind object;
  #L33cef8.  throw v12;
  #L33cefa.  call temp:= `c`(v13) @signature `Le/e/a/b/f/u/u7;.c:(B)Z` @kind static;
  #L33cf00.  v4:= temp;
  #L33cf02.  if v4 == 0 then goto L33cf38;
  #L33cf06.  v4:= v0 + -1;
  #L33cf0a.  if v3 >= v4 then goto L33cf2e;
  #L33cf0e.  v4:= v3 + 1;
  #L33cf12.  v3:= v12[v3] @kind byte;
  #L33cf16.  v5:= v4 + 1;
  #L33cf1a.  v4:= v12[v4] @kind byte;
  #L33cf1e.  v6:= v8 + 1;
  #L33cf22.  call `a`(v13, v3, v4, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(BBB[CI)V` @kind static;
  #L33cf28.  v13:= v5;
  #L33cf2a.  v8:= v6;
  #L33cf2c.  goto L33ce7a;
  #L33cf2e.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33cf34.  v12:= temp @kind object;
  #L33cf36.  throw v12;
  #L33cf38.  v4:= v0 + -2;
  #L33cf3c.  if v3 >= v4 then goto L33cf74;
  #L33cf40.  v4:= v3 + 1;
  #L33cf44.  v5:= v12[v3] @kind byte;
  #L33cf48.  v3:= v4 + 1;
  #L33cf4c.  v6:= v12[v4] @kind byte;
  #L33cf50.  v9:= v3 + 1;
  #L33cf54.  v7:= v12[v3] @kind byte;
  #L33cf58.  v10:= v8 + 1;
  #L33cf5c.  v3:= v13;
  #L33cf5e.  v4:= v5;
  #L33cf60.  v5:= v6;
  #L33cf62.  v6:= v7;
  #L33cf64.  v7:= v14 @kind object;
  #L33cf66.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/u/u7;.a:(BBBB[CI)V` @kind static;
  #L33cf6c.  v10:= v10 + v2 @kind int;
  #L33cf6e.  v13:= v9;
  #L33cf70.  v8:= v10;
  #L33cf72.  goto L33ce7a;
  #L33cf74.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33cf7a.  v12:= temp @kind object;
  #L33cf7c.  throw v12;
  #L33cf7e.  v12:= new `java.lang.String`;
  #L33cf82.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L33cf88.  return v12 @kind object;
  #L33cf8a.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33cf8e.  v3:= 3I;
  #L33cf90.  v3:= new `java.lang.Object`[v3];
  #L33cf94.  v12:= length @variable v12;
  #L33cf96.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33cf9c.  v12:= temp @kind object;
  #L33cf9e.  v3[v1]:= v12 @kind object;
  #L33cfa2.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33cfa8.  v12:= temp @kind object;
  #L33cfaa.  v3[v2]:= v12 @kind object;
  #L33cfae.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33cfb4.  v12:= temp @kind object;
  #L33cfb6.  v13:= 2I;
  #L33cfb8.  v3[v13]:= v12 @kind object;
  #L33cfbc.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L33cfc0.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33cfc6.  v12:= temp @kind object;
  #L33cfc8.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33cfce.  throw v0;
}
