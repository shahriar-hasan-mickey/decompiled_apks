record `e.e.a.b.f.n.y20` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.y20.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.y20` `@@e.e.a.b.f.n.y20.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.y20` `@@e.e.a.b.f.n.y20.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.y20` `@@e.e.a.b.f.n.y20.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.y20`[] `@@e.e.a.b.f.n.y20.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/y20;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b7338.  v0:= new `e.e.a.b.f.n.y20`;
  #L2b733c.  v1:= 0I;
  #L2b733e.  v2:= "INVALID_MODE" @kind object;
  #L2b7342.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/y20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b7348.  `@@e.e.a.b.f.n.y20.c` @type ^`e.e.a.b.f.n.y20` := v0 @kind object;
  #L2b734c.  v0:= new `e.e.a.b.f.n.y20`;
  #L2b7350.  v2:= 1I;
  #L2b7352.  v3:= "STREAM" @kind object;
  #L2b7356.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/y20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b735c.  `@@e.e.a.b.f.n.y20.d` @type ^`e.e.a.b.f.n.y20` := v0 @kind object;
  #L2b7360.  v0:= new `e.e.a.b.f.n.y20`;
  #L2b7364.  v3:= 2I;
  #L2b7366.  v4:= "SINGLE_IMAGE" @kind object;
  #L2b736a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/y20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b7370.  `@@e.e.a.b.f.n.y20.e` @type ^`e.e.a.b.f.n.y20` := v0 @kind object;
  #L2b7374.  v0:= 3I;
  #L2b7376.  v0:= new `e.e.a.b.f.n.y20`[v0];
  #L2b737a.  v4:= `@@e.e.a.b.f.n.y20.c` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b737e.  v0[v1]:= v4 @kind object;
  #L2b7382.  v1:= `@@e.e.a.b.f.n.y20.d` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b7386.  v0[v2]:= v1 @kind object;
  #L2b738a.  v1:= `@@e.e.a.b.f.n.y20.e` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b738e.  v0[v3]:= v1 @kind object;
  #L2b7392.  `@@e.e.a.b.f.n.y20.f` @type ^`e.e.a.b.f.n.y20`[] := v0 @kind object;
  #L2b7396.  v0:= new `e.e.a.b.f.n.w20`;
  #L2b739a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/w20;.<init>:()V` @kind direct;
  #L2b73a0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.y20` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/y20;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b73b4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b73ba.  v0.`e.e.a.b.f.n.y20.b` @type ^`int` := v3;
  #L2b73be.  return @kind void;
}
procedure `e.e.a.b.f.n.y20` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/y20;.a:(I)Le/e/a/b/f/n/y20;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b7234.  if v1 == 0 then goto L2b7254;
  #L2b7238.  v0:= 1I;
  #L2b723a.  if v1 == v0 then goto L2b724e;
  #L2b723e.  v0:= 2I;
  #L2b7240.  if v1 == v0 then goto L2b7248;
  #L2b7244.  v1:= 0I;
  #L2b7246.  return v1 @kind object;
  #L2b7248.  v1:= `@@e.e.a.b.f.n.y20.e` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b724c.  return v1 @kind object;
  #L2b724e.  v1:= `@@e.e.a.b.f.n.y20.d` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b7252.  return v1 @kind object;
  #L2b7254.  v1:= `@@e.e.a.b.f.n.y20.c` @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b7258.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/y20;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b721c.  v0:= `@@e.e.a.b.f.n.x20.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b7220.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.y20`[] `values`() @signature `Le/e/a/b/f/n/y20;.values:()[Le/e/a/b/f/n/y20;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b726c.  v0:= `@@e.e.a.b.f.n.y20.f` @type ^`e.e.a.b.f.n.y20`[] @kind object;
  #L2b7270.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/y20;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b7276.  v0:= temp @kind object;
  #L2b7278.  v0:= (`e.e.a.b.f.n.y20`[]) v0 @kind object;
  #L2b727c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.y20` v2 @kind this) @signature `Le/e/a/b/f/n/y20;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b72a8.  v0:= new `java.lang.StringBuilder`;
  #L2b72ac.  v1:= "<" @kind object;
  #L2b72b0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b72b6.  v1:= constclass @type ^`e.e.a.b.f.n.y20` @kind object;
  #L2b72ba.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b72c0.  v1:= temp @kind object;
  #L2b72c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b72c8.  v1:= 64I;
  #L2b72cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b72d2.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b72d8.  v1:= temp;
  #L2b72da.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b72e0.  v1:= temp @kind object;
  #L2b72e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b72e8.  v1:= " number=" @kind object;
  #L2b72ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b72f2.  v1:= v2.`e.e.a.b.f.n.y20.b` @type ^`int`;
  #L2b72f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b72fc.  v1:= " name=" @kind object;
  #L2b7300.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7306.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b730c.  v1:= temp @kind object;
  #L2b730e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7314.  v1:= 62I;
  #L2b7318.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b731e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b7324.  v0:= temp @kind object;
  #L2b7326.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.y20` v1 @kind this) @signature `Le/e/a/b/f/n/y20;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b7290.  v0:= v1.`e.e.a.b.f.n.y20.b` @type ^`int`;
  #L2b7294.  return v0;
}
