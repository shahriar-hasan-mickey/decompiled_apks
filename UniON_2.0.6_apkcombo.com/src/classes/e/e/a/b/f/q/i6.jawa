record `e.e.a.b.f.q.i6` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`java.util.Set` v3 @kind object) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e4dac.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e4db2.  v3:= temp @kind object;
  #L2e4db4.  v0:= 0I;
  #L2e4db6.  v1:= 0I;
  #L2e4db8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e4dbe.  v2:= temp;
  #L2e4dc0.  if v2 == 0 then goto L2e4de0;
  #L2e4dc4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e4dca.  v2:= temp @kind object;
  #L2e4dcc.  if v2 == 0 then goto L2e4dda;
  #L2e4dd0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e4dd6.  v2:= temp;
  #L2e4dd8.  goto L2e4ddc;
  #L2e4dda.  v2:= 0I;
  #L2e4ddc.  v1:= v1 + v2 @kind int;
  #L2e4dde.  goto L2e4db8;
  #L2e4de0.  return v1;
}
procedure `boolean` `a`(`java.util.Set` v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;Ljava/util/Collection;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e4d14.  v0:= 0I;
  #L2e4d16.  if v4 == 0 then goto L2e4d98;
  #L2e4d1a.  v1:= instanceof @variable v4 @type ^`e.e.a.b.f.q.y5` @kind boolean;
  #L2e4d1e.  if v1 == 0 then goto L2e4d2e;
  #L2e4d22.  v4:= (`e.e.a.b.f.q.y5`) v4 @kind object;
  #L2e4d26.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/q/y5;.zza:()Ljava/util/Set;` @kind interface;
  #L2e4d2c.  v4:= temp @kind object;
  #L2e4d2e.  v1:= instanceof @variable v4 @type ^`java.util.Set` @kind boolean;
  #L2e4d32.  if v1 == 0 then goto L2e4d86;
  #L2e4d36.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2e4d3c.  v1:= temp;
  #L2e4d3e.  call temp:= `size`(v3) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2e4d44.  v2:= temp;
  #L2e4d46.  if v1 <= v2 then goto L2e4d86;
  #L2e4d4a.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e4d50.  v3:= temp @kind object;
  #L2e4d52.  if v4 == 0 then goto L2e4d84;
  #L2e4d56.  v0:= 0I;
  #L2e4d58.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e4d5e.  v1:= temp;
  #L2e4d60.  if v1 == 0 then goto L2e4d82;
  #L2e4d64.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e4d6a.  v1:= temp @kind object;
  #L2e4d6c.  call temp:= `contains`(v4, v1) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2e4d72.  v1:= temp;
  #L2e4d74.  if v1 == 0 then goto L2e4d58;
  #L2e4d78.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2e4d7e.  v0:= 1I;
  #L2e4d80.  goto L2e4d58;
  #L2e4d82.  return v0;
  #L2e4d84.  throw v0;
  #L2e4d86.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e4d8c.  v4:= temp @kind object;
  #L2e4d8e.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;Ljava/util/Iterator;)Z` @kind static;
  #L2e4d94.  v3:= temp;
  #L2e4d96.  return v3;
  #L2e4d98.  throw v0;
}
procedure `boolean` `a`(`java.util.Set` v3 @kind object, `java.util.Iterator` v4 @kind object) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;Ljava/util/Iterator;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e4cd4.  v0:= 0I;
  #L2e4cd6.  v1:= 0I;
  #L2e4cd8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e4cde.  v2:= temp;
  #L2e4ce0.  if v2 == 0 then goto L2e4cf8;
  #L2e4ce4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e4cea.  v2:= temp @kind object;
  #L2e4cec.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2e4cf2.  v2:= temp;
  #L2e4cf4.  v1:= v1 ^| v2 @kind int;
  #L2e4cf6.  goto L2e4cd8;
  #L2e4cf8.  v3:= 1I;
  #L2e4cfa.  if v3 == v1 then goto L2e4d00;
  #L2e4cfe.  return v0;
  #L2e4d00.  return v3;
}
