record `e.e.a.b.f.c.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.c.b` `@@e.e.a.b.f.c.a.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/c/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L217f38.  v0:= new `e.e.a.b.f.c.c`;
  #L217f3c.  v1:= 0I;
  #L217f3e.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/c/c;.<init>:(Le/e/a/b/f/c/d;)V` @kind direct;
  #L217f44.  `@@e.e.a.b.f.c.a.a` @type ^`e.e.a.b.f.c.b` := v0 @kind object;
  #L217f48.  return @kind void;
}
procedure `e.e.a.b.f.c.b` `a`() @signature `Le/e/a/b/f/c/a;.a:()Le/e/a/b/f/c/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L217f20.  v0:= `@@e.e.a.b.f.c.a.a` @type ^`e.e.a.b.f.c.b` @kind object;
  #L217f24.  return v0 @kind object;
}
