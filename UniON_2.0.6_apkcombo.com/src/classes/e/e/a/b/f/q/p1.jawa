record `e.e.a.b.f.q.p1` @kind class @AccessFlag FINAL {
}
global `java.lang.Class` `@@e.e.a.b.f.q.p1.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.q.b2` `@@e.e.a.b.f.q.p1.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.q.b2` `@@e.e.a.b.f.q.p1.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.q.b2` `@@e.e.a.b.f.q.p1.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/p1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2dbc40.  v0:= "com.google.protobuf.GeneratedMessage" @kind object;
  #L2dbc44.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2dbc4a.  v0:= temp @kind object;
  #L2dbc4c.  goto L2dbc50;
  #L2dbc4e.  v0:= 0I;
  #L2dbc50.  `@@e.e.a.b.f.q.p1.a` @type ^`java.lang.Class` := v0 @kind object;
  #L2dbc54.  v0:= 0I;
  #L2dbc56.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/p1;.a:(Z)Le/e/a/b/f/q/b2;` @kind static;
  #L2dbc5c.  v0:= temp @kind object;
  #L2dbc5e.  `@@e.e.a.b.f.q.p1.b` @type ^`e.e.a.b.f.q.b2` := v0 @kind object;
  #L2dbc62.  v0:= 1I;
  #L2dbc64.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/p1;.a:(Z)Le/e/a/b/f/q/b2;` @kind static;
  #L2dbc6a.  v0:= temp @kind object;
  #L2dbc6c.  `@@e.e.a.b.f.q.p1.c` @type ^`e.e.a.b.f.q.b2` := v0 @kind object;
  #L2dbc70.  v0:= new `e.e.a.b.f.q.e2`;
  #L2dbc74.  call `<init>`(v0) @signature `Le/e/a/b/f/q/e2;.<init>:()V` @kind direct;
  #L2dbc7a.  `@@e.e.a.b.f.q.p1.d` @type ^`e.e.a.b.f.q.b2` := v0 @kind object;
  #L2dbc7e.  return @kind void;
  catch `java.lang.Throwable` @[L2dbc44..L2dbc4c] goto L2dbc4e;
}
procedure `int` `a`(`int` v1 , `java.lang.Object` v2 @kind object, `e.e.a.b.f.q.n1` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/lang/Object;Le/e/a/b/f/q/n1;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2dbaec.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.q.j0` @kind boolean;
  #L2dbaf0.  if v0 == 0 then goto L2dbb16;
  #L2dbaf4.  v2:= (`e.e.a.b.f.q.j0`) v2 @kind object;
  #L2dbaf8.  call temp:= `e`(v1) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dbafe.  v1:= temp;
  #L2dbb00.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/j0;.a:()I` @kind virtual;
  #L2dbb06.  v2:= temp;
  #L2dbb08.  call temp:= `g`(v2) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2dbb0e.  v3:= temp;
  #L2dbb10.  v3:= v3 + v2 @kind int;
  #L2dbb12.  v1:= v1 + v3 @kind int;
  #L2dbb14.  return v1;
  #L2dbb16.  v2:= (`e.e.a.b.f.q.b1`) v2 @kind object;
  #L2dbb1a.  call temp:= `e`(v1) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dbb20.  v1:= temp;
  #L2dbb22.  call temp:= `a`(v2, v3) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/b1;Le/e/a/b/f/q/n1;)I` @kind static;
  #L2dbb28.  v2:= temp;
  #L2dbb2a.  v1:= v1 + v2 @kind int;
  #L2dbb2c.  return v1;
}
procedure `int` `a`(`int` v4 , `java.util.List` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dba44.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dba4a.  v0:= temp;
  #L2dba4c.  v1:= 0I;
  #L2dba4e.  if v0 != 0 then goto L2dba54;
  #L2dba52.  return v1;
  #L2dba54.  call temp:= `e`(v4) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dba5a.  v4:= temp;
  #L2dba5c.  v4:= v4 * v0 @kind int;
  #L2dba60.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.q.l0` @kind boolean;
  #L2dba64.  if v2 == 0 then goto L2dbaa2;
  #L2dba68.  v5:= (`e.e.a.b.f.q.l0`) v5 @kind object;
  #L2dba6c.  if v1 >= v0 then goto L2dbad8;
  #L2dba70.  call temp:= `c`(v5, v1) @signature `Le/e/a/b/f/q/l0;.c:(I)Ljava/lang/Object;` @kind interface;
  #L2dba76.  v2:= temp @kind object;
  #L2dba78.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.q.hv` @kind boolean;
  #L2dba7c.  if v3 == 0 then goto L2dba8e;
  #L2dba80.  v2:= (`e.e.a.b.f.q.hv`) v2 @kind object;
  #L2dba84.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/hv;)I` @kind static;
  #L2dba8a.  v2:= temp;
  #L2dba8c.  goto L2dba9a;
  #L2dba8e.  v2:= (`java.lang.String`) v2 @kind object;
  #L2dba92.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Ljava/lang/String;)I` @kind static;
  #L2dba98.  v2:= temp;
  #L2dba9a.  v4:= v4 + v2 @kind int;
  #L2dba9c.  v1:= v1 + 1;
  #L2dbaa0.  goto L2dba6c;
  #L2dbaa2.  if v1 >= v0 then goto L2dbad8;
  #L2dbaa6.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dbaac.  v2:= temp @kind object;
  #L2dbaae.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.q.hv` @kind boolean;
  #L2dbab2.  if v3 == 0 then goto L2dbac4;
  #L2dbab6.  v2:= (`e.e.a.b.f.q.hv`) v2 @kind object;
  #L2dbaba.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/hv;)I` @kind static;
  #L2dbac0.  v2:= temp;
  #L2dbac2.  goto L2dbad0;
  #L2dbac4.  v2:= (`java.lang.String`) v2 @kind object;
  #L2dbac8.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Ljava/lang/String;)I` @kind static;
  #L2dbace.  v2:= temp;
  #L2dbad0.  v4:= v4 + v2 @kind int;
  #L2dbad2.  v1:= v1 + 1;
  #L2dbad6.  goto L2dbaa2;
  #L2dbad8.  return v4;
}
procedure `int` `a`(`int` v4 , `java.util.List` v5 @kind object, `e.e.a.b.f.q.n1` v6 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;Le/e/a/b/f/q/n1;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dbb40.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dbb46.  v0:= temp;
  #L2dbb48.  v1:= 0I;
  #L2dbb4a.  if v0 != 0 then goto L2dbb50;
  #L2dbb4e.  return v1;
  #L2dbb50.  call temp:= `e`(v4) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dbb56.  v4:= temp;
  #L2dbb58.  v4:= v4 * v0 @kind int;
  #L2dbb5c.  if v1 >= v0 then goto L2dbb92;
  #L2dbb60.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dbb66.  v2:= temp @kind object;
  #L2dbb68.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.q.j0` @kind boolean;
  #L2dbb6c.  if v3 == 0 then goto L2dbb7e;
  #L2dbb70.  v2:= (`e.e.a.b.f.q.j0`) v2 @kind object;
  #L2dbb74.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/j0;)I` @kind static;
  #L2dbb7a.  v2:= temp;
  #L2dbb7c.  goto L2dbb8a;
  #L2dbb7e.  v2:= (`e.e.a.b.f.q.b1`) v2 @kind object;
  #L2dbb82.  call temp:= `a`(v2, v6) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/b1;Le/e/a/b/f/q/n1;)I` @kind static;
  #L2dbb88.  v2:= temp;
  #L2dbb8a.  v4:= v4 + v2 @kind int;
  #L2dbb8c.  v1:= v1 + 1;
  #L2dbb90.  goto L2dbb5c;
  #L2dbb92.  return v4;
}
procedure `int` `a`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db4cc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db4d2.  v2:= temp;
  #L2db4d4.  if v2 != 0 then goto L2db4dc;
  #L2db4d8.  v0:= 0I;
  #L2db4da.  return v0;
  #L2db4dc.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/p1;.a:(Ljava/util/List;)I` @kind static;
  #L2db4e2.  v2:= temp;
  #L2db4e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db4ea.  v1:= temp;
  #L2db4ec.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db4f2.  v0:= temp;
  #L2db4f4.  v1:= v1 * v0 @kind int;
  #L2db4f8.  v2:= v2 + v1 @kind int;
  #L2db4fa.  return v2;
}
procedure `int` `a`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db454.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db45a.  v0:= temp;
  #L2db45c.  v1:= 0I;
  #L2db45e.  if v0 != 0 then goto L2db464;
  #L2db462.  return v1;
  #L2db464.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.q.q0` @kind boolean;
  #L2db468.  if v2 == 0 then goto L2db48e;
  #L2db46c.  v5:= (`e.e.a.b.f.q.q0`) v5 @kind object;
  #L2db470.  v2:= 0I;
  #L2db472.  if v1 >= v0 then goto L2db4b8;
  #L2db476.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/q/q0;.h:(I)J` @kind virtual;
  #L2db47c.  v3:= temp @kind wide;
  #L2db47e.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db484.  v3:= temp;
  #L2db486.  v2:= v2 + v3 @kind int;
  #L2db488.  v1:= v1 + 1;
  #L2db48c.  goto L2db472;
  #L2db48e.  v2:= 0I;
  #L2db490.  if v1 >= v0 then goto L2db4b8;
  #L2db494.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db49a.  v3:= temp @kind object;
  #L2db49c.  v3:= (`java.lang.Long`) v3 @kind object;
  #L2db4a0.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2db4a6.  v3:= temp @kind wide;
  #L2db4a8.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db4ae.  v3:= temp;
  #L2db4b0.  v2:= v2 + v3 @kind int;
  #L2db4b2.  v1:= v1 + 1;
  #L2db4b6.  goto L2db490;
  #L2db4b8.  return v2;
}
procedure `e.e.a.b.f.q.b2` `a`() @signature `Le/e/a/b/f/q/p1;.a:()Le/e/a/b/f/q/b2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2db394.  v0:= `@@e.e.a.b.f.q.p1.b` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2db398.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.b2` `a`(`boolean` v6 ) @signature `Le/e/a/b/f/q/p1;.a:(Z)Le/e/a/b/f/q/b2;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2db3dc.  v0:= "com.google.protobuf.UnknownFieldSetSchema" @kind object;
  #L2db3e0.  v1:= 0I;
  #L2db3e2.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2db3e8.  v0:= temp @kind object;
  #L2db3ea.  goto L2db3ee;
  #L2db3ec.  v0:= v1 @kind object;
  #L2db3ee.  if v0 != 0 then goto L2db3f4;
  #L2db3f2.  return v1 @kind object;
  #L2db3f4.  v2:= 1I;
  #L2db3f6.  v3:= new `java.lang.Class`[v2];
  #L2db3fa.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L2db3fe.  v5:= 0I;
  #L2db400.  v3[v5]:= v4 @kind object;
  #L2db404.  call temp:= `getConstructor`(v0, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L2db40a.  v0:= temp @kind object;
  #L2db40c.  v2:= new `java.lang.Object`[v2];
  #L2db410.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2db416.  v6:= temp @kind object;
  #L2db418.  v2[v5]:= v6 @kind object;
  #L2db41c.  call temp:= `newInstance`(v0, v2) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2db422.  v6:= temp @kind object;
  #L2db424.  v6:= (`e.e.a.b.f.q.b2`) v6 @kind object;
  #L2db428.  return v6 @kind object;
  #L2db42a.  return v1 @kind object;
  catch `java.lang.Throwable` @[L2db3e2..L2db3ea] goto L2db3ec;
  catch `java.lang.Throwable` @[L2db3f6..L2db428] goto L2db42a;
}
procedure `void` `a`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;Le/e/a/b/f/q/f;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbf8c.  if v2 == 0 then goto L2dbfa2;
  #L2dbf90.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbf96.  v0:= temp;
  #L2dbf98.  if v0 != 0 then goto L2dbfa2;
  #L2dbf9c.  call `a`(v3, v1, v2) @signature `Le/e/a/b/f/q/f;.a:(ILjava/util/List;)V` @kind virtual;
  #L2dbfa2.  return @kind void;
}
procedure `void` `a`(`int` v2 , `java.util.List` v3 @kind object, `e.e.a.b.f.q.f` v4 @kind object, `e.e.a.b.f.q.n1` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;Le/e/a/b/f/q/f;Le/e/a/b/f/q/n1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2dbfdc.  if v3 == 0 then goto L2dc00e;
  #L2dbfe0.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbfe6.  v0:= temp;
  #L2dbfe8.  if v0 != 0 then goto L2dc00e;
  #L2dbfec.  v0:= 0I;
  #L2dbfee.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dbff4.  v1:= temp;
  #L2dbff6.  if v0 >= v1 then goto L2dc00e;
  #L2dbffa.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dc000.  v1:= temp @kind object;
  #L2dc002.  call `a`(v4, v2, v1, v5) @signature `Le/e/a/b/f/q/f;.a:(ILjava/lang/Object;Le/e/a/b/f/q/n1;)V` @kind virtual;
  #L2dc008.  v0:= v0 + 1;
  #L2dc00c.  goto L2dbfee;
  #L2dc00e.  return @kind void;
}
procedure `void` `a`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.a:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbd5c.  if v2 == 0 then goto L2dbd72;
  #L2dbd60.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbd66.  v0:= temp;
  #L2dbd68.  if v0 != 0 then goto L2dbd72;
  #L2dbd6c.  call `a`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbd72.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.b2` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(Le/e/a/b/f/q/b2;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2dbcd4.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dbcda.  v0:= temp @kind object;
  #L2dbcdc.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dbce2.  v3:= temp @kind object;
  #L2dbce4.  call temp:= `b`(v1, v0, v3) @signature `Le/e/a/b/f/q/b2;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dbcea.  v3:= temp @kind object;
  #L2dbcec.  call `a`(v1, v2, v3) @signature `Le/e/a/b/f/q/b2;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L2dbcf2.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.h` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(Le/e/a/b/f/q/h;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2dbc9c.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/q/h;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dbca2.  v3:= temp @kind object;
  #L2dbca4.  v0:= v3.`e.e.a.b.f.q.l.a` @type ^`e.e.a.b.f.q.x1` @kind object;
  #L2dbca8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/AbstractMap;.isEmpty:()Z` @kind virtual;
  #L2dbcae.  v0:= temp;
  #L2dbcb0.  if v0 != 0 then goto L2dbcc2;
  #L2dbcb4.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/q/h;.b:(Ljava/lang/Object;)Le/e/a/b/f/q/l;` @kind virtual;
  #L2dbcba.  v1:= temp @kind object;
  #L2dbcbc.  call `a`(v1, v3) @signature `Le/e/a/b/f/q/l;.a:(Le/e/a/b/f/q/l;)V` @kind virtual;
  #L2dbcc2.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.w0` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `long` v4 ) @signature `Le/e/a/b/f/q/p1;.a:(Le/e/a/b/f/q/w0;Ljava/lang/Object;Ljava/lang/Object;J)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2dbd04.  call temp:= `h`(v2, v4) @signature `Le/e/a/b/f/q/n2;.h:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L2dbd0a.  v1:= temp @kind object;
  #L2dbd0c.  call temp:= `h`(v3, v4) @signature `Le/e/a/b/f/q/n2;.h:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L2dbd12.  v3:= temp @kind object;
  #L2dbd14.  v1:= (`e.e.a.b.f.q.v0`) v1 @kind object;
  #L2dbd18.  v3:= (`e.e.a.b.f.q.v0`) v3 @kind object;
  #L2dbd1c.  call temp:= `isEmpty`(v3) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2dbd22.  v0:= temp;
  #L2dbd24.  if v0 != 0 then goto L2dbd42;
  #L2dbd28.  call temp:= `e`(v1) @signature `Le/e/a/b/f/q/v0;.e:()Z` @kind virtual;
  #L2dbd2e.  v0:= temp;
  #L2dbd30.  if v0 != 0 then goto L2dbd3c;
  #L2dbd34.  call temp:= `c`(v1) @signature `Le/e/a/b/f/q/v0;.c:()Le/e/a/b/f/q/v0;` @kind virtual;
  #L2dbd3a.  v1:= temp @kind object;
  #L2dbd3c.  call `a`(v1, v3) @signature `Le/e/a/b/f/q/v0;.a:(Le/e/a/b/f/q/v0;)V` @kind virtual;
  #L2dbd42.  call `a`(v2, v4, v1) @signature `Le/e/a/b/f/q/n2;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L2dbd48.  return @kind void;
}
procedure `void` `a`(`java.lang.Class` v1 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dc064.  v0:= constclass @type ^`e.e.a.b.f.q.t` @kind object;
  #L2dc068.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2dc06e.  v0:= temp;
  #L2dc070.  if v0 != 0 then goto L2dc09a;
  #L2dc074.  v0:= `@@e.e.a.b.f.q.p1.a` @type ^`java.lang.Class` @kind object;
  #L2dc078.  if v0 == 0 then goto L2dc09a;
  #L2dc07c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2dc082.  v1:= temp;
  #L2dc084.  if v1 == 0 then goto L2dc08a;
  #L2dc088.  goto L2dc09a;
  #L2dc08a.  v1:= new `java.lang.IllegalArgumentException`;
  #L2dc08e.  v0:= "Message classes must extend GeneratedMessage or GeneratedMessageLite" @kind object;
  #L2dc092.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dc098.  throw v1;
  #L2dc09a.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2db364.  v0:= 0I;
  #L2db366.  v1:= 1I;
  #L2db368.  if v2 == v3 then goto L2db382;
  #L2db36c.  if v2 == 0 then goto L2db380;
  #L2db370.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2db376.  v2:= temp;
  #L2db378.  if v2 == 0 then goto L2db37e;
  #L2db37c.  goto L2db382;
  #L2db37e.  return v0;
  #L2db380.  v1:= 0I;
  #L2db382.  return v1;
}
procedure `int` `b`(`int` v2 , `java.util.List` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2dbba4.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dbbaa.  v0:= temp;
  #L2dbbac.  v1:= 0I;
  #L2dbbae.  if v0 != 0 then goto L2dbbb4;
  #L2dbbb2.  return v1;
  #L2dbbb4.  call temp:= `e`(v2) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dbbba.  v2:= temp;
  #L2dbbbc.  v0:= v0 * v2 @kind int;
  #L2dbbc0.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dbbc6.  v2:= temp;
  #L2dbbc8.  if v1 >= v2 then goto L2dbbe8;
  #L2dbbcc.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dbbd2.  v2:= temp @kind object;
  #L2dbbd4.  v2:= (`e.e.a.b.f.q.hv`) v2 @kind object;
  #L2dbbd8.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/e;.a:(Le/e/a/b/f/q/hv;)I` @kind static;
  #L2dbbde.  v2:= temp;
  #L2dbbe0.  v0:= v0 + v2 @kind int;
  #L2dbbe2.  v1:= v1 + 1;
  #L2dbbe6.  goto L2dbbc0;
  #L2dbbe8.  return v0;
}
procedure `int` `b`(`int` v4 , `java.util.List` v5 @kind object, `e.e.a.b.f.q.n1` v6 @kind object) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;Le/e/a/b/f/q/n1;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dbbfc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dbc02.  v0:= temp;
  #L2dbc04.  v1:= 0I;
  #L2dbc06.  if v0 == 0 then goto L2dbc2e;
  #L2dbc0a.  v2:= 0I;
  #L2dbc0c.  if v1 >= v0 then goto L2dbc2c;
  #L2dbc10.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dbc16.  v3:= temp @kind object;
  #L2dbc18.  v3:= (`e.e.a.b.f.q.b1`) v3 @kind object;
  #L2dbc1c.  call temp:= `a`(v4, v3, v6) @signature `Le/e/a/b/f/q/e;.a:(ILe/e/a/b/f/q/b1;Le/e/a/b/f/q/n1;)I` @kind static;
  #L2dbc22.  v3:= temp;
  #L2dbc24.  v2:= v2 + v3 @kind int;
  #L2dbc26.  v1:= v1 + 1;
  #L2dbc2a.  goto L2dbc0c;
  #L2dbc2c.  return v2;
  #L2dbc2e.  return v1;
}
procedure `int` `b`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db584.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db58a.  v2:= temp;
  #L2db58c.  if v2 != 0 then goto L2db594;
  #L2db590.  v0:= 0I;
  #L2db592.  return v0;
  #L2db594.  call temp:= `b`(v1) @signature `Le/e/a/b/f/q/p1;.b:(Ljava/util/List;)I` @kind static;
  #L2db59a.  v1:= temp;
  #L2db59c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db5a2.  v0:= temp;
  #L2db5a4.  v2:= v2 * v0 @kind int;
  #L2db5a8.  v1:= v1 + v2 @kind int;
  #L2db5aa.  return v1;
}
procedure `int` `b`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.b:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db50c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db512.  v0:= temp;
  #L2db514.  v1:= 0I;
  #L2db516.  if v0 != 0 then goto L2db51c;
  #L2db51a.  return v1;
  #L2db51c.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.q.q0` @kind boolean;
  #L2db520.  if v2 == 0 then goto L2db546;
  #L2db524.  v5:= (`e.e.a.b.f.q.q0`) v5 @kind object;
  #L2db528.  v2:= 0I;
  #L2db52a.  if v1 >= v0 then goto L2db570;
  #L2db52e.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/q/q0;.h:(I)J` @kind virtual;
  #L2db534.  v3:= temp @kind wide;
  #L2db536.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db53c.  v3:= temp;
  #L2db53e.  v2:= v2 + v3 @kind int;
  #L2db540.  v1:= v1 + 1;
  #L2db544.  goto L2db52a;
  #L2db546.  v2:= 0I;
  #L2db548.  if v1 >= v0 then goto L2db570;
  #L2db54c.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db552.  v3:= temp @kind object;
  #L2db554.  v3:= (`java.lang.Long`) v3 @kind object;
  #L2db558.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2db55e.  v3:= temp @kind wide;
  #L2db560.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db566.  v3:= temp;
  #L2db568.  v2:= v2 + v3 @kind int;
  #L2db56a.  v1:= v1 + 1;
  #L2db56e.  goto L2db548;
  #L2db570.  return v2;
}
procedure `e.e.a.b.f.q.b2` `b`() @signature `Le/e/a/b/f/q/p1;.b:()Le/e/a/b/f/q/b2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2db3ac.  v0:= `@@e.e.a.b.f.q.p1.c` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2db3b0.  return v0 @kind object;
}
procedure `void` `b`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;Le/e/a/b/f/q/f;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbfb4.  if v2 == 0 then goto L2dbfca;
  #L2dbfb8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbfbe.  v0:= temp;
  #L2dbfc0.  if v0 != 0 then goto L2dbfca;
  #L2dbfc4.  call `b`(v3, v1, v2) @signature `Le/e/a/b/f/q/f;.b:(ILjava/util/List;)V` @kind virtual;
  #L2dbfca.  return @kind void;
}
procedure `void` `b`(`int` v2 , `java.util.List` v3 @kind object, `e.e.a.b.f.q.f` v4 @kind object, `e.e.a.b.f.q.n1` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;Le/e/a/b/f/q/f;Le/e/a/b/f/q/n1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2dc020.  if v3 == 0 then goto L2dc052;
  #L2dc024.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dc02a.  v0:= temp;
  #L2dc02c.  if v0 != 0 then goto L2dc052;
  #L2dc030.  v0:= 0I;
  #L2dc032.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dc038.  v1:= temp;
  #L2dc03a.  if v0 >= v1 then goto L2dc052;
  #L2dc03e.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2dc044.  v1:= temp @kind object;
  #L2dc046.  call `b`(v4, v2, v1, v5) @signature `Le/e/a/b/f/q/f;.b:(ILjava/lang/Object;Le/e/a/b/f/q/n1;)V` @kind virtual;
  #L2dc04c.  v0:= v0 + 1;
  #L2dc050.  goto L2dc032;
  #L2dc052.  return @kind void;
}
procedure `void` `b`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.b:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbd84.  if v2 == 0 then goto L2dbd9a;
  #L2dbd88.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbd8e.  v0:= temp;
  #L2dbd90.  if v0 != 0 then goto L2dbd9a;
  #L2dbd94.  call `n`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.n:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbd9a.  return @kind void;
}
procedure `int` `c`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.c:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db644.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db64a.  v2:= temp;
  #L2db64c.  if v2 != 0 then goto L2db654;
  #L2db650.  v0:= 0I;
  #L2db652.  return v0;
  #L2db654.  call temp:= `c`(v1) @signature `Le/e/a/b/f/q/p1;.c:(Ljava/util/List;)I` @kind static;
  #L2db65a.  v1:= temp;
  #L2db65c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db662.  v0:= temp;
  #L2db664.  v2:= v2 * v0 @kind int;
  #L2db668.  v1:= v1 + v2 @kind int;
  #L2db66a.  return v1;
}
procedure `int` `c`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/q/p1;.c:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db5bc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db5c2.  v0:= temp;
  #L2db5c4.  v1:= 0I;
  #L2db5c6.  if v0 != 0 then goto L2db5cc;
  #L2db5ca.  return v1;
  #L2db5cc.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.q.q0` @kind boolean;
  #L2db5d0.  if v2 == 0 then goto L2db5fe;
  #L2db5d4.  v5:= (`e.e.a.b.f.q.q0`) v5 @kind object;
  #L2db5d8.  v2:= 0I;
  #L2db5da.  if v1 >= v0 then goto L2db630;
  #L2db5de.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/q/q0;.h:(I)J` @kind virtual;
  #L2db5e4.  v3:= temp @kind wide;
  #L2db5e6.  call temp:= `c`(v3) @signature `Le/e/a/b/f/q/e;.c:(J)J` @kind static;
  #L2db5ec.  v3:= temp @kind wide;
  #L2db5ee.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db5f4.  v3:= temp;
  #L2db5f6.  v2:= v2 + v3 @kind int;
  #L2db5f8.  v1:= v1 + 1;
  #L2db5fc.  goto L2db5da;
  #L2db5fe.  v2:= 0I;
  #L2db600.  if v1 >= v0 then goto L2db630;
  #L2db604.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db60a.  v3:= temp @kind object;
  #L2db60c.  v3:= (`java.lang.Long`) v3 @kind object;
  #L2db610.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2db616.  v3:= temp @kind wide;
  #L2db618.  call temp:= `c`(v3) @signature `Le/e/a/b/f/q/e;.c:(J)J` @kind static;
  #L2db61e.  v3:= temp @kind wide;
  #L2db620.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(J)I` @kind static;
  #L2db626.  v3:= temp;
  #L2db628.  v2:= v2 + v3 @kind int;
  #L2db62a.  v1:= v1 + 1;
  #L2db62e.  goto L2db600;
  #L2db630.  return v2;
}
procedure `e.e.a.b.f.q.b2` `c`() @signature `Le/e/a/b/f/q/p1;.c:()Le/e/a/b/f/q/b2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2db3c4.  v0:= `@@e.e.a.b.f.q.p1.d` @type ^`e.e.a.b.f.q.b2` @kind object;
  #L2db3c8.  return v0 @kind object;
}
procedure `void` `c`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.c:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbdac.  if v2 == 0 then goto L2dbdc2;
  #L2dbdb0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbdb6.  v0:= temp;
  #L2dbdb8.  if v0 != 0 then goto L2dbdc2;
  #L2dbdbc.  call `k`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.k:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbdc2.  return @kind void;
}
procedure `int` `d`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.d:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db6f4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db6fa.  v2:= temp;
  #L2db6fc.  if v2 != 0 then goto L2db704;
  #L2db700.  v0:= 0I;
  #L2db702.  return v0;
  #L2db704.  call temp:= `d`(v1) @signature `Le/e/a/b/f/q/p1;.d:(Ljava/util/List;)I` @kind static;
  #L2db70a.  v1:= temp;
  #L2db70c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db712.  v0:= temp;
  #L2db714.  v2:= v2 * v0 @kind int;
  #L2db718.  v1:= v1 + v2 @kind int;
  #L2db71a.  return v1;
}
procedure `int` `d`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/q/p1;.d:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2db67c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db682.  v0:= temp;
  #L2db684.  v1:= 0I;
  #L2db686.  if v0 != 0 then goto L2db68c;
  #L2db68a.  return v1;
  #L2db68c.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.q.u` @kind boolean;
  #L2db690.  if v2 == 0 then goto L2db6b6;
  #L2db694.  v4:= (`e.e.a.b.f.q.u`) v4 @kind object;
  #L2db698.  v2:= 0I;
  #L2db69a.  if v1 >= v0 then goto L2db6e0;
  #L2db69e.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/q/u;.h:(I)I` @kind virtual;
  #L2db6a4.  v3:= temp;
  #L2db6a6.  call temp:= `f`(v3) @signature `Le/e/a/b/f/q/e;.f:(I)I` @kind static;
  #L2db6ac.  v3:= temp;
  #L2db6ae.  v2:= v2 + v3 @kind int;
  #L2db6b0.  v1:= v1 + 1;
  #L2db6b4.  goto L2db69a;
  #L2db6b6.  v2:= 0I;
  #L2db6b8.  if v1 >= v0 then goto L2db6e0;
  #L2db6bc.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db6c2.  v3:= temp @kind object;
  #L2db6c4.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L2db6c8.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2db6ce.  v3:= temp;
  #L2db6d0.  call temp:= `f`(v3) @signature `Le/e/a/b/f/q/e;.f:(I)I` @kind static;
  #L2db6d6.  v3:= temp;
  #L2db6d8.  v2:= v2 + v3 @kind int;
  #L2db6da.  v1:= v1 + 1;
  #L2db6de.  goto L2db6b8;
  #L2db6e0.  return v2;
}
procedure `void` `d`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.d:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbdd4.  if v2 == 0 then goto L2dbdea;
  #L2dbdd8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbdde.  v0:= temp;
  #L2dbde0.  if v0 != 0 then goto L2dbdea;
  #L2dbde4.  call `l`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.l:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbdea.  return @kind void;
}
procedure `int` `e`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.e:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db7a4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db7aa.  v2:= temp;
  #L2db7ac.  if v2 != 0 then goto L2db7b4;
  #L2db7b0.  v0:= 0I;
  #L2db7b2.  return v0;
  #L2db7b4.  call temp:= `e`(v1) @signature `Le/e/a/b/f/q/p1;.e:(Ljava/util/List;)I` @kind static;
  #L2db7ba.  v1:= temp;
  #L2db7bc.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db7c2.  v0:= temp;
  #L2db7c4.  v2:= v2 * v0 @kind int;
  #L2db7c8.  v1:= v1 + v2 @kind int;
  #L2db7ca.  return v1;
}
procedure `int` `e`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/q/p1;.e:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2db72c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db732.  v0:= temp;
  #L2db734.  v1:= 0I;
  #L2db736.  if v0 != 0 then goto L2db73c;
  #L2db73a.  return v1;
  #L2db73c.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.q.u` @kind boolean;
  #L2db740.  if v2 == 0 then goto L2db766;
  #L2db744.  v4:= (`e.e.a.b.f.q.u`) v4 @kind object;
  #L2db748.  v2:= 0I;
  #L2db74a.  if v1 >= v0 then goto L2db790;
  #L2db74e.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/q/u;.h:(I)I` @kind virtual;
  #L2db754.  v3:= temp;
  #L2db756.  call temp:= `f`(v3) @signature `Le/e/a/b/f/q/e;.f:(I)I` @kind static;
  #L2db75c.  v3:= temp;
  #L2db75e.  v2:= v2 + v3 @kind int;
  #L2db760.  v1:= v1 + 1;
  #L2db764.  goto L2db74a;
  #L2db766.  v2:= 0I;
  #L2db768.  if v1 >= v0 then goto L2db790;
  #L2db76c.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db772.  v3:= temp @kind object;
  #L2db774.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L2db778.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2db77e.  v3:= temp;
  #L2db780.  call temp:= `f`(v3) @signature `Le/e/a/b/f/q/e;.f:(I)I` @kind static;
  #L2db786.  v3:= temp;
  #L2db788.  v2:= v2 + v3 @kind int;
  #L2db78a.  v1:= v1 + 1;
  #L2db78e.  goto L2db768;
  #L2db790.  return v2;
}
procedure `void` `e`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.e:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbdfc.  if v2 == 0 then goto L2dbe12;
  #L2dbe00.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbe06.  v0:= temp;
  #L2dbe08.  if v0 != 0 then goto L2dbe12;
  #L2dbe0c.  call `h`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.h:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbe12.  return @kind void;
}
procedure `int` `f`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.f:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db854.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db85a.  v2:= temp;
  #L2db85c.  if v2 != 0 then goto L2db864;
  #L2db860.  v0:= 0I;
  #L2db862.  return v0;
  #L2db864.  call temp:= `f`(v1) @signature `Le/e/a/b/f/q/p1;.f:(Ljava/util/List;)I` @kind static;
  #L2db86a.  v1:= temp;
  #L2db86c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db872.  v0:= temp;
  #L2db874.  v2:= v2 * v0 @kind int;
  #L2db878.  v1:= v1 + v2 @kind int;
  #L2db87a.  return v1;
}
procedure `int` `f`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/q/p1;.f:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2db7dc.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db7e2.  v0:= temp;
  #L2db7e4.  v1:= 0I;
  #L2db7e6.  if v0 != 0 then goto L2db7ec;
  #L2db7ea.  return v1;
  #L2db7ec.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.q.u` @kind boolean;
  #L2db7f0.  if v2 == 0 then goto L2db816;
  #L2db7f4.  v4:= (`e.e.a.b.f.q.u`) v4 @kind object;
  #L2db7f8.  v2:= 0I;
  #L2db7fa.  if v1 >= v0 then goto L2db840;
  #L2db7fe.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/q/u;.h:(I)I` @kind virtual;
  #L2db804.  v3:= temp;
  #L2db806.  call temp:= `g`(v3) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2db80c.  v3:= temp;
  #L2db80e.  v2:= v2 + v3 @kind int;
  #L2db810.  v1:= v1 + 1;
  #L2db814.  goto L2db7fa;
  #L2db816.  v2:= 0I;
  #L2db818.  if v1 >= v0 then goto L2db840;
  #L2db81c.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db822.  v3:= temp @kind object;
  #L2db824.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L2db828.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2db82e.  v3:= temp;
  #L2db830.  call temp:= `g`(v3) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2db836.  v3:= temp;
  #L2db838.  v2:= v2 + v3 @kind int;
  #L2db83a.  v1:= v1 + 1;
  #L2db83e.  goto L2db818;
  #L2db840.  return v2;
}
procedure `void` `f`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.f:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbe24.  if v2 == 0 then goto L2dbe3a;
  #L2dbe28.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbe2e.  v0:= temp;
  #L2dbe30.  if v0 != 0 then goto L2dbe3a;
  #L2dbe34.  call `m`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.m:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbe3a.  return @kind void;
}
procedure `int` `g`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.g:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db914.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db91a.  v2:= temp;
  #L2db91c.  if v2 != 0 then goto L2db924;
  #L2db920.  v0:= 0I;
  #L2db922.  return v0;
  #L2db924.  call temp:= `g`(v1) @signature `Le/e/a/b/f/q/p1;.g:(Ljava/util/List;)I` @kind static;
  #L2db92a.  v1:= temp;
  #L2db92c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db932.  v0:= temp;
  #L2db934.  v2:= v2 * v0 @kind int;
  #L2db938.  v1:= v1 + v2 @kind int;
  #L2db93a.  return v1;
}
procedure `int` `g`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/q/p1;.g:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2db88c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db892.  v0:= temp;
  #L2db894.  v1:= 0I;
  #L2db896.  if v0 != 0 then goto L2db89c;
  #L2db89a.  return v1;
  #L2db89c.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.q.u` @kind boolean;
  #L2db8a0.  if v2 == 0 then goto L2db8ce;
  #L2db8a4.  v4:= (`e.e.a.b.f.q.u`) v4 @kind object;
  #L2db8a8.  v2:= 0I;
  #L2db8aa.  if v1 >= v0 then goto L2db900;
  #L2db8ae.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/q/u;.h:(I)I` @kind virtual;
  #L2db8b4.  v3:= temp;
  #L2db8b6.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(I)I` @kind static;
  #L2db8bc.  v3:= temp;
  #L2db8be.  call temp:= `g`(v3) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2db8c4.  v3:= temp;
  #L2db8c6.  v2:= v2 + v3 @kind int;
  #L2db8c8.  v1:= v1 + 1;
  #L2db8cc.  goto L2db8aa;
  #L2db8ce.  v2:= 0I;
  #L2db8d0.  if v1 >= v0 then goto L2db900;
  #L2db8d4.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2db8da.  v3:= temp @kind object;
  #L2db8dc.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L2db8e0.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2db8e6.  v3:= temp;
  #L2db8e8.  call temp:= `d`(v3) @signature `Le/e/a/b/f/q/e;.d:(I)I` @kind static;
  #L2db8ee.  v3:= temp;
  #L2db8f0.  call temp:= `g`(v3) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2db8f6.  v3:= temp;
  #L2db8f8.  v2:= v2 + v3 @kind int;
  #L2db8fa.  v1:= v1 + 1;
  #L2db8fe.  goto L2db8d0;
  #L2db900.  return v2;
}
procedure `void` `g`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.g:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbe4c.  if v2 == 0 then goto L2dbe62;
  #L2dbe50.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbe56.  v0:= temp;
  #L2dbe58.  if v0 != 0 then goto L2dbe62;
  #L2dbe5c.  call `f`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.f:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbe62.  return @kind void;
}
procedure `int` `h`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.h:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db96c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db972.  v1:= temp;
  #L2db974.  if v1 != 0 then goto L2db97c;
  #L2db978.  v0:= 0I;
  #L2db97a.  return v0;
  #L2db97c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db982.  v0:= temp;
  #L2db984.  v0:= v0 + 4;
  #L2db988.  v1:= v1 * v0 @kind int;
  #L2db98c.  return v1;
}
procedure `int` `h`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/q/p1;.h:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L2db94c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db952.  v0:= temp;
  #L2db954.  v0:= v0 * 4;
  #L2db958.  return v0;
}
procedure `void` `h`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.h:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbe74.  if v2 == 0 then goto L2dbe8a;
  #L2dbe78.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbe7e.  v0:= temp;
  #L2dbe80.  if v0 != 0 then goto L2dbe8a;
  #L2dbe84.  call `i`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.i:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbe8a.  return @kind void;
}
procedure `int` `i`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.i:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2db9c0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db9c6.  v1:= temp;
  #L2db9c8.  if v1 != 0 then goto L2db9d0;
  #L2db9cc.  v0:= 0I;
  #L2db9ce.  return v0;
  #L2db9d0.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2db9d6.  v0:= temp;
  #L2db9d8.  v0:= v0 + 8;
  #L2db9dc.  v1:= v1 * v0 @kind int;
  #L2db9e0.  return v1;
}
procedure `int` `i`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/q/p1;.i:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L2db9a0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db9a6.  v0:= temp;
  #L2db9a8.  v0:= v0 * 8;
  #L2db9ac.  return v0;
}
procedure `void` `i`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.i:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbe9c.  if v2 == 0 then goto L2dbeb2;
  #L2dbea0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbea6.  v0:= temp;
  #L2dbea8.  if v0 != 0 then goto L2dbeb2;
  #L2dbeac.  call `d`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.d:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbeb2.  return @kind void;
}
procedure `int` `j`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/q/p1;.j:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L2dba10.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2dba16.  v1:= temp;
  #L2dba18.  if v1 != 0 then goto L2dba20;
  #L2dba1c.  v0:= 0I;
  #L2dba1e.  return v0;
  #L2dba20.  call temp:= `e`(v0) @signature `Le/e/a/b/f/q/e;.e:(I)I` @kind static;
  #L2dba26.  v0:= temp;
  #L2dba28.  v0:= v0 + 1;
  #L2dba2c.  v1:= v1 * v0 @kind int;
  #L2dba30.  return v1;
}
procedure `int` `j`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/q/p1;.j:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L2db9f4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2db9fa.  v0:= temp;
  #L2db9fc.  return v0;
}
procedure `void` `j`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.j:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbec4.  if v2 == 0 then goto L2dbeda;
  #L2dbec8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbece.  v0:= temp;
  #L2dbed0.  if v0 != 0 then goto L2dbeda;
  #L2dbed4.  call `g`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.g:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbeda.  return @kind void;
}
procedure `void` `k`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.k:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbeec.  if v2 == 0 then goto L2dbf02;
  #L2dbef0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbef6.  v0:= temp;
  #L2dbef8.  if v0 != 0 then goto L2dbf02;
  #L2dbefc.  call `j`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.j:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbf02.  return @kind void;
}
procedure `void` `l`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.l:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbf14.  if v2 == 0 then goto L2dbf2a;
  #L2dbf18.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbf1e.  v0:= temp;
  #L2dbf20.  if v0 != 0 then goto L2dbf2a;
  #L2dbf24.  call `e`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.e:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbf2a.  return @kind void;
}
procedure `void` `m`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.m:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbf3c.  if v2 == 0 then goto L2dbf52;
  #L2dbf40.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbf46.  v0:= temp;
  #L2dbf48.  if v0 != 0 then goto L2dbf52;
  #L2dbf4c.  call `b`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.b:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbf52.  return @kind void;
}
procedure `void` `n`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.q.f` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/q/p1;.n:(ILjava/util/List;Le/e/a/b/f/q/f;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dbf64.  if v2 == 0 then goto L2dbf7a;
  #L2dbf68.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2dbf6e.  v0:= temp;
  #L2dbf70.  if v0 != 0 then goto L2dbf7a;
  #L2dbf74.  call `c`(v3, v1, v2, v4) @signature `Le/e/a/b/f/q/f;.c:(ILjava/util/List;Z)V` @kind virtual;
  #L2dbf7a.  return @kind void;
}
