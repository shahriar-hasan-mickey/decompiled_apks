record `e.e.a.b.f.q.m5` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.q.e5` @kind class, `java.util.Set` @kind interface {
  `e.e.a.b.f.q.j5` `e.e.a.b.f.q.m5.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.q.m5` v0 @kind this) @signature `Le/e/a/b/f/q/m5;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e3ae0.  call `<init>`(v0) @signature `Le/e/a/b/f/q/e5;.<init>:()V` @kind direct;
  #L2e3ae6.  return @kind void;
}
procedure `e.e.a.b.f.q.m5` `a`(`int` v13 , `java.lang.Object`[] v14 @kind object) @signature `Le/e/a/b/f/q/m5;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/q/m5;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2e394c.  if v13 == 0 then goto L2e3a26;
  #L2e3950.  v0:= 0I;
  #L2e3952.  v1:= 1I;
  #L2e3954.  if v13 == v1 then goto L2e3a16;
  #L2e3958.  call temp:= `d`(v13) @signature `Le/e/a/b/f/q/m5;.d:(I)I` @kind static;
  #L2e395e.  v2:= temp;
  #L2e3960.  v6:= new `java.lang.Object`[v2];
  #L2e3964.  v7:= v2 + -1;
  #L2e3968.  v3:= 0I;
  #L2e396a.  v5:= 0I;
  #L2e396c.  v8:= 0I;
  #L2e396e.  if v3 >= v13 then goto L2e39c2;
  #L2e3972.  v4:= v14[v3] @kind object;
  #L2e3976.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/q/z5;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L2e397c.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e3982.  v9:= temp;
  #L2e3984.  call temp:= `a`(v9) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e398a.  v10:= temp;
  #L2e398c.  v11:= v10 ^& v7 @kind int;
  #L2e3990.  v12:= v6[v11] @kind object;
  #L2e3994.  if v12 != 0 then goto L2e39aa;
  #L2e3998.  v10:= v8 + 1;
  #L2e399c.  v14[v8]:= v4 @kind object;
  #L2e39a0.  v6[v11]:= v4 @kind object;
  #L2e39a4.  v5:= v5 + v9 @kind int;
  #L2e39a6.  v8:= v10;
  #L2e39a8.  goto L2e39b6;
  #L2e39aa.  call temp:= `equals`(v12, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e39b0.  v11:= temp;
  #L2e39b2.  if v11 == 0 then goto L2e39bc;
  #L2e39b6.  v3:= v3 + 1;
  #L2e39ba.  goto L2e396e;
  #L2e39bc.  v10:= v10 + 1;
  #L2e39c0.  goto L2e398c;
  #L2e39c2.  v3:= 0I;
  #L2e39c4.  call `fill`(v14, v8, v13, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L2e39ca.  if v8 != v1 then goto L2e39de;
  #L2e39ce.  v13:= v14[v0] @kind object;
  #L2e39d2.  v14:= new `e.e.a.b.f.q.j6`;
  #L2e39d6.  call `<init>`(v14, v13, v5) @signature `Le/e/a/b/f/q/j6;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L2e39dc.  return v14 @kind object;
  #L2e39de.  call temp:= `d`(v8) @signature `Le/e/a/b/f/q/m5;.d:(I)I` @kind static;
  #L2e39e4.  v13:= temp;
  #L2e39e6.  v2:= v2 / 2;
  #L2e39ea.  if v13 < v2 then goto L2e3a0c;
  #L2e39ee.  v13:= 6I;
  #L2e39f0.  if v8 >= v13 then goto L2e39fc;
  #L2e39f4.  call temp:= `copyOf`(v14, v8) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2e39fa.  v14:= temp @kind object;
  #L2e39fc.  v4:= v14 @kind object;
  #L2e39fe.  v13:= new `e.e.a.b.f.q.g6`;
  #L2e3a02.  v3:= v13 @kind object;
  #L2e3a04.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/q/g6;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L2e3a0a.  return v13 @kind object;
  #L2e3a0c.  call temp:= `a`(v8, v14) @signature `Le/e/a/b/f/q/m5;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/q/m5;` @kind static;
  #L2e3a12.  v13:= temp @kind object;
  #L2e3a14.  return v13 @kind object;
  #L2e3a16.  v13:= v14[v0] @kind object;
  #L2e3a1a.  v14:= new `e.e.a.b.f.q.j6`;
  #L2e3a1e.  call `<init>`(v14, v13) @signature `Le/e/a/b/f/q/j6;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2e3a24.  return v14 @kind object;
  #L2e3a26.  v13:= `@@e.e.a.b.f.q.g6.i` @type ^`e.e.a.b.f.q.g6` @kind object;
  #L2e3a2a.  return v13 @kind object;
}
procedure `e.e.a.b.f.q.m5` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Le/e/a/b/f/q/m5;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Le/e/a/b/f/q/m5;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2e38e4.  v0:= 8I;
  #L2e38e8.  v1:= new `java.lang.Object`[v0];
  #L2e38ec.  v2:= 0I;
  #L2e38ee.  v3:= "common" @kind object;
  #L2e38f2.  v1[v2]:= v3 @kind object;
  #L2e38f6.  v3:= 1I;
  #L2e38f8.  v4:= "vision-common" @kind object;
  #L2e38fc.  v1[v3]:= v4 @kind object;
  #L2e3900.  v3:= 2I;
  #L2e3902.  v4:= "play-services-mlkit-barcode-scanning" @kind object;
  #L2e3906.  v1[v3]:= v4 @kind object;
  #L2e390a.  v4:= 3I;
  #L2e390c.  v5:= "barcode-scanning" @kind object;
  #L2e3910.  v1[v4]:= v5 @kind object;
  #L2e3914.  v4:= 4I;
  #L2e3916.  v5:= "play-services-mlkit-face-detection" @kind object;
  #L2e391a.  v1[v4]:= v5 @kind object;
  #L2e391e.  v4:= 5I;
  #L2e3920.  v5:= "face-detection" @kind object;
  #L2e3924.  v1[v4]:= v5 @kind object;
  #L2e3928.  v4:= 6I;
  #L2e392a.  call `arraycopy`(v6, v2, v1, v4, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2e3930.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/m5;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/q/m5;` @kind static;
  #L2e3936.  v0:= temp @kind object;
  #L2e3938.  return v0 @kind object;
}
procedure `int` `d`(`int` v6 ) @signature `Le/e/a/b/f/q/m5;.d:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e3a58.  v0:= 2I;
  #L2e3a5a.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2e3a60.  v6:= temp;
  #L2e3a62.  v0:= 751619276I;
  #L2e3a68.  if v6 >= v0 then goto L2e3a98;
  #L2e3a6c.  v0:= v6 + -1;
  #L2e3a70.  call temp:= `highestOneBit`(v0) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2e3a76.  v0:= temp;
  #L2e3a78.  v0:= v0 + v0 @kind int;
  #L2e3a7a.  v1:= (`double`) v0 @kind i2d;
  #L2e3a7c.  v3:= 0.7D;
  #L2e3a86.  v1:= v1 * v3 @kind double;
  #L2e3a8a.  v3:= (`double`) v6 @kind i2d;
  #L2e3a8c.  v5:= dcmpg(v1, v3);
  #L2e3a90.  if v5 >= 0 then goto L2e3a96;
  #L2e3a94.  goto L2e3a78;
  #L2e3a96.  return v0;
  #L2e3a98.  v0:= 2.0F;
  #L2e3a9c.  if v6 >= v0 then goto L2e3aa2;
  #L2e3aa0.  return v0;
  #L2e3aa2.  v6:= new `java.lang.IllegalArgumentException`;
  #L2e3aa6.  v0:= "collection too large" @kind object;
  #L2e3aaa.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3ab0.  throw v6;
}
procedure `e.e.a.b.f.q.j5` `e`(`e.e.a.b.f.q.m5` v1 @kind this) @signature `Le/e/a/b/f/q/m5;.e:()Le/e/a/b/f/q/j5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3898.  v0:= v1.`e.e.a.b.f.q.m5.c` @type ^`e.e.a.b.f.q.j5` @kind object;
  #L2e389c.  if v0 != 0 then goto L2e38ac;
  #L2e38a0.  call temp:= `f`(v1) @signature `Le/e/a/b/f/q/m5;.f:()Le/e/a/b/f/q/j5;` @kind virtual;
  #L2e38a6.  v0:= temp @kind object;
  #L2e38a8.  v1.`e.e.a.b.f.q.m5.c` @type ^`e.e.a.b.f.q.j5` := v0 @kind object;
  #L2e38ac.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.m5` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/m5;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e37e0.  v0:= 1I;
  #L2e37e2.  if v5 != v4 then goto L2e37e8;
  #L2e37e6.  return v0;
  #L2e37e8.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.q.m5` @kind boolean;
  #L2e37ec.  v2:= 0I;
  #L2e37ee.  if v1 == 0 then goto L2e3828;
  #L2e37f2.  call temp:= `v`(v4) @signature `Le/e/a/b/f/q/m5;.v:()Z` @kind virtual;
  #L2e37f8.  v1:= temp;
  #L2e37fa.  if v1 == 0 then goto L2e3828;
  #L2e37fe.  v1:= v5 @kind object;
  #L2e3800.  v1:= (`e.e.a.b.f.q.m5`) v1 @kind object;
  #L2e3804.  call temp:= `v`(v1) @signature `Le/e/a/b/f/q/m5;.v:()Z` @kind virtual;
  #L2e380a.  v1:= temp;
  #L2e380c.  if v1 == 0 then goto L2e3828;
  #L2e3810.  call temp:= `hashCode`(v4) @signature `Le/e/a/b/f/q/m5;.hashCode:()I` @kind virtual;
  #L2e3816.  v1:= temp;
  #L2e3818.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e381e.  v3:= temp;
  #L2e3820.  if v1 != v3 then goto L2e3826;
  #L2e3824.  goto L2e3828;
  #L2e3826.  return v2;
  #L2e3828.  if v5 != v4 then goto L2e3830;
  #L2e382c.  v2:= 1I;
  #L2e382e.  goto L2e3860;
  #L2e3830.  v1:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L2e3834.  if v1 == 0 then goto L2e3860;
  #L2e3838.  v5:= (`java.util.Set`) v5 @kind object;
  #L2e383c.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2e3842.  v1:= temp;
  #L2e3844.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2e384a.  v3:= temp;
  #L2e384c.  if v1 != v3 then goto L2e3860;
  #L2e3850.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2e3856.  v5:= temp;
  #L2e3858.  if v5 != 0 then goto L2e385e;
  #L2e385c.  goto L2e3860;
  #L2e385e.  return v0;
  #L2e3860.  return v2;
  catch `java.lang.NullPointerException` @[L2e383c..L2e3858] goto L2e3860;
  catch `java.lang.ClassCastException` @[L2e383c..L2e3858] goto L2e3860;
}
procedure `e.e.a.b.f.q.j5` `f`(`e.e.a.b.f.q.m5` v1 @kind this) @signature `Le/e/a/b/f/q/m5;.f:()Le/e/a/b/f/q/j5;` @AccessFlag  {
    temp;
    v0;

  #L2e38c0.  call temp:= `toArray`(v1) @signature `Le/e/a/b/f/q/e5;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L2e38c6.  v0:= temp @kind object;
  #L2e38c8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/j5;.a:([Ljava/lang/Object;)Le/e/a/b/f/q/j5;` @kind static;
  #L2e38ce.  v0:= temp @kind object;
  #L2e38d0.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.m5` v1 @kind this) @signature `Le/e/a/b/f/q/m5;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e3a3c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;)I` @kind static;
  #L2e3a42.  v0:= temp;
  #L2e3a44.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.m5` v1 @kind this) @signature `Le/e/a/b/f/q/m5;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2e3ac4.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/q/e5;.zza:()Le/e/a/b/f/q/l6;` @kind virtual;
  #L2e3aca.  v0:= temp @kind object;
  #L2e3acc.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.q.m5` v1 @kind this) @signature `Le/e/a/b/f/q/m5;.v:()Z` @AccessFlag  {
    temp;
    v0;

  #L2e3884.  v0:= 0I;
  #L2e3886.  return v0;
}
