record `e.e.a.b.f.q.lb` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.q.v` @kind interface {
  `int` `e.e.a.b.f.q.lb.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.q.lb` `@@e.e.a.b.f.q.lb.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.lb` `@@e.e.a.b.f.q.lb.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.lb` `@@e.e.a.b.f.q.lb.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.lb`[] `@@e.e.a.b.f.q.lb.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/lb;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2eb640.  v0:= new `e.e.a.b.f.q.lb`;
  #L2eb644.  v1:= 0I;
  #L2eb646.  v2:= "UNKNOWN_LANDMARKS" @kind object;
  #L2eb64a.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/q/lb;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2eb650.  `@@e.e.a.b.f.q.lb.c` @type ^`e.e.a.b.f.q.lb` := v0 @kind object;
  #L2eb654.  v0:= new `e.e.a.b.f.q.lb`;
  #L2eb658.  v2:= 1I;
  #L2eb65a.  v3:= "NO_LANDMARKS" @kind object;
  #L2eb65e.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/q/lb;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2eb664.  `@@e.e.a.b.f.q.lb.d` @type ^`e.e.a.b.f.q.lb` := v0 @kind object;
  #L2eb668.  v0:= new `e.e.a.b.f.q.lb`;
  #L2eb66c.  v3:= 2I;
  #L2eb66e.  v4:= "ALL_LANDMARKS" @kind object;
  #L2eb672.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/q/lb;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2eb678.  `@@e.e.a.b.f.q.lb.e` @type ^`e.e.a.b.f.q.lb` := v0 @kind object;
  #L2eb67c.  v0:= 3I;
  #L2eb67e.  v0:= new `e.e.a.b.f.q.lb`[v0];
  #L2eb682.  v4:= `@@e.e.a.b.f.q.lb.c` @type ^`e.e.a.b.f.q.lb` @kind object;
  #L2eb686.  v0[v1]:= v4 @kind object;
  #L2eb68a.  v1:= `@@e.e.a.b.f.q.lb.d` @type ^`e.e.a.b.f.q.lb` @kind object;
  #L2eb68e.  v0[v2]:= v1 @kind object;
  #L2eb692.  v1:= `@@e.e.a.b.f.q.lb.e` @type ^`e.e.a.b.f.q.lb` @kind object;
  #L2eb696.  v0[v3]:= v1 @kind object;
  #L2eb69a.  `@@e.e.a.b.f.q.lb.f` @type ^`e.e.a.b.f.q.lb`[] := v0 @kind object;
  #L2eb69e.  v0:= new `e.e.a.b.f.q.jb`;
  #L2eb6a2.  call `<init>`(v0) @signature `Le/e/a/b/f/q/jb;.<init>:()V` @kind direct;
  #L2eb6a8.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.lb` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/lb;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2eb6bc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2eb6c2.  v0.`e.e.a.b.f.q.lb.b` @type ^`int` := v3;
  #L2eb6c6.  return @kind void;
}
procedure `e.e.a.b.f.q.lb`[] `values`() @signature `Le/e/a/b/f/q/lb;.values:()[Le/e/a/b/f/q/lb;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2eb58c.  v0:= `@@e.e.a.b.f.q.lb.f` @type ^`e.e.a.b.f.q.lb`[] @kind object;
  #L2eb590.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/q/lb;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2eb596.  v0:= temp @kind object;
  #L2eb598.  v0:= (`e.e.a.b.f.q.lb`[]) v0 @kind object;
  #L2eb59c.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.x` `zza`() @signature `Le/e/a/b/f/q/lb;.zza:()Le/e/a/b/f/q/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2eb574.  v0:= `@@e.e.a.b.f.q.kb.a` @type ^`e.e.a.b.f.q.x` @kind object;
  #L2eb578.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.q.lb` v2 @kind this) @signature `Le/e/a/b/f/q/lb;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2eb5b0.  v0:= new `java.lang.StringBuilder`;
  #L2eb5b4.  v1:= "<" @kind object;
  #L2eb5b8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2eb5be.  v1:= constclass @type ^`e.e.a.b.f.q.lb` @kind object;
  #L2eb5c2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2eb5c8.  v1:= temp @kind object;
  #L2eb5ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5d0.  v1:= 64I;
  #L2eb5d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5da.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2eb5e0.  v1:= temp;
  #L2eb5e2.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2eb5e8.  v1:= temp @kind object;
  #L2eb5ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5f0.  v1:= " number=" @kind object;
  #L2eb5f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5fa.  v1:= v2.`e.e.a.b.f.q.lb.b` @type ^`int`;
  #L2eb5fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb604.  v1:= " name=" @kind object;
  #L2eb608.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb60e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2eb614.  v1:= temp @kind object;
  #L2eb616.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb61c.  v1:= 62I;
  #L2eb620.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb626.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2eb62c.  v0:= temp @kind object;
  #L2eb62e.  return v0 @kind object;
}
