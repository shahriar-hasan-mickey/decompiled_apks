record `e.e.a.b.f.o.h` @kind class @AccessFlag FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.Object` `e.e.a.b.f.o.h.b` @AccessFlag PRIVATE_TRANSIENT;
  `int`[] `e.e.a.b.f.o.h.c` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.o.h.d` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.o.h.e` @AccessFlag TRANSIENT;
  `int` `e.e.a.b.f.o.h.f` @AccessFlag PRIVATE_TRANSIENT;
  `int` `e.e.a.b.f.o.h.g` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.o.h.h` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.o.h.i` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.o.h.j` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Object` `@@e.e.a.b.f.o.h.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/o/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bf958.  v0:= new `java.lang.Object`;
  #L2bf95c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bf962.  `@@e.e.a.b.f.o.h.k` @type ^`java.lang.Object` := v0 @kind object;
  #L2bf966.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.o.h` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/o/h;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bf978.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L2bf97e.  v1:= 12I;
  #L2bf982.  call `a`(v0, v1) @signature `Le/e/a/b/f/o/h;.a:(I)V` @kind virtual;
  #L2bf988.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.o.h` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 ) @signature `Le/e/a/b/f/o/h;.a:(IIII)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bf410.  call temp:= `a`(v10) @signature `Le/e/a/b/f/o/i;.a:(I)Ljava/lang/Object;` @kind static;
  #L2bf416.  v0:= temp @kind object;
  #L2bf418.  v10:= v10 + -1;
  #L2bf41c.  if v12 == 0 then goto L2bf42c;
  #L2bf420.  v11:= v11 ^& v10 @kind int;
  #L2bf422.  v12:= v12 + 1;
  #L2bf426.  call `a`(v0, v11, v12) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2bf42c.  v11:= v8.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf430.  v12:= v8.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf434.  v1:= 0I;
  #L2bf436.  if v1 > v9 then goto L2bf480;
  #L2bf43a.  call temp:= `a`(v11, v1) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2bf440.  v2:= temp;
  #L2bf442.  if v2 == 0 then goto L2bf47a;
  #L2bf446.  v3:= v2 + -1;
  #L2bf44a.  v4:= v12[v3];
  #L2bf44e.  v5:= ~v9 @kind int;
  #L2bf450.  v5:= v5 ^& v4 @kind int;
  #L2bf452.  v5:= v5 ^| v1 @kind int;
  #L2bf454.  v6:= v5 ^& v10 @kind int;
  #L2bf458.  call temp:= `a`(v0, v6) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2bf45e.  v7:= temp;
  #L2bf460.  call `a`(v0, v6, v2) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2bf466.  v2:= ~v10 @kind int;
  #L2bf468.  v2:= v2 ^& v5 @kind int;
  #L2bf46a.  v5:= v7 ^& v10 @kind int;
  #L2bf46e.  v2:= v2 ^| v5 @kind int;
  #L2bf470.  v12[v3]:= v2;
  #L2bf474.  v2:= v4 ^& v9 @kind int;
  #L2bf478.  goto L2bf442;
  #L2bf47a.  v1:= v1 + 1;
  #L2bf47e.  goto L2bf436;
  #L2bf480.  v8.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` := v0 @kind object;
  #L2bf484.  call `c`(v8, v10) @signature `Le/e/a/b/f/o/h;.c:(I)V` @kind direct;
  #L2bf48a.  return v10;
}
procedure `int` `a`(`e.e.a.b.f.o.h` v0 @kind object) @signature `Le/e/a/b/f/o/h;.a:(Le/e/a/b/f/o/h;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bf37c.  v0:= v0.`e.e.a.b.f.o.h.f` @type ^`int`;
  #L2bf380.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.o.h` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/b/f/o/h;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bf49c.  call temp:= `a`(v7) @signature `Le/e/a/b/f/o/h;.a:()Z` @kind virtual;
  #L2bf4a2.  v0:= temp;
  #L2bf4a4.  v1:= -1I;
  #L2bf4a6.  if v0 == 0 then goto L2bf4ac;
  #L2bf4aa.  return v1;
  #L2bf4ac.  call temp:= `a`(v8) @signature `Le/e/a/b/f/o/j;.a:(Ljava/lang/Object;)I` @kind static;
  #L2bf4b2.  v0:= temp;
  #L2bf4b4.  call temp:= `f`(v7) @signature `Le/e/a/b/f/o/h;.f:()I` @kind direct;
  #L2bf4ba.  v2:= temp;
  #L2bf4bc.  v3:= v7.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf4c0.  v4:= v0 ^& v2 @kind int;
  #L2bf4c4.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2bf4ca.  v3:= temp;
  #L2bf4cc.  if v3 == 0 then goto L2bf506;
  #L2bf4d0.  v4:= ~v2 @kind int;
  #L2bf4d2.  v0:= v0 ^& v4 @kind int;
  #L2bf4d4.  v3:= v3 + v1 @kind int;
  #L2bf4d6.  v5:= v7.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf4da.  v5:= v5[v3];
  #L2bf4de.  v6:= v5 ^& v4 @kind int;
  #L2bf4e2.  if v6 != v0 then goto L2bf4fe;
  #L2bf4e6.  v6:= v7.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf4ea.  v6:= v6[v3] @kind object;
  #L2bf4ee.  call temp:= `a`(v8, v6) @signature `Le/e/a/b/f/o/a0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2bf4f4.  v6:= temp;
  #L2bf4f6.  if v6 != 0 then goto L2bf4fc;
  #L2bf4fa.  goto L2bf4fe;
  #L2bf4fc.  return v3;
  #L2bf4fe.  v3:= v5 ^& v2 @kind int;
  #L2bf502.  if v3 != 0 then goto L2bf4d4;
  #L2bf506.  return v1;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.o.h` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/o/h;.a:(Le/e/a/b/f/o/h;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bf7f8.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/o/h;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2bf7fe.  v0:= temp @kind object;
  #L2bf800.  return v0 @kind object;
}
procedure `int` `b`(`e.e.a.b.f.o.h` v0 @kind object) @signature `Le/e/a/b/f/o/h;.b:(Le/e/a/b/f/o/h;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bf3b0.  call temp:= `f`(v0) @signature `Le/e/a/b/f/o/h;.f:()I` @kind direct;
  #L2bf3b6.  v0:= temp;
  #L2bf3b8.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.o.h` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/o/h;.b:(Le/e/a/b/f/o/h;Ljava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bf394.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/o/h;.a:(Ljava/lang/Object;)I` @kind direct;
  #L2bf39a.  v0:= temp;
  #L2bf39c.  return v0;
}
procedure `java.lang.Object` `b`(`e.e.a.b.f.o.h` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/o/h;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bf844.  call temp:= `a`(v8) @signature `Le/e/a/b/f/o/h;.a:()Z` @kind virtual;
  #L2bf84a.  v0:= temp;
  #L2bf84c.  if v0 == 0 then goto L2bf856;
  #L2bf850.  v9:= `@@e.e.a.b.f.o.h.k` @type ^`java.lang.Object` @kind object;
  #L2bf854.  return v9 @kind object;
  #L2bf856.  call temp:= `f`(v8) @signature `Le/e/a/b/f/o/h;.f:()I` @kind direct;
  #L2bf85c.  v7:= temp;
  #L2bf85e.  v1:= 0I;
  #L2bf860.  v3:= v8.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf864.  v4:= v8.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf868.  v5:= v8.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf86c.  v6:= 0I;
  #L2bf86e.  v0:= v9 @kind object;
  #L2bf870.  v2:= v7;
  #L2bf872.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L2bf878.  v9:= temp;
  #L2bf87a.  v0:= -1I;
  #L2bf87c.  if v9 != v0 then goto L2bf886;
  #L2bf880.  v9:= `@@e.e.a.b.f.o.h.k` @type ^`java.lang.Object` @kind object;
  #L2bf884.  return v9 @kind object;
  #L2bf886.  v1:= v8.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf88a.  v1:= v1[v9] @kind object;
  #L2bf88e.  call `a`(v8, v9, v7) @signature `Le/e/a/b/f/o/h;.a:(II)V` @kind virtual;
  #L2bf894.  v9:= v8.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf898.  v9:= v9 + v0 @kind int;
  #L2bf89a.  v8.`e.e.a.b.f.o.h.g` @type ^`int` := v9;
  #L2bf89e.  call `c`(v8) @signature `Le/e/a/b/f/o/h;.c:()V` @kind virtual;
  #L2bf8a4.  return v1 @kind object;
}
procedure `java.lang.Object` `c`(`e.e.a.b.f.o.h` v0 @kind object) @signature `Le/e/a/b/f/o/h;.c:(Le/e/a/b/f/o/h;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bf82c.  v0:= v0.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf830.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.o.h` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/o/h;.c:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2bfb74.  call temp:= `numberOfLeadingZeros`(v2) @signature `Ljava/lang/Integer;.numberOfLeadingZeros:(I)I` @kind static;
  #L2bfb7a.  v2:= temp;
  #L2bfb7c.  v0:= v1.`e.e.a.b.f.o.h.f` @type ^`int`;
  #L2bfb80.  v0:= v0 ^& -32;
  #L2bfb84.  v2:= v2 - 32;
  #L2bfb88.  v2:= v2 ^& 31;
  #L2bfb8c.  v2:= v2 ^| v0 @kind int;
  #L2bfb8e.  v1.`e.e.a.b.f.o.h.f` @type ^`int` := v2;
  #L2bfb92.  return @kind void;
}
procedure `int` `d`(`e.e.a.b.f.o.h` v2 @kind object) @signature `Le/e/a/b/f/o/h;.d:(Le/e/a/b/f/o/h;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2bf3cc.  v0:= v2.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf3d0.  v1:= v0 + -1;
  #L2bf3d4.  v2.`e.e.a.b.f.o.h.g` @type ^`int` := v1;
  #L2bf3d8.  return v0;
}
procedure `java.lang.Object` `e`() @signature `Le/e/a/b/f/o/h;.e:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2bf814.  v0:= `@@e.e.a.b.f.o.h.k` @type ^`java.lang.Object` @kind object;
  #L2bf818.  return v0 @kind object;
}
procedure `int` `f`(`e.e.a.b.f.o.h` v2 @kind this) @signature `Le/e/a/b/f/o/h;.f:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2bf3ec.  v0:= v2.`e.e.a.b.f.o.h.f` @type ^`int`;
  #L2bf3f0.  v0:= v0 ^& 31;
  #L2bf3f4.  v1:= 1I;
  #L2bf3f6.  v0:= v1 ^< v0 @kind int;
  #L2bf3fa.  v0:= v0 + -1;
  #L2bf3fe.  return v0;
}
procedure `void` `a`(`e.e.a.b.f.o.h` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/o/h;.a:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2bfa60.  v3:= 12I;
  #L2bfa64.  v0:= 1I;
  #L2bfa66.  v1:= 1073741823I;
  #L2bfa6c.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/o/o0;.a:(III)I` @kind static;
  #L2bfa72.  v3:= temp;
  #L2bfa74.  v2.`e.e.a.b.f.o.h.f` @type ^`int` := v3;
  #L2bfa78.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.o.h` v7 @kind this, `int` v8 , `int` v9 ) @signature `Le/e/a/b/f/o/h;.a:(II)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bfaac.  call temp:= `size`(v7) @signature `Le/e/a/b/f/o/h;.size:()I` @kind virtual;
  #L2bfab2.  v0:= temp;
  #L2bfab4.  v0:= v0 + -1;
  #L2bfab8.  v1:= 0I;
  #L2bfaba.  v2:= 0I;
  #L2bfabc.  if v8 >= v0 then goto L2bfb48;
  #L2bfac0.  v3:= v7.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bfac4.  v4:= v3[v0] @kind object;
  #L2bfac8.  v3[v8]:= v4 @kind object;
  #L2bfacc.  v5:= v7.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bfad0.  v6:= v5[v0] @kind object;
  #L2bfad4.  v5[v8]:= v6 @kind object;
  #L2bfad8.  v3[v0]:= v2 @kind object;
  #L2bfadc.  v5[v0]:= v2 @kind object;
  #L2bfae0.  v2:= v7.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bfae4.  v3:= v2[v0];
  #L2bfae8.  v2[v8]:= v3;
  #L2bfaec.  v2[v0]:= v1;
  #L2bfaf0.  call temp:= `a`(v4) @signature `Le/e/a/b/f/o/j;.a:(Ljava/lang/Object;)I` @kind static;
  #L2bfaf6.  v1:= temp;
  #L2bfaf8.  v1:= v1 ^& v9 @kind int;
  #L2bfafa.  v2:= v7.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bfafe.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2bfb04.  v2:= temp;
  #L2bfb06.  v0:= v0 + 1;
  #L2bfb0a.  if v2 == v0 then goto L2bfb38;
  #L2bfb0e.  v2:= v2 + -1;
  #L2bfb12.  v1:= v7.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bfb16.  v3:= v1[v2];
  #L2bfb1a.  v4:= v3 ^& v9 @kind int;
  #L2bfb1e.  if v4 == v0 then goto L2bfb26;
  #L2bfb22.  v2:= v4;
  #L2bfb24.  goto L2bfb0e;
  #L2bfb26.  v0:= ~v9 @kind int;
  #L2bfb28.  v0:= v0 ^& v3 @kind int;
  #L2bfb2a.  v8:= v8 + 1;
  #L2bfb2e.  v8:= v8 ^& v9 @kind int;
  #L2bfb30.  v8:= v8 ^| v0 @kind int;
  #L2bfb32.  v1[v2]:= v8;
  #L2bfb36.  return @kind void;
  #L2bfb38.  v9:= v7.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bfb3c.  v8:= v8 + 1;
  #L2bfb40.  call `a`(v9, v1, v8) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2bfb46.  return @kind void;
  #L2bfb48.  v9:= v7.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bfb4c.  v9[v8]:= v2 @kind object;
  #L2bfb50.  v9:= v7.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bfb54.  v9[v8]:= v2 @kind object;
  #L2bfb58.  v9:= v7.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bfb5c.  v9[v8]:= v1;
  #L2bfb60.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L2bf2e8.  v0:= v1.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf2ec.  if v0 != 0 then goto L2bf2f4;
  #L2bf2f0.  v0:= 1I;
  #L2bf2f2.  return v0;
  #L2bf2f4.  v0:= 0I;
  #L2bf2f6.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.o.h` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/o/h;.b:(I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L2bf358.  v2:= v2 + 1;
  #L2bf35c.  v0:= v1.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf360.  if v2 >= v0 then goto L2bf366;
  #L2bf364.  return v2;
  #L2bf366.  v2:= -1I;
  #L2bf368.  return v2;
}
procedure `java.util.Map` `b`(`e.e.a.b.f.o.h` v2 @kind this) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2bf8e0.  v0:= v2.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf8e4.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L2bf8e8.  if v1 == 0 then goto L2bf8f2;
  #L2bf8ec.  v0:= (`java.util.Map`) v0 @kind object;
  #L2bf8f0.  return v0 @kind object;
  #L2bf8f2.  v0:= 0I;
  #L2bf8f4.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.c:()V` @AccessFlag FINAL {
    temp;
    v0;

  #L2bfa8c.  v0:= v1.`e.e.a.b.f.o.h.f` @type ^`int`;
  #L2bfa90.  v0:= v0 + 32;
  #L2bfa94.  v1.`e.e.a.b.f.o.h.f` @type ^`int` := v0;
  #L2bfa98.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.o.h` v6 @kind this) @signature `Le/e/a/b/f/o/h;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bf99c.  call temp:= `a`(v6) @signature `Le/e/a/b/f/o/h;.a:()Z` @kind virtual;
  #L2bf9a2.  v0:= temp;
  #L2bf9a4.  if v0 == 0 then goto L2bf9aa;
  #L2bf9a8.  return @kind void;
  #L2bf9aa.  call `c`(v6) @signature `Le/e/a/b/f/o/h;.c:()V` @kind virtual;
  #L2bf9b0.  call temp:= `b`(v6) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf9b6.  v0:= temp @kind object;
  #L2bf9b8.  v1:= 0I;
  #L2bf9ba.  v2:= 0I;
  #L2bf9bc.  if v0 == 0 then goto L2bf9ec;
  #L2bf9c0.  call temp:= `size`(v6) @signature `Le/e/a/b/f/o/h;.size:()I` @kind virtual;
  #L2bf9c6.  v3:= temp;
  #L2bf9c8.  v4:= 3I;
  #L2bf9ca.  v5:= 1073741823I;
  #L2bf9d0.  call temp:= `a`(v3, v4, v5) @signature `Le/e/a/b/f/o/o0;.a:(III)I` @kind static;
  #L2bf9d6.  v3:= temp;
  #L2bf9d8.  v6.`e.e.a.b.f.o.h.f` @type ^`int` := v3;
  #L2bf9dc.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2bf9e2.  v6.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2bf9e6.  v6.`e.e.a.b.f.o.h.g` @type ^`int` := v2;
  #L2bf9ea.  return @kind void;
  #L2bf9ec.  v0:= v6.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf9f0.  v3:= v6.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf9f4.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L2bf9fa.  v0:= v6.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf9fe.  v3:= v6.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bfa02.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L2bfa08.  v0:= v6.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bfa0c.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L2bfa10.  if v1 == 0 then goto L2bfa20;
  #L2bfa14.  v0:= (`byte`[]) v0 @kind object;
  #L2bfa18.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L2bfa1e.  goto L2bfa3e;
  #L2bfa20.  v1:= instanceof @variable v0 @type ^`short`[] @kind boolean;
  #L2bfa24.  if v1 == 0 then goto L2bfa34;
  #L2bfa28.  v0:= (`short`[]) v0 @kind object;
  #L2bfa2c.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([SS)V` @kind static;
  #L2bfa32.  goto L2bfa3e;
  #L2bfa34.  v0:= (`int`[]) v0 @kind object;
  #L2bfa38.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L2bfa3e.  v0:= v6.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bfa42.  v1:= v6.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bfa46.  call `fill`(v0, v2, v1, v2) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L2bfa4c.  goto L2bf9e6;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.o.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/h;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf234.  call temp:= `b`(v1) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf23a.  v0:= temp @kind object;
  #L2bf23c.  if v0 == 0 then goto L2bf24a;
  #L2bf240.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2bf246.  v2:= temp;
  #L2bf248.  goto L2bf25a;
  #L2bf24a.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/o/h;.a:(Ljava/lang/Object;)I` @kind direct;
  #L2bf250.  v2:= temp;
  #L2bf252.  v0:= -1I;
  #L2bf254.  if v2 != v0 then goto L2bf25c;
  #L2bf258.  v2:= 0I;
  #L2bf25a.  return v2;
  #L2bf25c.  v2:= 1I;
  #L2bf25e.  return v2;
}
procedure `boolean` `containsValue`(`e.e.a.b.f.o.h` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/o/h;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2bf270.  call temp:= `b`(v3) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf276.  v0:= temp @kind object;
  #L2bf278.  if v0 != 0 then goto L2bf2a8;
  #L2bf27c.  v0:= 0I;
  #L2bf27e.  v1:= 0I;
  #L2bf280.  v2:= v3.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf284.  if v1 >= v2 then goto L2bf2a6;
  #L2bf288.  v2:= v3.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf28c.  v2:= v2[v1] @kind object;
  #L2bf290.  call temp:= `a`(v4, v2) @signature `Le/e/a/b/f/o/a0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2bf296.  v2:= temp;
  #L2bf298.  if v2 == 0 then goto L2bf2a0;
  #L2bf29c.  v4:= 1I;
  #L2bf29e.  return v4;
  #L2bf2a0.  v1:= v1 + 1;
  #L2bf2a4.  goto L2bf280;
  #L2bf2a6.  return v0;
  #L2bf2a8.  call temp:= `containsValue`(v0, v4) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L2bf2ae.  v4:= temp;
  #L2bf2b0.  return v4;
}
procedure `int` `d`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L2bf334.  call temp:= `isEmpty`(v1) @signature `Le/e/a/b/f/o/h;.isEmpty:()Z` @kind virtual;
  #L2bf33a.  v0:= temp;
  #L2bf33c.  if v0 == 0 then goto L2bf344;
  #L2bf340.  v0:= -1I;
  #L2bf342.  return v0;
  #L2bf344.  v0:= 0I;
  #L2bf346.  return v0;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf908.  v0:= v1.`e.e.a.b.f.o.h.i` @type ^`java.util.Set` @kind object;
  #L2bf90c.  if v0 != 0 then goto L2bf91e;
  #L2bf910.  v0:= new `e.e.a.b.f.o.c`;
  #L2bf914.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/c;.<init>:(Le/e/a/b/f/o/h;)V` @kind direct;
  #L2bf91a.  v1.`e.e.a.b.f.o.h.i` @type ^`java.util.Set` := v0 @kind object;
  #L2bf91e.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.o.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/h;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf518.  call temp:= `b`(v1) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf51e.  v0:= temp @kind object;
  #L2bf520.  if v0 == 0 then goto L2bf52e;
  #L2bf524.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bf52a.  v2:= temp @kind object;
  #L2bf52c.  return v2 @kind object;
  #L2bf52e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/o/h;.a:(Ljava/lang/Object;)I` @kind direct;
  #L2bf534.  v2:= temp;
  #L2bf536.  v0:= -1I;
  #L2bf538.  if v2 != v0 then goto L2bf540;
  #L2bf53c.  v2:= 0I;
  #L2bf53e.  return v2 @kind object;
  #L2bf540.  v0:= v1.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf544.  v2:= v0[v2] @kind object;
  #L2bf548.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf2c4.  call temp:= `size`(v1) @signature `Le/e/a/b/f/o/h;.size:()I` @kind virtual;
  #L2bf2ca.  v0:= temp;
  #L2bf2cc.  if v0 != 0 then goto L2bf2d4;
  #L2bf2d0.  v0:= 1I;
  #L2bf2d2.  return v0;
  #L2bf2d4.  v0:= 0I;
  #L2bf2d6.  return v0;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf930.  v0:= v1.`e.e.a.b.f.o.h.h` @type ^`java.util.Set` @kind object;
  #L2bf934.  if v0 != 0 then goto L2bf946;
  #L2bf938.  v0:= new `e.e.a.b.f.o.e`;
  #L2bf93c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/e;.<init>:(Le/e/a/b/f/o/h;)V` @kind direct;
  #L2bf942.  v1.`e.e.a.b.f.o.h.h` @type ^`java.util.Set` := v0 @kind object;
  #L2bf946.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.o.h` v17 @kind this, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object) @signature `Le/e/a/b/f/o/h;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2bf55c.  v0:= v17 @kind object;
  #L2bf560.  v1:= v18 @kind object;
  #L2bf564.  v2:= v19 @kind object;
  #L2bf568.  call temp:= `a`(v17) @signature `Le/e/a/b/f/o/h;.a:()Z` @kind virtual;
  #L2bf56e.  v3:= temp;
  #L2bf570.  if v3 == 0 then goto L2bf5ea;
  #L2bf574.  call temp:= `a`(v17) @signature `Le/e/a/b/f/o/h;.a:()Z` @kind virtual;
  #L2bf57a.  v3:= temp;
  #L2bf57c.  v4:= "Arrays already allocated" @kind object;
  #L2bf580.  call `a`(v3, v4) @signature `Le/e/a/b/f/o/e4;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2bf586.  v3:= v0.`e.e.a.b.f.o.h.f` @type ^`int`;
  #L2bf58a.  v4:= v3 + 1;
  #L2bf58e.  v5:= 2I;
  #L2bf590.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2bf596.  v4:= temp;
  #L2bf598.  call temp:= `highestOneBit`(v4) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2bf59e.  v5:= temp;
  #L2bf5a0.  v6:= (`double`) v5 @kind i2d;
  #L2bf5a2.  v6:= (`int`) v6 @kind d2i;
  #L2bf5a4.  if v4 <= v6 then goto L2bf5b2;
  #L2bf5a8.  v5:= v5 + v5 @kind int;
  #L2bf5aa.  if v5 > 0 then goto L2bf5b2;
  #L2bf5ae.  v5:= 2.0F;
  #L2bf5b2.  v4:= 4I;
  #L2bf5b4.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2bf5ba.  v4:= temp;
  #L2bf5bc.  call temp:= `a`(v4) @signature `Le/e/a/b/f/o/i;.a:(I)Ljava/lang/Object;` @kind static;
  #L2bf5c2.  v5:= temp @kind object;
  #L2bf5c4.  v0.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` := v5 @kind object;
  #L2bf5c8.  v4:= v4 + -1;
  #L2bf5cc.  call `c`(v0, v4) @signature `Le/e/a/b/f/o/h;.c:(I)V` @kind direct;
  #L2bf5d2.  v4:= new `int`[v3];
  #L2bf5d6.  v0.`e.e.a.b.f.o.h.c` @type ^`int`[] := v4 @kind object;
  #L2bf5da.  v4:= new `java.lang.Object`[v3];
  #L2bf5de.  v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] := v4 @kind object;
  #L2bf5e2.  v3:= new `java.lang.Object`[v3];
  #L2bf5e6.  v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2bf5ea.  call temp:= `b`(v17) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf5f0.  v3:= temp @kind object;
  #L2bf5f2.  if v3 == 0 then goto L2bf600;
  #L2bf5f6.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bf5fc.  v1:= temp @kind object;
  #L2bf5fe.  return v1 @kind object;
  #L2bf600.  v3:= v0.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf604.  v4:= v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf608.  v5:= v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf60c.  v6:= v0.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf610.  v7:= v6 + 1;
  #L2bf614.  call temp:= `a`(v18) @signature `Le/e/a/b/f/o/j;.a:(Ljava/lang/Object;)I` @kind static;
  #L2bf61a.  v8:= temp;
  #L2bf61c.  call temp:= `f`(v17) @signature `Le/e/a/b/f/o/h;.f:()I` @kind direct;
  #L2bf622.  v9:= temp;
  #L2bf624.  v10:= v8 ^& v9 @kind int;
  #L2bf628.  v11:= v0.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf62c.  call temp:= `a`(v11, v10) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2bf632.  v11:= temp;
  #L2bf634.  if v11 != 0 then goto L2bf65a;
  #L2bf638.  if v7 <= v9 then goto L2bf64e;
  #L2bf63c.  call temp:= `b`(v9) @signature `Le/e/a/b/f/o/i;.b:(I)I` @kind static;
  #L2bf642.  v3:= temp;
  #L2bf644.  call temp:= `a`(v0, v9, v3, v8, v6) @signature `Le/e/a/b/f/o/h;.a:(IIII)I` @kind direct;
  #L2bf64a.  v9:= temp;
  #L2bf64c.  goto L2bf71e;
  #L2bf64e.  v3:= v0.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` @kind object;
  #L2bf652.  call `a`(v3, v10, v7) @signature `Le/e/a/b/f/o/i;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2bf658.  goto L2bf71e;
  #L2bf65a.  v10:= ~v9 @kind int;
  #L2bf65c.  v14:= v8 ^& v10 @kind int;
  #L2bf660.  v15:= 0I;
  #L2bf662.  v11:= v11 + -1;
  #L2bf666.  v16:= v3[v11];
  #L2bf66a.  v12:= v16 ^& v10 @kind int;
  #L2bf66e.  if v12 != v14 then goto L2bf68e;
  #L2bf672.  v13:= v4[v11] @kind object;
  #L2bf676.  call temp:= `a`(v1, v13) @signature `Le/e/a/b/f/o/a0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2bf67c.  v13:= temp;
  #L2bf67e.  if v13 != 0 then goto L2bf684;
  #L2bf682.  goto L2bf68e;
  #L2bf684.  v1:= v5[v11] @kind object;
  #L2bf688.  v5[v11]:= v2 @kind object;
  #L2bf68c.  return v1 @kind object;
  #L2bf68e.  v13:= v16 ^& v9 @kind int;
  #L2bf692.  v16:= 1I;
  #L2bf696.  v15:= v15 + 1;
  #L2bf69a.  if v13 != 0 then goto L2bf7a6;
  #L2bf69e.  v4:= 9I;
  #L2bf6a2.  if v15 < v4 then goto L2bf70e;
  #L2bf6a6.  call temp:= `f`(v17) @signature `Le/e/a/b/f/o/h;.f:()I` @kind direct;
  #L2bf6ac.  v3:= temp;
  #L2bf6ae.  v4:= new `java.util.LinkedHashMap`;
  #L2bf6b2.  v3:= v3 + 1;
  #L2bf6b6.  v5:= 1.0F;
  #L2bf6ba.  call `<init>`(v4, v3, v5) @signature `Ljava/util/LinkedHashMap;.<init>:(IF)V` @kind direct;
  #L2bf6c0.  call temp:= `d`(v17) @signature `Le/e/a/b/f/o/h;.d:()I` @kind virtual;
  #L2bf6c6.  v3:= temp;
  #L2bf6c8.  if v3 < 0 then goto L2bf6ec;
  #L2bf6cc.  v5:= v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf6d0.  v5:= v5[v3] @kind object;
  #L2bf6d4.  v6:= v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf6d8.  v6:= v6[v3] @kind object;
  #L2bf6dc.  call temp:= `put`(v4, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bf6e2.  call temp:= `b`(v0, v3) @signature `Le/e/a/b/f/o/h;.b:(I)I` @kind virtual;
  #L2bf6e8.  v3:= temp;
  #L2bf6ea.  goto L2bf6c8;
  #L2bf6ec.  v0.`e.e.a.b.f.o.h.b` @type ^`java.lang.Object` := v4 @kind object;
  #L2bf6f0.  v3:= 0I;
  #L2bf6f2.  v0.`e.e.a.b.f.o.h.c` @type ^`int`[] := v3 @kind object;
  #L2bf6f6.  v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2bf6fa.  v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2bf6fe.  call `c`(v17) @signature `Le/e/a/b/f/o/h;.c:()V` @kind virtual;
  #L2bf704.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bf70a.  v1:= temp @kind object;
  #L2bf70c.  return v1 @kind object;
  #L2bf70e.  if v7 <= v9 then goto L2bf714;
  #L2bf712.  goto L2bf63c;
  #L2bf714.  v4:= v7 ^& v9 @kind int;
  #L2bf718.  v4:= v4 ^| v12 @kind int;
  #L2bf71a.  v3[v11]:= v4;
  #L2bf71e.  v3:= v0.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf722.  v3:= length @variable v3;
  #L2bf724.  if v7 <= v3 then goto L2bf77c;
  #L2bf728.  v4:= 1073741823I;
  #L2bf72e.  v5:= v3 ^>> 1;
  #L2bf732.  v11:= 1I;
  #L2bf734.  call temp:= `max`(v11, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2bf73a.  v5:= temp;
  #L2bf73c.  v5:= v5 + v3 @kind int;
  #L2bf73e.  v5:= v5 ^| v11 @kind int;
  #L2bf740.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2bf746.  v4:= temp;
  #L2bf748.  if v4 == v3 then goto L2bf77c;
  #L2bf74c.  v3:= v0.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf750.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2bf756.  v3:= temp @kind object;
  #L2bf758.  v0.`e.e.a.b.f.o.h.c` @type ^`int`[] := v3 @kind object;
  #L2bf75c.  v3:= v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf760.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2bf766.  v3:= temp @kind object;
  #L2bf768.  v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2bf76c.  v3:= v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf770.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2bf776.  v3:= temp @kind object;
  #L2bf778.  v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2bf77c.  v3:= v0.`e.e.a.b.f.o.h.c` @type ^`int`[] @kind object;
  #L2bf780.  v4:= ~v9 @kind int;
  #L2bf782.  v4:= v4 ^& v8 @kind int;
  #L2bf784.  v3[v6]:= v4;
  #L2bf788.  v3:= v0.`e.e.a.b.f.o.h.d` @type ^`java.lang.Object`[] @kind object;
  #L2bf78c.  v3[v6]:= v1 @kind object;
  #L2bf790.  v1:= v0.`e.e.a.b.f.o.h.e` @type ^`java.lang.Object`[] @kind object;
  #L2bf794.  v1[v6]:= v2 @kind object;
  #L2bf798.  v0.`e.e.a.b.f.o.h.g` @type ^`int` := v7;
  #L2bf79c.  call `c`(v17) @signature `Le/e/a/b/f/o/h;.c:()V` @kind virtual;
  #L2bf7a2.  v12:= 0I;
  #L2bf7a4.  return v12 @kind object;
  #L2bf7a6.  v11:= v13;
  #L2bf7a8.  goto L2bf662;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.o.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/h;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf7bc.  call temp:= `b`(v1) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf7c2.  v0:= temp @kind object;
  #L2bf7c4.  if v0 == 0 then goto L2bf7d2;
  #L2bf7c8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2bf7ce.  v2:= temp @kind object;
  #L2bf7d0.  return v2 @kind object;
  #L2bf7d2.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/o/h;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2bf7d8.  v2:= temp @kind object;
  #L2bf7da.  v0:= `@@e.e.a.b.f.o.h.k` @type ^`java.lang.Object` @kind object;
  #L2bf7de.  if v2 != v0 then goto L2bf7e4;
  #L2bf7e2.  v2:= 0I;
  #L2bf7e4.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf308.  call temp:= `b`(v1) @signature `Le/e/a/b/f/o/h;.b:()Ljava/util/Map;` @kind virtual;
  #L2bf30e.  v0:= temp @kind object;
  #L2bf310.  if v0 == 0 then goto L2bf31e;
  #L2bf314.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2bf31a.  v0:= temp;
  #L2bf31c.  goto L2bf322;
  #L2bf31e.  v0:= v1.`e.e.a.b.f.o.h.g` @type ^`int`;
  #L2bf322.  return v0;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.o.h` v1 @kind this) @signature `Le/e/a/b/f/o/h;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf8b8.  v0:= v1.`e.e.a.b.f.o.h.j` @type ^`java.util.Collection` @kind object;
  #L2bf8bc.  if v0 != 0 then goto L2bf8ce;
  #L2bf8c0.  v0:= new `e.e.a.b.f.o.g`;
  #L2bf8c4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/g;.<init>:(Le/e/a/b/f/o/h;)V` @kind direct;
  #L2bf8ca.  v1.`e.e.a.b.f.o.h.j` @type ^`java.util.Collection` := v0 @kind object;
  #L2bf8ce.  return v0 @kind object;
}
