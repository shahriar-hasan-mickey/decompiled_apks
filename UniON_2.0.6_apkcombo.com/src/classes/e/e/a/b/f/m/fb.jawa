record `e.e.a.b.f.m.fb` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.m.fb` `@@e.e.a.b.f.m.fb.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.m.fb` v0 @kind this) @signature `Le/e/a/b/f/m/fb;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L275e28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L275e2e.  return @kind void;
}
procedure `e.e.a.b.f.m.fb` `a`() @signature `Le/e/a/b/f/m/fb;.a:()Le/e/a/b/f/m/fb;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L275de0.  v0:= constclass @type ^`e.e.a.b.f.m.fb` @kind object;
  #L275de4.  @monitorenter v0
  #L275de6.  v1:= `@@e.e.a.b.f.m.fb.a` @type ^`e.e.a.b.f.m.fb` @kind object;
  #L275dea.  if v1 != 0 then goto L275dfc;
  #L275dee.  v1:= new `e.e.a.b.f.m.fb`;
  #L275df2.  call `<init>`(v1) @signature `Le/e/a/b/f/m/fb;.<init>:()V` @kind direct;
  #L275df8.  `@@e.e.a.b.f.m.fb.a` @type ^`e.e.a.b.f.m.fb` := v1 @kind object;
  #L275dfc.  v1:= `@@e.e.a.b.f.m.fb.a` @type ^`e.e.a.b.f.m.fb` @kind object;
  #L275e00.  @monitorexit v0
  #L275e02.  return v1 @kind object;
  #L275e04.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L275e06.  @monitorexit v0
  #L275e08.  throw v1;
  catch `java.lang.Throwable` @[L275de6..L275e00] goto L275e04;
}
