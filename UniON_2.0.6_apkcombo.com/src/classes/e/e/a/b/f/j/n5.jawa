record `e.e.a.b.f.j.n5` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.j.r5` `e.e.a.b.f.j.n5.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `e.e.a.b.f.j.n5.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.j.n5` `@@e.e.a.b.f.j.n5.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/j/n5;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22ea94.  v0:= new `e.e.a.b.f.j.n5`;
  #L22ea98.  call `<init>`(v0) @signature `Le/e/a/b/f/j/n5;.<init>:()V` @kind direct;
  #L22ea9e.  `@@e.e.a.b.f.j.n5.c` @type ^`e.e.a.b.f.j.n5` := v0 @kind object;
  #L22eaa2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.n5` v1 @kind this) @signature `Le/e/a/b/f/j/n5;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L22eab4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22eaba.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L22eabe.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L22eac4.  v1.`e.e.a.b.f.j.n5.b` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L22eac8.  v0:= new `e.e.a.b.f.j.p4`;
  #L22eacc.  call `<init>`(v0) @signature `Le/e/a/b/f/j/p4;.<init>:()V` @kind direct;
  #L22ead2.  v1.`e.e.a.b.f.j.n5.a` @type ^`e.e.a.b.f.j.r5` := v0 @kind object;
  #L22ead6.  return @kind void;
}
procedure `e.e.a.b.f.j.n5` `a`() @signature `Le/e/a/b/f/j/n5;.a:()Le/e/a/b/f/j/n5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22e9f4.  v0:= `@@e.e.a.b.f.j.n5.c` @type ^`e.e.a.b.f.j.n5` @kind object;
  #L22e9f8.  return v0 @kind object;
}
procedure `e.e.a.b.f.j.s5` `a`(`e.e.a.b.f.j.n5` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Le/e/a/b/f/j/n5;.a:(Ljava/lang/Class;)Le/e/a/b/f/j/s5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L22ea0c.  v0:= "messageType" @kind object;
  #L22ea10.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L22ea16.  v1:= v2.`e.e.a.b.f.j.n5.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L22ea1a.  call temp:= `get`(v1, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22ea20.  v1:= temp @kind object;
  #L22ea22.  v1:= (`e.e.a.b.f.j.s5`) v1 @kind object;
  #L22ea26.  if v1 != 0 then goto L22ea5c;
  #L22ea2a.  v1:= v2.`e.e.a.b.f.j.n5.a` @type ^`e.e.a.b.f.j.r5` @kind object;
  #L22ea2e.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/j/r5;.a:(Ljava/lang/Class;)Le/e/a/b/f/j/s5;` @kind interface;
  #L22ea34.  v1:= temp @kind object;
  #L22ea36.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L22ea3c.  v0:= "schema" @kind object;
  #L22ea40.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L22ea46.  v0:= v2.`e.e.a.b.f.j.n5.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L22ea4a.  call temp:= `putIfAbsent`(v0, v3, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22ea50.  v3:= temp @kind object;
  #L22ea52.  v3:= (`e.e.a.b.f.j.s5`) v3 @kind object;
  #L22ea56.  if v3 == 0 then goto L22ea5c;
  #L22ea5a.  v1:= v3 @kind object;
  #L22ea5c.  return v1 @kind object;
}
procedure `e.e.a.b.f.j.s5` `a`(`e.e.a.b.f.j.n5` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/j/n5;.a:(Ljava/lang/Object;)Le/e/a/b/f/j/s5;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L22ea70.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L22ea76.  v1:= temp @kind object;
  #L22ea78.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/j/n5;.a:(Ljava/lang/Class;)Le/e/a/b/f/j/s5;` @kind virtual;
  #L22ea7e.  v1:= temp @kind object;
  #L22ea80.  return v1 @kind object;
}
