record `e.e.a.b.f.b.w0` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.b.e3` `e.e.a.b.f.b.w0.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.b.f.b.w0.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.b.w0.c` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.b.w0` `@@e.e.a.b.f.b.w0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/w0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ff7dc.  v0:= new `e.e.a.b.f.b.w0`;
  #L1ff7e0.  v1:= 1I;
  #L1ff7e2.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/w0;.<init>:(Z)V` @kind direct;
  #L1ff7e8.  `@@e.e.a.b.f.b.w0.d` @type ^`e.e.a.b.f.b.w0` := v0 @kind object;
  #L1ff7ec.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.w0` v1 @kind this) @signature `Le/e/a/b/f/b/w0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1ff800.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff806.  v0:= 0I;
  #L1ff808.  v1.`e.e.a.b.f.b.w0.c` @type ^`boolean` := v0 @kind boolean;
  #L1ff80c.  v0:= 16I;
  #L1ff810.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/e3;.b:(I)Le/e/a/b/f/b/e3;` @kind static;
  #L1ff816.  v0:= temp @kind object;
  #L1ff818.  v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` := v0 @kind object;
  #L1ff81c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.w0` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/b/w0;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ff830.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff836.  v1:= 0I;
  #L1ff838.  v0.`e.e.a.b.f.b.w0.c` @type ^`boolean` := v1 @kind boolean;
  #L1ff83c.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/e3;.b:(I)Le/e/a/b/f/b/e3;` @kind static;
  #L1ff842.  v1:= temp @kind object;
  #L1ff844.  v0.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` := v1 @kind object;
  #L1ff848.  call `h`(v0) @signature `Le/e/a/b/f/b/w0;.h:()V` @kind virtual;
  #L1ff84e.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.b.i4` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;ILjava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1ff128.  call temp:= `e`(v2) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L1ff12e.  v2:= temp;
  #L1ff130.  v0:= `@@e.e.a.b.f.b.i4.m` @type ^`e.e.a.b.f.b.i4` @kind object;
  #L1ff134.  if v1 != v0 then goto L1ff148;
  #L1ff138.  v0:= v3 @kind object;
  #L1ff13a.  v0:= (`e.e.a.b.f.b.k2`) v0 @kind object;
  #L1ff13e.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/h1;.a:(Le/e/a/b/f/b/k2;)Z` @kind static;
  #L1ff144.  v2:= v2 ^< 1;
  #L1ff148.  call temp:= `b`(v1, v3) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)I` @kind static;
  #L1ff14e.  v1:= temp;
  #L1ff150.  v2:= v2 + v1 @kind int;
  #L1ff152.  return v2;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.b.w0` v1 @kind this, `e.e.a.b.f.b.z0` v2 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1ff6c4.  v0:= v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff6c8.  call temp:= `get`(v0, v2) @signature `Le/e/a/b/f/b/e3;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ff6ce.  v2:= temp @kind object;
  #L1ff6d0.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff6d4.  if v0 != 0 then goto L1ff6da;
  #L1ff6d8.  return v2 @kind object;
  #L1ff6da.  call temp:= `c`() @signature `Le/e/a/b/f/b/o1;.c:()Le/e/a/b/f/b/k2;` @kind static;
  #L1ff6e0.  v2:= 0I;
  #L1ff6e2.  throw v2;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ff6f4.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.b.q2` @kind boolean;
  #L1ff6f8.  if v0 == 0 then goto L1ff70a;
  #L1ff6fc.  v3:= (`e.e.a.b.f.b.q2`) v3 @kind object;
  #L1ff700.  call temp:= `n`(v3) @signature `Le/e/a/b/f/b/q2;.n:()Le/e/a/b/f/b/q2;` @kind interface;
  #L1ff706.  v3:= temp @kind object;
  #L1ff708.  return v3 @kind object;
  #L1ff70a.  v0:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L1ff70e.  if v0 == 0 then goto L1ff728;
  #L1ff712.  v3:= (`byte`[]) v3 @kind object;
  #L1ff716.  v0:= length @variable v3;
  #L1ff718.  v0:= new `byte`[v0];
  #L1ff71c.  v1:= length @variable v3;
  #L1ff71e.  v2:= 0I;
  #L1ff720.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ff726.  return v0 @kind object;
  #L1ff728.  return v3 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.b.i4` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ff970.  call temp:= `a`(v3) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1ff976.  v0:= `@@e.e.a.b.f.b.x0.a` @type ^`int`[] @kind object;
  #L1ff97a.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/i4;.b:()Le/e/a/b/f/b/n4;` @kind virtual;
  #L1ff980.  v2:= temp @kind object;
  #L1ff982.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1ff988.  v2:= temp;
  #L1ff98a.  v2:= v0[v2];
  #L1ff98e.  v0:= 1I;
  #L1ff990.  v1:= 0I;
  #L1ff992.  goto L1ffa0c;
  #L1ff998.  goto L1ff9f6;
  #L1ff99a.  v2:= instanceof @variable v3 @type ^`e.e.a.b.f.b.k2` @kind boolean;
  #L1ff99e.  if v2 != 0 then goto L1ff9bc;
  #L1ff9a2.  v2:= instanceof @variable v3 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff9a6.  if v2 == 0 then goto L1ff9f6;
  #L1ff9aa.  goto L1ff9bc;
  #L1ff9ac.  v2:= instanceof @variable v3 @type ^`java.lang.Integer` @kind boolean;
  #L1ff9b0.  if v2 != 0 then goto L1ff9bc;
  #L1ff9b4.  v2:= instanceof @variable v3 @type ^`e.e.a.b.f.b.i1` @kind boolean;
  #L1ff9b8.  if v2 == 0 then goto L1ff9f6;
  #L1ff9bc.  v1:= 1I;
  #L1ff9be.  goto L1ff9f6;
  #L1ff9c0.  v2:= instanceof @variable v3 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L1ff9c4.  if v2 != 0 then goto L1ff9bc;
  #L1ff9c8.  v2:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L1ff9cc.  if v2 == 0 then goto L1ff9f6;
  #L1ff9d0.  goto L1ff9bc;
  #L1ff9d2.  v0:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L1ff9d6.  goto L1ff9f4;
  #L1ff9d8.  v0:= instanceof @variable v3 @type ^`java.lang.Boolean` @kind boolean;
  #L1ff9dc.  goto L1ff9f4;
  #L1ff9de.  v0:= instanceof @variable v3 @type ^`java.lang.Double` @kind boolean;
  #L1ff9e2.  goto L1ff9f4;
  #L1ff9e4.  v0:= instanceof @variable v3 @type ^`java.lang.Float` @kind boolean;
  #L1ff9e8.  goto L1ff9f4;
  #L1ff9ea.  v0:= instanceof @variable v3 @type ^`java.lang.Long` @kind boolean;
  #L1ff9ee.  goto L1ff9f4;
  #L1ff9f0.  v0:= instanceof @variable v3 @type ^`java.lang.Integer` @kind boolean;
  #L1ff9f4.  v1:= v0;
  #L1ff9f6.  if v1 == 0 then goto L1ff9fc;
  #L1ff9fa.  return @kind void;
  #L1ff9fc.  v2:= new `java.lang.IllegalArgumentException`;
  #L1ffa00.  v3:= "Wrong object type used with protocol message reflection." @kind object;
  #L1ffa04.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ffa0a.  throw v2;
  #L1ffa0c.  switch v2
                  | 1 => goto L1ff9f0
                  | 2 => goto L1ff9ea
                  | 3 => goto L1ff9e4
                  | 4 => goto L1ff9de
                  | 5 => goto L1ff9d8
                  | 6 => goto L1ff9d2
                  | 7 => goto L1ff9c0
                  | 8 => goto L1ff9ac
                  | 9 => goto L1ff99a
                  | else => goto L1ff998;
}
procedure `void` `a`(`e.e.a.b.f.b.w0` v4 @kind this, `e.e.a.b.f.b.z0` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff8d0.  call temp:= `r`(v5) @signature `Le/e/a/b/f/b/z0;.r:()Z` @kind interface;
  #L1ff8d6.  v0:= temp;
  #L1ff8d8.  if v0 == 0 then goto L1ff936;
  #L1ff8dc.  v0:= instanceof @variable v6 @type ^`java.util.List` @kind boolean;
  #L1ff8e0.  if v0 == 0 then goto L1ff926;
  #L1ff8e4.  v0:= new `java.util.ArrayList`;
  #L1ff8e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ff8ee.  v6:= (`java.util.List`) v6 @kind object;
  #L1ff8f2.  call temp:= `addAll`(v0, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1ff8f8.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1ff8fe.  v6:= temp;
  #L1ff900.  v1:= 0I;
  #L1ff902.  if v1 >= v6 then goto L1ff922;
  #L1ff906.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1ff90c.  v2:= temp @kind object;
  #L1ff90e.  v1:= v1 + 1;
  #L1ff912.  call temp:= `j`(v5) @signature `Le/e/a/b/f/b/z0;.j:()Le/e/a/b/f/b/i4;` @kind interface;
  #L1ff918.  v3:= temp @kind object;
  #L1ff91a.  call `a`(v3, v2) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)V` @kind static;
  #L1ff920.  goto L1ff902;
  #L1ff922.  v6:= v0 @kind object;
  #L1ff924.  goto L1ff944;
  #L1ff926.  v5:= new `java.lang.IllegalArgumentException`;
  #L1ff92a.  v6:= "Wrong object type used with protocol message reflection." @kind object;
  #L1ff92e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ff934.  throw v5;
  #L1ff936.  call temp:= `j`(v5) @signature `Le/e/a/b/f/b/z0;.j:()Le/e/a/b/f/b/i4;` @kind interface;
  #L1ff93c.  v0:= temp @kind object;
  #L1ff93e.  call `a`(v0, v6) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)V` @kind static;
  #L1ff944.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff948.  if v0 == 0 then goto L1ff952;
  #L1ff94c.  v0:= 1I;
  #L1ff94e.  v4.`e.e.a.b.f.b.w0.c` @type ^`boolean` := v0 @kind boolean;
  #L1ff952.  v0:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff956.  call temp:= `a`(v0, v5, v6) @signature `Le/e/a/b/f/b/e3;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ff95c.  return @kind void;
}
procedure `boolean` `a`(`java.util.Map$Entry` v4 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff044.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff04a.  v0:= temp @kind object;
  #L1ff04c.  v0:= (`e.e.a.b.f.b.z0`) v0 @kind object;
  #L1ff050.  call temp:= `q`(v0) @signature `Le/e/a/b/f/b/z0;.q:()Le/e/a/b/f/b/n4;` @kind interface;
  #L1ff056.  v1:= temp @kind object;
  #L1ff058.  v2:= `@@e.e.a.b.f.b.n4.j` @type ^`e.e.a.b.f.b.n4` @kind object;
  #L1ff05c.  v3:= 1I;
  #L1ff05e.  if v1 != v2 then goto L1ff0de;
  #L1ff062.  call temp:= `r`(v0) @signature `Le/e/a/b/f/b/z0;.r:()Z` @kind interface;
  #L1ff068.  v0:= temp;
  #L1ff06a.  v1:= 0I;
  #L1ff06c.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff072.  v4:= temp @kind object;
  #L1ff074.  if v0 == 0 then goto L1ff0aa;
  #L1ff078.  v4:= (`java.util.List`) v4 @kind object;
  #L1ff07c.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff082.  v4:= temp @kind object;
  #L1ff084.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff08a.  v0:= temp;
  #L1ff08c.  if v0 == 0 then goto L1ff0de;
  #L1ff090.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff096.  v0:= temp @kind object;
  #L1ff098.  v0:= (`e.e.a.b.f.b.k2`) v0 @kind object;
  #L1ff09c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/m2;.a:()Z` @kind interface;
  #L1ff0a2.  v0:= temp;
  #L1ff0a4.  if v0 != 0 then goto L1ff084;
  #L1ff0a8.  return v1;
  #L1ff0aa.  v0:= instanceof @variable v4 @type ^`e.e.a.b.f.b.k2` @kind boolean;
  #L1ff0ae.  if v0 == 0 then goto L1ff0c4;
  #L1ff0b2.  v4:= (`e.e.a.b.f.b.k2`) v4 @kind object;
  #L1ff0b6.  call temp:= `a`(v4) @signature `Le/e/a/b/f/b/m2;.a:()Z` @kind interface;
  #L1ff0bc.  v4:= temp;
  #L1ff0be.  if v4 != 0 then goto L1ff0de;
  #L1ff0c2.  return v1;
  #L1ff0c4.  v4:= instanceof @variable v4 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff0c8.  if v4 == 0 then goto L1ff0ce;
  #L1ff0cc.  return v3;
  #L1ff0ce.  v4:= new `java.lang.IllegalArgumentException`;
  #L1ff0d2.  v0:= "Wrong object type used with protocol message reflection." @kind object;
  #L1ff0d6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ff0dc.  throw v4;
  #L1ff0de.  return v3;
}
procedure `int` `b`(`e.e.a.b.f.b.i4` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ff334.  v0:= `@@e.e.a.b.f.b.x0.b` @type ^`int`[] @kind object;
  #L1ff338.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1ff33e.  v1:= temp;
  #L1ff340.  v1:= v0[v1];
  #L1ff344.  goto L1ff528;
  #L1ff34a.  v1:= new `java.lang.RuntimeException`;
  #L1ff34e.  v2:= "There is no way to get here, but the compiler thinks otherwise." @kind object;
  #L1ff352.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ff358.  throw v1;
  #L1ff35a.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.b.i1` @kind boolean;
  #L1ff35e.  if v1 == 0 then goto L1ff378;
  #L1ff362.  v2:= (`e.e.a.b.f.b.i1`) v2 @kind object;
  #L1ff366.  call temp:= `d`(v2) @signature `Le/e/a/b/f/b/i1;.d:()I` @kind interface;
  #L1ff36c.  v1:= temp;
  #L1ff36e.  call temp:= `k`(v1) @signature `Le/e/a/b/f/b/m0;.k:(I)I` @kind static;
  #L1ff374.  v1:= temp;
  #L1ff376.  return v1;
  #L1ff378.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff37c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff382.  v1:= temp;
  #L1ff384.  call temp:= `k`(v1) @signature `Le/e/a/b/f/b/m0;.k:(I)I` @kind static;
  #L1ff38a.  v1:= temp;
  #L1ff38c.  return v1;
  #L1ff38e.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1ff392.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ff398.  v1:= temp @kind wide;
  #L1ff39a.  call temp:= `f`(v1) @signature `Le/e/a/b/f/b/m0;.f:(J)I` @kind static;
  #L1ff3a0.  v1:= temp;
  #L1ff3a2.  return v1;
  #L1ff3a4.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff3a8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff3ae.  v1:= temp;
  #L1ff3b0.  call temp:= `h`(v1) @signature `Le/e/a/b/f/b/m0;.h:(I)I` @kind static;
  #L1ff3b6.  v1:= temp;
  #L1ff3b8.  return v1;
  #L1ff3ba.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1ff3be.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ff3c4.  v1:= temp @kind wide;
  #L1ff3c6.  call temp:= `h`(v1) @signature `Le/e/a/b/f/b/m0;.h:(J)I` @kind static;
  #L1ff3cc.  v1:= temp;
  #L1ff3ce.  return v1;
  #L1ff3d0.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff3d4.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff3da.  v1:= temp;
  #L1ff3dc.  call temp:= `j`(v1) @signature `Le/e/a/b/f/b/m0;.j:(I)I` @kind static;
  #L1ff3e2.  v1:= temp;
  #L1ff3e4.  return v1;
  #L1ff3e6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff3ea.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff3f0.  v1:= temp;
  #L1ff3f2.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1ff3f8.  v1:= temp;
  #L1ff3fa.  return v1;
  #L1ff3fc.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L1ff400.  if v1 == 0 then goto L1ff412;
  #L1ff404.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L1ff408.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/a0;)I` @kind static;
  #L1ff40e.  v1:= temp;
  #L1ff410.  return v1;
  #L1ff412.  v2:= (`byte`[]) v2 @kind object;
  #L1ff416.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/m0;.b:([B)I` @kind static;
  #L1ff41c.  v1:= temp;
  #L1ff41e.  return v1;
  #L1ff420.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L1ff424.  if v1 == 0 then goto L1ff436;
  #L1ff428.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L1ff42c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/a0;)I` @kind static;
  #L1ff432.  v1:= temp;
  #L1ff434.  return v1;
  #L1ff436.  v2:= (`java.lang.String`) v2 @kind object;
  #L1ff43a.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;)I` @kind static;
  #L1ff440.  v1:= temp;
  #L1ff442.  return v1;
  #L1ff444.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff448.  if v1 == 0 then goto L1ff45a;
  #L1ff44c.  v2:= (`e.e.a.b.f.b.o1`) v2 @kind object;
  #L1ff450.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/s1;)I` @kind static;
  #L1ff456.  v1:= temp;
  #L1ff458.  return v1;
  #L1ff45a.  v2:= (`e.e.a.b.f.b.k2`) v2 @kind object;
  #L1ff45e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/k2;)I` @kind static;
  #L1ff464.  v1:= temp;
  #L1ff466.  return v1;
  #L1ff468.  v2:= (`e.e.a.b.f.b.k2`) v2 @kind object;
  #L1ff46c.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/m0;.b:(Le/e/a/b/f/b/k2;)I` @kind static;
  #L1ff472.  v1:= temp;
  #L1ff474.  return v1;
  #L1ff476.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L1ff47a.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1ff480.  v1:= temp;
  #L1ff482.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/m0;.b:(Z)I` @kind static;
  #L1ff488.  v1:= temp;
  #L1ff48a.  return v1;
  #L1ff48c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff490.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff496.  v1:= temp;
  #L1ff498.  call temp:= `i`(v1) @signature `Le/e/a/b/f/b/m0;.i:(I)I` @kind static;
  #L1ff49e.  v1:= temp;
  #L1ff4a0.  return v1;
  #L1ff4a2.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1ff4a6.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ff4ac.  v1:= temp @kind wide;
  #L1ff4ae.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/m0;.g:(J)I` @kind static;
  #L1ff4b4.  v1:= temp;
  #L1ff4b6.  return v1;
  #L1ff4b8.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1ff4bc.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ff4c2.  v1:= temp;
  #L1ff4c4.  call temp:= `f`(v1) @signature `Le/e/a/b/f/b/m0;.f:(I)I` @kind static;
  #L1ff4ca.  v1:= temp;
  #L1ff4cc.  return v1;
  #L1ff4ce.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1ff4d2.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ff4d8.  v1:= temp @kind wide;
  #L1ff4da.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/m0;.e:(J)I` @kind static;
  #L1ff4e0.  v1:= temp;
  #L1ff4e2.  return v1;
  #L1ff4e4.  v2:= (`java.lang.Long`) v2 @kind object;
  #L1ff4e8.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ff4ee.  v1:= temp @kind wide;
  #L1ff4f0.  call temp:= `d`(v1) @signature `Le/e/a/b/f/b/m0;.d:(J)I` @kind static;
  #L1ff4f6.  v1:= temp;
  #L1ff4f8.  return v1;
  #L1ff4fa.  v2:= (`java.lang.Float`) v2 @kind object;
  #L1ff4fe.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L1ff504.  v1:= temp;
  #L1ff506.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/m0;.b:(F)I` @kind static;
  #L1ff50c.  v1:= temp;
  #L1ff50e.  return v1;
  #L1ff510.  v2:= (`java.lang.Double`) v2 @kind object;
  #L1ff514.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L1ff51a.  v1:= temp @kind wide;
  #L1ff51c.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/m0;.b:(D)I` @kind static;
  #L1ff522.  v1:= temp;
  #L1ff524.  return v1;
  #L1ff526.  
  #L1ff528.  switch v1
                  | 1 => goto L1ff510
                  | 2 => goto L1ff4fa
                  | 3 => goto L1ff4e4
                  | 4 => goto L1ff4ce
                  | 5 => goto L1ff4b8
                  | 6 => goto L1ff4a2
                  | 7 => goto L1ff48c
                  | 8 => goto L1ff476
                  | 9 => goto L1ff468
                  | 10 => goto L1ff444
                  | 11 => goto L1ff420
                  | 12 => goto L1ff3fc
                  | 13 => goto L1ff3e6
                  | 14 => goto L1ff3d0
                  | 15 => goto L1ff3ba
                  | 16 => goto L1ff3a4
                  | 17 => goto L1ff38e
                  | 18 => goto L1ff35a
                  | else => goto L1ff34a;
}
procedure `int` `b`(`e.e.a.b.f.b.z0` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ff284.  call temp:= `j`(v3) @signature `Le/e/a/b/f/b/z0;.j:()Le/e/a/b/f/b/i4;` @kind interface;
  #L1ff28a.  v0:= temp @kind object;
  #L1ff28c.  call temp:= `d`(v3) @signature `Le/e/a/b/f/b/z0;.d:()I` @kind interface;
  #L1ff292.  v1:= temp;
  #L1ff294.  call temp:= `r`(v3) @signature `Le/e/a/b/f/b/z0;.r:()Z` @kind interface;
  #L1ff29a.  v2:= temp;
  #L1ff29c.  if v2 == 0 then goto L1ff31a;
  #L1ff2a0.  call temp:= `i`(v3) @signature `Le/e/a/b/f/b/z0;.i:()Z` @kind interface;
  #L1ff2a6.  v3:= temp;
  #L1ff2a8.  v2:= 0I;
  #L1ff2aa.  v4:= (`java.util.List`) v4 @kind object;
  #L1ff2ae.  if v3 == 0 then goto L1ff2f0;
  #L1ff2b2.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff2b8.  v3:= temp @kind object;
  #L1ff2ba.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff2c0.  v4:= temp;
  #L1ff2c2.  if v4 == 0 then goto L1ff2da;
  #L1ff2c6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff2cc.  v4:= temp @kind object;
  #L1ff2ce.  call temp:= `b`(v0, v4) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/i4;Ljava/lang/Object;)I` @kind static;
  #L1ff2d4.  v4:= temp;
  #L1ff2d6.  v2:= v2 + v4 @kind int;
  #L1ff2d8.  goto L1ff2ba;
  #L1ff2da.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L1ff2e0.  v3:= temp;
  #L1ff2e2.  v3:= v3 + v2 @kind int;
  #L1ff2e4.  call temp:= `m`(v2) @signature `Le/e/a/b/f/b/m0;.m:(I)I` @kind static;
  #L1ff2ea.  v4:= temp;
  #L1ff2ec.  v3:= v3 + v4 @kind int;
  #L1ff2ee.  return v3;
  #L1ff2f0.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff2f6.  v3:= temp @kind object;
  #L1ff2f8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff2fe.  v4:= temp;
  #L1ff300.  if v4 == 0 then goto L1ff318;
  #L1ff304.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff30a.  v4:= temp @kind object;
  #L1ff30c.  call temp:= `a`(v0, v1, v4) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;ILjava/lang/Object;)I` @kind static;
  #L1ff312.  v4:= temp;
  #L1ff314.  v2:= v2 + v4 @kind int;
  #L1ff316.  goto L1ff2f8;
  #L1ff318.  return v2;
  #L1ff31a.  call temp:= `a`(v0, v1, v4) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/i4;ILjava/lang/Object;)I` @kind static;
  #L1ff320.  v3:= temp;
  #L1ff322.  return v3;
}
procedure `void` `b`(`e.e.a.b.f.b.w0` v4 @kind this, `java.util.Map$Entry` v5 @kind object) @signature `Le/e/a/b/f/b/w0;.b:(Ljava/util/Map$Entry;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ffa48.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ffa4e.  v0:= temp @kind object;
  #L1ffa50.  v0:= (`e.e.a.b.f.b.z0`) v0 @kind object;
  #L1ffa54.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ffa5a.  v5:= temp @kind object;
  #L1ffa5c.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ffa60.  v2:= 0I;
  #L1ffa62.  if v1 != 0 then goto L1ffb52;
  #L1ffa66.  call temp:= `r`(v0) @signature `Le/e/a/b/f/b/z0;.r:()Z` @kind interface;
  #L1ffa6c.  v1:= temp;
  #L1ffa6e.  if v1 == 0 then goto L1ffaca;
  #L1ffa72.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;)Ljava/lang/Object;` @kind direct;
  #L1ffa78.  v1:= temp @kind object;
  #L1ffa7a.  if v1 != 0 then goto L1ffa88;
  #L1ffa7e.  v1:= new `java.util.ArrayList`;
  #L1ffa82.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ffa88.  v5:= (`java.util.List`) v5 @kind object;
  #L1ffa8c.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ffa92.  v5:= temp @kind object;
  #L1ffa94.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ffa9a.  v2:= temp;
  #L1ffa9c.  if v2 == 0 then goto L1ffabe;
  #L1ffaa0.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ffaa6.  v2:= temp @kind object;
  #L1ffaa8.  v3:= v1 @kind object;
  #L1ffaaa.  v3:= (`java.util.List`) v3 @kind object;
  #L1ffaae.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1ffab4.  v2:= temp @kind object;
  #L1ffab6.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ffabc.  goto L1ffa94;
  #L1ffabe.  v5:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ffac2.  call temp:= `a`(v5, v0, v1) @signature `Le/e/a/b/f/b/e3;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ffac8.  return @kind void;
  #L1ffaca.  call temp:= `q`(v0) @signature `Le/e/a/b/f/b/z0;.q:()Le/e/a/b/f/b/n4;` @kind interface;
  #L1ffad0.  v1:= temp @kind object;
  #L1ffad2.  v3:= `@@e.e.a.b.f.b.n4.j` @type ^`e.e.a.b.f.b.n4` @kind object;
  #L1ffad6.  if v1 != v3 then goto L1ffb3e;
  #L1ffada.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;)Ljava/lang/Object;` @kind direct;
  #L1ffae0.  v1:= temp @kind object;
  #L1ffae2.  if v1 != 0 then goto L1ffafa;
  #L1ffae6.  v1:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ffaea.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1ffaf0.  v5:= temp @kind object;
  #L1ffaf2.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/b/e3;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ffaf8.  return @kind void;
  #L1ffafa.  v3:= instanceof @variable v1 @type ^`e.e.a.b.f.b.q2` @kind boolean;
  #L1ffafe.  if v3 != 0 then goto L1ffb2e;
  #L1ffb02.  v1:= (`e.e.a.b.f.b.k2`) v1 @kind object;
  #L1ffb06.  call temp:= `l`(v1) @signature `Le/e/a/b/f/b/k2;.l:()Le/e/a/b/f/b/l2;` @kind interface;
  #L1ffb0c.  v1:= temp @kind object;
  #L1ffb0e.  v5:= (`e.e.a.b.f.b.k2`) v5 @kind object;
  #L1ffb12.  call temp:= `a`(v0, v1, v5) @signature `Le/e/a/b/f/b/z0;.a:(Le/e/a/b/f/b/l2;Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/l2;` @kind interface;
  #L1ffb18.  v5:= temp @kind object;
  #L1ffb1a.  call temp:= `o`(v5) @signature `Le/e/a/b/f/b/l2;.o:()Le/e/a/b/f/b/k2;` @kind interface;
  #L1ffb20.  v5:= temp @kind object;
  #L1ffb22.  v1:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ffb26.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/b/e3;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ffb2c.  return @kind void;
  #L1ffb2e.  v1:= (`e.e.a.b.f.b.q2`) v1 @kind object;
  #L1ffb32.  v5:= (`e.e.a.b.f.b.q2`) v5 @kind object;
  #L1ffb36.  call temp:= `a`(v0, v1, v5) @signature `Le/e/a/b/f/b/z0;.a:(Le/e/a/b/f/b/q2;Le/e/a/b/f/b/q2;)Le/e/a/b/f/b/q2;` @kind interface;
  #L1ffb3c.  throw v2;
  #L1ffb3e.  v1:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ffb42.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1ffb48.  v5:= temp @kind object;
  #L1ffb4a.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/b/e3;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1ffb50.  return @kind void;
  #L1ffb52.  call temp:= `c`() @signature `Le/e/a/b/f/b/o1;.c:()Le/e/a/b/f/b/k2;` @kind static;
  #L1ffb58.  throw v2;
}
procedure `int` `c`(`java.util.Map$Entry` v4 @kind object) @signature `Le/e/a/b/f/b/w0;.c:(Ljava/util/Map$Entry;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff588.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff58e.  v0:= temp @kind object;
  #L1ff590.  v0:= (`e.e.a.b.f.b.z0`) v0 @kind object;
  #L1ff594.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff59a.  v1:= temp @kind object;
  #L1ff59c.  call temp:= `q`(v0) @signature `Le/e/a/b/f/b/z0;.q:()Le/e/a/b/f/b/n4;` @kind interface;
  #L1ff5a2.  v2:= temp @kind object;
  #L1ff5a4.  v3:= `@@e.e.a.b.f.b.n4.j` @type ^`e.e.a.b.f.b.n4` @kind object;
  #L1ff5a8.  if v2 != v3 then goto L1ff5fc;
  #L1ff5ac.  call temp:= `r`(v0) @signature `Le/e/a/b/f/b/z0;.r:()Z` @kind interface;
  #L1ff5b2.  v2:= temp;
  #L1ff5b4.  if v2 != 0 then goto L1ff5fc;
  #L1ff5b8.  call temp:= `i`(v0) @signature `Le/e/a/b/f/b/z0;.i:()Z` @kind interface;
  #L1ff5be.  v2:= temp;
  #L1ff5c0.  if v2 != 0 then goto L1ff5fc;
  #L1ff5c4.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.b.o1` @kind boolean;
  #L1ff5c8.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff5ce.  v4:= temp @kind object;
  #L1ff5d0.  v4:= (`e.e.a.b.f.b.z0`) v4 @kind object;
  #L1ff5d4.  call temp:= `d`(v4) @signature `Le/e/a/b/f/b/z0;.d:()I` @kind interface;
  #L1ff5da.  v4:= temp;
  #L1ff5dc.  if v0 == 0 then goto L1ff5ee;
  #L1ff5e0.  v1:= (`e.e.a.b.f.b.o1`) v1 @kind object;
  #L1ff5e4.  call temp:= `b`(v4, v1) @signature `Le/e/a/b/f/b/m0;.b:(ILe/e/a/b/f/b/s1;)I` @kind static;
  #L1ff5ea.  v4:= temp;
  #L1ff5ec.  return v4;
  #L1ff5ee.  v1:= (`e.e.a.b.f.b.k2`) v1 @kind object;
  #L1ff5f2.  call temp:= `d`(v4, v1) @signature `Le/e/a/b/f/b/m0;.d:(ILe/e/a/b/f/b/k2;)I` @kind static;
  #L1ff5f8.  v4:= temp;
  #L1ff5fa.  return v4;
  #L1ff5fc.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)I` @kind static;
  #L1ff602.  v4:= temp;
  #L1ff604.  return v4;
}
procedure `e.e.a.b.f.b.w0` `i`() @signature `Le/e/a/b/f/b/w0;.i:()Le/e/a/b/f/b/w0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ff0f0.  v0:= `@@e.e.a.b.f.b.w0.d` @type ^`e.e.a.b.f.b.w0` @kind object;
  #L1ff0f4.  return v0 @kind object;
}
procedure `java.util.Iterator` `a`(`e.e.a.b.f.b.w0` v2 @kind this) @signature `Le/e/a/b/f/b/w0;.a:()Ljava/util/Iterator;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L1ff73c.  v0:= v2.`e.e.a.b.f.b.w0.c` @type ^`boolean` @kind boolean;
  #L1ff740.  if v0 == 0 then goto L1ff764;
  #L1ff744.  v0:= new `e.e.a.b.f.b.r1`;
  #L1ff748.  v1:= v2.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff74c.  call temp:= `d`(v1) @signature `Le/e/a/b/f/b/e3;.d:()Ljava/util/Set;` @kind virtual;
  #L1ff752.  v1:= temp @kind object;
  #L1ff754.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff75a.  v1:= temp @kind object;
  #L1ff75c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/r1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L1ff762.  return v0 @kind object;
  #L1ff764.  v0:= v2.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff768.  call temp:= `d`(v0) @signature `Le/e/a/b/f/b/e3;.d:()Ljava/util/Set;` @kind virtual;
  #L1ff76e.  v0:= temp @kind object;
  #L1ff770.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff776.  v0:= temp @kind object;
  #L1ff778.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.b.w0` v2 @kind this, `e.e.a.b.f.b.w0` v3 @kind object) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/w0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1ff860.  v0:= 0I;
  #L1ff862.  v1:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff866.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/e3;.b:()I` @kind virtual;
  #L1ff86c.  v1:= temp;
  #L1ff86e.  if v0 >= v1 then goto L1ff88a;
  #L1ff872.  v1:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff876.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/b/e3;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L1ff87c.  v1:= temp @kind object;
  #L1ff87e.  call `b`(v2, v1) @signature `Le/e/a/b/f/b/w0;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L1ff884.  v0:= v0 + 1;
  #L1ff888.  goto L1ff862;
  #L1ff88a.  v3:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff88e.  call temp:= `c`(v3) @signature `Le/e/a/b/f/b/e3;.c:()Ljava/lang/Iterable;` @kind virtual;
  #L1ff894.  v3:= temp @kind object;
  #L1ff896.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff89c.  v3:= temp @kind object;
  #L1ff89e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff8a4.  v0:= temp;
  #L1ff8a6.  if v0 == 0 then goto L1ff8be;
  #L1ff8aa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff8b0.  v0:= temp @kind object;
  #L1ff8b2.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1ff8b6.  call `b`(v2, v0) @signature `Le/e/a/b/f/b/w0;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L1ff8bc.  goto L1ff89e;
  #L1ff8be.  return @kind void;
}
procedure `boolean` `b`(`e.e.a.b.f.b.w0` v1 @kind this) @signature `Le/e/a/b/f/b/w0;.b:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L1fef88.  v0:= v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1fef8c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/AbstractMap;.isEmpty:()Z` @kind virtual;
  #L1fef92.  v0:= temp;
  #L1fef94.  return v0;
}
procedure `boolean` `c`(`e.e.a.b.f.b.w0` v1 @kind this) @signature `Le/e/a/b/f/b/w0;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fefa8.  v0:= v1.`e.e.a.b.f.b.w0.b` @type ^`boolean` @kind boolean;
  #L1fefac.  return v0;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.b.w0` v4 @kind this) @signature `Le/e/a/b/f/b/w0;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff618.  v0:= new `e.e.a.b.f.b.w0`;
  #L1ff61c.  call `<init>`(v0) @signature `Le/e/a/b/f/b/w0;.<init>:()V` @kind direct;
  #L1ff622.  v1:= 0I;
  #L1ff624.  v2:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff628.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/e3;.b:()I` @kind virtual;
  #L1ff62e.  v2:= temp;
  #L1ff630.  if v1 >= v2 then goto L1ff660;
  #L1ff634.  v2:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff638.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/b/e3;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L1ff63e.  v2:= temp @kind object;
  #L1ff640.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff646.  v3:= temp @kind object;
  #L1ff648.  v3:= (`e.e.a.b.f.b.z0`) v3 @kind object;
  #L1ff64c.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff652.  v2:= temp @kind object;
  #L1ff654.  call `a`(v0, v3, v2) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)V` @kind direct;
  #L1ff65a.  v1:= v1 + 1;
  #L1ff65e.  goto L1ff624;
  #L1ff660.  v1:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff664.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/e3;.c:()Ljava/lang/Iterable;` @kind virtual;
  #L1ff66a.  v1:= temp @kind object;
  #L1ff66c.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff672.  v1:= temp @kind object;
  #L1ff674.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff67a.  v2:= temp;
  #L1ff67c.  if v2 == 0 then goto L1ff6a8;
  #L1ff680.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff686.  v2:= temp @kind object;
  #L1ff688.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L1ff68c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff692.  v3:= temp @kind object;
  #L1ff694.  v3:= (`e.e.a.b.f.b.z0`) v3 @kind object;
  #L1ff698.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff69e.  v2:= temp @kind object;
  #L1ff6a0.  call `a`(v0, v3, v2) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)V` @kind direct;
  #L1ff6a6.  goto L1ff674;
  #L1ff6a8.  v1:= v4.`e.e.a.b.f.b.w0.c` @type ^`boolean` @kind boolean;
  #L1ff6ac.  v0.`e.e.a.b.f.b.w0.c` @type ^`boolean` := v1 @kind boolean;
  #L1ff6b0.  return v0 @kind object;
}
procedure `boolean` `d`(`e.e.a.b.f.b.w0` v3 @kind this) @signature `Le/e/a/b/f/b/w0;.d:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fefc0.  v0:= 0I;
  #L1fefc2.  v1:= 0I;
  #L1fefc4.  v2:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1fefc8.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/e3;.b:()I` @kind virtual;
  #L1fefce.  v2:= temp;
  #L1fefd0.  if v1 >= v2 then goto L1feff4;
  #L1fefd4.  v2:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1fefd8.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/b/e3;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L1fefde.  v2:= temp @kind object;
  #L1fefe0.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L1fefe6.  v2:= temp;
  #L1fefe8.  if v2 != 0 then goto L1fefee;
  #L1fefec.  return v0;
  #L1fefee.  v1:= v1 + 1;
  #L1feff2.  goto L1fefc4;
  #L1feff4.  v1:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1feff8.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/e3;.c:()Ljava/lang/Iterable;` @kind virtual;
  #L1feffe.  v1:= temp @kind object;
  #L1ff000.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff006.  v1:= temp @kind object;
  #L1ff008.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff00e.  v2:= temp;
  #L1ff010.  if v2 == 0 then goto L1ff02e;
  #L1ff014.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff01a.  v2:= temp @kind object;
  #L1ff01c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L1ff020.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/w0;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L1ff026.  v2:= temp;
  #L1ff028.  if v2 != 0 then goto L1ff008;
  #L1ff02c.  return v0;
  #L1ff02e.  v0:= 1I;
  #L1ff030.  return v0;
}
procedure `java.util.Iterator` `e`(`e.e.a.b.f.b.w0` v2 @kind this) @signature `Le/e/a/b/f/b/w0;.e:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1ff78c.  v0:= v2.`e.e.a.b.f.b.w0.c` @type ^`boolean` @kind boolean;
  #L1ff790.  if v0 == 0 then goto L1ff7b4;
  #L1ff794.  v0:= new `e.e.a.b.f.b.r1`;
  #L1ff798.  v1:= v2.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff79c.  call temp:= `entrySet`(v1) @signature `Le/e/a/b/f/b/e3;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L1ff7a2.  v1:= temp @kind object;
  #L1ff7a4.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff7aa.  v1:= temp @kind object;
  #L1ff7ac.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/r1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L1ff7b2.  return v0 @kind object;
  #L1ff7b4.  v0:= v2.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff7b8.  call temp:= `entrySet`(v0) @signature `Le/e/a/b/f/b/e3;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L1ff7be.  v0:= temp @kind object;
  #L1ff7c0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff7c6.  v0:= temp @kind object;
  #L1ff7c8.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.w0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/w0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fef4c.  if v1 != v2 then goto L1fef54;
  #L1fef50.  v2:= 1I;
  #L1fef52.  return v2;
  #L1fef54.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.b.w0` @kind boolean;
  #L1fef58.  if v0 != 0 then goto L1fef60;
  #L1fef5c.  v2:= 0I;
  #L1fef5e.  return v2;
  #L1fef60.  v2:= (`e.e.a.b.f.b.w0`) v2 @kind object;
  #L1fef64.  v0:= v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1fef68.  v2:= v2.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1fef6c.  call temp:= `equals`(v0, v2) @signature `Le/e/a/b/f/b/e3;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fef72.  v2:= temp;
  #L1fef74.  return v2;
}
procedure `int` `f`(`e.e.a.b.f.b.w0` v4 @kind this) @signature `Le/e/a/b/f/b/w0;.f:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff164.  v0:= 0I;
  #L1ff166.  v1:= 0I;
  #L1ff168.  v2:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff16c.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/e3;.b:()I` @kind virtual;
  #L1ff172.  v2:= temp;
  #L1ff174.  if v0 >= v2 then goto L1ff1a8;
  #L1ff178.  v2:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff17c.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/e3;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L1ff182.  v2:= temp @kind object;
  #L1ff184.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff18a.  v3:= temp @kind object;
  #L1ff18c.  v3:= (`e.e.a.b.f.b.z0`) v3 @kind object;
  #L1ff190.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff196.  v2:= temp @kind object;
  #L1ff198.  call temp:= `b`(v3, v2) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)I` @kind static;
  #L1ff19e.  v2:= temp;
  #L1ff1a0.  v1:= v1 + v2 @kind int;
  #L1ff1a2.  v0:= v0 + 1;
  #L1ff1a6.  goto L1ff168;
  #L1ff1a8.  v0:= v4.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff1ac.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/e3;.c:()Ljava/lang/Iterable;` @kind virtual;
  #L1ff1b2.  v0:= temp @kind object;
  #L1ff1b4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff1ba.  v0:= temp @kind object;
  #L1ff1bc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff1c2.  v2:= temp;
  #L1ff1c4.  if v2 == 0 then goto L1ff1f4;
  #L1ff1c8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff1ce.  v2:= temp @kind object;
  #L1ff1d0.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L1ff1d4.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1ff1da.  v3:= temp @kind object;
  #L1ff1dc.  v3:= (`e.e.a.b.f.b.z0`) v3 @kind object;
  #L1ff1e0.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1ff1e6.  v2:= temp @kind object;
  #L1ff1e8.  call temp:= `b`(v3, v2) @signature `Le/e/a/b/f/b/w0;.b:(Le/e/a/b/f/b/z0;Ljava/lang/Object;)I` @kind static;
  #L1ff1ee.  v2:= temp;
  #L1ff1f0.  v1:= v1 + v2 @kind int;
  #L1ff1f2.  goto L1ff1bc;
  #L1ff1f4.  return v1;
}
procedure `int` `g`(`e.e.a.b.f.b.w0` v3 @kind this) @signature `Le/e/a/b/f/b/w0;.g:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ff208.  v0:= 0I;
  #L1ff20a.  v1:= 0I;
  #L1ff20c.  v2:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff210.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/e3;.b:()I` @kind virtual;
  #L1ff216.  v2:= temp;
  #L1ff218.  if v0 >= v2 then goto L1ff238;
  #L1ff21c.  v2:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff220.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/e3;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L1ff226.  v2:= temp @kind object;
  #L1ff228.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/w0;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L1ff22e.  v2:= temp;
  #L1ff230.  v1:= v1 + v2 @kind int;
  #L1ff232.  v0:= v0 + 1;
  #L1ff236.  goto L1ff20c;
  #L1ff238.  v0:= v3.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff23c.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/e3;.c:()Ljava/lang/Iterable;` @kind virtual;
  #L1ff242.  v0:= temp @kind object;
  #L1ff244.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ff24a.  v0:= temp @kind object;
  #L1ff24c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ff252.  v2:= temp;
  #L1ff254.  if v2 == 0 then goto L1ff270;
  #L1ff258.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ff25e.  v2:= temp @kind object;
  #L1ff260.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L1ff264.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/w0;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L1ff26a.  v2:= temp;
  #L1ff26c.  v1:= v1 + v2 @kind int;
  #L1ff26e.  goto L1ff24c;
  #L1ff270.  return v1;
}
procedure `void` `h`(`e.e.a.b.f.b.w0` v1 @kind this) @signature `Le/e/a/b/f/b/w0;.h:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ffb6c.  v0:= v1.`e.e.a.b.f.b.w0.b` @type ^`boolean` @kind boolean;
  #L1ffb70.  if v0 == 0 then goto L1ffb76;
  #L1ffb74.  return @kind void;
  #L1ffb76.  v0:= v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ffb7a.  call `e`(v0) @signature `Le/e/a/b/f/b/e3;.e:()V` @kind virtual;
  #L1ffb80.  v0:= 1I;
  #L1ffb82.  v1.`e.e.a.b.f.b.w0.b` @type ^`boolean` := v0 @kind boolean;
  #L1ffb86.  return @kind void;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.w0` v1 @kind this) @signature `Le/e/a/b/f/b/w0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ff108.  v0:= v1.`e.e.a.b.f.b.w0.a` @type ^`e.e.a.b.f.b.e3` @kind object;
  #L1ff10c.  call temp:= `hashCode`(v0) @signature `Le/e/a/b/f/b/e3;.hashCode:()I` @kind virtual;
  #L1ff112.  v0:= temp;
  #L1ff114.  return v0;
}
