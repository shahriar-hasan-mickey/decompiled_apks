record `e.e.a.b.f.m.a1` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/m/a1;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L267b30.  if v2 == 0 then goto L267b36;
  #L267b34.  return v2 @kind object;
  #L267b36.  v2:= new `java.lang.NullPointerException`;
  #L267b3a.  v0:= new `java.lang.StringBuilder`;
  #L267b3e.  v1:= 20I;
  #L267b42.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L267b48.  v1:= "at index " @kind object;
  #L267b4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L267b52.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L267b58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L267b5e.  v3:= temp @kind object;
  #L267b60.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L267b66.  throw v2;
}
procedure `java.lang.Object`[] `a`(`java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/m/a1;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L267b78.  v0:= 0I;
  #L267b7a.  if v0 >= v3 then goto L267b8e;
  #L267b7e.  v1:= v2[v0] @kind object;
  #L267b82.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/m/a1;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L267b88.  v0:= v0 + 1;
  #L267b8c.  goto L267b7a;
  #L267b8e.  return v2 @kind object;
}
