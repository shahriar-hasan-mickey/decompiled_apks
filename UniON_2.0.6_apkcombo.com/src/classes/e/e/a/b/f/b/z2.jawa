record `e.e.a.b.f.b.z2` @kind class @AccessFlag FINAL {
  `int` `e.e.a.b.f.b.z2.A` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.B` @AccessFlag PRIVATE;
  `java.lang.reflect.Field` `e.e.a.b.f.b.z2.C` @AccessFlag PRIVATE;
  `java.lang.Object` `e.e.a.b.f.b.z2.D` @AccessFlag PRIVATE;
  `java.lang.Object` `e.e.a.b.f.b.z2.E` @AccessFlag PRIVATE;
  `java.lang.Object` `e.e.a.b.f.b.z2.F` @AccessFlag PRIVATE;
  `e.e.a.b.f.b.a3` `e.e.a.b.f.b.z2.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `e.e.a.b.f.b.z2.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `e.e.a.b.f.b.z2.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.d` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.e` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.f` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.g` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.h` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.i` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.j` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.k` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.l` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.m` @AccessFlag PRIVATE_FINAL;
  `int`[] `e.e.a.b.f.b.z2.n` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.z2.o` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.p` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.q` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.r` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.s` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.t` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.u` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.v` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.w` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.x` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.y` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.z2.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.z2` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Le/e/a/b/f/b/z2;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L20bd90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20bd96.  v0:= 2147483647I;
  #L20bd9c.  v1.`e.e.a.b.f.b.z2.q` @type ^`int` := v0;
  #L20bda0.  v0:= -2147483648I;
  #L20bda4.  v1.`e.e.a.b.f.b.z2.r` @type ^`int` := v0;
  #L20bda8.  v0:= 0I;
  #L20bdaa.  v1.`e.e.a.b.f.b.z2.s` @type ^`int` := v0;
  #L20bdae.  v1.`e.e.a.b.f.b.z2.t` @type ^`int` := v0;
  #L20bdb2.  v1.`e.e.a.b.f.b.z2.u` @type ^`int` := v0;
  #L20bdb6.  v1.`e.e.a.b.f.b.z2.v` @type ^`int` := v0;
  #L20bdba.  v1.`e.e.a.b.f.b.z2.w` @type ^`int` := v0;
  #L20bdbe.  v1.`e.e.a.b.f.b.z2.c` @type ^`java.lang.Class` := v2 @kind object;
  #L20bdc2.  v2:= new `e.e.a.b.f.b.a3`;
  #L20bdc6.  call `<init>`(v2, v3) @signature `Le/e/a/b/f/b/a3;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bdcc.  v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` := v2 @kind object;
  #L20bdd0.  v1.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] := v4 @kind object;
  #L20bdd4.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20bdd8.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20bdde.  v2:= temp;
  #L20bde0.  v1.`e.e.a.b.f.b.z2.d` @type ^`int` := v2;
  #L20bde4.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20bde8.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20bdee.  v2:= temp;
  #L20bdf0.  v1.`e.e.a.b.f.b.z2.e` @type ^`int` := v2;
  #L20bdf4.  v2:= v1.`e.e.a.b.f.b.z2.e` @type ^`int`;
  #L20bdf8.  v3:= 0I;
  #L20bdfa.  if v2 != 0 then goto L20be24;
  #L20bdfe.  v1.`e.e.a.b.f.b.z2.f` @type ^`int` := v0;
  #L20be02.  v1.`e.e.a.b.f.b.z2.g` @type ^`int` := v0;
  #L20be06.  v1.`e.e.a.b.f.b.z2.h` @type ^`int` := v0;
  #L20be0a.  v1.`e.e.a.b.f.b.z2.i` @type ^`int` := v0;
  #L20be0e.  v1.`e.e.a.b.f.b.z2.j` @type ^`int` := v0;
  #L20be12.  v1.`e.e.a.b.f.b.z2.l` @type ^`int` := v0;
  #L20be16.  v1.`e.e.a.b.f.b.z2.k` @type ^`int` := v0;
  #L20be1a.  v1.`e.e.a.b.f.b.z2.m` @type ^`int` := v0;
  #L20be1e.  v1.`e.e.a.b.f.b.z2.n` @type ^`int`[] := v3 @kind object;
  #L20be22.  return @kind void;
  #L20be24.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be28.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be2e.  v2:= temp;
  #L20be30.  v1.`e.e.a.b.f.b.z2.f` @type ^`int` := v2;
  #L20be34.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be38.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be3e.  v2:= temp;
  #L20be40.  v1.`e.e.a.b.f.b.z2.g` @type ^`int` := v2;
  #L20be44.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be48.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be4e.  v2:= temp;
  #L20be50.  v1.`e.e.a.b.f.b.z2.h` @type ^`int` := v2;
  #L20be54.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be58.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be5e.  v2:= temp;
  #L20be60.  v1.`e.e.a.b.f.b.z2.i` @type ^`int` := v2;
  #L20be64.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be68.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be6e.  v2:= temp;
  #L20be70.  v1.`e.e.a.b.f.b.z2.l` @type ^`int` := v2;
  #L20be74.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be78.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be7e.  v2:= temp;
  #L20be80.  v1.`e.e.a.b.f.b.z2.k` @type ^`int` := v2;
  #L20be84.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be88.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be8e.  v2:= temp;
  #L20be90.  v1.`e.e.a.b.f.b.z2.j` @type ^`int` := v2;
  #L20be94.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20be98.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20be9e.  v2:= temp;
  #L20bea0.  v1.`e.e.a.b.f.b.z2.m` @type ^`int` := v2;
  #L20bea4.  v2:= v1.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20bea8.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20beae.  v2:= temp;
  #L20beb0.  if v2 != 0 then goto L20beb6;
  #L20beb4.  goto L20beba;
  #L20beb6.  v3:= new `int`[v2];
  #L20beba.  v1.`e.e.a.b.f.b.z2.n` @type ^`int`[] := v3 @kind object;
  #L20bebe.  v2:= v1.`e.e.a.b.f.b.z2.f` @type ^`int`;
  #L20bec2.  v2:= v2 ^< 1;
  #L20bec6.  v3:= v1.`e.e.a.b.f.b.z2.g` @type ^`int`;
  #L20beca.  v2:= v2 + v3 @kind int;
  #L20becc.  v1.`e.e.a.b.f.b.z2.o` @type ^`int` := v2;
  #L20bed0.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.a:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20ba0c.  v0:= v0.`e.e.a.b.f.b.z2.d` @type ^`int`;
  #L20ba10.  return v0;
}
procedure `java.lang.reflect.Field` `a`(`java.lang.Class` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Le/e/a/b/f/b/z2;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20bba0.  call temp:= `getDeclaredField`(v5, v6) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L20bba6.  v5:= temp @kind object;
  #L20bba8.  return v5 @kind object;
  #L20bbaa.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L20bbb0.  v0:= temp @kind object;
  #L20bbb2.  v1:= length @variable v0;
  #L20bbb4.  v2:= 0I;
  #L20bbb6.  if v2 >= v1 then goto L20bbda;
  #L20bbba.  v3:= v0[v2] @kind object;
  #L20bbbe.  call temp:= `getName`(v3) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L20bbc4.  v4:= temp @kind object;
  #L20bbc6.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20bbcc.  v4:= temp;
  #L20bbce.  if v4 == 0 then goto L20bbd4;
  #L20bbd2.  return v3 @kind object;
  #L20bbd4.  v2:= v2 + 1;
  #L20bbd8.  goto L20bbb6;
  #L20bbda.  v1:= new `java.lang.RuntimeException`;
  #L20bbde.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20bbe4.  v5:= temp @kind object;
  #L20bbe6.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20bbec.  v0:= temp @kind object;
  #L20bbee.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20bbf4.  v2:= temp @kind object;
  #L20bbf6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20bbfc.  v2:= temp;
  #L20bbfe.  v2:= v2 + 40;
  #L20bc02.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20bc08.  v3:= temp @kind object;
  #L20bc0a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20bc10.  v3:= temp;
  #L20bc12.  v2:= v2 + v3 @kind int;
  #L20bc14.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20bc1a.  v3:= temp @kind object;
  #L20bc1c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20bc22.  v3:= temp;
  #L20bc24.  v2:= v2 + v3 @kind int;
  #L20bc26.  v3:= new `java.lang.StringBuilder`;
  #L20bc2a.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L20bc30.  v2:= "Field " @kind object;
  #L20bc34.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc3a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc40.  v6:= " for " @kind object;
  #L20bc44.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc4a.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc50.  v5:= " not found. Known fields are " @kind object;
  #L20bc54.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc5a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bc60.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20bc66.  v5:= temp @kind object;
  #L20bc68.  call `<init>`(v1, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bc6e.  throw v1;
  catch `java.lang.NoSuchFieldException` @[L20bba0..L20bba8] goto L20bbaa;
}
procedure `int` `b`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.b:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20ba24.  v0:= v0.`e.e.a.b.f.b.z2.h` @type ^`int`;
  #L20ba28.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.c:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20ba3c.  v0:= v0.`e.e.a.b.f.b.z2.i` @type ^`int`;
  #L20ba40.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.d:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20ba84.  v0:= v0.`e.e.a.b.f.b.z2.e` @type ^`int`;
  #L20ba88.  return v0;
}
procedure `int` `e`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.e:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20bab8.  v0:= v0.`e.e.a.b.f.b.z2.j` @type ^`int`;
  #L20babc.  return v0;
}
procedure `int` `f`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.f:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20bad0.  v0:= v0.`e.e.a.b.f.b.z2.m` @type ^`int`;
  #L20bad4.  return v0;
}
procedure `int`[] `g`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.g:(Le/e/a/b/f/b/z2;)[I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20bb18.  v0:= v0.`e.e.a.b.f.b.z2.n` @type ^`int`[] @kind object;
  #L20bb1c.  return v0 @kind object;
}
procedure `int` `h`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.h:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20bae8.  v0:= v0.`e.e.a.b.f.b.z2.l` @type ^`int`;
  #L20baec.  return v0;
}
procedure `int` `i`(`e.e.a.b.f.b.z2` v0 @kind object) @signature `Le/e/a/b/f/b/z2;.i:(Le/e/a/b/f/b/z2;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20bb00.  v0:= v0.`e.e.a.b.f.b.z2.k` @type ^`int`;
  #L20bb04.  return v0;
}
procedure `java.lang.Object` `p`(`e.e.a.b.f.b.z2` v3 @kind this) @signature `Le/e/a/b/f/b/z2;.p:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20bb30.  v0:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bb34.  v1:= v3.`e.e.a.b.f.b.z2.o` @type ^`int`;
  #L20bb38.  v2:= v1 + 1;
  #L20bb3c.  v3.`e.e.a.b.f.b.z2.o` @type ^`int` := v2;
  #L20bb40.  v0:= v0[v1] @kind object;
  #L20bb44.  return v0 @kind object;
}
procedure `boolean` `q`(`e.e.a.b.f.b.z2` v2 @kind this) @signature `Le/e/a/b/f/b/z2;.q:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L20b93c.  v0:= v2.`e.e.a.b.f.b.z2.d` @type ^`int`;
  #L20b940.  v1:= 1I;
  #L20b942.  v0:= v0 ^& v1 @kind int;
  #L20b944.  if v0 != v1 then goto L20b94a;
  #L20b948.  return v1;
  #L20b94a.  v0:= 0I;
  #L20b94c.  return v0;
}
procedure `boolean` `a`(`e.e.a.b.f.b.z2` v5 @kind this) @signature `Le/e/a/b/f/b/z2;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20b648.  v0:= v5.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20b64c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/a3;.a:()Z` @kind virtual;
  #L20b652.  v0:= temp;
  #L20b654.  v1:= 0I;
  #L20b656.  if v0 != 0 then goto L20b65c;
  #L20b65a.  return v1;
  #L20b65c.  v0:= v5.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20b660.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20b666.  v0:= temp;
  #L20b668.  v5.`e.e.a.b.f.b.z2.x` @type ^`int` := v0;
  #L20b66c.  v0:= v5.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20b670.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20b676.  v0:= temp;
  #L20b678.  v5.`e.e.a.b.f.b.z2.y` @type ^`int` := v0;
  #L20b67c.  v0:= v5.`e.e.a.b.f.b.z2.y` @type ^`int`;
  #L20b680.  v0:= v0 ^& 255;
  #L20b684.  v5.`e.e.a.b.f.b.z2.z` @type ^`int` := v0;
  #L20b688.  v0:= v5.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20b68c.  v2:= v5.`e.e.a.b.f.b.z2.q` @type ^`int`;
  #L20b690.  if v0 >= v2 then goto L20b698;
  #L20b694.  v5.`e.e.a.b.f.b.z2.q` @type ^`int` := v0;
  #L20b698.  v0:= v5.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20b69c.  v2:= v5.`e.e.a.b.f.b.z2.r` @type ^`int`;
  #L20b6a0.  if v0 <= v2 then goto L20b6a8;
  #L20b6a4.  v5.`e.e.a.b.f.b.z2.r` @type ^`int` := v0;
  #L20b6a8.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b6ac.  v2:= `@@e.e.a.b.f.b.a1.a0` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b6b0.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b6b6.  v2:= temp;
  #L20b6b8.  v3:= 1I;
  #L20b6ba.  if v0 != v2 then goto L20b6ca;
  #L20b6be.  v0:= v5.`e.e.a.b.f.b.z2.s` @type ^`int`;
  #L20b6c2.  v0:= v0 + v3 @kind int;
  #L20b6c4.  v5.`e.e.a.b.f.b.z2.s` @type ^`int` := v0;
  #L20b6c8.  goto L20b6fc;
  #L20b6ca.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b6ce.  v2:= `@@e.e.a.b.f.b.a1.u` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b6d2.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b6d8.  v2:= temp;
  #L20b6da.  if v0 < v2 then goto L20b6fc;
  #L20b6de.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b6e2.  v2:= `@@e.e.a.b.f.b.a1.Z` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b6e6.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b6ec.  v2:= temp;
  #L20b6ee.  if v0 > v2 then goto L20b6fc;
  #L20b6f2.  v0:= v5.`e.e.a.b.f.b.z2.t` @type ^`int`;
  #L20b6f6.  v0:= v0 + v3 @kind int;
  #L20b6f8.  v5.`e.e.a.b.f.b.z2.t` @type ^`int` := v0;
  #L20b6fc.  v0:= v5.`e.e.a.b.f.b.z2.w` @type ^`int`;
  #L20b700.  v0:= v0 + v3 @kind int;
  #L20b702.  v5.`e.e.a.b.f.b.z2.w` @type ^`int` := v0;
  #L20b706.  v0:= v5.`e.e.a.b.f.b.z2.q` @type ^`int`;
  #L20b70a.  v2:= v5.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20b70e.  v4:= v5.`e.e.a.b.f.b.z2.w` @type ^`int`;
  #L20b712.  call temp:= `a`(v0, v2, v4) @signature `Le/e/a/b/f/b/d3;.a:(III)Z` @kind static;
  #L20b718.  v0:= temp;
  #L20b71a.  if v0 == 0 then goto L20b734;
  #L20b71e.  v0:= v5.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20b722.  v0:= v0 + v3 @kind int;
  #L20b724.  v5.`e.e.a.b.f.b.z2.v` @type ^`int` := v0;
  #L20b728.  v0:= v5.`e.e.a.b.f.b.z2.v` @type ^`int`;
  #L20b72c.  v2:= v5.`e.e.a.b.f.b.z2.q` @type ^`int`;
  #L20b730.  v0:= v0 - v2 @kind int;
  #L20b732.  goto L20b73a;
  #L20b734.  v0:= v5.`e.e.a.b.f.b.z2.u` @type ^`int`;
  #L20b738.  v0:= v0 + v3 @kind int;
  #L20b73a.  v5.`e.e.a.b.f.b.z2.u` @type ^`int` := v0;
  #L20b73e.  v0:= v5.`e.e.a.b.f.b.z2.y` @type ^`int`;
  #L20b742.  v0:= v0 ^& 1024;
  #L20b746.  if v0 == 0 then goto L20b74e;
  #L20b74a.  v0:= 1I;
  #L20b74c.  goto L20b750;
  #L20b74e.  v0:= 0I;
  #L20b750.  if v0 == 0 then goto L20b76c;
  #L20b754.  v0:= v5.`e.e.a.b.f.b.z2.n` @type ^`int`[] @kind object;
  #L20b758.  v2:= v5.`e.e.a.b.f.b.z2.p` @type ^`int`;
  #L20b75c.  v4:= v2 + 1;
  #L20b760.  v5.`e.e.a.b.f.b.z2.p` @type ^`int` := v4;
  #L20b764.  v4:= v5.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20b768.  v0[v2]:= v4;
  #L20b76c.  v0:= 0I;
  #L20b76e.  v5.`e.e.a.b.f.b.z2.D` @type ^`java.lang.Object` := v0 @kind object;
  #L20b772.  v5.`e.e.a.b.f.b.z2.E` @type ^`java.lang.Object` := v0 @kind object;
  #L20b776.  v5.`e.e.a.b.f.b.z2.F` @type ^`java.lang.Object` := v0 @kind object;
  #L20b77a.  call temp:= `d`(v5) @signature `Le/e/a/b/f/b/z2;.d:()Z` @kind virtual;
  #L20b780.  v0:= temp;
  #L20b782.  if v0 == 0 then goto L20b80c;
  #L20b786.  v0:= v5.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20b78a.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20b790.  v0:= temp;
  #L20b792.  v5.`e.e.a.b.f.b.z2.A` @type ^`int` := v0;
  #L20b796.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b79a.  v1:= `@@e.e.a.b.f.b.a1.l` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b79e.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b7a4.  v1:= temp;
  #L20b7a6.  v1:= v1 + 51;
  #L20b7aa.  if v0 == v1 then goto L20b7fc;
  #L20b7ae.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b7b2.  v1:= `@@e.e.a.b.f.b.a1.t` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b7b6.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b7bc.  v1:= temp;
  #L20b7be.  v1:= v1 + 51;
  #L20b7c2.  if v0 != v1 then goto L20b7c8;
  #L20b7c6.  goto L20b7fc;
  #L20b7c8.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b7cc.  v1:= `@@e.e.a.b.f.b.a1.o` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b7d0.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b7d6.  v1:= temp;
  #L20b7d8.  v1:= v1 + 51;
  #L20b7dc.  if v0 != v1 then goto L20b92a;
  #L20b7e0.  call temp:= `q`(v5) @signature `Le/e/a/b/f/b/z2;.q:()Z` @kind direct;
  #L20b7e6.  v0:= temp;
  #L20b7e8.  if v0 == 0 then goto L20b92a;
  #L20b7ec.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/z2;.p:()Ljava/lang/Object;` @kind direct;
  #L20b7f2.  v0:= temp @kind object;
  #L20b7f4.  v5.`e.e.a.b.f.b.z2.E` @type ^`java.lang.Object` := v0 @kind object;
  #L20b7f8.  goto L20b92a;
  #L20b7fc.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/z2;.p:()Ljava/lang/Object;` @kind direct;
  #L20b802.  v0:= temp @kind object;
  #L20b804.  v5.`e.e.a.b.f.b.z2.D` @type ^`java.lang.Object` := v0 @kind object;
  #L20b808.  goto L20b92a;
  #L20b80c.  v0:= v5.`e.e.a.b.f.b.z2.c` @type ^`java.lang.Class` @kind object;
  #L20b810.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/z2;.p:()Ljava/lang/Object;` @kind direct;
  #L20b816.  v2:= temp @kind object;
  #L20b818.  v2:= (`java.lang.String`) v2 @kind object;
  #L20b81c.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/b/z2;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20b822.  v0:= temp @kind object;
  #L20b824.  v5.`e.e.a.b.f.b.z2.C` @type ^`java.lang.reflect.Field` := v0 @kind object;
  #L20b828.  call temp:= `h`(v5) @signature `Le/e/a/b/f/b/z2;.h:()Z` @kind virtual;
  #L20b82e.  v0:= temp;
  #L20b830.  if v0 == 0 then goto L20b844;
  #L20b834.  v0:= v5.`e.e.a.b.f.b.z2.a` @type ^`e.e.a.b.f.b.a3` @kind object;
  #L20b838.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a3;.b:()I` @kind virtual;
  #L20b83e.  v0:= temp;
  #L20b840.  v5.`e.e.a.b.f.b.z2.B` @type ^`int` := v0;
  #L20b844.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b848.  v2:= `@@e.e.a.b.f.b.a1.l` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b84c.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b852.  v2:= temp;
  #L20b854.  if v0 == v2 then goto L20b91a;
  #L20b858.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b85c.  v2:= `@@e.e.a.b.f.b.a1.t` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b860.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b866.  v2:= temp;
  #L20b868.  if v0 != v2 then goto L20b86e;
  #L20b86c.  goto L20b91a;
  #L20b86e.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b872.  v2:= `@@e.e.a.b.f.b.a1.D` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b876.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b87c.  v2:= temp;
  #L20b87e.  if v0 == v2 then goto L20b7fc;
  #L20b882.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b886.  v2:= `@@e.e.a.b.f.b.a1.Z` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b88a.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b890.  v2:= temp;
  #L20b892.  if v0 != v2 then goto L20b898;
  #L20b896.  goto L20b7fc;
  #L20b898.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b89c.  v2:= `@@e.e.a.b.f.b.a1.o` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b8a0.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b8a6.  v2:= temp;
  #L20b8a8.  if v0 == v2 then goto L20b90a;
  #L20b8ac.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b8b0.  v2:= `@@e.e.a.b.f.b.a1.G` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b8b4.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b8ba.  v2:= temp;
  #L20b8bc.  if v0 == v2 then goto L20b90a;
  #L20b8c0.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b8c4.  v2:= `@@e.e.a.b.f.b.a1.U` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b8c8.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b8ce.  v2:= temp;
  #L20b8d0.  if v0 != v2 then goto L20b8d6;
  #L20b8d4.  goto L20b90a;
  #L20b8d6.  v0:= v5.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b8da.  v2:= `@@e.e.a.b.f.b.a1.a0` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b8de.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b8e4.  v2:= temp;
  #L20b8e6.  if v0 != v2 then goto L20b92a;
  #L20b8ea.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/z2;.p:()Ljava/lang/Object;` @kind direct;
  #L20b8f0.  v0:= temp @kind object;
  #L20b8f2.  v5.`e.e.a.b.f.b.z2.F` @type ^`java.lang.Object` := v0 @kind object;
  #L20b8f6.  v0:= v5.`e.e.a.b.f.b.z2.y` @type ^`int`;
  #L20b8fa.  v0:= v0 ^& 2048;
  #L20b8fe.  if v0 == 0 then goto L20b904;
  #L20b902.  v1:= 1I;
  #L20b904.  if v1 == 0 then goto L20b92a;
  #L20b908.  goto L20b916;
  #L20b90a.  call temp:= `q`(v5) @signature `Le/e/a/b/f/b/z2;.q:()Z` @kind direct;
  #L20b910.  v0:= temp;
  #L20b912.  if v0 == 0 then goto L20b92a;
  #L20b916.  goto L20b7ec;
  #L20b91a.  v0:= v5.`e.e.a.b.f.b.z2.C` @type ^`java.lang.reflect.Field` @kind object;
  #L20b91e.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L20b924.  v0:= temp @kind object;
  #L20b926.  goto L20b804;
  #L20b92a.  return v3;
}
procedure `int` `b`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.b:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L20ba54.  v0:= v1.`e.e.a.b.f.b.z2.x` @type ^`int`;
  #L20ba58.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.c:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L20ba6c.  v0:= v1.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20ba70.  return v0;
}
procedure `boolean` `d`(`e.e.a.b.f.b.z2` v2 @kind this) @signature `Le/e/a/b/f/b/z2;.d:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L20b960.  v0:= v2.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b964.  v1:= `@@e.e.a.b.f.b.a1.a0` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b968.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b96e.  v1:= temp;
  #L20b970.  if v0 <= v1 then goto L20b978;
  #L20b974.  v0:= 1I;
  #L20b976.  return v0;
  #L20b978.  v0:= 0I;
  #L20b97a.  return v0;
}
procedure `java.lang.reflect.Field` `e`(`e.e.a.b.f.b.z2` v3 @kind this) @signature `Le/e/a/b/f/b/z2;.e:()Ljava/lang/reflect/Field;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20bc90.  v0:= v3.`e.e.a.b.f.b.z2.A` @type ^`int`;
  #L20bc94.  v0:= v0 ^< 1;
  #L20bc98.  v1:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bc9c.  v1:= v1[v0] @kind object;
  #L20bca0.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.Field` @kind boolean;
  #L20bca4.  if v2 == 0 then goto L20bcae;
  #L20bca8.  v1:= (`java.lang.reflect.Field`) v1 @kind object;
  #L20bcac.  return v1 @kind object;
  #L20bcae.  v2:= v3.`e.e.a.b.f.b.z2.c` @type ^`java.lang.Class` @kind object;
  #L20bcb2.  v1:= (`java.lang.String`) v1 @kind object;
  #L20bcb6.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/b/z2;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20bcbc.  v1:= temp @kind object;
  #L20bcbe.  v2:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bcc2.  v2[v0]:= v1 @kind object;
  #L20bcc6.  return v1 @kind object;
}
procedure `java.lang.reflect.Field` `f`(`e.e.a.b.f.b.z2` v3 @kind this) @signature `Le/e/a/b/f/b/z2;.f:()Ljava/lang/reflect/Field;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20bcd8.  v0:= v3.`e.e.a.b.f.b.z2.A` @type ^`int`;
  #L20bcdc.  v0:= v0 ^< 1;
  #L20bce0.  v0:= v0 + 1;
  #L20bce4.  v1:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bce8.  v1:= v1[v0] @kind object;
  #L20bcec.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.Field` @kind boolean;
  #L20bcf0.  if v2 == 0 then goto L20bcfa;
  #L20bcf4.  v1:= (`java.lang.reflect.Field`) v1 @kind object;
  #L20bcf8.  return v1 @kind object;
  #L20bcfa.  v2:= v3.`e.e.a.b.f.b.z2.c` @type ^`java.lang.Class` @kind object;
  #L20bcfe.  v1:= (`java.lang.String`) v1 @kind object;
  #L20bd02.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/b/z2;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20bd08.  v1:= temp @kind object;
  #L20bd0a.  v2:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bd0e.  v2[v0]:= v1 @kind object;
  #L20bd12.  return v1 @kind object;
}
procedure `java.lang.reflect.Field` `g`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.g:()Ljava/lang/reflect/Field;` @AccessFlag FINAL {
    temp;
    v0;

  #L20bd24.  v0:= v1.`e.e.a.b.f.b.z2.C` @type ^`java.lang.reflect.Field` @kind object;
  #L20bd28.  return v0 @kind object;
}
procedure `boolean` `h`(`e.e.a.b.f.b.z2` v2 @kind this) @signature `Le/e/a/b/f/b/z2;.h:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L20b98c.  call temp:= `q`(v2) @signature `Le/e/a/b/f/b/z2;.q:()Z` @kind direct;
  #L20b992.  v0:= temp;
  #L20b994.  if v0 == 0 then goto L20b9b0;
  #L20b998.  v0:= v2.`e.e.a.b.f.b.z2.z` @type ^`int`;
  #L20b99c.  v1:= `@@e.e.a.b.f.b.a1.t` @type ^`e.e.a.b.f.b.a1` @kind object;
  #L20b9a0.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a1;.b:()I` @kind virtual;
  #L20b9a6.  v1:= temp;
  #L20b9a8.  if v0 > v1 then goto L20b9b0;
  #L20b9ac.  v0:= 1I;
  #L20b9ae.  return v0;
  #L20b9b0.  v0:= 0I;
  #L20b9b2.  return v0;
}
procedure `java.lang.reflect.Field` `i`(`e.e.a.b.f.b.z2` v3 @kind this) @signature `Le/e/a/b/f/b/z2;.i:()Ljava/lang/reflect/Field;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20bd3c.  v0:= v3.`e.e.a.b.f.b.z2.f` @type ^`int`;
  #L20bd40.  v0:= v0 ^< 1;
  #L20bd44.  v1:= v3.`e.e.a.b.f.b.z2.B` @type ^`int`;
  #L20bd48.  v1:= v1 / 32;
  #L20bd4c.  v0:= v0 + v1 @kind int;
  #L20bd4e.  v1:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bd52.  v1:= v1[v0] @kind object;
  #L20bd56.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.Field` @kind boolean;
  #L20bd5a.  if v2 == 0 then goto L20bd64;
  #L20bd5e.  v1:= (`java.lang.reflect.Field`) v1 @kind object;
  #L20bd62.  return v1 @kind object;
  #L20bd64.  v2:= v3.`e.e.a.b.f.b.z2.c` @type ^`java.lang.Class` @kind object;
  #L20bd68.  v1:= (`java.lang.String`) v1 @kind object;
  #L20bd6c.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/b/z2;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20bd72.  v1:= temp @kind object;
  #L20bd74.  v2:= v3.`e.e.a.b.f.b.z2.b` @type ^`java.lang.Object`[] @kind object;
  #L20bd78.  v2[v0]:= v1 @kind object;
  #L20bd7c.  return v1 @kind object;
}
procedure `int` `j`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.j:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L20ba9c.  v0:= v1.`e.e.a.b.f.b.z2.B` @type ^`int`;
  #L20baa0.  v0:= v0 %% 32;
  #L20baa4.  return v0;
}
procedure `boolean` `k`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.k:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L20b9c4.  v0:= v1.`e.e.a.b.f.b.z2.y` @type ^`int`;
  #L20b9c8.  v0:= v0 ^& 256;
  #L20b9cc.  if v0 == 0 then goto L20b9d4;
  #L20b9d0.  v0:= 1I;
  #L20b9d2.  return v0;
  #L20b9d4.  v0:= 0I;
  #L20b9d6.  return v0;
}
procedure `boolean` `l`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.l:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L20b9e8.  v0:= v1.`e.e.a.b.f.b.z2.y` @type ^`int`;
  #L20b9ec.  v0:= v0 ^& 512;
  #L20b9f0.  if v0 == 0 then goto L20b9f8;
  #L20b9f4.  v0:= 1I;
  #L20b9f6.  return v0;
  #L20b9f8.  v0:= 0I;
  #L20b9fa.  return v0;
}
procedure `java.lang.Object` `m`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.m:()Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L20bb58.  v0:= v1.`e.e.a.b.f.b.z2.D` @type ^`java.lang.Object` @kind object;
  #L20bb5c.  return v0 @kind object;
}
procedure `java.lang.Object` `n`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.n:()Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L20bb70.  v0:= v1.`e.e.a.b.f.b.z2.E` @type ^`java.lang.Object` @kind object;
  #L20bb74.  return v0 @kind object;
}
procedure `java.lang.Object` `o`(`e.e.a.b.f.b.z2` v1 @kind this) @signature `Le/e/a/b/f/b/z2;.o:()Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L20bb88.  v0:= v1.`e.e.a.b.f.b.z2.F` @type ^`java.lang.Object` @kind object;
  #L20bb8c.  return v0 @kind object;
}
