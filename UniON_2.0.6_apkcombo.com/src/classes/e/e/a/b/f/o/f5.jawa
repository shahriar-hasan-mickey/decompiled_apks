record `e.e.a.b.f.o.f5` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/o/f5;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2c989c.  v0:= 0I;
  #L2c989e.  v1:= 0I;
  #L2c98a0.  v2:= length @variable v12;
  #L2c98a2.  if v1 >= v2 then goto L2c99fe;
  #L2c98a6.  v2:= v12[v1] @kind object;
  #L2c98aa.  if v2 != 0 then goto L2c98b6;
  #L2c98ae.  v2:= "null" @kind object;
  #L2c98b2.  goto L2c99f2;
  #L2c98b6.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c98bc.  v2:= temp @kind object;
  #L2c98be.  goto L2c99f2;
  #L2c98c2.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L2c98c4.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c98ca.  v3:= temp @kind object;
  #L2c98cc.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2c98d2.  v3:= temp @kind object;
  #L2c98d4.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2c98da.  v2:= temp;
  #L2c98dc.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2c98e2.  v2:= temp @kind object;
  #L2c98e4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c98ea.  v4:= temp @kind object;
  #L2c98ec.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c98f2.  v4:= temp;
  #L2c98f4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c98fa.  v5:= temp @kind object;
  #L2c98fc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c9902.  v5:= temp;
  #L2c9904.  v6:= new `java.lang.StringBuilder`;
  #L2c9908.  v4:= v4 + 1;
  #L2c990c.  v4:= v4 + v5 @kind int;
  #L2c990e.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c9914.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c991a.  v3:= 64I;
  #L2c991e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9924.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c992a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9930.  v2:= temp @kind object;
  #L2c9932.  v3:= "com.google.common.base.Strings" @kind object;
  #L2c9936.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2c993c.  v3:= temp @kind object;
  #L2c993e.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L2c9942.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c9948.  v5:= temp @kind object;
  #L2c994a.  v6:= "Exception during lenientFormat for " @kind object;
  #L2c994e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c9954.  v7:= temp;
  #L2c9956.  if v7 == 0 then goto L2c9964;
  #L2c995a.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2c9960.  v5:= temp @kind object;
  #L2c9962.  goto L2c996e;
  #L2c9964.  v5:= new `java.lang.String`;
  #L2c9968.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c996e.  v7:= v5 @kind object;
  #L2c9970.  v5:= "com.google.common.base.Strings" @kind object;
  #L2c9974.  v6:= "lenientToString" @kind object;
  #L2c9978.  v8:= v9 @kind object;
  #L2c997a.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2c9980.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9986.  v3:= temp @kind object;
  #L2c9988.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2c998e.  v3:= temp @kind object;
  #L2c9990.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c9996.  v4:= temp @kind object;
  #L2c9998.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c999e.  v4:= temp;
  #L2c99a0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c99a6.  v5:= temp @kind object;
  #L2c99a8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c99ae.  v5:= temp;
  #L2c99b0.  v6:= new `java.lang.StringBuilder`;
  #L2c99b4.  v4:= v4 + 9;
  #L2c99b8.  v4:= v4 + v5 @kind int;
  #L2c99ba.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c99c0.  v4:= "<" @kind object;
  #L2c99c4.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99ca.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99d0.  v2:= " threw " @kind object;
  #L2c99d4.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99da.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99e0.  v2:= ">" @kind object;
  #L2c99e4.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99ea.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c99f0.  v2:= temp @kind object;
  #L2c99f2.  v12[v1]:= v2 @kind object;
  #L2c99f6.  v1:= v1 + 1;
  #L2c99fa.  goto L2c98a0;
  #L2c99fe.  v1:= new `java.lang.StringBuilder`;
  #L2c9a02.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c9a08.  v3:= temp;
  #L2c9a0a.  v2:= v2 * 16;
  #L2c9a0e.  v3:= v3 + v2 @kind int;
  #L2c9a10.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c9a16.  v2:= 0I;
  #L2c9a18.  v3:= length @variable v12;
  #L2c9a1a.  if v0 >= v3 then goto L2c9a52;
  #L2c9a1e.  v4:= "%s" @kind object;
  #L2c9a22.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L2c9a28.  v4:= temp;
  #L2c9a2a.  v5:= -1I;
  #L2c9a2c.  if v4 != v5 then goto L2c9a32;
  #L2c9a30.  goto L2c9a52;
  #L2c9a32.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a38.  v2:= v0 + 1;
  #L2c9a3c.  v0:= v12[v0] @kind object;
  #L2c9a40.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a46.  v0:= v4 + 2;
  #L2c9a4a.  v10:= v2;
  #L2c9a4c.  v2:= v0;
  #L2c9a4e.  v0:= v10;
  #L2c9a50.  goto L2c9a18;
  #L2c9a52.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c9a58.  v4:= temp;
  #L2c9a5a.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a60.  if v0 >= v3 then goto L2c9aa8;
  #L2c9a64.  v11:= " [" @kind object;
  #L2c9a68.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a6e.  v11:= v0 + 1;
  #L2c9a72.  v0:= v12[v0] @kind object;
  #L2c9a76.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a7c.  v0:= length @variable v12;
  #L2c9a7e.  if v11 >= v0 then goto L2c9a9e;
  #L2c9a82.  v0:= ", " @kind object;
  #L2c9a86.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a8c.  v0:= v11 + 1;
  #L2c9a90.  v11:= v12[v11] @kind object;
  #L2c9a94.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a9a.  v11:= v0;
  #L2c9a9c.  goto L2c9a7c;
  #L2c9a9e.  v11:= 93I;
  #L2c9aa2.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9aa8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9aae.  v11:= temp @kind object;
  #L2c9ab0.  return v11 @kind object;
  catch `java.lang.Exception` @[L2c98b6..L2c98be] goto L2c98c2;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/o/f5;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2c908c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/o/d3;.a:(Ljava/lang/String;)Z` @kind static;
  #L2c9092.  v0:= temp;
  #L2c9094.  return v0;
}
