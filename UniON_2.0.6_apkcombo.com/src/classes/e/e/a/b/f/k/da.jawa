record `e.e.a.b.f.k.da` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.fa` @kind class {
  `java.lang.String` `e.e.a.b.f.k.da.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.b.f.k.da.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.b.f.k.da.c` @AccessFlag PRIVATE_FINAL;
  `e.e.a.a.d` `e.e.a.b.f.k.da.d` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.k.da.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.k.da` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `boolean` v3 , `e.e.a.a.d` v4 @kind object, `int` v5 , `e.e.a.b.f.k.ba` v6 @kind object) @signature `Le/e/a/b/f/k/da;.<init>:(Ljava/lang/String;ZZLe/e/a/a/d;ILe/e/a/b/f/k/ba;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L253574.  call `<init>`(v0) @signature `Le/e/a/b/f/k/fa;.<init>:()V` @kind direct;
  #L25357a.  v0.`e.e.a.b.f.k.da.a` @type ^`java.lang.String` := v1 @kind object;
  #L25357e.  v0.`e.e.a.b.f.k.da.b` @type ^`boolean` := v2 @kind boolean;
  #L253582.  v0.`e.e.a.b.f.k.da.c` @type ^`boolean` := v3 @kind boolean;
  #L253586.  v0.`e.e.a.b.f.k.da.d` @type ^`e.e.a.a.d` := v4 @kind object;
  #L25358a.  v0.`e.e.a.b.f.k.da.e` @type ^`int` := v5;
  #L25358e.  return @kind void;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.k.da` v1 @kind this) @signature `Le/e/a/b/f/k/da;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25355c.  v0:= v1.`e.e.a.b.f.k.da.a` @type ^`java.lang.String` @kind object;
  #L253560.  return v0 @kind object;
}
procedure `boolean` `b`(`e.e.a.b.f.k.da` v1 @kind this) @signature `Le/e/a/b/f/k/da;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2533c4.  v0:= v1.`e.e.a.b.f.k.da.b` @type ^`boolean` @kind boolean;
  #L2533c8.  return v0;
}
procedure `boolean` `c`(`e.e.a.b.f.k.da` v1 @kind this) @signature `Le/e/a/b/f/k/da;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2533dc.  v0:= v1.`e.e.a.b.f.k.da.c` @type ^`boolean` @kind boolean;
  #L2533e0.  return v0;
}
procedure `e.e.a.a.d` `d`(`e.e.a.b.f.k.da` v1 @kind this) @signature `Le/e/a/b/f/k/da;.d:()Le/e/a/a/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2533f4.  v0:= v1.`e.e.a.b.f.k.da.d` @type ^`e.e.a.a.d` @kind object;
  #L2533f8.  return v0 @kind object;
}
procedure `int` `e`(`e.e.a.b.f.k.da` v1 @kind this) @signature `Le/e/a/b/f/k/da;.e:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L253484.  v0:= v1.`e.e.a.b.f.k.da.e` @type ^`int`;
  #L253488.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.k.da` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/k/da;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L253338.  v0:= 1I;
  #L25333a.  if v5 != v4 then goto L253340;
  #L25333e.  return v0;
  #L253340.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.k.fa` @kind boolean;
  #L253344.  v2:= 0I;
  #L253346.  if v1 == 0 then goto L2533b0;
  #L25334a.  v5:= (`e.e.a.b.f.k.fa`) v5 @kind object;
  #L25334e.  v1:= v4.`e.e.a.b.f.k.da.a` @type ^`java.lang.String` @kind object;
  #L253352.  call temp:= `a`(v5) @signature `Le/e/a/b/f/k/fa;.a:()Ljava/lang/String;` @kind virtual;
  #L253358.  v3:= temp @kind object;
  #L25335a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L253360.  v1:= temp;
  #L253362.  if v1 == 0 then goto L2533b0;
  #L253366.  v1:= v4.`e.e.a.b.f.k.da.b` @type ^`boolean` @kind boolean;
  #L25336a.  call temp:= `b`(v5) @signature `Le/e/a/b/f/k/fa;.b:()Z` @kind virtual;
  #L253370.  v3:= temp;
  #L253372.  if v1 != v3 then goto L2533b0;
  #L253376.  v1:= v4.`e.e.a.b.f.k.da.c` @type ^`boolean` @kind boolean;
  #L25337a.  call temp:= `c`(v5) @signature `Le/e/a/b/f/k/fa;.c:()Z` @kind virtual;
  #L253380.  v3:= temp;
  #L253382.  if v1 != v3 then goto L2533b0;
  #L253386.  v1:= v4.`e.e.a.b.f.k.da.d` @type ^`e.e.a.a.d` @kind object;
  #L25338a.  call temp:= `d`(v5) @signature `Le/e/a/b/f/k/fa;.d:()Le/e/a/a/d;` @kind virtual;
  #L253390.  v3:= temp @kind object;
  #L253392.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L253398.  v1:= temp;
  #L25339a.  if v1 == 0 then goto L2533b0;
  #L25339e.  v1:= v4.`e.e.a.b.f.k.da.e` @type ^`int`;
  #L2533a2.  call temp:= `e`(v5) @signature `Le/e/a/b/f/k/fa;.e:()I` @kind virtual;
  #L2533a8.  v5:= temp;
  #L2533aa.  if v1 != v5 then goto L2533b0;
  #L2533ae.  return v0;
  #L2533b0.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.da` v6 @kind this) @signature `Le/e/a/b/f/k/da;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25340c.  v0:= v6.`e.e.a.b.f.k.da.a` @type ^`java.lang.String` @kind object;
  #L253410.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L253416.  v0:= temp;
  #L253418.  v1:= 1000003I;
  #L25341e.  v0:= v0 ^~ v1 @kind int;
  #L253420.  v0:= v0 * v1 @kind int;
  #L253424.  v2:= v6.`e.e.a.b.f.k.da.b` @type ^`boolean` @kind boolean;
  #L253428.  v3:= 1237I;
  #L25342c.  v4:= 1231I;
  #L253430.  v5:= 1I;
  #L253432.  if v5 == v2 then goto L25343c;
  #L253436.  v2:= 1237I;
  #L25343a.  goto L253440;
  #L25343c.  v2:= 1231I;
  #L253440.  v0:= v0 ^~ v2 @kind int;
  #L253442.  v0:= v0 * v1 @kind int;
  #L253446.  v2:= v6.`e.e.a.b.f.k.da.c` @type ^`boolean` @kind boolean;
  #L25344a.  if v5 == v2 then goto L253450;
  #L25344e.  goto L253454;
  #L253450.  v3:= 1231I;
  #L253454.  v0:= v0 ^~ v3 @kind int;
  #L253456.  v0:= v0 * v1 @kind int;
  #L25345a.  v2:= v6.`e.e.a.b.f.k.da.d` @type ^`e.e.a.a.d` @kind object;
  #L25345e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L253464.  v2:= temp;
  #L253466.  v0:= v0 ^~ v2 @kind int;
  #L253468.  v0:= v0 * v1 @kind int;
  #L25346c.  v1:= v6.`e.e.a.b.f.k.da.e` @type ^`int`;
  #L253470.  v0:= v0 ^~ v1 @kind int;
  #L253472.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.k.da` v8 @kind this) @signature `Le/e/a/b/f/k/da;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25349c.  v0:= v8.`e.e.a.b.f.k.da.a` @type ^`java.lang.String` @kind object;
  #L2534a0.  v1:= v8.`e.e.a.b.f.k.da.b` @type ^`boolean` @kind boolean;
  #L2534a4.  v2:= v8.`e.e.a.b.f.k.da.c` @type ^`boolean` @kind boolean;
  #L2534a8.  v3:= v8.`e.e.a.b.f.k.da.d` @type ^`e.e.a.a.d` @kind object;
  #L2534ac.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2534b2.  v3:= temp @kind object;
  #L2534b4.  v4:= v8.`e.e.a.b.f.k.da.e` @type ^`int`;
  #L2534b8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2534be.  v5:= temp @kind object;
  #L2534c0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2534c6.  v5:= temp;
  #L2534c8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2534ce.  v6:= temp @kind object;
  #L2534d0.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2534d6.  v6:= temp;
  #L2534d8.  v7:= new `java.lang.StringBuilder`;
  #L2534dc.  v5:= v5 + 129;
  #L2534e0.  v5:= v5 + v6 @kind int;
  #L2534e2.  call `<init>`(v7, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2534e8.  v5:= "MLKitLoggingOptions{libraryName=" @kind object;
  #L2534ec.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2534f2.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2534f8.  v0:= ", enableClearcut=" @kind object;
  #L2534fc.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253502.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L253508.  v0:= ", enableFirelog=" @kind object;
  #L25350c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253512.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L253518.  v0:= ", firelogEventPriority=" @kind object;
  #L25351c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253522.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253528.  v0:= ", firelogEventType=" @kind object;
  #L25352c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253532.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L253538.  v0:= "}" @kind object;
  #L25353c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253542.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L253548.  v0:= temp @kind object;
  #L25354a.  return v0 @kind object;
}
