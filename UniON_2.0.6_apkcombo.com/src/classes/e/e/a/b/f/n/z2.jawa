record `e.e.a.b.f.n.z2` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.LinkedHashMap` @kind class {
  `boolean` `e.e.a.b.f.n.z2.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.n.z2` `@@e.e.a.b.f.n.z2.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/z2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L280cf4.  v0:= new `e.e.a.b.f.n.z2`;
  #L280cf8.  call `<init>`(v0) @signature `Le/e/a/b/f/n/z2;.<init>:()V` @kind direct;
  #L280cfe.  `@@e.e.a.b.f.n.z2.c` @type ^`e.e.a.b.f.n.z2` := v0 @kind object;
  #L280d02.  v0:= `@@e.e.a.b.f.n.z2.c` @type ^`e.e.a.b.f.n.z2` @kind object;
  #L280d06.  v1:= 0I;
  #L280d08.  v0.`e.e.a.b.f.n.z2.b` @type ^`boolean` := v1 @kind boolean;
  #L280d0c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L280d20.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L280d26.  v0:= 1I;
  #L280d28.  v1.`e.e.a.b.f.n.z2.b` @type ^`boolean` := v0 @kind boolean;
  #L280d2c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.z2` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/n/z2;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L280d40.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L280d46.  v1:= 1I;
  #L280d48.  v0.`e.e.a.b.f.n.z2.b` @type ^`boolean` := v1 @kind boolean;
  #L280d4c.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/z2;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L280bfc.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L280c00.  if v0 == 0 then goto L280c12;
  #L280c04.  v1:= (`byte`[]) v1 @kind object;
  #L280c08.  call temp:= `c`(v1) @signature `Le/e/a/b/f/n/e2;.c:([B)I` @kind static;
  #L280c0e.  v1:= temp;
  #L280c10.  return v1;
  #L280c12.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.n.v1` @kind boolean;
  #L280c16.  if v0 != 0 then goto L280c24;
  #L280c1a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L280c20.  v1:= temp;
  #L280c22.  return v1;
  #L280c24.  v1:= new `java.lang.UnsupportedOperationException`;
  #L280c28.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L280c2e.  throw v1;
}
procedure `void` `e`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L280e1c.  v0:= v1.`e.e.a.b.f.n.z2.b` @type ^`boolean` @kind boolean;
  #L280e20.  if v0 == 0 then goto L280e26;
  #L280e24.  return @kind void;
  #L280e26.  v0:= new `java.lang.UnsupportedOperationException`;
  #L280e2a.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L280e30.  throw v0;
}
procedure `e.e.a.b.f.n.z2` `zza`() @signature `Le/e/a/b/f/n/z2;.zza:()Le/e/a/b/f/n/z2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L280b4c.  v0:= `@@e.e.a.b.f.n.z2.c` @type ^`e.e.a.b.f.n.z2` @kind object;
  #L280b50.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.z2` v1 @kind this, `e.e.a.b.f.n.z2` v2 @kind object) @signature `Le/e/a/b/f/n/z2;.a:(Le/e/a/b/f/n/z2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L280dd8.  call `e`(v1) @signature `Le/e/a/b/f/n/z2;.e:()V` @kind direct;
  #L280dde.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L280de4.  v0:= temp;
  #L280de6.  if v0 != 0 then goto L280df0;
  #L280dea.  call `putAll`(v1, v2) @signature `Le/e/a/b/f/n/z2;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L280df0.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L280b34.  v0:= v1.`e.e.a.b.f.n.z2.b` @type ^`boolean` @kind boolean;
  #L280b38.  return v0;
}
procedure `e.e.a.b.f.n.z2` `c`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.c:()Le/e/a/b/f/n/z2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L280b64.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L280b6a.  v0:= temp;
  #L280b6c.  if v0 == 0 then goto L280b7c;
  #L280b70.  v0:= new `e.e.a.b.f.n.z2`;
  #L280b74.  call `<init>`(v0) @signature `Le/e/a/b/f/n/z2;.<init>:()V` @kind direct;
  #L280b7a.  goto L280b86;
  #L280b7c.  v0:= new `e.e.a.b.f.n.z2`;
  #L280b80.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/z2;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L280b86.  return v0 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.n.z2` v0 @kind this) @signature `Le/e/a/b/f/n/z2;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L280d60.  call `e`(v0) @signature `Le/e/a/b/f/n/z2;.e:()V` @kind direct;
  #L280d66.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind super;
  #L280d6c.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.d:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L280e04.  v0:= 0I;
  #L280e06.  v1.`e.e.a.b.f.n.z2.b` @type ^`boolean` := v0 @kind boolean;
  #L280e0a.  return @kind void;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.n.z2` v1 @kind this) @signature `Le/e/a/b/f/n/z2;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L280c8c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L280c92.  v0:= temp;
  #L280c94.  if v0 == 0 then goto L280ca2;
  #L280c98.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L280c9e.  v0:= temp @kind object;
  #L280ca0.  goto L280caa;
  #L280ca2.  call temp:= `entrySet`(v1) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind super;
  #L280ca8.  v0:= temp @kind object;
  #L280caa.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.z2` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/n/z2;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L280a70.  v0:= instanceof @variable v5 @type ^`java.util.Map` @kind boolean;
  #L280a74.  if v0 == 0 then goto L280b20;
  #L280a78.  v5:= (`java.util.Map`) v5 @kind object;
  #L280a7c.  if v4 != v5 then goto L280a82;
  #L280a80.  goto L280b1c;
  #L280a82.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L280a88.  v0:= temp;
  #L280a8a.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L280a90.  v1:= temp;
  #L280a92.  if v0 == v1 then goto L280a98;
  #L280a96.  goto L280b20;
  #L280a98.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L280a9e.  v0:= temp @kind object;
  #L280aa0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L280aa6.  v0:= temp @kind object;
  #L280aa8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L280aae.  v1:= temp;
  #L280ab0.  if v1 == 0 then goto L280b1c;
  #L280ab4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L280aba.  v1:= temp @kind object;
  #L280abc.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L280ac0.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L280ac6.  v2:= temp @kind object;
  #L280ac8.  call temp:= `containsKey`(v5, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L280ace.  v2:= temp;
  #L280ad0.  if v2 == 0 then goto L280b20;
  #L280ad4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L280ada.  v2:= temp @kind object;
  #L280adc.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L280ae2.  v1:= temp @kind object;
  #L280ae4.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L280aea.  v1:= temp @kind object;
  #L280aec.  v3:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L280af0.  if v3 == 0 then goto L280b0e;
  #L280af4.  v3:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L280af8.  if v3 == 0 then goto L280b0e;
  #L280afc.  v2:= (`byte`[]) v2 @kind object;
  #L280b00.  v1:= (`byte`[]) v1 @kind object;
  #L280b04.  call temp:= `equals`(v2, v1) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L280b0a.  v1:= temp;
  #L280b0c.  goto L280b16;
  #L280b0e.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280b14.  v1:= temp;
  #L280b16.  if v1 != 0 then goto L280aa8;
  #L280b1a.  goto L280b20;
  #L280b1c.  v5:= 1I;
  #L280b1e.  return v5;
  #L280b20.  v5:= 0I;
  #L280b22.  return v5;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.z2` v4 @kind this) @signature `Le/e/a/b/f/n/z2;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L280b98.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L280b9e.  v0:= temp @kind object;
  #L280ba0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L280ba6.  v0:= temp @kind object;
  #L280ba8.  v1:= 0I;
  #L280baa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L280bb0.  v2:= temp;
  #L280bb2.  if v2 == 0 then goto L280be8;
  #L280bb6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L280bbc.  v2:= temp @kind object;
  #L280bbe.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L280bc2.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L280bc8.  v3:= temp @kind object;
  #L280bca.  call temp:= `a`(v3) @signature `Le/e/a/b/f/n/z2;.a:(Ljava/lang/Object;)I` @kind static;
  #L280bd0.  v3:= temp;
  #L280bd2.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L280bd8.  v2:= temp @kind object;
  #L280bda.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/z2;.a:(Ljava/lang/Object;)I` @kind static;
  #L280be0.  v2:= temp;
  #L280be2.  v2:= v2 ^~ v3 @kind int;
  #L280be4.  v1:= v1 + v2 @kind int;
  #L280be6.  goto L280baa;
  #L280be8.  return v1;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.n.z2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/z2;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L280c40.  call `e`(v0) @signature `Le/e/a/b/f/n/z2;.e:()V` @kind direct;
  #L280c46.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L280c4c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L280c52.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L280c58.  v1:= temp @kind object;
  #L280c5a.  return v1 @kind object;
}
procedure `void` `putAll`(`e.e.a.b.f.n.z2` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Le/e/a/b/f/n/z2;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L280d80.  call `e`(v2) @signature `Le/e/a/b/f/n/z2;.e:()V` @kind direct;
  #L280d86.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L280d8c.  v0:= temp @kind object;
  #L280d8e.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L280d94.  v0:= temp @kind object;
  #L280d96.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L280d9c.  v1:= temp;
  #L280d9e.  if v1 == 0 then goto L280dc0;
  #L280da2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L280da8.  v1:= temp @kind object;
  #L280daa.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L280db0.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L280db6.  v1:= temp @kind object;
  #L280db8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L280dbe.  goto L280d96;
  #L280dc0.  call `putAll`(v2, v3) @signature `Ljava/util/LinkedHashMap;.putAll:(Ljava/util/Map;)V` @kind super;
  #L280dc6.  return @kind void;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.n.z2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/z2;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L280c6c.  call `e`(v0) @signature `Le/e/a/b/f/n/z2;.e:()V` @kind direct;
  #L280c72.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L280c78.  v1:= temp @kind object;
  #L280c7a.  return v1 @kind object;
}
