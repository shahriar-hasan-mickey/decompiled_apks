record `e.e.a.b.f.u.b5` @kind class @AccessFlag PUBLIC extends `java.io.IOException` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.u.b5` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32e6c0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e6c6.  return @kind void;
}
procedure `e.e.a.b.f.u.b5` `a`() @signature `Le/e/a/b/f/u/b5;.a:()Le/e/a/b/f/u/b5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e5ec.  v0:= new `e.e.a.b.f.u.b5`;
  #L32e5f0.  v1:= "While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either that the input has been truncated or that an embedded message misreported its own length." @kind object;
  #L32e5f4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e5fa.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.b5` `b`() @signature `Le/e/a/b/f/u/b5;.b:()Le/e/a/b/f/u/b5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e620.  v0:= new `e.e.a.b.f.u.b5`;
  #L32e624.  v1:= "CodedInputStream encountered an embedded string or message which claimed to have negative size." @kind object;
  #L32e628.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e62e.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.b5` `c`() @signature `Le/e/a/b/f/u/b5;.c:()Le/e/a/b/f/u/b5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e640.  v0:= new `e.e.a.b.f.u.b5`;
  #L32e644.  v1:= "Protocol message contained an invalid tag (zero)." @kind object;
  #L32e648.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e64e.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.e5` `d`() @signature `Le/e/a/b/f/u/b5;.d:()Le/e/a/b/f/u/e5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e6a0.  v0:= new `e.e.a.b.f.u.e5`;
  #L32e6a4.  v1:= "Protocol message tag had invalid wire type." @kind object;
  #L32e6a8.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/e5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e6ae.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.b5` `e`() @signature `Le/e/a/b/f/u/b5;.e:()Le/e/a/b/f/u/b5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e660.  v0:= new `e.e.a.b.f.u.b5`;
  #L32e664.  v1:= "Failed to parse the message." @kind object;
  #L32e668.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e66e.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.b5` `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32e680.  v0:= new `e.e.a.b.f.u.b5`;
  #L32e684.  v1:= "Protocol message had invalid UTF-8." @kind object;
  #L32e688.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/b5;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e68e.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.b5` `a`(`e.e.a.b.f.u.b5` v0 @kind this, `e.e.a.b.f.u.b6` v1 @kind object) @signature `Le/e/a/b/f/u/b5;.a:(Le/e/a/b/f/u/b6;)Le/e/a/b/f/u/b5;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L32e60c.  return v0 @kind object;
}
