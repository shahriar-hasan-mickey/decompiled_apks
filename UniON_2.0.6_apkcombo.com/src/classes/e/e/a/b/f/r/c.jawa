record `e.e.a.b.f.r.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/r/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L30ab14.  v0:= 0I;
  #L30ab16.  v1:= 0I;
  #L30ab18.  v2:= length @variable v12;
  #L30ab1a.  if v1 >= v2 then goto L30ac76;
  #L30ab1e.  v2:= v12[v1] @kind object;
  #L30ab22.  if v2 != 0 then goto L30ab2e;
  #L30ab26.  v2:= "null" @kind object;
  #L30ab2a.  goto L30ac6a;
  #L30ab2e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ab34.  v2:= temp @kind object;
  #L30ab36.  goto L30ac6a;
  #L30ab3a.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L30ab3c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L30ab42.  v3:= temp @kind object;
  #L30ab44.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30ab4a.  v3:= temp @kind object;
  #L30ab4c.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L30ab52.  v2:= temp;
  #L30ab54.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L30ab5a.  v2:= temp @kind object;
  #L30ab5c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30ab62.  v4:= temp @kind object;
  #L30ab64.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30ab6a.  v4:= temp;
  #L30ab6c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30ab72.  v5:= temp @kind object;
  #L30ab74.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30ab7a.  v5:= temp;
  #L30ab7c.  v6:= new `java.lang.StringBuilder`;
  #L30ab80.  v4:= v4 + 1;
  #L30ab84.  v4:= v4 + v5 @kind int;
  #L30ab86.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30ab8c.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ab92.  v3:= 64I;
  #L30ab96.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ab9c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30aba2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30aba8.  v2:= temp @kind object;
  #L30abaa.  v3:= "com.google.common.base.Strings" @kind object;
  #L30abae.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L30abb4.  v3:= temp @kind object;
  #L30abb6.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L30abba.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30abc0.  v5:= temp @kind object;
  #L30abc2.  v6:= "Exception during lenientFormat for " @kind object;
  #L30abc6.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30abcc.  v7:= temp;
  #L30abce.  if v7 == 0 then goto L30abdc;
  #L30abd2.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L30abd8.  v5:= temp @kind object;
  #L30abda.  goto L30abe6;
  #L30abdc.  v5:= new `java.lang.String`;
  #L30abe0.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30abe6.  v7:= v5 @kind object;
  #L30abe8.  v5:= "com.google.common.base.Strings" @kind object;
  #L30abec.  v6:= "lenientToString" @kind object;
  #L30abf0.  v8:= v9 @kind object;
  #L30abf2.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L30abf8.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L30abfe.  v3:= temp @kind object;
  #L30ac00.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30ac06.  v3:= temp @kind object;
  #L30ac08.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30ac0e.  v4:= temp @kind object;
  #L30ac10.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30ac16.  v4:= temp;
  #L30ac18.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30ac1e.  v5:= temp @kind object;
  #L30ac20.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30ac26.  v5:= temp;
  #L30ac28.  v6:= new `java.lang.StringBuilder`;
  #L30ac2c.  v4:= v4 + 9;
  #L30ac30.  v4:= v4 + v5 @kind int;
  #L30ac32.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30ac38.  v4:= "<" @kind object;
  #L30ac3c.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ac42.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ac48.  v2:= " threw " @kind object;
  #L30ac4c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ac52.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ac58.  v2:= ">" @kind object;
  #L30ac5c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ac62.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ac68.  v2:= temp @kind object;
  #L30ac6a.  v12[v1]:= v2 @kind object;
  #L30ac6e.  v1:= v1 + 1;
  #L30ac72.  goto L30ab18;
  #L30ac76.  v1:= new `java.lang.StringBuilder`;
  #L30ac7a.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30ac80.  v3:= temp;
  #L30ac82.  v2:= v2 * 16;
  #L30ac86.  v3:= v3 + v2 @kind int;
  #L30ac88.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30ac8e.  v2:= 0I;
  #L30ac90.  v3:= length @variable v12;
  #L30ac92.  if v0 >= v3 then goto L30acca;
  #L30ac96.  v4:= "%s" @kind object;
  #L30ac9a.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L30aca0.  v4:= temp;
  #L30aca2.  v5:= -1I;
  #L30aca4.  if v4 != v5 then goto L30acaa;
  #L30aca8.  goto L30acca;
  #L30acaa.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L30acb0.  v2:= v0 + 1;
  #L30acb4.  v0:= v12[v0] @kind object;
  #L30acb8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30acbe.  v0:= v4 + 2;
  #L30acc2.  v10:= v2;
  #L30acc4.  v2:= v0;
  #L30acc6.  v0:= v10;
  #L30acc8.  goto L30ac90;
  #L30acca.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30acd0.  v4:= temp;
  #L30acd2.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L30acd8.  if v0 >= v3 then goto L30ad20;
  #L30acdc.  v11:= " [" @kind object;
  #L30ace0.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ace6.  v11:= v0 + 1;
  #L30acea.  v0:= v12[v0] @kind object;
  #L30acee.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30acf4.  v0:= length @variable v12;
  #L30acf6.  if v11 >= v0 then goto L30ad16;
  #L30acfa.  v0:= ", " @kind object;
  #L30acfe.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ad04.  v0:= v11 + 1;
  #L30ad08.  v11:= v12[v11] @kind object;
  #L30ad0c.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ad12.  v11:= v0;
  #L30ad14.  goto L30acf4;
  #L30ad16.  v11:= 93I;
  #L30ad1a.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ad20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ad26.  v11:= temp @kind object;
  #L30ad28.  return v11 @kind object;
  catch `java.lang.Exception` @[L30ab2e..L30ab36] goto L30ab3a;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/r/c;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L30aaf8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/ob;.a:(Ljava/lang/String;)Z` @kind static;
  #L30aafe.  v0:= temp;
  #L30ab00.  return v0;
}
