record `e.e.a.b.f.n.d8` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.d8.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.d8` `@@e.e.a.b.f.n.d8.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.d8` `@@e.e.a.b.f.n.d8.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.d8` `@@e.e.a.b.f.n.d8.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.d8`[] `@@e.e.a.b.f.n.d8.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/d8;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L291cec.  v0:= new `e.e.a.b.f.n.d8`;
  #L291cf0.  v1:= 0I;
  #L291cf2.  v2:= "UNKNOWN_EVENT_TYPE" @kind object;
  #L291cf6.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/d8;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L291cfc.  `@@e.e.a.b.f.n.d8.c` @type ^`e.e.a.b.f.n.d8` := v0 @kind object;
  #L291d00.  v0:= new `e.e.a.b.f.n.d8`;
  #L291d04.  v2:= 1I;
  #L291d06.  v3:= "VALIDATION_TEST" @kind object;
  #L291d0a.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/d8;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L291d10.  `@@e.e.a.b.f.n.d8.d` @type ^`e.e.a.b.f.n.d8` := v0 @kind object;
  #L291d14.  v0:= new `e.e.a.b.f.n.d8`;
  #L291d18.  v3:= 2I;
  #L291d1a.  v4:= "CONTINUOUS_FEEDBACK" @kind object;
  #L291d1e.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/d8;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L291d24.  `@@e.e.a.b.f.n.d8.e` @type ^`e.e.a.b.f.n.d8` := v0 @kind object;
  #L291d28.  v0:= 3I;
  #L291d2a.  v0:= new `e.e.a.b.f.n.d8`[v0];
  #L291d2e.  v4:= `@@e.e.a.b.f.n.d8.c` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291d32.  v0[v1]:= v4 @kind object;
  #L291d36.  v1:= `@@e.e.a.b.f.n.d8.d` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291d3a.  v0[v2]:= v1 @kind object;
  #L291d3e.  v1:= `@@e.e.a.b.f.n.d8.e` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291d42.  v0[v3]:= v1 @kind object;
  #L291d46.  `@@e.e.a.b.f.n.d8.f` @type ^`e.e.a.b.f.n.d8`[] := v0 @kind object;
  #L291d4a.  v0:= new `e.e.a.b.f.n.b8`;
  #L291d4e.  call `<init>`(v0) @signature `Le/e/a/b/f/n/b8;.<init>:()V` @kind direct;
  #L291d54.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.d8` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/d8;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L291d68.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L291d6e.  v0.`e.e.a.b.f.n.d8.b` @type ^`int` := v3;
  #L291d72.  return @kind void;
}
procedure `e.e.a.b.f.n.d8` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/d8;.a:(I)Le/e/a/b/f/n/d8;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L291be8.  if v1 == 0 then goto L291c08;
  #L291bec.  v0:= 1I;
  #L291bee.  if v1 == v0 then goto L291c02;
  #L291bf2.  v0:= 2I;
  #L291bf4.  if v1 == v0 then goto L291bfc;
  #L291bf8.  v1:= 0I;
  #L291bfa.  return v1 @kind object;
  #L291bfc.  v1:= `@@e.e.a.b.f.n.d8.e` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291c00.  return v1 @kind object;
  #L291c02.  v1:= `@@e.e.a.b.f.n.d8.d` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291c06.  return v1 @kind object;
  #L291c08.  v1:= `@@e.e.a.b.f.n.d8.c` @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291c0c.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/d8;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L291bd0.  v0:= `@@e.e.a.b.f.n.c8.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L291bd4.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.d8`[] `values`() @signature `Le/e/a/b/f/n/d8;.values:()[Le/e/a/b/f/n/d8;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L291c20.  v0:= `@@e.e.a.b.f.n.d8.f` @type ^`e.e.a.b.f.n.d8`[] @kind object;
  #L291c24.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/d8;.clone:()Ljava/lang/Object;` @kind virtual;
  #L291c2a.  v0:= temp @kind object;
  #L291c2c.  v0:= (`e.e.a.b.f.n.d8`[]) v0 @kind object;
  #L291c30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.d8` v2 @kind this) @signature `Le/e/a/b/f/n/d8;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L291c5c.  v0:= new `java.lang.StringBuilder`;
  #L291c60.  v1:= "<" @kind object;
  #L291c64.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L291c6a.  v1:= constclass @type ^`e.e.a.b.f.n.d8` @kind object;
  #L291c6e.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L291c74.  v1:= temp @kind object;
  #L291c76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291c7c.  v1:= 64I;
  #L291c80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L291c86.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L291c8c.  v1:= temp;
  #L291c8e.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L291c94.  v1:= temp @kind object;
  #L291c96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291c9c.  v1:= " number=" @kind object;
  #L291ca0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291ca6.  v1:= v2.`e.e.a.b.f.n.d8.b` @type ^`int`;
  #L291caa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L291cb0.  v1:= " name=" @kind object;
  #L291cb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291cba.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L291cc0.  v1:= temp @kind object;
  #L291cc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291cc8.  v1:= 62I;
  #L291ccc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L291cd2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L291cd8.  v0:= temp @kind object;
  #L291cda.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.d8` v1 @kind this) @signature `Le/e/a/b/f/n/d8;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L291c44.  v0:= v1.`e.e.a.b.f.n.d8.b` @type ^`int`;
  #L291c48.  return v0;
}
