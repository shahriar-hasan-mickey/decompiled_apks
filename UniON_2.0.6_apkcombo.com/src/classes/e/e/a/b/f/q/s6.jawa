record `e.e.a.b.f.q.s6` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.q.s6.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.q.s6.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.s6` v4 @kind this) @signature `Le/e/a/b/f/q/s6;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e524c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e5252.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L2e5256.  v1:= 16I;
  #L2e525a.  v2:= 0.75F;
  #L2e525e.  v3:= 10I;
  #L2e5262.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L2e5268.  v4.`e.e.a.b.f.q.s6.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L2e526c.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L2e5270.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L2e5276.  v4.`e.e.a.b.f.q.s6.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L2e527a.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.q.s6` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/q/s6;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e51cc.  v5:= v3.`e.e.a.b.f.q.s6.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2e51d0.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L2e51d6.  v5:= temp @kind object;
  #L2e51d8.  if v5 == 0 then goto L2e51e8;
  #L2e51dc.  v0:= v3.`e.e.a.b.f.q.s6.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2e51e0.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e51e6.  goto L2e51cc;
  #L2e51e8.  v5:= new `e.e.a.b.f.q.r6`;
  #L2e51ec.  v0:= 0I;
  #L2e51ee.  call `<init>`(v5, v4, v0) @signature `Le/e/a/b/f/q/r6;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2e51f4.  v0:= v3.`e.e.a.b.f.q.s6.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2e51f8.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e51fe.  v5:= temp @kind object;
  #L2e5200.  v5:= (`java.util.List`) v5 @kind object;
  #L2e5204.  if v5 == 0 then goto L2e520a;
  #L2e5208.  return v5 @kind object;
  #L2e520a.  v5:= new `java.util.Vector`;
  #L2e520e.  v0:= 2I;
  #L2e5210.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L2e5216.  v0:= v3.`e.e.a.b.f.q.s6.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2e521a.  v1:= new `e.e.a.b.f.q.r6`;
  #L2e521e.  v2:= v3.`e.e.a.b.f.q.s6.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2e5222.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/q/r6;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2e5228.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e522e.  v4:= temp @kind object;
  #L2e5230.  v4:= (`java.util.List`) v4 @kind object;
  #L2e5234.  if v4 != 0 then goto L2e523a;
  #L2e5238.  return v5 @kind object;
  #L2e523a.  return v4 @kind object;
}
