record `e.e.a.b.f.u.o6` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.u.u6` `e.e.a.b.f.u.o6.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `e.e.a.b.f.u.o6.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.u.o6` `@@e.e.a.b.f.u.o6.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/o6;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3383dc.  v0:= new `e.e.a.b.f.u.o6`;
  #L3383e0.  call `<init>`(v0) @signature `Le/e/a/b/f/u/o6;.<init>:()V` @kind direct;
  #L3383e6.  `@@e.e.a.b.f.u.o6.c` @type ^`e.e.a.b.f.u.o6` := v0 @kind object;
  #L3383ea.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.o6` v1 @kind this) @signature `Le/e/a/b/f/u/o6;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3383fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L338402.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L338406.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L33840c.  v1.`e.e.a.b.f.u.o6.b` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L338410.  v0:= new `e.e.a.b.f.u.s5`;
  #L338414.  call `<init>`(v0) @signature `Le/e/a/b/f/u/s5;.<init>:()V` @kind direct;
  #L33841a.  v1.`e.e.a.b.f.u.o6.a` @type ^`e.e.a.b.f.u.u6` := v0 @kind object;
  #L33841e.  return @kind void;
}
procedure `e.e.a.b.f.u.o6` `a`() @signature `Le/e/a/b/f/u/o6;.a:()Le/e/a/b/f/u/o6;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33833c.  v0:= `@@e.e.a.b.f.u.o6.c` @type ^`e.e.a.b.f.u.o6` @kind object;
  #L338340.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.s6` `a`(`e.e.a.b.f.u.o6` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Le/e/a/b/f/u/o6;.a:(Ljava/lang/Class;)Le/e/a/b/f/u/s6;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L338354.  v0:= "messageType" @kind object;
  #L338358.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L33835e.  v1:= v2.`e.e.a.b.f.u.o6.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L338362.  call temp:= `get`(v1, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L338368.  v1:= temp @kind object;
  #L33836a.  v1:= (`e.e.a.b.f.u.s6`) v1 @kind object;
  #L33836e.  if v1 != 0 then goto L3383a4;
  #L338372.  v1:= v2.`e.e.a.b.f.u.o6.a` @type ^`e.e.a.b.f.u.u6` @kind object;
  #L338376.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/u/u6;.a:(Ljava/lang/Class;)Le/e/a/b/f/u/s6;` @kind interface;
  #L33837c.  v1:= temp @kind object;
  #L33837e.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L338384.  v0:= "schema" @kind object;
  #L338388.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L33838e.  v0:= v2.`e.e.a.b.f.u.o6.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L338392.  call temp:= `putIfAbsent`(v0, v3, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L338398.  v3:= temp @kind object;
  #L33839a.  v3:= (`e.e.a.b.f.u.s6`) v3 @kind object;
  #L33839e.  if v3 == 0 then goto L3383a4;
  #L3383a2.  v1:= v3 @kind object;
  #L3383a4.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.s6` `a`(`e.e.a.b.f.u.o6` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/u/o6;.a:(Ljava/lang/Object;)Le/e/a/b/f/u/s6;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3383b8.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3383be.  v1:= temp @kind object;
  #L3383c0.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/u/o6;.a:(Ljava/lang/Class;)Le/e/a/b/f/u/s6;` @kind virtual;
  #L3383c6.  v1:= temp @kind object;
  #L3383c8.  return v1 @kind object;
}
