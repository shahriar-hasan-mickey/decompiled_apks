record `e.e.a.b.f.k.i0` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.k.p1` @kind interface {
  `java.util.Set` `e.e.a.b.f.k.i0.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Map` `e.e.a.b.f.k.i0.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.k.i0` v0 @kind this) @signature `Le/e/a/b/f/k/i0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L244b8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L244b92.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Le/e/a/b/f/k/i0;.a:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Map` `b`() @signature `Le/e/a/b/f/k/i0;.b:()Ljava/util/Map;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `c`(`e.e.a.b.f.k.i0` v1 @kind this) @signature `Le/e/a/b/f/k/i0;.c:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244b64.  v0:= v1.`e.e.a.b.f.k.i0.b` @type ^`java.util.Set` @kind object;
  #L244b68.  if v0 != 0 then goto L244b78;
  #L244b6c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/k/i0;.a:()Ljava/util/Set;` @kind virtual;
  #L244b72.  v0:= temp @kind object;
  #L244b74.  v1.`e.e.a.b.f.k.i0.b` @type ^`java.util.Set` := v0 @kind object;
  #L244b78.  return v0 @kind object;
}
procedure `java.util.Map` `d`(`e.e.a.b.f.k.i0` v1 @kind this) @signature `Le/e/a/b/f/k/i0;.d:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244b3c.  v0:= v1.`e.e.a.b.f.k.i0.c` @type ^`java.util.Map` @kind object;
  #L244b40.  if v0 != 0 then goto L244b50;
  #L244b44.  call temp:= `b`(v1) @signature `Le/e/a/b/f/k/i0;.b:()Ljava/util/Map;` @kind virtual;
  #L244b4a.  v0:= temp @kind object;
  #L244b4c.  v1.`e.e.a.b.f.k.i0.c` @type ^`java.util.Map` := v0 @kind object;
  #L244b50.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.k.i0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/i0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244aa8.  if v2 != v1 then goto L244ab0;
  #L244aac.  v2:= 1I;
  #L244aae.  goto L244aba;
  #L244ab0.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.k.p1` @kind boolean;
  #L244ab4.  if v0 != 0 then goto L244abc;
  #L244ab8.  v2:= 0I;
  #L244aba.  return v2;
  #L244abc.  v2:= (`e.e.a.b.f.k.p1`) v2 @kind object;
  #L244ac0.  call temp:= `d`(v1) @signature `Le/e/a/b/f/k/p1;.d:()Ljava/util/Map;` @kind interface;
  #L244ac6.  v0:= temp @kind object;
  #L244ac8.  call temp:= `d`(v2) @signature `Le/e/a/b/f/k/p1;.d:()Ljava/util/Map;` @kind interface;
  #L244ace.  v2:= temp @kind object;
  #L244ad0.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L244ad6.  v2:= temp;
  #L244ad8.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.i0` v1 @kind this) @signature `Le/e/a/b/f/k/i0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244aec.  call temp:= `d`(v1) @signature `Le/e/a/b/f/k/i0;.d:()Ljava/util/Map;` @kind virtual;
  #L244af2.  v0:= temp @kind object;
  #L244af4.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L244afa.  v0:= temp;
  #L244afc.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.k.i0` v1 @kind this) @signature `Le/e/a/b/f/k/i0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L244b10.  call temp:= `d`(v1) @signature `Le/e/a/b/f/k/i0;.d:()Ljava/util/Map;` @kind virtual;
  #L244b16.  v0:= temp @kind object;
  #L244b18.  v0:= (`e.e.a.b.f.k.x`) v0 @kind object;
  #L244b1c.  v0:= v0.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L244b20.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L244b26.  v0:= temp @kind object;
  #L244b28.  return v0 @kind object;
}
