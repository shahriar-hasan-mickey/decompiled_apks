record `e.e.a.b.f.q.v0` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.LinkedHashMap` @kind class {
  `boolean` `e.e.a.b.f.q.v0.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.q.v0` `@@e.e.a.b.f.q.v0.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/v0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d5c38.  v0:= new `e.e.a.b.f.q.v0`;
  #L2d5c3c.  call `<init>`(v0) @signature `Le/e/a/b/f/q/v0;.<init>:()V` @kind direct;
  #L2d5c42.  `@@e.e.a.b.f.q.v0.c` @type ^`e.e.a.b.f.q.v0` := v0 @kind object;
  #L2d5c46.  v0:= `@@e.e.a.b.f.q.v0.c` @type ^`e.e.a.b.f.q.v0` @kind object;
  #L2d5c4a.  v1:= 0I;
  #L2d5c4c.  v0.`e.e.a.b.f.q.v0.b` @type ^`boolean` := v1 @kind boolean;
  #L2d5c50.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2d5c64.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2d5c6a.  v0:= 1I;
  #L2d5c6c.  v1.`e.e.a.b.f.q.v0.b` @type ^`boolean` := v0 @kind boolean;
  #L2d5c70.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.v0` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/q/v0;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d5c84.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2d5c8a.  v1:= 1I;
  #L2d5c8c.  v0.`e.e.a.b.f.q.v0.b` @type ^`boolean` := v1 @kind boolean;
  #L2d5c90.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/v0;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d5b78.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2d5b7c.  if v0 == 0 then goto L2d5b8e;
  #L2d5b80.  v1:= (`byte`[]) v1 @kind object;
  #L2d5b84.  call temp:= `c`(v1) @signature `Le/e/a/b/f/q/b0;.c:([B)I` @kind static;
  #L2d5b8a.  v1:= temp;
  #L2d5b8c.  return v1;
  #L2d5b8e.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.q.v` @kind boolean;
  #L2d5b92.  if v0 != 0 then goto L2d5ba0;
  #L2d5b96.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2d5b9c.  v1:= temp;
  #L2d5b9e.  return v1;
  #L2d5ba0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2d5ba4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2d5baa.  throw v1;
}
procedure `void` `b`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2d5d60.  v0:= v1.`e.e.a.b.f.q.v0.b` @type ^`boolean` @kind boolean;
  #L2d5d64.  if v0 == 0 then goto L2d5d6a;
  #L2d5d68.  return @kind void;
  #L2d5d6a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2d5d6e.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2d5d74.  throw v0;
}
procedure `void` `a`(`e.e.a.b.f.q.v0` v1 @kind this, `e.e.a.b.f.q.v0` v2 @kind object) @signature `Le/e/a/b/f/q/v0;.a:(Le/e/a/b/f/q/v0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d5d1c.  call `b`(v1) @signature `Le/e/a/b/f/q/v0;.b:()V` @kind direct;
  #L2d5d22.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2d5d28.  v0:= temp;
  #L2d5d2a.  if v0 != 0 then goto L2d5d34;
  #L2d5d2e.  call `putAll`(v1, v2) @signature `Le/e/a/b/f/q/v0;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L2d5d34.  return @kind void;
}
procedure `e.e.a.b.f.q.v0` `c`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.c:()Le/e/a/b/f/q/v0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d5ae0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2d5ae6.  v0:= temp;
  #L2d5ae8.  if v0 == 0 then goto L2d5af8;
  #L2d5aec.  v0:= new `e.e.a.b.f.q.v0`;
  #L2d5af0.  call `<init>`(v0) @signature `Le/e/a/b/f/q/v0;.<init>:()V` @kind direct;
  #L2d5af6.  goto L2d5b02;
  #L2d5af8.  v0:= new `e.e.a.b.f.q.v0`;
  #L2d5afc.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/v0;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2d5b02.  return v0 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.q.v0` v0 @kind this) @signature `Le/e/a/b/f/q/v0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d5ca4.  call `b`(v0) @signature `Le/e/a/b/f/q/v0;.b:()V` @kind direct;
  #L2d5caa.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind super;
  #L2d5cb0.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.d:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d5d48.  v0:= 0I;
  #L2d5d4a.  v1.`e.e.a.b.f.q.v0.b` @type ^`boolean` := v0 @kind boolean;
  #L2d5d4e.  return @kind void;
}
procedure `boolean` `e`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d5ac8.  v0:= v1.`e.e.a.b.f.q.v0.b` @type ^`boolean` @kind boolean;
  #L2d5acc.  return v0;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.q.v0` v1 @kind this) @signature `Le/e/a/b/f/q/v0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d5c08.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2d5c0e.  v0:= temp;
  #L2d5c10.  if v0 == 0 then goto L2d5c1e;
  #L2d5c14.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L2d5c1a.  v0:= temp @kind object;
  #L2d5c1c.  goto L2d5c26;
  #L2d5c1e.  call temp:= `entrySet`(v1) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind super;
  #L2d5c24.  v0:= temp @kind object;
  #L2d5c26.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.v0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/v0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d5a04.  v0:= instanceof @variable v5 @type ^`java.util.Map` @kind boolean;
  #L2d5a08.  if v0 == 0 then goto L2d5ab4;
  #L2d5a0c.  v5:= (`java.util.Map`) v5 @kind object;
  #L2d5a10.  if v4 != v5 then goto L2d5a16;
  #L2d5a14.  goto L2d5ab0;
  #L2d5a16.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2d5a1c.  v0:= temp;
  #L2d5a1e.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2d5a24.  v1:= temp;
  #L2d5a26.  if v0 == v1 then goto L2d5a2c;
  #L2d5a2a.  goto L2d5ab4;
  #L2d5a2c.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2d5a32.  v0:= temp @kind object;
  #L2d5a34.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d5a3a.  v0:= temp @kind object;
  #L2d5a3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d5a42.  v1:= temp;
  #L2d5a44.  if v1 == 0 then goto L2d5ab0;
  #L2d5a48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d5a4e.  v1:= temp @kind object;
  #L2d5a50.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L2d5a54.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d5a5a.  v2:= temp @kind object;
  #L2d5a5c.  call temp:= `containsKey`(v5, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2d5a62.  v2:= temp;
  #L2d5a64.  if v2 == 0 then goto L2d5ab4;
  #L2d5a68.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d5a6e.  v2:= temp @kind object;
  #L2d5a70.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d5a76.  v1:= temp @kind object;
  #L2d5a78.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2d5a7e.  v1:= temp @kind object;
  #L2d5a80.  v3:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L2d5a84.  if v3 == 0 then goto L2d5aa2;
  #L2d5a88.  v3:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2d5a8c.  if v3 == 0 then goto L2d5aa2;
  #L2d5a90.  v2:= (`byte`[]) v2 @kind object;
  #L2d5a94.  v1:= (`byte`[]) v1 @kind object;
  #L2d5a98.  call temp:= `equals`(v2, v1) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L2d5a9e.  v1:= temp;
  #L2d5aa0.  goto L2d5aaa;
  #L2d5aa2.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5aa8.  v1:= temp;
  #L2d5aaa.  if v1 != 0 then goto L2d5a3c;
  #L2d5aae.  goto L2d5ab4;
  #L2d5ab0.  v5:= 1I;
  #L2d5ab2.  return v5;
  #L2d5ab4.  v5:= 0I;
  #L2d5ab6.  return v5;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.v0` v4 @kind this) @signature `Le/e/a/b/f/q/v0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d5b14.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2d5b1a.  v0:= temp @kind object;
  #L2d5b1c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d5b22.  v0:= temp @kind object;
  #L2d5b24.  v1:= 0I;
  #L2d5b26.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d5b2c.  v2:= temp;
  #L2d5b2e.  if v2 == 0 then goto L2d5b64;
  #L2d5b32.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d5b38.  v2:= temp @kind object;
  #L2d5b3a.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2d5b3e.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d5b44.  v3:= temp @kind object;
  #L2d5b46.  call temp:= `a`(v3) @signature `Le/e/a/b/f/q/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L2d5b4c.  v3:= temp;
  #L2d5b4e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d5b54.  v2:= temp @kind object;
  #L2d5b56.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L2d5b5c.  v2:= temp;
  #L2d5b5e.  v2:= v2 ^~ v3 @kind int;
  #L2d5b60.  v1:= v1 + v2 @kind int;
  #L2d5b62.  goto L2d5b26;
  #L2d5b64.  return v1;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.q.v0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/v0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d5bbc.  call `b`(v0) @signature `Le/e/a/b/f/q/v0;.b:()V` @kind direct;
  #L2d5bc2.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d5bc8.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d5bce.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2d5bd4.  v1:= temp @kind object;
  #L2d5bd6.  return v1 @kind object;
}
procedure `void` `putAll`(`e.e.a.b.f.q.v0` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Le/e/a/b/f/q/v0;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d5cc4.  call `b`(v2) @signature `Le/e/a/b/f/q/v0;.b:()V` @kind direct;
  #L2d5cca.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2d5cd0.  v0:= temp @kind object;
  #L2d5cd2.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d5cd8.  v0:= temp @kind object;
  #L2d5cda.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d5ce0.  v1:= temp;
  #L2d5ce2.  if v1 == 0 then goto L2d5d04;
  #L2d5ce6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d5cec.  v1:= temp @kind object;
  #L2d5cee.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d5cf4.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2d5cfa.  v1:= temp @kind object;
  #L2d5cfc.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d5d02.  goto L2d5cda;
  #L2d5d04.  call `putAll`(v2, v3) @signature `Ljava/util/LinkedHashMap;.putAll:(Ljava/util/Map;)V` @kind super;
  #L2d5d0a.  return @kind void;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.q.v0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/v0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d5be8.  call `b`(v0) @signature `Le/e/a/b/f/q/v0;.b:()V` @kind direct;
  #L2d5bee.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2d5bf4.  v1:= temp @kind object;
  #L2d5bf6.  return v1 @kind object;
}
