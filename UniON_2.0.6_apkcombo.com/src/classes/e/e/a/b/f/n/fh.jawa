record `e.e.a.b.f.n.fh` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int`[] `@@e.e.a.b.f.n.fh.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/fh;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L29cc80.  call temp:= `a`() @signature `Le/e/a/b/f/n/s1;.a:()[I` @kind static;
  #L29cc86.  v0:= 7I;
  #L29cc88.  v1:= new `int`[v0];
  #L29cc8c.  `@@e.e.a.b.f.n.fh.a` @type ^`int`[] := v1 @kind object;
  #L29cc90.  v1:= 1I;
  #L29cc92.  v2:= 3I;
  #L29cc94.  v3:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29cc98.  v3[v2]:= v1;
  #L29cc9c.  v3:= 2I;
  #L29cc9e.  v4:= 4I;
  #L29cca0.  v5:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29cca4.  v5[v4]:= v3;
  #L29cca8.  v5:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29ccac.  v5[v3]:= v2;
  #L29ccb0.  v2:= 5I;
  #L29ccb2.  v3:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29ccb6.  v3[v2]:= v4;
  #L29ccba.  v3:= 6I;
  #L29ccbc.  v4:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29ccc0.  v4[v3]:= v2;
  #L29ccc4.  v2:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29ccc8.  v4:= 0I;
  #L29ccca.  v2[v4]:= v3;
  #L29ccce.  v2:= `@@e.e.a.b.f.n.fh.a` @type ^`int`[] @kind object;
  #L29ccd2.  v2[v1]:= v0;
  #L29ccd6.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L29cc94..L29cc9c] goto L29cc9c;
  catch `java.lang.NoSuchFieldError` @[L29cca0..L29cca8] goto L29cca8;
  catch `java.lang.NoSuchFieldError` @[L29cca8..L29ccb0] goto L29ccb0;
  catch `java.lang.NoSuchFieldError` @[L29ccb2..L29ccba] goto L29ccba;
  catch `java.lang.NoSuchFieldError` @[L29ccbc..L29ccc4] goto L29ccc4;
  catch `java.lang.NoSuchFieldError` @[L29ccc4..L29ccce] goto L29ccce;
  catch `java.lang.NoSuchFieldError` @[L29ccce..L29ccd6] goto L29ccd6;
}
