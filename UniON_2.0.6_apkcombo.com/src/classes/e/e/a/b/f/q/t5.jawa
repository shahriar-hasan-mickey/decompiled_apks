record `e.e.a.b.f.q.t5` @kind class @AccessFlag  extends `e.e.a.b.f.q.h6` @kind class {
  `java.util.Map` `e.e.a.b.f.q.t5.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.t5` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/q/t5;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e3dd0.  call `<init>`(v0) @signature `Le/e/a/b/f/q/h6;.<init>:()V` @kind direct;
  #L2e3dd6.  if v1 == 0 then goto L2e3de0;
  #L2e3dda.  v0.`e.e.a.b.f.q.t5.b` @type ^`java.util.Map` := v1 @kind object;
  #L2e3dde.  return @kind void;
  #L2e3de0.  v1:= 0I;
  #L2e3de2.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.t5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/t5;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3d70.  v0:= v1.`e.e.a.b.f.q.t5.b` @type ^`java.util.Map` @kind object;
  #L2e3d74.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2e3d7a.  v2:= temp;
  #L2e3d7c.  return v2;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.q.t5` v1 @kind this) @signature `Le/e/a/b/f/q/t5;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3d90.  v0:= v1.`e.e.a.b.f.q.t5.b` @type ^`java.util.Map` @kind object;
  #L2e3d94.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2e3d9a.  v0:= temp;
  #L2e3d9c.  return v0;
}
procedure `int` `size`(`e.e.a.b.f.q.t5` v1 @kind this) @signature `Le/e/a/b/f/q/t5;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3db0.  v0:= v1.`e.e.a.b.f.q.t5.b` @type ^`java.util.Map` @kind object;
  #L2e3db4.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2e3dba.  v0:= temp;
  #L2e3dbc.  return v0;
}
