record `e.e.a.b.f.n.z40` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.z40.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.z40` `@@e.e.a.b.f.n.z40.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.z40` `@@e.e.a.b.f.n.z40.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.z40` `@@e.e.a.b.f.n.z40.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.z40` `@@e.e.a.b.f.n.z40.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.z40`[] `@@e.e.a.b.f.n.z40.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/z40;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ba0b0.  v0:= new `e.e.a.b.f.n.z40`;
  #L2ba0b4.  v1:= 0I;
  #L2ba0b6.  v2:= "MODE_UNKNOWN" @kind object;
  #L2ba0ba.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/z40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba0c0.  `@@e.e.a.b.f.n.z40.c` @type ^`e.e.a.b.f.n.z40` := v0 @kind object;
  #L2ba0c4.  v0:= new `e.e.a.b.f.n.z40`;
  #L2ba0c8.  v2:= 1I;
  #L2ba0ca.  v3:= "MODE_ACCURATE" @kind object;
  #L2ba0ce.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/z40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba0d4.  `@@e.e.a.b.f.n.z40.d` @type ^`e.e.a.b.f.n.z40` := v0 @kind object;
  #L2ba0d8.  v0:= new `e.e.a.b.f.n.z40`;
  #L2ba0dc.  v3:= 2I;
  #L2ba0de.  v4:= "MODE_FAST" @kind object;
  #L2ba0e2.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/z40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba0e8.  `@@e.e.a.b.f.n.z40.e` @type ^`e.e.a.b.f.n.z40` := v0 @kind object;
  #L2ba0ec.  v0:= new `e.e.a.b.f.n.z40`;
  #L2ba0f0.  v4:= 3I;
  #L2ba0f2.  v5:= "MODE_SELFIE" @kind object;
  #L2ba0f6.  call `<init>`(v0, v5, v4, v4) @signature `Le/e/a/b/f/n/z40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba0fc.  `@@e.e.a.b.f.n.z40.f` @type ^`e.e.a.b.f.n.z40` := v0 @kind object;
  #L2ba100.  v0:= 4I;
  #L2ba102.  v0:= new `e.e.a.b.f.n.z40`[v0];
  #L2ba106.  v5:= `@@e.e.a.b.f.n.z40.c` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2ba10a.  v0[v1]:= v5 @kind object;
  #L2ba10e.  v1:= `@@e.e.a.b.f.n.z40.d` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2ba112.  v0[v2]:= v1 @kind object;
  #L2ba116.  v1:= `@@e.e.a.b.f.n.z40.e` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2ba11a.  v0[v3]:= v1 @kind object;
  #L2ba11e.  v1:= `@@e.e.a.b.f.n.z40.f` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2ba122.  v0[v4]:= v1 @kind object;
  #L2ba126.  `@@e.e.a.b.f.n.z40.g` @type ^`e.e.a.b.f.n.z40`[] := v0 @kind object;
  #L2ba12a.  v0:= new `e.e.a.b.f.n.x40`;
  #L2ba12e.  call `<init>`(v0) @signature `Le/e/a/b/f/n/x40;.<init>:()V` @kind direct;
  #L2ba134.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.z40` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/z40;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ba148.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ba14e.  v0.`e.e.a.b.f.n.z40.b` @type ^`int` := v3;
  #L2ba152.  return @kind void;
}
procedure `e.e.a.b.f.n.z40` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/z40;.a:(I)Le/e/a/b/f/n/z40;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9fa0.  if v1 == 0 then goto L2b9fcc;
  #L2b9fa4.  v0:= 1I;
  #L2b9fa6.  if v1 == v0 then goto L2b9fc6;
  #L2b9faa.  v0:= 2I;
  #L2b9fac.  if v1 == v0 then goto L2b9fc0;
  #L2b9fb0.  v0:= 3I;
  #L2b9fb2.  if v1 == v0 then goto L2b9fba;
  #L2b9fb6.  v1:= 0I;
  #L2b9fb8.  return v1 @kind object;
  #L2b9fba.  v1:= `@@e.e.a.b.f.n.z40.f` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2b9fbe.  return v1 @kind object;
  #L2b9fc0.  v1:= `@@e.e.a.b.f.n.z40.e` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2b9fc4.  return v1 @kind object;
  #L2b9fc6.  v1:= `@@e.e.a.b.f.n.z40.d` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2b9fca.  return v1 @kind object;
  #L2b9fcc.  v1:= `@@e.e.a.b.f.n.z40.c` @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2b9fd0.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/z40;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9f88.  v0:= `@@e.e.a.b.f.n.y40.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b9f8c.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.z40`[] `values`() @signature `Le/e/a/b/f/n/z40;.values:()[Le/e/a/b/f/n/z40;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9fe4.  v0:= `@@e.e.a.b.f.n.z40.g` @type ^`e.e.a.b.f.n.z40`[] @kind object;
  #L2b9fe8.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/z40;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b9fee.  v0:= temp @kind object;
  #L2b9ff0.  v0:= (`e.e.a.b.f.n.z40`[]) v0 @kind object;
  #L2b9ff4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.z40` v2 @kind this) @signature `Le/e/a/b/f/n/z40;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ba020.  v0:= new `java.lang.StringBuilder`;
  #L2ba024.  v1:= "<" @kind object;
  #L2ba028.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba02e.  v1:= constclass @type ^`e.e.a.b.f.n.z40` @kind object;
  #L2ba032.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ba038.  v1:= temp @kind object;
  #L2ba03a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba040.  v1:= 64I;
  #L2ba044.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba04a.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ba050.  v1:= temp;
  #L2ba052.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2ba058.  v1:= temp @kind object;
  #L2ba05a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba060.  v1:= " number=" @kind object;
  #L2ba064.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba06a.  v1:= v2.`e.e.a.b.f.n.z40.b` @type ^`int`;
  #L2ba06e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba074.  v1:= " name=" @kind object;
  #L2ba078.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba07e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2ba084.  v1:= temp @kind object;
  #L2ba086.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba08c.  v1:= 62I;
  #L2ba090.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba096.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba09c.  v0:= temp @kind object;
  #L2ba09e.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.z40` v1 @kind this) @signature `Le/e/a/b/f/n/z40;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ba008.  v0:= v1.`e.e.a.b.f.n.z40.b` @type ^`int`;
  #L2ba00c.  return v0;
}
