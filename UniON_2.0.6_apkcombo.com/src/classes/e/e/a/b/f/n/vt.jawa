record `e.e.a.b.f.n.vt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/n/vt;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2ab148.  v0:= 0I;
  #L2ab14a.  v1:= 0I;
  #L2ab14c.  v2:= length @variable v12;
  #L2ab14e.  if v1 >= v2 then goto L2ab2aa;
  #L2ab152.  v2:= v12[v1] @kind object;
  #L2ab156.  if v2 != 0 then goto L2ab162;
  #L2ab15a.  v2:= "null" @kind object;
  #L2ab15e.  goto L2ab29e;
  #L2ab162.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ab168.  v2:= temp @kind object;
  #L2ab16a.  goto L2ab29e;
  #L2ab16e.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L2ab170.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ab176.  v3:= temp @kind object;
  #L2ab178.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ab17e.  v3:= temp @kind object;
  #L2ab180.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ab186.  v2:= temp;
  #L2ab188.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2ab18e.  v2:= temp @kind object;
  #L2ab190.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ab196.  v4:= temp @kind object;
  #L2ab198.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab19e.  v4:= temp;
  #L2ab1a0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ab1a6.  v5:= temp @kind object;
  #L2ab1a8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab1ae.  v5:= temp;
  #L2ab1b0.  v6:= new `java.lang.StringBuilder`;
  #L2ab1b4.  v4:= v4 + 1;
  #L2ab1b8.  v4:= v4 + v5 @kind int;
  #L2ab1ba.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ab1c0.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab1c6.  v3:= 64I;
  #L2ab1ca.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab1d0.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab1d6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ab1dc.  v2:= temp @kind object;
  #L2ab1de.  v3:= "com.google.common.base.Strings" @kind object;
  #L2ab1e2.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2ab1e8.  v3:= temp @kind object;
  #L2ab1ea.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L2ab1ee.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ab1f4.  v5:= temp @kind object;
  #L2ab1f6.  v6:= "Exception during lenientFormat for " @kind object;
  #L2ab1fa.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab200.  v7:= temp;
  #L2ab202.  if v7 == 0 then goto L2ab210;
  #L2ab206.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2ab20c.  v5:= temp @kind object;
  #L2ab20e.  goto L2ab21a;
  #L2ab210.  v5:= new `java.lang.String`;
  #L2ab214.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ab21a.  v7:= v5 @kind object;
  #L2ab21c.  v5:= "com.google.common.base.Strings" @kind object;
  #L2ab220.  v6:= "lenientToString" @kind object;
  #L2ab224.  v8:= v9 @kind object;
  #L2ab226.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2ab22c.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ab232.  v3:= temp @kind object;
  #L2ab234.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ab23a.  v3:= temp @kind object;
  #L2ab23c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ab242.  v4:= temp @kind object;
  #L2ab244.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab24a.  v4:= temp;
  #L2ab24c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ab252.  v5:= temp @kind object;
  #L2ab254.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab25a.  v5:= temp;
  #L2ab25c.  v6:= new `java.lang.StringBuilder`;
  #L2ab260.  v4:= v4 + 9;
  #L2ab264.  v4:= v4 + v5 @kind int;
  #L2ab266.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ab26c.  v4:= "<" @kind object;
  #L2ab270.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab276.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab27c.  v2:= " threw " @kind object;
  #L2ab280.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab286.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab28c.  v2:= ">" @kind object;
  #L2ab290.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab296.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ab29c.  v2:= temp @kind object;
  #L2ab29e.  v12[v1]:= v2 @kind object;
  #L2ab2a2.  v1:= v1 + 1;
  #L2ab2a6.  goto L2ab14c;
  #L2ab2aa.  v1:= new `java.lang.StringBuilder`;
  #L2ab2ae.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab2b4.  v3:= temp;
  #L2ab2b6.  v2:= v2 * 16;
  #L2ab2ba.  v3:= v3 + v2 @kind int;
  #L2ab2bc.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ab2c2.  v2:= 0I;
  #L2ab2c4.  v3:= length @variable v12;
  #L2ab2c6.  if v0 >= v3 then goto L2ab2fe;
  #L2ab2ca.  v4:= "%s" @kind object;
  #L2ab2ce.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L2ab2d4.  v4:= temp;
  #L2ab2d6.  v5:= -1I;
  #L2ab2d8.  if v4 != v5 then goto L2ab2de;
  #L2ab2dc.  goto L2ab2fe;
  #L2ab2de.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab2e4.  v2:= v0 + 1;
  #L2ab2e8.  v0:= v12[v0] @kind object;
  #L2ab2ec.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab2f2.  v0:= v4 + 2;
  #L2ab2f6.  v10:= v2;
  #L2ab2f8.  v2:= v0;
  #L2ab2fa.  v0:= v10;
  #L2ab2fc.  goto L2ab2c4;
  #L2ab2fe.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ab304.  v4:= temp;
  #L2ab306.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab30c.  if v0 >= v3 then goto L2ab354;
  #L2ab310.  v11:= " [" @kind object;
  #L2ab314.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab31a.  v11:= v0 + 1;
  #L2ab31e.  v0:= v12[v0] @kind object;
  #L2ab322.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab328.  v0:= length @variable v12;
  #L2ab32a.  if v11 >= v0 then goto L2ab34a;
  #L2ab32e.  v0:= ", " @kind object;
  #L2ab332.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab338.  v0:= v11 + 1;
  #L2ab33c.  v11:= v12[v11] @kind object;
  #L2ab340.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab346.  v11:= v0;
  #L2ab348.  goto L2ab328;
  #L2ab34a.  v11:= 93I;
  #L2ab34e.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab354.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ab35a.  v11:= temp @kind object;
  #L2ab35c.  return v11 @kind object;
  catch `java.lang.Exception` @[L2ab162..L2ab16a] goto L2ab16e;
}
