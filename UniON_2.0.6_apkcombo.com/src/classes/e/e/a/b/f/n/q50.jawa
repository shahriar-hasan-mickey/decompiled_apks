record `e.e.a.b.f.n.q50` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.q50.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.q50` `@@e.e.a.b.f.n.q50.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.q50` `@@e.e.a.b.f.n.q50.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.q50` `@@e.e.a.b.f.n.q50.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.q50`[] `@@e.e.a.b.f.n.q50.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/q50;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bac28.  v0:= new `e.e.a.b.f.n.q50`;
  #L2bac2c.  v1:= 0I;
  #L2bac2e.  v2:= "VERTEX_ORDERING_UNSPECIFIED" @kind object;
  #L2bac32.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/q50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2bac38.  `@@e.e.a.b.f.n.q50.c` @type ^`e.e.a.b.f.n.q50` := v0 @kind object;
  #L2bac3c.  v0:= new `e.e.a.b.f.n.q50`;
  #L2bac40.  v2:= 1I;
  #L2bac42.  v3:= "CLOCKWISE" @kind object;
  #L2bac46.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/q50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2bac4c.  `@@e.e.a.b.f.n.q50.d` @type ^`e.e.a.b.f.n.q50` := v0 @kind object;
  #L2bac50.  v0:= new `e.e.a.b.f.n.q50`;
  #L2bac54.  v3:= 2I;
  #L2bac56.  v4:= "COUNTER_CLOCKWISE" @kind object;
  #L2bac5a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/q50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2bac60.  `@@e.e.a.b.f.n.q50.e` @type ^`e.e.a.b.f.n.q50` := v0 @kind object;
  #L2bac64.  v0:= 3I;
  #L2bac66.  v0:= new `e.e.a.b.f.n.q50`[v0];
  #L2bac6a.  v4:= `@@e.e.a.b.f.n.q50.c` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bac6e.  v0[v1]:= v4 @kind object;
  #L2bac72.  v1:= `@@e.e.a.b.f.n.q50.d` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bac76.  v0[v2]:= v1 @kind object;
  #L2bac7a.  v1:= `@@e.e.a.b.f.n.q50.e` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bac7e.  v0[v3]:= v1 @kind object;
  #L2bac82.  `@@e.e.a.b.f.n.q50.f` @type ^`e.e.a.b.f.n.q50`[] := v0 @kind object;
  #L2bac86.  v0:= new `e.e.a.b.f.n.o50`;
  #L2bac8a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/o50;.<init>:()V` @kind direct;
  #L2bac90.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.q50` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/q50;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2baca4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bacaa.  v0.`e.e.a.b.f.n.q50.b` @type ^`int` := v3;
  #L2bacae.  return @kind void;
}
procedure `e.e.a.b.f.n.q50` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/q50;.a:(I)Le/e/a/b/f/n/q50;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bab24.  if v1 == 0 then goto L2bab44;
  #L2bab28.  v0:= 1I;
  #L2bab2a.  if v1 == v0 then goto L2bab3e;
  #L2bab2e.  v0:= 2I;
  #L2bab30.  if v1 == v0 then goto L2bab38;
  #L2bab34.  v1:= 0I;
  #L2bab36.  return v1 @kind object;
  #L2bab38.  v1:= `@@e.e.a.b.f.n.q50.e` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bab3c.  return v1 @kind object;
  #L2bab3e.  v1:= `@@e.e.a.b.f.n.q50.d` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bab42.  return v1 @kind object;
  #L2bab44.  v1:= `@@e.e.a.b.f.n.q50.c` @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2bab48.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/q50;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bab0c.  v0:= `@@e.e.a.b.f.n.p50.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2bab10.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.q50`[] `values`() @signature `Le/e/a/b/f/n/q50;.values:()[Le/e/a/b/f/n/q50;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bab5c.  v0:= `@@e.e.a.b.f.n.q50.f` @type ^`e.e.a.b.f.n.q50`[] @kind object;
  #L2bab60.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/q50;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2bab66.  v0:= temp @kind object;
  #L2bab68.  v0:= (`e.e.a.b.f.n.q50`[]) v0 @kind object;
  #L2bab6c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.q50` v2 @kind this) @signature `Le/e/a/b/f/n/q50;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2bab98.  v0:= new `java.lang.StringBuilder`;
  #L2bab9c.  v1:= "<" @kind object;
  #L2baba0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2baba6.  v1:= constclass @type ^`e.e.a.b.f.n.q50` @kind object;
  #L2babaa.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2babb0.  v1:= temp @kind object;
  #L2babb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babb8.  v1:= 64I;
  #L2babbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babc2.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2babc8.  v1:= temp;
  #L2babca.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2babd0.  v1:= temp @kind object;
  #L2babd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babd8.  v1:= " number=" @kind object;
  #L2babdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babe2.  v1:= v2.`e.e.a.b.f.n.q50.b` @type ^`int`;
  #L2babe6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babec.  v1:= " name=" @kind object;
  #L2babf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2babf6.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2babfc.  v1:= temp @kind object;
  #L2babfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bac04.  v1:= 62I;
  #L2bac08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bac0e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bac14.  v0:= temp @kind object;
  #L2bac16.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.q50` v1 @kind this) @signature `Le/e/a/b/f/n/q50;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bab80.  v0:= v1.`e.e.a.b.f.n.q50.b` @type ^`int`;
  #L2bab84.  return v0;
}
