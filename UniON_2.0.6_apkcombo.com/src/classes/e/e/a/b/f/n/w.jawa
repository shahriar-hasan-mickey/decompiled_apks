record `e.e.a.b.f.n.w` @kind class @AccessFlag FINAL {
}
global `java.lang.Class` `@@e.e.a.b.f.n.w.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.n.w.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L27835c.  v0:= "libcore.io.Memory" @kind object;
  #L278360.  v1:= 0I;
  #L278362.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L278368.  v0:= temp @kind object;
  #L27836a.  goto L27836e;
  #L27836c.  v0:= v1 @kind object;
  #L27836e.  `@@e.e.a.b.f.n.w.a` @type ^`java.lang.Class` := v0 @kind object;
  #L278372.  v0:= "org.robolectric.Robolectric" @kind object;
  #L278376.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27837c.  v1:= temp @kind object;
  #L27837e.  goto L278382;
  #L278380.  
  #L278382.  if v1 == 0 then goto L27838a;
  #L278386.  v0:= 1I;
  #L278388.  goto L27838c;
  #L27838a.  v0:= 0I;
  #L27838c.  `@@e.e.a.b.f.n.w.b` @type ^`boolean` := v0 @kind boolean;
  #L278390.  return @kind void;
  catch `java.lang.Throwable` @[L278362..L27836a] goto L27836c;
  catch `java.lang.Throwable` @[L278376..L27837e] goto L278380;
}
procedure `boolean` `a`() @signature `Le/e/a/b/f/n/w;.a:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L27825c.  v0:= `@@e.e.a.b.f.n.w.a` @type ^`java.lang.Class` @kind object;
  #L278260.  if v0 == 0 then goto L278270;
  #L278264.  v0:= `@@e.e.a.b.f.n.w.b` @type ^`boolean` @kind boolean;
  #L278268.  if v0 != 0 then goto L278270;
  #L27826c.  v0:= 1I;
  #L27826e.  return v0;
  #L278270.  v0:= 0I;
  #L278272.  return v0;
}
procedure `java.lang.Class` `b`() @signature `Le/e/a/b/f/n/w;.b:()Ljava/lang/Class;` @AccessFlag STATIC {
    temp;
    v0;

  #L278284.  v0:= `@@e.e.a.b.f.n.w.a` @type ^`java.lang.Class` @kind object;
  #L278288.  return v0 @kind object;
}
