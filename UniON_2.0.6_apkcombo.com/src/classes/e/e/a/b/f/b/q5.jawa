record `e.e.a.b.f.b.q5` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/b/q5;.a:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2164bc.  v0:= v2[v3] @kind byte;
  #L2164c0.  v0:= v0 ^& 255;
  #L2164c4.  v1:= v3 + 1;
  #L2164c8.  v1:= v2[v1] @kind byte;
  #L2164cc.  v1:= v1 ^& 255;
  #L2164d0.  v1:= v1 ^< 8;
  #L2164d4.  v0:= v0 ^| v1 @kind int;
  #L2164d6.  v1:= v3 + 2;
  #L2164da.  v1:= v2[v1] @kind byte;
  #L2164de.  v1:= v1 ^& 255;
  #L2164e2.  v1:= v1 ^< 16;
  #L2164e6.  v0:= v0 ^| v1 @kind int;
  #L2164e8.  v3:= v3 + 3;
  #L2164ec.  v2:= v2[v3] @kind byte;
  #L2164f0.  v2:= v2 ^& 255;
  #L2164f4.  v2:= v2 ^< 24;
  #L2164f8.  v2:= v2 ^| v0 @kind int;
  #L2164fa.  return v2;
}
procedure `long` `a`(`long` v3 , `long` v5 , `long` v7 ) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L216af0.  v3:= v3 ^~ v5 @kind long;
  #L216af2.  v3:= v3 * v7 @kind long;
  #L216af6.  v0:= 47I;
  #L216afa.  v1:= v3 ^>> v0 @kind long;
  #L216afe.  v3:= v3 ^~ v1 @kind long;
  #L216b00.  v3:= v3 ^~ v5 @kind long;
  #L216b02.  v3:= v3 * v7 @kind long;
  #L216b06.  v5:= v3 ^>> v0 @kind long;
  #L216b0a.  v3:= v3 ^~ v5 @kind long;
  #L216b0c.  v3:= v3 * v7 @kind long;
  #L216b10.  return v3 @kind wide;
}
procedure `long` `a`(`byte`[] v29 @kind object) @signature `Le/e/a/b/f/b/q5;.a:([B)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;

  #L21650c.  v7:= v29 @kind object;
  #L216510.  v0:= length @variable v7;
  #L216512.  if v0 < 0 then goto L216aac;
  #L216516.  v1:= length @variable v7;
  #L216518.  if v0 > v1 then goto L216aac;
  #L21651c.  v8:= 37I;
  #L216520.  v1:= 18I;
  #L216524.  v2:= 30I;
  #L216528.  v3:= 43I;
  #L21652c.  v4:= 2I;
  #L21652e.  v5:= 32I;
  #L216532.  v9:= -1.9079014105469082E-55D;
  #L21653c.  v11:= 16I;
  #L216540.  v6:= 8I;
  #L216544.  v12:= -3.35749372464804E-179D;
  #L21654e.  v14:= 0I;
  #L216550.  if v0 > v5 then goto L2166cc;
  #L216554.  if v0 > v11 then goto L216658;
  #L216558.  if v0 < v6 then goto L2165a8;
  #L21655c.  v1:= v0 ^< 1;
  #L216560.  v1:= (`long`) v1 @kind i2l;
  #L216562.  v19:= v1 + v12 @kind long;
  #L216566.  call temp:= `b`(v7, v14) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21656c.  v1:= temp @kind wide;
  #L21656e.  v1:= v1 + v12 @kind long;
  #L216570.  v0:= v0 + v14 @kind int;
  #L216572.  v0:= v0 - v6 @kind int;
  #L216574.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21657a.  v3:= temp @kind wide;
  #L21657c.  call temp:= `rotateRight`(v3, v8) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216582.  v5:= temp @kind wide;
  #L216584.  v5:= v5 * v19 @kind long;
  #L216588.  v15:= v5 + v1 @kind long;
  #L21658c.  v0:= 25I;
  #L216590.  call temp:= `rotateRight`(v1, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216596.  v0:= temp @kind wide;
  #L216598.  v0:= v0 + v3 @kind long;
  #L21659a.  v17:= v0 * v19 @kind long;
  #L21659e.  call temp:= `a`(v15, v17, v19) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L2165a4.  v0:= temp @kind wide;
  #L2165a6.  return v0 @kind wide;
  #L2165a8.  v1:= 4I;
  #L2165aa.  if v0 < v1 then goto L2165fc;
  #L2165ae.  v1:= v0 ^< 1;
  #L2165b2.  v1:= (`long`) v1 @kind i2l;
  #L2165b4.  v1:= v1 + v12 @kind long;
  #L2165b6.  call temp:= `a`(v7, v14) @signature `Le/e/a/b/f/b/q5;.a:([BI)I` @kind static;
  #L2165bc.  v3:= temp;
  #L2165be.  v3:= (`long`) v3 @kind i2l;
  #L2165c0.  v5:= 4294967295L;
  #L2165ca.  v3:= v3 ^& v5 @kind long;
  #L2165cc.  v5:= (`long`) v0 @kind i2l;
  #L2165ce.  v8:= 3I;
  #L2165d0.  v3:= v3 ^< v8 @kind long;
  #L2165d2.  v3:= v3 + v5 @kind long;
  #L2165d4.  v0:= v0 + v14 @kind int;
  #L2165d6.  v0:= v0 + -4;
  #L2165da.  call temp:= `a`(v7, v0) @signature `Le/e/a/b/f/b/q5;.a:([BI)I` @kind static;
  #L2165e0.  v0:= temp;
  #L2165e2.  v5:= (`long`) v0 @kind i2l;
  #L2165e4.  v7:= 4294967295L;
  #L2165ee.  v5:= v5 ^& v7 @kind long;
  #L2165f0.  v7:= v1 @kind wide;
  #L2165f2.  call temp:= `a`(v3, v5, v7) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L2165f8.  v0:= temp @kind wide;
  #L2165fa.  return v0 @kind wide;
  #L2165fc.  if v0 <= 0 then goto L216656;
  #L216600.  v1:= v7[v14] @kind byte;
  #L216604.  v2:= v0 ^> 1;
  #L216608.  v2:= v2 + v14 @kind int;
  #L21660a.  v2:= v7[v2] @kind byte;
  #L21660e.  v3:= v0 + -1;
  #L216612.  v3:= v3 + v14 @kind int;
  #L216614.  v3:= v7[v3] @kind byte;
  #L216618.  v1:= v1 ^& 255;
  #L21661c.  v2:= v2 ^& 255;
  #L216620.  v2:= v2 ^< v6 @kind int;
  #L216622.  v1:= v1 + v2 @kind int;
  #L216624.  v2:= v3 ^& 255;
  #L216628.  v2:= v2 ^< v4 @kind int;
  #L21662a.  v0:= v0 + v2 @kind int;
  #L21662c.  v1:= (`long`) v1 @kind i2l;
  #L21662e.  v1:= v1 * v12 @kind long;
  #L216632.  v3:= (`long`) v0 @kind i2l;
  #L216634.  v5:= -7.8480313857871552E17D;
  #L21663e.  v3:= v3 * v5 @kind long;
  #L216642.  v0:= v1 ^~ v3 @kind long;
  #L216646.  v2:= 47I;
  #L21664a.  v2:= v0 ^>> v2 @kind long;
  #L21664e.  v0:= v0 ^~ v2 @kind long;
  #L216650.  v0:= v0 * v12 @kind long;
  #L216654.  return v0 @kind wide;
  #L216656.  return v12 @kind wide;
  #L216658.  v4:= v0 ^< 1;
  #L21665c.  v4:= (`long`) v4 @kind i2l;
  #L21665e.  v19:= v4 + v12 @kind long;
  #L216662.  call temp:= `b`(v7, v14) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216668.  v4:= temp @kind wide;
  #L21666a.  v4:= v4 * v9 @kind long;
  #L21666e.  call temp:= `b`(v7, v6) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216674.  v8:= temp @kind wide;
  #L216676.  v0:= v0 + v14 @kind int;
  #L216678.  v6:= v0 + -8;
  #L21667c.  call temp:= `b`(v7, v6) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216682.  v14:= temp @kind wide;
  #L216684.  v14:= v14 * v19 @kind long;
  #L216688.  v0:= v0 - v11 @kind int;
  #L21668a.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216690.  v6:= temp @kind wide;
  #L216692.  v6:= v6 * v12 @kind long;
  #L216696.  v10:= v4 + v8 @kind long;
  #L21669a.  call temp:= `rotateRight`(v10, v3) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2166a0.  v10:= temp @kind wide;
  #L2166a2.  call temp:= `rotateRight`(v14, v2) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2166a8.  v2:= temp @kind wide;
  #L2166aa.  v10:= v10 + v2 @kind long;
  #L2166ac.  v2:= v10 + v6 @kind long;
  #L2166b0.  v8:= v8 + v12 @kind long;
  #L2166b2.  call temp:= `rotateRight`(v8, v1) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2166b8.  v0:= temp @kind wide;
  #L2166ba.  v4:= v4 + v0 @kind long;
  #L2166bc.  v17:= v4 + v14 @kind long;
  #L2166c0.  v15:= v2 @kind wide;
  #L2166c2.  call temp:= `a`(v15, v17, v19) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L2166c8.  v0:= temp @kind wide;
  #L2166ca.  return v0 @kind wide;
  #L2166cc.  v15:= 64I;
  #L2166d0.  if v0 > v15 then goto L2167da;
  #L2166d4.  v4:= v0 ^< 1;
  #L2166d8.  v4:= (`long`) v4 @kind i2l;
  #L2166da.  v4:= v4 + v12 @kind long;
  #L2166dc.  call temp:= `b`(v7, v14) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L2166e2.  v8:= temp @kind wide;
  #L2166e4.  v8:= v8 * v12 @kind long;
  #L2166e8.  call temp:= `b`(v7, v6) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L2166ee.  v15:= temp @kind wide;
  #L2166f0.  v0:= v0 + v14 @kind int;
  #L2166f2.  v6:= v0 + -8;
  #L2166f6.  call temp:= `b`(v7, v6) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L2166fc.  v17:= temp @kind wide;
  #L2166fe.  v1:= v17 * v4 @kind long;
  #L216702.  v10:= v0 + -16;
  #L216706.  call temp:= `b`(v7, v10) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21670c.  v17:= temp @kind wide;
  #L21670e.  v17:= v17 * v12 @kind long;
  #L216712.  v6:= v8 + v15 @kind long;
  #L216716.  call temp:= `rotateRight`(v6, v3) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L21671c.  v19:= temp @kind wide;
  #L21671e.  v6:= 30I;
  #L216722.  call temp:= `rotateRight`(v1, v6) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216728.  v22:= temp @kind wide;
  #L21672a.  v19:= v19 + v22 @kind long;
  #L21672e.  v22:= v19 + v17 @kind long;
  #L216732.  v12:= v12 + v15 @kind long;
  #L216734.  v7:= 18I;
  #L216738.  call temp:= `rotateRight`(v12, v7) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L21673e.  v12:= temp @kind wide;
  #L216740.  v12:= v12 + v8 @kind long;
  #L216742.  v17:= v12 + v1 @kind long;
  #L216746.  v15:= v22 @kind wide;
  #L21674a.  v19:= v4 @kind wide;
  #L21674e.  call temp:= `a`(v15, v17, v19) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L216754.  v1:= temp @kind wide;
  #L216756.  v7:= v29 @kind object;
  #L21675a.  call temp:= `b`(v7, v11) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216760.  v10:= temp @kind wide;
  #L216762.  v10:= v10 * v4 @kind long;
  #L216766.  v12:= 24I;
  #L21676a.  call temp:= `b`(v7, v12) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216770.  v12:= temp @kind wide;
  #L216772.  v14:= v0 + -32;
  #L216776.  call temp:= `b`(v7, v14) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21677c.  v14:= temp @kind wide;
  #L21677e.  v22:= v22 + v14 @kind long;
  #L216782.  v14:= v22 * v4 @kind long;
  #L216786.  v0:= v0 + -24;
  #L21678a.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216790.  v16:= temp @kind wide;
  #L216792.  v1:= v1 + v16 @kind long;
  #L216796.  v1:= v1 * v4 @kind long;
  #L21679a.  v6:= v10 + v12 @kind long;
  #L21679e.  call temp:= `rotateRight`(v6, v3) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2167a4.  v6:= temp @kind wide;
  #L2167a6.  v0:= 30I;
  #L2167aa.  call temp:= `rotateRight`(v14, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2167b0.  v16:= temp @kind wide;
  #L2167b2.  v6:= v6 + v16 @kind long;
  #L2167b6.  v0:= v6 + v1 @kind long;
  #L2167ba.  v12:= v12 + v8 @kind long;
  #L2167bc.  v2:= 18I;
  #L2167c0.  call temp:= `rotateRight`(v12, v2) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2167c6.  v2:= temp @kind wide;
  #L2167c8.  v10:= v10 + v2 @kind long;
  #L2167ca.  v17:= v10 + v14 @kind long;
  #L2167ce.  v15:= v0 @kind wide;
  #L2167d0.  call temp:= `a`(v15, v17, v19) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L2167d6.  v0:= temp @kind wide;
  #L2167d8.  return v0 @kind wide;
  #L2167da.  v1:= 7.104748899679321E-143D;
  #L2167e4.  v5:= 9.592726139023731E-216D;
  #L2167ee.  v12:= new `long`[v4];
  #L2167f2.  v13:= new `long`[v4];
  #L2167f6.  v3:= 95310865018149119L;
  #L216800.  call temp:= `b`(v7, v14) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216806.  v16:= temp @kind wide;
  #L216808.  v16:= v16 + v3 @kind long;
  #L21680c.  v18:= 1I;
  #L216810.  v0:= v0 + -1;
  #L216814.  v3:= v0 / 64;
  #L216818.  v3:= v3 ^< 6;
  #L21681c.  v4:= v3 + 0;
  #L216820.  v3:= v0 ^& 63;
  #L216824.  v0:= v4 + v3 @kind int;
  #L216828.  v19:= v0 + -63;
  #L21682c.  v20:= 0I;
  #L216830.  v16:= v16 + v1 @kind long;
  #L216834.  v21:= v12[v14] @kind wide;
  #L216838.  v16:= v16 + v21 @kind long;
  #L21683c.  v0:= v20 + 8;
  #L216840.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216846.  v21:= temp @kind wide;
  #L216848.  v14:= v16 + v21 @kind long;
  #L21684c.  call temp:= `rotateRight`(v14, v8) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216852.  v14:= temp @kind wide;
  #L216854.  v14:= v14 * v9 @kind long;
  #L216858.  v16:= v12[v18] @kind wide;
  #L21685c.  v1:= v1 + v16 @kind long;
  #L216860.  v0:= v20 + 48;
  #L216864.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21686a.  v16:= temp @kind wide;
  #L21686c.  v1:= v1 + v16 @kind long;
  #L216870.  v0:= 42I;
  #L216874.  call temp:= `rotateRight`(v1, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L21687a.  v0:= temp @kind wide;
  #L21687c.  v0:= v0 * v9 @kind long;
  #L216880.  v16:= v13[v18] @kind wide;
  #L216884.  v14:= v14 ^~ v16 @kind long;
  #L216888.  v2:= 0I;
  #L21688a.  v16:= v12[v2] @kind wide;
  #L21688e.  v11:= v20 + 40;
  #L216892.  call temp:= `b`(v7, v11) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216898.  v24:= temp @kind wide;
  #L21689a.  v16:= v16 + v24 @kind long;
  #L21689e.  v16:= v0 + v16 @kind long;
  #L2168a2.  v0:= v13[v2] @kind wide;
  #L2168a6.  v5:= v5 + v0 @kind long;
  #L2168a8.  v0:= 33I;
  #L2168ac.  call temp:= `rotateRight`(v5, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2168b2.  v0:= temp @kind wide;
  #L2168b4.  v25:= v0 * v9 @kind long;
  #L2168b8.  v0:= v12[v18] @kind wide;
  #L2168bc.  v5:= v0 * v9 @kind long;
  #L2168c0.  v0:= v13[v2] @kind wide;
  #L2168c4.  v27:= v14 + v0 @kind long;
  #L2168c8.  v0:= v29 @kind object;
  #L2168cc.  v1:= v20;
  #L2168d0.  v11:= v3;
  #L2168d2.  v2:= v5 @kind wide;
  #L2168d4.  v6:= v4;
  #L2168d6.  v4:= v27 @kind wide;
  #L2168da.  v8:= v6;
  #L2168dc.  v6:= v12 @kind object;
  #L2168de.  call `a`(v0, v1, v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:([BIJJ[J)V` @kind static;
  #L2168e4.  v1:= v20 + 32;
  #L2168e8.  v2:= v13[v18] @kind wide;
  #L2168ec.  v2:= v25 + v2 @kind long;
  #L2168f0.  v0:= v20 + 16;
  #L2168f4.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L2168fa.  v4:= temp @kind wide;
  #L2168fc.  v4:= v16 + v4 @kind long;
  #L216900.  v0:= v29 @kind object;
  #L216904.  v6:= v13 @kind object;
  #L216906.  call `a`(v0, v1, v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:([BIJJ[J)V` @kind static;
  #L21690c.  v1:= 64I;
  #L216910.  v0:= v20 + 64;
  #L216914.  if v0 != v8 then goto L216a88;
  #L216918.  v0:= 255L;
  #L21691c.  v0:= v0 ^& v14 @kind long;
  #L21691e.  v0:= v0 ^< v18 @kind long;
  #L216922.  v8:= v0 + v9 @kind long;
  #L216926.  v0:= 0I;
  #L216928.  v1:= v13[v0] @kind wide;
  #L21692c.  v3:= (`long`) v11 @kind i2l;
  #L21692e.  v1:= v1 + v3 @kind long;
  #L216930.  v13[v0]:= v1 @kind wide;
  #L216934.  v1:= v12[v0] @kind wide;
  #L216938.  v3:= v13[v0] @kind wide;
  #L21693c.  v1:= v1 + v3 @kind long;
  #L21693e.  v12[v0]:= v1 @kind wide;
  #L216942.  v1:= v13[v0] @kind wide;
  #L216946.  v3:= v12[v0] @kind wide;
  #L21694a.  v1:= v1 + v3 @kind long;
  #L21694c.  v13[v0]:= v1 @kind wide;
  #L216950.  v25:= v25 + v16 @kind long;
  #L216954.  v1:= v12[v0] @kind wide;
  #L216958.  v25:= v25 + v1 @kind long;
  #L21695c.  v0:= v19 + 8;
  #L216960.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216966.  v0:= temp @kind wide;
  #L216968.  v0:= v25 + v0 @kind long;
  #L21696c.  v2:= 37I;
  #L216970.  call temp:= `rotateRight`(v0, v2) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216976.  v0:= temp @kind wide;
  #L216978.  v0:= v0 * v8 @kind long;
  #L21697c.  v2:= v12[v18] @kind wide;
  #L216980.  v16:= v16 + v2 @kind long;
  #L216984.  v2:= v19 + 48;
  #L216988.  call temp:= `b`(v7, v2) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L21698e.  v2:= temp @kind wide;
  #L216990.  v2:= v16 + v2 @kind long;
  #L216994.  v4:= 42I;
  #L216998.  call temp:= `rotateRight`(v2, v4) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L21699e.  v2:= temp @kind wide;
  #L2169a0.  v2:= v2 * v8 @kind long;
  #L2169a4.  v4:= v13[v18] @kind wide;
  #L2169a8.  v10:= 9L;
  #L2169ac.  v4:= v4 * v10 @kind long;
  #L2169b0.  v10:= v0 ^~ v4 @kind long;
  #L2169b4.  v0:= 0I;
  #L2169b6.  v4:= v12[v0] @kind wide;
  #L2169ba.  v16:= 9L;
  #L2169be.  v4:= v4 * v16 @kind long;
  #L2169c2.  v1:= v19 + 40;
  #L2169c6.  call temp:= `b`(v7, v1) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L2169cc.  v16:= temp @kind wide;
  #L2169ce.  v4:= v4 + v16 @kind long;
  #L2169d2.  v16:= v2 + v4 @kind long;
  #L2169d6.  v1:= v13[v0] @kind wide;
  #L2169da.  v14:= v14 + v1 @kind long;
  #L2169dc.  v1:= 33I;
  #L2169e0.  call temp:= `rotateRight`(v14, v1) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L2169e6.  v1:= temp @kind wide;
  #L2169e8.  v14:= v1 * v8 @kind long;
  #L2169ec.  v1:= v12[v18] @kind wide;
  #L2169f0.  v2:= v1 * v8 @kind long;
  #L2169f4.  v4:= v13[v0] @kind wide;
  #L2169f8.  v4:= v4 + v10 @kind long;
  #L2169fa.  v0:= v29 @kind object;
  #L2169fe.  v1:= v19;
  #L216a02.  v6:= v12 @kind object;
  #L216a04.  call `a`(v0, v1, v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:([BIJJ[J)V` @kind static;
  #L216a0a.  v1:= v19 + 32;
  #L216a0e.  v2:= v13[v18] @kind wide;
  #L216a12.  v2:= v2 + v14 @kind long;
  #L216a14.  v4:= 16I;
  #L216a18.  v0:= v19 + 16;
  #L216a1c.  call temp:= `b`(v7, v0) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216a22.  v4:= temp @kind wide;
  #L216a24.  v4:= v16 + v4 @kind long;
  #L216a28.  v0:= v29 @kind object;
  #L216a2c.  v6:= v13 @kind object;
  #L216a2e.  call `a`(v0, v1, v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:([BIJJ[J)V` @kind static;
  #L216a34.  v3:= 0I;
  #L216a36.  v0:= v12[v3] @kind wide;
  #L216a3a.  v4:= v13[v3] @kind wide;
  #L216a3e.  v2:= v0 @kind wide;
  #L216a40.  v6:= v8 @kind wide;
  #L216a42.  call temp:= `a`(v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L216a48.  v0:= temp @kind wide;
  #L216a4a.  v2:= 47I;
  #L216a4e.  v2:= v16 ^>> v2 @kind long;
  #L216a52.  v2:= v16 ^~ v2 @kind long;
  #L216a56.  v4:= -7.8480313857871552E17D;
  #L216a60.  v2:= v2 * v4 @kind long;
  #L216a64.  v0:= v0 + v2 @kind long;
  #L216a66.  v0:= v0 + v10 @kind long;
  #L216a68.  v2:= v12[v18] @kind wide;
  #L216a6c.  v4:= v13[v18] @kind wide;
  #L216a70.  call temp:= `a`(v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L216a76.  v2:= temp @kind wide;
  #L216a78.  v4:= v2 + v14 @kind long;
  #L216a7c.  v2:= v0 @kind wide;
  #L216a7e.  call temp:= `a`(v2, v4, v6) @signature `Le/e/a/b/f/b/q5;.a:(JJJ)J` @kind static;
  #L216a84.  v0:= temp @kind wide;
  #L216a86.  return v0 @kind wide;
  #L216a88.  v20:= v0;
  #L216a8c.  v4:= v8;
  #L216a8e.  v3:= v11;
  #L216a90.  v5:= v14 @kind wide;
  #L216a92.  v1:= v16 @kind wide;
  #L216a96.  v16:= v25 @kind wide;
  #L216a9a.  v8:= 37I;
  #L216a9e.  v11:= 16I;
  #L216aa2.  v14:= 0I;
  #L216aa4.  v15:= 64I;
  #L216aa8.  goto L216830;
  #L216aac.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L216ab0.  v2:= 67I;
  #L216ab4.  v3:= new `java.lang.StringBuilder`;
  #L216ab8.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L216abe.  v2:= "Out of bound index with offput: 0 and length: " @kind object;
  #L216ac2.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L216ac8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L216ace.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L216ad4.  v0:= temp @kind object;
  #L216ad6.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L216adc.  throw v1;
}
procedure `void` `a`(`byte`[] v6 @kind object, `int` v7 , `long` v8 , `long` v10 , `long`[] v12 @kind object) @signature `Le/e/a/b/f/b/q5;.a:([BIJJ[J)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L216b54.  call temp:= `b`(v6, v7) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216b5a.  v0:= temp @kind wide;
  #L216b5c.  v2:= v7 + 8;
  #L216b60.  call temp:= `b`(v6, v2) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216b66.  v2:= temp @kind wide;
  #L216b68.  v4:= v7 + 16;
  #L216b6c.  call temp:= `b`(v6, v4) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216b72.  v4:= temp @kind wide;
  #L216b74.  v7:= v7 + 24;
  #L216b78.  call temp:= `b`(v6, v7) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @kind static;
  #L216b7e.  v6:= temp @kind wide;
  #L216b80.  v8:= v8 + v0 @kind long;
  #L216b82.  v10:= v10 + v8 @kind long;
  #L216b84.  v10:= v10 + v6 @kind long;
  #L216b86.  v0:= 21I;
  #L216b8a.  call temp:= `rotateRight`(v10, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216b90.  v10:= temp @kind wide;
  #L216b92.  v2:= v2 + v8 @kind long;
  #L216b94.  v2:= v2 + v4 @kind long;
  #L216b96.  v0:= 44I;
  #L216b9a.  call temp:= `rotateRight`(v2, v0) @signature `Ljava/lang/Long;.rotateRight:(JI)J` @kind static;
  #L216ba0.  v0:= temp @kind wide;
  #L216ba2.  v10:= v10 + v0 @kind long;
  #L216ba4.  v2:= v2 + v6 @kind long;
  #L216ba6.  v6:= 0I;
  #L216ba8.  v12[v6]:= v2 @kind wide;
  #L216bac.  v10:= v10 + v8 @kind long;
  #L216bae.  v6:= 1I;
  #L216bb0.  v12[v6]:= v10 @kind wide;
  #L216bb4.  return @kind void;
}
procedure `long` `b`(`byte`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/b/q5;.b:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L216b24.  v0:= 8I;
  #L216b28.  call temp:= `wrap`(v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L216b2e.  v1:= temp @kind object;
  #L216b30.  v2:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L216b34.  call temp:= `order`(v1, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L216b3a.  call temp:= `getLong`(v1) @signature `Ljava/nio/ByteBuffer;.getLong:()J` @kind virtual;
  #L216b40.  v1:= temp @kind wide;
  #L216b42.  return v1 @kind wide;
}
