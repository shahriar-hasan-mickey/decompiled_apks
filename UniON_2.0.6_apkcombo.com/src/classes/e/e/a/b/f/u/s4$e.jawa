record `e.e.a.b.f.u.s4$e` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.u.d4` @kind class {
  `e.e.a.b.f.u.b6` `e.e.a.b.f.u.s4$e.a` @AccessFlag FINAL;
  `java.lang.Object` `e.e.a.b.f.u.s4$e.b` @AccessFlag FINAL;
  `e.e.a.b.f.u.b6` `e.e.a.b.f.u.s4$e.c` @AccessFlag FINAL;
  `e.e.a.b.f.u.s4$f` `e.e.a.b.f.u.s4$e.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.s4$e` v1 @kind this, `e.e.a.b.f.u.b6` v2 @kind object, `java.lang.Object` v3 @kind object, `e.e.a.b.f.u.b6` v4 @kind object, `e.e.a.b.f.u.s4$f` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Le/e/a/b/f/u/s4$e;.<init>:(Le/e/a/b/f/u/b6;Ljava/lang/Object;Le/e/a/b/f/u/b6;Le/e/a/b/f/u/s4$f;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32d530.  call `<init>`(v1) @signature `Le/e/a/b/f/u/d4;.<init>:()V` @kind direct;
  #L32d536.  if v2 == 0 then goto L32d56e;
  #L32d53a.  v6:= v5.`e.e.a.b.f.u.s4$f.c` @type ^`e.e.a.b.f.u.a8` @kind object;
  #L32d53e.  v0:= `@@e.e.a.b.f.u.a8.n` @type ^`e.e.a.b.f.u.a8` @kind object;
  #L32d542.  if v6 != v0 then goto L32d55c;
  #L32d546.  if v4 == 0 then goto L32d54c;
  #L32d54a.  goto L32d55c;
  #L32d54c.  v2:= new `java.lang.IllegalArgumentException`;
  #L32d550.  v3:= "Null messageDefaultInstance" @kind object;
  #L32d554.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d55a.  throw v2;
  #L32d55c.  v1.`e.e.a.b.f.u.s4$e.a` @type ^`e.e.a.b.f.u.b6` := v2 @kind object;
  #L32d560.  v1.`e.e.a.b.f.u.s4$e.b` @type ^`java.lang.Object` := v3 @kind object;
  #L32d564.  v1.`e.e.a.b.f.u.s4$e.c` @type ^`e.e.a.b.f.u.b6` := v4 @kind object;
  #L32d568.  v1.`e.e.a.b.f.u.s4$e.d` @type ^`e.e.a.b.f.u.s4$f` := v5 @kind object;
  #L32d56c.  return @kind void;
  #L32d56e.  v2:= new `java.lang.IllegalArgumentException`;
  #L32d572.  v3:= "Null containingTypeDefaultInstance" @kind object;
  #L32d576.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d57c.  throw v2;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.u.s4$e` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/u/s4$e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L32d4f0.  v0:= v2.`e.e.a.b.f.u.s4$e.d` @type ^`e.e.a.b.f.u.s4$f` @kind object;
  #L32d4f4.  v0:= v0.`e.e.a.b.f.u.s4$f.c` @type ^`e.e.a.b.f.u.a8` @kind object;
  #L32d4f8.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/u/a8;.zza:()Le/e/a/b/f/u/d8;` @kind virtual;
  #L32d4fe.  v0:= temp @kind object;
  #L32d500.  v1:= `@@e.e.a.b.f.u.d8.i` @type ^`e.e.a.b.f.u.d8` @kind object;
  #L32d504.  if v0 != v1 then goto L32d51e;
  #L32d508.  v0:= 0I;
  #L32d50a.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L32d50e.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32d514.  v3:= temp;
  #L32d516.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/u/y4;.a:(I)Le/e/a/b/f/u/v4;` @kind interface;
  #L32d51c.  v3:= temp @kind object;
  #L32d51e.  return v3 @kind object;
}
