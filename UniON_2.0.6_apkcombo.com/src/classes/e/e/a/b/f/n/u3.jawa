record `e.e.a.b.f.n.u3` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.ArrayDeque` `e.e.a.b.f.n.u3.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.n.n0` `e.e.a.b.f.n.u3.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.n.u3` v1 @kind this, `e.e.a.b.f.n.q0` v2 @kind object, `e.e.a.b.f.n.s3` v3 @kind object) @signature `Le/e/a/b/f/n/u3;.<init>:(Le/e/a/b/f/n/q0;Le/e/a/b/f/n/s3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L288c38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L288c3e.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.n.v3` @kind boolean;
  #L288c42.  if v3 == 0 then goto L288c80;
  #L288c46.  v2:= (`e.e.a.b.f.n.v3`) v2 @kind object;
  #L288c4a.  v3:= new `java.util.ArrayDeque`;
  #L288c4e.  call temp:= `b`(v2) @signature `Le/e/a/b/f/n/v3;.b:()I` @kind virtual;
  #L288c54.  v0:= temp;
  #L288c56.  call `<init>`(v3, v0) @signature `Ljava/util/ArrayDeque;.<init>:(I)V` @kind direct;
  #L288c5c.  v1.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` := v3 @kind object;
  #L288c60.  v3:= v1.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` @kind object;
  #L288c64.  call `push`(v3, v2) @signature `Ljava/util/ArrayDeque;.push:(Ljava/lang/Object;)V` @kind virtual;
  #L288c6a.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/v3;)Le/e/a/b/f/n/q0;` @kind static;
  #L288c70.  v2:= temp @kind object;
  #L288c72.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/u3;.a:(Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/n0;` @kind direct;
  #L288c78.  v2:= temp @kind object;
  #L288c7a.  v1.`e.e.a.b.f.n.u3.c` @type ^`e.e.a.b.f.n.n0` := v2 @kind object;
  #L288c7e.  return @kind void;
  #L288c80.  v3:= 0I;
  #L288c82.  v1.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` := v3 @kind object;
  #L288c86.  v2:= (`e.e.a.b.f.n.n0`) v2 @kind object;
  #L288c8a.  goto L288c7a;
}
procedure `e.e.a.b.f.n.n0` `a`(`e.e.a.b.f.n.u3` v1 @kind this, `e.e.a.b.f.n.q0` v2 @kind object) @signature `Le/e/a/b/f/n/u3;.a:(Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/n0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L288be4.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.n.v3` @kind boolean;
  #L288be8.  if v0 == 0 then goto L288c04;
  #L288bec.  v2:= (`e.e.a.b.f.n.v3`) v2 @kind object;
  #L288bf0.  v0:= v1.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` @kind object;
  #L288bf4.  call `push`(v0, v2) @signature `Ljava/util/ArrayDeque;.push:(Ljava/lang/Object;)V` @kind virtual;
  #L288bfa.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/v3;.a:(Le/e/a/b/f/n/v3;)Le/e/a/b/f/n/q0;` @kind static;
  #L288c00.  v2:= temp @kind object;
  #L288c02.  goto L288be4;
  #L288c04.  v2:= (`e.e.a.b.f.n.n0`) v2 @kind object;
  #L288c08.  return v2 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.n.u3` v1 @kind this) @signature `Le/e/a/b/f/n/u3;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L288b54.  v0:= v1.`e.e.a.b.f.n.u3.c` @type ^`e.e.a.b.f.n.n0` @kind object;
  #L288b58.  if v0 == 0 then goto L288b60;
  #L288b5c.  v0:= 1I;
  #L288b5e.  return v0;
  #L288b60.  v0:= 0I;
  #L288b62.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.n.u3` v1 @kind this) @signature `Le/e/a/b/f/n/u3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L288c1c.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @kind virtual;
  #L288c22.  v0:= temp @kind object;
  #L288c24.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.n.u3` v1 @kind this) @signature `Le/e/a/b/f/n/u3;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L288c9c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L288ca0.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L288ca6.  throw v0;
}
procedure `e.e.a.b.f.n.n0` `zza`(`e.e.a.b.f.n.u3` v3 @kind this) @signature `Le/e/a/b/f/n/u3;.zza:()Le/e/a/b/f/n/n0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L288b74.  v0:= v3.`e.e.a.b.f.n.u3.c` @type ^`e.e.a.b.f.n.n0` @kind object;
  #L288b78.  if v0 == 0 then goto L288bc6;
  #L288b7c.  v1:= v3.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` @kind object;
  #L288b80.  v2:= 0I;
  #L288b82.  if v1 == 0 then goto L288bc0;
  #L288b86.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L288b8c.  v1:= temp;
  #L288b8e.  if v1 == 0 then goto L288b94;
  #L288b92.  goto L288bc0;
  #L288b94.  v1:= v3.`e.e.a.b.f.n.u3.b` @type ^`java.util.ArrayDeque` @kind object;
  #L288b98.  call temp:= `pop`(v1) @signature `Ljava/util/ArrayDeque;.pop:()Ljava/lang/Object;` @kind virtual;
  #L288b9e.  v1:= temp @kind object;
  #L288ba0.  v1:= (`e.e.a.b.f.n.v3`) v1 @kind object;
  #L288ba4.  call temp:= `b`(v1) @signature `Le/e/a/b/f/n/v3;.b:(Le/e/a/b/f/n/v3;)Le/e/a/b/f/n/q0;` @kind static;
  #L288baa.  v1:= temp @kind object;
  #L288bac.  call temp:= `a`(v3, v1) @signature `Le/e/a/b/f/n/u3;.a:(Le/e/a/b/f/n/q0;)Le/e/a/b/f/n/n0;` @kind direct;
  #L288bb2.  v2:= temp @kind object;
  #L288bb4.  call temp:= `d`(v2) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L288bba.  v1:= temp;
  #L288bbc.  if v1 == 0 then goto L288b7c;
  #L288bc0.  v3.`e.e.a.b.f.n.u3.c` @type ^`e.e.a.b.f.n.n0` := v2 @kind object;
  #L288bc4.  return v0 @kind object;
  #L288bc6.  v0:= new `java.util.NoSuchElementException`;
  #L288bca.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L288bd0.  throw v0;
}
