record `e.e.a.b.f.b.a4$b` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.a4$d` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.b.a4$b` v0 @kind this, `sun.misc.Unsafe` v1 @kind object) @signature `Le/e/a/b/f/b/a4$b;.<init>:(Lsun/misc/Unsafe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20ed6c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/a4$d;.<init>:(Lsun/misc/Unsafe;)V` @kind direct;
  #L20ed72.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v0 @kind this, `long` v1 , `byte` v3 ) @signature `Le/e/a/b/f/b/a4$b;.a:(JB)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20ee14.  call `pokeByte`(v1, v3) @signature `Llibcore/io/Memory;.pokeByte:(JB)V` @kind static;
  #L20ee1a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `byte` v5 ) @signature `Le/e/a/b/f/b/a4$b;.a:(Ljava/lang/Object;JB)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20ee2c.  call temp:= `a`() @signature `Le/e/a/b/f/b/a4;.a:()Z` @kind static;
  #L20ee32.  v0:= temp;
  #L20ee34.  if v0 == 0 then goto L20ee40;
  #L20ee38.  call `c`(v2, v3, v5) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Object;JB)V` @kind static;
  #L20ee3e.  return @kind void;
  #L20ee40.  call `d`(v2, v3, v5) @signature `Le/e/a/b/f/b/a4;.d:(Ljava/lang/Object;JB)V` @kind static;
  #L20ee46.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 , `double` v10 ) @signature `Le/e/a/b/f/b/a4$b;.a:(Ljava/lang/Object;JD)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20edcc.  call temp:= `doubleToLongBits`(v10) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L20edd2.  v4:= temp @kind wide;
  #L20edd4.  v0:= v6 @kind object;
  #L20edd6.  v1:= v7 @kind object;
  #L20edd8.  v2:= v8 @kind wide;
  #L20edda.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JJ)V` @kind virtual;
  #L20ede0.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 , `float` v4 ) @signature `Le/e/a/b/f/b/a4$b;.a:(Ljava/lang/Object;JF)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20edf4.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L20edfa.  v4:= temp;
  #L20edfc.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JI)V` @kind virtual;
  #L20ee02.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `boolean` v5 ) @signature `Le/e/a/b/f/b/a4$b;.a:(Ljava/lang/Object;JZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20eda0.  call temp:= `a`() @signature `Le/e/a/b/f/b/a4;.a:()Z` @kind static;
  #L20eda6.  v0:= temp;
  #L20eda8.  if v0 == 0 then goto L20edb4;
  #L20edac.  call `d`(v2, v3, v5) @signature `Le/e/a/b/f/b/a4;.d:(Ljava/lang/Object;JZ)V` @kind static;
  #L20edb2.  return @kind void;
  #L20edb4.  call `e`(v2, v3, v5) @signature `Le/e/a/b/f/b/a4;.e:(Ljava/lang/Object;JZ)V` @kind static;
  #L20edba.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.a4$b` v0 @kind this, `byte`[] v1 @kind object, `long` v2 , `long` v4 , `long` v6 ) @signature `Le/e/a/b/f/b/a4$b;.a:([BJJJ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20ed84.  v3:= (`int`) v2 @kind l2i;
  #L20ed86.  v2:= (`int`) v6 @kind l2i;
  #L20ed88.  call `pokeByteArray`(v4, v1, v3, v2) @signature `Llibcore/io/Memory;.pokeByteArray:(J[BII)V` @kind static;
  #L20ed8e.  return @kind void;
}
procedure `boolean` `c`(`e.e.a.b.f.b.a4$b` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/b/a4$b;.c:(Ljava/lang/Object;J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20ecc4.  call temp:= `a`() @signature `Le/e/a/b/f/b/a4;.a:()Z` @kind static;
  #L20ecca.  v0:= temp;
  #L20eccc.  if v0 == 0 then goto L20ecda;
  #L20ecd0.  call temp:= `m`(v2, v3) @signature `Le/e/a/b/f/b/a4;.m:(Ljava/lang/Object;J)Z` @kind static;
  #L20ecd6.  v2:= temp;
  #L20ecd8.  return v2;
  #L20ecda.  call temp:= `n`(v2, v3) @signature `Le/e/a/b/f/b/a4;.n:(Ljava/lang/Object;J)Z` @kind static;
  #L20ece0.  v2:= temp;
  #L20ece2.  return v2;
}
procedure `float` `d`(`e.e.a.b.f.b.a4$b` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4$b;.d:(Ljava/lang/Object;J)F` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20ed48.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;J)I` @kind virtual;
  #L20ed4e.  v1:= temp;
  #L20ed50.  call temp:= `intBitsToFloat`(v1) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L20ed56.  v1:= temp;
  #L20ed58.  return v1;
}
procedure `double` `e`(`e.e.a.b.f.b.a4$b` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4$b;.e:(Ljava/lang/Object;J)D` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20ed24.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.b:(Ljava/lang/Object;J)J` @kind virtual;
  #L20ed2a.  v1:= temp @kind wide;
  #L20ed2c.  call temp:= `longBitsToDouble`(v1) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L20ed32.  v1:= temp @kind wide;
  #L20ed34.  return v1 @kind wide;
}
procedure `byte` `f`(`e.e.a.b.f.b.a4$b` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/b/a4$b;.f:(Ljava/lang/Object;J)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20ecf4.  call temp:= `a`() @signature `Le/e/a/b/f/b/a4;.a:()Z` @kind static;
  #L20ecfa.  v0:= temp;
  #L20ecfc.  if v0 == 0 then goto L20ed0a;
  #L20ed00.  call temp:= `k`(v2, v3) @signature `Le/e/a/b/f/b/a4;.k:(Ljava/lang/Object;J)B` @kind static;
  #L20ed06.  v2:= temp;
  #L20ed08.  return v2;
  #L20ed0a.  call temp:= `l`(v2, v3) @signature `Le/e/a/b/f/b/a4;.l:(Ljava/lang/Object;J)B` @kind static;
  #L20ed10.  v2:= temp;
  #L20ed12.  return v2;
}
