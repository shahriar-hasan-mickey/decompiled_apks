record `e.e.a.b.f.k.f2` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.k.f2.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.k.f2.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.k.f2` v4 @kind this) @signature `Le/e/a/b/f/k/f2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L247ba4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L247baa.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L247bae.  v1:= 16I;
  #L247bb2.  v2:= 0.75F;
  #L247bb6.  v3:= 10I;
  #L247bba.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L247bc0.  v4.`e.e.a.b.f.k.f2.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L247bc4.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L247bc8.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L247bce.  v4.`e.e.a.b.f.k.f2.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L247bd2.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.k.f2` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/k/f2;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L247b24.  v5:= v3.`e.e.a.b.f.k.f2.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L247b28.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L247b2e.  v5:= temp @kind object;
  #L247b30.  if v5 == 0 then goto L247b40;
  #L247b34.  v0:= v3.`e.e.a.b.f.k.f2.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L247b38.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247b3e.  goto L247b24;
  #L247b40.  v5:= new `e.e.a.b.f.k.e2`;
  #L247b44.  v0:= 0I;
  #L247b46.  call `<init>`(v5, v4, v0) @signature `Le/e/a/b/f/k/e2;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L247b4c.  v0:= v3.`e.e.a.b.f.k.f2.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L247b50.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247b56.  v5:= temp @kind object;
  #L247b58.  v5:= (`java.util.List`) v5 @kind object;
  #L247b5c.  if v5 == 0 then goto L247b62;
  #L247b60.  return v5 @kind object;
  #L247b62.  v5:= new `java.util.Vector`;
  #L247b66.  v0:= 2I;
  #L247b68.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L247b6e.  v0:= v3.`e.e.a.b.f.k.f2.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L247b72.  v1:= new `e.e.a.b.f.k.e2`;
  #L247b76.  v2:= v3.`e.e.a.b.f.k.f2.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L247b7a.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/k/e2;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L247b80.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247b86.  v4:= temp @kind object;
  #L247b88.  v4:= (`java.util.List`) v4 @kind object;
  #L247b8c.  if v4 != 0 then goto L247b92;
  #L247b90.  return v5 @kind object;
  #L247b92.  return v4 @kind object;
}
