record `e.e.a.b.f.n.kt` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.jt` @kind class {
}
global `e.e.a.b.f.n.kt` `@@e.e.a.b.f.n.kt.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/kt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aaa3c.  v0:= new `e.e.a.b.f.n.kt`;
  #L2aaa40.  call `<init>`(v0) @signature `Le/e/a/b/f/n/kt;.<init>:()V` @kind direct;
  #L2aaa46.  `@@e.e.a.b.f.n.kt.b` @type ^`e.e.a.b.f.n.kt` := v0 @kind object;
  #L2aaa4a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.kt` v1 @kind this) @signature `Le/e/a/b/f/n/kt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2aaa5c.  v0:= "CharMatcher.none()" @kind object;
  #L2aaa60.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/jt;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2aaa66.  return @kind void;
}
