record `e.e.a.b.f.b.e2` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.LinkedHashMap` @kind class {
  `boolean` `e.e.a.b.f.b.e2.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.b.e2` `@@e.e.a.b.f.b.e2.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/e2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L203bf0.  v0:= new `e.e.a.b.f.b.e2`;
  #L203bf4.  call `<init>`(v0) @signature `Le/e/a/b/f/b/e2;.<init>:()V` @kind direct;
  #L203bfa.  `@@e.e.a.b.f.b.e2.c` @type ^`e.e.a.b.f.b.e2` := v0 @kind object;
  #L203bfe.  v1:= 0I;
  #L203c00.  v0.`e.e.a.b.f.b.e2.b` @type ^`boolean` := v1 @kind boolean;
  #L203c04.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L203c18.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L203c1e.  v0:= 1I;
  #L203c20.  v1.`e.e.a.b.f.b.e2.b` @type ^`boolean` := v0 @kind boolean;
  #L203c24.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.e2` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/b/e2;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L203c38.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L203c3e.  v1:= 1I;
  #L203c40.  v0.`e.e.a.b.f.b.e2.b` @type ^`boolean` := v1 @kind boolean;
  #L203c44.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/e2;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L203b30.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L203b34.  if v0 == 0 then goto L203b46;
  #L203b38.  v1:= (`byte`[]) v1 @kind object;
  #L203b3c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/h1;.a:([B)I` @kind static;
  #L203b42.  v1:= temp;
  #L203b44.  return v1;
  #L203b46.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.b.i1` @kind boolean;
  #L203b4a.  if v0 != 0 then goto L203b58;
  #L203b4e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L203b54.  v1:= temp;
  #L203b56.  return v1;
  #L203b58.  v1:= new `java.lang.UnsupportedOperationException`;
  #L203b5c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L203b62.  throw v1;
}
procedure `e.e.a.b.f.b.e2` `f`() @signature `Le/e/a/b/f/b/e2;.f:()Le/e/a/b/f/b/e2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L203a80.  v0:= `@@e.e.a.b.f.b.e2.c` @type ^`e.e.a.b.f.b.e2` @kind object;
  #L203a84.  return v0 @kind object;
}
procedure `void` `g`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.g:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L203cfc.  v0:= v1.`e.e.a.b.f.b.e2.b` @type ^`boolean` @kind boolean;
  #L203d00.  if v0 == 0 then goto L203d06;
  #L203d04.  return @kind void;
  #L203d06.  v0:= new `java.lang.UnsupportedOperationException`;
  #L203d0a.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L203d10.  throw v0;
}
procedure `void` `a`(`e.e.a.b.f.b.e2` v1 @kind this, `e.e.a.b.f.b.e2` v2 @kind object) @signature `Le/e/a/b/f/b/e2;.a:(Le/e/a/b/f/b/e2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L203cd0.  call `g`(v1) @signature `Le/e/a/b/f/b/e2;.g:()V` @kind direct;
  #L203cd6.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L203cdc.  v0:= temp;
  #L203cde.  if v0 != 0 then goto L203ce8;
  #L203ce2.  call `putAll`(v1, v2) @signature `Le/e/a/b/f/b/e2;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L203ce8.  return @kind void;
}
procedure `boolean` `c`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L203a68.  v0:= v1.`e.e.a.b.f.b.e2.b` @type ^`boolean` @kind boolean;
  #L203a6c.  return v0;
}
procedure `void` `clear`(`e.e.a.b.f.b.e2` v0 @kind this) @signature `Le/e/a/b/f/b/e2;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L203c58.  call `g`(v0) @signature `Le/e/a/b/f/b/e2;.g:()V` @kind direct;
  #L203c5e.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind super;
  #L203c64.  return @kind void;
}
procedure `e.e.a.b.f.b.e2` `d`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.d:()Le/e/a/b/f/b/e2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L203a98.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L203a9e.  v0:= temp;
  #L203aa0.  if v0 == 0 then goto L203ab0;
  #L203aa4.  v0:= new `e.e.a.b.f.b.e2`;
  #L203aa8.  call `<init>`(v0) @signature `Le/e/a/b/f/b/e2;.<init>:()V` @kind direct;
  #L203aae.  return v0 @kind object;
  #L203ab0.  v0:= new `e.e.a.b.f.b.e2`;
  #L203ab4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/e2;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L203aba.  return v0 @kind object;
}
procedure `void` `e`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.e:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L203d24.  v0:= 0I;
  #L203d26.  v1.`e.e.a.b.f.b.e2.b` @type ^`boolean` := v0 @kind boolean;
  #L203d2a.  return @kind void;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.b.e2` v1 @kind this) @signature `Le/e/a/b/f/b/e2;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L203bc0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L203bc6.  v0:= temp;
  #L203bc8.  if v0 == 0 then goto L203bd6;
  #L203bcc.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L203bd2.  v0:= temp @kind object;
  #L203bd4.  return v0 @kind object;
  #L203bd6.  call temp:= `entrySet`(v1) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind super;
  #L203bdc.  v0:= temp @kind object;
  #L203bde.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.e2` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/b/e2;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20399c.  v0:= instanceof @variable v7 @type ^`java.util.Map` @kind boolean;
  #L2039a0.  v1:= 0I;
  #L2039a2.  if v0 == 0 then goto L203a56;
  #L2039a6.  v7:= (`java.util.Map`) v7 @kind object;
  #L2039aa.  v0:= 1I;
  #L2039ac.  if v6 == v7 then goto L203a4e;
  #L2039b0.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2039b6.  v2:= temp;
  #L2039b8.  call temp:= `size`(v7) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2039be.  v3:= temp;
  #L2039c0.  if v2 == v3 then goto L2039c8;
  #L2039c4.  v7:= 0I;
  #L2039c6.  goto L203a50;
  #L2039c8.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2039ce.  v2:= temp @kind object;
  #L2039d0.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2039d6.  v2:= temp @kind object;
  #L2039d8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2039de.  v3:= temp;
  #L2039e0.  if v3 == 0 then goto L203a4e;
  #L2039e4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2039ea.  v3:= temp @kind object;
  #L2039ec.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2039f0.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2039f6.  v4:= temp @kind object;
  #L2039f8.  call temp:= `containsKey`(v7, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2039fe.  v4:= temp;
  #L203a00.  if v4 != 0 then goto L203a06;
  #L203a04.  goto L2039c4;
  #L203a06.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L203a0c.  v4:= temp @kind object;
  #L203a0e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L203a14.  v3:= temp @kind object;
  #L203a16.  call temp:= `get`(v7, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L203a1c.  v3:= temp @kind object;
  #L203a1e.  v5:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L203a22.  if v5 == 0 then goto L203a40;
  #L203a26.  v5:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L203a2a.  if v5 == 0 then goto L203a40;
  #L203a2e.  v4:= (`byte`[]) v4 @kind object;
  #L203a32.  v3:= (`byte`[]) v3 @kind object;
  #L203a36.  call temp:= `equals`(v4, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L203a3c.  v3:= temp;
  #L203a3e.  goto L203a48;
  #L203a40.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L203a46.  v3:= temp;
  #L203a48.  if v3 != 0 then goto L2039d8;
  #L203a4c.  goto L2039c4;
  #L203a4e.  v7:= 1I;
  #L203a50.  if v7 == 0 then goto L203a56;
  #L203a54.  return v0;
  #L203a56.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.e2` v4 @kind this) @signature `Le/e/a/b/f/b/e2;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L203acc.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L203ad2.  v0:= temp @kind object;
  #L203ad4.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L203ada.  v0:= temp @kind object;
  #L203adc.  v1:= 0I;
  #L203ade.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L203ae4.  v2:= temp;
  #L203ae6.  if v2 == 0 then goto L203b1c;
  #L203aea.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L203af0.  v2:= temp @kind object;
  #L203af2.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L203af6.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L203afc.  v3:= temp @kind object;
  #L203afe.  call temp:= `a`(v3) @signature `Le/e/a/b/f/b/e2;.a:(Ljava/lang/Object;)I` @kind static;
  #L203b04.  v3:= temp;
  #L203b06.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L203b0c.  v2:= temp @kind object;
  #L203b0e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/e2;.a:(Ljava/lang/Object;)I` @kind static;
  #L203b14.  v2:= temp;
  #L203b16.  v2:= v2 ^~ v3 @kind int;
  #L203b18.  v1:= v1 + v2 @kind int;
  #L203b1a.  goto L203ade;
  #L203b1c.  return v1;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.b.e2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/e2;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L203b74.  call `g`(v0) @signature `Le/e/a/b/f/b/e2;.g:()V` @kind direct;
  #L203b7a.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L203b80.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L203b86.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L203b8c.  v1:= temp @kind object;
  #L203b8e.  return v1 @kind object;
}
procedure `void` `putAll`(`e.e.a.b.f.b.e2` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Le/e/a/b/f/b/e2;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L203c78.  call `g`(v2) @signature `Le/e/a/b/f/b/e2;.g:()V` @kind direct;
  #L203c7e.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L203c84.  v0:= temp @kind object;
  #L203c86.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L203c8c.  v0:= temp @kind object;
  #L203c8e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L203c94.  v1:= temp;
  #L203c96.  if v1 == 0 then goto L203cb8;
  #L203c9a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L203ca0.  v1:= temp @kind object;
  #L203ca2.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L203ca8.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L203cae.  v1:= temp @kind object;
  #L203cb0.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L203cb6.  goto L203c8e;
  #L203cb8.  call `putAll`(v2, v3) @signature `Ljava/util/LinkedHashMap;.putAll:(Ljava/util/Map;)V` @kind super;
  #L203cbe.  return @kind void;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.b.e2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/e2;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L203ba0.  call `g`(v0) @signature `Le/e/a/b/f/b/e2;.g:()V` @kind direct;
  #L203ba6.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L203bac.  v1:= temp @kind object;
  #L203bae.  return v1 @kind object;
}
