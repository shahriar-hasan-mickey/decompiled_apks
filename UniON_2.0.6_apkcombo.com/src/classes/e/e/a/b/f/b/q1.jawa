record `e.e.a.b.f.b.q1` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface {
  `java.util.Map$Entry` `e.e.a.b.f.b.q1.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.q1` v0 @kind this, `java.util.Map$Entry` v1 @kind object) @signature `Le/e/a/b/f/b/q1;.<init>:(Ljava/util/Map$Entry;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L202724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20272a.  v0.`e.e.a.b.f.b.q1.b` @type ^`java.util.Map$Entry` := v1 @kind object;
  #L20272e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.q1` v0 @kind this, `java.util.Map$Entry` v1 @kind object, `e.e.a.b.f.b.p1` v2 @kind object) @signature `Le/e/a/b/f/b/q1;.<init>:(Ljava/util/Map$Entry;Le/e/a/b/f/b/p1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L202740.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/q1;.<init>:(Ljava/util/Map$Entry;)V` @kind direct;
  #L202746.  return @kind void;
}
procedure `e.e.a.b.f.b.o1` `a`(`e.e.a.b.f.b.q1` v1 @kind this) @signature `Le/e/a/b/f/b/q1;.a:()Le/e/a/b/f/b/o1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202668.  v0:= v1.`e.e.a.b.f.b.q1.b` @type ^`java.util.Map$Entry` @kind object;
  #L20266c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L202672.  v0:= temp @kind object;
  #L202674.  v0:= (`e.e.a.b.f.b.o1`) v0 @kind object;
  #L202678.  return v0 @kind object;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.b.q1` v1 @kind this) @signature `Le/e/a/b/f/b/q1;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20268c.  v0:= v1.`e.e.a.b.f.b.q1.b` @type ^`java.util.Map$Entry` @kind object;
  #L202690.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L202696.  v0:= temp @kind object;
  #L202698.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.b.q1` v2 @kind this) @signature `Le/e/a/b/f/b/q1;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2026ac.  v0:= v2.`e.e.a.b.f.b.q1.b` @type ^`java.util.Map$Entry` @kind object;
  #L2026b0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2026b6.  v0:= temp @kind object;
  #L2026b8.  v0:= (`e.e.a.b.f.b.o1`) v0 @kind object;
  #L2026bc.  v1:= 0I;
  #L2026be.  if v0 != 0 then goto L2026c4;
  #L2026c2.  return v1 @kind object;
  #L2026c4.  call temp:= `c`() @signature `Le/e/a/b/f/b/o1;.c:()Le/e/a/b/f/b/k2;` @kind static;
  #L2026ca.  throw v1;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.b.q1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/b/q1;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2026dc.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.b.k2` @kind boolean;
  #L2026e0.  if v0 == 0 then goto L202702;
  #L2026e4.  v0:= v1.`e.e.a.b.f.b.q1.b` @type ^`java.util.Map$Entry` @kind object;
  #L2026e8.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2026ee.  v0:= temp @kind object;
  #L2026f0.  v0:= (`e.e.a.b.f.b.o1`) v0 @kind object;
  #L2026f4.  v2:= (`e.e.a.b.f.b.k2`) v2 @kind object;
  #L2026f8.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/b/s1;.a:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/k2;` @kind virtual;
  #L2026fe.  v2:= temp @kind object;
  #L202700.  return v2 @kind object;
  #L202702.  v2:= new `java.lang.IllegalArgumentException`;
  #L202706.  v0:= "LazyField now only used for MessageSet, and the value of MessageSet must be an instance of MessageLite" @kind object;
  #L20270a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L202710.  throw v2;
}
