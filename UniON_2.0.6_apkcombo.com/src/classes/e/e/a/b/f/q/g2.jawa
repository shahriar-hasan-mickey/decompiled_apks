record `e.e.a.b.f.q.g2` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.q.g2.b` @AccessFlag FINAL;
  `e.e.a.b.f.q.h2` `e.e.a.b.f.q.g2.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.g2` v0 @kind this, `e.e.a.b.f.q.h2` v1 @kind object) @signature `Le/e/a/b/f/q/g2;.<init>:(Le/e/a/b/f/q/h2;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dd484.  v0.`e.e.a.b.f.q.g2.c` @type ^`e.e.a.b.f.q.h2` := v1 @kind object;
  #L2dd488.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd48e.  v1:= v0.`e.e.a.b.f.q.g2.c` @type ^`e.e.a.b.f.q.h2` @kind object;
  #L2dd492.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/h2;.a:(Le/e/a/b/f/q/h2;)Le/e/a/b/f/q/l0;` @kind static;
  #L2dd498.  v1:= temp @kind object;
  #L2dd49a.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2dd4a0.  v1:= temp @kind object;
  #L2dd4a2.  v0.`e.e.a.b.f.q.g2.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L2dd4a6.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.g2` v1 @kind this) @signature `Le/e/a/b/f/q/g2;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd440.  v0:= v1.`e.e.a.b.f.q.g2.b` @type ^`java.util.Iterator` @kind object;
  #L2dd444.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2dd44a.  v0:= temp;
  #L2dd44c.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.g2` v1 @kind this) @signature `Le/e/a/b/f/q/g2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2dd460.  v0:= v1.`e.e.a.b.f.q.g2.b` @type ^`java.util.Iterator` @kind object;
  #L2dd464.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2dd46a.  v0:= temp @kind object;
  #L2dd46c.  v0:= (`java.lang.String`) v0 @kind object;
  #L2dd470.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.q.g2` v1 @kind this) @signature `Le/e/a/b/f/q/g2;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd4b8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2dd4bc.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2dd4c2.  throw v0;
}
