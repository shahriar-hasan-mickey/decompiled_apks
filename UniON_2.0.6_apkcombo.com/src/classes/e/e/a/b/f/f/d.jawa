record `e.e.a.b.f.f.d` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.util.concurrent.Callable` v2 @kind object) @signature `Le/e/a/b/f/f/d;.a:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L218c14.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L218c1a.  v0:= temp @kind object;
  #L218c1c.  v1:= `@@android.os.StrictMode$ThreadPolicy.LAX` @type ^`android.os.StrictMode$ThreadPolicy` @kind object;
  #L218c20.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L218c26.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L218c2c.  v2:= temp @kind object;
  #L218c2e.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L218c34.  return v2 @kind object;
  #L218c36.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L218c38.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L218c3e.  throw v2;
  catch `java.lang.Throwable` @[L218c1c..L218c2e] goto L218c36;
}
