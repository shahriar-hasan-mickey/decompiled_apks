record `e.e.a.b.f.n.m4` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `e.e.a.b.f.n.m4.a` @AccessFlag PRIVATE;
  `int`[] `e.e.a.b.f.n.m4.b` @AccessFlag PRIVATE;
  `java.lang.Object`[] `e.e.a.b.f.n.m4.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.n.m4.d` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.n.m4.e` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.n.m4` `@@e.e.a.b.f.n.m4.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/m4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28b5a8.  v0:= new `e.e.a.b.f.n.m4`;
  #L28b5ac.  v1:= 0I;
  #L28b5ae.  v2:= new `int`[v1];
  #L28b5b2.  v3:= new `java.lang.Object`[v1];
  #L28b5b6.  call `<init>`(v0, v1, v2, v3, v1) @signature `Le/e/a/b/f/n/m4;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L28b5bc.  `@@e.e.a.b.f.n.m4.f` @type ^`e.e.a.b.f.n.m4` := v0 @kind object;
  #L28b5c0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.m4` v4 @kind this) @signature `Le/e/a/b/f/n/m4;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28b5d4.  v0:= 8I;
  #L28b5d8.  v1:= new `int`[v0];
  #L28b5dc.  v0:= new `java.lang.Object`[v0];
  #L28b5e0.  v2:= 0I;
  #L28b5e2.  v3:= 1I;
  #L28b5e4.  call `<init>`(v4, v2, v1, v0, v3) @signature `Le/e/a/b/f/n/m4;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L28b5ea.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.m4` v1 @kind this, `int` v2 , `int`[] v3 @kind object, `java.lang.Object`[] v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/n/m4;.<init>:(I[I[Ljava/lang/Object;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L28b5fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28b602.  v0:= -1I;
  #L28b604.  v1.`e.e.a.b.f.n.m4.d` @type ^`int` := v0;
  #L28b608.  v1.`e.e.a.b.f.n.m4.a` @type ^`int` := v2;
  #L28b60c.  v1.`e.e.a.b.f.n.m4.b` @type ^`int`[] := v3 @kind object;
  #L28b610.  v1.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] := v4 @kind object;
  #L28b614.  v1.`e.e.a.b.f.n.m4.e` @type ^`boolean` := v5 @kind boolean;
  #L28b618.  return @kind void;
}
procedure `e.e.a.b.f.n.m4` `a`(`e.e.a.b.f.n.m4` v6 @kind object, `e.e.a.b.f.n.m4` v7 @kind object) @signature `Le/e/a/b/f/n/m4;.a:(Le/e/a/b/f/n/m4;Le/e/a/b/f/n/m4;)Le/e/a/b/f/n/m4;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28b314.  v0:= v6.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b318.  v1:= v7.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b31c.  v0:= v0 + v1 @kind int;
  #L28b31e.  v1:= v6.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b322.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L28b328.  v1:= temp @kind object;
  #L28b32a.  v2:= v7.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b32e.  v3:= v6.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b332.  v4:= v7.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b336.  v5:= 0I;
  #L28b338.  call `arraycopy`(v2, v5, v1, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L28b33e.  v2:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b342.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L28b348.  v2:= temp @kind object;
  #L28b34a.  v3:= v7.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b34e.  v6:= v6.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b352.  v7:= v7.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b356.  call `arraycopy`(v3, v5, v2, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L28b35c.  v6:= new `e.e.a.b.f.n.m4`;
  #L28b360.  v7:= 1I;
  #L28b362.  call `<init>`(v6, v0, v1, v2, v7) @signature `Le/e/a/b/f/n/m4;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L28b368.  return v6 @kind object;
}
procedure `e.e.a.b.f.n.m4` `d`() @signature `Le/e/a/b/f/n/m4;.d:()Le/e/a/b/f/n/m4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28b2d0.  v0:= `@@e.e.a.b.f.n.m4.f` @type ^`e.e.a.b.f.n.m4` @kind object;
  #L28b2d4.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.m4` `e`() @signature `Le/e/a/b/f/n/m4;.e:()Le/e/a/b/f/n/m4;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b2e8.  v0:= new `e.e.a.b.f.n.m4`;
  #L28b2ec.  v1:= 8I;
  #L28b2f0.  v2:= new `int`[v1];
  #L28b2f4.  v1:= new `java.lang.Object`[v1];
  #L28b2f8.  v3:= 0I;
  #L28b2fa.  v4:= 1I;
  #L28b2fc.  call `<init>`(v0, v3, v2, v1, v4) @signature `Le/e/a/b/f/n/m4;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L28b302.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.m4` v1 @kind this) @signature `Le/e/a/b/f/n/m4;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28b62c.  v0:= 0I;
  #L28b62e.  v1.`e.e.a.b.f.n.m4.e` @type ^`boolean` := v0 @kind boolean;
  #L28b632.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.m4` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/n/m4;.a:(ILjava/lang/Object;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28b794.  v0:= v3.`e.e.a.b.f.n.m4.e` @type ^`boolean` @kind boolean;
  #L28b798.  if v0 == 0 then goto L28b7f6;
  #L28b79c.  v0:= v3.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b7a0.  v1:= v3.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b7a4.  v2:= length @variable v1;
  #L28b7a6.  if v0 != v2 then goto L28b7d8;
  #L28b7aa.  v2:= 4I;
  #L28b7ac.  if v0 >= v2 then goto L28b7b6;
  #L28b7b0.  v2:= 8I;
  #L28b7b4.  goto L28b7ba;
  #L28b7b6.  v2:= v0 ^> 1;
  #L28b7ba.  v0:= v0 + v2 @kind int;
  #L28b7bc.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L28b7c2.  v1:= temp @kind object;
  #L28b7c4.  v3.`e.e.a.b.f.n.m4.b` @type ^`int`[] := v1 @kind object;
  #L28b7c8.  v1:= v3.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b7cc.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L28b7d2.  v0:= temp @kind object;
  #L28b7d4.  v3.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L28b7d8.  v0:= v3.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b7dc.  v1:= v3.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b7e0.  v0[v1]:= v4;
  #L28b7e4.  v4:= v3.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b7e8.  v4[v1]:= v5 @kind object;
  #L28b7ec.  v1:= v1 + 1;
  #L28b7f0.  v3.`e.e.a.b.f.n.m4.a` @type ^`int` := v1;
  #L28b7f4.  return @kind void;
  #L28b7f6.  v4:= new `java.lang.UnsupportedOperationException`;
  #L28b7fa.  call `<init>`(v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L28b800.  throw v4;
}
procedure `void` `a`(`e.e.a.b.f.n.m4` v3 @kind this, `e.e.a.b.f.n.f5` v4 @kind object) @signature `Le/e/a/b/f/n/m4;.a:(Le/e/a/b/f/n/f5;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28b644.  v0:= 0I;
  #L28b646.  v1:= v3.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b64a.  if v0 >= v1 then goto L28b66e;
  #L28b64e.  v1:= v3.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b652.  v1:= v1[v0];
  #L28b656.  v1:= v1 ^>> 3;
  #L28b65a.  v2:= v3.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b65e.  v2:= v2[v0] @kind object;
  #L28b662.  call `a`(v4, v1, v2) @signature `Le/e/a/b/f/n/f5;.a:(ILjava/lang/Object;)V` @kind interface;
  #L28b668.  v0:= v0 + 1;
  #L28b66c.  goto L28b646;
  #L28b66e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.m4` v3 @kind this, `java.lang.StringBuilder` v4 @kind object, `int` v5 ) @signature `Le/e/a/b/f/n/m4;.a:(Ljava/lang/StringBuilder;I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28b750.  v0:= 0I;
  #L28b752.  v1:= v3.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b756.  if v0 >= v1 then goto L28b782;
  #L28b75a.  v1:= v3.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b75e.  v1:= v1[v0];
  #L28b762.  v1:= v1 ^>> 3;
  #L28b766.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L28b76c.  v1:= temp @kind object;
  #L28b76e.  v2:= v3.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b772.  v2:= v2[v0] @kind object;
  #L28b776.  call `a`(v4, v5, v1, v2) @signature `Le/e/a/b/f/n/i3;.a:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L28b77c.  v0:= v0 + 1;
  #L28b780.  goto L28b752;
  #L28b782.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.n.m4` v7 @kind this) @signature `Le/e/a/b/f/n/m4;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28b3ec.  v0:= v7.`e.e.a.b.f.n.m4.d` @type ^`int`;
  #L28b3f0.  v1:= -1I;
  #L28b3f2.  if v0 != v1 then goto L28b468;
  #L28b3f6.  v0:= 0I;
  #L28b3f8.  v1:= 0I;
  #L28b3fa.  v2:= v7.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b3fe.  if v0 >= v2 then goto L28b462;
  #L28b402.  v2:= v7.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b406.  v2:= v2[v0];
  #L28b40a.  v3:= v7.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b40e.  v3:= v3[v0] @kind object;
  #L28b412.  v3:= (`e.e.a.b.f.n.q0`) v3 @kind object;
  #L28b416.  v4:= 1I;
  #L28b418.  call temp:= `e`(v4) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b41e.  v4:= temp;
  #L28b420.  v5:= 2I;
  #L28b422.  call temp:= `e`(v5) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b428.  v5:= temp;
  #L28b42a.  v6:= 3I;
  #L28b42c.  v2:= v2 ^>> v6 @kind int;
  #L28b42e.  call temp:= `g`(v2) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L28b434.  v2:= temp;
  #L28b436.  call temp:= `e`(v6) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b43c.  v6:= temp;
  #L28b43e.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L28b444.  v3:= temp;
  #L28b446.  v4:= v4 + v4 @kind int;
  #L28b448.  v5:= v5 + v2 @kind int;
  #L28b44a.  v4:= v4 + v5 @kind int;
  #L28b44c.  call temp:= `g`(v3) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L28b452.  v2:= temp;
  #L28b454.  v2:= v2 + v3 @kind int;
  #L28b456.  v6:= v6 + v2 @kind int;
  #L28b458.  v4:= v4 + v6 @kind int;
  #L28b45a.  v1:= v1 + v4 @kind int;
  #L28b45c.  v0:= v0 + 1;
  #L28b460.  goto L28b3fa;
  #L28b462.  v7.`e.e.a.b.f.n.m4.d` @type ^`int` := v1;
  #L28b466.  return v1;
  #L28b468.  return v0;
}
procedure `void` `b`(`e.e.a.b.f.n.m4` v5 @kind this, `e.e.a.b.f.n.f5` v6 @kind object) @signature `Le/e/a/b/f/n/m4;.b:(Le/e/a/b/f/n/f5;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b680.  v0:= v5.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b684.  if v0 == 0 then goto L28b73e;
  #L28b688.  v0:= 0I;
  #L28b68a.  v1:= v5.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b68e.  if v0 >= v1 then goto L28b73e;
  #L28b692.  v1:= v5.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b696.  v1:= v1[v0];
  #L28b69a.  v2:= v5.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b69e.  v2:= v2[v0] @kind object;
  #L28b6a2.  v3:= v1 ^>> 3;
  #L28b6a6.  v1:= v1 ^& 7;
  #L28b6aa.  if v1 == 0 then goto L28b726;
  #L28b6ae.  v4:= 1I;
  #L28b6b0.  if v1 == v4 then goto L28b712;
  #L28b6b4.  v4:= 2I;
  #L28b6b6.  if v1 == v4 then goto L28b706;
  #L28b6ba.  v4:= 3I;
  #L28b6bc.  if v1 == v4 then goto L28b6ee;
  #L28b6c0.  v4:= 5I;
  #L28b6c2.  if v1 != v4 then goto L28b6da;
  #L28b6c6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L28b6ca.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L28b6d0.  v1:= temp;
  #L28b6d2.  call `c`(v6, v3, v1) @signature `Le/e/a/b/f/n/f5;.c:(II)V` @kind interface;
  #L28b6d8.  goto L28b738;
  #L28b6da.  v6:= new `java.lang.RuntimeException`;
  #L28b6de.  call temp:= `d`() @signature `Le/e/a/b/f/n/g2;.d:()Le/e/a/b/f/n/f2;` @kind static;
  #L28b6e4.  v0:= temp @kind object;
  #L28b6e6.  call `<init>`(v6, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L28b6ec.  throw v6;
  #L28b6ee.  call `a`(v6, v3) @signature `Le/e/a/b/f/n/f5;.a:(I)V` @kind interface;
  #L28b6f4.  v2:= (`e.e.a.b.f.n.m4`) v2 @kind object;
  #L28b6f8.  call `b`(v2, v6) @signature `Le/e/a/b/f/n/m4;.b:(Le/e/a/b/f/n/f5;)V` @kind virtual;
  #L28b6fe.  call `b`(v6, v3) @signature `Le/e/a/b/f/n/f5;.b:(I)V` @kind interface;
  #L28b704.  goto L28b738;
  #L28b706.  v2:= (`e.e.a.b.f.n.q0`) v2 @kind object;
  #L28b70a.  call `a`(v6, v3, v2) @signature `Le/e/a/b/f/n/f5;.a:(ILe/e/a/b/f/n/q0;)V` @kind interface;
  #L28b710.  goto L28b738;
  #L28b712.  v2:= (`java.lang.Long`) v2 @kind object;
  #L28b716.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28b71c.  v1:= temp @kind wide;
  #L28b71e.  call `e`(v6, v3, v1) @signature `Le/e/a/b/f/n/f5;.e:(IJ)V` @kind interface;
  #L28b724.  goto L28b738;
  #L28b726.  v2:= (`java.lang.Long`) v2 @kind object;
  #L28b72a.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28b730.  v1:= temp @kind wide;
  #L28b732.  call `a`(v6, v3, v1) @signature `Le/e/a/b/f/n/f5;.a:(IJ)V` @kind interface;
  #L28b738.  v0:= v0 + 1;
  #L28b73c.  goto L28b68a;
  #L28b73e.  return @kind void;
}
procedure `int` `c`(`e.e.a.b.f.n.m4` v6 @kind this) @signature `Le/e/a/b/f/n/m4;.c:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28b47c.  v0:= v6.`e.e.a.b.f.n.m4.d` @type ^`int`;
  #L28b480.  v1:= -1I;
  #L28b482.  if v0 != v1 then goto L28b594;
  #L28b486.  v0:= 0I;
  #L28b488.  v1:= 0I;
  #L28b48a.  v2:= v6.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b48e.  if v0 >= v2 then goto L28b58e;
  #L28b492.  v2:= v6.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b496.  v2:= v2[v0];
  #L28b49a.  v3:= v2 ^>> 3;
  #L28b49e.  v2:= v2 ^& 7;
  #L28b4a2.  if v2 == 0 then goto L28b55e;
  #L28b4a6.  v4:= 1I;
  #L28b4a8.  if v2 == v4 then goto L28b53e;
  #L28b4ac.  v4:= 2I;
  #L28b4ae.  if v2 == v4 then goto L28b512;
  #L28b4b2.  v4:= 3I;
  #L28b4b4.  if v2 == v4 then goto L28b4f2;
  #L28b4b8.  v4:= 5I;
  #L28b4ba.  if v2 != v4 then goto L28b4de;
  #L28b4be.  v2:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b4c2.  v2:= v2[v0] @kind object;
  #L28b4c6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L28b4ca.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L28b4d0.  call temp:= `e`(v3) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b4d6.  v2:= temp;
  #L28b4d8.  v2:= v2 + 4;
  #L28b4dc.  goto L28b584;
  #L28b4de.  v0:= new `java.lang.IllegalStateException`;
  #L28b4e2.  call temp:= `d`() @signature `Le/e/a/b/f/n/g2;.d:()Le/e/a/b/f/n/f2;` @kind static;
  #L28b4e8.  v1:= temp @kind object;
  #L28b4ea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L28b4f0.  throw v0;
  #L28b4f2.  call temp:= `e`(v3) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b4f8.  v2:= temp;
  #L28b4fa.  v2:= v2 + v2 @kind int;
  #L28b4fc.  v3:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b500.  v3:= v3[v0] @kind object;
  #L28b504.  v3:= (`e.e.a.b.f.n.m4`) v3 @kind object;
  #L28b508.  call temp:= `c`(v3) @signature `Le/e/a/b/f/n/m4;.c:()I` @kind virtual;
  #L28b50e.  v3:= temp;
  #L28b510.  goto L28b582;
  #L28b512.  v2:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b516.  v2:= v2[v0] @kind object;
  #L28b51a.  v2:= (`e.e.a.b.f.n.q0`) v2 @kind object;
  #L28b51e.  call temp:= `e`(v3) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b524.  v3:= temp;
  #L28b526.  call temp:= `d`(v2) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L28b52c.  v2:= temp;
  #L28b52e.  call temp:= `g`(v2) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L28b534.  v4:= temp;
  #L28b536.  v4:= v4 + v2 @kind int;
  #L28b538.  v3:= v3 + v4 @kind int;
  #L28b53a.  v1:= v1 + v3 @kind int;
  #L28b53c.  goto L28b586;
  #L28b53e.  v2:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b542.  v2:= v2[v0] @kind object;
  #L28b546.  v2:= (`java.lang.Long`) v2 @kind object;
  #L28b54a.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28b550.  call temp:= `e`(v3) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b556.  v2:= temp;
  #L28b558.  v2:= v2 + 8;
  #L28b55c.  goto L28b584;
  #L28b55e.  v2:= v6.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b562.  v2:= v2[v0] @kind object;
  #L28b566.  v2:= (`java.lang.Long`) v2 @kind object;
  #L28b56a.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L28b570.  v4:= temp @kind wide;
  #L28b572.  call temp:= `e`(v3) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @kind static;
  #L28b578.  v2:= temp;
  #L28b57a.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/x0;.d:(J)I` @kind static;
  #L28b580.  v3:= temp;
  #L28b582.  v2:= v2 + v3 @kind int;
  #L28b584.  v1:= v1 + v2 @kind int;
  #L28b586.  v0:= v0 + 1;
  #L28b58a.  goto L28b48a;
  #L28b58e.  v6.`e.e.a.b.f.n.m4.d` @type ^`int` := v1;
  #L28b592.  return v1;
  #L28b594.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.m4` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/n/m4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28b244.  v0:= 1I;
  #L28b246.  if v8 != v9 then goto L28b24c;
  #L28b24a.  return v0;
  #L28b24c.  v1:= 0I;
  #L28b24e.  if v9 != 0 then goto L28b254;
  #L28b252.  return v1;
  #L28b254.  v2:= instanceof @variable v9 @type ^`e.e.a.b.f.n.m4` @kind boolean;
  #L28b258.  if v2 != 0 then goto L28b25e;
  #L28b25c.  return v1;
  #L28b25e.  v9:= (`e.e.a.b.f.n.m4`) v9 @kind object;
  #L28b262.  v2:= v8.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b266.  v3:= v9.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b26a.  if v2 != v3 then goto L28b2be;
  #L28b26e.  v3:= v8.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b272.  v4:= v9.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b276.  v5:= 0I;
  #L28b278.  if v5 >= v2 then goto L28b290;
  #L28b27c.  v6:= v3[v5];
  #L28b280.  v7:= v4[v5];
  #L28b284.  if v6 == v7 then goto L28b28a;
  #L28b288.  goto L28b2be;
  #L28b28a.  v5:= v5 + 1;
  #L28b28e.  goto L28b278;
  #L28b290.  v2:= v8.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b294.  v9:= v9.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b298.  v3:= v8.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b29c.  v4:= 0I;
  #L28b29e.  if v4 >= v3 then goto L28b2bc;
  #L28b2a2.  v5:= v2[v4] @kind object;
  #L28b2a6.  v6:= v9[v4] @kind object;
  #L28b2aa.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b2b0.  v5:= temp;
  #L28b2b2.  if v5 == 0 then goto L28b2be;
  #L28b2b6.  v4:= v4 + 1;
  #L28b2ba.  goto L28b29e;
  #L28b2bc.  return v0;
  #L28b2be.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.m4` v8 @kind this) @signature `Le/e/a/b/f/n/m4;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28b37c.  v0:= v8.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b380.  v1:= v0 + 527;
  #L28b384.  v1:= v1 * 31;
  #L28b388.  v2:= v8.`e.e.a.b.f.n.m4.b` @type ^`int`[] @kind object;
  #L28b38c.  v3:= 0I;
  #L28b38e.  v4:= 17I;
  #L28b392.  v5:= 0I;
  #L28b394.  v6:= 17I;
  #L28b398.  if v5 >= v0 then goto L28b3ac;
  #L28b39c.  v6:= v6 * 31;
  #L28b3a0.  v7:= v2[v5];
  #L28b3a4.  v6:= v6 + v7 @kind int;
  #L28b3a6.  v5:= v5 + 1;
  #L28b3aa.  goto L28b398;
  #L28b3ac.  v1:= v1 + v6 @kind int;
  #L28b3ae.  v1:= v1 * 31;
  #L28b3b2.  v0:= v8.`e.e.a.b.f.n.m4.c` @type ^`java.lang.Object`[] @kind object;
  #L28b3b6.  v2:= v8.`e.e.a.b.f.n.m4.a` @type ^`int`;
  #L28b3ba.  if v3 >= v2 then goto L28b3d6;
  #L28b3be.  v4:= v4 * 31;
  #L28b3c2.  v5:= v0[v3] @kind object;
  #L28b3c6.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L28b3cc.  v5:= temp;
  #L28b3ce.  v4:= v4 + v5 @kind int;
  #L28b3d0.  v3:= v3 + 1;
  #L28b3d4.  goto L28b3ba;
  #L28b3d6.  v1:= v1 + v4 @kind int;
  #L28b3d8.  return v1;
}
