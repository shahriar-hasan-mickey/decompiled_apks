record `e.e.a.b.f.n.x0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.n.e0` @kind class {
  `e.e.a.b.f.n.y0` `e.e.a.b.f.n.x0.a` @AccessFlag ;
}
global `java.util.logging.Logger` `@@e.e.a.b.f.n.x0.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.n.x0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@e.e.a.b.f.n.x0.d` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/x0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L27ac20.  v0:= constclass @type ^`e.e.a.b.f.n.x0` @kind object;
  #L27ac24.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L27ac2a.  v0:= temp @kind object;
  #L27ac2c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L27ac32.  v0:= temp @kind object;
  #L27ac34.  `@@e.e.a.b.f.n.x0.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L27ac38.  call temp:= `b`() @signature `Le/e/a/b/f/n/w4;.b:()Z` @kind static;
  #L27ac3e.  v0:= temp;
  #L27ac40.  `@@e.e.a.b.f.n.x0.c` @type ^`boolean` := v0 @kind boolean;
  #L27ac44.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.x0` v0 @kind this) @signature `Le/e/a/b/f/n/x0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27ac58.  call `<init>`(v0) @signature `Le/e/a/b/f/n/e0;.<init>:()V` @kind direct;
  #L27ac5e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.x0` v0 @kind this, `e.e.a.b.f.n.u0` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.<init>:(Le/e/a/b/f/n/u0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L27ac70.  call `<init>`(v0) @signature `Le/e/a/b/f/n/e0;.<init>:()V` @kind direct;
  #L27ac76.  return @kind void;
}
procedure `int` `a`(`int` v2 , `e.e.a.b.f.n.g3` v3 @kind object, `e.e.a.b.f.n.w3` v4 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(ILe/e/a/b/f/n/g3;Le/e/a/b/f/n/w3;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L27aa74.  v2:= v2 ^< 3;
  #L27aa78.  call temp:= `g`(v2) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27aa7e.  v2:= temp;
  #L27aa80.  v2:= v2 + v2 @kind int;
  #L27aa82.  v3:= (`e.e.a.b.f.n.t`) v3 @kind object;
  #L27aa86.  call temp:= `b`(v3) @signature `Le/e/a/b/f/n/t;.b:()I` @kind virtual;
  #L27aa8c.  v0:= temp;
  #L27aa8e.  v1:= -1I;
  #L27aa90.  if v0 != v1 then goto L27aaa2;
  #L27aa94.  call temp:= `e`(v4, v3) @signature `Le/e/a/b/f/n/w3;.e:(Ljava/lang/Object;)I` @kind interface;
  #L27aa9a.  v0:= temp;
  #L27aa9c.  call `a`(v3, v0) @signature `Le/e/a/b/f/n/t;.a:(I)V` @kind virtual;
  #L27aaa2.  v2:= v2 + v0 @kind int;
  #L27aaa4.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.n.g3` v2 @kind object, `e.e.a.b.f.n.w3` v3 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Le/e/a/b/f/n/g3;Le/e/a/b/f/n/w3;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L27aa1c.  v2:= (`e.e.a.b.f.n.t`) v2 @kind object;
  #L27aa20.  call temp:= `b`(v2) @signature `Le/e/a/b/f/n/t;.b:()I` @kind virtual;
  #L27aa26.  v0:= temp;
  #L27aa28.  v1:= -1I;
  #L27aa2a.  if v0 != v1 then goto L27aa3c;
  #L27aa2e.  call temp:= `e`(v3, v2) @signature `Le/e/a/b/f/n/w3;.e:(Ljava/lang/Object;)I` @kind interface;
  #L27aa34.  v0:= temp;
  #L27aa36.  call `a`(v2, v0) @signature `Le/e/a/b/f/n/t;.a:(I)V` @kind virtual;
  #L27aa3c.  call temp:= `g`(v0) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27aa42.  v2:= temp;
  #L27aa44.  v2:= v2 + v0 @kind int;
  #L27aa46.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.n.m2` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Le/e/a/b/f/n/m2;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27a990.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/m2;.a:()I` @kind virtual;
  #L27a996.  v1:= temp;
  #L27a998.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27a99e.  v0:= temp;
  #L27a9a0.  v0:= v0 + v1 @kind int;
  #L27a9a2.  return v0;
}
procedure `int` `a`(`byte`[] v1 @kind object) @signature `Le/e/a/b/f/n/x0;.a:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27a9d8.  v1:= length @variable v1;
  #L27a9da.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27a9e0.  v0:= temp;
  #L27a9e2.  v0:= v0 + v1 @kind int;
  #L27a9e4.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.n.g3` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.b:(Le/e/a/b/f/n/g3;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27a9f8.  call temp:= `m`(v1) @signature `Le/e/a/b/f/n/g3;.m:()I` @kind interface;
  #L27a9fe.  v1:= temp;
  #L27aa00.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27aa06.  v0:= temp;
  #L27aa08.  v0:= v0 + v1 @kind int;
  #L27aa0a.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.n.q0` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.b:(Le/e/a/b/f/n/q0;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27a9b4.  call temp:= `d`(v1) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L27a9ba.  v1:= temp;
  #L27a9bc.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27a9c2.  v0:= temp;
  #L27a9c4.  v0:= v0 + v1 @kind int;
  #L27a9c6.  return v0;
}
procedure `int` `b`(`java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27a94c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/c5;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L27a952.  v1:= temp;
  #L27a954.  goto L27a964;
  #L27a956.  v0:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L27a95a.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L27a960.  v1:= temp @kind object;
  #L27a962.  v1:= length @variable v1;
  #L27a964.  call temp:= `g`(v1) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27a96a.  v0:= temp;
  #L27a96c.  v0:= v0 + v1 @kind int;
  #L27a96e.  return v0;
  catch `e.e.a.b.f.n.a5` @[L27a94c..L27a954] goto L27a956;
}
procedure `e.e.a.b.f.n.x0` `b`(`byte`[] v3 @kind object) @signature `Le/e/a/b/f/n/x0;.b:([B)Le/e/a/b/f/n/x0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L27a92c.  v0:= new `e.e.a.b.f.n.v0`;
  #L27a930.  v1:= length @variable v3;
  #L27a932.  v2:= 0I;
  #L27a934.  call `<init>`(v0, v3, v2, v1) @signature `Le/e/a/b/f/n/v0;.<init>:([BII)V` @kind direct;
  #L27a93a.  return v0 @kind object;
}
procedure `int` `c`(`e.e.a.b.f.n.g3` v0 @kind object) @signature `Le/e/a/b/f/n/x0;.c:(Le/e/a/b/f/n/g3;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L27aab8.  call temp:= `m`(v0) @signature `Le/e/a/b/f/n/g3;.m:()I` @kind interface;
  #L27aabe.  v0:= temp;
  #L27aac0.  return v0;
}
procedure `long` `c`(`long` v3 ) @signature `Le/e/a/b/f/n/x0;.c:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L27abe0.  v0:= v3 + v3 @kind long;
  #L27abe4.  v2:= 63I;
  #L27abe8.  v3:= v3 ^> v2 @kind long;
  #L27abea.  v3:= v3 ^~ v0 @kind long;
  #L27abec.  return v3 @kind wide;
}
procedure `boolean` `c`() @signature `Le/e/a/b/f/n/x0;.c:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L27a914.  v0:= `@@e.e.a.b.f.n.x0.c` @type ^`boolean` @kind boolean;
  #L27a918.  return v0;
}
procedure `int` `d`(`int` v1 ) @signature `Le/e/a/b/f/n/x0;.d:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27aa58.  v0:= v1 + v1 @kind int;
  #L27aa5c.  v1:= v1 ^> 31;
  #L27aa60.  v1:= v1 ^~ v0 @kind int;
  #L27aa62.  return v1;
}
procedure `int` `d`(`long` v7 ) @signature `Le/e/a/b/f/n/x0;.d:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27ab60.  v0:= -128L;
  #L27ab64.  v0:= v0 ^& v7 @kind long;
  #L27ab66.  v2:= 1I;
  #L27ab68.  v3:= 0L;
  #L27ab6c.  v5:= lcmp(v0, v3);
  #L27ab70.  if v5 != 0 then goto L27ab76;
  #L27ab74.  return v2;
  #L27ab76.  v0:= lcmp(v7, v3);
  #L27ab7a.  if v0 >= 0 then goto L27ab84;
  #L27ab7e.  v7:= 10I;
  #L27ab82.  return v7;
  #L27ab84.  v0:= -34359738368L;
  #L27ab8e.  v0:= v0 ^& v7 @kind long;
  #L27ab90.  v5:= lcmp(v0, v3);
  #L27ab94.  if v5 == 0 then goto L27aba2;
  #L27ab98.  v0:= 28I;
  #L27ab9c.  v7:= v7 ^>> v0 @kind long;
  #L27ab9e.  v0:= 6I;
  #L27aba0.  goto L27aba4;
  #L27aba2.  v0:= 2I;
  #L27aba4.  v5:= -2097152L;
  #L27abaa.  v5:= v5 ^& v7 @kind long;
  #L27abac.  v1:= lcmp(v5, v3);
  #L27abb0.  if v1 == 0 then goto L27abbe;
  #L27abb4.  v0:= v0 + 2;
  #L27abb8.  v1:= 14I;
  #L27abbc.  v7:= v7 ^>> v1 @kind long;
  #L27abbe.  v5:= -16384L;
  #L27abc2.  v7:= v7 ^& v5 @kind long;
  #L27abc4.  v1:= lcmp(v7, v3);
  #L27abc8.  if v1 == 0 then goto L27abce;
  #L27abcc.  v0:= v0 + v2 @kind int;
  #L27abce.  return v0;
}
procedure `int` `e`(`int` v0 ) @signature `Le/e/a/b/f/n/x0;.e:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L27aad4.  v0:= v0 ^< 3;
  #L27aad8.  call temp:= `g`(v0) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27aade.  v0:= temp;
  #L27aae0.  return v0;
}
procedure `int` `f`(`int` v0 ) @signature `Le/e/a/b/f/n/x0;.f:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L27aaf4.  if v0 < 0 then goto L27ab02;
  #L27aaf8.  call temp:= `g`(v0) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @kind static;
  #L27aafe.  v0:= temp;
  #L27ab00.  return v0;
  #L27ab02.  v0:= 10I;
  #L27ab06.  return v0;
}
procedure `int` `g`(`int` v1 ) @signature `Le/e/a/b/f/n/x0;.g:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27ab18.  v0:= v1 ^& -128;
  #L27ab1c.  if v0 != 0 then goto L27ab24;
  #L27ab20.  v1:= 1I;
  #L27ab22.  return v1;
  #L27ab24.  v0:= v1 ^& -16384;
  #L27ab28.  if v0 != 0 then goto L27ab30;
  #L27ab2c.  v1:= 2I;
  #L27ab2e.  return v1;
  #L27ab30.  v0:= -2097152I;
  #L27ab34.  v0:= v0 ^& v1 @kind int;
  #L27ab36.  if v0 != 0 then goto L27ab3e;
  #L27ab3a.  v1:= 3I;
  #L27ab3c.  return v1;
  #L27ab3e.  v0:= -268435456I;
  #L27ab42.  v1:= v1 ^& v0 @kind int;
  #L27ab44.  if v1 != 0 then goto L27ab4c;
  #L27ab48.  v1:= 4I;
  #L27ab4a.  return v1;
  #L27ab4c.  v1:= 5I;
  #L27ab4e.  return v1;
}
procedure `void` `a`(`e.e.a.b.f.n.x0` v2 @kind this) @signature `Le/e/a/b/f/n/x0;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L27ac88.  call temp:= `b`(v2) @signature `Le/e/a/b/f/n/x0;.b:()I` @kind virtual;
  #L27ac8e.  v0:= temp;
  #L27ac90.  if v0 != 0 then goto L27ac96;
  #L27ac94.  return @kind void;
  #L27ac96.  v0:= new `java.lang.IllegalStateException`;
  #L27ac9a.  v1:= "Did not write as much data as expected." @kind object;
  #L27ac9e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27aca4.  throw v0;
}
procedure `void` `a`(`byte` v0 ) @signature `Le/e/a/b/f/n/x0;.a:(B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 ) @signature `Le/e/a/b/f/n/x0;.a:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/n/x0;.a:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/n/x0;.a:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `e.e.a.b.f.n.q0` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(ILe/e/a/b/f/n/q0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`int` v0 , `boolean` v1 ) @signature `Le/e/a/b/f/n/x0;.a:(IZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`long` v0 ) @signature `Le/e/a/b/f/n/x0;.a:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.n.g3` v0 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Le/e/a/b/f/n/g3;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.n.q0` v0 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Le/e/a/b/f/n/q0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.n.x0` v6 @kind this, `java.lang.String` v7 @kind object, `e.e.a.b.f.n.a5` v8 @kind object) @signature `Le/e/a/b/f/n/x0;.a:(Ljava/lang/String;Le/e/a/b/f/n/a5;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27acb8.  v0:= `@@e.e.a.b.f.n.x0.b` @type ^`java.util.logging.Logger` @kind object;
  #L27acbc.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L27acc0.  v2:= "com.google.protobuf.CodedOutputStream" @kind object;
  #L27acc4.  v3:= "inefficientWriteStringNoTag" @kind object;
  #L27acc8.  v4:= "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!" @kind object;
  #L27accc.  v5:= v8 @kind object;
  #L27acce.  call `logp`(v0, v1, v2, v3, v4, v5) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L27acd4.  v8:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L27acd8.  call temp:= `getBytes`(v7, v8) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L27acde.  v7:= temp @kind object;
  #L27ace0.  v8:= length @variable v7;
  #L27ace2.  call `b`(v6, v8) @signature `Le/e/a/b/f/n/x0;.b:(I)V` @kind virtual;
  #L27ace8.  v0:= 0I;
  #L27acea.  call `a`(v6, v7, v0, v8) @signature `Le/e/a/b/f/n/x0;.a:([BII)V` @kind virtual;
  #L27acf0.  return @kind void;
  #L27acf2.  v7:= Exception @type ^`e.e.a.b.f.n.w0` @kind object;
  #L27acf4.  throw v7;
  #L27acf6.  v7:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L27acf8.  v8:= new `e.e.a.b.f.n.w0`;
  #L27acfc.  call `<init>`(v8, v7) @signature `Le/e/a/b/f/n/w0;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L27ad02.  throw v8;
  catch `java.lang.IndexOutOfBoundsException` @[L27ace0..L27acf0] goto L27acf6;
  catch `e.e.a.b.f.n.w0` @[L27ace0..L27acf0] goto L27acf2;
}
procedure `void` `a`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/n/x0;.a:([BII)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `b`() @signature `Le/e/a/b/f/n/x0;.b:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`int` v0 ) @signature `Le/e/a/b/f/n/x0;.b:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/n/x0;.b:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/n/x0;.b:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`long` v0 ) @signature `Le/e/a/b/f/n/x0;.b:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`int` v0 ) @signature `Le/e/a/b/f/n/x0;.c:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/n/x0;.c:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/n/x0;.d:(II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
