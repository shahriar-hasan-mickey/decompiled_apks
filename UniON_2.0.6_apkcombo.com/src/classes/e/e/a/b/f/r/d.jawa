record `e.e.a.b.f.r.d` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.r.p1` @kind class {
  `int` `e.e.a.b.f.r.d.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.r.d.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.r.d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/r/d;.<init>:(II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L30ae44.  call `<init>`(v1) @signature `Le/e/a/b/f/r/p1;.<init>:()V` @kind direct;
  #L30ae4a.  v0:= "index" @kind object;
  #L30ae4e.  call temp:= `b`(v3, v2, v0) @signature `Le/e/a/b/f/r/b;.b:(IILjava/lang/String;)I` @kind static;
  #L30ae54.  v1.`e.e.a.b.f.r.d.b` @type ^`int` := v2;
  #L30ae58.  v1.`e.e.a.b.f.r.d.c` @type ^`int` := v3;
  #L30ae5c.  return @kind void;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Le/e/a/b/f/r/d;.a:(I)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.r.d` v2 @kind this) @signature `Le/e/a/b/f/r/d;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30ad4c.  v0:= v2.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30ad50.  v1:= v2.`e.e.a.b.f.r.d.b` @type ^`int`;
  #L30ad54.  if v0 >= v1 then goto L30ad5c;
  #L30ad58.  v0:= 1I;
  #L30ad5a.  return v0;
  #L30ad5c.  v0:= 0I;
  #L30ad5e.  return v0;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.r.d` v1 @kind this) @signature `Le/e/a/b/f/r/d;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30ad70.  v0:= v1.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30ad74.  if v0 <= 0 then goto L30ad7c;
  #L30ad78.  v0:= 1I;
  #L30ad7a.  return v0;
  #L30ad7c.  v0:= 0I;
  #L30ad7e.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.r.d` v2 @kind this) @signature `Le/e/a/b/f/r/d;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30adc4.  call temp:= `hasNext`(v2) @signature `Le/e/a/b/f/r/d;.hasNext:()Z` @kind virtual;
  #L30adca.  v0:= temp;
  #L30adcc.  if v0 == 0 then goto L30ade6;
  #L30add0.  v0:= v2.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30add4.  v1:= v0 + 1;
  #L30add8.  v2.`e.e.a.b.f.r.d.c` @type ^`int` := v1;
  #L30addc.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/r/d;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L30ade2.  v0:= temp @kind object;
  #L30ade4.  return v0 @kind object;
  #L30ade6.  v0:= new `java.util.NoSuchElementException`;
  #L30adea.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L30adf0.  throw v0;
}
procedure `int` `nextIndex`(`e.e.a.b.f.r.d` v1 @kind this) @signature `Le/e/a/b/f/r/d;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30ad90.  v0:= v1.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30ad94.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.r.d` v1 @kind this) @signature `Le/e/a/b/f/r/d;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30ae04.  call temp:= `hasPrevious`(v1) @signature `Le/e/a/b/f/r/d;.hasPrevious:()Z` @kind virtual;
  #L30ae0a.  v0:= temp;
  #L30ae0c.  if v0 == 0 then goto L30ae26;
  #L30ae10.  v0:= v1.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30ae14.  v0:= v0 + -1;
  #L30ae18.  v1.`e.e.a.b.f.r.d.c` @type ^`int` := v0;
  #L30ae1c.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/r/d;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L30ae22.  v0:= temp @kind object;
  #L30ae24.  return v0 @kind object;
  #L30ae26.  v0:= new `java.util.NoSuchElementException`;
  #L30ae2a.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L30ae30.  throw v0;
}
procedure `int` `previousIndex`(`e.e.a.b.f.r.d` v1 @kind this) @signature `Le/e/a/b/f/r/d;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30ada8.  v0:= v1.`e.e.a.b.f.r.d.c` @type ^`int`;
  #L30adac.  v0:= v0 + -1;
  #L30adb0.  return v0;
}
