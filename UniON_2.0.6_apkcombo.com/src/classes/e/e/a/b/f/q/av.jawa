record `e.e.a.b.f.q.av` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.fv` @kind class {
  `int` `e.e.a.b.f.q.av.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.av` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/av;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30a180.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/fv;.<init>:([B)V` @kind direct;
  #L30a186.  v1:= length @variable v1;
  #L30a188.  v2:= 0I;
  #L30a18a.  call temp:= `b`(v2, v3, v1) @signature `Le/e/a/b/f/q/hv;.b:(III)I` @kind static;
  #L30a190.  v0.`e.e.a.b.f.q.av.e` @type ^`int` := v3;
  #L30a194.  return @kind void;
}
procedure `byte` `a`(`e.e.a.b.f.q.av` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/q/av;.a:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30a094.  v0:= v4.`e.e.a.b.f.q.av.e` @type ^`int`;
  #L30a098.  v1:= v5 + 1;
  #L30a09c.  v1:= v0 - v1 @kind int;
  #L30a0a0.  v1:= v1 ^| v5 @kind int;
  #L30a0a2.  if v1 >= 0 then goto L30a11e;
  #L30a0a6.  if v5 >= 0 then goto L30a0dc;
  #L30a0aa.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L30a0ae.  v1:= new `java.lang.StringBuilder`;
  #L30a0b2.  v2:= 22I;
  #L30a0b6.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30a0bc.  v2:= "Index < 0: " @kind object;
  #L30a0c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a0c6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a0cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30a0d2.  v5:= temp @kind object;
  #L30a0d4.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a0da.  throw v0;
  #L30a0dc.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L30a0e0.  v2:= new `java.lang.StringBuilder`;
  #L30a0e4.  v3:= 40I;
  #L30a0e8.  call `<init>`(v2, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30a0ee.  v3:= "Index > length: " @kind object;
  #L30a0f2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a0f8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a0fe.  v5:= ", " @kind object;
  #L30a102.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a108.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a10e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30a114.  v5:= temp @kind object;
  #L30a116.  call `<init>`(v1, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a11c.  throw v1;
  #L30a11e.  v0:= v4.`e.e.a.b.f.q.fv.d` @type ^`byte`[] @kind object;
  #L30a122.  v5:= v0[v5] @kind byte;
  #L30a126.  return v5;
}
procedure `byte` `b`(`e.e.a.b.f.q.av` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/q/av;.b:(I)B` @AccessFlag FINAL {
    temp;
    v0;

  #L30a138.  v0:= v1.`e.e.a.b.f.q.fv.d` @type ^`byte`[] @kind object;
  #L30a13c.  v2:= v0[v2] @kind byte;
  #L30a140.  return v2;
}
procedure `int` `c`(`e.e.a.b.f.q.av` v1 @kind this) @signature `Le/e/a/b/f/q/av;.c:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L30a16c.  v0:= 0I;
  #L30a16e.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.q.av` v1 @kind this) @signature `Le/e/a/b/f/q/av;.d:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30a154.  v0:= v1.`e.e.a.b.f.q.av.e` @type ^`int`;
  #L30a158.  return v0;
}
