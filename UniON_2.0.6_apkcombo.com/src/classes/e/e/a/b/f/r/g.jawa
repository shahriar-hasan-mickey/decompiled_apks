record `e.e.a.b.f.r.g` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.r.g.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.r.g.c` @AccessFlag ;
  `e.e.a.b.f.r.h` `e.e.a.b.f.r.g.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.g` v0 @kind this, `e.e.a.b.f.r.h` v1 @kind object) @signature `Le/e/a/b/f/r/g;.<init>:(Le/e/a/b/f/r/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30b020.  v0.`e.e.a.b.f.r.g.d` @type ^`e.e.a.b.f.r.h` := v1 @kind object;
  #L30b024.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30b02a.  v1:= v0.`e.e.a.b.f.r.g.d` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30b02e.  v1:= v1.`e.e.a.b.f.r.h.d` @type ^`java.util.Map` @kind object;
  #L30b032.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L30b038.  v1:= temp @kind object;
  #L30b03a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30b040.  v1:= temp @kind object;
  #L30b042.  v0.`e.e.a.b.f.r.g.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L30b046.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.r.g` v1 @kind this) @signature `Le/e/a/b/f/r/g;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30afa0.  v0:= v1.`e.e.a.b.f.r.g.b` @type ^`java.util.Iterator` @kind object;
  #L30afa4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30afaa.  v0:= temp;
  #L30afac.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.r.g` v3 @kind this) @signature `Le/e/a/b/f/r/g;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L30afc0.  v0:= v3.`e.e.a.b.f.r.g.b` @type ^`java.util.Iterator` @kind object;
  #L30afc4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30afca.  v0:= temp @kind object;
  #L30afcc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L30afd0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30afd6.  v1:= temp @kind object;
  #L30afd8.  v1:= (`java.util.Collection`) v1 @kind object;
  #L30afdc.  v3.`e.e.a.b.f.r.g.c` @type ^`java.util.Collection` := v1 @kind object;
  #L30afe0.  v1:= v3.`e.e.a.b.f.r.g.d` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30afe4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30afea.  v2:= temp @kind object;
  #L30afec.  v1:= v1.`e.e.a.b.f.r.h.e` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30aff0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30aff6.  v0:= temp @kind object;
  #L30aff8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L30affc.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/r/p;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L30b002.  v0:= temp @kind object;
  #L30b004.  v1:= new `e.e.a.b.f.r.j0`;
  #L30b008.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/r/j0;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L30b00e.  return v1 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.r.g` v2 @kind this) @signature `Le/e/a/b/f/r/g;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30b058.  v0:= v2.`e.e.a.b.f.r.g.c` @type ^`java.util.Collection` @kind object;
  #L30b05c.  if v0 == 0 then goto L30b064;
  #L30b060.  v0:= 1I;
  #L30b062.  goto L30b066;
  #L30b064.  v0:= 0I;
  #L30b066.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L30b06a.  call `a`(v0, v1) @signature `Le/e/a/b/f/r/b;.a:(ZLjava/lang/Object;)V` @kind static;
  #L30b070.  v0:= v2.`e.e.a.b.f.r.g.b` @type ^`java.util.Iterator` @kind object;
  #L30b074.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L30b07a.  v0:= v2.`e.e.a.b.f.r.g.d` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30b07e.  v0:= v0.`e.e.a.b.f.r.h.e` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b082.  v1:= v2.`e.e.a.b.f.r.g.c` @type ^`java.util.Collection` @kind object;
  #L30b086.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b08c.  v1:= temp;
  #L30b08e.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/r/p;.b:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b094.  v0:= v2.`e.e.a.b.f.r.g.c` @type ^`java.util.Collection` @kind object;
  #L30b098.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L30b09e.  v0:= 0I;
  #L30b0a0.  v2.`e.e.a.b.f.r.g.c` @type ^`java.util.Collection` := v0 @kind object;
  #L30b0a4.  return @kind void;
}
