record `e.e.a.b.f.k.ab` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `e.e.a.b.f.k.x7` `a`(`int` v2 , `int` v3 ) @signature `Le/e/a/b/f/k/ab;.a:(II)Le/e/a/b/f/k/x7;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L254478.  v0:= new `e.e.a.b.f.k.v7`;
  #L25447c.  call `<init>`(v0) @signature `Le/e/a/b/f/k/v7;.<init>:()V` @kind direct;
  #L254482.  v1:= -1I;
  #L254484.  if v2 == v1 then goto L2544c8;
  #L254488.  v1:= 35I;
  #L25448c.  if v2 == v1 then goto L2544c2;
  #L254490.  v1:= 842094169I;
  #L254496.  if v2 == v1 then goto L2544bc;
  #L25449a.  v1:= 16I;
  #L25449e.  if v2 == v1 then goto L2544b6;
  #L2544a2.  v1:= 17I;
  #L2544a6.  if v2 == v1 then goto L2544b0;
  #L2544aa.  v2:= `@@e.e.a.b.f.k.w7.c` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544ae.  goto L2544cc;
  #L2544b0.  v2:= `@@e.e.a.b.f.k.w7.e` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544b4.  goto L2544cc;
  #L2544b6.  v2:= `@@e.e.a.b.f.k.w7.d` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544ba.  goto L2544cc;
  #L2544bc.  v2:= `@@e.e.a.b.f.k.w7.f` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544c0.  goto L2544cc;
  #L2544c2.  v2:= `@@e.e.a.b.f.k.w7.g` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544c6.  goto L2544cc;
  #L2544c8.  v2:= `@@e.e.a.b.f.k.w7.i` @type ^`e.e.a.b.f.k.w7` @kind object;
  #L2544cc.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/k/v7;.a:(Le/e/a/b/f/k/w7;)Le/e/a/b/f/k/v7;` @kind virtual;
  #L2544d2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2544d8.  v2:= temp @kind object;
  #L2544da.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/k/v7;.a:(Ljava/lang/Integer;)Le/e/a/b/f/k/v7;` @kind virtual;
  #L2544e0.  call temp:= `a`(v0) @signature `Le/e/a/b/f/k/v7;.a:()Le/e/a/b/f/k/x7;` @kind virtual;
  #L2544e6.  v2:= temp @kind object;
  #L2544e8.  return v2 @kind object;
}
