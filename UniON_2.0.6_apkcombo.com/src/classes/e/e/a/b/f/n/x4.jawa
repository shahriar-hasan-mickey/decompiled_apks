record `e.e.a.b.f.n.x4` @kind class @AccessFlag FINAL {
}
procedure `void` `a`(`byte` v2 , `byte` v3 , `byte` v4 , `byte` v5 , `char`[] v6 @kind object, `int` v7 ) @signature `Le/e/a/b/f/n/x4;.a:(BBBB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28d074.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28d07a.  v0:= temp;
  #L28d07c.  if v0 != 0 then goto L28d0f6;
  #L28d080.  v0:= v2 ^< 28;
  #L28d084.  v1:= v3 + 112;
  #L28d088.  v0:= v0 + v1 @kind int;
  #L28d08a.  v0:= v0 ^> 30;
  #L28d08e.  if v0 != 0 then goto L28d0f6;
  #L28d092.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28d098.  v0:= temp;
  #L28d09a.  if v0 != 0 then goto L28d0f6;
  #L28d09e.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28d0a4.  v0:= temp;
  #L28d0a6.  if v0 != 0 then goto L28d0f6;
  #L28d0aa.  v2:= v2 ^& 7;
  #L28d0ae.  v2:= v2 ^< 18;
  #L28d0b2.  v3:= v3 ^& 63;
  #L28d0b6.  v3:= v3 ^< 12;
  #L28d0ba.  v2:= v2 ^| v3 @kind int;
  #L28d0bc.  v3:= v4 ^& 63;
  #L28d0c0.  v3:= v3 ^< 6;
  #L28d0c4.  v2:= v2 ^| v3 @kind int;
  #L28d0c6.  v3:= v5 ^& 63;
  #L28d0ca.  v2:= v2 ^| v3 @kind int;
  #L28d0cc.  v3:= v2 ^>> 10;
  #L28d0d0.  v4:= 55232I;
  #L28d0d6.  v3:= v3 + v4 @kind int;
  #L28d0d8.  v3:= (`char`) v3 @kind i2c;
  #L28d0da.  v6[v7]:= v3 @kind char;
  #L28d0de.  v7:= v7 + 1;
  #L28d0e2.  v2:= v2 ^& 1023;
  #L28d0e6.  v3:= 56320I;
  #L28d0ec.  v2:= v2 + v3 @kind int;
  #L28d0ee.  v2:= (`char`) v2 @kind i2c;
  #L28d0f0.  v6[v7]:= v2 @kind char;
  #L28d0f4.  return @kind void;
  #L28d0f6.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28d0fc.  v2:= temp @kind object;
  #L28d0fe.  throw v2;
}
procedure `void` `a`(`byte` v2 , `byte` v3 , `byte` v4 , `char`[] v5 @kind object, `int` v6 ) @signature `Le/e/a/b/f/n/x4;.a:(BBB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28cffc.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28d002.  v0:= temp;
  #L28d004.  if v0 != 0 then goto L28d058;
  #L28d008.  v0:= -96I;
  #L28d00c.  v1:= -32I;
  #L28d010.  if v2 != v1 then goto L28d01c;
  #L28d014.  if v3 < v0 then goto L28d058;
  #L28d018.  v2:= -32I;
  #L28d01c.  v1:= -19I;
  #L28d020.  if v2 != v1 then goto L28d02c;
  #L28d024.  if v3 >= v0 then goto L28d058;
  #L28d028.  v2:= -19I;
  #L28d02c.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28d032.  v0:= temp;
  #L28d034.  if v0 != 0 then goto L28d058;
  #L28d038.  v2:= v2 ^& 15;
  #L28d03c.  v2:= v2 ^< 12;
  #L28d040.  v3:= v3 ^& 63;
  #L28d044.  v3:= v3 ^< 6;
  #L28d048.  v2:= v2 ^| v3 @kind int;
  #L28d04a.  v3:= v4 ^& 63;
  #L28d04e.  v2:= v2 ^| v3 @kind int;
  #L28d050.  v2:= (`char`) v2 @kind i2c;
  #L28d052.  v5[v6]:= v2 @kind char;
  #L28d056.  return @kind void;
  #L28d058.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28d05e.  v2:= temp @kind object;
  #L28d060.  throw v2;
}
procedure `void` `a`(`byte` v1 , `byte` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/n/x4;.a:(BB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28cfb8.  v0:= -62I;
  #L28cfbc.  if v1 < v0 then goto L28cfe2;
  #L28cfc0.  call temp:= `d`(v2) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @kind static;
  #L28cfc6.  v0:= temp;
  #L28cfc8.  if v0 != 0 then goto L28cfe2;
  #L28cfcc.  v1:= v1 ^& 31;
  #L28cfd0.  v1:= v1 ^< 6;
  #L28cfd4.  v2:= v2 ^& 63;
  #L28cfd8.  v1:= v1 ^| v2 @kind int;
  #L28cfda.  v1:= (`char`) v1 @kind i2c;
  #L28cfdc.  v3[v4]:= v1 @kind char;
  #L28cfe0.  return @kind void;
  #L28cfe2.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28cfe8.  v1:= temp @kind object;
  #L28cfea.  throw v1;
}
procedure `boolean` `a`(`byte` v0 ) @signature `Le/e/a/b/f/n/x4;.a:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28cf3c.  if v0 < 0 then goto L28cf44;
  #L28cf40.  v0:= 1I;
  #L28cf42.  return v0;
  #L28cf44.  v0:= 0I;
  #L28cf46.  return v0;
}
procedure `boolean` `b`(`byte` v1 ) @signature `Le/e/a/b/f/n/x4;.b:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28cf58.  v0:= -32I;
  #L28cf5c.  if v1 >= v0 then goto L28cf64;
  #L28cf60.  v1:= 1I;
  #L28cf62.  return v1;
  #L28cf64.  v1:= 0I;
  #L28cf66.  return v1;
}
procedure `boolean` `c`(`byte` v1 ) @signature `Le/e/a/b/f/n/x4;.c:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28cf78.  v0:= -16I;
  #L28cf7c.  if v1 >= v0 then goto L28cf84;
  #L28cf80.  v1:= 1I;
  #L28cf82.  return v1;
  #L28cf84.  v1:= 0I;
  #L28cf86.  return v1;
}
procedure `boolean` `d`(`byte` v1 ) @signature `Le/e/a/b/f/n/x4;.d:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L28cf98.  v0:= -65I;
  #L28cf9c.  if v1 <= v0 then goto L28cfa4;
  #L28cfa0.  v1:= 1I;
  #L28cfa2.  return v1;
  #L28cfa4.  v1:= 0I;
  #L28cfa6.  return v1;
}
