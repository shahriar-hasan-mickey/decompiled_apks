record `e.e.a.b.f.m.o0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.m.i0` @kind class, `java.util.Set` @kind interface {
  `e.e.a.b.f.m.n0` `e.e.a.b.f.m.o0.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.m.o0` v0 @kind this) @signature `Le/e/a/b/f/m/o0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L267488.  call `<init>`(v0) @signature `Le/e/a/b/f/m/i0;.<init>:()V` @kind direct;
  #L26748e.  return @kind void;
}
procedure `e.e.a.b.f.m.o0` `a`(`int` v13 , `java.lang.Object`[] v14 @kind object) @signature `Le/e/a/b/f/m/o0;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/m/o0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2672c4.  if v13 == 0 then goto L2673a0;
  #L2672c8.  v0:= 0I;
  #L2672ca.  v1:= 1I;
  #L2672cc.  if v13 == v1 then goto L267390;
  #L2672d0.  call temp:= `d`(v13) @signature `Le/e/a/b/f/m/o0;.d:(I)I` @kind static;
  #L2672d6.  v2:= temp;
  #L2672d8.  v6:= new `java.lang.Object`[v2];
  #L2672dc.  v7:= v2 + -1;
  #L2672e0.  v3:= 0I;
  #L2672e2.  v5:= 0I;
  #L2672e4.  v8:= 0I;
  #L2672e6.  if v3 >= v13 then goto L26733a;
  #L2672ea.  v4:= v14[v3] @kind object;
  #L2672ee.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/m/a1;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L2672f4.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2672fa.  v9:= temp;
  #L2672fc.  call temp:= `a`(v9) @signature `Le/e/a/b/f/m/f0;.a:(I)I` @kind static;
  #L267302.  v10:= temp;
  #L267304.  v11:= v10 ^& v7 @kind int;
  #L267308.  v12:= v6[v11] @kind object;
  #L26730c.  if v12 != 0 then goto L267322;
  #L267310.  v10:= v8 + 1;
  #L267314.  v14[v8]:= v4 @kind object;
  #L267318.  v6[v11]:= v4 @kind object;
  #L26731c.  v5:= v5 + v9 @kind int;
  #L26731e.  v8:= v10;
  #L267320.  goto L26732e;
  #L267322.  call temp:= `equals`(v12, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L267328.  v11:= temp;
  #L26732a.  if v11 == 0 then goto L267334;
  #L26732e.  v3:= v3 + 1;
  #L267332.  goto L2672e6;
  #L267334.  v10:= v10 + 1;
  #L267338.  goto L267304;
  #L26733a.  v3:= 0I;
  #L26733c.  call `fill`(v14, v8, v13, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L267342.  if v8 != v1 then goto L267356;
  #L267346.  v13:= v14[v0] @kind object;
  #L26734a.  v14:= new `e.e.a.b.f.m.g1`;
  #L26734e.  call `<init>`(v14, v13, v5) @signature `Le/e/a/b/f/m/g1;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L267354.  return v14 @kind object;
  #L267356.  call temp:= `d`(v8) @signature `Le/e/a/b/f/m/o0;.d:(I)I` @kind static;
  #L26735c.  v13:= temp;
  #L26735e.  v2:= v2 / 2;
  #L267362.  if v13 < v2 then goto L267386;
  #L267366.  v13:= 13I;
  #L26736a.  if v8 >= v13 then goto L267376;
  #L26736e.  call temp:= `copyOf`(v14, v8) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L267374.  v14:= temp @kind object;
  #L267376.  v4:= v14 @kind object;
  #L267378.  v13:= new `e.e.a.b.f.m.d1`;
  #L26737c.  v3:= v13 @kind object;
  #L26737e.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/m/d1;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L267384.  return v13 @kind object;
  #L267386.  call temp:= `a`(v8, v14) @signature `Le/e/a/b/f/m/o0;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/m/o0;` @kind static;
  #L26738c.  v13:= temp @kind object;
  #L26738e.  return v13 @kind object;
  #L267390.  v13:= v14[v0] @kind object;
  #L267394.  v14:= new `e.e.a.b.f.m.g1`;
  #L267398.  call `<init>`(v14, v13) @signature `Le/e/a/b/f/m/g1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L26739e.  return v14 @kind object;
  #L2673a0.  v13:= `@@e.e.a.b.f.m.d1.i` @type ^`e.e.a.b.f.m.d1` @kind object;
  #L2673a4.  return v13 @kind object;
}
procedure `e.e.a.b.f.m.o0` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Le/e/a/b/f/m/o0;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Le/e/a/b/f/m/o0;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L267258.  v0:= 19I;
  #L26725c.  v1:= new `java.lang.Object`[v0];
  #L267260.  v2:= 0I;
  #L267262.  v3:= "common" @kind object;
  #L267266.  v1[v2]:= v3 @kind object;
  #L26726a.  v3:= 1I;
  #L26726c.  v4:= "vision-common" @kind object;
  #L267270.  v1[v3]:= v4 @kind object;
  #L267274.  v3:= 2I;
  #L267276.  v4:= "play-services-mlkit-barcode-scanning" @kind object;
  #L26727a.  v1[v3]:= v4 @kind object;
  #L26727e.  v3:= 3I;
  #L267280.  v4:= "barcode-scanning" @kind object;
  #L267284.  v1[v3]:= v4 @kind object;
  #L267288.  v3:= 4I;
  #L26728a.  v4:= "play-services-mlkit-face-detection" @kind object;
  #L26728e.  v1[v3]:= v4 @kind object;
  #L267292.  v3:= 5I;
  #L267294.  v4:= "face-detection" @kind object;
  #L267298.  v1[v3]:= v4 @kind object;
  #L26729c.  v3:= 6I;
  #L26729e.  v4:= 13I;
  #L2672a2.  call `arraycopy`(v6, v2, v1, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2672a8.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/m/o0;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/m/o0;` @kind static;
  #L2672ae.  v0:= temp @kind object;
  #L2672b0.  return v0 @kind object;
}
procedure `int` `d`(`int` v6 ) @signature `Le/e/a/b/f/m/o0;.d:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L267400.  v0:= 2I;
  #L267402.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L267408.  v6:= temp;
  #L26740a.  v0:= 751619276I;
  #L267410.  if v6 >= v0 then goto L267440;
  #L267414.  v0:= v6 + -1;
  #L267418.  call temp:= `highestOneBit`(v0) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L26741e.  v0:= temp;
  #L267420.  v0:= v0 + v0 @kind int;
  #L267422.  v1:= (`double`) v0 @kind i2d;
  #L267424.  v3:= 0.7D;
  #L26742e.  v1:= v1 * v3 @kind double;
  #L267432.  v3:= (`double`) v6 @kind i2d;
  #L267434.  v5:= dcmpg(v1, v3);
  #L267438.  if v5 >= 0 then goto L26743e;
  #L26743c.  goto L267420;
  #L26743e.  return v0;
  #L267440.  v0:= 2.0F;
  #L267444.  if v6 >= v0 then goto L26744a;
  #L267448.  return v0;
  #L26744a.  v6:= new `java.lang.IllegalArgumentException`;
  #L26744e.  v0:= "collection too large" @kind object;
  #L267452.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L267458.  throw v6;
}
procedure `e.e.a.b.f.m.n0` `e`(`e.e.a.b.f.m.o0` v1 @kind this) @signature `Le/e/a/b/f/m/o0;.e:()Le/e/a/b/f/m/n0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L26721c.  v0:= v1.`e.e.a.b.f.m.o0.c` @type ^`e.e.a.b.f.m.n0` @kind object;
  #L267220.  if v0 != 0 then goto L267230;
  #L267224.  call temp:= `f`(v1) @signature `Le/e/a/b/f/m/o0;.f:()Le/e/a/b/f/m/n0;` @kind virtual;
  #L26722a.  v0:= temp @kind object;
  #L26722c.  v1.`e.e.a.b.f.m.o0.c` @type ^`e.e.a.b.f.m.n0` := v0 @kind object;
  #L267230.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.m.o0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/m/o0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L267164.  v0:= 1I;
  #L267166.  if v5 != v4 then goto L26716c;
  #L26716a.  return v0;
  #L26716c.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.m.o0` @kind boolean;
  #L267170.  v2:= 0I;
  #L267172.  if v1 == 0 then goto L2671ac;
  #L267176.  call temp:= `v`(v4) @signature `Le/e/a/b/f/m/o0;.v:()Z` @kind virtual;
  #L26717c.  v1:= temp;
  #L26717e.  if v1 == 0 then goto L2671ac;
  #L267182.  v1:= v5 @kind object;
  #L267184.  v1:= (`e.e.a.b.f.m.o0`) v1 @kind object;
  #L267188.  call temp:= `v`(v1) @signature `Le/e/a/b/f/m/o0;.v:()Z` @kind virtual;
  #L26718e.  v1:= temp;
  #L267190.  if v1 == 0 then goto L2671ac;
  #L267194.  call temp:= `hashCode`(v4) @signature `Le/e/a/b/f/m/o0;.hashCode:()I` @kind virtual;
  #L26719a.  v1:= temp;
  #L26719c.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2671a2.  v3:= temp;
  #L2671a4.  if v1 != v3 then goto L2671aa;
  #L2671a8.  goto L2671ac;
  #L2671aa.  return v2;
  #L2671ac.  if v5 != v4 then goto L2671b4;
  #L2671b0.  v2:= 1I;
  #L2671b2.  goto L2671e4;
  #L2671b4.  v1:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L2671b8.  if v1 == 0 then goto L2671e4;
  #L2671bc.  v5:= (`java.util.Set`) v5 @kind object;
  #L2671c0.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2671c6.  v1:= temp;
  #L2671c8.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L2671ce.  v3:= temp;
  #L2671d0.  if v1 != v3 then goto L2671e4;
  #L2671d4.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2671da.  v5:= temp;
  #L2671dc.  if v5 != 0 then goto L2671e2;
  #L2671e0.  goto L2671e4;
  #L2671e2.  return v0;
  #L2671e4.  return v2;
  catch `java.lang.NullPointerException` @[L2671c0..L2671dc] goto L2671e4;
  catch `java.lang.ClassCastException` @[L2671c0..L2671dc] goto L2671e4;
}
procedure `e.e.a.b.f.m.n0` `f`(`e.e.a.b.f.m.o0` v1 @kind this) @signature `Le/e/a/b/f/m/o0;.f:()Le/e/a/b/f/m/n0;` @AccessFlag  {
    temp;
    v0;

  #L267244.  v0:= 0I;
  #L267246.  throw v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.m.o0` v4 @kind this) @signature `Le/e/a/b/f/m/o0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2673b8.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2673be.  v0:= temp @kind object;
  #L2673c0.  v1:= 0I;
  #L2673c2.  v2:= 0I;
  #L2673c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2673ca.  v3:= temp;
  #L2673cc.  if v3 == 0 then goto L2673ec;
  #L2673d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2673d6.  v3:= temp @kind object;
  #L2673d8.  if v3 == 0 then goto L2673e6;
  #L2673dc.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2673e2.  v3:= temp;
  #L2673e4.  goto L2673e8;
  #L2673e6.  v3:= 0I;
  #L2673e8.  v2:= v2 + v3 @kind int;
  #L2673ea.  goto L2673c4;
  #L2673ec.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.o0` v1 @kind this) @signature `Le/e/a/b/f/m/o0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L26746c.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/m/o0;.zza:()Le/e/a/b/f/m/i1;` @kind virtual;
  #L267472.  v0:= temp @kind object;
  #L267474.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.m.o0` v1 @kind this) @signature `Le/e/a/b/f/m/o0;.v:()Z` @AccessFlag  {
    temp;
    v0;

  #L267208.  v0:= 0I;
  #L26720a.  throw v0;
}
procedure `e.e.a.b.f.m.i1` `zza`() @signature `Le/e/a/b/f/m/o0;.zza:()Le/e/a/b/f/m/i1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
