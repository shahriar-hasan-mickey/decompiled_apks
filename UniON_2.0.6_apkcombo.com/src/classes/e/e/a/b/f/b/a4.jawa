record `e.e.a.b.f.b.a4` @kind class @AccessFlag FINAL {
}
global `java.util.logging.Logger` `@@e.e.a.b.f.b.a4.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `sun.misc.Unsafe` `@@e.e.a.b.f.b.a4.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Class` `@@e.e.a.b.f.b.a4.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.b.a4.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.b.a4.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.b.a4$d` `@@e.e.a.b.f.b.a4.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.b.a4.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.b.a4.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@e.e.a.b.f.b.a4.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@e.e.a.b.f.b.a4.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@e.e.a.b.f.b.a4.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/a4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L20f9f4.  v0:= constclass @type ^`java.lang.Object`[] @kind object;
  #L20f9f8.  v1:= constclass @type ^`double`[] @kind object;
  #L20f9fc.  v2:= constclass @type ^`float`[] @kind object;
  #L20fa00.  v3:= constclass @type ^`long`[] @kind object;
  #L20fa04.  v4:= constclass @type ^`int`[] @kind object;
  #L20fa08.  v5:= constclass @type ^`boolean`[] @kind object;
  #L20fa0c.  v6:= constclass @type ^`e.e.a.b.f.b.a4` @kind object;
  #L20fa10.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20fa16.  v6:= temp @kind object;
  #L20fa18.  call temp:= `getLogger`(v6) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L20fa1e.  v6:= temp @kind object;
  #L20fa20.  `@@e.e.a.b.f.b.a4.a` @type ^`java.util.logging.Logger` := v6 @kind object;
  #L20fa24.  call temp:= `d`() @signature `Le/e/a/b/f/b/a4;.d:()Lsun/misc/Unsafe;` @kind static;
  #L20fa2a.  v6:= temp @kind object;
  #L20fa2c.  `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` := v6 @kind object;
  #L20fa30.  call temp:= `b`() @signature `Le/e/a/b/f/b/u;.b:()Ljava/lang/Class;` @kind static;
  #L20fa36.  v6:= temp @kind object;
  #L20fa38.  `@@e.e.a.b.f.b.a4.c` @type ^`java.lang.Class` := v6 @kind object;
  #L20fa3c.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20fa40.  call temp:= `c`(v6) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Class;)Z` @kind static;
  #L20fa46.  v6:= temp;
  #L20fa48.  `@@e.e.a.b.f.b.a4.d` @type ^`boolean` := v6 @kind boolean;
  #L20fa4c.  v6:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20fa50.  call temp:= `c`(v6) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Class;)Z` @kind static;
  #L20fa56.  v6:= temp;
  #L20fa58.  `@@e.e.a.b.f.b.a4.e` @type ^`boolean` := v6 @kind boolean;
  #L20fa5c.  v6:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20fa60.  v7:= 0I;
  #L20fa62.  if v6 != 0 then goto L20fa6a;
  #L20fa66.  v6:= v7 @kind object;
  #L20fa68.  goto L20fab4;
  #L20fa6a.  call temp:= `a`() @signature `Le/e/a/b/f/b/u;.a:()Z` @kind static;
  #L20fa70.  v6:= temp;
  #L20fa72.  if v6 == 0 then goto L20faa6;
  #L20fa76.  v6:= `@@e.e.a.b.f.b.a4.d` @type ^`boolean` @kind boolean;
  #L20fa7a.  if v6 == 0 then goto L20fa8e;
  #L20fa7e.  v6:= new `e.e.a.b.f.b.a4$b`;
  #L20fa82.  v8:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20fa86.  call `<init>`(v6, v8) @signature `Le/e/a/b/f/b/a4$b;.<init>:(Lsun/misc/Unsafe;)V` @kind direct;
  #L20fa8c.  goto L20fab4;
  #L20fa8e.  v6:= `@@e.e.a.b.f.b.a4.e` @type ^`boolean` @kind boolean;
  #L20fa92.  if v6 == 0 then goto L20fa66;
  #L20fa96.  v6:= new `e.e.a.b.f.b.a4$a`;
  #L20fa9a.  v8:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20fa9e.  call `<init>`(v6, v8) @signature `Le/e/a/b/f/b/a4$a;.<init>:(Lsun/misc/Unsafe;)V` @kind direct;
  #L20faa4.  goto L20fab4;
  #L20faa6.  v6:= new `e.e.a.b.f.b.a4$c`;
  #L20faaa.  v8:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20faae.  call `<init>`(v6, v8) @signature `Le/e/a/b/f/b/a4$c;.<init>:(Lsun/misc/Unsafe;)V` @kind direct;
  #L20fab4.  `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` := v6 @kind object;
  #L20fab8.  call temp:= `f`() @signature `Le/e/a/b/f/b/a4;.f:()Z` @kind static;
  #L20fabe.  v6:= temp;
  #L20fac0.  `@@e.e.a.b.f.b.a4.g` @type ^`boolean` := v6 @kind boolean;
  #L20fac4.  call temp:= `e`() @signature `Le/e/a/b/f/b/a4;.e:()Z` @kind static;
  #L20faca.  v6:= temp;
  #L20facc.  `@@e.e.a.b.f.b.a4.h` @type ^`boolean` := v6 @kind boolean;
  #L20fad0.  v6:= constclass @type ^`byte`[] @kind object;
  #L20fad4.  call temp:= `a`(v6) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fada.  v6:= temp;
  #L20fadc.  v8:= (`long`) v6 @kind i2l;
  #L20fade.  `@@e.e.a.b.f.b.a4.i` @type ^`long` := v8 @kind wide;
  #L20fae2.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fae8.  call temp:= `b`(v5) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20faee.  call temp:= `a`(v4) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20faf4.  call temp:= `b`(v4) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20fafa.  call temp:= `a`(v3) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fb00.  call temp:= `b`(v3) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20fb06.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fb0c.  call temp:= `b`(v2) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20fb12.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fb18.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20fb1e.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @kind static;
  #L20fb24.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @kind static;
  #L20fb2a.  call temp:= `g`() @signature `Le/e/a/b/f/b/a4;.g:()Ljava/lang/reflect/Field;` @kind static;
  #L20fb30.  v0:= temp @kind object;
  #L20fb32.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/reflect/Field;)J` @kind static;
  #L20fb38.  v0:= temp @kind wide;
  #L20fb3a.  `@@e.e.a.b.f.b.a4.j` @type ^`long` := v0 @kind wide;
  #L20fb3e.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L20fb42.  v1:= "value" @kind object;
  #L20fb46.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20fb4c.  v0:= temp @kind object;
  #L20fb4e.  if v0 == 0 then goto L20fb64;
  #L20fb52.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L20fb58.  v1:= temp @kind object;
  #L20fb5a.  v2:= constclass @type ^`char`[] @kind object;
  #L20fb5e.  if v1 != v2 then goto L20fb64;
  #L20fb62.  goto L20fb66;
  #L20fb64.  v0:= v7 @kind object;
  #L20fb66.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/reflect/Field;)J` @kind static;
  #L20fb6c.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L20fb72.  v0:= temp @kind object;
  #L20fb74.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L20fb78.  if v0 != v1 then goto L20fb80;
  #L20fb7c.  v0:= 1I;
  #L20fb7e.  goto L20fb82;
  #L20fb80.  v0:= 0I;
  #L20fb82.  `@@e.e.a.b.f.b.a4.k` @type ^`boolean` := v0 @kind boolean;
  #L20fb86.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.a4` v0 @kind this) @signature `Le/e/a/b/f/b/a4;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L20fb98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20fb9e.  return @kind void;
}
procedure `byte` `a`(`byte`[] v3 @kind object, `long` v4 ) @signature `Le/e/a/b/f/b/a4;.a:([BJ)B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20f6dc.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f6e0.  v1:= `@@e.e.a.b.f.b.a4.i` @type ^`long` @kind wide;
  #L20f6e4.  v1:= v1 + v4 @kind long;
  #L20f6e6.  call temp:= `f`(v0, v3, v1) @signature `Le/e/a/b/f/b/a4$d;.f:(Ljava/lang/Object;J)B` @kind virtual;
  #L20f6ec.  v3:= temp;
  #L20f6ee.  return v3;
}
procedure `int` `a`(`java.lang.Class` v1 @kind object) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20f7dc.  v0:= `@@e.e.a.b.f.b.a4.h` @type ^`boolean` @kind boolean;
  #L20f7e0.  if v0 == 0 then goto L20f7f6;
  #L20f7e4.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f7e8.  v0:= v0.`e.e.a.b.f.b.a4$d.a` @type ^`sun.misc.Unsafe` @kind object;
  #L20f7ec.  call temp:= `arrayBaseOffset`(v0, v1) @signature `Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I` @kind virtual;
  #L20f7f2.  v1:= temp;
  #L20f7f4.  return v1;
  #L20f7f6.  v1:= -1I;
  #L20f7f8.  return v1;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;J)I` @AccessFlag STATIC {
    temp;
    v0;

  #L20f83c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f840.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;J)I` @kind virtual;
  #L20f846.  v1:= temp;
  #L20f848.  return v1;
}
procedure `long` `a`(`java.lang.reflect.Field` v2 @kind object) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/reflect/Field;)J` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L20f910.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f914.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/reflect/Field;)J` @kind virtual;
  #L20f91a.  v0:= temp @kind wide;
  #L20f91c.  return v0 @kind wide;
}
procedure `long` `a`(`java.nio.ByteBuffer` v3 @kind object) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/nio/ByteBuffer;)J` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20f960.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f964.  v1:= `@@e.e.a.b.f.b.a4.j` @type ^`long` @kind wide;
  #L20f968.  call temp:= `b`(v0, v3, v1) @signature `Le/e/a/b/f/b/a4$d;.b:(Ljava/lang/Object;J)J` @kind virtual;
  #L20f96e.  v0:= temp @kind wide;
  #L20f970.  return v0 @kind wide;
}
procedure `java.lang.reflect.Field` `a`(`java.lang.Class` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20f880.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L20f886.  v0:= temp @kind object;
  #L20f888.  v1:= 1I;
  #L20f88a.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L20f890.  goto L20f894;
  #L20f892.  v0:= 0I;
  #L20f894.  return v0 @kind object;
  catch `java.lang.Throwable` @[L20f880..L20f890] goto L20f892;
}
procedure `void` `a`(`long` v1 , `byte` v3 ) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20fcfc.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fd00.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4$d;.a:(JB)V` @kind virtual;
  #L20fd06.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v4 @kind object, `long` v5 , `byte` v7 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JB)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20fc14.  v0:= -4L;
  #L20fc18.  v0:= v0 ^& v5 @kind long;
  #L20fc1a.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;J)I` @kind static;
  #L20fc20.  v2:= temp;
  #L20fc22.  v6:= (`int`) v5 @kind l2i;
  #L20fc24.  v5:= ~v6 @kind int;
  #L20fc26.  v5:= v5 ^& 3;
  #L20fc2a.  v5:= v5 ^< 3;
  #L20fc2e.  v6:= 255I;
  #L20fc32.  v3:= v6 ^< v5 @kind int;
  #L20fc36.  v3:= ~v3 @kind int;
  #L20fc38.  v2:= v2 ^& v3 @kind int;
  #L20fc3a.  v6:= v6 ^& v7 @kind int;
  #L20fc3c.  v5:= v6 ^< v5 @kind int;
  #L20fc40.  v5:= v5 ^| v2 @kind int;
  #L20fc42.  call `a`(v4, v0, v5) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JI)V` @kind static;
  #L20fc48.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v6 @kind object, `long` v7 , `double` v9 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JD)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20fc5c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fc60.  v1:= v6 @kind object;
  #L20fc62.  v2:= v7 @kind wide;
  #L20fc64.  v4:= v9 @kind wide;
  #L20fc66.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JD)V` @kind virtual;
  #L20fc6c.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `long` v2 , `float` v4 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JF)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20fc80.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fc84.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JF)V` @kind virtual;
  #L20fc8a.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `long` v2 , `int` v4 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JI)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20fc9c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fca0.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JI)V` @kind virtual;
  #L20fca6.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v6 @kind object, `long` v7 , `long` v9 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JJ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20fcd8.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fcdc.  v1:= v6 @kind object;
  #L20fcde.  v2:= v7 @kind wide;
  #L20fce0.  v4:= v9 @kind wide;
  #L20fce2.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JJ)V` @kind virtual;
  #L20fce8.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20fcb8.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fcbc.  v0:= v0.`e.e.a.b.f.b.a4$d.a` @type ^`sun.misc.Unsafe` @kind object;
  #L20fcc0.  call `putObject`(v0, v1, v2, v4) @signature `Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind virtual;
  #L20fcc6.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `long` v2 , `boolean` v4 ) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JZ)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20fbf8.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fbfc.  call `a`(v0, v1, v2, v4) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JZ)V` @kind virtual;
  #L20fc02.  return @kind void;
}
procedure `void` `a`(`byte`[] v3 @kind object, `long` v4 , `byte` v6 ) @signature `Le/e/a/b/f/b/a4;.a:([BJB)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20fbb0.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fbb4.  v1:= `@@e.e.a.b.f.b.a4.i` @type ^`long` @kind wide;
  #L20fbb8.  v1:= v1 + v4 @kind long;
  #L20fbba.  call `a`(v0, v3, v1, v6) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/Object;JB)V` @kind virtual;
  #L20fbc0.  return @kind void;
}
procedure `void` `a`(`byte`[] v8 @kind object, `long` v9 , `long` v11 , `long` v13 ) @signature `Le/e/a/b/f/b/a4;.a:([BJJJ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20fbd4.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20fbd8.  v1:= v8 @kind object;
  #L20fbda.  v2:= v9 @kind wide;
  #L20fbdc.  v4:= v11 @kind wide;
  #L20fbde.  v6:= v13 @kind wide;
  #L20fbe0.  call `a`(v0, v1, v2, v4, v6) @signature `Le/e/a/b/f/b/a4$d;.a:([BJJJ)V` @kind virtual;
  #L20fbe6.  return @kind void;
}
procedure `boolean` `a`() @signature `Le/e/a/b/f/b/a4;.a:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L20f074.  v0:= `@@e.e.a.b.f.b.a4.k` @type ^`boolean` @kind boolean;
  #L20f078.  return v0;
}
procedure `int` `b`(`java.lang.Class` v1 @kind object) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Class;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20f80c.  v0:= `@@e.e.a.b.f.b.a4.h` @type ^`boolean` @kind boolean;
  #L20f810.  if v0 == 0 then goto L20f826;
  #L20f814.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f818.  v0:= v0.`e.e.a.b.f.b.a4$d.a` @type ^`sun.misc.Unsafe` @kind object;
  #L20f81c.  call temp:= `arrayIndexScale`(v0, v1) @signature `Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I` @kind virtual;
  #L20f822.  v1:= temp;
  #L20f824.  return v1;
  #L20f826.  v1:= -1I;
  #L20f828.  return v1;
}
procedure `long` `b`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;J)J` @AccessFlag STATIC {
    temp;
    v0;

  #L20f99c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f9a0.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.b:(Ljava/lang/Object;J)J` @kind virtual;
  #L20f9a6.  v1:= temp @kind wide;
  #L20f9a8.  return v1 @kind wide;
}
procedure `long` `b`(`java.lang.reflect.Field` v2 @kind object) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/reflect/Field;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f930.  if v2 == 0 then goto L20f948;
  #L20f934.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f938.  if v0 != 0 then goto L20f93e;
  #L20f93c.  goto L20f948;
  #L20f93e.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/b/a4$d;.a:(Ljava/lang/reflect/Field;)J` @kind virtual;
  #L20f944.  v0:= temp @kind wide;
  #L20f946.  return v0 @kind wide;
  #L20f948.  v0:= -1L;
  #L20f94c.  return v0 @kind wide;
}
procedure `void` `b`(`java.lang.Object` v4 @kind object, `long` v5 , `byte` v7 ) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;JB)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20fd34.  v0:= -4L;
  #L20fd38.  v0:= v0 ^& v5 @kind long;
  #L20fd3a.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;J)I` @kind static;
  #L20fd40.  v2:= temp;
  #L20fd42.  v6:= (`int`) v5 @kind l2i;
  #L20fd44.  v5:= v6 ^& 3;
  #L20fd48.  v5:= v5 ^< 3;
  #L20fd4c.  v6:= 255I;
  #L20fd50.  v3:= v6 ^< v5 @kind int;
  #L20fd54.  v3:= ~v3 @kind int;
  #L20fd56.  v2:= v2 ^& v3 @kind int;
  #L20fd58.  v6:= v6 ^& v7 @kind int;
  #L20fd5a.  v5:= v6 ^< v5 @kind int;
  #L20fd5e.  v5:= v5 ^| v2 @kind int;
  #L20fd60.  call `a`(v4, v0, v5) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JI)V` @kind static;
  #L20fd66.  return @kind void;
}
procedure `void` `b`(`java.lang.Object` v0 @kind object, `long` v1 , `boolean` v3 ) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;JZ)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20fd18.  v3:= (`byte`) v3 @kind i2b;
  #L20fd1a.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JB)V` @kind static;
  #L20fd20.  return @kind void;
}
procedure `boolean` `b`() @signature `Le/e/a/b/f/b/a4;.b:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L20f08c.  v0:= `@@e.e.a.b.f.b.a4.h` @type ^`boolean` @kind boolean;
  #L20f090.  return v0;
}
procedure `void` `c`(`java.lang.Object` v0 @kind object, `long` v1 , `byte` v3 ) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Object;JB)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20fd94.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JB)V` @kind static;
  #L20fd9a.  return @kind void;
}
procedure `void` `c`(`java.lang.Object` v0 @kind object, `long` v1 , `boolean` v3 ) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Object;JZ)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20fd78.  v3:= (`byte`) v3 @kind i2b;
  #L20fd7a.  call `b`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;JB)V` @kind static;
  #L20fd80.  return @kind void;
}
procedure `boolean` `c`() @signature `Le/e/a/b/f/b/a4;.c:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L20f0a4.  v0:= `@@e.e.a.b.f.b.a4.g` @type ^`boolean` @kind boolean;
  #L20f0a8.  return v0;
}
procedure `boolean` `c`(`java.lang.Class` v10 @kind object) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Class;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L20f50c.  v0:= constclass @type ^`byte`[] @kind object;
  #L20f510.  call temp:= `a`() @signature `Le/e/a/b/f/b/u;.a:()Z` @kind static;
  #L20f516.  v1:= temp;
  #L20f518.  v2:= 0I;
  #L20f51a.  if v1 != 0 then goto L20f520;
  #L20f51e.  return v2;
  #L20f520.  v1:= `@@e.e.a.b.f.b.a4.c` @type ^`java.lang.Class` @kind object;
  #L20f524.  v3:= "peekLong" @kind object;
  #L20f528.  v4:= 2I;
  #L20f52a.  v5:= new `java.lang.Class`[v4];
  #L20f52e.  v5[v2]:= v10 @kind object;
  #L20f532.  v6:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f536.  v7:= 1I;
  #L20f538.  v5[v7]:= v6 @kind object;
  #L20f53c.  call temp:= `getMethod`(v1, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f542.  v3:= "pokeLong" @kind object;
  #L20f546.  v5:= 3I;
  #L20f548.  v6:= new `java.lang.Class`[v5];
  #L20f54c.  v6[v2]:= v10 @kind object;
  #L20f550.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f554.  v6[v7]:= v8 @kind object;
  #L20f558.  v8:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f55c.  v6[v4]:= v8 @kind object;
  #L20f560.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f566.  v3:= "pokeInt" @kind object;
  #L20f56a.  v6:= new `java.lang.Class`[v5];
  #L20f56e.  v6[v2]:= v10 @kind object;
  #L20f572.  v8:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f576.  v6[v7]:= v8 @kind object;
  #L20f57a.  v8:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f57e.  v6[v4]:= v8 @kind object;
  #L20f582.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f588.  v3:= "peekInt" @kind object;
  #L20f58c.  v6:= new `java.lang.Class`[v4];
  #L20f590.  v6[v2]:= v10 @kind object;
  #L20f594.  v8:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f598.  v6[v7]:= v8 @kind object;
  #L20f59c.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f5a2.  v3:= "pokeByte" @kind object;
  #L20f5a6.  v6:= new `java.lang.Class`[v4];
  #L20f5aa.  v6[v2]:= v10 @kind object;
  #L20f5ae.  v8:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f5b2.  v6[v7]:= v8 @kind object;
  #L20f5b6.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f5bc.  v3:= "peekByte" @kind object;
  #L20f5c0.  v6:= new `java.lang.Class`[v7];
  #L20f5c4.  v6[v2]:= v10 @kind object;
  #L20f5c8.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f5ce.  v3:= "pokeByteArray" @kind object;
  #L20f5d2.  v6:= 4I;
  #L20f5d4.  v8:= new `java.lang.Class`[v6];
  #L20f5d8.  v8[v2]:= v10 @kind object;
  #L20f5dc.  v8[v7]:= v0 @kind object;
  #L20f5e0.  v9:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f5e4.  v8[v4]:= v9 @kind object;
  #L20f5e8.  v9:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f5ec.  v8[v5]:= v9 @kind object;
  #L20f5f0.  call temp:= `getMethod`(v1, v3, v8) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f5f6.  v3:= "peekByteArray" @kind object;
  #L20f5fa.  v6:= new `java.lang.Class`[v6];
  #L20f5fe.  v6[v2]:= v10 @kind object;
  #L20f602.  v6[v7]:= v0 @kind object;
  #L20f606.  v10:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f60a.  v6[v4]:= v10 @kind object;
  #L20f60e.  v10:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f612.  v6[v5]:= v10 @kind object;
  #L20f616.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f61c.  return v7;
  #L20f61e.  return v2;
  catch `java.lang.Throwable` @[L20f520..L20f61c] goto L20f61e;
}
procedure `boolean` `c`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Object;J)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L20f63c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f640.  call temp:= `c`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.c:(Ljava/lang/Object;J)Z` @kind virtual;
  #L20f646.  v1:= temp;
  #L20f648.  return v1;
}
procedure `float` `d`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.d:(Ljava/lang/Object;J)F` @AccessFlag STATIC {
    temp;
    v0;

  #L20f7bc.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f7c0.  call temp:= `d`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.d:(Ljava/lang/Object;J)F` @kind virtual;
  #L20f7c6.  v1:= temp;
  #L20f7c8.  return v1;
}
procedure `sun.misc.Unsafe` `d`() @signature `Le/e/a/b/f/b/a4;.d:()Lsun/misc/Unsafe;` @AccessFlag STATIC {
    temp;
    v0;

  #L20f9bc.  v0:= new `e.e.a.b.f.b.b4`;
  #L20f9c0.  call `<init>`(v0) @signature `Le/e/a/b/f/b/b4;.<init>:()V` @kind direct;
  #L20f9c6.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;` @kind static;
  #L20f9cc.  v0:= temp @kind object;
  #L20f9ce.  v0:= (`sun.misc.Unsafe`) v0 @kind object;
  #L20f9d2.  goto L20f9d6;
  #L20f9d4.  v0:= 0I;
  #L20f9d6.  return v0 @kind object;
  catch `java.lang.Throwable` @[L20f9bc..L20f9d2] goto L20f9d4;
}
procedure `void` `d`(`java.lang.Object` v0 @kind object, `long` v1 , `byte` v3 ) @signature `Le/e/a/b/f/b/a4;.d:(Ljava/lang/Object;JB)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20fdc4.  call `b`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;JB)V` @kind static;
  #L20fdca.  return @kind void;
}
procedure `void` `d`(`java.lang.Object` v0 @kind object, `long` v1 , `boolean` v3 ) @signature `Le/e/a/b/f/b/a4;.d:(Ljava/lang/Object;JZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20fdac.  call `b`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.b:(Ljava/lang/Object;JZ)V` @kind static;
  #L20fdb2.  return @kind void;
}
procedure `double` `e`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.e:(Ljava/lang/Object;J)D` @AccessFlag STATIC {
    temp;
    v0;

  #L20f79c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f7a0.  call temp:= `e`(v0, v1, v2) @signature `Le/e/a/b/f/b/a4$d;.e:(Ljava/lang/Object;J)D` @kind virtual;
  #L20f7a6.  v1:= temp @kind wide;
  #L20f7a8.  return v1 @kind wide;
}
procedure `void` `e`(`java.lang.Object` v0 @kind object, `long` v1 , `boolean` v3 ) @signature `Le/e/a/b/f/b/a4;.e:(Ljava/lang/Object;JZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20fddc.  call `c`(v0, v1, v3) @signature `Le/e/a/b/f/b/a4;.c:(Ljava/lang/Object;JZ)V` @kind static;
  #L20fde2.  return @kind void;
}
procedure `boolean` `e`() @signature `Le/e/a/b/f/b/a4;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L20f0bc.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L20f0c0.  v1:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20f0c4.  v2:= 0I;
  #L20f0c6.  if v1 != 0 then goto L20f0cc;
  #L20f0ca.  return v2;
  #L20f0cc.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20f0d2.  v1:= temp @kind object;
  #L20f0d4.  v3:= "objectFieldOffset" @kind object;
  #L20f0d8.  v4:= 1I;
  #L20f0da.  v5:= new `java.lang.Class`[v4];
  #L20f0de.  v6:= constclass @type ^`java.lang.reflect.Field` @kind object;
  #L20f0e2.  v5[v2]:= v6 @kind object;
  #L20f0e6.  call temp:= `getMethod`(v1, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f0ec.  v3:= "arrayBaseOffset" @kind object;
  #L20f0f0.  v5:= new `java.lang.Class`[v4];
  #L20f0f4.  v6:= constclass @type ^`java.lang.Class` @kind object;
  #L20f0f8.  v5[v2]:= v6 @kind object;
  #L20f0fc.  call temp:= `getMethod`(v1, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f102.  v3:= "arrayIndexScale" @kind object;
  #L20f106.  v5:= new `java.lang.Class`[v4];
  #L20f10a.  v6:= constclass @type ^`java.lang.Class` @kind object;
  #L20f10e.  v5[v2]:= v6 @kind object;
  #L20f112.  call temp:= `getMethod`(v1, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f118.  v3:= "getInt" @kind object;
  #L20f11c.  v5:= 2I;
  #L20f11e.  v6:= new `java.lang.Class`[v5];
  #L20f122.  v6[v2]:= v0 @kind object;
  #L20f126.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f12a.  v6[v4]:= v7 @kind object;
  #L20f12e.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f134.  v3:= "putInt" @kind object;
  #L20f138.  v6:= 3I;
  #L20f13a.  v7:= new `java.lang.Class`[v6];
  #L20f13e.  v7[v2]:= v0 @kind object;
  #L20f142.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f146.  v7[v4]:= v8 @kind object;
  #L20f14a.  v8:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f14e.  v7[v5]:= v8 @kind object;
  #L20f152.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f158.  v3:= "getLong" @kind object;
  #L20f15c.  v7:= new `java.lang.Class`[v5];
  #L20f160.  v7[v2]:= v0 @kind object;
  #L20f164.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f168.  v7[v4]:= v8 @kind object;
  #L20f16c.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f172.  v3:= "putLong" @kind object;
  #L20f176.  v7:= new `java.lang.Class`[v6];
  #L20f17a.  v7[v2]:= v0 @kind object;
  #L20f17e.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f182.  v7[v4]:= v8 @kind object;
  #L20f186.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f18a.  v7[v5]:= v8 @kind object;
  #L20f18e.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f194.  v3:= "getObject" @kind object;
  #L20f198.  v7:= new `java.lang.Class`[v5];
  #L20f19c.  v7[v2]:= v0 @kind object;
  #L20f1a0.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f1a4.  v7[v4]:= v8 @kind object;
  #L20f1a8.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f1ae.  v3:= "putObject" @kind object;
  #L20f1b2.  v7:= new `java.lang.Class`[v6];
  #L20f1b6.  v7[v2]:= v0 @kind object;
  #L20f1ba.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f1be.  v7[v4]:= v8 @kind object;
  #L20f1c2.  v7[v5]:= v0 @kind object;
  #L20f1c6.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f1cc.  call temp:= `a`() @signature `Le/e/a/b/f/b/u;.a:()Z` @kind static;
  #L20f1d2.  v3:= temp;
  #L20f1d4.  if v3 == 0 then goto L20f1da;
  #L20f1d8.  return v4;
  #L20f1da.  v3:= "getByte" @kind object;
  #L20f1de.  v7:= new `java.lang.Class`[v5];
  #L20f1e2.  v7[v2]:= v0 @kind object;
  #L20f1e6.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f1ea.  v7[v4]:= v8 @kind object;
  #L20f1ee.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f1f4.  v3:= "putByte" @kind object;
  #L20f1f8.  v7:= new `java.lang.Class`[v6];
  #L20f1fc.  v7[v2]:= v0 @kind object;
  #L20f200.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f204.  v7[v4]:= v8 @kind object;
  #L20f208.  v8:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f20c.  v7[v5]:= v8 @kind object;
  #L20f210.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f216.  v3:= "getBoolean" @kind object;
  #L20f21a.  v7:= new `java.lang.Class`[v5];
  #L20f21e.  v7[v2]:= v0 @kind object;
  #L20f222.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f226.  v7[v4]:= v8 @kind object;
  #L20f22a.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f230.  v3:= "putBoolean" @kind object;
  #L20f234.  v7:= new `java.lang.Class`[v6];
  #L20f238.  v7[v2]:= v0 @kind object;
  #L20f23c.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f240.  v7[v4]:= v8 @kind object;
  #L20f244.  v8:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f248.  v7[v5]:= v8 @kind object;
  #L20f24c.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f252.  v3:= "getFloat" @kind object;
  #L20f256.  v7:= new `java.lang.Class`[v5];
  #L20f25a.  v7[v2]:= v0 @kind object;
  #L20f25e.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f262.  v7[v4]:= v8 @kind object;
  #L20f266.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f26c.  v3:= "putFloat" @kind object;
  #L20f270.  v7:= new `java.lang.Class`[v6];
  #L20f274.  v7[v2]:= v0 @kind object;
  #L20f278.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f27c.  v7[v4]:= v8 @kind object;
  #L20f280.  v8:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f284.  v7[v5]:= v8 @kind object;
  #L20f288.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f28e.  v3:= "getDouble" @kind object;
  #L20f292.  v7:= new `java.lang.Class`[v5];
  #L20f296.  v7[v2]:= v0 @kind object;
  #L20f29a.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f29e.  v7[v4]:= v8 @kind object;
  #L20f2a2.  call temp:= `getMethod`(v1, v3, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f2a8.  v3:= "putDouble" @kind object;
  #L20f2ac.  v6:= new `java.lang.Class`[v6];
  #L20f2b0.  v6[v2]:= v0 @kind object;
  #L20f2b4.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f2b8.  v6[v4]:= v0 @kind object;
  #L20f2bc.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f2c0.  v6[v5]:= v0 @kind object;
  #L20f2c4.  call temp:= `getMethod`(v1, v3, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f2ca.  return v4;
  #L20f2cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20f2ce.  v1:= `@@e.e.a.b.f.b.a4.a` @type ^`java.util.logging.Logger` @kind object;
  #L20f2d2.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L20f2d6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20f2dc.  v0:= temp @kind object;
  #L20f2de.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20f2e4.  v4:= temp @kind object;
  #L20f2e6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20f2ec.  v4:= temp;
  #L20f2ee.  v4:= v4 + 71;
  #L20f2f2.  v5:= new `java.lang.StringBuilder`;
  #L20f2f6.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L20f2fc.  v4:= "platform method missing - proto runtime falling back to safer methods: " @kind object;
  #L20f300.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f306.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f30c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20f312.  v0:= temp @kind object;
  #L20f314.  v4:= "com.google.protobuf.UnsafeUtil" @kind object;
  #L20f318.  v5:= "supportsUnsafeArrayOperations" @kind object;
  #L20f31c.  call `logp`(v1, v3, v4, v5, v0) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L20f322.  return v2;
  catch `java.lang.Throwable` @[L20f0cc..L20f2ca] goto L20f2cc;
}
procedure `java.lang.Object` `f`(`java.lang.Object` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/b/a4;.f:(Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L20f85c.  v0:= `@@e.e.a.b.f.b.a4.f` @type ^`e.e.a.b.f.b.a4$d` @kind object;
  #L20f860.  v0:= v0.`e.e.a.b.f.b.a4$d.a` @type ^`sun.misc.Unsafe` @kind object;
  #L20f864.  call temp:= `getObject`(v0, v1, v2) @signature `Lsun/misc/Unsafe;.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind virtual;
  #L20f86a.  v1:= temp @kind object;
  #L20f86c.  return v1 @kind object;
}
procedure `boolean` `f`() @signature `Le/e/a/b/f/b/a4;.f:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L20f340.  v0:= "copyMemory" @kind object;
  #L20f344.  v1:= "getLong" @kind object;
  #L20f348.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L20f34c.  v3:= `@@e.e.a.b.f.b.a4.b` @type ^`sun.misc.Unsafe` @kind object;
  #L20f350.  v4:= 0I;
  #L20f352.  if v3 != 0 then goto L20f358;
  #L20f356.  return v4;
  #L20f358.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20f35e.  v3:= temp @kind object;
  #L20f360.  v5:= "objectFieldOffset" @kind object;
  #L20f364.  v6:= 1I;
  #L20f366.  v7:= new `java.lang.Class`[v6];
  #L20f36a.  v8:= constclass @type ^`java.lang.reflect.Field` @kind object;
  #L20f36e.  v7[v4]:= v8 @kind object;
  #L20f372.  call temp:= `getMethod`(v3, v5, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f378.  v5:= 2I;
  #L20f37a.  v7:= new `java.lang.Class`[v5];
  #L20f37e.  v7[v4]:= v2 @kind object;
  #L20f382.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f386.  v7[v6]:= v8 @kind object;
  #L20f38a.  call temp:= `getMethod`(v3, v1, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f390.  call temp:= `g`() @signature `Le/e/a/b/f/b/a4;.g:()Ljava/lang/reflect/Field;` @kind static;
  #L20f396.  v7:= temp @kind object;
  #L20f398.  if v7 != 0 then goto L20f39e;
  #L20f39c.  return v4;
  #L20f39e.  call temp:= `a`() @signature `Le/e/a/b/f/b/u;.a:()Z` @kind static;
  #L20f3a4.  v7:= temp;
  #L20f3a6.  if v7 == 0 then goto L20f3ac;
  #L20f3aa.  return v6;
  #L20f3ac.  v7:= "getByte" @kind object;
  #L20f3b0.  v8:= new `java.lang.Class`[v6];
  #L20f3b4.  v9:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f3b8.  v8[v4]:= v9 @kind object;
  #L20f3bc.  call temp:= `getMethod`(v3, v7, v8) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f3c2.  v7:= "putByte" @kind object;
  #L20f3c6.  v8:= new `java.lang.Class`[v5];
  #L20f3ca.  v9:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f3ce.  v8[v4]:= v9 @kind object;
  #L20f3d2.  v9:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f3d6.  v8[v6]:= v9 @kind object;
  #L20f3da.  call temp:= `getMethod`(v3, v7, v8) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f3e0.  v7:= "getInt" @kind object;
  #L20f3e4.  v8:= new `java.lang.Class`[v6];
  #L20f3e8.  v9:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f3ec.  v8[v4]:= v9 @kind object;
  #L20f3f0.  call temp:= `getMethod`(v3, v7, v8) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f3f6.  v7:= "putInt" @kind object;
  #L20f3fa.  v8:= new `java.lang.Class`[v5];
  #L20f3fe.  v9:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f402.  v8[v4]:= v9 @kind object;
  #L20f406.  v9:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f40a.  v8[v6]:= v9 @kind object;
  #L20f40e.  call temp:= `getMethod`(v3, v7, v8) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f414.  v7:= new `java.lang.Class`[v6];
  #L20f418.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f41c.  v7[v4]:= v8 @kind object;
  #L20f420.  call temp:= `getMethod`(v3, v1, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f426.  v1:= "putLong" @kind object;
  #L20f42a.  v7:= new `java.lang.Class`[v5];
  #L20f42e.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f432.  v7[v4]:= v8 @kind object;
  #L20f436.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f43a.  v7[v6]:= v8 @kind object;
  #L20f43e.  call temp:= `getMethod`(v3, v1, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f444.  v1:= 3I;
  #L20f446.  v7:= new `java.lang.Class`[v1];
  #L20f44a.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f44e.  v7[v4]:= v8 @kind object;
  #L20f452.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f456.  v7[v6]:= v8 @kind object;
  #L20f45a.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f45e.  v7[v5]:= v8 @kind object;
  #L20f462.  call temp:= `getMethod`(v3, v0, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f468.  v7:= 5I;
  #L20f46a.  v7:= new `java.lang.Class`[v7];
  #L20f46e.  v7[v4]:= v2 @kind object;
  #L20f472.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f476.  v7[v6]:= v8 @kind object;
  #L20f47a.  v7[v5]:= v2 @kind object;
  #L20f47e.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f482.  v7[v1]:= v2 @kind object;
  #L20f486.  v1:= 4I;
  #L20f488.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f48c.  v7[v1]:= v2 @kind object;
  #L20f490.  call temp:= `getMethod`(v3, v0, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20f496.  return v6;
  #L20f498.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20f49a.  v1:= `@@e.e.a.b.f.b.a4.a` @type ^`java.util.logging.Logger` @kind object;
  #L20f49e.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L20f4a2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20f4a8.  v0:= temp @kind object;
  #L20f4aa.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20f4b0.  v3:= temp @kind object;
  #L20f4b2.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20f4b8.  v3:= temp;
  #L20f4ba.  v3:= v3 + 71;
  #L20f4be.  v5:= new `java.lang.StringBuilder`;
  #L20f4c2.  call `<init>`(v5, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L20f4c8.  v3:= "platform method missing - proto runtime falling back to safer methods: " @kind object;
  #L20f4cc.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f4d2.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f4d8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20f4de.  v0:= temp @kind object;
  #L20f4e0.  v3:= "com.google.protobuf.UnsafeUtil" @kind object;
  #L20f4e4.  v5:= "supportsUnsafeByteBufferOperations" @kind object;
  #L20f4e8.  call `logp`(v1, v2, v3, v5, v0) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L20f4ee.  return v4;
  catch `java.lang.Throwable` @[L20f358..L20f496] goto L20f498;
}
procedure `byte` `g`(`java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/b/a4;.g:(Ljava/lang/Object;J)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f700.  v0:= -4L;
  #L20f704.  v0:= v0 ^& v3 @kind long;
  #L20f706.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;J)I` @kind static;
  #L20f70c.  v2:= temp;
  #L20f70e.  v3:= ~v3 @kind long;
  #L20f710.  v0:= 3L;
  #L20f714.  v3:= v3 ^& v0 @kind long;
  #L20f716.  v0:= 3I;
  #L20f718.  v3:= v3 ^< v0 @kind long;
  #L20f71a.  v4:= (`int`) v3 @kind l2i;
  #L20f71c.  v2:= v2 ^>> v4 @kind int;
  #L20f71e.  v2:= (`byte`) v2 @kind i2b;
  #L20f720.  return v2;
}
procedure `java.lang.reflect.Field` `g`() @signature `Le/e/a/b/f/b/a4;.g:()Ljava/lang/reflect/Field;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20f8b4.  call temp:= `a`() @signature `Le/e/a/b/f/b/u;.a:()Z` @kind static;
  #L20f8ba.  v0:= temp;
  #L20f8bc.  if v0 == 0 then goto L20f8d6;
  #L20f8c0.  v0:= constclass @type ^`java.nio.Buffer` @kind object;
  #L20f8c4.  v1:= "effectiveDirectAddress" @kind object;
  #L20f8c8.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20f8ce.  v0:= temp @kind object;
  #L20f8d0.  if v0 == 0 then goto L20f8d6;
  #L20f8d4.  return v0 @kind object;
  #L20f8d6.  v0:= constclass @type ^`java.nio.Buffer` @kind object;
  #L20f8da.  v1:= "address" @kind object;
  #L20f8de.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind static;
  #L20f8e4.  v0:= temp @kind object;
  #L20f8e6.  if v0 == 0 then goto L20f8fc;
  #L20f8ea.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L20f8f0.  v1:= temp @kind object;
  #L20f8f2.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L20f8f6.  if v1 != v2 then goto L20f8fc;
  #L20f8fa.  return v0 @kind object;
  #L20f8fc.  v0:= 0I;
  #L20f8fe.  return v0 @kind object;
}
procedure `byte` `h`(`java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/b/a4;.h:(Ljava/lang/Object;J)B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f734.  v0:= -4L;
  #L20f738.  v0:= v0 ^& v3 @kind long;
  #L20f73a.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;J)I` @kind static;
  #L20f740.  v2:= temp;
  #L20f742.  v0:= 3L;
  #L20f746.  v3:= v3 ^& v0 @kind long;
  #L20f748.  v0:= 3I;
  #L20f74a.  v3:= v3 ^< v0 @kind long;
  #L20f74c.  v4:= (`int`) v3 @kind l2i;
  #L20f74e.  v2:= v2 ^>> v4 @kind int;
  #L20f750.  v2:= (`byte`) v2 @kind i2b;
  #L20f752.  return v2;
}
procedure `long` `h`() @signature `Le/e/a/b/f/b/a4;.h:()J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L20f984.  v0:= `@@e.e.a.b.f.b.a4.i` @type ^`long` @kind wide;
  #L20f988.  return v0 @kind wide;
}
procedure `boolean` `i`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.i:(Ljava/lang/Object;J)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20f65c.  call temp:= `g`(v0, v1) @signature `Le/e/a/b/f/b/a4;.g:(Ljava/lang/Object;J)B` @kind static;
  #L20f662.  v0:= temp;
  #L20f664.  if v0 == 0 then goto L20f66c;
  #L20f668.  v0:= 1I;
  #L20f66a.  return v0;
  #L20f66c.  v0:= 0I;
  #L20f66e.  return v0;
}
procedure `boolean` `j`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.j:(Ljava/lang/Object;J)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L20f680.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/b/a4;.h:(Ljava/lang/Object;J)B` @kind static;
  #L20f686.  v0:= temp;
  #L20f688.  if v0 == 0 then goto L20f690;
  #L20f68c.  v0:= 1I;
  #L20f68e.  return v0;
  #L20f690.  v0:= 0I;
  #L20f692.  return v0;
}
procedure `byte` `k`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.k:(Ljava/lang/Object;J)B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20f764.  call temp:= `g`(v0, v1) @signature `Le/e/a/b/f/b/a4;.g:(Ljava/lang/Object;J)B` @kind static;
  #L20f76a.  v0:= temp;
  #L20f76c.  return v0;
}
procedure `byte` `l`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.l:(Ljava/lang/Object;J)B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20f780.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/b/a4;.h:(Ljava/lang/Object;J)B` @kind static;
  #L20f786.  v0:= temp;
  #L20f788.  return v0;
}
procedure `boolean` `m`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.m:(Ljava/lang/Object;J)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20f6a4.  call temp:= `i`(v0, v1) @signature `Le/e/a/b/f/b/a4;.i:(Ljava/lang/Object;J)Z` @kind static;
  #L20f6aa.  v0:= temp;
  #L20f6ac.  return v0;
}
procedure `boolean` `n`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/b/a4;.n:(Ljava/lang/Object;J)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20f6c0.  call temp:= `j`(v0, v1) @signature `Le/e/a/b/f/b/a4;.j:(Ljava/lang/Object;J)Z` @kind static;
  #L20f6c6.  v0:= temp;
  #L20f6c8.  return v0;
}
