record `e.e.a.b.f.r.e0` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L30d394.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L30d398.  if v0 == 0 then goto L30d3aa;
  #L30d39c.  v1:= (`byte`[]) v1 @kind object;
  #L30d3a0.  v1:= v1[v2] @kind byte;
  #L30d3a4.  v1:= v1 ^& 255;
  #L30d3a8.  return v1;
  #L30d3aa.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L30d3ae.  if v0 == 0 then goto L30d3be;
  #L30d3b2.  v1:= (`short`[]) v1 @kind object;
  #L30d3b6.  v1:= v1[v2] @kind short;
  #L30d3ba.  v1:= (`char`) v1 @kind i2c;
  #L30d3bc.  return v1;
  #L30d3be.  v1:= (`int`[]) v1 @kind object;
  #L30d3c2.  v1:= v1[v2];
  #L30d3c6.  return v1;
}
procedure `int` `a`(`java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object, `int`[] v13 @kind object, `java.lang.Object`[] v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30d400.  call temp:= `a`(v9) @signature `Le/e/a/b/f/r/f0;.a:(Ljava/lang/Object;)I` @kind static;
  #L30d406.  v0:= temp;
  #L30d408.  v1:= v0 ^& v11 @kind int;
  #L30d40c.  call temp:= `a`(v12, v1) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30d412.  v2:= temp;
  #L30d414.  v3:= -1I;
  #L30d416.  if v2 == 0 then goto L30d482;
  #L30d41a.  v4:= ~v11 @kind int;
  #L30d41c.  v0:= v0 ^& v4 @kind int;
  #L30d41e.  v5:= -1I;
  #L30d420.  v2:= v2 + v3 @kind int;
  #L30d422.  v6:= v13[v2];
  #L30d426.  v7:= v6 ^& v4 @kind int;
  #L30d42a.  if v7 != v0 then goto L30d472;
  #L30d42e.  v7:= v14[v2] @kind object;
  #L30d432.  call temp:= `a`(v9, v7) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30d438.  v7:= temp;
  #L30d43a.  if v7 == 0 then goto L30d472;
  #L30d43e.  if v15 == 0 then goto L30d452;
  #L30d442.  v7:= v15[v2] @kind object;
  #L30d446.  call temp:= `a`(v10, v7) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30d44c.  v7:= temp;
  #L30d44e.  if v7 == 0 then goto L30d472;
  #L30d452.  v9:= v6 ^& v11 @kind int;
  #L30d456.  if v5 != v3 then goto L30d462;
  #L30d45a.  call `a`(v12, v1, v9) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L30d460.  goto L30d470;
  #L30d462.  v10:= v13[v5];
  #L30d466.  v10:= v10 ^& v4 @kind int;
  #L30d468.  v9:= v9 ^& v11 @kind int;
  #L30d46a.  v9:= v9 ^| v10 @kind int;
  #L30d46c.  v13[v5]:= v9;
  #L30d470.  return v2;
  #L30d472.  v5:= v6 ^& v11 @kind int;
  #L30d476.  if v5 == 0 then goto L30d482;
  #L30d47a.  v8:= v5;
  #L30d47c.  v5:= v2;
  #L30d47e.  v2:= v8;
  #L30d480.  goto L30d420;
  #L30d482.  return v3;
}
procedure `java.lang.Object` `a`(`int` v3 ) @signature `Le/e/a/b/f/r/e0;.a:(I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L30d494.  v0:= 2I;
  #L30d496.  if v3 < v0 then goto L30d4d0;
  #L30d49a.  v0:= 2.0F;
  #L30d49e.  if v3 > v0 then goto L30d4d0;
  #L30d4a2.  call temp:= `highestOneBit`(v3) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L30d4a8.  v0:= temp;
  #L30d4aa.  if v0 != v3 then goto L30d4d0;
  #L30d4ae.  v0:= 256I;
  #L30d4b2.  if v3 > v0 then goto L30d4bc;
  #L30d4b6.  v3:= new `byte`[v3];
  #L30d4ba.  return v3 @kind object;
  #L30d4bc.  v0:= 65536I;
  #L30d4c0.  if v3 > v0 then goto L30d4ca;
  #L30d4c4.  v3:= new `short`[v3];
  #L30d4c8.  return v3 @kind object;
  #L30d4ca.  v3:= new `int`[v3];
  #L30d4ce.  return v3 @kind object;
  #L30d4d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L30d4d4.  v1:= new `java.lang.StringBuilder`;
  #L30d4d8.  v2:= 52I;
  #L30d4dc.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30d4e2.  v2:= "must be power of 2 between 2^1 and 2^30: " @kind object;
  #L30d4e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d4ec.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d4f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30d4f8.  v3:= temp @kind object;
  #L30d4fa.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30d500.  throw v0;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @AccessFlag STATIC {
    temp;
    v0;

  #L30d514.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L30d518.  if v0 == 0 then goto L30d528;
  #L30d51c.  v1:= (`byte`[]) v1 @kind object;
  #L30d520.  v3:= (`byte`) v3 @kind i2b;
  #L30d522.  v1[v2]:= v3 @kind byte;
  #L30d526.  return @kind void;
  #L30d528.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L30d52c.  if v0 == 0 then goto L30d53c;
  #L30d530.  v1:= (`short`[]) v1 @kind object;
  #L30d534.  v3:= (`short`) v3 @kind i2s;
  #L30d536.  v1[v2]:= v3 @kind short;
  #L30d53a.  return @kind void;
  #L30d53c.  v1:= (`int`[]) v1 @kind object;
  #L30d540.  v1[v2]:= v3;
  #L30d544.  return @kind void;
}
procedure `int` `b`(`int` v1 ) @signature `Le/e/a/b/f/r/e0;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L30d3d8.  v0:= 32I;
  #L30d3dc.  if v1 >= v0 then goto L30d3e4;
  #L30d3e0.  v0:= 4I;
  #L30d3e2.  goto L30d3e6;
  #L30d3e4.  v0:= 2I;
  #L30d3e6.  v1:= v1 + 1;
  #L30d3ea.  v0:= v0 * v1 @kind int;
  #L30d3ee.  return v0;
}
