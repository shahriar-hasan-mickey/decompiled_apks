record `e.e.a.b.f.e.d` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.e.a` `@@e.e.a.b.f.e.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.e.a` `@@e.e.a.b.f.e.d.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/e/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2182d0.  v0:= new `e.e.a.b.f.e.c`;
  #L2182d4.  v1:= 0I;
  #L2182d6.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/e/c;.<init>:(Le/e/a/b/f/e/b;)V` @kind direct;
  #L2182dc.  `@@e.e.a.b.f.e.d.a` @type ^`e.e.a.b.f.e.a` := v0 @kind object;
  #L2182e0.  v0:= `@@e.e.a.b.f.e.d.a` @type ^`e.e.a.b.f.e.a` @kind object;
  #L2182e4.  `@@e.e.a.b.f.e.d.b` @type ^`e.e.a.b.f.e.a` := v0 @kind object;
  #L2182e8.  return @kind void;
}
procedure `e.e.a.b.f.e.a` `a`() @signature `Le/e/a/b/f/e/d;.a:()Le/e/a/b/f/e/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2182b8.  v0:= `@@e.e.a.b.f.e.d.b` @type ^`e.e.a.b.f.e.a` @kind object;
  #L2182bc.  return v0 @kind object;
}
