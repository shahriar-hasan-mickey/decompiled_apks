record `e.e.a.b.f.o.j9` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.o.j9.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.o.j9.c` @AccessFlag ;
  `e.e.a.b.f.o.ka` `e.e.a.b.f.o.j9.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.o.j9` v0 @kind this, `e.e.a.b.f.o.ka` v1 @kind object) @signature `Le/e/a/b/f/o/j9;.<init>:(Le/e/a/b/f/o/ka;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ceda0.  v0.`e.e.a.b.f.o.j9.d` @type ^`e.e.a.b.f.o.ka` := v1 @kind object;
  #L2ceda4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cedaa.  v1:= v0.`e.e.a.b.f.o.j9.d` @type ^`e.e.a.b.f.o.ka` @kind object;
  #L2cedae.  v1:= v1.`e.e.a.b.f.o.ka.d` @type ^`java.util.Map` @kind object;
  #L2cedb2.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2cedb8.  v1:= temp @kind object;
  #L2cedba.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2cedc0.  v1:= temp @kind object;
  #L2cedc2.  v0.`e.e.a.b.f.o.j9.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L2cedc6.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.o.j9` v1 @kind this) @signature `Le/e/a/b/f/o/j9;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cdd1c.  v0:= v1.`e.e.a.b.f.o.j9.b` @type ^`java.util.Iterator` @kind object;
  #L2cdd20.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2cdd26.  v0:= temp;
  #L2cdd28.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.o.j9` v3 @kind this) @signature `Le/e/a/b/f/o/j9;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2ce1c8.  v0:= v3.`e.e.a.b.f.o.j9.b` @type ^`java.util.Iterator` @kind object;
  #L2ce1cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ce1d2.  v0:= temp @kind object;
  #L2ce1d4.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2ce1d8.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2ce1de.  v1:= temp @kind object;
  #L2ce1e0.  v1:= (`java.util.Collection`) v1 @kind object;
  #L2ce1e4.  v3.`e.e.a.b.f.o.j9.c` @type ^`java.util.Collection` := v1 @kind object;
  #L2ce1e8.  v1:= v3.`e.e.a.b.f.o.j9.d` @type ^`e.e.a.b.f.o.ka` @kind object;
  #L2ce1ec.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2ce1f2.  v2:= temp @kind object;
  #L2ce1f4.  v1:= v1.`e.e.a.b.f.o.ka.e` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2ce1f8.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2ce1fe.  v0:= temp @kind object;
  #L2ce200.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2ce204.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/o/ta;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L2ce20a.  v0:= temp @kind object;
  #L2ce20c.  v1:= new `e.e.a.b.f.o.n`;
  #L2ce210.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/o/n;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L2ce216.  return v1 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.o.j9` v2 @kind this) @signature `Le/e/a/b/f/o/j9;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cedd8.  v0:= v2.`e.e.a.b.f.o.j9.c` @type ^`java.util.Collection` @kind object;
  #L2ceddc.  if v0 == 0 then goto L2cede4;
  #L2cede0.  v0:= 1I;
  #L2cede2.  goto L2cede6;
  #L2cede4.  v0:= 0I;
  #L2cede6.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L2cedea.  call `a`(v0, v1) @signature `Le/e/a/b/f/o/e4;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2cedf0.  v0:= v2.`e.e.a.b.f.o.j9.b` @type ^`java.util.Iterator` @kind object;
  #L2cedf4.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2cedfa.  v0:= v2.`e.e.a.b.f.o.j9.d` @type ^`e.e.a.b.f.o.ka` @kind object;
  #L2cedfe.  v0:= v0.`e.e.a.b.f.o.ka.e` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2cee02.  v1:= v2.`e.e.a.b.f.o.j9.c` @type ^`java.util.Collection` @kind object;
  #L2cee06.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2cee0c.  v1:= temp;
  #L2cee0e.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/o/ta;.b:(Le/e/a/b/f/o/ta;I)I` @kind static;
  #L2cee14.  v0:= v2.`e.e.a.b.f.o.j9.c` @type ^`java.util.Collection` @kind object;
  #L2cee18.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2cee1e.  v0:= 0I;
  #L2cee20.  v2.`e.e.a.b.f.o.j9.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2cee24.  return @kind void;
}
