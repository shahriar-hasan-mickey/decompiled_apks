record `e.e.a.b.f.u.f1$a` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.u.s4$b` @kind class, `e.e.a.b.f.u.d6` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.u.f1$a` v1 @kind this) @signature `Le/e/a/b/f/u/f1$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L322174.  call temp:= `n`() @signature `Le/e/a/b/f/u/f1;.n:()Le/e/a/b/f/u/f1;` @kind static;
  #L32217a.  v0:= temp @kind object;
  #L32217c.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/u/s4$b;.<init>:(Le/e/a/b/f/u/s4;)V` @kind direct;
  #L322182.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.f1$a` v0 @kind this, `e.e.a.b.f.u.o1` v1 @kind object) @signature `Le/e/a/b/f/u/f1$a;.<init>:(Le/e/a/b/f/u/o1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L322194.  call `<init>`(v0) @signature `Le/e/a/b/f/u/f1$a;.<init>:()V` @kind direct;
  #L32219a.  return @kind void;
}
procedure `e.e.a.b.f.u.f1$a` `a`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.a:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32203c.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L322040.  if v0 == 0 then goto L322050;
  #L322044.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L32204a.  v0:= 0I;
  #L32204c.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L322050.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L322054.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L322058.  call `a`(v0, v2) @signature `Le/e/a/b/f/u/f1;.a:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L32205e.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.f1$a` `b`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.b:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L322070.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L322074.  if v0 == 0 then goto L322084;
  #L322078.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L32207e.  v0:= 0I;
  #L322080.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L322084.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L322088.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L32208c.  call `b`(v0, v2) @signature `Le/e/a/b/f/u/f1;.b:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L322092.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.f1$a` `c`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.c:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3220a4.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L3220a8.  if v0 == 0 then goto L3220b8;
  #L3220ac.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L3220b2.  v0:= 0I;
  #L3220b4.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L3220b8.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L3220bc.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L3220c0.  call `c`(v0, v2) @signature `Le/e/a/b/f/u/f1;.c:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L3220c6.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.f1$a` `d`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.d:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3220d8.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L3220dc.  if v0 == 0 then goto L3220ec;
  #L3220e0.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L3220e6.  v0:= 0I;
  #L3220e8.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L3220ec.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L3220f0.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L3220f4.  call `d`(v0, v2) @signature `Le/e/a/b/f/u/f1;.d:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L3220fa.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.f1$a` `e`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.e:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32210c.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L322110.  if v0 == 0 then goto L322120;
  #L322114.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L32211a.  v0:= 0I;
  #L32211c.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L322120.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L322124.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L322128.  call `e`(v0, v2) @signature `Le/e/a/b/f/u/f1;.e:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L32212e.  return v1 @kind object;
}
procedure `e.e.a.b.f.u.f1$a` `f`(`e.e.a.b.f.u.f1$a` v1 @kind this, `float` v2 ) @signature `Le/e/a/b/f/u/f1$a;.f:(F)Le/e/a/b/f/u/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L322140.  v0:= v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` @kind boolean;
  #L322144.  if v0 == 0 then goto L322154;
  #L322148.  call `e`(v1) @signature `Le/e/a/b/f/u/s4$b;.e:()V` @kind virtual;
  #L32214e.  v0:= 0I;
  #L322150.  v1.`e.e.a.b.f.u.s4$b.d` @type ^`boolean` := v0 @kind boolean;
  #L322154.  v0:= v1.`e.e.a.b.f.u.s4$b.c` @type ^`e.e.a.b.f.u.s4` @kind object;
  #L322158.  v0:= (`e.e.a.b.f.u.f1`) v0 @kind object;
  #L32215c.  call `f`(v0, v2) @signature `Le/e/a/b/f/u/f1;.f:(Le/e/a/b/f/u/f1;F)V` @kind static;
  #L322162.  return v1 @kind object;
}
