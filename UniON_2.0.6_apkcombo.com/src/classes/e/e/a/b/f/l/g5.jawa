record `e.e.a.b.f.l.g5` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Le/e/a/b/f/l/g5;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L260ea0.  v0:= 0I;
  #L260ea2.  v1:= 0I;
  #L260ea4.  v2:= length @variable v12;
  #L260ea6.  if v1 >= v2 then goto L261002;
  #L260eaa.  v2:= v12[v1] @kind object;
  #L260eae.  if v2 != 0 then goto L260eba;
  #L260eb2.  v2:= "null" @kind object;
  #L260eb6.  goto L260ff6;
  #L260eba.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L260ec0.  v2:= temp @kind object;
  #L260ec2.  goto L260ff6;
  #L260ec6.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L260ec8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L260ece.  v3:= temp @kind object;
  #L260ed0.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L260ed6.  v3:= temp @kind object;
  #L260ed8.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L260ede.  v2:= temp;
  #L260ee0.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L260ee6.  v2:= temp @kind object;
  #L260ee8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L260eee.  v4:= temp @kind object;
  #L260ef0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L260ef6.  v4:= temp;
  #L260ef8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L260efe.  v5:= temp @kind object;
  #L260f00.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L260f06.  v5:= temp;
  #L260f08.  v6:= new `java.lang.StringBuilder`;
  #L260f0c.  v4:= v4 + 1;
  #L260f10.  v4:= v4 + v5 @kind int;
  #L260f12.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L260f18.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260f1e.  v3:= 64I;
  #L260f22.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L260f28.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260f2e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L260f34.  v2:= temp @kind object;
  #L260f36.  v3:= "com.google.common.base.Strings" @kind object;
  #L260f3a.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L260f40.  v3:= temp @kind object;
  #L260f42.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L260f46.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L260f4c.  v5:= temp @kind object;
  #L260f4e.  v6:= "Exception during lenientFormat for " @kind object;
  #L260f52.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L260f58.  v7:= temp;
  #L260f5a.  if v7 == 0 then goto L260f68;
  #L260f5e.  call temp:= `concat`(v6, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L260f64.  v5:= temp @kind object;
  #L260f66.  goto L260f72;
  #L260f68.  v5:= new `java.lang.String`;
  #L260f6c.  call `<init>`(v5, v6) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L260f72.  v7:= v5 @kind object;
  #L260f74.  v5:= "com.google.common.base.Strings" @kind object;
  #L260f78.  v6:= "lenientToString" @kind object;
  #L260f7c.  v8:= v9 @kind object;
  #L260f7e.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L260f84.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L260f8a.  v3:= temp @kind object;
  #L260f8c.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L260f92.  v3:= temp @kind object;
  #L260f94.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L260f9a.  v4:= temp @kind object;
  #L260f9c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L260fa2.  v4:= temp;
  #L260fa4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L260faa.  v5:= temp @kind object;
  #L260fac.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L260fb2.  v5:= temp;
  #L260fb4.  v6:= new `java.lang.StringBuilder`;
  #L260fb8.  v4:= v4 + 9;
  #L260fbc.  v4:= v4 + v5 @kind int;
  #L260fbe.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L260fc4.  v4:= "<" @kind object;
  #L260fc8.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fce.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fd4.  v2:= " threw " @kind object;
  #L260fd8.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fde.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fe4.  v2:= ">" @kind object;
  #L260fe8.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fee.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L260ff4.  v2:= temp @kind object;
  #L260ff6.  v12[v1]:= v2 @kind object;
  #L260ffa.  v1:= v1 + 1;
  #L260ffe.  goto L260ea4;
  #L261002.  v1:= new `java.lang.StringBuilder`;
  #L261006.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L26100c.  v3:= temp;
  #L26100e.  v2:= v2 * 16;
  #L261012.  v3:= v3 + v2 @kind int;
  #L261014.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L26101a.  v2:= 0I;
  #L26101c.  v3:= length @variable v12;
  #L26101e.  if v0 >= v3 then goto L261056;
  #L261022.  v4:= "%s" @kind object;
  #L261026.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L26102c.  v4:= temp;
  #L26102e.  v5:= -1I;
  #L261030.  if v4 != v5 then goto L261036;
  #L261034.  goto L261056;
  #L261036.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L26103c.  v2:= v0 + 1;
  #L261040.  v0:= v12[v0] @kind object;
  #L261044.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26104a.  v0:= v4 + 2;
  #L26104e.  v10:= v2;
  #L261050.  v2:= v0;
  #L261052.  v0:= v10;
  #L261054.  goto L26101c;
  #L261056.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L26105c.  v4:= temp;
  #L26105e.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L261064.  if v0 >= v3 then goto L2610ac;
  #L261068.  v11:= " [" @kind object;
  #L26106c.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261072.  v11:= v0 + 1;
  #L261076.  v0:= v12[v0] @kind object;
  #L26107a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261080.  v0:= length @variable v12;
  #L261082.  if v11 >= v0 then goto L2610a2;
  #L261086.  v0:= ", " @kind object;
  #L26108a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261090.  v0:= v11 + 1;
  #L261094.  v11:= v12[v11] @kind object;
  #L261098.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26109e.  v11:= v0;
  #L2610a0.  goto L261080;
  #L2610a2.  v11:= 93I;
  #L2610a6.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2610ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2610b2.  v11:= temp @kind object;
  #L2610b4.  return v11 @kind object;
  catch `java.lang.Exception` @[L260eba..L260ec2] goto L260ec6;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/l/g5;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L260e5c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/l/e3;.a:(Ljava/lang/String;)Z` @kind static;
  #L260e62.  v0:= temp;
  #L260e64.  return v0;
}
