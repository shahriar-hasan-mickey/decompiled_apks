record `e.e.a.b.f.n.t40` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.t40.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.t40` `@@e.e.a.b.f.n.t40.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.t40` `@@e.e.a.b.f.n.t40.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.t40` `@@e.e.a.b.f.n.t40.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.t40`[] `@@e.e.a.b.f.n.t40.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/t40;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b9c2c.  v0:= new `e.e.a.b.f.n.t40`;
  #L2b9c30.  v1:= 0I;
  #L2b9c32.  v2:= "CLASSIFICATION_UNKNOWN" @kind object;
  #L2b9c36.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/t40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b9c3c.  `@@e.e.a.b.f.n.t40.c` @type ^`e.e.a.b.f.n.t40` := v0 @kind object;
  #L2b9c40.  v0:= new `e.e.a.b.f.n.t40`;
  #L2b9c44.  v2:= 1I;
  #L2b9c46.  v3:= "CLASSIFICATION_NONE" @kind object;
  #L2b9c4a.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/t40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b9c50.  `@@e.e.a.b.f.n.t40.d` @type ^`e.e.a.b.f.n.t40` := v0 @kind object;
  #L2b9c54.  v0:= new `e.e.a.b.f.n.t40`;
  #L2b9c58.  v3:= 2I;
  #L2b9c5a.  v4:= "CLASSIFICATION_ALL" @kind object;
  #L2b9c5e.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/t40;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b9c64.  `@@e.e.a.b.f.n.t40.e` @type ^`e.e.a.b.f.n.t40` := v0 @kind object;
  #L2b9c68.  v0:= 3I;
  #L2b9c6a.  v0:= new `e.e.a.b.f.n.t40`[v0];
  #L2b9c6e.  v4:= `@@e.e.a.b.f.n.t40.c` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9c72.  v0[v1]:= v4 @kind object;
  #L2b9c76.  v1:= `@@e.e.a.b.f.n.t40.d` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9c7a.  v0[v2]:= v1 @kind object;
  #L2b9c7e.  v1:= `@@e.e.a.b.f.n.t40.e` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9c82.  v0[v3]:= v1 @kind object;
  #L2b9c86.  `@@e.e.a.b.f.n.t40.f` @type ^`e.e.a.b.f.n.t40`[] := v0 @kind object;
  #L2b9c8a.  v0:= new `e.e.a.b.f.n.q40`;
  #L2b9c8e.  call `<init>`(v0) @signature `Le/e/a/b/f/n/q40;.<init>:()V` @kind direct;
  #L2b9c94.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.t40` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/t40;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b9ca8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b9cae.  v0.`e.e.a.b.f.n.t40.b` @type ^`int` := v3;
  #L2b9cb2.  return @kind void;
}
procedure `e.e.a.b.f.n.t40` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/t40;.a:(I)Le/e/a/b/f/n/t40;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9b28.  if v1 == 0 then goto L2b9b48;
  #L2b9b2c.  v0:= 1I;
  #L2b9b2e.  if v1 == v0 then goto L2b9b42;
  #L2b9b32.  v0:= 2I;
  #L2b9b34.  if v1 == v0 then goto L2b9b3c;
  #L2b9b38.  v1:= 0I;
  #L2b9b3a.  return v1 @kind object;
  #L2b9b3c.  v1:= `@@e.e.a.b.f.n.t40.e` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9b40.  return v1 @kind object;
  #L2b9b42.  v1:= `@@e.e.a.b.f.n.t40.d` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9b46.  return v1 @kind object;
  #L2b9b48.  v1:= `@@e.e.a.b.f.n.t40.c` @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9b4c.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/t40;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9b10.  v0:= `@@e.e.a.b.f.n.r40.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b9b14.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.t40`[] `values`() @signature `Le/e/a/b/f/n/t40;.values:()[Le/e/a/b/f/n/t40;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b9b60.  v0:= `@@e.e.a.b.f.n.t40.f` @type ^`e.e.a.b.f.n.t40`[] @kind object;
  #L2b9b64.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/t40;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b9b6a.  v0:= temp @kind object;
  #L2b9b6c.  v0:= (`e.e.a.b.f.n.t40`[]) v0 @kind object;
  #L2b9b70.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.t40` v2 @kind this) @signature `Le/e/a/b/f/n/t40;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b9b9c.  v0:= new `java.lang.StringBuilder`;
  #L2b9ba0.  v1:= "<" @kind object;
  #L2b9ba4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b9baa.  v1:= constclass @type ^`e.e.a.b.f.n.t40` @kind object;
  #L2b9bae.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b9bb4.  v1:= temp @kind object;
  #L2b9bb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9bbc.  v1:= 64I;
  #L2b9bc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9bc6.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b9bcc.  v1:= temp;
  #L2b9bce.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b9bd4.  v1:= temp @kind object;
  #L2b9bd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9bdc.  v1:= " number=" @kind object;
  #L2b9be0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9be6.  v1:= v2.`e.e.a.b.f.n.t40.b` @type ^`int`;
  #L2b9bea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9bf0.  v1:= " name=" @kind object;
  #L2b9bf4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9bfa.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b9c00.  v1:= temp @kind object;
  #L2b9c02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9c08.  v1:= 62I;
  #L2b9c0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b9c12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b9c18.  v0:= temp @kind object;
  #L2b9c1a.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.t40` v1 @kind this) @signature `Le/e/a/b/f/n/t40;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b9b84.  v0:= v1.`e.e.a.b.f.n.t40.b` @type ^`int`;
  #L2b9b88.  return v0;
}
