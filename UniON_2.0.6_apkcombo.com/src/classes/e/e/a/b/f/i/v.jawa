record `e.e.a.b.f.i.v` @kind class @AccessFlag FINAL extends `e.e.a.b.f.i.s` @kind class {
  `e.e.a.b.f.i.u` `e.e.a.b.f.i.v.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.i.v` v1 @kind this) @signature `Le/e/a/b/f/i/v;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21d180.  call `<init>`(v1) @signature `Le/e/a/b/f/i/s;.<init>:()V` @kind direct;
  #L21d186.  v0:= new `e.e.a.b.f.i.u`;
  #L21d18a.  call `<init>`(v0) @signature `Le/e/a/b/f/i/u;.<init>:()V` @kind direct;
  #L21d190.  v1.`e.e.a.b.f.i.v.a` @type ^`e.e.a.b.f.i.u` := v0 @kind object;
  #L21d194.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.i.v` v2 @kind this, `java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Le/e/a/b/f/i/v;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L21d1a8.  if v4 == v3 then goto L21d1c2;
  #L21d1ac.  v0:= v2.`e.e.a.b.f.i.v.a` @type ^`e.e.a.b.f.i.u` @kind object;
  #L21d1b0.  v1:= 1I;
  #L21d1b2.  call temp:= `a`(v0, v3, v1) @signature `Le/e/a/b/f/i/u;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @kind virtual;
  #L21d1b8.  v3:= temp @kind object;
  #L21d1ba.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21d1c0.  return @kind void;
  #L21d1c2.  v3:= new `java.lang.IllegalArgumentException`;
  #L21d1c6.  v0:= "Self suppression is not allowed." @kind object;
  #L21d1ca.  call `<init>`(v3, v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L21d1d0.  throw v3;
}
