record `e.e.a.b.f.n.o0` @kind class @AccessFlag  extends `e.e.a.b.f.n.n0` @kind class {
  `byte`[] `e.e.a.b.f.n.o0.e` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.n.o0` v0 @kind this, `byte`[] v1 @kind object) @signature `Le/e/a/b/f/n/o0;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L279818.  call `<init>`(v0) @signature `Le/e/a/b/f/n/n0;.<init>:()V` @kind direct;
  #L27981e.  if v1 == 0 then goto L279828;
  #L279822.  v0.`e.e.a.b.f.n.o0.e` @type ^`byte`[] := v1 @kind object;
  #L279826.  return @kind void;
  #L279828.  v1:= 0I;
  #L27982a.  throw v1;
}
procedure `byte` `a`(`e.e.a.b.f.n.o0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/o0;.a:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2796ec.  v0:= v1.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2796f0.  v2:= v0[v2] @kind byte;
  #L2796f4.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.n.o0` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/n/o0;.a:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L279794.  call temp:= `c`(v1) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L27979a.  v0:= temp;
  #L27979c.  v0:= v0 + v3 @kind int;
  #L27979e.  v3:= v1.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2797a2.  v4:= v4 + v0 @kind int;
  #L2797a4.  call temp:= `a`(v2, v3, v0, v4) @signature `Le/e/a/b/f/n/c5;.a:(I[BII)I` @kind static;
  #L2797aa.  v2:= temp;
  #L2797ac.  return v2;
}
procedure `e.e.a.b.f.n.q0` `a`(`e.e.a.b.f.n.o0` v3 @kind this, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/o0;.a:(II)Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L279724.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L27972a.  v0:= temp;
  #L27972c.  call temp:= `c`(v4, v5, v0) @signature `Le/e/a/b/f/n/q0;.c:(III)I` @kind static;
  #L279732.  v5:= temp;
  #L279734.  if v5 != 0 then goto L27973e;
  #L279738.  v4:= `@@e.e.a.b.f.n.q0.c` @type ^`e.e.a.b.f.n.q0` @kind object;
  #L27973c.  return v4 @kind object;
  #L27973e.  v0:= new `e.e.a.b.f.n.j0`;
  #L279742.  v1:= v3.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L279746.  call temp:= `c`(v3) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L27974c.  v2:= temp;
  #L27974e.  v2:= v2 + v4 @kind int;
  #L279750.  call `<init>`(v0, v1, v2, v5) @signature `Le/e/a/b/f/n/j0;.<init>:([BII)V` @kind direct;
  #L279756.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.n.o0` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Le/e/a/b/f/n/o0;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2797e8.  v0:= new `java.lang.String`;
  #L2797ec.  v1:= v4.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2797f0.  call temp:= `c`(v4) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2797f6.  v2:= temp;
  #L2797f8.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L2797fe.  v3:= temp;
  #L279800.  call `<init>`(v0, v1, v2, v3, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L279806.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.o0` v3 @kind this, `e.e.a.b.f.n.e0` v4 @kind object) @signature `Le/e/a/b/f/n/o0;.a:(Le/e/a/b/f/n/e0;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L279858.  v0:= v3.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L27985c.  call temp:= `c`(v3) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L279862.  v1:= temp;
  #L279864.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L27986a.  v2:= temp;
  #L27986c.  v4:= (`e.e.a.b.f.n.v0`) v4 @kind object;
  #L279870.  call `b`(v4, v0, v1, v2) @signature `Le/e/a/b/f/n/v0;.b:([BII)V` @kind virtual;
  #L279876.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.o0` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/o0;.a:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L27983c.  v0:= v1.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L279840.  call `arraycopy`(v0, v3, v2, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L279846.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.o0` v5 @kind this, `e.e.a.b.f.n.q0` v6 @kind object, `int` v7 , `int` v8 ) @signature `Le/e/a/b/f/n/o0;.a:(Le/e/a/b/f/n/q0;II)Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27958c.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279592.  v0:= temp;
  #L279594.  if v8 > v0 then goto L27966a;
  #L279598.  v0:= v7 + v8 @kind int;
  #L27959c.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L2795a2.  v1:= temp;
  #L2795a4.  if v0 > v1 then goto L279614;
  #L2795a8.  v1:= instanceof @variable v6 @type ^`e.e.a.b.f.n.o0` @kind boolean;
  #L2795ac.  v2:= 0I;
  #L2795ae.  if v1 == 0 then goto L2795fa;
  #L2795b2.  v6:= (`e.e.a.b.f.n.o0`) v6 @kind object;
  #L2795b6.  v0:= v5.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2795ba.  v1:= v6.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2795be.  call temp:= `c`(v5) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2795c4.  v3:= temp;
  #L2795c6.  v3:= v3 + v8 @kind int;
  #L2795c8.  call temp:= `c`(v5) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2795ce.  v8:= temp;
  #L2795d0.  call temp:= `c`(v6) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2795d6.  v6:= temp;
  #L2795d8.  v6:= v6 + v7 @kind int;
  #L2795da.  if v8 >= v3 then goto L2795f6;
  #L2795de.  v7:= v0[v8] @kind byte;
  #L2795e2.  v4:= v1[v6] @kind byte;
  #L2795e6.  if v7 == v4 then goto L2795ec;
  #L2795ea.  return v2;
  #L2795ec.  v8:= v8 + 1;
  #L2795f0.  v6:= v6 + 1;
  #L2795f4.  goto L2795da;
  #L2795f6.  v6:= 1I;
  #L2795f8.  return v6;
  #L2795fa.  call temp:= `a`(v6, v7, v0) @signature `Le/e/a/b/f/n/q0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L279600.  v6:= temp @kind object;
  #L279602.  call temp:= `a`(v5, v2, v8) @signature `Le/e/a/b/f/n/o0;.a:(II)Le/e/a/b/f/n/q0;` @kind virtual;
  #L279608.  v7:= temp @kind object;
  #L27960a.  call temp:= `equals`(v6, v7) @signature `Le/e/a/b/f/n/q0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L279610.  v6:= temp;
  #L279612.  return v6;
  #L279614.  v0:= new `java.lang.IllegalArgumentException`;
  #L279618.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L27961e.  v6:= temp;
  #L279620.  v1:= new `java.lang.StringBuilder`;
  #L279624.  v2:= 59I;
  #L279628.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L27962e.  v2:= "Ran off end of other: " @kind object;
  #L279632.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279638.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27963e.  v7:= ", " @kind object;
  #L279642.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279648.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27964e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279654.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27965a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279660.  v6:= temp @kind object;
  #L279662.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279668.  throw v0;
  #L27966a.  v6:= new `java.lang.IllegalArgumentException`;
  #L27966e.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L279674.  v7:= temp;
  #L279676.  v0:= new `java.lang.StringBuilder`;
  #L27967a.  v1:= 40I;
  #L27967e.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L279684.  v1:= "Length too large: " @kind object;
  #L279688.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27968e.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L279694.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27969a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2796a0.  v7:= temp @kind object;
  #L2796a2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2796a8.  throw v6;
}
procedure `byte` `b`(`e.e.a.b.f.n.o0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/o0;.b:(I)B` @AccessFlag  {
    temp;
    v0;

  #L279708.  v0:= v1.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L27970c.  v2:= v0[v2] @kind byte;
  #L279710.  return v2;
}
procedure `int` `b`(`e.e.a.b.f.n.o0` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/o0;.b:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L2797c0.  v0:= v2.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2797c4.  call temp:= `c`(v2) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2797ca.  v1:= temp;
  #L2797cc.  v1:= v1 + v4 @kind int;
  #L2797ce.  call temp:= `a`(v3, v0, v1, v5) @signature `Le/e/a/b/f/n/e2;.a:(I[BII)I` @kind static;
  #L2797d4.  v3:= temp;
  #L2797d6.  return v3;
}
procedure `int` `c`(`e.e.a.b.f.n.o0` v1 @kind this) @signature `Le/e/a/b/f/n/o0;.c:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L279780.  v0:= 0I;
  #L279782.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.n.o0` v1 @kind this) @signature `Le/e/a/b/f/n/o0;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279768.  v0:= v1.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L27976c.  v0:= length @variable v0;
  #L27976e.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.o0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/n/o0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2794f8.  v0:= 1I;
  #L2794fa.  if v5 != v4 then goto L279500;
  #L2794fe.  return v0;
  #L279500.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.n.q0` @kind boolean;
  #L279504.  v2:= 0I;
  #L279506.  if v1 != 0 then goto L27950c;
  #L27950a.  return v2;
  #L27950c.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L279512.  v1:= temp;
  #L279514.  v3:= v5 @kind object;
  #L279516.  v3:= (`e.e.a.b.f.n.q0`) v3 @kind object;
  #L27951a.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L279520.  v3:= temp;
  #L279522.  if v1 == v3 then goto L279528;
  #L279526.  return v2;
  #L279528.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L27952e.  v1:= temp;
  #L279530.  if v1 != 0 then goto L279536;
  #L279534.  return v0;
  #L279536.  v0:= instanceof @variable v5 @type ^`e.e.a.b.f.n.o0` @kind boolean;
  #L27953a.  if v0 == 0 then goto L279572;
  #L27953e.  v5:= (`e.e.a.b.f.n.o0`) v5 @kind object;
  #L279542.  call temp:= `h`(v4) @signature `Le/e/a/b/f/n/q0;.h:()I` @kind virtual;
  #L279548.  v0:= temp;
  #L27954a.  call temp:= `h`(v5) @signature `Le/e/a/b/f/n/q0;.h:()I` @kind virtual;
  #L279550.  v1:= temp;
  #L279552.  if v0 == 0 then goto L279560;
  #L279556.  if v1 == 0 then goto L279560;
  #L27955a.  if v0 == v1 then goto L279560;
  #L27955e.  return v2;
  #L279560.  call temp:= `d`(v4) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L279566.  v0:= temp;
  #L279568.  call temp:= `a`(v4, v5, v2, v0) @signature `Le/e/a/b/f/n/o0;.a:(Le/e/a/b/f/n/q0;II)Z` @kind virtual;
  #L27956e.  v5:= temp;
  #L279570.  return v5;
  #L279572.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L279578.  v5:= temp;
  #L27957a.  return v5;
}
procedure `boolean` `f`(`e.e.a.b.f.n.o0` v3 @kind this) @signature `Le/e/a/b/f/n/o0;.f:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2796bc.  call temp:= `c`(v3) @signature `Le/e/a/b/f/n/o0;.c:()I` @kind virtual;
  #L2796c2.  v0:= temp;
  #L2796c4.  v1:= v3.`e.e.a.b.f.n.o0.e` @type ^`byte`[] @kind object;
  #L2796c8.  call temp:= `d`(v3) @signature `Le/e/a/b/f/n/o0;.d:()I` @kind virtual;
  #L2796ce.  v2:= temp;
  #L2796d0.  v2:= v2 + v0 @kind int;
  #L2796d2.  call temp:= `a`(v1, v0, v2) @signature `Le/e/a/b/f/n/c5;.a:([BII)Z` @kind static;
  #L2796d8.  v0:= temp;
  #L2796da.  return v0;
}
