record `e.e.a.b.f.r.x` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `e.e.a.b.f.r.d0` `e.e.a.b.f.r.x.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.x` v0 @kind this, `e.e.a.b.f.r.d0` v1 @kind object) @signature `Le/e/a/b/f/r/x;.<init>:(Le/e/a/b/f/r/d0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30c59c.  v0.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` := v1 @kind object;
  #L30c5a0.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L30c5a6.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.r.x` v1 @kind this) @signature `Le/e/a/b/f/r/x;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30c5b8.  v0:= v1.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c5bc.  call `clear`(v0) @signature `Le/e/a/b/f/r/d0;.clear:()V` @kind virtual;
  #L30c5c2.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.r.x` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/x;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30c3fc.  v0:= v3.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c400.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30c406.  v0:= temp @kind object;
  #L30c408.  if v0 == 0 then goto L30c41e;
  #L30c40c.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L30c412.  v0:= temp @kind object;
  #L30c414.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30c41a.  v4:= temp;
  #L30c41c.  return v4;
  #L30c41e.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L30c422.  v1:= 0I;
  #L30c424.  if v0 == 0 then goto L30c46a;
  #L30c428.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L30c42c.  v0:= v3.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c430.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30c436.  v2:= temp @kind object;
  #L30c438.  call temp:= `b`(v0, v2) @signature `Le/e/a/b/f/r/d0;.b:(Le/e/a/b/f/r/d0;Ljava/lang/Object;)I` @kind static;
  #L30c43e.  v0:= temp;
  #L30c440.  v2:= -1I;
  #L30c442.  if v0 == v2 then goto L30c46a;
  #L30c446.  v2:= v3.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c44a.  v2:= v2.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30c44e.  v0:= v2[v0] @kind object;
  #L30c452.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30c458.  v4:= temp @kind object;
  #L30c45a.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30c460.  v4:= temp;
  #L30c462.  if v4 == 0 then goto L30c46a;
  #L30c466.  v4:= 1I;
  #L30c468.  return v4;
  #L30c46a.  return v1;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.r.x` v2 @kind this) @signature `Le/e/a/b/f/r/x;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30c55c.  v0:= v2.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c560.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30c566.  v1:= temp @kind object;
  #L30c568.  if v1 == 0 then goto L30c57e;
  #L30c56c.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L30c572.  v0:= temp @kind object;
  #L30c574.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30c57a.  v0:= temp @kind object;
  #L30c57c.  goto L30c58a;
  #L30c57e.  v1:= new `e.e.a.b.f.r.v`;
  #L30c582.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/r/v;.<init>:(Le/e/a/b/f/r/d0;)V` @kind direct;
  #L30c588.  v0:= v1 @kind object;
  #L30c58a.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.r.x` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Le/e/a/b/f/r/x;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30c47c.  v0:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c480.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30c486.  v0:= temp @kind object;
  #L30c488.  if v0 == 0 then goto L30c49e;
  #L30c48c.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L30c492.  v0:= temp @kind object;
  #L30c494.  call temp:= `remove`(v0, v10) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L30c49a.  v10:= temp;
  #L30c49c.  return v10;
  #L30c49e.  v0:= instanceof @variable v10 @type ^`java.util.Map$Entry` @kind boolean;
  #L30c4a2.  v1:= 0I;
  #L30c4a4.  if v0 == 0 then goto L30c52a;
  #L30c4a8.  v10:= (`java.util.Map$Entry`) v10 @kind object;
  #L30c4ac.  v0:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c4b0.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30c4b6.  v0:= temp;
  #L30c4b8.  if v0 == 0 then goto L30c4be;
  #L30c4bc.  return v1;
  #L30c4be.  v0:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c4c2.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:(Le/e/a/b/f/r/d0;)I` @kind static;
  #L30c4c8.  v0:= temp;
  #L30c4ca.  call temp:= `getKey`(v10) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30c4d0.  v2:= temp @kind object;
  #L30c4d2.  call temp:= `getValue`(v10) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30c4d8.  v3:= temp @kind object;
  #L30c4da.  v10:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c4de.  call temp:= `c`(v10) @signature `Le/e/a/b/f/r/d0;.c:(Le/e/a/b/f/r/d0;)Ljava/lang/Object;` @kind static;
  #L30c4e4.  v5:= temp @kind object;
  #L30c4e6.  v10:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c4ea.  v6:= v10.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30c4ee.  v7:= v10.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30c4f2.  v8:= v10.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30c4f6.  v4:= v0;
  #L30c4f8.  call temp:= `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L30c4fe.  v10:= temp;
  #L30c500.  v2:= -1I;
  #L30c502.  if v10 != v2 then goto L30c508;
  #L30c506.  return v1;
  #L30c508.  v1:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c50c.  call `a`(v1, v10, v0) @signature `Le/e/a/b/f/r/d0;.a:(II)V` @kind virtual;
  #L30c512.  v10:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c516.  call temp:= `d`(v10) @signature `Le/e/a/b/f/r/d0;.d:(Le/e/a/b/f/r/d0;)I` @kind static;
  #L30c51c.  v10:= v9.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c520.  call `c`(v10) @signature `Le/e/a/b/f/r/d0;.c:()V` @kind virtual;
  #L30c526.  v10:= 1I;
  #L30c528.  return v10;
  #L30c52a.  return v1;
}
procedure `int` `size`(`e.e.a.b.f.r.x` v1 @kind this) @signature `Le/e/a/b/f/r/x;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30c53c.  v0:= v1.`e.e.a.b.f.r.x.b` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c540.  call temp:= `size`(v0) @signature `Le/e/a/b/f/r/d0;.size:()I` @kind virtual;
  #L30c546.  v0:= temp;
  #L30c548.  return v0;
}
