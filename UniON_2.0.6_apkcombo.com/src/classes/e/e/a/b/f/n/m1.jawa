record `e.e.a.b.f.n.m1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.d3` @kind interface {
}
global `e.e.a.b.f.n.m1` `@@e.e.a.b.f.n.m1.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/m1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L27e16c.  v0:= new `e.e.a.b.f.n.m1`;
  #L27e170.  call `<init>`(v0) @signature `Le/e/a/b/f/n/m1;.<init>:()V` @kind direct;
  #L27e176.  `@@e.e.a.b.f.n.m1.a` @type ^`e.e.a.b.f.n.m1` := v0 @kind object;
  #L27e17a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.m1` v0 @kind this) @signature `Le/e/a/b/f/n/m1;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27e18c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27e192.  return @kind void;
}
procedure `e.e.a.b.f.n.m1` `a`() @signature `Le/e/a/b/f/n/m1;.a:()Le/e/a/b/f/n/m1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27e080.  v0:= `@@e.e.a.b.f.n.m1.a` @type ^`e.e.a.b.f.n.m1` @kind object;
  #L27e084.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.c3` `a`(`e.e.a.b.f.n.m1` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Le/e/a/b/f/n/m1;.a:(Ljava/lang/Class;)Le/e/a/b/f/n/c3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27e098.  v0:= constclass @type ^`e.e.a.b.f.n.t1` @kind object;
  #L27e09c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L27e0a2.  v1:= temp;
  #L27e0a4.  if v1 != 0 then goto L27e0e8;
  #L27e0a8.  v0:= new `java.lang.IllegalArgumentException`;
  #L27e0ac.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L27e0b2.  v5:= temp @kind object;
  #L27e0b4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27e0ba.  v5:= temp @kind object;
  #L27e0bc.  v1:= "Unsupported message type: " @kind object;
  #L27e0c0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27e0c6.  v2:= temp;
  #L27e0c8.  if v2 == 0 then goto L27e0d6;
  #L27e0cc.  call temp:= `concat`(v1, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L27e0d2.  v5:= temp @kind object;
  #L27e0d4.  goto L27e0e0;
  #L27e0d6.  v5:= new `java.lang.String`;
  #L27e0da.  call `<init>`(v5, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e0e0.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e0e6.  throw v0;
  #L27e0e8.  call temp:= `asSubclass`(v5, v0) @signature `Ljava/lang/Class;.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;` @kind virtual;
  #L27e0ee.  v0:= temp @kind object;
  #L27e0f0.  call temp:= `a`(v0) @signature `Le/e/a/b/f/n/t1;.a:(Ljava/lang/Class;)Le/e/a/b/f/n/t1;` @kind static;
  #L27e0f6.  v0:= temp @kind object;
  #L27e0f8.  v1:= 3I;
  #L27e0fa.  v2:= 0I;
  #L27e0fc.  call temp:= `a`(v0, v1, v2, v2) @signature `Le/e/a/b/f/n/t1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27e102.  v0:= temp @kind object;
  #L27e104.  v0:= (`e.e.a.b.f.n.c3`) v0 @kind object;
  #L27e108.  return v0 @kind object;
  #L27e10a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L27e10c.  v1:= new `java.lang.RuntimeException`;
  #L27e110.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L27e116.  v5:= temp @kind object;
  #L27e118.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27e11e.  v5:= temp @kind object;
  #L27e120.  v2:= "Unable to get message info for " @kind object;
  #L27e124.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27e12a.  v3:= temp;
  #L27e12c.  if v3 == 0 then goto L27e13a;
  #L27e130.  call temp:= `concat`(v2, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L27e136.  v5:= temp @kind object;
  #L27e138.  goto L27e144;
  #L27e13a.  v5:= new `java.lang.String`;
  #L27e13e.  call `<init>`(v5, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e144.  call `<init>`(v1, v5, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L27e14a.  throw v1;
  catch `java.lang.Exception` @[L27e0e8..L27e108] goto L27e10a;
}
procedure `boolean` `b`(`e.e.a.b.f.n.m1` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Le/e/a/b/f/n/m1;.b:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27e060.  v0:= constclass @type ^`e.e.a.b.f.n.t1` @kind object;
  #L27e064.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L27e06a.  v2:= temp;
  #L27e06c.  return v2;
}
