record `e.e.a.b.f.u.o0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.m0` @kind interface, `java.io.Serializable` @kind interface {
  `e.e.a.b.f.u.m0` `e.e.a.b.f.u.o0.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.b.f.u.o0.c` @AccessFlag PRIVATE_TRANSIENT_VOLATILE;
  `java.lang.Object` `e.e.a.b.f.u.o0.d` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.u.o0` v0 @kind this, `e.e.a.b.f.u.m0` v1 @kind object) @signature `Le/e/a/b/f/u/o0;.<init>:(Le/e/a/b/f/u/m0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L31fe40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31fe46.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/l0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L31fe4c.  v1:= (`e.e.a.b.f.u.m0`) v1 @kind object;
  #L31fe50.  v0.`e.e.a.b.f.u.o0.b` @type ^`e.e.a.b.f.u.m0` := v1 @kind object;
  #L31fe54.  return @kind void;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.u.o0` v3 @kind this) @signature `Le/e/a/b/f/u/o0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31fd8c.  v0:= v3.`e.e.a.b.f.u.o0.c` @type ^`boolean` @kind boolean;
  #L31fd90.  if v0 == 0 then goto L31fde2;
  #L31fd94.  v0:= v3.`e.e.a.b.f.u.o0.d` @type ^`java.lang.Object` @kind object;
  #L31fd98.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31fd9e.  v0:= temp @kind object;
  #L31fda0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31fda6.  v1:= temp @kind object;
  #L31fda8.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L31fdae.  v1:= temp;
  #L31fdb0.  v1:= v1 + 25;
  #L31fdb4.  v2:= new `java.lang.StringBuilder`;
  #L31fdb8.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L31fdbe.  v1:= "<supplier that returned " @kind object;
  #L31fdc2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fdc8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fdce.  v0:= ">" @kind object;
  #L31fdd2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fdd8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31fdde.  v0:= temp @kind object;
  #L31fde0.  goto L31fde6;
  #L31fde2.  v0:= v3.`e.e.a.b.f.u.o0.b` @type ^`e.e.a.b.f.u.m0` @kind object;
  #L31fde6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31fdec.  v0:= temp @kind object;
  #L31fdee.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31fdf4.  v1:= temp @kind object;
  #L31fdf6.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L31fdfc.  v1:= temp;
  #L31fdfe.  v1:= v1 + 19;
  #L31fe02.  v2:= new `java.lang.StringBuilder`;
  #L31fe06.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L31fe0c.  v1:= "Suppliers.memoize(" @kind object;
  #L31fe10.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fe16.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fe1c.  v0:= ")" @kind object;
  #L31fe20.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fe26.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31fe2c.  v0:= temp @kind object;
  #L31fe2e.  return v0 @kind object;
}
