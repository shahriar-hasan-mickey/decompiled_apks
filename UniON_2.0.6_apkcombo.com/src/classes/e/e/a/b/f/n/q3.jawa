record `e.e.a.b.f.n.q3` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.v` @kind class, `java.util.RandomAccess` @kind interface {
  `java.lang.Object`[] `e.e.a.b.f.n.q3.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.n.q3.d` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.n.q3` `@@e.e.a.b.f.n.q3.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/q3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2885c4.  v0:= new `e.e.a.b.f.n.q3`;
  #L2885c8.  v1:= 0I;
  #L2885ca.  v2:= new `java.lang.Object`[v1];
  #L2885ce.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/n/q3;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L2885d4.  `@@e.e.a.b.f.n.q3.e` @type ^`e.e.a.b.f.n.q3` := v0 @kind object;
  #L2885d8.  v0:= `@@e.e.a.b.f.n.q3.e` @type ^`e.e.a.b.f.n.q3` @kind object;
  #L2885dc.  call `zzb`(v0) @signature `Le/e/a/b/f/n/v;.zzb:()V` @kind virtual;
  #L2885e2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.q3` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/n/q3;.<init>:([Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2885f4.  call `<init>`(v0) @signature `Le/e/a/b/f/n/v;.<init>:()V` @kind direct;
  #L2885fa.  v0.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2885fe.  v0.`e.e.a.b.f.n.q3.d` @type ^`int` := v2;
  #L288602.  return @kind void;
}
procedure `e.e.a.b.f.n.q3` `c`() @signature `Le/e/a/b/f/n/q3;.c:()Le/e/a/b/f/n/q3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L288494.  v0:= `@@e.e.a.b.f.n.q3.e` @type ^`e.e.a.b.f.n.q3` @kind object;
  #L288498.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`e.e.a.b.f.n.q3` v3 @kind this, `int` v4 ) @signature `Le/e/a/b/f/n/q3;.d:(I)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L288578.  v0:= v3.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L28857c.  v1:= new `java.lang.StringBuilder`;
  #L288580.  v2:= 35I;
  #L288584.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L28858a.  v2:= "Index:" @kind object;
  #L28858e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L288594.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28859a.  v4:= ", Size:" @kind object;
  #L28859e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2885a4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2885aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2885b0.  v4:= temp @kind object;
  #L2885b2.  return v4 @kind object;
}
procedure `void` `h`(`e.e.a.b.f.n.q3` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/q3;.h:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2886b4.  if v2 < 0 then goto L2886c2;
  #L2886b8.  v0:= v1.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L2886bc.  if v2 >= v0 then goto L2886c2;
  #L2886c0.  return @kind void;
  #L2886c2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2886c6.  call temp:= `d`(v1, v2) @signature `Le/e/a/b/f/n/q3;.d:(I)Ljava/lang/String;` @kind direct;
  #L2886cc.  v2:= temp @kind object;
  #L2886ce.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2886d4.  throw v0;
}
procedure `void` `add`(`e.e.a.b.f.n.q3` v4 @kind this, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/n/q3;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L288614.  call `d`(v4) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L28861a.  if v5 < 0 then goto L288690;
  #L28861e.  v0:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288622.  if v5 > v0 then goto L288690;
  #L288626.  v1:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L28862a.  v2:= length @variable v1;
  #L28862c.  if v0 >= v2 then goto L28863e;
  #L288630.  v2:= v5 + 1;
  #L288634.  v0:= v0 - v5 @kind int;
  #L288636.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L28863c.  goto L28866e;
  #L28863e.  v0:= v0 * 3;
  #L288642.  v0:= v0 / 2;
  #L288646.  v0:= v0 + 1;
  #L28864a.  v0:= new `java.lang.Object`[v0];
  #L28864e.  v2:= 0I;
  #L288650.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L288656.  v1:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L28865a.  v2:= v5 + 1;
  #L28865e.  v3:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288662.  v3:= v3 - v5 @kind int;
  #L288664.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L28866a.  v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L28866e.  v0:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L288672.  v0[v5]:= v6 @kind object;
  #L288676.  v5:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L28867a.  v5:= v5 + 1;
  #L28867e.  v4.`e.e.a.b.f.n.q3.d` @type ^`int` := v5;
  #L288682.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L288686.  v5:= v5 + 1;
  #L28868a.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L28868e.  return @kind void;
  #L288690.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L288694.  call temp:= `d`(v4, v5) @signature `Le/e/a/b/f/n/q3;.d:(I)Ljava/lang/String;` @kind direct;
  #L28869a.  v5:= temp @kind object;
  #L28869c.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2886a2.  throw v6;
}
procedure `boolean` `add`(`e.e.a.b.f.n.q3` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/n/q3;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2883f8.  call `d`(v4) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L2883fe.  v0:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288402.  v1:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L288406.  v2:= length @variable v1;
  #L288408.  v3:= 1I;
  #L28840a.  if v0 != v2 then goto L288424;
  #L28840e.  v0:= v0 * 3;
  #L288412.  v0:= v0 / 2;
  #L288416.  v0:= v0 + v3 @kind int;
  #L288418.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L28841e.  v0:= temp @kind object;
  #L288420.  v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L288424.  v0:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L288428.  v1:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L28842c.  v2:= v1 + 1;
  #L288430.  v4.`e.e.a.b.f.n.q3.d` @type ^`int` := v2;
  #L288434.  v0[v1]:= v5 @kind object;
  #L288438.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L28843c.  v5:= v5 + v3 @kind int;
  #L28843e.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L288442.  return v3;
}
procedure `e.e.a.b.f.n.c2` `c`(`e.e.a.b.f.n.q3` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/n/q3;.c:(I)Le/e/a/b/f/n/c2;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L288454.  v0:= v2.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288458.  if v3 < v0 then goto L288478;
  #L28845c.  v0:= v2.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L288460.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L288466.  v3:= temp @kind object;
  #L288468.  v0:= new `e.e.a.b.f.n.q3`;
  #L28846c.  v1:= v2.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288470.  call `<init>`(v0, v3, v1) @signature `Le/e/a/b/f/n/q3;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L288476.  return v0 @kind object;
  #L288478.  v3:= new `java.lang.IllegalArgumentException`;
  #L28847c.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L288482.  throw v3;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.n.q3` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/q3;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2884c4.  call `h`(v1, v2) @signature `Le/e/a/b/f/n/q3;.h:(I)V` @kind direct;
  #L2884ca.  v0:= v1.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L2884ce.  v2:= v0[v2] @kind object;
  #L2884d2.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.n.q3` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/n/q3;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2884e4.  call `d`(v4) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L2884ea.  call `h`(v4, v5) @signature `Le/e/a/b/f/n/q3;.h:(I)V` @kind direct;
  #L2884f0.  v0:= v4.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L2884f4.  v1:= v0[v5] @kind object;
  #L2884f8.  v2:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L2884fc.  v3:= v2 + -1;
  #L288500.  if v5 >= v3 then goto L288514;
  #L288504.  v3:= v5 + 1;
  #L288508.  v2:= v2 - v5 @kind int;
  #L28850a.  v2:= v2 + -1;
  #L28850e.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L288514.  v5:= v4.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L288518.  v5:= v5 + -1;
  #L28851c.  v4.`e.e.a.b.f.n.q3.d` @type ^`int` := v5;
  #L288520.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L288524.  v5:= v5 + 1;
  #L288528.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L28852c.  return v1 @kind object;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.n.q3` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/n/q3;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L288540.  call `d`(v2) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L288546.  call `h`(v2, v3) @signature `Le/e/a/b/f/n/q3;.h:(I)V` @kind direct;
  #L28854c.  v0:= v2.`e.e.a.b.f.n.q3.c` @type ^`java.lang.Object`[] @kind object;
  #L288550.  v1:= v0[v3] @kind object;
  #L288554.  v0[v3]:= v4 @kind object;
  #L288558.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L28855c.  v3:= v3 + 1;
  #L288560.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L288564.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.n.q3` v1 @kind this) @signature `Le/e/a/b/f/n/q3;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2884ac.  v0:= v1.`e.e.a.b.f.n.q3.d` @type ^`int`;
  #L2884b0.  return v0;
}
