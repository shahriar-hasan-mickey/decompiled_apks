record `e.e.a.b.f.j.z2` @kind class @AccessFlag  extends `e.e.a.b.f.j.w2` @kind class {
  `byte`[] `e.e.a.b.f.j.z2.d` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.j.z2` v0 @kind this, `byte`[] v1 @kind object) @signature `Le/e/a/b/f/j/z2;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L222840.  call `<init>`(v0) @signature `Le/e/a/b/f/j/w2;.<init>:()V` @kind direct;
  #L222846.  if v1 == 0 then goto L222850;
  #L22284a.  v0.`e.e.a.b.f.j.z2.d` @type ^`byte`[] := v1 @kind object;
  #L22284e.  return @kind void;
  #L222850.  v1:= new `java.lang.NullPointerException`;
  #L222854.  call `<init>`(v1) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L22285a.  throw v1;
}
procedure `byte` `a`(`e.e.a.b.f.j.z2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/j/z2;.a:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L222740.  v0:= v1.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L222744.  v2:= v0[v2] @kind byte;
  #L222748.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.j.z2` v1 @kind this) @signature `Le/e/a/b/f/j/z2;.a:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2227fc.  v0:= 0I;
  #L2227fe.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.j.z2` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/j/z2;.a:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2227d4.  v3:= v1.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L2227d8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L2227de.  v0:= temp;
  #L2227e0.  call temp:= `a`(v2, v3, v0, v4) @signature `Le/e/a/b/f/j/s3;.a:(I[BII)I` @kind static;
  #L2227e6.  v2:= temp;
  #L2227e8.  return v2;
}
procedure `e.e.a.b.f.j.q2` `a`(`e.e.a.b.f.j.z2` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/j/z2;.a:(II)Le/e/a/b/f/j/q2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L222778.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L22277e.  v3:= temp;
  #L222780.  v0:= 0I;
  #L222782.  call temp:= `b`(v0, v4, v3) @signature `Le/e/a/b/f/j/q2;.b:(III)I` @kind static;
  #L222788.  v3:= temp;
  #L22278a.  if v3 != 0 then goto L222794;
  #L22278e.  v3:= `@@e.e.a.b.f.j.q2.c` @type ^`e.e.a.b.f.j.q2` @kind object;
  #L222792.  return v3 @kind object;
  #L222794.  v4:= new `e.e.a.b.f.j.t2`;
  #L222798.  v0:= v2.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L22279c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L2227a2.  v1:= temp;
  #L2227a4.  call `<init>`(v4, v0, v1, v3) @signature `Le/e/a/b/f/j/t2;.<init>:([BII)V` @kind direct;
  #L2227aa.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.j.z2` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Le/e/a/b/f/j/z2;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L222810.  v0:= new `java.lang.String`;
  #L222814.  v1:= v4.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L222818.  call temp:= `a`(v4) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L22281e.  v2:= temp;
  #L222820.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L222826.  v3:= temp;
  #L222828.  call `<init>`(v0, v1, v2, v3, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L22282e.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.j.z2` v3 @kind this, `e.e.a.b.f.j.n2` v4 @kind object) @signature `Le/e/a/b/f/j/z2;.a:(Le/e/a/b/f/j/n2;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L22286c.  v0:= v3.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L222870.  call temp:= `a`(v3) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L222876.  v1:= temp;
  #L222878.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L22287e.  v2:= temp;
  #L222880.  call `a`(v4, v0, v1, v2) @signature `Le/e/a/b/f/j/n2;.a:([BII)V` @kind virtual;
  #L222886.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.j.z2` v5 @kind this, `e.e.a.b.f.j.q2` v6 @kind object, `int` v7 , `int` v8 ) @signature `Le/e/a/b/f/j/z2;.a:(Le/e/a/b/f/j/q2;II)Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2225f4.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L2225fa.  v7:= temp;
  #L2225fc.  if v8 > v7 then goto L2226c0;
  #L222600.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L222606.  v7:= temp;
  #L222608.  if v8 > v7 then goto L222676;
  #L22260c.  v7:= instanceof @variable v6 @type ^`e.e.a.b.f.j.z2` @kind boolean;
  #L222610.  v0:= 0I;
  #L222612.  if v7 == 0 then goto L22265c;
  #L222616.  v6:= (`e.e.a.b.f.j.z2`) v6 @kind object;
  #L22261a.  v7:= v5.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L22261e.  v1:= v6.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L222622.  call temp:= `a`(v5) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L222628.  v2:= temp;
  #L22262a.  v2:= v2 + v8 @kind int;
  #L22262c.  call temp:= `a`(v5) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L222632.  v8:= temp;
  #L222634.  call temp:= `a`(v6) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L22263a.  v6:= temp;
  #L22263c.  if v8 >= v2 then goto L222658;
  #L222640.  v3:= v7[v8] @kind byte;
  #L222644.  v4:= v1[v6] @kind byte;
  #L222648.  if v3 == v4 then goto L22264e;
  #L22264c.  return v0;
  #L22264e.  v8:= v8 + 1;
  #L222652.  v6:= v6 + 1;
  #L222656.  goto L22263c;
  #L222658.  v6:= 1I;
  #L22265a.  return v6;
  #L22265c.  call temp:= `a`(v6, v0, v8) @signature `Le/e/a/b/f/j/q2;.a:(II)Le/e/a/b/f/j/q2;` @kind virtual;
  #L222662.  v6:= temp @kind object;
  #L222664.  call temp:= `a`(v5, v0, v8) @signature `Le/e/a/b/f/j/z2;.a:(II)Le/e/a/b/f/j/q2;` @kind virtual;
  #L22266a.  v7:= temp @kind object;
  #L22266c.  call temp:= `equals`(v6, v7) @signature `Le/e/a/b/f/j/q2;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222672.  v6:= temp;
  #L222674.  return v6;
  #L222676.  v7:= new `java.lang.IllegalArgumentException`;
  #L22267a.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L222680.  v6:= temp;
  #L222682.  v0:= 59I;
  #L222686.  v1:= new `java.lang.StringBuilder`;
  #L22268a.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L222690.  v0:= "Ran off end of other: 0, " @kind object;
  #L222694.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22269a.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226a0.  v8:= ", " @kind object;
  #L2226a4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226aa.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2226b6.  v6:= temp @kind object;
  #L2226b8.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2226be.  throw v7;
  #L2226c0.  v6:= new `java.lang.IllegalArgumentException`;
  #L2226c4.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L2226ca.  v7:= temp;
  #L2226cc.  v0:= 40I;
  #L2226d0.  v1:= new `java.lang.StringBuilder`;
  #L2226d4.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2226da.  v0:= "Length too large: " @kind object;
  #L2226de.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226e4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226ea.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2226f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2226f6.  v7:= temp @kind object;
  #L2226f8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2226fe.  throw v6;
}
procedure `byte` `b`(`e.e.a.b.f.j.z2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/j/z2;.b:(I)B` @AccessFlag  {
    temp;
    v0;

  #L22275c.  v0:= v1.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L222760.  v2:= v0[v2] @kind byte;
  #L222764.  return v2;
}
procedure `boolean` `d`(`e.e.a.b.f.j.z2` v3 @kind this) @signature `Le/e/a/b/f/j/z2;.d:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L222710.  call temp:= `a`(v3) @signature `Le/e/a/b/f/j/z2;.a:()I` @kind virtual;
  #L222716.  v0:= temp;
  #L222718.  v1:= v3.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L22271c.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L222722.  v2:= temp;
  #L222724.  v2:= v2 + v0 @kind int;
  #L222726.  call temp:= `a`(v1, v0, v2) @signature `Le/e/a/b/f/j/t6;.a:([BII)Z` @kind static;
  #L22272c.  v0:= temp;
  #L22272e.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.j.z2` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/j/z2;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L222560.  v0:= 1I;
  #L222562.  if v5 != v4 then goto L222568;
  #L222566.  return v0;
  #L222568.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.j.q2` @kind boolean;
  #L22256c.  v2:= 0I;
  #L22256e.  if v1 != 0 then goto L222574;
  #L222572.  return v2;
  #L222574.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L22257a.  v1:= temp;
  #L22257c.  v3:= v5 @kind object;
  #L22257e.  v3:= (`e.e.a.b.f.j.q2`) v3 @kind object;
  #L222582.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/j/q2;.zza:()I` @kind virtual;
  #L222588.  v3:= temp;
  #L22258a.  if v1 == v3 then goto L222590;
  #L22258e.  return v2;
  #L222590.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L222596.  v1:= temp;
  #L222598.  if v1 != 0 then goto L22259e;
  #L22259c.  return v0;
  #L22259e.  v0:= instanceof @variable v5 @type ^`e.e.a.b.f.j.z2` @kind boolean;
  #L2225a2.  if v0 == 0 then goto L2225da;
  #L2225a6.  v5:= (`e.e.a.b.f.j.z2`) v5 @kind object;
  #L2225aa.  call temp:= `c`(v4) @signature `Le/e/a/b/f/j/q2;.c:()I` @kind virtual;
  #L2225b0.  v0:= temp;
  #L2225b2.  call temp:= `c`(v5) @signature `Le/e/a/b/f/j/q2;.c:()I` @kind virtual;
  #L2225b8.  v1:= temp;
  #L2225ba.  if v0 == 0 then goto L2225c8;
  #L2225be.  if v1 == 0 then goto L2225c8;
  #L2225c2.  if v0 == v1 then goto L2225c8;
  #L2225c6.  return v2;
  #L2225c8.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/j/z2;.zza:()I` @kind virtual;
  #L2225ce.  v0:= temp;
  #L2225d0.  call temp:= `a`(v4, v5, v2, v0) @signature `Le/e/a/b/f/j/z2;.a:(Le/e/a/b/f/j/q2;II)Z` @kind virtual;
  #L2225d6.  v5:= temp;
  #L2225d8.  return v5;
  #L2225da.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2225e0.  v5:= temp;
  #L2225e2.  return v5;
}
procedure `int` `zza`(`e.e.a.b.f.j.z2` v1 @kind this) @signature `Le/e/a/b/f/j/z2;.zza:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2227bc.  v0:= v1.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L2227c0.  v0:= length @variable v0;
  #L2227c2.  return v0;
}
