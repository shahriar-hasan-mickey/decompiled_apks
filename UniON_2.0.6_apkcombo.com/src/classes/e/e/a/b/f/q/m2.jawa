record `e.e.a.b.f.q.m2` @kind class @AccessFlag ABSTRACT {
  `sun.misc.Unsafe` `e.e.a.b.f.q.m2.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.m2` v0 @kind this, `sun.misc.Unsafe` v1 @kind object) @signature `Le/e/a/b/f/q/m2;.<init>:(Lsun/misc/Unsafe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ddf30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ddf36.  v0.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` := v1 @kind object;
  #L2ddf3a.  return @kind void;
}
procedure `byte` `a`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;J)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `a`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Class;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dde70.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2dde74.  call temp:= `arrayBaseOffset`(v0, v2) @signature `Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I` @kind virtual;
  #L2dde7a.  v2:= temp;
  #L2dde7c.  return v2;
}
procedure `long` `a`(`e.e.a.b.f.q.m2` v2 @kind this, `java.lang.reflect.Field` v3 @kind object) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/reflect/Field;)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ddef0.  v0:= v2.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddef4.  call temp:= `objectFieldOffset`(v0, v3) @signature `Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J` @kind virtual;
  #L2ddefa.  v0:= temp @kind wide;
  #L2ddefc.  return v0 @kind wide;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object, `long` v1 , `byte` v3 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JB)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object, `long` v1 , `double` v3 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JD)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object, `long` v1 , `float` v3 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JF)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `int` v5 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JI)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ddf4c.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddf50.  call `putInt`(v0, v2, v3, v5) @signature `Lsun/misc/Unsafe;.putInt:(Ljava/lang/Object;JI)V` @kind virtual;
  #L2ddf56.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.m2` v6 @kind this, `java.lang.Object` v7 @kind object, `long` v8 , `long` v10 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ddf68.  v0:= v6.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddf6c.  v1:= v7 @kind object;
  #L2ddf6e.  v2:= v8 @kind wide;
  #L2ddf70.  v4:= v10 @kind wide;
  #L2ddf72.  call `putLong`(v0, v1, v2, v4) @signature `Lsun/misc/Unsafe;.putLong:(Ljava/lang/Object;JJ)V` @kind virtual;
  #L2ddf78.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ddf8c.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddf90.  call `putObject`(v0, v2, v3, v5) @signature `Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind virtual;
  #L2ddf96.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v0 @kind object, `long` v1 , `boolean` v3 ) @signature `Le/e/a/b/f/q/m2;.a:(Ljava/lang/Object;JZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`e.e.a.b.f.q.m2` v8 @kind this) @signature `Le/e/a/b/f/q/m2;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ddcb8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L2ddcbc.  v1:= v8.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddcc0.  v2:= 0I;
  #L2ddcc2.  if v1 == 0 then goto L2dddd0;
  #L2ddcc6.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ddccc.  v1:= temp @kind object;
  #L2ddcce.  v3:= 1I;
  #L2ddcd0.  v4:= new `java.lang.Class`[v3];
  #L2ddcd4.  v5:= constclass @type ^`java.lang.reflect.Field` @kind object;
  #L2ddcd8.  v4[v2]:= v5 @kind object;
  #L2ddcdc.  v5:= "objectFieldOffset" @kind object;
  #L2ddce0.  call temp:= `getMethod`(v1, v5, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddce6.  v4:= new `java.lang.Class`[v3];
  #L2ddcea.  v5:= constclass @type ^`java.lang.Class` @kind object;
  #L2ddcee.  v4[v2]:= v5 @kind object;
  #L2ddcf2.  v5:= "arrayBaseOffset" @kind object;
  #L2ddcf6.  call temp:= `getMethod`(v1, v5, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddcfc.  v4:= new `java.lang.Class`[v3];
  #L2ddd00.  v5:= constclass @type ^`java.lang.Class` @kind object;
  #L2ddd04.  v4[v2]:= v5 @kind object;
  #L2ddd08.  v5:= "arrayIndexScale" @kind object;
  #L2ddd0c.  call temp:= `getMethod`(v1, v5, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddd12.  v4:= 2I;
  #L2ddd14.  v5:= new `java.lang.Class`[v4];
  #L2ddd18.  v5[v2]:= v0 @kind object;
  #L2ddd1c.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd20.  v5[v3]:= v6 @kind object;
  #L2ddd24.  v6:= "getInt" @kind object;
  #L2ddd28.  call temp:= `getMethod`(v1, v6, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddd2e.  v5:= 3I;
  #L2ddd30.  v6:= new `java.lang.Class`[v5];
  #L2ddd34.  v6[v2]:= v0 @kind object;
  #L2ddd38.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd3c.  v6[v3]:= v7 @kind object;
  #L2ddd40.  v7:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd44.  v6[v4]:= v7 @kind object;
  #L2ddd48.  v7:= "putInt" @kind object;
  #L2ddd4c.  call temp:= `getMethod`(v1, v7, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddd52.  v6:= new `java.lang.Class`[v4];
  #L2ddd56.  v6[v2]:= v0 @kind object;
  #L2ddd5a.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd5e.  v6[v3]:= v7 @kind object;
  #L2ddd62.  v7:= "getLong" @kind object;
  #L2ddd66.  call temp:= `getMethod`(v1, v7, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddd6c.  v6:= new `java.lang.Class`[v5];
  #L2ddd70.  v6[v2]:= v0 @kind object;
  #L2ddd74.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd78.  v6[v3]:= v7 @kind object;
  #L2ddd7c.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd80.  v6[v4]:= v7 @kind object;
  #L2ddd84.  v7:= "putLong" @kind object;
  #L2ddd88.  call temp:= `getMethod`(v1, v7, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddd8e.  v6:= new `java.lang.Class`[v4];
  #L2ddd92.  v6[v2]:= v0 @kind object;
  #L2ddd96.  v7:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2ddd9a.  v6[v3]:= v7 @kind object;
  #L2ddd9e.  v7:= "getObject" @kind object;
  #L2ddda2.  call temp:= `getMethod`(v1, v7, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ddda8.  v5:= new `java.lang.Class`[v5];
  #L2dddac.  v5[v2]:= v0 @kind object;
  #L2dddb0.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2dddb4.  v5[v3]:= v6 @kind object;
  #L2dddb8.  v5[v4]:= v0 @kind object;
  #L2dddbc.  v0:= "putObject" @kind object;
  #L2dddc0.  call temp:= `getMethod`(v1, v0, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2dddc6.  return v3;
  #L2dddc8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dddca.  call `a`(v0) @signature `Le/e/a/b/f/q/n2;.a:(Ljava/lang/Throwable;)V` @kind static;
  #L2dddd0.  return v2;
  catch `java.lang.Throwable` @[L2ddcc6..L2dddc6] goto L2dddc8;
}
procedure `int` `b`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Le/e/a/b/f/q/m2;.b:(Ljava/lang/Class;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dde90.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2dde94.  call temp:= `arrayIndexScale`(v0, v2) @signature `Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I` @kind virtual;
  #L2dde9a.  v2:= temp;
  #L2dde9c.  return v2;
}
procedure `boolean` `b`(`e.e.a.b.f.q.m2` v5 @kind this) @signature `Le/e/a/b/f/q/m2;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dddf0.  v0:= v5.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2dddf4.  v1:= 0I;
  #L2dddf6.  if v0 == 0 then goto L2dde52;
  #L2dddfa.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2dde00.  v0:= temp @kind object;
  #L2dde02.  v2:= 1I;
  #L2dde04.  v3:= new `java.lang.Class`[v2];
  #L2dde08.  v4:= constclass @type ^`java.lang.reflect.Field` @kind object;
  #L2dde0c.  v3[v1]:= v4 @kind object;
  #L2dde10.  v4:= "objectFieldOffset" @kind object;
  #L2dde14.  call temp:= `getMethod`(v0, v4, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2dde1a.  v3:= 2I;
  #L2dde1c.  v3:= new `java.lang.Class`[v3];
  #L2dde20.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L2dde24.  v3[v1]:= v4 @kind object;
  #L2dde28.  v4:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L2dde2c.  v3[v2]:= v4 @kind object;
  #L2dde30.  v4:= "getLong" @kind object;
  #L2dde34.  call temp:= `getMethod`(v0, v4, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2dde3a.  call temp:= `e`() @signature `Le/e/a/b/f/q/n2;.e:()Ljava/lang/reflect/Field;` @kind static;
  #L2dde40.  v0:= temp @kind object;
  #L2dde42.  if v0 != 0 then goto L2dde48;
  #L2dde46.  return v1;
  #L2dde48.  return v2;
  #L2dde4a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dde4c.  call `a`(v0) @signature `Le/e/a/b/f/q/n2;.a:(Ljava/lang/Throwable;)V` @kind static;
  #L2dde52.  return v1;
  catch `java.lang.Throwable` @[L2dddfa..L2dde42] goto L2dde4a;
}
procedure `boolean` `b`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/q/m2;.b:(Ljava/lang/Object;J)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `c`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/q/m2;.c:(Ljava/lang/Object;J)F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `d`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/q/m2;.d:(Ljava/lang/Object;J)D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `e`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/q/m2;.e:(Ljava/lang/Object;J)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ddeb0.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddeb4.  call temp:= `getInt`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getInt:(Ljava/lang/Object;J)I` @kind virtual;
  #L2ddeba.  v2:= temp;
  #L2ddebc.  return v2;
}
procedure `long` `f`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/q/m2;.f:(Ljava/lang/Object;J)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ddf10.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2ddf14.  call temp:= `getLong`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getLong:(Ljava/lang/Object;J)J` @kind virtual;
  #L2ddf1a.  v2:= temp @kind wide;
  #L2ddf1c.  return v2 @kind wide;
}
procedure `java.lang.Object` `g`(`e.e.a.b.f.q.m2` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/q/m2;.g:(Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dded0.  v0:= v1.`e.e.a.b.f.q.m2.a` @type ^`sun.misc.Unsafe` @kind object;
  #L2dded4.  call temp:= `getObject`(v0, v2, v3) @signature `Lsun/misc/Unsafe;.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind virtual;
  #L2ddeda.  v2:= temp @kind object;
  #L2ddedc.  return v2 @kind object;
}
