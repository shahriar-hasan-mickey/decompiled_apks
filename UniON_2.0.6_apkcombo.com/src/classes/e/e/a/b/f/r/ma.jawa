record `e.e.a.b.f.r.ma` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.r.ma` `@@e.e.a.b.f.r.ma.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.r.ma` v0 @kind this) @signature `Le/e/a/b/f/r/ma;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31b2c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31b2ce.  return @kind void;
}
procedure `e.e.a.b.f.r.ma` `a`() @signature `Le/e/a/b/f/r/ma;.a:()Le/e/a/b/f/r/ma;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L31b280.  v0:= constclass @type ^`e.e.a.b.f.r.ma` @kind object;
  #L31b284.  @monitorenter v0
  #L31b286.  v1:= `@@e.e.a.b.f.r.ma.a` @type ^`e.e.a.b.f.r.ma` @kind object;
  #L31b28a.  if v1 != 0 then goto L31b29c;
  #L31b28e.  v1:= new `e.e.a.b.f.r.ma`;
  #L31b292.  call `<init>`(v1) @signature `Le/e/a/b/f/r/ma;.<init>:()V` @kind direct;
  #L31b298.  `@@e.e.a.b.f.r.ma.a` @type ^`e.e.a.b.f.r.ma` := v1 @kind object;
  #L31b29c.  v1:= `@@e.e.a.b.f.r.ma.a` @type ^`e.e.a.b.f.r.ma` @kind object;
  #L31b2a0.  @monitorexit v0
  #L31b2a2.  return v1 @kind object;
  #L31b2a4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31b2a6.  @monitorexit v0
  #L31b2a8.  throw v1;
  catch `java.lang.Throwable` @[L31b286..L31b2a0] goto L31b2a4;
}
