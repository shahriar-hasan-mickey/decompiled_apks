record `e.e.a.b.f.n.il` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `e.e.a.b.f.n.il.a` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.n.il.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.n.il` v4 @kind this, `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/n/il;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a12f8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a12fe.  v0:= 1I;
  #L2a1300.  v1:= 32767I;
  #L2a1304.  v2:= 0I;
  #L2a1306.  if v5 >= v1 then goto L2a1312;
  #L2a130a.  if v5 < 0 then goto L2a1312;
  #L2a130e.  v3:= 1I;
  #L2a1310.  goto L2a1314;
  #L2a1312.  v3:= 0I;
  #L2a1314.  call `a`(v3) @signature `Le/e/a/b/f/n/pt;.a:(Z)V` @kind static;
  #L2a131a.  if v6 >= v1 then goto L2a1324;
  #L2a131e.  if v6 < 0 then goto L2a1324;
  #L2a1322.  v2:= 1I;
  #L2a1324.  call `a`(v2) @signature `Le/e/a/b/f/n/pt;.a:(Z)V` @kind static;
  #L2a132a.  v4.`e.e.a.b.f.n.il.a` @type ^`int` := v5;
  #L2a132e.  v4.`e.e.a.b.f.n.il.b` @type ^`int` := v6;
  #L2a1332.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.n.il` v1 @kind this) @signature `Le/e/a/b/f/n/il;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a1280.  v0:= v1.`e.e.a.b.f.n.il.a` @type ^`int`;
  #L2a1284.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.n.il` v1 @kind this) @signature `Le/e/a/b/f/n/il;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a1298.  v0:= v1.`e.e.a.b.f.n.il.b` @type ^`int`;
  #L2a129c.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.il` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/n/il;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a1224.  v0:= instanceof @variable v4 @type ^`e.e.a.b.f.n.il` @kind boolean;
  #L2a1228.  v1:= 0I;
  #L2a122a.  if v0 == 0 then goto L2a124e;
  #L2a122e.  v4:= (`e.e.a.b.f.n.il`) v4 @kind object;
  #L2a1232.  v0:= v3.`e.e.a.b.f.n.il.a` @type ^`int`;
  #L2a1236.  v2:= v4.`e.e.a.b.f.n.il.a` @type ^`int`;
  #L2a123a.  if v0 != v2 then goto L2a124e;
  #L2a123e.  v0:= v3.`e.e.a.b.f.n.il.b` @type ^`int`;
  #L2a1242.  v4:= v4.`e.e.a.b.f.n.il.b` @type ^`int`;
  #L2a1246.  if v0 != v4 then goto L2a124e;
  #L2a124a.  v4:= 1I;
  #L2a124c.  return v4;
  #L2a124e.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.il` v2 @kind this) @signature `Le/e/a/b/f/n/il;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a1260.  v0:= v2.`e.e.a.b.f.n.il.b` @type ^`int`;
  #L2a1264.  v1:= v2.`e.e.a.b.f.n.il.a` @type ^`int`;
  #L2a1268.  v1:= v1 ^< 16;
  #L2a126c.  v0:= v0 ^| v1 @kind int;
  #L2a126e.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.il` v4 @kind this) @signature `Le/e/a/b/f/n/il;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a12b0.  v0:= v4.`e.e.a.b.f.n.il.a` @type ^`int`;
  #L2a12b4.  v1:= v4.`e.e.a.b.f.n.il.b` @type ^`int`;
  #L2a12b8.  v2:= new `java.lang.StringBuilder`;
  #L2a12bc.  v3:= 23I;
  #L2a12c0.  call `<init>`(v2, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2a12c6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a12cc.  v0:= "x" @kind object;
  #L2a12d0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a12d6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a12dc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a12e2.  v0:= temp @kind object;
  #L2a12e4.  return v0 @kind object;
}
