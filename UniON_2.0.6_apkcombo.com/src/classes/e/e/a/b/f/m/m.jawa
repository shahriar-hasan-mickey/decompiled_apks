record `e.e.a.b.f.m.m` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `java.lang.Object` `e.e.a.b.f.m.m.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.m.m.c` @AccessFlag ;
  `e.e.a.b.f.m.m` `e.e.a.b.f.m.m.d` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.m.m.e` @AccessFlag FINAL;
  `e.e.a.b.f.m.p` `e.e.a.b.f.m.m.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.m` v0 @kind this, `e.e.a.b.f.m.p` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Collection` v3 @kind object, `e.e.a.b.f.m.m` v4 @kind object) @signature `Le/e/a/b/f/m/m;.<init>:(Le/e/a/b/f/m/p;Ljava/lang/Object;Ljava/util/Collection;Le/e/a/b/f/m/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L264b00.  v0.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` := v1 @kind object;
  #L264b04.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L264b0a.  v0.`e.e.a.b.f.m.m.b` @type ^`java.lang.Object` := v2 @kind object;
  #L264b0e.  v0.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` := v3 @kind object;
  #L264b12.  v0.`e.e.a.b.f.m.m.d` @type ^`e.e.a.b.f.m.m` := v4 @kind object;
  #L264b16.  if v4 != 0 then goto L264b1e;
  #L264b1a.  v1:= 0I;
  #L264b1c.  goto L264b22;
  #L264b1e.  v1:= v4.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264b22.  v0.`e.e.a.b.f.m.m.e` @type ^`java.util.Collection` := v1 @kind object;
  #L264b26.  return @kind void;
}
procedure `boolean` `add`(`e.e.a.b.f.m.m` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/m/m;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L264870.  call `zza`(v2) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264876.  v0:= v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L26487a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L264880.  v0:= temp;
  #L264882.  v1:= v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264886.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26488c.  v3:= temp;
  #L26488e.  if v3 == 0 then goto L2648a8;
  #L264892.  v1:= v2.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264896.  call temp:= `c`(v1) @signature `Le/e/a/b/f/m/p;.c:(Le/e/a/b/f/m/p;)I` @kind static;
  #L26489c.  if v0 == 0 then goto L2648a8;
  #L2648a0.  call `d`(v2) @signature `Le/e/a/b/f/m/m;.d:()V` @kind virtual;
  #L2648a6.  v3:= 1I;
  #L2648a8.  return v3;
}
procedure `boolean` `addAll`(`e.e.a.b.f.m.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/m/m;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2648bc.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2648c2.  v0:= temp;
  #L2648c4.  if v0 == 0 then goto L2648cc;
  #L2648c8.  v4:= 0I;
  #L2648ca.  return v4;
  #L2648cc.  call temp:= `size`(v3) @signature `Le/e/a/b/f/m/m;.size:()I` @kind virtual;
  #L2648d2.  v0:= temp;
  #L2648d4.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L2648d8.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2648de.  v4:= temp;
  #L2648e0.  if v4 == 0 then goto L264908;
  #L2648e4.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L2648e8.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2648ee.  v1:= temp;
  #L2648f0.  v2:= v3.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L2648f4.  v1:= v1 - v0 @kind int;
  #L2648f6.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L2648fc.  if v0 != 0 then goto L264908;
  #L264900.  call `d`(v3) @signature `Le/e/a/b/f/m/m;.d:()V` @kind virtual;
  #L264906.  v4:= 1I;
  #L264908.  return v4;
}
procedure `void` `clear`(`e.e.a.b.f.m.m` v2 @kind this) @signature `Le/e/a/b/f/m/m;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L264b38.  call temp:= `size`(v2) @signature `Le/e/a/b/f/m/m;.size:()I` @kind virtual;
  #L264b3e.  v0:= temp;
  #L264b40.  if v0 != 0 then goto L264b46;
  #L264b44.  return @kind void;
  #L264b46.  v1:= v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264b4a.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L264b50.  v1:= v2.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264b54.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L264b5a.  call `zzb`(v2) @signature `Le/e/a/b/f/m/m;.zzb:()V` @kind virtual;
  #L264b60.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.m.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/m;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L26491c.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264922.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264926.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L26492c.  v2:= temp;
  #L26492e.  return v2;
}
procedure `boolean` `containsAll`(`e.e.a.b.f.m.m` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/m/m;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264940.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264946.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L26494a.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L264950.  v2:= temp;
  #L264952.  return v2;
}
procedure `void` `d`(`e.e.a.b.f.m.m` v3 @kind this) @signature `Le/e/a/b/f/m/m;.d:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L264c30.  v0:= v3.`e.e.a.b.f.m.m.d` @type ^`e.e.a.b.f.m.m` @kind object;
  #L264c34.  if v0 == 0 then goto L264c40;
  #L264c38.  call `d`(v0) @signature `Le/e/a/b/f/m/m;.d:()V` @kind virtual;
  #L264c3e.  return @kind void;
  #L264c40.  v0:= v3.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264c44.  call temp:= `a`(v0) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;)Ljava/util/Map;` @kind static;
  #L264c4a.  v0:= temp @kind object;
  #L264c4c.  v1:= v3.`e.e.a.b.f.m.m.b` @type ^`java.lang.Object` @kind object;
  #L264c50.  v2:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264c54.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L264c5a.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.m.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264964.  if v2 != v1 then goto L26496c;
  #L264968.  v2:= 1I;
  #L26496a.  return v2;
  #L26496c.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264972.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264976.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Collection;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L26497c.  v2:= temp;
  #L26497e.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.m.m` v1 @kind this) @signature `Le/e/a/b/f/m/m;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264a70.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264a76.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264a7a.  call temp:= `hashCode`(v0) @signature `Ljava/util/Collection;.hashCode:()I` @kind interface;
  #L264a80.  v0:= temp;
  #L264a82.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.m` v1 @kind this) @signature `Le/e/a/b/f/m/m;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264adc.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264ae2.  v0:= new `e.e.a.b.f.m.l`;
  #L264ae6.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/m/l;.<init>:(Le/e/a/b/f/m/m;)V` @kind direct;
  #L264aec.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.m.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/m;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264990.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264996.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L26499a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2649a0.  v2:= temp;
  #L2649a2.  if v2 == 0 then goto L2649b6;
  #L2649a6.  v0:= v1.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L2649aa.  call temp:= `b`(v0) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;)I` @kind static;
  #L2649b0.  call `zzb`(v1) @signature `Le/e/a/b/f/m/m;.zzb:()V` @kind virtual;
  #L2649b6.  return v2;
}
procedure `boolean` `removeAll`(`e.e.a.b.f.m.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/m/m;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2649c8.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2649ce.  v0:= temp;
  #L2649d0.  if v0 == 0 then goto L2649d8;
  #L2649d4.  v4:= 0I;
  #L2649d6.  return v4;
  #L2649d8.  call temp:= `size`(v3) @signature `Le/e/a/b/f/m/m;.size:()I` @kind virtual;
  #L2649de.  v0:= temp;
  #L2649e0.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L2649e4.  call temp:= `removeAll`(v1, v4) @signature `Ljava/util/Collection;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2649ea.  v4:= temp;
  #L2649ec.  if v4 == 0 then goto L264a0e;
  #L2649f0.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L2649f4.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2649fa.  v1:= temp;
  #L2649fc.  v2:= v3.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264a00.  v1:= v1 - v0 @kind int;
  #L264a02.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L264a08.  call `zzb`(v3) @signature `Le/e/a/b/f/m/m;.zzb:()V` @kind virtual;
  #L264a0e.  return v4;
}
procedure `boolean` `retainAll`(`e.e.a.b.f.m.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/m/m;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L264a20.  if v4 == 0 then goto L264a5c;
  #L264a24.  call temp:= `size`(v3) @signature `Le/e/a/b/f/m/m;.size:()I` @kind virtual;
  #L264a2a.  v0:= temp;
  #L264a2c.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264a30.  call temp:= `retainAll`(v1, v4) @signature `Ljava/util/Collection;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L264a36.  v4:= temp;
  #L264a38.  if v4 == 0 then goto L264a5a;
  #L264a3c.  v1:= v3.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264a40.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L264a46.  v1:= temp;
  #L264a48.  v2:= v3.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264a4c.  v1:= v1 - v0 @kind int;
  #L264a4e.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L264a54.  call `zzb`(v3) @signature `Le/e/a/b/f/m/m;.zzb:()V` @kind virtual;
  #L264a5a.  return v4;
  #L264a5c.  v4:= 0I;
  #L264a5e.  throw v4;
}
procedure `int` `size`(`e.e.a.b.f.m.m` v1 @kind this) @signature `Le/e/a/b/f/m/m;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264a94.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264a9a.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264a9e.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L264aa4.  v0:= temp;
  #L264aa6.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.m.m` v1 @kind this) @signature `Le/e/a/b/f/m/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264ab8.  call `zza`(v1) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264abe.  v0:= v1.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264ac2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L264ac8.  v0:= temp @kind object;
  #L264aca.  return v0 @kind object;
}
procedure `void` `zza`(`e.e.a.b.f.m.m` v2 @kind this) @signature `Le/e/a/b/f/m/m;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L264b74.  v0:= v2.`e.e.a.b.f.m.m.d` @type ^`e.e.a.b.f.m.m` @kind object;
  #L264b78.  if v0 == 0 then goto L264ba0;
  #L264b7c.  call `zza`(v0) @signature `Le/e/a/b/f/m/m;.zza:()V` @kind virtual;
  #L264b82.  v0:= v2.`e.e.a.b.f.m.m.d` @type ^`e.e.a.b.f.m.m` @kind object;
  #L264b86.  v0:= v0.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264b8a.  v1:= v2.`e.e.a.b.f.m.m.e` @type ^`java.util.Collection` @kind object;
  #L264b8e.  if v0 != v1 then goto L264b94;
  #L264b92.  goto L264bd4;
  #L264b94.  v0:= new `java.util.ConcurrentModificationException`;
  #L264b98.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L264b9e.  throw v0;
  #L264ba0.  v0:= v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264ba4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L264baa.  v0:= temp;
  #L264bac.  if v0 == 0 then goto L264bd4;
  #L264bb0.  v0:= v2.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264bb4.  call temp:= `a`(v0) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;)Ljava/util/Map;` @kind static;
  #L264bba.  v0:= temp @kind object;
  #L264bbc.  v1:= v2.`e.e.a.b.f.m.m.b` @type ^`java.lang.Object` @kind object;
  #L264bc0.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L264bc6.  v0:= temp @kind object;
  #L264bc8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L264bcc.  if v0 == 0 then goto L264bd4;
  #L264bd0.  v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` := v0 @kind object;
  #L264bd4.  return @kind void;
}
procedure `void` `zzb`(`e.e.a.b.f.m.m` v2 @kind this) @signature `Le/e/a/b/f/m/m;.zzb:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L264be8.  v0:= v2.`e.e.a.b.f.m.m.d` @type ^`e.e.a.b.f.m.m` @kind object;
  #L264bec.  if v0 == 0 then goto L264bf8;
  #L264bf0.  call `zzb`(v0) @signature `Le/e/a/b/f/m/m;.zzb:()V` @kind virtual;
  #L264bf6.  return @kind void;
  #L264bf8.  v0:= v2.`e.e.a.b.f.m.m.c` @type ^`java.util.Collection` @kind object;
  #L264bfc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L264c02.  v0:= temp;
  #L264c04.  if v0 == 0 then goto L264c1e;
  #L264c08.  v0:= v2.`e.e.a.b.f.m.m.f` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264c0c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;)Ljava/util/Map;` @kind static;
  #L264c12.  v0:= temp @kind object;
  #L264c14.  v1:= v2.`e.e.a.b.f.m.m.b` @type ^`java.lang.Object` @kind object;
  #L264c18.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L264c1e.  return @kind void;
}
