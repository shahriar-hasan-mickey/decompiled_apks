record `e.e.a.b.f.b.d4` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`e.e.a.b.f.b.d4` v0 @kind this) @signature `Le/e/a/b/f/b/d4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L210210.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L210216.  return @kind void;
}
procedure `void` `b`(`java.lang.CharSequence` v7 @kind object, `java.nio.ByteBuffer` v8 @kind object) @signature `Le/e/a/b/f/b/d4;.b:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L210228.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L21022e.  v0:= temp;
  #L210230.  call temp:= `position`(v8) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L210236.  v1:= temp;
  #L210238.  v2:= 0I;
  #L21023a.  v3:= 128I;
  #L21023e.  if v2 >= v0 then goto L210260;
  #L210242.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L210248.  v4:= temp;
  #L21024a.  if v4 >= v3 then goto L210260;
  #L21024e.  v3:= v1 + v2 @kind int;
  #L210252.  v4:= (`byte`) v4 @kind i2b;
  #L210254.  call temp:= `put`(v8, v3, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21025a.  v2:= v2 + 1;
  #L21025e.  goto L21023a;
  #L210260.  if v2 != v0 then goto L210270;
  #L210264.  v0:= v1 + v2 @kind int;
  #L210268.  call temp:= `position`(v8, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L21026e.  return @kind void;
  #L210270.  v1:= v1 + v2 @kind int;
  #L210272.  if v2 >= v0 then goto L2103ae;
  #L210276.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L21027c.  v4:= temp;
  #L21027e.  if v4 >= v3 then goto L21028e;
  #L210282.  v4:= (`byte`) v4 @kind i2b;
  #L210284.  call temp:= `put`(v8, v1, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21028a.  goto L2103a2;
  #L21028e.  v5:= 2048I;
  #L210292.  if v4 >= v5 then goto L2102c4;
  #L210296.  v5:= v1 + 1;
  #L21029a.  v6:= v4 ^>> 6;
  #L21029e.  v6:= v6 ^| 192;
  #L2102a2.  v6:= (`byte`) v6 @kind i2b;
  #L2102a4.  call temp:= `put`(v8, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2102aa.  v1:= v4 ^& 63;
  #L2102ae.  v1:= v1 ^| v3 @kind int;
  #L2102b0.  v1:= (`byte`) v1 @kind i2b;
  #L2102b2.  call temp:= `put`(v8, v5, v1) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2102b8.  v1:= v5;
  #L2102ba.  goto L2103a2;
  #L2102be.  v1:= v5;
  #L2102c0.  goto L2103b6;
  #L2102c4.  v5:= 55296I;
  #L2102ca.  if v4 < v5 then goto L21036a;
  #L2102ce.  v5:= 57343I;
  #L2102d4.  if v5 >= v4 then goto L2102da;
  #L2102d8.  goto L21036a;
  #L2102da.  v5:= v2 + 1;
  #L2102de.  if v5 == v0 then goto L21035e;
  #L2102e2.  call temp:= `charAt`(v7, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2102e8.  v2:= temp;
  #L2102ea.  call temp:= `isSurrogatePair`(v4, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2102f0.  v6:= temp;
  #L2102f2.  if v6 == 0 then goto L210356;
  #L2102f6.  call temp:= `toCodePoint`(v4, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L2102fc.  v2:= temp;
  #L2102fe.  v4:= v1 + 1;
  #L210302.  v6:= v2 ^>> 18;
  #L210306.  v6:= v6 ^| 240;
  #L21030a.  v6:= (`byte`) v6 @kind i2b;
  #L21030c.  call temp:= `put`(v8, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L210312.  v1:= v4 + 1;
  #L210316.  v6:= v2 ^>> 12;
  #L21031a.  v6:= v6 ^& 63;
  #L21031e.  v6:= v6 ^| v3 @kind int;
  #L210320.  v6:= (`byte`) v6 @kind i2b;
  #L210322.  call temp:= `put`(v8, v4, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L210328.  v4:= v1 + 1;
  #L21032c.  v6:= v2 ^>> 6;
  #L210330.  v6:= v6 ^& 63;
  #L210334.  v6:= v6 ^| v3 @kind int;
  #L210336.  v6:= (`byte`) v6 @kind i2b;
  #L210338.  call temp:= `put`(v8, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21033e.  v1:= v2 ^& 63;
  #L210342.  v1:= v1 ^| v3 @kind int;
  #L210344.  v1:= (`byte`) v1 @kind i2b;
  #L210346.  call temp:= `put`(v8, v4, v1) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21034c.  v1:= v4;
  #L21034e.  v2:= v5;
  #L210350.  goto L2103a2;
  #L210352.  v1:= v4;
  #L210354.  goto L21035a;
  #L210356.  v2:= v5;
  #L210358.  goto L21035e;
  #L21035a.  v2:= v5;
  #L21035c.  goto L2103b6;
  #L21035e.  v3:= new `e.e.a.b.f.b.f4`;
  #L210362.  call `<init>`(v3, v2, v0) @signature `Le/e/a/b/f/b/f4;.<init>:(II)V` @kind direct;
  #L210368.  throw v3;
  #L21036a.  v5:= v1 + 1;
  #L21036e.  v6:= v4 ^>> 12;
  #L210372.  v6:= v6 ^| 224;
  #L210376.  v6:= (`byte`) v6 @kind i2b;
  #L210378.  call temp:= `put`(v8, v1, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21037e.  v1:= v5 + 1;
  #L210382.  v6:= v4 ^>> 6;
  #L210386.  v6:= v6 ^& 63;
  #L21038a.  v6:= v6 ^| v3 @kind int;
  #L21038c.  v6:= (`byte`) v6 @kind i2b;
  #L21038e.  call temp:= `put`(v8, v5, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L210394.  v4:= v4 ^& 63;
  #L210398.  v4:= v4 ^| v3 @kind int;
  #L21039a.  v4:= (`byte`) v4 @kind i2b;
  #L21039c.  call temp:= `put`(v8, v1, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2103a2.  v2:= v2 + 1;
  #L2103a6.  v1:= v1 + 1;
  #L2103aa.  goto L210272;
  #L2103ae.  call temp:= `position`(v8, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2103b4.  return @kind void;
  #L2103b6.  call temp:= `position`(v8) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2103bc.  v0:= temp;
  #L2103be.  call temp:= `position`(v8) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2103c4.  v8:= temp;
  #L2103c6.  v1:= v1 - v8 @kind int;
  #L2103c8.  v1:= v1 + 1;
  #L2103cc.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2103d2.  v8:= temp;
  #L2103d4.  v0:= v0 + v8 @kind int;
  #L2103d6.  v8:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2103da.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2103e0.  v7:= temp;
  #L2103e2.  v1:= 37I;
  #L2103e6.  v2:= new `java.lang.StringBuilder`;
  #L2103ea.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2103f0.  v1:= "Failed writing " @kind object;
  #L2103f4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2103fa.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L210400.  v7:= " at index " @kind object;
  #L210404.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21040a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L210410.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L210416.  v7:= temp @kind object;
  #L210418.  call `<init>`(v8, v7) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21041e.  throw v8;
  catch `java.lang.IndexOutOfBoundsException` @[L210242..L21028a] goto L2103b6;
  catch `java.lang.IndexOutOfBoundsException` @[L2102a4..L2102b8] goto L2102be;
  catch `java.lang.IndexOutOfBoundsException` @[L2102e2..L2102fe] goto L21035a;
  catch `java.lang.IndexOutOfBoundsException` @[L21030c..L210312] goto L210352;
  catch `java.lang.IndexOutOfBoundsException` @[L210322..L210328] goto L21035a;
  catch `java.lang.IndexOutOfBoundsException` @[L210338..L21034c] goto L210352;
  catch `java.lang.IndexOutOfBoundsException` @[L21035e..L21036a] goto L2103b6;
  catch `java.lang.IndexOutOfBoundsException` @[L210378..L21037e] goto L2102be;
  catch `java.lang.IndexOutOfBoundsException` @[L21038e..L2103b4] goto L2103b6;
}
procedure `int` `a`(`int` v0 , `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/d4;.a:(I[BII)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `a`(`java.lang.CharSequence` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/d4;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `a`(`java.lang.CharSequence` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object) @signature `Le/e/a/b/f/b/d4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `a`(`e.e.a.b.f.b.d4` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/b/d4;.a:([BII)Z` @AccessFlag FINAL {
    temp;
    v0;

  #L2101ec.  v0:= 0I;
  #L2101ee.  call temp:= `a`(v1, v0, v2, v3, v4) @signature `Le/e/a/b/f/b/d4;.a:(I[BII)I` @kind virtual;
  #L2101f4.  v2:= temp;
  #L2101f6.  if v2 != 0 then goto L2101fe;
  #L2101fa.  v2:= 1I;
  #L2101fc.  return v2;
  #L2101fe.  return v0;
}
