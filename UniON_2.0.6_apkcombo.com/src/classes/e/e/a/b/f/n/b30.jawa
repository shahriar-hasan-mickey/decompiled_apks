record `e.e.a.b.f.n.b30` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.b30.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.b30` `@@e.e.a.b.f.n.b30.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.b30` `@@e.e.a.b.f.n.b30.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.b30` `@@e.e.a.b.f.n.b30.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.b30`[] `@@e.e.a.b.f.n.b30.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/b30;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b7608.  v0:= new `e.e.a.b.f.n.b30`;
  #L2b760c.  v1:= 0I;
  #L2b760e.  v2:= "UNKNOWN_PERFORMANCE" @kind object;
  #L2b7612.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/b30;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b7618.  `@@e.e.a.b.f.n.b30.c` @type ^`e.e.a.b.f.n.b30` := v0 @kind object;
  #L2b761c.  v0:= new `e.e.a.b.f.n.b30`;
  #L2b7620.  v2:= 1I;
  #L2b7622.  v3:= "FAST" @kind object;
  #L2b7626.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/b30;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b762c.  `@@e.e.a.b.f.n.b30.d` @type ^`e.e.a.b.f.n.b30` := v0 @kind object;
  #L2b7630.  v0:= new `e.e.a.b.f.n.b30`;
  #L2b7634.  v3:= 2I;
  #L2b7636.  v4:= "ACCURATE" @kind object;
  #L2b763a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/b30;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b7640.  `@@e.e.a.b.f.n.b30.e` @type ^`e.e.a.b.f.n.b30` := v0 @kind object;
  #L2b7644.  v0:= 3I;
  #L2b7646.  v0:= new `e.e.a.b.f.n.b30`[v0];
  #L2b764a.  v4:= `@@e.e.a.b.f.n.b30.c` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b764e.  v0[v1]:= v4 @kind object;
  #L2b7652.  v1:= `@@e.e.a.b.f.n.b30.d` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b7656.  v0[v2]:= v1 @kind object;
  #L2b765a.  v1:= `@@e.e.a.b.f.n.b30.e` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b765e.  v0[v3]:= v1 @kind object;
  #L2b7662.  `@@e.e.a.b.f.n.b30.f` @type ^`e.e.a.b.f.n.b30`[] := v0 @kind object;
  #L2b7666.  v0:= new `e.e.a.b.f.n.z20`;
  #L2b766a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/z20;.<init>:()V` @kind direct;
  #L2b7670.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.b30` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/b30;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b7684.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b768a.  v0.`e.e.a.b.f.n.b30.b` @type ^`int` := v3;
  #L2b768e.  return @kind void;
}
procedure `e.e.a.b.f.n.b30` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/b30;.a:(I)Le/e/a/b/f/n/b30;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b7504.  if v1 == 0 then goto L2b7524;
  #L2b7508.  v0:= 1I;
  #L2b750a.  if v1 == v0 then goto L2b751e;
  #L2b750e.  v0:= 2I;
  #L2b7510.  if v1 == v0 then goto L2b7518;
  #L2b7514.  v1:= 0I;
  #L2b7516.  return v1 @kind object;
  #L2b7518.  v1:= `@@e.e.a.b.f.n.b30.e` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b751c.  return v1 @kind object;
  #L2b751e.  v1:= `@@e.e.a.b.f.n.b30.d` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b7522.  return v1 @kind object;
  #L2b7524.  v1:= `@@e.e.a.b.f.n.b30.c` @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b7528.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/b30;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b74ec.  v0:= `@@e.e.a.b.f.n.a30.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b74f0.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.b30`[] `values`() @signature `Le/e/a/b/f/n/b30;.values:()[Le/e/a/b/f/n/b30;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b753c.  v0:= `@@e.e.a.b.f.n.b30.f` @type ^`e.e.a.b.f.n.b30`[] @kind object;
  #L2b7540.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/b30;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b7546.  v0:= temp @kind object;
  #L2b7548.  v0:= (`e.e.a.b.f.n.b30`[]) v0 @kind object;
  #L2b754c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.b30` v2 @kind this) @signature `Le/e/a/b/f/n/b30;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b7578.  v0:= new `java.lang.StringBuilder`;
  #L2b757c.  v1:= "<" @kind object;
  #L2b7580.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b7586.  v1:= constclass @type ^`e.e.a.b.f.n.b30` @kind object;
  #L2b758a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b7590.  v1:= temp @kind object;
  #L2b7592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7598.  v1:= 64I;
  #L2b759c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75a2.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b75a8.  v1:= temp;
  #L2b75aa.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b75b0.  v1:= temp @kind object;
  #L2b75b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75b8.  v1:= " number=" @kind object;
  #L2b75bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75c2.  v1:= v2.`e.e.a.b.f.n.b30.b` @type ^`int`;
  #L2b75c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75cc.  v1:= " name=" @kind object;
  #L2b75d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75d6.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b75dc.  v1:= temp @kind object;
  #L2b75de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75e4.  v1:= 62I;
  #L2b75e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b75ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b75f4.  v0:= temp @kind object;
  #L2b75f6.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.b30` v1 @kind this) @signature `Le/e/a/b/f/n/b30;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b7560.  v0:= v1.`e.e.a.b.f.n.b30.b` @type ^`int`;
  #L2b7564.  return v0;
}
