record `e.e.a.b.f.q.c` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.e` @kind class {
  `byte`[] `e.e.a.b.f.q.c.d` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.q.c.e` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.q.c.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.q.c` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/q/c;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d0738.  v4:= 0I;
  #L2d073a.  call `<init>`(v2, v4) @signature `Le/e/a/b/f/q/e;.<init>:(Le/e/a/b/f/q/lv;)V` @kind direct;
  #L2d0740.  v4:= length @variable v3;
  #L2d0742.  v0:= v4 - v5 @kind int;
  #L2d0746.  v0:= v0 ^| v5 @kind int;
  #L2d0748.  v1:= 0I;
  #L2d074a.  if v0 < 0 then goto L2d075c;
  #L2d074e.  v2.`e.e.a.b.f.q.c.d` @type ^`byte`[] := v3 @kind object;
  #L2d0752.  v2.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0756.  v2.`e.e.a.b.f.q.c.e` @type ^`int` := v5;
  #L2d075a.  return @kind void;
  #L2d075c.  v3:= new `java.lang.IllegalArgumentException`;
  #L2d0760.  v0:= 3I;
  #L2d0762.  v0:= new `java.lang.Object`[v0];
  #L2d0766.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d076c.  v4:= temp @kind object;
  #L2d076e.  v0[v1]:= v4 @kind object;
  #L2d0772.  v4:= 1I;
  #L2d0774.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d077a.  v1:= temp @kind object;
  #L2d077c.  v0[v4]:= v1 @kind object;
  #L2d0780.  v4:= 2I;
  #L2d0782.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0788.  v5:= temp @kind object;
  #L2d078a.  v0[v4]:= v5 @kind object;
  #L2d078e.  v4:= "Array range is invalid. Buffer.length=%d, offset=%d, length=%d" @kind object;
  #L2d0792.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0798.  v4:= temp @kind object;
  #L2d079a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d07a0.  throw v3;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v4 @kind this, `byte` v5 ) @signature `Le/e/a/b/f/q/c;.a:(B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d0910.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0914.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0918.  v2:= v1 + 1;
  #L2d091c.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0920.  v0[v1]:= v5 @kind byte;
  #L2d0924.  return @kind void;
  #L2d0926.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0928.  v0:= new `e.e.a.b.f.q.d`;
  #L2d092c.  v1:= 3I;
  #L2d092e.  v1:= new `java.lang.Object`[v1];
  #L2d0932.  v2:= 0I;
  #L2d0934.  v3:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0938.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d093e.  v3:= temp @kind object;
  #L2d0940.  v1[v2]:= v3 @kind object;
  #L2d0944.  v2:= v4.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0948.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d094e.  v2:= temp @kind object;
  #L2d0950.  v3:= 1I;
  #L2d0952.  v1[v3]:= v2 @kind object;
  #L2d0956.  v2:= 2I;
  #L2d0958.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d095e.  v3:= temp @kind object;
  #L2d0960.  v1[v2]:= v3 @kind object;
  #L2d0964.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0968.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d096e.  v1:= temp @kind object;
  #L2d0970.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0976.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0910..L2d0924] goto L2d0926;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/q/c;.a:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d0998.  if v3 < 0 then goto L2d09a4;
  #L2d099c.  call `b`(v2, v3) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d09a2.  return @kind void;
  #L2d09a4.  v0:= (`long`) v3 @kind i2l;
  #L2d09a6.  call `a`(v2, v0) @signature `Le/e/a/b/f/q/c;.a:(J)V` @kind virtual;
  #L2d09ac.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/q/c;.a:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d07b4.  v1:= v1 ^< 3;
  #L2d07b8.  v1:= v1 ^| v2 @kind int;
  #L2d07ba.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d07c0.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `long` v2 ) @signature `Le/e/a/b/f/q/c;.a:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d0844.  v1:= v1 ^< 3;
  #L2d0848.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d084e.  call `a`(v0, v2) @signature `Le/e/a/b/f/q/c;.a:(J)V` @kind virtual;
  #L2d0854.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `e.e.a.b.f.q.hv` v2 @kind object) @signature `Le/e/a/b/f/q/c;.a:(ILe/e/a/b/f/q/hv;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d08dc.  v1:= v1 ^< 3;
  #L2d08e0.  v1:= v1 ^| 2;
  #L2d08e4.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d08ea.  call temp:= `d`(v2) @signature `Le/e/a/b/f/q/hv;.d:()I` @kind virtual;
  #L2d08f0.  v1:= temp;
  #L2d08f2.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d08f8.  call `a`(v2, v0) @signature `Le/e/a/b/f/q/hv;.a:(Le/e/a/b/f/q/vu;)V` @kind virtual;
  #L2d08fe.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/q/c;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d08b4.  v1:= v1 ^< 3;
  #L2d08b8.  v1:= v1 ^| 2;
  #L2d08bc.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d08c2.  call `b`(v0, v2) @signature `Le/e/a/b/f/q/c;.b:(Ljava/lang/String;)V` @kind virtual;
  #L2d08c8.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Le/e/a/b/f/q/c;.a:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d0890.  v1:= v1 ^< 3;
  #L2d0894.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d089a.  call `a`(v0, v2) @signature `Le/e/a/b/f/q/c;.a:(B)V` @kind virtual;
  #L2d08a0.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v9 @kind this, `long` v10 ) @signature `Le/e/a/b/f/q/c;.a:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2d0c9c.  call temp:= `c`() @signature `Le/e/a/b/f/q/e;.c:()Z` @kind static;
  #L2d0ca2.  v0:= temp;
  #L2d0ca4.  v1:= 7I;
  #L2d0ca6.  v2:= 0L;
  #L2d0caa.  v4:= -128L;
  #L2d0cae.  if v0 == 0 then goto L2d0d16;
  #L2d0cb2.  v0:= v9.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0cb6.  v6:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0cba.  v0:= v0 - v6 @kind int;
  #L2d0cbc.  v6:= 10I;
  #L2d0cc0.  if v0 < v6 then goto L2d0d16;
  #L2d0cc4.  v6:= v10 ^& v4 @kind long;
  #L2d0cc8.  v0:= lcmp(v6, v2);
  #L2d0ccc.  if v0 != 0 then goto L2d0cee;
  #L2d0cd0.  v0:= v9.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0cd4.  v1:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0cd8.  v2:= v1 + 1;
  #L2d0cdc.  v9.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0ce0.  v1:= (`long`) v1 @kind i2l;
  #L2d0ce2.  v11:= (`int`) v10 @kind l2i;
  #L2d0ce4.  v10:= (`byte`) v11 @kind i2b;
  #L2d0ce6.  call `a`(v0, v1, v10) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0cec.  return @kind void;
  #L2d0cee.  v0:= v9.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0cf2.  v6:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0cf6.  v7:= v6 + 1;
  #L2d0cfa.  v9.`e.e.a.b.f.q.c.f` @type ^`int` := v7;
  #L2d0cfe.  v6:= (`long`) v6 @kind i2l;
  #L2d0d00.  v8:= (`int`) v10 @kind l2i;
  #L2d0d02.  v8:= v8 ^& 127;
  #L2d0d06.  v8:= v8 ^| 128;
  #L2d0d0a.  v8:= (`byte`) v8 @kind i2b;
  #L2d0d0c.  call `a`(v0, v6, v8) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0d12.  v10:= v10 ^>> v1 @kind long;
  #L2d0d14.  goto L2d0cc4;
  #L2d0d16.  v6:= v10 ^& v4 @kind long;
  #L2d0d1a.  v0:= lcmp(v6, v2);
  #L2d0d1e.  if v0 != 0 then goto L2d0d3c;
  #L2d0d22.  v0:= v9.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0d26.  v1:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0d2a.  v2:= v1 + 1;
  #L2d0d2e.  v9.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0d32.  v11:= (`int`) v10 @kind l2i;
  #L2d0d34.  v10:= (`byte`) v11 @kind i2b;
  #L2d0d36.  v0[v1]:= v10 @kind byte;
  #L2d0d3a.  return @kind void;
  #L2d0d3c.  v0:= v9.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0d40.  v6:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0d44.  v7:= v6 + 1;
  #L2d0d48.  v9.`e.e.a.b.f.q.c.f` @type ^`int` := v7;
  #L2d0d4c.  v7:= (`int`) v10 @kind l2i;
  #L2d0d4e.  v7:= v7 ^& 127;
  #L2d0d52.  v7:= v7 ^| 128;
  #L2d0d56.  v7:= (`byte`) v7 @kind i2b;
  #L2d0d58.  v0[v6]:= v7 @kind byte;
  #L2d0d5c.  v10:= v10 ^>> v1 @kind long;
  #L2d0d5e.  goto L2d0d16;
  #L2d0d60.  v10:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0d62.  v11:= new `e.e.a.b.f.q.d`;
  #L2d0d66.  v0:= 3I;
  #L2d0d68.  v0:= new `java.lang.Object`[v0];
  #L2d0d6c.  v1:= 0I;
  #L2d0d6e.  v2:= v9.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0d72.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0d78.  v2:= temp @kind object;
  #L2d0d7a.  v0[v1]:= v2 @kind object;
  #L2d0d7e.  v1:= v9.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0d82.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0d88.  v1:= temp @kind object;
  #L2d0d8a.  v2:= 1I;
  #L2d0d8c.  v0[v2]:= v1 @kind object;
  #L2d0d90.  v1:= 2I;
  #L2d0d92.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0d98.  v2:= temp @kind object;
  #L2d0d9a.  v0[v1]:= v2 @kind object;
  #L2d0d9e.  v1:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0da2.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0da8.  v0:= temp @kind object;
  #L2d0daa.  call `<init>`(v11, v0, v10) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0db0.  throw v11;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0d22..L2d0d5c] goto L2d0d60;
}
procedure `void` `a`(`e.e.a.b.f.q.c` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/c;.a:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d0fb4.  v2:= 0I;
  #L2d0fb6.  call `b`(v0, v1, v2, v3) @signature `Le/e/a/b/f/q/c;.b:([BII)V` @kind virtual;
  #L2d0fbc.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.q.c` v2 @kind this) @signature `Le/e/a/b/f/q/c;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d071c.  v0:= v2.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0720.  v1:= v2.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0724.  v0:= v0 - v1 @kind int;
  #L2d0726.  return v0;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/q/c;.b:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d09c0.  call temp:= `c`() @signature `Le/e/a/b/f/q/e;.c:()Z` @kind static;
  #L2d09c6.  v0:= temp;
  #L2d09c8.  if v0 == 0 then goto L2d0b14;
  #L2d09cc.  call temp:= `a`() @signature `Le/e/a/b/f/q/uu;.a:()Z` @kind static;
  #L2d09d2.  v0:= temp;
  #L2d09d4.  if v0 != 0 then goto L2d0b14;
  #L2d09d8.  v0:= v4.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d09dc.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d09e0.  v0:= v0 - v1 @kind int;
  #L2d09e2.  v2:= 5I;
  #L2d09e4.  if v0 < v2 then goto L2d0b14;
  #L2d09e8.  v0:= v5 ^& -128;
  #L2d09ec.  if v0 != 0 then goto L2d0a08;
  #L2d09f0.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d09f4.  v2:= v1 + 1;
  #L2d09f8.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d09fc.  v1:= (`long`) v1 @kind i2l;
  #L2d09fe.  v5:= (`byte`) v5 @kind i2b;
  #L2d0a00.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0a06.  return @kind void;
  #L2d0a08.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0a0c.  v2:= v1 + 1;
  #L2d0a10.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0a14.  v1:= (`long`) v1 @kind i2l;
  #L2d0a16.  v3:= v5 ^| 128;
  #L2d0a1a.  v3:= (`byte`) v3 @kind i2b;
  #L2d0a1c.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0a22.  v5:= v5 ^>> 7;
  #L2d0a26.  v0:= v5 ^& -128;
  #L2d0a2a.  if v0 != 0 then goto L2d0a4a;
  #L2d0a2e.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0a32.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0a36.  v2:= v1 + 1;
  #L2d0a3a.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0a3e.  v1:= (`long`) v1 @kind i2l;
  #L2d0a40.  v5:= (`byte`) v5 @kind i2b;
  #L2d0a42.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0a48.  return @kind void;
  #L2d0a4a.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0a4e.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0a52.  v2:= v1 + 1;
  #L2d0a56.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0a5a.  v1:= (`long`) v1 @kind i2l;
  #L2d0a5c.  v3:= v5 ^| 128;
  #L2d0a60.  v3:= (`byte`) v3 @kind i2b;
  #L2d0a62.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0a68.  v5:= v5 ^>> 7;
  #L2d0a6c.  v0:= v5 ^& -128;
  #L2d0a70.  if v0 != 0 then goto L2d0a90;
  #L2d0a74.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0a78.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0a7c.  v2:= v1 + 1;
  #L2d0a80.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0a84.  v1:= (`long`) v1 @kind i2l;
  #L2d0a86.  v5:= (`byte`) v5 @kind i2b;
  #L2d0a88.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0a8e.  return @kind void;
  #L2d0a90.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0a94.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0a98.  v2:= v1 + 1;
  #L2d0a9c.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0aa0.  v1:= (`long`) v1 @kind i2l;
  #L2d0aa2.  v3:= v5 ^| 128;
  #L2d0aa6.  v3:= (`byte`) v3 @kind i2b;
  #L2d0aa8.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0aae.  v5:= v5 ^>> 7;
  #L2d0ab2.  v0:= v5 ^& -128;
  #L2d0ab6.  if v0 != 0 then goto L2d0ad6;
  #L2d0aba.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0abe.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0ac2.  v2:= v1 + 1;
  #L2d0ac6.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0aca.  v1:= (`long`) v1 @kind i2l;
  #L2d0acc.  v5:= (`byte`) v5 @kind i2b;
  #L2d0ace.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0ad4.  return @kind void;
  #L2d0ad6.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0ada.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0ade.  v2:= v1 + 1;
  #L2d0ae2.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0ae6.  v1:= (`long`) v1 @kind i2l;
  #L2d0ae8.  v3:= v5 ^| 128;
  #L2d0aec.  v3:= (`byte`) v3 @kind i2b;
  #L2d0aee.  call `a`(v0, v1, v3) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0af4.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0af8.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0afc.  v2:= v1 + 1;
  #L2d0b00.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0b04.  v1:= (`long`) v1 @kind i2l;
  #L2d0b06.  v5:= v5 ^>> 7;
  #L2d0b0a.  v5:= (`byte`) v5 @kind i2b;
  #L2d0b0c.  call `a`(v0, v1, v5) @signature `Le/e/a/b/f/q/n2;.a:([BJB)V` @kind static;
  #L2d0b12.  return @kind void;
  #L2d0b14.  v0:= v5 ^& -128;
  #L2d0b18.  if v0 != 0 then goto L2d0b34;
  #L2d0b1c.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0b20.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0b24.  v2:= v1 + 1;
  #L2d0b28.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0b2c.  v5:= (`byte`) v5 @kind i2b;
  #L2d0b2e.  v0[v1]:= v5 @kind byte;
  #L2d0b32.  return @kind void;
  #L2d0b34.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0b38.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0b3c.  v2:= v1 + 1;
  #L2d0b40.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0b44.  v2:= v5 ^& 127;
  #L2d0b48.  v2:= v2 ^| 128;
  #L2d0b4c.  v2:= (`byte`) v2 @kind i2b;
  #L2d0b4e.  v0[v1]:= v2 @kind byte;
  #L2d0b52.  v5:= v5 ^>> 7;
  #L2d0b56.  goto L2d0b14;
  #L2d0b58.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0b5a.  v0:= new `e.e.a.b.f.q.d`;
  #L2d0b5e.  v1:= 3I;
  #L2d0b60.  v1:= new `java.lang.Object`[v1];
  #L2d0b64.  v2:= 0I;
  #L2d0b66.  v3:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0b6a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0b70.  v3:= temp @kind object;
  #L2d0b72.  v1[v2]:= v3 @kind object;
  #L2d0b76.  v2:= v4.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0b7a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0b80.  v2:= temp @kind object;
  #L2d0b82.  v3:= 1I;
  #L2d0b84.  v1[v3]:= v2 @kind object;
  #L2d0b88.  v2:= 2I;
  #L2d0b8a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0b90.  v3:= temp @kind object;
  #L2d0b92.  v1[v2]:= v3 @kind object;
  #L2d0b96.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0b9a.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0ba0.  v1:= temp @kind object;
  #L2d0ba2.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0ba8.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0b1c..L2d0b52] goto L2d0b58;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/q/c;.b:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d07d4.  v1:= v1 ^< 3;
  #L2d07d8.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d07de.  call `a`(v0, v2) @signature `Le/e/a/b/f/q/c;.a:(I)V` @kind virtual;
  #L2d07e4.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `long` v2 ) @signature `Le/e/a/b/f/q/c;.b:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d0868.  v1:= v1 ^< 3;
  #L2d086c.  v1:= v1 ^| 1;
  #L2d0870.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d0876.  call `b`(v0, v2) @signature `Le/e/a/b/f/q/c;.b:(J)V` @kind virtual;
  #L2d087c.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v5 @kind this, `long` v6 ) @signature `Le/e/a/b/f/q/c;.b:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d0dd4.  v0:= v5.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0dd8.  v1:= v5.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0ddc.  v2:= v1 + 1;
  #L2d0de0.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0de4.  v3:= (`int`) v6 @kind l2i;
  #L2d0de6.  v3:= v3 ^& 255;
  #L2d0dea.  v3:= (`byte`) v3 @kind i2b;
  #L2d0dec.  v0[v1]:= v3 @kind byte;
  #L2d0df0.  v1:= v2 + 1;
  #L2d0df4.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0df8.  v3:= 8I;
  #L2d0dfc.  v3:= v6 ^> v3 @kind long;
  #L2d0e00.  v4:= (`int`) v3 @kind l2i;
  #L2d0e02.  v3:= v4 ^& 255;
  #L2d0e06.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e08.  v0[v2]:= v3 @kind byte;
  #L2d0e0c.  v2:= v1 + 1;
  #L2d0e10.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0e14.  v3:= 16I;
  #L2d0e18.  v3:= v6 ^> v3 @kind long;
  #L2d0e1c.  v4:= (`int`) v3 @kind l2i;
  #L2d0e1e.  v3:= v4 ^& 255;
  #L2d0e22.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e24.  v0[v1]:= v3 @kind byte;
  #L2d0e28.  v1:= v2 + 1;
  #L2d0e2c.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0e30.  v3:= 24I;
  #L2d0e34.  v3:= v6 ^> v3 @kind long;
  #L2d0e38.  v4:= (`int`) v3 @kind l2i;
  #L2d0e3a.  v3:= v4 ^& 255;
  #L2d0e3e.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e40.  v0[v2]:= v3 @kind byte;
  #L2d0e44.  v2:= v1 + 1;
  #L2d0e48.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0e4c.  v3:= 32I;
  #L2d0e50.  v3:= v6 ^> v3 @kind long;
  #L2d0e54.  v4:= (`int`) v3 @kind l2i;
  #L2d0e56.  v3:= v4 ^& 255;
  #L2d0e5a.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e5c.  v0[v1]:= v3 @kind byte;
  #L2d0e60.  v1:= v2 + 1;
  #L2d0e64.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0e68.  v3:= 40I;
  #L2d0e6c.  v3:= v6 ^> v3 @kind long;
  #L2d0e70.  v4:= (`int`) v3 @kind l2i;
  #L2d0e72.  v3:= v4 ^& 255;
  #L2d0e76.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e78.  v0[v2]:= v3 @kind byte;
  #L2d0e7c.  v2:= v1 + 1;
  #L2d0e80.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0e84.  v3:= 48I;
  #L2d0e88.  v3:= v6 ^> v3 @kind long;
  #L2d0e8c.  v4:= (`int`) v3 @kind l2i;
  #L2d0e8e.  v3:= v4 ^& 255;
  #L2d0e92.  v3:= (`byte`) v3 @kind i2b;
  #L2d0e94.  v0[v1]:= v3 @kind byte;
  #L2d0e98.  v1:= v2 + 1;
  #L2d0e9c.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0ea0.  v1:= 56I;
  #L2d0ea4.  v6:= v6 ^> v1 @kind long;
  #L2d0ea6.  v7:= (`int`) v6 @kind l2i;
  #L2d0ea8.  v6:= v7 ^& 255;
  #L2d0eac.  v6:= (`byte`) v6 @kind i2b;
  #L2d0eae.  v0[v2]:= v6 @kind byte;
  #L2d0eb2.  return @kind void;
  #L2d0eb4.  v6:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0eb6.  v7:= new `e.e.a.b.f.q.d`;
  #L2d0eba.  v0:= 3I;
  #L2d0ebc.  v0:= new `java.lang.Object`[v0];
  #L2d0ec0.  v1:= 0I;
  #L2d0ec2.  v2:= v5.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0ec6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0ecc.  v2:= temp @kind object;
  #L2d0ece.  v0[v1]:= v2 @kind object;
  #L2d0ed2.  v1:= v5.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0ed6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0edc.  v1:= temp @kind object;
  #L2d0ede.  v2:= 1I;
  #L2d0ee0.  v0[v2]:= v1 @kind object;
  #L2d0ee4.  v1:= 2I;
  #L2d0ee6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0eec.  v2:= temp @kind object;
  #L2d0eee.  v0[v1]:= v2 @kind object;
  #L2d0ef2.  v1:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0ef6.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0efc.  v0:= temp @kind object;
  #L2d0efe.  call `<init>`(v7, v0, v6) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0f04.  throw v7;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0dd4..L2d0eb2] goto L2d0eb4;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Le/e/a/b/f/q/c;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d0fd0.  v0:= v5.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0fd4.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d0fda.  v1:= temp;
  #L2d0fdc.  v1:= v1 * 3;
  #L2d0fe0.  call temp:= `g`(v1) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2d0fe6.  v1:= temp;
  #L2d0fe8.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d0fee.  v2:= temp;
  #L2d0ff0.  call temp:= `g`(v2) @signature `Le/e/a/b/f/q/e;.g:(I)I` @kind static;
  #L2d0ff6.  v2:= temp;
  #L2d0ff8.  if v2 != v1 then goto L2d102c;
  #L2d0ffc.  v1:= v0 + v2 @kind int;
  #L2d1000.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d1004.  v3:= v5.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d1008.  v4:= v5.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d100c.  v4:= v4 - v1 @kind int;
  #L2d100e.  call temp:= `a`(v6, v3, v1, v4) @signature `Le/e/a/b/f/q/s2;.a:(Ljava/lang/CharSequence;[BII)I` @kind static;
  #L2d1014.  v1:= temp;
  #L2d1016.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v0;
  #L2d101a.  v3:= v1 - v0 @kind int;
  #L2d101e.  v3:= v3 - v2 @kind int;
  #L2d1020.  call `b`(v5, v3) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d1026.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d102a.  return @kind void;
  #L2d102c.  call temp:= `a`(v6) @signature `Le/e/a/b/f/q/s2;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L2d1032.  v1:= temp;
  #L2d1034.  call `b`(v5, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d103a.  v1:= v5.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d103e.  v2:= v5.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d1042.  v3:= v5.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d1046.  v3:= v3 - v2 @kind int;
  #L2d1048.  call temp:= `a`(v6, v1, v2, v3) @signature `Le/e/a/b/f/q/s2;.a:(Ljava/lang/CharSequence;[BII)I` @kind static;
  #L2d104e.  v1:= temp;
  #L2d1050.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d1054.  return @kind void;
  #L2d1056.  v6:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d1058.  v0:= new `e.e.a.b.f.q.d`;
  #L2d105c.  call `<init>`(v0, v6) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2d1062.  throw v0;
  #L2d1064.  v1:= Exception @type ^`e.e.a.b.f.q.q2` @kind object;
  #L2d1066.  v5.`e.e.a.b.f.q.c.f` @type ^`int` := v0;
  #L2d106a.  call `a`(v5, v6, v1) @signature `Le/e/a/b/f/q/e;.a:(Ljava/lang/String;Le/e/a/b/f/q/q2;)V` @kind virtual;
  #L2d1070.  return @kind void;
  catch `e.e.a.b.f.q.q2` @[L2d0fd4..L2d1054] goto L2d1064;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0fd4..L2d1054] goto L2d1056;
}
procedure `void` `b`(`e.e.a.b.f.q.c` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Le/e/a/b/f/q/c;.b:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2d0f28.  v5:= 0I;
  #L2d0f2a.  v0:= v3.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0f2e.  v1:= v3.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0f32.  call `arraycopy`(v4, v5, v0, v1, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2d0f38.  v4:= v3.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0f3c.  v4:= v4 + v6 @kind int;
  #L2d0f3e.  v3.`e.e.a.b.f.q.c.f` @type ^`int` := v4;
  #L2d0f42.  return @kind void;
  #L2d0f44.  v4:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0f46.  v0:= new `e.e.a.b.f.q.d`;
  #L2d0f4a.  v1:= 3I;
  #L2d0f4c.  v1:= new `java.lang.Object`[v1];
  #L2d0f50.  v2:= v3.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0f54.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0f5a.  v2:= temp @kind object;
  #L2d0f5c.  v1[v5]:= v2 @kind object;
  #L2d0f60.  v5:= 1I;
  #L2d0f62.  v2:= v3.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0f66.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0f6c.  v2:= temp @kind object;
  #L2d0f6e.  v1[v5]:= v2 @kind object;
  #L2d0f72.  v5:= 2I;
  #L2d0f74.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0f7a.  v6:= temp @kind object;
  #L2d0f7c.  v1[v5]:= v6 @kind object;
  #L2d0f80.  v5:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0f84.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0f8a.  v5:= temp @kind object;
  #L2d0f8c.  call `<init>`(v0, v5, v4) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0f92.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0f2a..L2d0f42] goto L2d0f44;
}
procedure `void` `c`(`e.e.a.b.f.q.c` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/q/c;.c:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d0bcc.  v0:= v4.`e.e.a.b.f.q.c.d` @type ^`byte`[] @kind object;
  #L2d0bd0.  v1:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0bd4.  v2:= v1 + 1;
  #L2d0bd8.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0bdc.  v3:= v5 ^& 255;
  #L2d0be0.  v3:= (`byte`) v3 @kind i2b;
  #L2d0be2.  v0[v1]:= v3 @kind byte;
  #L2d0be6.  v1:= v2 + 1;
  #L2d0bea.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0bee.  v3:= v5 ^> 8;
  #L2d0bf2.  v3:= v3 ^& 255;
  #L2d0bf6.  v3:= (`byte`) v3 @kind i2b;
  #L2d0bf8.  v0[v2]:= v3 @kind byte;
  #L2d0bfc.  v2:= v1 + 1;
  #L2d0c00.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v2;
  #L2d0c04.  v3:= v5 ^> 16;
  #L2d0c08.  v3:= v3 ^& 255;
  #L2d0c0c.  v3:= (`byte`) v3 @kind i2b;
  #L2d0c0e.  v0[v1]:= v3 @kind byte;
  #L2d0c12.  v1:= v2 + 1;
  #L2d0c16.  v4.`e.e.a.b.f.q.c.f` @type ^`int` := v1;
  #L2d0c1a.  v5:= v5 ^> 24;
  #L2d0c1e.  v5:= v5 ^& 255;
  #L2d0c22.  v5:= (`byte`) v5 @kind i2b;
  #L2d0c24.  v0[v2]:= v5 @kind byte;
  #L2d0c28.  return @kind void;
  #L2d0c2a.  v5:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L2d0c2c.  v0:= new `e.e.a.b.f.q.d`;
  #L2d0c30.  v1:= 3I;
  #L2d0c32.  v1:= new `java.lang.Object`[v1];
  #L2d0c36.  v2:= 0I;
  #L2d0c38.  v3:= v4.`e.e.a.b.f.q.c.f` @type ^`int`;
  #L2d0c3c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0c42.  v3:= temp @kind object;
  #L2d0c44.  v1[v2]:= v3 @kind object;
  #L2d0c48.  v2:= v4.`e.e.a.b.f.q.c.e` @type ^`int`;
  #L2d0c4c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0c52.  v2:= temp @kind object;
  #L2d0c54.  v3:= 1I;
  #L2d0c56.  v1[v3]:= v2 @kind object;
  #L2d0c5a.  v2:= 2I;
  #L2d0c5c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d0c62.  v3:= temp @kind object;
  #L2d0c64.  v1[v2]:= v3 @kind object;
  #L2d0c68.  v2:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L2d0c6c.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d0c72.  v1:= temp @kind object;
  #L2d0c74.  call `<init>`(v0, v1, v5) @signature `Le/e/a/b/f/q/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d0c7a.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L2d0bcc..L2d0c28] goto L2d0c2a;
}
procedure `void` `c`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/q/c;.c:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d07f8.  v1:= v1 ^< 3;
  #L2d07fc.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d0802.  call `b`(v0, v2) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d0808.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.q.c` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/q/c;.d:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d081c.  v1:= v1 ^< 3;
  #L2d0820.  v1:= v1 ^| 5;
  #L2d0824.  call `b`(v0, v1) @signature `Le/e/a/b/f/q/c;.b:(I)V` @kind virtual;
  #L2d082a.  call `c`(v0, v2) @signature `Le/e/a/b/f/q/c;.c:(I)V` @kind virtual;
  #L2d0830.  return @kind void;
}
