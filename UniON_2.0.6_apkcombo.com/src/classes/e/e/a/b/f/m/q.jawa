record `e.e.a.b.f.m.q` @kind class @AccessFlag ABSTRACT extends `java.util.Map$Entry` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.m.q` v0 @kind this) @signature `Le/e/a/b/f/m/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2653b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2653ba.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.m.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/m/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L265294.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L265298.  v1:= 0I;
  #L26529a.  if v0 == 0 then goto L2652de;
  #L26529e.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L2652a2.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/m/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2652a8.  v0:= temp @kind object;
  #L2652aa.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2652b0.  v2:= temp @kind object;
  #L2652b2.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2652b8.  v0:= temp;
  #L2652ba.  if v0 == 0 then goto L2652de;
  #L2652be.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/m/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2652c4.  v0:= temp @kind object;
  #L2652c6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2652cc.  v4:= temp @kind object;
  #L2652ce.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/m/ec;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2652d4.  v4:= temp;
  #L2652d6.  if v4 == 0 then goto L2652de;
  #L2652da.  v4:= 1I;
  #L2652dc.  return v4;
  #L2652de.  return v1;
}
procedure `java.lang.Object` `getKey`() @signature `Le/e/a/b/f/m/q;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Le/e/a/b/f/m/q;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`e.e.a.b.f.m.q` v3 @kind this) @signature `Le/e/a/b/f/m/q;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2652f0.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/m/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2652f6.  v0:= temp @kind object;
  #L2652f8.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/m/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2652fe.  v1:= temp @kind object;
  #L265300.  v2:= 0I;
  #L265302.  if v0 != 0 then goto L26530a;
  #L265306.  v0:= 0I;
  #L265308.  goto L265312;
  #L26530a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L265310.  v0:= temp;
  #L265312.  if v1 != 0 then goto L265318;
  #L265316.  goto L265320;
  #L265318.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L26531e.  v2:= temp;
  #L265320.  v0:= v0 ^~ v2 @kind int;
  #L265322.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.m.q` v5 @kind this) @signature `Le/e/a/b/f/m/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L265334.  call temp:= `getKey`(v5) @signature `Le/e/a/b/f/m/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L26533a.  v0:= temp @kind object;
  #L26533c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L265342.  v0:= temp @kind object;
  #L265344.  call temp:= `getValue`(v5) @signature `Le/e/a/b/f/m/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L26534a.  v1:= temp @kind object;
  #L26534c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L265352.  v1:= temp @kind object;
  #L265354.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26535a.  v2:= temp @kind object;
  #L26535c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L265362.  v2:= temp;
  #L265364.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26536a.  v3:= temp @kind object;
  #L26536c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L265372.  v3:= temp;
  #L265374.  v4:= new `java.lang.StringBuilder`;
  #L265378.  v2:= v2 + 1;
  #L26537c.  v2:= v2 + v3 @kind int;
  #L26537e.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L265384.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26538a.  v0:= "=" @kind object;
  #L26538e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L265394.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26539a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2653a0.  v0:= temp @kind object;
  #L2653a2.  return v0 @kind object;
}
