record `e.e.a.b.f.k.g0` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.k.i0` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Map` `e.e.a.b.f.k.g0.d` @AccessFlag PRIVATE_TRANSIENT;
  `int` `e.e.a.b.f.k.g0.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.k.g0` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Le/e/a/b/f/k/g0;.<init>:(Ljava/util/Map;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L244888.  call `<init>`(v1) @signature `Le/e/a/b/f/k/i0;.<init>:()V` @kind direct;
  #L24488e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L244894.  v0:= temp;
  #L244896.  if v0 == 0 then goto L2448a0;
  #L24489a.  v1.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` := v2 @kind object;
  #L24489e.  return @kind void;
  #L2448a0.  v2:= new `java.lang.IllegalArgumentException`;
  #L2448a4.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2448aa.  throw v2;
}
procedure `int` `a`(`e.e.a.b.f.k.g0` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/k/g0;.a:(Le/e/a/b/f/k/g0;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L244790.  v0:= v1.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244794.  v0:= v0 + v2 @kind int;
  #L244796.  v1.`e.e.a.b.f.k.g0.e` @type ^`int` := v0;
  #L24479a.  return v0;
}
procedure `java.util.Map` `a`(`e.e.a.b.f.k.g0` v0 @kind object) @signature `Le/e/a/b/f/k/g0;.a:(Le/e/a/b/f/k/g0;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L244850.  v0:= v0.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L244854.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.k.g0` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/k/g0;.a:(Le/e/a/b/f/k/g0;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L244914.  v0:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L244918.  v1:= 0I;
  #L24491a.  if v0 == 0 then goto L24494c;
  #L24491e.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L244924.  v1:= temp @kind object;
  #L244926.  goto L24492a;
  #L244928.  
  #L24492a.  v1:= (`java.util.Collection`) v1 @kind object;
  #L24492e.  if v1 == 0 then goto L24494a;
  #L244932.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L244938.  v3:= temp;
  #L24493a.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L244940.  v0:= v2.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244944.  v0:= v0 - v3 @kind int;
  #L244946.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v0;
  #L24494a.  return @kind void;
  #L24494c.  throw v1;
  catch `java.lang.ClassCastException` @[L24491e..L244926] goto L244928;
  catch `java.lang.NullPointerException` @[L24491e..L244926] goto L244928;
}
procedure `int` `b`(`e.e.a.b.f.k.g0` v2 @kind object) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L244750.  v0:= v2.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244754.  v1:= v0 + -1;
  #L244758.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v1;
  #L24475c.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.k.g0` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2447ac.  v0:= v1.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L2447b0.  v0:= v0 - v2 @kind int;
  #L2447b2.  v1.`e.e.a.b.f.k.g0.e` @type ^`int` := v0;
  #L2447b6.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.k.g0` v2 @kind object) @signature `Le/e/a/b/f/k/g0;.c:(Le/e/a/b/f/k/g0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L244770.  v0:= v2.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244774.  v1:= v0 + 1;
  #L244778.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v1;
  #L24477c.  return v0;
}
procedure `java.util.Collection` `a`(`java.lang.Object` v0 @kind object, `java.util.Collection` v1 @kind object) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.List` `a`(`e.e.a.b.f.k.g0` v1 @kind this, `java.lang.Object` v2 @kind object, `java.util.List` v3 @kind object, `e.e.a.b.f.k.d0` v4 @kind object) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/k/d0;)Ljava/util/List;` @AccessFlag FINAL {
    temp;
    v0;

  #L244800.  v0:= instanceof @variable v3 @type ^`java.util.RandomAccess` @kind boolean;
  #L244804.  if v0 == 0 then goto L244814;
  #L244808.  v0:= new `e.e.a.b.f.k.a0`;
  #L24480c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Le/e/a/b/f/k/a0;.<init>:(Le/e/a/b/f/k/g0;Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/k/d0;)V` @kind direct;
  #L244812.  goto L24481e;
  #L244814.  v0:= new `e.e.a.b.f.k.f0`;
  #L244818.  call `<init>`(v0, v1, v2, v3, v4) @signature `Le/e/a/b/f/k/f0;.<init>:(Le/e/a/b/f/k/g0;Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/k/d0;)V` @kind direct;
  #L24481e.  return v0 @kind object;
}
procedure `java.util.Set` `a`(`e.e.a.b.f.k.g0` v2 @kind this) @signature `Le/e/a/b/f/k/g0;.a:()Ljava/util/Set;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L244868.  v0:= new `e.e.a.b.f.k.z`;
  #L24486c.  v1:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L244870.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/k/z;.<init>:(Le/e/a/b/f/k/g0;Ljava/util/Map;)V` @kind direct;
  #L244876.  return v0 @kind object;
}
procedure `boolean` `a`(`e.e.a.b.f.k.g0` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2446d4.  v0:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L2446d8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2446de.  v0:= temp @kind object;
  #L2446e0.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2446e4.  v1:= 1I;
  #L2446e6.  if v0 != 0 then goto L244724;
  #L2446ea.  call temp:= `e`(v2) @signature `Le/e/a/b/f/k/g0;.e:()Ljava/util/Collection;` @kind virtual;
  #L2446f0.  v0:= temp @kind object;
  #L2446f2.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2446f8.  v4:= temp;
  #L2446fa.  if v4 == 0 then goto L244714;
  #L2446fe.  v4:= v2.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244702.  v4:= v4 + v1 @kind int;
  #L244704.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v4;
  #L244708.  v4:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L24470c.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L244712.  return v1;
  #L244714.  v3:= new `java.lang.AssertionError`;
  #L244718.  v4:= "New Collection violated the Collection spec" @kind object;
  #L24471c.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L244722.  throw v3;
  #L244724.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24472a.  v3:= temp;
  #L24472c.  if v3 == 0 then goto L24473c;
  #L244730.  v3:= v2.`e.e.a.b.f.k.g0.e` @type ^`int`;
  #L244734.  v3:= v3 + v1 @kind int;
  #L244736.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v3;
  #L24473a.  return v1;
  #L24473c.  v3:= 0I;
  #L24473e.  return v3;
}
procedure `java.util.Collection` `b`(`e.e.a.b.f.k.g0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/g0;.b:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2447c8.  v0:= v1.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L2447cc.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2447d2.  v0:= temp @kind object;
  #L2447d4.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2447d8.  if v0 != 0 then goto L2447e4;
  #L2447dc.  call temp:= `e`(v1) @signature `Le/e/a/b/f/k/g0;.e:()Ljava/util/Collection;` @kind virtual;
  #L2447e2.  v0:= temp @kind object;
  #L2447e4.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L2447ea.  v2:= temp @kind object;
  #L2447ec.  return v2 @kind object;
}
procedure `java.util.Map` `b`(`e.e.a.b.f.k.g0` v2 @kind this) @signature `Le/e/a/b/f/k/g0;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L244830.  v0:= new `e.e.a.b.f.k.x`;
  #L244834.  v1:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L244838.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/k/x;.<init>:(Le/e/a/b/f/k/g0;Ljava/util/Map;)V` @kind direct;
  #L24483e.  return v0 @kind object;
}
procedure `java.util.Collection` `e`() @signature `Le/e/a/b/f/k/g0;.e:()Ljava/util/Collection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `f`(`e.e.a.b.f.k.g0` v2 @kind this) @signature `Le/e/a/b/f/k/g0;.f:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2448bc.  v0:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L2448c0.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2448c6.  v0:= temp @kind object;
  #L2448c8.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2448ce.  v0:= temp @kind object;
  #L2448d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2448d6.  v1:= temp;
  #L2448d8.  if v1 == 0 then goto L2448f0;
  #L2448dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2448e2.  v1:= temp @kind object;
  #L2448e4.  v1:= (`java.util.Collection`) v1 @kind object;
  #L2448e8.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2448ee.  goto L2448d0;
  #L2448f0.  v0:= v2.`e.e.a.b.f.k.g0.d` @type ^`java.util.Map` @kind object;
  #L2448f4.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2448fa.  v0:= 0I;
  #L2448fc.  v2.`e.e.a.b.f.k.g0.e` @type ^`int` := v0;
  #L244900.  return @kind void;
}
