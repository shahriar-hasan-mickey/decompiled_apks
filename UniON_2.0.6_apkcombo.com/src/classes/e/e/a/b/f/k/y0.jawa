record `e.e.a.b.f.k.y0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.AbstractCollection` @kind class, `java.io.Serializable` @kind interface {
}
global `java.lang.Object`[] `@@e.e.a.b.f.k.y0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/k/y0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2461d8.  v0:= 0I;
  #L2461da.  v0:= new `java.lang.Object`[v0];
  #L2461de.  `@@e.e.a.b.f.k.y0.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2461e2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.k.y0` v0 @kind this) @signature `Le/e/a/b/f/k/y0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2461f4.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L2461fa.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.k.y0` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/k/y0;.a:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;

  #L2460f0.  v1:= 0I;
  #L2460f2.  throw v1;
}
procedure `boolean` `add`(`e.e.a.b.f.k.y0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/y0;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L24602c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L246030.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L246036.  throw v1;
}
procedure `boolean` `addAll`(`e.e.a.b.f.k.y0` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Le/e/a/b/f/k/y0;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L246048.  v1:= new `java.lang.UnsupportedOperationException`;
  #L24604c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L246052.  throw v1;
}
procedure `int` `c`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L2460d4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2460d8.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2460de.  throw v0;
}
procedure `void` `clear`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L24620c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L246210.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L246216.  throw v0;
}
procedure `boolean` `contains`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/k/y0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `d`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L2460b8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2460bc.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2460c2.  throw v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2461bc.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/k/y0;.zza:()Le/e/a/b/f/k/y1;` @kind virtual;
  #L2461c2.  v0:= temp @kind object;
  #L2461c4.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.k.y0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/y0;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L246064.  v1:= new `java.lang.UnsupportedOperationException`;
  #L246068.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L24606e.  throw v1;
}
procedure `boolean` `removeAll`(`e.e.a.b.f.k.y0` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Le/e/a/b/f/k/y0;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L246080.  v1:= new `java.lang.UnsupportedOperationException`;
  #L246084.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L24608a.  throw v1;
}
procedure `boolean` `retainAll`(`e.e.a.b.f.k.y0` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Le/e/a/b/f/k/y0;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L24609c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2460a0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2460a6.  throw v1;
}
procedure `java.lang.Object`[] `toArray`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246104.  v0:= `@@e.e.a.b.f.k.y0.b` @type ^`java.lang.Object`[] @kind object;
  #L246108.  call temp:= `toArray`(v1, v0) @signature `Le/e/a/b/f/k/y0;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L24610e.  v0:= temp @kind object;
  #L246110.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`e.e.a.b.f.k.y0` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Le/e/a/b/f/k/y0;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L246124.  v0:= 0I;
  #L246126.  if v4 == 0 then goto L246196;
  #L24612a.  call temp:= `size`(v3) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L246130.  v1:= temp;
  #L246132.  v2:= length @variable v4;
  #L246134.  if v2 >= v1 then goto L246184;
  #L246138.  call temp:= `zzb`(v3) @signature `Le/e/a/b/f/k/y0;.zzb:()[Ljava/lang/Object;` @kind virtual;
  #L24613e.  v0:= temp @kind object;
  #L246140.  if v0 != 0 then goto L246162;
  #L246144.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24614a.  v4:= temp @kind object;
  #L24614c.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L246152.  v4:= temp @kind object;
  #L246154.  call temp:= `newInstance`(v4, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L24615a.  v4:= temp @kind object;
  #L24615c.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L246160.  goto L24618c;
  #L246162.  call temp:= `d`(v3) @signature `Le/e/a/b/f/k/y0;.d:()I` @kind virtual;
  #L246168.  v1:= temp;
  #L24616a.  call temp:= `c`(v3) @signature `Le/e/a/b/f/k/y0;.c:()I` @kind virtual;
  #L246170.  v2:= temp;
  #L246172.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L246178.  v4:= temp @kind object;
  #L24617a.  call temp:= `copyOfRange`(v0, v1, v2, v4) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L246180.  v4:= temp @kind object;
  #L246182.  return v4 @kind object;
  #L246184.  if v2 <= v1 then goto L24618c;
  #L246188.  v4[v1]:= v0 @kind object;
  #L24618c.  v0:= 0I;
  #L24618e.  call temp:= `a`(v3, v4, v0) @signature `Le/e/a/b/f/k/y0;.a:([Ljava/lang/Object;I)I` @kind virtual;
  #L246194.  return v4 @kind object;
  #L246196.  throw v0;
}
procedure `e.e.a.b.f.k.y1` `zza`() @signature `Le/e/a/b/f/k/y0;.zza:()Le/e/a/b/f/k/y1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.k.y0` v1 @kind this) @signature `Le/e/a/b/f/k/y0;.zzb:()[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L2461a8.  v0:= 0I;
  #L2461aa.  return v0 @kind object;
}
