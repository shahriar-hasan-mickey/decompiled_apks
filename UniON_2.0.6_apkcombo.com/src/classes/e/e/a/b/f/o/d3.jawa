record `e.e.a.b.f.o.d3` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/o/d3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c5948.  v0:= constclass @type ^`e.e.a.b.f.o.d3` @kind object;
  #L2c594c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2c5952.  v0:= temp @kind object;
  #L2c5954.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2c595a.  v0:= new `e.e.a.b.f.o.c2`;
  #L2c595e.  v1:= 0I;
  #L2c5960.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/c2;.<init>:(Le/e/a/b/f/o/b1;)V` @kind direct;
  #L2c5966.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.o.d3` v0 @kind this) @signature `Le/e/a/b/f/o/d3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c5978.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c597e.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/o/d3;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;

  #L2c45bc.  if v0 == 0 then goto L2c45d2;
  #L2c45c0.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2c45c6.  v0:= temp;
  #L2c45c8.  if v0 == 0 then goto L2c45ce;
  #L2c45cc.  goto L2c45d2;
  #L2c45ce.  v0:= 0I;
  #L2c45d0.  return v0;
  #L2c45d2.  v0:= 1I;
  #L2c45d4.  return v0;
}
