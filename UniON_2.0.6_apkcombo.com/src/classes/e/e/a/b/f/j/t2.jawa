record `e.e.a.b.f.j.t2` @kind class @AccessFlag FINAL extends `e.e.a.b.f.j.z2` @kind class {
  `int` `e.e.a.b.f.j.t2.e` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.j.t2.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.j.t2` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/j/t2;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L222430.  call `<init>`(v1, v2) @signature `Le/e/a/b/f/j/z2;.<init>:([B)V` @kind direct;
  #L222436.  v0:= v3 + v4 @kind int;
  #L22243a.  v2:= length @variable v2;
  #L22243c.  call temp:= `b`(v3, v0, v2) @signature `Le/e/a/b/f/j/q2;.b:(III)I` @kind static;
  #L222442.  v1.`e.e.a.b.f.j.t2.e` @type ^`int` := v3;
  #L222446.  v1.`e.e.a.b.f.j.t2.f` @type ^`int` := v4;
  #L22244a.  return @kind void;
}
procedure `byte` `a`(`e.e.a.b.f.j.t2` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/j/t2;.a:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L222330.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/j/t2;.zza:()I` @kind virtual;
  #L222336.  v0:= temp;
  #L222338.  v1:= v5 + 1;
  #L22233c.  v1:= v0 - v1 @kind int;
  #L222340.  v1:= v1 ^| v5 @kind int;
  #L222342.  if v1 >= 0 then goto L2223be;
  #L222346.  if v5 >= 0 then goto L22237c;
  #L22234a.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L22234e.  v1:= 22I;
  #L222352.  v2:= new `java.lang.StringBuilder`;
  #L222356.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22235c.  v1:= "Index < 0: " @kind object;
  #L222360.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L222366.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22236c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L222372.  v5:= temp @kind object;
  #L222374.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22237a.  throw v0;
  #L22237c.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L222380.  v2:= 40I;
  #L222384.  v3:= new `java.lang.StringBuilder`;
  #L222388.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22238e.  v2:= "Index > length: " @kind object;
  #L222392.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L222398.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22239e.  v5:= ", " @kind object;
  #L2223a2.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2223a8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2223ae.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2223b4.  v5:= temp @kind object;
  #L2223b6.  call `<init>`(v1, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2223bc.  throw v1;
  #L2223be.  v0:= v4.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L2223c2.  v1:= v4.`e.e.a.b.f.j.t2.e` @type ^`int`;
  #L2223c6.  v1:= v1 + v5 @kind int;
  #L2223c8.  v5:= v0[v1] @kind byte;
  #L2223cc.  return v5;
}
procedure `int` `a`(`e.e.a.b.f.j.t2` v1 @kind this) @signature `Le/e/a/b/f/j/t2;.a:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L222418.  v0:= v1.`e.e.a.b.f.j.t2.e` @type ^`int`;
  #L22241c.  return v0;
}
procedure `byte` `b`(`e.e.a.b.f.j.t2` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/j/t2;.b:(I)B` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2223e0.  v0:= v2.`e.e.a.b.f.j.z2.d` @type ^`byte`[] @kind object;
  #L2223e4.  v1:= v2.`e.e.a.b.f.j.t2.e` @type ^`int`;
  #L2223e8.  v1:= v1 + v3 @kind int;
  #L2223ea.  v3:= v0[v1] @kind byte;
  #L2223ee.  return v3;
}
procedure `int` `zza`(`e.e.a.b.f.j.t2` v1 @kind this) @signature `Le/e/a/b/f/j/t2;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L222400.  v0:= v1.`e.e.a.b.f.j.t2.f` @type ^`int`;
  #L222404.  return v0;
}
