record `e.e.a.b.f.n.o4` @kind class @AccessFlag FINAL extends `java.util.ListIterator` @kind interface {
  `java.util.ListIterator` `e.e.a.b.f.n.o4.b` @AccessFlag FINAL;
  `int` `e.e.a.b.f.n.o4.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.a.b.f.n.q4` `e.e.a.b.f.n.o4.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.o4` v0 @kind this, `e.e.a.b.f.n.q4` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/n/o4;.<init>:(Le/e/a/b/f/n/q4;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28ba88.  v0.`e.e.a.b.f.n.o4.d` @type ^`e.e.a.b.f.n.q4` := v1 @kind object;
  #L28ba8c.  v0.`e.e.a.b.f.n.o4.c` @type ^`int` := v2;
  #L28ba90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28ba96.  v1:= v0.`e.e.a.b.f.n.o4.d` @type ^`e.e.a.b.f.n.q4` @kind object;
  #L28ba9a.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/q4;.a:(Le/e/a/b/f/n/q4;)Le/e/a/b/f/n/o2;` @kind static;
  #L28baa0.  v1:= temp @kind object;
  #L28baa2.  v2:= v0.`e.e.a.b.f.n.o4.c` @type ^`int`;
  #L28baa6.  call temp:= `listIterator`(v1, v2) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L28baac.  v1:= temp @kind object;
  #L28baae.  v0.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` := v1 @kind object;
  #L28bab2.  return @kind void;
}
procedure `void` `add`(`e.e.a.b.f.n.o4` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/o4;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L28bac4.  v1:= (`java.lang.String`) v1 @kind object;
  #L28bac8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L28bacc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L28bad2.  throw v1;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28b9c0.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28b9c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L28b9ca.  v0:= temp;
  #L28b9cc.  return v0;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28b9e0.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28b9e4.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L28b9ea.  v0:= temp;
  #L28b9ec.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L28ba40.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28ba44.  call temp:= `next`(v0) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28ba4a.  v0:= temp @kind object;
  #L28ba4c.  v0:= (`java.lang.String`) v0 @kind object;
  #L28ba50.  return v0 @kind object;
}
procedure `int` `nextIndex`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28ba00.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28ba04.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L28ba0a.  v0:= temp;
  #L28ba0c.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L28ba64.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28ba68.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L28ba6e.  v0:= temp @kind object;
  #L28ba70.  v0:= (`java.lang.String`) v0 @kind object;
  #L28ba74.  return v0 @kind object;
}
procedure `int` `previousIndex`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28ba20.  v0:= v1.`e.e.a.b.f.n.o4.b` @type ^`java.util.ListIterator` @kind object;
  #L28ba24.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L28ba2a.  v0:= temp;
  #L28ba2c.  return v0;
}
procedure `void` `remove`(`e.e.a.b.f.n.o4` v1 @kind this) @signature `Le/e/a/b/f/n/o4;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28bae4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L28bae8.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L28baee.  throw v0;
}
procedure `void` `set`(`e.e.a.b.f.n.o4` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/o4;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L28bb00.  v1:= (`java.lang.String`) v1 @kind object;
  #L28bb04.  v1:= new `java.lang.UnsupportedOperationException`;
  #L28bb08.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L28bb0e.  throw v1;
}
