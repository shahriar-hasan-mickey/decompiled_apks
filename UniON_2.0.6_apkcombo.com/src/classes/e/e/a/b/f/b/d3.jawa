record `e.e.a.b.f.b.d3` @kind class @AccessFlag FINAL {
}
global `java.lang.Class` `@@e.e.a.b.f.b.d3.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.b.t3` `@@e.e.a.b.f.b.d3.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.b.t3` `@@e.e.a.b.f.b.d3.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.b.f.b.t3` `@@e.e.a.b.f.b.d3.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/d3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20c9d4.  call temp:= `d`() @signature `Le/e/a/b/f/b/d3;.d:()Ljava/lang/Class;` @kind static;
  #L20c9da.  v0:= temp @kind object;
  #L20c9dc.  `@@e.e.a.b.f.b.d3.a` @type ^`java.lang.Class` := v0 @kind object;
  #L20c9e0.  v0:= 0I;
  #L20c9e2.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/d3;.a:(Z)Le/e/a/b/f/b/t3;` @kind static;
  #L20c9e8.  v0:= temp @kind object;
  #L20c9ea.  `@@e.e.a.b.f.b.d3.b` @type ^`e.e.a.b.f.b.t3` := v0 @kind object;
  #L20c9ee.  v0:= 1I;
  #L20c9f0.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/d3;.a:(Z)Le/e/a/b/f/b/t3;` @kind static;
  #L20c9f6.  v0:= temp @kind object;
  #L20c9f8.  `@@e.e.a.b.f.b.d3.c` @type ^`e.e.a.b.f.b.t3` := v0 @kind object;
  #L20c9fc.  v0:= new `e.e.a.b.f.b.v3`;
  #L20ca00.  call `<init>`(v0) @signature `Le/e/a/b/f/b/v3;.<init>:()V` @kind direct;
  #L20ca06.  `@@e.e.a.b.f.b.d3.d` @type ^`e.e.a.b.f.b.t3` := v0 @kind object;
  #L20ca0a.  return @kind void;
}
procedure `int` `a`(`int` v1 , `java.lang.Object` v2 @kind object, `e.e.a.b.f.b.b3` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/lang/Object;Le/e/a/b/f/b/b3;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L20c1c4.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.b.s1` @kind boolean;
  #L20c1c8.  if v0 == 0 then goto L20c1da;
  #L20c1cc.  v2:= (`e.e.a.b.f.b.s1`) v2 @kind object;
  #L20c1d0.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/b/m0;.a:(ILe/e/a/b/f/b/s1;)I` @kind static;
  #L20c1d6.  v1:= temp;
  #L20c1d8.  return v1;
  #L20c1da.  v2:= (`e.e.a.b.f.b.k2`) v2 @kind object;
  #L20c1de.  call temp:= `b`(v1, v2, v3) @signature `Le/e/a/b/f/b/m0;.b:(ILe/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)I` @kind static;
  #L20c1e4.  v1:= temp;
  #L20c1e6.  return v1;
}
procedure `int` `a`(`int` v4 , `java.util.List` v5 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c1f8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c1fe.  v0:= temp;
  #L20c200.  v1:= 0I;
  #L20c202.  if v0 != 0 then goto L20c208;
  #L20c206.  return v1;
  #L20c208.  call temp:= `e`(v4) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c20e.  v4:= temp;
  #L20c210.  v4:= v4 * v0 @kind int;
  #L20c214.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.b.u1` @kind boolean;
  #L20c218.  if v2 == 0 then goto L20c256;
  #L20c21c.  v5:= (`e.e.a.b.f.b.u1`) v5 @kind object;
  #L20c220.  if v1 >= v0 then goto L20c28c;
  #L20c224.  call temp:= `g`(v5, v1) @signature `Le/e/a/b/f/b/u1;.g:(I)Ljava/lang/Object;` @kind interface;
  #L20c22a.  v2:= temp @kind object;
  #L20c22c.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L20c230.  if v3 == 0 then goto L20c242;
  #L20c234.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L20c238.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/a0;)I` @kind static;
  #L20c23e.  v2:= temp;
  #L20c240.  goto L20c24e;
  #L20c242.  v2:= (`java.lang.String`) v2 @kind object;
  #L20c246.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;)I` @kind static;
  #L20c24c.  v2:= temp;
  #L20c24e.  v4:= v4 + v2 @kind int;
  #L20c250.  v1:= v1 + 1;
  #L20c254.  goto L20c220;
  #L20c256.  if v1 >= v0 then goto L20c28c;
  #L20c25a.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c260.  v2:= temp @kind object;
  #L20c262.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L20c266.  if v3 == 0 then goto L20c278;
  #L20c26a.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L20c26e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/a0;)I` @kind static;
  #L20c274.  v2:= temp;
  #L20c276.  goto L20c284;
  #L20c278.  v2:= (`java.lang.String`) v2 @kind object;
  #L20c27c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;)I` @kind static;
  #L20c282.  v2:= temp;
  #L20c284.  v4:= v4 + v2 @kind int;
  #L20c286.  v1:= v1 + 1;
  #L20c28a.  goto L20c256;
  #L20c28c.  return v4;
}
procedure `int` `a`(`int` v4 , `java.util.List` v5 @kind object, `e.e.a.b.f.b.b3` v6 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Le/e/a/b/f/b/b3;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c2a0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c2a6.  v0:= temp;
  #L20c2a8.  v1:= 0I;
  #L20c2aa.  if v0 != 0 then goto L20c2b0;
  #L20c2ae.  return v1;
  #L20c2b0.  call temp:= `e`(v4) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c2b6.  v4:= temp;
  #L20c2b8.  v4:= v4 * v0 @kind int;
  #L20c2bc.  if v1 >= v0 then goto L20c2f2;
  #L20c2c0.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c2c6.  v2:= temp @kind object;
  #L20c2c8.  v3:= instanceof @variable v2 @type ^`e.e.a.b.f.b.s1` @kind boolean;
  #L20c2cc.  if v3 == 0 then goto L20c2de;
  #L20c2d0.  v2:= (`e.e.a.b.f.b.s1`) v2 @kind object;
  #L20c2d4.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/s1;)I` @kind static;
  #L20c2da.  v2:= temp;
  #L20c2dc.  goto L20c2ea;
  #L20c2de.  v2:= (`e.e.a.b.f.b.k2`) v2 @kind object;
  #L20c2e2.  call temp:= `a`(v2, v6) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)I` @kind static;
  #L20c2e8.  v2:= temp;
  #L20c2ea.  v4:= v4 + v2 @kind int;
  #L20c2ec.  v1:= v1 + 1;
  #L20c2f0.  goto L20c2bc;
  #L20c2f2.  return v4;
}
procedure `int` `a`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c654.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c65a.  v2:= temp;
  #L20c65c.  if v2 != 0 then goto L20c664;
  #L20c660.  v0:= 0I;
  #L20c662.  return v0;
  #L20c664.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/d3;.a:(Ljava/util/List;)I` @kind static;
  #L20c66a.  v2:= temp;
  #L20c66c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c672.  v1:= temp;
  #L20c674.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c67a.  v0:= temp;
  #L20c67c.  v1:= v1 * v0 @kind int;
  #L20c680.  v2:= v2 + v1 @kind int;
  #L20c682.  return v2;
}
procedure `int` `a`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c0d4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c0da.  v0:= temp;
  #L20c0dc.  v1:= 0I;
  #L20c0de.  if v0 != 0 then goto L20c0e4;
  #L20c0e2.  return v1;
  #L20c0e4.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.b.z1` @kind boolean;
  #L20c0e8.  if v2 == 0 then goto L20c10e;
  #L20c0ec.  v5:= (`e.e.a.b.f.b.z1`) v5 @kind object;
  #L20c0f0.  v2:= 0I;
  #L20c0f2.  if v1 >= v0 then goto L20c138;
  #L20c0f6.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/b/z1;.h:(I)J` @kind virtual;
  #L20c0fc.  v3:= temp @kind wide;
  #L20c0fe.  call temp:= `d`(v3) @signature `Le/e/a/b/f/b/m0;.d:(J)I` @kind static;
  #L20c104.  v3:= temp;
  #L20c106.  v2:= v2 + v3 @kind int;
  #L20c108.  v1:= v1 + 1;
  #L20c10c.  goto L20c0f2;
  #L20c10e.  v2:= 0I;
  #L20c110.  if v1 >= v0 then goto L20c138;
  #L20c114.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c11a.  v3:= temp @kind object;
  #L20c11c.  v3:= (`java.lang.Long`) v3 @kind object;
  #L20c120.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20c126.  v3:= temp @kind wide;
  #L20c128.  call temp:= `d`(v3) @signature `Le/e/a/b/f/b/m0;.d:(J)I` @kind static;
  #L20c12e.  v3:= temp;
  #L20c130.  v2:= v2 + v3 @kind int;
  #L20c132.  v1:= v1 + 1;
  #L20c136.  goto L20c110;
  #L20c138.  return v2;
}
procedure `e.e.a.b.f.b.t3` `a`() @signature `Le/e/a/b/f/b/d3;.a:()Le/e/a/b/f/b/t3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20c08c.  v0:= `@@e.e.a.b.f.b.d3.b` @type ^`e.e.a.b.f.b.t3` @kind object;
  #L20c090.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.t3` `a`(`boolean` v6 ) @signature `Le/e/a/b/f/b/d3;.a:(Z)Le/e/a/b/f/b/t3;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20c028.  v0:= 0I;
  #L20c02a.  call temp:= `e`() @signature `Le/e/a/b/f/b/d3;.e:()Ljava/lang/Class;` @kind static;
  #L20c030.  v1:= temp @kind object;
  #L20c032.  if v1 != 0 then goto L20c038;
  #L20c036.  return v0 @kind object;
  #L20c038.  v2:= 1I;
  #L20c03a.  v3:= new `java.lang.Class`[v2];
  #L20c03e.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20c042.  v5:= 0I;
  #L20c044.  v3[v5]:= v4 @kind object;
  #L20c048.  call temp:= `getConstructor`(v1, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L20c04e.  v1:= temp @kind object;
  #L20c050.  v2:= new `java.lang.Object`[v2];
  #L20c054.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L20c05a.  v6:= temp @kind object;
  #L20c05c.  v2[v5]:= v6 @kind object;
  #L20c060.  call temp:= `newInstance`(v1, v2) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c066.  v6:= temp @kind object;
  #L20c068.  v6:= (`e.e.a.b.f.b.t3`) v6 @kind object;
  #L20c06c.  return v6 @kind object;
  #L20c06e.  return v0 @kind object;
  catch `java.lang.Throwable` @[L20c02a..L20c06c] goto L20c06e;
}
procedure `java.lang.Object` `a`(`int` v2 , `int` v3 , `java.lang.Object` v4 @kind object, `e.e.a.b.f.b.t3` v5 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(IILjava/lang/Object;Le/e/a/b/f/b/t3;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20c8d8.  if v4 != 0 then goto L20c8e4;
  #L20c8dc.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/t3;.a:()Ljava/lang/Object;` @kind virtual;
  #L20c8e2.  v4:= temp @kind object;
  #L20c8e4.  v0:= (`long`) v3 @kind i2l;
  #L20c8e6.  call `a`(v5, v4, v2, v0) @signature `Le/e/a/b/f/b/t3;.a:(Ljava/lang/Object;IJ)V` @kind virtual;
  #L20c8ec.  return v4 @kind object;
}
procedure `java.lang.Object` `a`(`int` v5 , `java.util.List` v6 @kind object, `e.e.a.b.f.b.j1` v7 @kind object, `java.lang.Object` v8 @kind object, `e.e.a.b.f.b.t3` v9 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Le/e/a/b/f/b/j1;Ljava/lang/Object;Le/e/a/b/f/b/t3;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c900.  if v7 != 0 then goto L20c906;
  #L20c904.  return v8 @kind object;
  #L20c906.  v0:= instanceof @variable v6 @type ^`java.util.RandomAccess` @kind boolean;
  #L20c90a.  if v0 == 0 then goto L20c97a;
  #L20c90e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c914.  v0:= temp;
  #L20c916.  v1:= 0I;
  #L20c918.  v2:= v8 @kind object;
  #L20c91a.  v8:= 0I;
  #L20c91c.  if v1 >= v0 then goto L20c966;
  #L20c920.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c926.  v3:= temp @kind object;
  #L20c928.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20c92c.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c932.  v3:= temp;
  #L20c934.  call temp:= `b`(v7, v3) @signature `Le/e/a/b/f/b/j1;.b:(I)Le/e/a/b/f/b/i1;` @kind interface;
  #L20c93a.  v4:= temp @kind object;
  #L20c93c.  if v4 == 0 then goto L20c958;
  #L20c940.  if v1 == v8 then goto L20c952;
  #L20c944.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20c94a.  v3:= temp @kind object;
  #L20c94c.  call temp:= `set`(v6, v8, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20c952.  v8:= v8 + 1;
  #L20c956.  goto L20c960;
  #L20c958.  call temp:= `a`(v5, v3, v2, v9) @signature `Le/e/a/b/f/b/d3;.a:(IILjava/lang/Object;Le/e/a/b/f/b/t3;)Ljava/lang/Object;` @kind static;
  #L20c95e.  v2:= temp @kind object;
  #L20c960.  v1:= v1 + 1;
  #L20c964.  goto L20c91c;
  #L20c966.  if v8 == v0 then goto L20c9c0;
  #L20c96a.  call temp:= `subList`(v6, v8, v0) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L20c970.  v5:= temp @kind object;
  #L20c972.  call `clear`(v5) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L20c978.  goto L20c9c0;
  #L20c97a.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20c980.  v6:= temp @kind object;
  #L20c982.  v2:= v8 @kind object;
  #L20c984.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20c98a.  v8:= temp;
  #L20c98c.  if v8 == 0 then goto L20c9c0;
  #L20c990.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20c996.  v8:= temp @kind object;
  #L20c998.  v8:= (`java.lang.Integer`) v8 @kind object;
  #L20c99c.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c9a2.  v8:= temp;
  #L20c9a4.  call temp:= `b`(v7, v8) @signature `Le/e/a/b/f/b/j1;.b:(I)Le/e/a/b/f/b/i1;` @kind interface;
  #L20c9aa.  v0:= temp @kind object;
  #L20c9ac.  if v0 != 0 then goto L20c984;
  #L20c9b0.  call temp:= `a`(v5, v8, v2, v9) @signature `Le/e/a/b/f/b/d3;.a:(IILjava/lang/Object;Le/e/a/b/f/b/t3;)Ljava/lang/Object;` @kind static;
  #L20c9b6.  v8:= temp @kind object;
  #L20c9b8.  call `remove`(v6) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L20c9be.  goto L20c982;
  #L20c9c0.  return v2 @kind object;
}
procedure `void` `a`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Le/e/a/b/f/b/o4;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cab0.  if v2 == 0 then goto L20cac6;
  #L20cab4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20caba.  v0:= temp;
  #L20cabc.  if v0 != 0 then goto L20cac6;
  #L20cac0.  call `b`(v3, v1, v2) @signature `Le/e/a/b/f/b/o4;.b:(ILjava/util/List;)V` @kind interface;
  #L20cac6.  return @kind void;
}
procedure `void` `a`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `e.e.a.b.f.b.b3` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Le/e/a/b/f/b/o4;Le/e/a/b/f/b/b3;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cb00.  if v2 == 0 then goto L20cb16;
  #L20cb04.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cb0a.  v0:= temp;
  #L20cb0c.  if v0 != 0 then goto L20cb16;
  #L20cb10.  call `b`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.b:(ILjava/util/List;Le/e/a/b/f/b/b3;)V` @kind interface;
  #L20cb16.  return @kind void;
}
procedure `void` `a`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.a:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cad8.  if v2 == 0 then goto L20caee;
  #L20cadc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cae2.  v0:= temp;
  #L20cae4.  if v0 != 0 then goto L20caee;
  #L20cae8.  call `i`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.i:(ILjava/util/List;Z)V` @kind interface;
  #L20caee.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.f2` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `long` v4 ) @signature `Le/e/a/b/f/b/d3;.a:(Le/e/a/b/f/b/f2;Ljava/lang/Object;Ljava/lang/Object;J)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20ca50.  call temp:= `f`(v2, v4) @signature `Le/e/a/b/f/b/a4;.f:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L20ca56.  v0:= temp @kind object;
  #L20ca58.  call temp:= `f`(v3, v4) @signature `Le/e/a/b/f/b/a4;.f:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L20ca5e.  v3:= temp @kind object;
  #L20ca60.  call temp:= `b`(v1, v0, v3) @signature `Le/e/a/b/f/b/f2;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20ca66.  v1:= temp @kind object;
  #L20ca68.  call `a`(v2, v4, v1) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L20ca6e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.s0` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(Le/e/a/b/f/b/s0;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20ca1c.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/b/s0;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/w0;` @kind virtual;
  #L20ca22.  v3:= temp @kind object;
  #L20ca24.  call temp:= `b`(v3) @signature `Le/e/a/b/f/b/w0;.b:()Z` @kind virtual;
  #L20ca2a.  v0:= temp;
  #L20ca2c.  if v0 != 0 then goto L20ca3e;
  #L20ca30.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/b/s0;.b:(Ljava/lang/Object;)Le/e/a/b/f/b/w0;` @kind virtual;
  #L20ca36.  v1:= temp @kind object;
  #L20ca38.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/w0;.a:(Le/e/a/b/f/b/w0;)V` @kind virtual;
  #L20ca3e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.t3` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(Le/e/a/b/f/b/t3;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L20ca80.  call temp:= `c`(v1, v2) @signature `Le/e/a/b/f/b/t3;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20ca86.  v0:= temp @kind object;
  #L20ca88.  call temp:= `c`(v1, v3) @signature `Le/e/a/b/f/b/t3;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20ca8e.  v3:= temp @kind object;
  #L20ca90.  call temp:= `c`(v1, v0, v3) @signature `Le/e/a/b/f/b/t3;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20ca96.  v3:= temp @kind object;
  #L20ca98.  call `a`(v1, v2, v3) @signature `Le/e/a/b/f/b/t3;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L20ca9e.  return @kind void;
}
procedure `void` `a`(`java.lang.Class` v1 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cc40.  v0:= constclass @type ^`e.e.a.b.f.b.f1` @kind object;
  #L20cc44.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L20cc4a.  v0:= temp;
  #L20cc4c.  if v0 != 0 then goto L20cc76;
  #L20cc50.  v0:= `@@e.e.a.b.f.b.d3.a` @type ^`java.lang.Class` @kind object;
  #L20cc54.  if v0 == 0 then goto L20cc76;
  #L20cc58.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L20cc5e.  v1:= temp;
  #L20cc60.  if v1 == 0 then goto L20cc66;
  #L20cc64.  goto L20cc76;
  #L20cc66.  v1:= new `java.lang.IllegalArgumentException`;
  #L20cc6a.  v0:= "Message classes must extend GeneratedMessage or GeneratedMessageLite" @kind object;
  #L20cc6e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20cc74.  throw v1;
  #L20cc76.  return @kind void;
}
procedure `boolean` `a`(`int` v9 , `int` v10 , `int` v11 ) @signature `Le/e/a/b/f/b/d3;.a:(III)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L20bfa4.  v0:= 1I;
  #L20bfa6.  v1:= 40I;
  #L20bfaa.  if v10 >= v1 then goto L20bfb0;
  #L20bfae.  return v0;
  #L20bfb0.  v1:= (`long`) v10 @kind i2l;
  #L20bfb2.  v9:= (`long`) v9 @kind i2l;
  #L20bfb4.  v1:= v1 - v9 @kind long;
  #L20bfb6.  v9:= 1L;
  #L20bfba.  v1:= v1 + v9 @kind long;
  #L20bfbc.  v9:= 2L;
  #L20bfc0.  v3:= (`long`) v11 @kind i2l;
  #L20bfc2.  v9:= v9 * v3 @kind long;
  #L20bfc6.  v5:= 3L;
  #L20bfca.  v9:= v9 + v5 @kind long;
  #L20bfcc.  v3:= v3 + v5 @kind long;
  #L20bfce.  v7:= 9L;
  #L20bfd2.  v1:= v1 + v7 @kind long;
  #L20bfd4.  v3:= v3 * v5 @kind long;
  #L20bfd8.  v9:= v9 + v3 @kind long;
  #L20bfda.  v11:= lcmp(v1, v9);
  #L20bfde.  if v11 > 0 then goto L20bfe4;
  #L20bfe2.  return v0;
  #L20bfe4.  v9:= 0I;
  #L20bfe6.  return v9;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/d3;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;

  #L20bff8.  if v0 == v1 then goto L20c012;
  #L20bffc.  if v0 == 0 then goto L20c00e;
  #L20c000.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c006.  v0:= temp;
  #L20c008.  if v0 == 0 then goto L20c00e;
  #L20c00c.  goto L20c012;
  #L20c00e.  v0:= 0I;
  #L20c010.  return v0;
  #L20c012.  v0:= 1I;
  #L20c014.  return v0;
}
procedure `int` `b`(`int` v2 , `java.util.List` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L20c37c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c382.  v0:= temp;
  #L20c384.  v1:= 0I;
  #L20c386.  if v0 != 0 then goto L20c38c;
  #L20c38a.  return v1;
  #L20c38c.  call temp:= `e`(v2) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c392.  v2:= temp;
  #L20c394.  v0:= v0 * v2 @kind int;
  #L20c398.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c39e.  v2:= temp;
  #L20c3a0.  if v1 >= v2 then goto L20c3c0;
  #L20c3a4.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c3aa.  v2:= temp @kind object;
  #L20c3ac.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L20c3b0.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/m0;.a:(Le/e/a/b/f/b/a0;)I` @kind static;
  #L20c3b6.  v2:= temp;
  #L20c3b8.  v0:= v0 + v2 @kind int;
  #L20c3ba.  v1:= v1 + 1;
  #L20c3be.  goto L20c398;
  #L20c3c0.  return v0;
}
procedure `int` `b`(`int` v4 , `java.util.List` v5 @kind object, `e.e.a.b.f.b.b3` v6 @kind object) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;Le/e/a/b/f/b/b3;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c3d4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c3da.  v0:= temp;
  #L20c3dc.  v1:= 0I;
  #L20c3de.  if v0 != 0 then goto L20c3e4;
  #L20c3e2.  return v1;
  #L20c3e4.  v2:= 0I;
  #L20c3e6.  if v1 >= v0 then goto L20c406;
  #L20c3ea.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c3f0.  v3:= temp @kind object;
  #L20c3f2.  v3:= (`e.e.a.b.f.b.k2`) v3 @kind object;
  #L20c3f6.  call temp:= `c`(v4, v3, v6) @signature `Le/e/a/b/f/b/m0;.c:(ILe/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)I` @kind static;
  #L20c3fc.  v3:= temp;
  #L20c3fe.  v2:= v2 + v3 @kind int;
  #L20c400.  v1:= v1 + 1;
  #L20c404.  goto L20c3e6;
  #L20c406.  return v2;
}
procedure `int` `b`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c694.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c69a.  v2:= temp;
  #L20c69c.  if v2 != 0 then goto L20c6a4;
  #L20c6a0.  v0:= 0I;
  #L20c6a2.  return v0;
  #L20c6a4.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/d3;.b:(Ljava/util/List;)I` @kind static;
  #L20c6aa.  v1:= temp;
  #L20c6ac.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c6b2.  v0:= temp;
  #L20c6b4.  v2:= v2 * v0 @kind int;
  #L20c6b8.  v1:= v1 + v2 @kind int;
  #L20c6ba.  return v1;
}
procedure `int` `b`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/b/d3;.b:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c14c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c152.  v0:= temp;
  #L20c154.  v1:= 0I;
  #L20c156.  if v0 != 0 then goto L20c15c;
  #L20c15a.  return v1;
  #L20c15c.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.b.z1` @kind boolean;
  #L20c160.  if v2 == 0 then goto L20c186;
  #L20c164.  v5:= (`e.e.a.b.f.b.z1`) v5 @kind object;
  #L20c168.  v2:= 0I;
  #L20c16a.  if v1 >= v0 then goto L20c1b0;
  #L20c16e.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/b/z1;.h:(I)J` @kind virtual;
  #L20c174.  v3:= temp @kind wide;
  #L20c176.  call temp:= `e`(v3) @signature `Le/e/a/b/f/b/m0;.e:(J)I` @kind static;
  #L20c17c.  v3:= temp;
  #L20c17e.  v2:= v2 + v3 @kind int;
  #L20c180.  v1:= v1 + 1;
  #L20c184.  goto L20c16a;
  #L20c186.  v2:= 0I;
  #L20c188.  if v1 >= v0 then goto L20c1b0;
  #L20c18c.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c192.  v3:= temp @kind object;
  #L20c194.  v3:= (`java.lang.Long`) v3 @kind object;
  #L20c198.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20c19e.  v3:= temp @kind wide;
  #L20c1a0.  call temp:= `e`(v3) @signature `Le/e/a/b/f/b/m0;.e:(J)I` @kind static;
  #L20c1a6.  v3:= temp;
  #L20c1a8.  v2:= v2 + v3 @kind int;
  #L20c1aa.  v1:= v1 + 1;
  #L20c1ae.  goto L20c188;
  #L20c1b0.  return v2;
}
procedure `e.e.a.b.f.b.t3` `b`() @signature `Le/e/a/b/f/b/d3;.b:()Le/e/a/b/f/b/t3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20c0a4.  v0:= `@@e.e.a.b.f.b.d3.c` @type ^`e.e.a.b.f.b.t3` @kind object;
  #L20c0a8.  return v0 @kind object;
}
procedure `void` `b`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;Le/e/a/b/f/b/o4;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cb28.  if v2 == 0 then goto L20cb3e;
  #L20cb2c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cb32.  v0:= temp;
  #L20cb34.  if v0 != 0 then goto L20cb3e;
  #L20cb38.  call `a`(v3, v1, v2) @signature `Le/e/a/b/f/b/o4;.a:(ILjava/util/List;)V` @kind interface;
  #L20cb3e.  return @kind void;
}
procedure `void` `b`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `e.e.a.b.f.b.b3` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;Le/e/a/b/f/b/o4;Le/e/a/b/f/b/b3;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cb78.  if v2 == 0 then goto L20cb8e;
  #L20cb7c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cb82.  v0:= temp;
  #L20cb84.  if v0 != 0 then goto L20cb8e;
  #L20cb88.  call `a`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.a:(ILjava/util/List;Le/e/a/b/f/b/b3;)V` @kind interface;
  #L20cb8e.  return @kind void;
}
procedure `void` `b`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.b:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cb50.  if v2 == 0 then goto L20cb66;
  #L20cb54.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cb5a.  v0:= temp;
  #L20cb5c.  if v0 != 0 then goto L20cb66;
  #L20cb60.  call `l`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.l:(ILjava/util/List;Z)V` @kind interface;
  #L20cb66.  return @kind void;
}
procedure `int` `c`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.c:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c6cc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c6d2.  v2:= temp;
  #L20c6d4.  if v2 != 0 then goto L20c6dc;
  #L20c6d8.  v0:= 0I;
  #L20c6da.  return v0;
  #L20c6dc.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/d3;.c:(Ljava/util/List;)I` @kind static;
  #L20c6e2.  v1:= temp;
  #L20c6e4.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c6ea.  v0:= temp;
  #L20c6ec.  v2:= v2 * v0 @kind int;
  #L20c6f0.  v1:= v1 + v2 @kind int;
  #L20c6f2.  return v1;
}
procedure `int` `c`(`java.util.List` v5 @kind object) @signature `Le/e/a/b/f/b/d3;.c:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c304.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c30a.  v0:= temp;
  #L20c30c.  v1:= 0I;
  #L20c30e.  if v0 != 0 then goto L20c314;
  #L20c312.  return v1;
  #L20c314.  v2:= instanceof @variable v5 @type ^`e.e.a.b.f.b.z1` @kind boolean;
  #L20c318.  if v2 == 0 then goto L20c33e;
  #L20c31c.  v5:= (`e.e.a.b.f.b.z1`) v5 @kind object;
  #L20c320.  v2:= 0I;
  #L20c322.  if v1 >= v0 then goto L20c368;
  #L20c326.  call temp:= `h`(v5, v1) @signature `Le/e/a/b/f/b/z1;.h:(I)J` @kind virtual;
  #L20c32c.  v3:= temp @kind wide;
  #L20c32e.  call temp:= `f`(v3) @signature `Le/e/a/b/f/b/m0;.f:(J)I` @kind static;
  #L20c334.  v3:= temp;
  #L20c336.  v2:= v2 + v3 @kind int;
  #L20c338.  v1:= v1 + 1;
  #L20c33c.  goto L20c322;
  #L20c33e.  v2:= 0I;
  #L20c340.  if v1 >= v0 then goto L20c368;
  #L20c344.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c34a.  v3:= temp @kind object;
  #L20c34c.  v3:= (`java.lang.Long`) v3 @kind object;
  #L20c350.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20c356.  v3:= temp @kind wide;
  #L20c358.  call temp:= `f`(v3) @signature `Le/e/a/b/f/b/m0;.f:(J)I` @kind static;
  #L20c35e.  v3:= temp;
  #L20c360.  v2:= v2 + v3 @kind int;
  #L20c362.  v1:= v1 + 1;
  #L20c366.  goto L20c340;
  #L20c368.  return v2;
}
procedure `e.e.a.b.f.b.t3` `c`() @signature `Le/e/a/b/f/b/d3;.c:()Le/e/a/b/f/b/t3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20c0bc.  v0:= `@@e.e.a.b.f.b.d3.d` @type ^`e.e.a.b.f.b.t3` @kind object;
  #L20c0c0.  return v0 @kind object;
}
procedure `void` `c`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.c:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cba0.  if v2 == 0 then goto L20cbb6;
  #L20cba4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cbaa.  v0:= temp;
  #L20cbac.  if v0 != 0 then goto L20cbb6;
  #L20cbb0.  call `h`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.h:(ILjava/util/List;Z)V` @kind interface;
  #L20cbb6.  return @kind void;
}
procedure `int` `d`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.d:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c704.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c70a.  v2:= temp;
  #L20c70c.  if v2 != 0 then goto L20c714;
  #L20c710.  v0:= 0I;
  #L20c712.  return v0;
  #L20c714.  call temp:= `d`(v1) @signature `Le/e/a/b/f/b/d3;.d:(Ljava/util/List;)I` @kind static;
  #L20c71a.  v1:= temp;
  #L20c71c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c722.  v0:= temp;
  #L20c724.  v2:= v2 * v0 @kind int;
  #L20c728.  v1:= v1 + v2 @kind int;
  #L20c72a.  return v1;
}
procedure `int` `d`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.d:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c418.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c41e.  v0:= temp;
  #L20c420.  v1:= 0I;
  #L20c422.  if v0 != 0 then goto L20c428;
  #L20c426.  return v1;
  #L20c428.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.b.g1` @kind boolean;
  #L20c42c.  if v2 == 0 then goto L20c452;
  #L20c430.  v4:= (`e.e.a.b.f.b.g1`) v4 @kind object;
  #L20c434.  v2:= 0I;
  #L20c436.  if v1 >= v0 then goto L20c47c;
  #L20c43a.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/b/g1;.h:(I)I` @kind virtual;
  #L20c440.  v3:= temp;
  #L20c442.  call temp:= `k`(v3) @signature `Le/e/a/b/f/b/m0;.k:(I)I` @kind static;
  #L20c448.  v3:= temp;
  #L20c44a.  v2:= v2 + v3 @kind int;
  #L20c44c.  v1:= v1 + 1;
  #L20c450.  goto L20c436;
  #L20c452.  v2:= 0I;
  #L20c454.  if v1 >= v0 then goto L20c47c;
  #L20c458.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c45e.  v3:= temp @kind object;
  #L20c460.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20c464.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c46a.  v3:= temp;
  #L20c46c.  call temp:= `k`(v3) @signature `Le/e/a/b/f/b/m0;.k:(I)I` @kind static;
  #L20c472.  v3:= temp;
  #L20c474.  v2:= v2 + v3 @kind int;
  #L20c476.  v1:= v1 + 1;
  #L20c47a.  goto L20c454;
  #L20c47c.  return v2;
}
procedure `java.lang.Class` `d`() @signature `Le/e/a/b/f/b/d3;.d:()Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20c878.  v0:= "com.google.protobuf.GeneratedMessage" @kind object;
  #L20c87c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c882.  v0:= temp @kind object;
  #L20c884.  return v0 @kind object;
  #L20c886.  v0:= 0I;
  #L20c888.  return v0 @kind object;
  catch `java.lang.Throwable` @[L20c87c..L20c884] goto L20c886;
}
procedure `void` `d`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.d:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cbc8.  if v2 == 0 then goto L20cbde;
  #L20cbcc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cbd2.  v0:= temp;
  #L20cbd4.  if v0 != 0 then goto L20cbde;
  #L20cbd8.  call `e`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.e:(ILjava/util/List;Z)V` @kind interface;
  #L20cbde.  return @kind void;
}
procedure `int` `e`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.e:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c73c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c742.  v2:= temp;
  #L20c744.  if v2 != 0 then goto L20c74c;
  #L20c748.  v0:= 0I;
  #L20c74a.  return v0;
  #L20c74c.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/d3;.e:(Ljava/util/List;)I` @kind static;
  #L20c752.  v1:= temp;
  #L20c754.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c75a.  v0:= temp;
  #L20c75c.  v2:= v2 * v0 @kind int;
  #L20c760.  v1:= v1 + v2 @kind int;
  #L20c762.  return v1;
}
procedure `int` `e`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.e:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c490.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c496.  v0:= temp;
  #L20c498.  v1:= 0I;
  #L20c49a.  if v0 != 0 then goto L20c4a0;
  #L20c49e.  return v1;
  #L20c4a0.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.b.g1` @kind boolean;
  #L20c4a4.  if v2 == 0 then goto L20c4ca;
  #L20c4a8.  v4:= (`e.e.a.b.f.b.g1`) v4 @kind object;
  #L20c4ac.  v2:= 0I;
  #L20c4ae.  if v1 >= v0 then goto L20c4f4;
  #L20c4b2.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/b/g1;.h:(I)I` @kind virtual;
  #L20c4b8.  v3:= temp;
  #L20c4ba.  call temp:= `f`(v3) @signature `Le/e/a/b/f/b/m0;.f:(I)I` @kind static;
  #L20c4c0.  v3:= temp;
  #L20c4c2.  v2:= v2 + v3 @kind int;
  #L20c4c4.  v1:= v1 + 1;
  #L20c4c8.  goto L20c4ae;
  #L20c4ca.  v2:= 0I;
  #L20c4cc.  if v1 >= v0 then goto L20c4f4;
  #L20c4d0.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c4d6.  v3:= temp @kind object;
  #L20c4d8.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20c4dc.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c4e2.  v3:= temp;
  #L20c4e4.  call temp:= `f`(v3) @signature `Le/e/a/b/f/b/m0;.f:(I)I` @kind static;
  #L20c4ea.  v3:= temp;
  #L20c4ec.  v2:= v2 + v3 @kind int;
  #L20c4ee.  v1:= v1 + 1;
  #L20c4f2.  goto L20c4cc;
  #L20c4f4.  return v2;
}
procedure `java.lang.Class` `e`() @signature `Le/e/a/b/f/b/d3;.e:()Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20c8a8.  v0:= "com.google.protobuf.UnknownFieldSetSchema" @kind object;
  #L20c8ac.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c8b2.  v0:= temp @kind object;
  #L20c8b4.  return v0 @kind object;
  #L20c8b6.  v0:= 0I;
  #L20c8b8.  return v0 @kind object;
  catch `java.lang.Throwable` @[L20c8ac..L20c8b4] goto L20c8b6;
}
procedure `void` `e`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.e:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cbf0.  if v2 == 0 then goto L20cc06;
  #L20cbf4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cbfa.  v0:= temp;
  #L20cbfc.  if v0 != 0 then goto L20cc06;
  #L20cc00.  call `c`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.c:(ILjava/util/List;Z)V` @kind interface;
  #L20cc06.  return @kind void;
}
procedure `int` `f`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.f:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c774.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c77a.  v2:= temp;
  #L20c77c.  if v2 != 0 then goto L20c784;
  #L20c780.  v0:= 0I;
  #L20c782.  return v0;
  #L20c784.  call temp:= `f`(v1) @signature `Le/e/a/b/f/b/d3;.f:(Ljava/util/List;)I` @kind static;
  #L20c78a.  v1:= temp;
  #L20c78c.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c792.  v0:= temp;
  #L20c794.  v2:= v2 * v0 @kind int;
  #L20c798.  v1:= v1 + v2 @kind int;
  #L20c79a.  return v1;
}
procedure `int` `f`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.f:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c508.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c50e.  v0:= temp;
  #L20c510.  v1:= 0I;
  #L20c512.  if v0 != 0 then goto L20c518;
  #L20c516.  return v1;
  #L20c518.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.b.g1` @kind boolean;
  #L20c51c.  if v2 == 0 then goto L20c542;
  #L20c520.  v4:= (`e.e.a.b.f.b.g1`) v4 @kind object;
  #L20c524.  v2:= 0I;
  #L20c526.  if v1 >= v0 then goto L20c56c;
  #L20c52a.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/b/g1;.h:(I)I` @kind virtual;
  #L20c530.  v3:= temp;
  #L20c532.  call temp:= `g`(v3) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L20c538.  v3:= temp;
  #L20c53a.  v2:= v2 + v3 @kind int;
  #L20c53c.  v1:= v1 + 1;
  #L20c540.  goto L20c526;
  #L20c542.  v2:= 0I;
  #L20c544.  if v1 >= v0 then goto L20c56c;
  #L20c548.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c54e.  v3:= temp @kind object;
  #L20c550.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20c554.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c55a.  v3:= temp;
  #L20c55c.  call temp:= `g`(v3) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L20c562.  v3:= temp;
  #L20c564.  v2:= v2 + v3 @kind int;
  #L20c566.  v1:= v1 + 1;
  #L20c56a.  goto L20c544;
  #L20c56c.  return v2;
}
procedure `void` `f`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.f:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cc18.  if v2 == 0 then goto L20cc2e;
  #L20cc1c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cc22.  v0:= temp;
  #L20cc24.  if v0 != 0 then goto L20cc2e;
  #L20cc28.  call `a`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.a:(ILjava/util/List;Z)V` @kind interface;
  #L20cc2e.  return @kind void;
}
procedure `int` `g`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.g:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c7ac.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c7b2.  v2:= temp;
  #L20c7b4.  if v2 != 0 then goto L20c7bc;
  #L20c7b8.  v0:= 0I;
  #L20c7ba.  return v0;
  #L20c7bc.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/d3;.g:(Ljava/util/List;)I` @kind static;
  #L20c7c2.  v1:= temp;
  #L20c7c4.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20c7ca.  v0:= temp;
  #L20c7cc.  v2:= v2 * v0 @kind int;
  #L20c7d0.  v1:= v1 + v2 @kind int;
  #L20c7d2.  return v1;
}
procedure `int` `g`(`java.util.List` v4 @kind object) @signature `Le/e/a/b/f/b/d3;.g:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c580.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c586.  v0:= temp;
  #L20c588.  v1:= 0I;
  #L20c58a.  if v0 != 0 then goto L20c590;
  #L20c58e.  return v1;
  #L20c590.  v2:= instanceof @variable v4 @type ^`e.e.a.b.f.b.g1` @kind boolean;
  #L20c594.  if v2 == 0 then goto L20c5ba;
  #L20c598.  v4:= (`e.e.a.b.f.b.g1`) v4 @kind object;
  #L20c59c.  v2:= 0I;
  #L20c59e.  if v1 >= v0 then goto L20c5e4;
  #L20c5a2.  call temp:= `h`(v4, v1) @signature `Le/e/a/b/f/b/g1;.h:(I)I` @kind virtual;
  #L20c5a8.  v3:= temp;
  #L20c5aa.  call temp:= `h`(v3) @signature `Le/e/a/b/f/b/m0;.h:(I)I` @kind static;
  #L20c5b0.  v3:= temp;
  #L20c5b2.  v2:= v2 + v3 @kind int;
  #L20c5b4.  v1:= v1 + 1;
  #L20c5b8.  goto L20c59e;
  #L20c5ba.  v2:= 0I;
  #L20c5bc.  if v1 >= v0 then goto L20c5e4;
  #L20c5c0.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20c5c6.  v3:= temp @kind object;
  #L20c5c8.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20c5cc.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20c5d2.  v3:= temp;
  #L20c5d4.  call temp:= `h`(v3) @signature `Le/e/a/b/f/b/m0;.h:(I)I` @kind static;
  #L20c5da.  v3:= temp;
  #L20c5dc.  v2:= v2 + v3 @kind int;
  #L20c5de.  v1:= v1 + 1;
  #L20c5e2.  goto L20c5bc;
  #L20c5e4.  return v2;
}
procedure `void` `g`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.g:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cc88.  if v2 == 0 then goto L20cc9e;
  #L20cc8c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cc92.  v0:= temp;
  #L20cc94.  if v0 != 0 then goto L20cc9e;
  #L20cc98.  call `j`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.j:(ILjava/util/List;Z)V` @kind interface;
  #L20cc9e.  return @kind void;
}
procedure `int` `h`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.h:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c7e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c7ea.  v1:= temp;
  #L20c7ec.  v2:= 0I;
  #L20c7ee.  if v1 != 0 then goto L20c7f4;
  #L20c7f2.  return v2;
  #L20c7f4.  call temp:= `i`(v0, v2) @signature `Le/e/a/b/f/b/m0;.i:(II)I` @kind static;
  #L20c7fa.  v0:= temp;
  #L20c7fc.  v1:= v1 * v0 @kind int;
  #L20c800.  return v1;
}
procedure `int` `h`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/b/d3;.h:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L20c5f8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c5fe.  v0:= temp;
  #L20c600.  v0:= v0 ^< 2;
  #L20c604.  return v0;
}
procedure `void` `h`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.h:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20ccb0.  if v2 == 0 then goto L20ccc6;
  #L20ccb4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20ccba.  v0:= temp;
  #L20ccbc.  if v0 != 0 then goto L20ccc6;
  #L20ccc0.  call `d`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.d:(ILjava/util/List;Z)V` @kind interface;
  #L20ccc6.  return @kind void;
}
procedure `int` `i`(`int` v2 , `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.i:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L20c814.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c81a.  v3:= temp;
  #L20c81c.  if v3 != 0 then goto L20c824;
  #L20c820.  v2:= 0I;
  #L20c822.  return v2;
  #L20c824.  v0:= 0L;
  #L20c828.  call temp:= `g`(v2, v0) @signature `Le/e/a/b/f/b/m0;.g:(IJ)I` @kind static;
  #L20c82e.  v2:= temp;
  #L20c830.  v3:= v3 * v2 @kind int;
  #L20c834.  return v3;
}
procedure `int` `i`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/b/d3;.i:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L20c618.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c61e.  v0:= temp;
  #L20c620.  v0:= v0 ^< 3;
  #L20c624.  return v0;
}
procedure `void` `i`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.i:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20ccd8.  if v2 == 0 then goto L20ccee;
  #L20ccdc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cce2.  v0:= temp;
  #L20cce4.  if v0 != 0 then goto L20ccee;
  #L20cce8.  call `m`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.m:(ILjava/util/List;Z)V` @kind interface;
  #L20ccee.  return @kind void;
}
procedure `int` `j`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/b/d3;.j:(ILjava/util/List;Z)I` @AccessFlag STATIC {
    temp;

  #L20c848.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c84e.  v1:= temp;
  #L20c850.  if v1 != 0 then goto L20c858;
  #L20c854.  v0:= 0I;
  #L20c856.  return v0;
  #L20c858.  v2:= 1I;
  #L20c85a.  call temp:= `b`(v0, v2) @signature `Le/e/a/b/f/b/m0;.b:(IZ)I` @kind static;
  #L20c860.  v0:= temp;
  #L20c862.  v1:= v1 * v0 @kind int;
  #L20c866.  return v1;
}
procedure `int` `j`(`java.util.List` v0 @kind object) @signature `Le/e/a/b/f/b/d3;.j:(Ljava/util/List;)I` @AccessFlag STATIC {
    temp;

  #L20c638.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20c63e.  v0:= temp;
  #L20c640.  return v0;
}
procedure `void` `j`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.j:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cd00.  if v2 == 0 then goto L20cd16;
  #L20cd04.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cd0a.  v0:= temp;
  #L20cd0c.  if v0 != 0 then goto L20cd16;
  #L20cd10.  call `g`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.g:(ILjava/util/List;Z)V` @kind interface;
  #L20cd16.  return @kind void;
}
procedure `void` `k`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.k:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cd28.  if v2 == 0 then goto L20cd3e;
  #L20cd2c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cd32.  v0:= temp;
  #L20cd34.  if v0 != 0 then goto L20cd3e;
  #L20cd38.  call `k`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.k:(ILjava/util/List;Z)V` @kind interface;
  #L20cd3e.  return @kind void;
}
procedure `void` `l`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.l:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cd50.  if v2 == 0 then goto L20cd66;
  #L20cd54.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cd5a.  v0:= temp;
  #L20cd5c.  if v0 != 0 then goto L20cd66;
  #L20cd60.  call `n`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.n:(ILjava/util/List;Z)V` @kind interface;
  #L20cd66.  return @kind void;
}
procedure `void` `m`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.m:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cd78.  if v2 == 0 then goto L20cd8e;
  #L20cd7c.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cd82.  v0:= temp;
  #L20cd84.  if v0 != 0 then goto L20cd8e;
  #L20cd88.  call `f`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.f:(ILjava/util/List;Z)V` @kind interface;
  #L20cd8e.  return @kind void;
}
procedure `void` `n`(`int` v1 , `java.util.List` v2 @kind object, `e.e.a.b.f.b.o4` v3 @kind object, `boolean` v4 ) @signature `Le/e/a/b/f/b/d3;.n:(ILjava/util/List;Le/e/a/b/f/b/o4;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20cda0.  if v2 == 0 then goto L20cdb6;
  #L20cda4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20cdaa.  v0:= temp;
  #L20cdac.  if v0 != 0 then goto L20cdb6;
  #L20cdb0.  call `b`(v3, v1, v2, v4) @signature `Le/e/a/b/f/b/o4;.b:(ILjava/util/List;Z)V` @kind interface;
  #L20cdb6.  return @kind void;
}
