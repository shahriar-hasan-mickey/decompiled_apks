record `e.e.a.b.f.n.n2` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.n.v` @kind class, `java.util.RandomAccess` @kind interface, `e.e.a.b.f.n.o2` @kind interface {
  `java.util.List` `e.e.a.b.f.n.n2.c` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.n2` `@@e.e.a.b.f.n.n2.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/n2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L27fc6c.  v0:= new `e.e.a.b.f.n.n2`;
  #L27fc70.  v1:= 10I;
  #L27fc74.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/n2;.<init>:(I)V` @kind direct;
  #L27fc7a.  `@@e.e.a.b.f.n.n2.d` @type ^`e.e.a.b.f.n.n2` := v0 @kind object;
  #L27fc7e.  v0:= `@@e.e.a.b.f.n.n2.d` @type ^`e.e.a.b.f.n.n2` @kind object;
  #L27fc82.  call `zzb`(v0) @signature `Le/e/a/b/f/n/v;.zzb:()V` @kind virtual;
  #L27fc88.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.n2` v1 @kind this) @signature `Le/e/a/b/f/n/n2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L27fc9c.  v0:= 10I;
  #L27fca0.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/n2;.<init>:(I)V` @kind direct;
  #L27fca6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/n2;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L27fcb8.  v0:= new `java.util.ArrayList`;
  #L27fcbc.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L27fcc2.  call `<init>`(v1) @signature `Le/e/a/b/f/n/v;.<init>:()V` @kind direct;
  #L27fcc8.  v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` := v0 @kind object;
  #L27fccc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.n2` v0 @kind this, `java.util.ArrayList` v1 @kind object) @signature `Le/e/a/b/f/n/n2;.<init>:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27fce0.  call `<init>`(v0) @signature `Le/e/a/b/f/n/v;.<init>:()V` @kind direct;
  #L27fce6.  v0.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` := v1 @kind object;
  #L27fcea.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/n2;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L27fc04.  v0:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L27fc08.  if v0 == 0 then goto L27fc12;
  #L27fc0c.  v1:= (`java.lang.String`) v1 @kind object;
  #L27fc10.  return v1 @kind object;
  #L27fc12.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.n.q0` @kind boolean;
  #L27fc16.  if v0 == 0 then goto L27fc2c;
  #L27fc1a.  v1:= (`e.e.a.b.f.n.q0`) v1 @kind object;
  #L27fc1e.  v0:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L27fc22.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/n/q0;.b:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L27fc28.  v1:= temp @kind object;
  #L27fc2a.  return v1 @kind object;
  #L27fc2c.  v1:= (`byte`[]) v1 @kind object;
  #L27fc30.  call temp:= `b`(v1) @signature `Le/e/a/b/f/n/e2;.b:([B)Ljava/lang/String;` @kind static;
  #L27fc36.  v1:= temp @kind object;
  #L27fc38.  return v1 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.n2` v1 @kind this, `e.e.a.b.f.n.q0` v2 @kind object) @signature `Le/e/a/b/f/n/n2;.a:(Le/e/a/b/f/n/q0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fd60.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27fd66.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fd6a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27fd70.  v2:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L27fd74.  v2:= v2 + 1;
  #L27fd78.  v1.`java.util.AbstractList.modCount` @type ^`int` := v2;
  #L27fd7c.  return @kind void;
}
procedure `void` `add`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/n/n2;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L27fcfc.  v3:= (`java.lang.String`) v3 @kind object;
  #L27fd00.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27fd06.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fd0a.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L27fd10.  v2:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L27fd14.  v2:= v2 + 1;
  #L27fd18.  v1.`java.util.AbstractList.modCount` @type ^`int` := v2;
  #L27fd1c.  return @kind void;
}
procedure `boolean` `addAll`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Le/e/a/b/f/n/n2;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27f9e4.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27f9ea.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.n.o2` @kind boolean;
  #L27f9ee.  if v0 == 0 then goto L27f9fe;
  #L27f9f2.  v3:= (`e.e.a.b.f.n.o2`) v3 @kind object;
  #L27f9f6.  call temp:= `v`(v3) @signature `Le/e/a/b/f/n/o2;.v:()Ljava/util/List;` @kind interface;
  #L27f9fc.  v3:= temp @kind object;
  #L27f9fe.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fa02.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L27fa08.  v2:= temp;
  #L27fa0a.  v3:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L27fa0e.  v3:= v3 + 1;
  #L27fa12.  v1.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L27fa16.  return v2;
}
procedure `boolean` `addAll`(`e.e.a.b.f.n.n2` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/n/n2;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fa28.  call temp:= `size`(v1) @signature `Le/e/a/b/f/n/n2;.size:()I` @kind virtual;
  #L27fa2e.  v0:= temp;
  #L27fa30.  call temp:= `addAll`(v1, v0, v2) @signature `Le/e/a/b/f/n/n2;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L27fa36.  v2:= temp;
  #L27fa38.  return v2;
}
procedure `e.e.a.b.f.n.c2` `c`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/n2;.c:(I)Le/e/a/b/f/n/c2;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L27fa4c.  call temp:= `size`(v1) @signature `Le/e/a/b/f/n/n2;.size:()I` @kind virtual;
  #L27fa52.  v0:= temp;
  #L27fa54.  if v2 < v0 then goto L27fa78;
  #L27fa58.  v0:= new `java.util.ArrayList`;
  #L27fa5c.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L27fa62.  v2:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fa66.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L27fa6c.  v2:= new `e.e.a.b.f.n.n2`;
  #L27fa70.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/n/n2;.<init>:(Ljava/util/ArrayList;)V` @kind direct;
  #L27fa76.  return v2 @kind object;
  #L27fa78.  v2:= new `java.lang.IllegalArgumentException`;
  #L27fa7c.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L27fa82.  throw v2;
}
procedure `void` `clear`(`e.e.a.b.f.n.n2` v1 @kind this) @signature `Le/e/a/b/f/n/n2;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fd30.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27fd36.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fd3a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L27fd40.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L27fd44.  v0:= v0 + 1;
  #L27fd48.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L27fd4c.  return @kind void;
}
procedure `java.lang.Object` `d`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/n2;.d:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fb64.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fb68.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27fb6e.  v2:= temp @kind object;
  #L27fb70.  return v2 @kind object;
}
procedure `e.e.a.b.f.n.o2` `e`(`e.e.a.b.f.n.n2` v1 @kind this) @signature `Le/e/a/b/f/n/n2;.e:()Le/e/a/b/f/n/o2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fa94.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/v;.zza:()Z` @kind virtual;
  #L27fa9a.  v0:= temp;
  #L27fa9c.  if v0 == 0 then goto L27faac;
  #L27faa0.  v0:= new `e.e.a.b.f.n.q4`;
  #L27faa4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/q4;.<init>:(Le/e/a/b/f/n/o2;)V` @kind direct;
  #L27faaa.  return v0 @kind object;
  #L27faac.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.n.n2` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/n2;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L27fae0.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/n/n2;.h:(I)Ljava/lang/String;` @kind virtual;
  #L27fae6.  v1:= temp @kind object;
  #L27fae8.  return v1 @kind object;
}
procedure `java.lang.String` `h`(`e.e.a.b.f.n.n2` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/n/n2;.h:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L27fb84.  v0:= v2.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fb88.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27fb8e.  v0:= temp @kind object;
  #L27fb90.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L27fb94.  if v1 == 0 then goto L27fb9e;
  #L27fb98.  v0:= (`java.lang.String`) v0 @kind object;
  #L27fb9c.  return v0 @kind object;
  #L27fb9e.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.n.q0` @kind boolean;
  #L27fba2.  if v1 == 0 then goto L27fbce;
  #L27fba6.  v0:= (`e.e.a.b.f.n.q0`) v0 @kind object;
  #L27fbaa.  v1:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L27fbae.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/n/q0;.b:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L27fbb4.  v1:= temp @kind object;
  #L27fbb6.  call temp:= `f`(v0) @signature `Le/e/a/b/f/n/q0;.f:()Z` @kind virtual;
  #L27fbbc.  v0:= temp;
  #L27fbbe.  if v0 == 0 then goto L27fbcc;
  #L27fbc2.  v0:= v2.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fbc6.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27fbcc.  return v1 @kind object;
  #L27fbce.  v0:= (`byte`[]) v0 @kind object;
  #L27fbd2.  call temp:= `b`(v0) @signature `Le/e/a/b/f/n/e2;.b:([B)Ljava/lang/String;` @kind static;
  #L27fbd8.  v1:= temp @kind object;
  #L27fbda.  call temp:= `a`(v0) @signature `Le/e/a/b/f/n/e2;.a:([B)Z` @kind static;
  #L27fbe0.  v0:= temp;
  #L27fbe2.  if v0 == 0 then goto L27fbf0;
  #L27fbe6.  v0:= v2.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fbea.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27fbf0.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/n2;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L27fafc.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27fb02.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fb06.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L27fb0c.  v2:= temp @kind object;
  #L27fb0e.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L27fb12.  v0:= v0 + 1;
  #L27fb16.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L27fb1a.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/n2;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27fb20.  v2:= temp @kind object;
  #L27fb22.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.n.n2` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/n/n2;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L27fb34.  v3:= (`java.lang.String`) v3 @kind object;
  #L27fb38.  call `d`(v1) @signature `Le/e/a/b/f/n/v;.d:()V` @kind virtual;
  #L27fb3e.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fb42.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27fb48.  v2:= temp @kind object;
  #L27fb4a.  call temp:= `a`(v2) @signature `Le/e/a/b/f/n/n2;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27fb50.  v2:= temp @kind object;
  #L27fb52.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.n.n2` v1 @kind this) @signature `Le/e/a/b/f/n/n2;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fac0.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fac4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27faca.  v0:= temp;
  #L27facc.  return v0;
}
procedure `java.util.List` `v`(`e.e.a.b.f.n.n2` v1 @kind this) @signature `Le/e/a/b/f/n/n2;.v:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L27fc4c.  v0:= v1.`e.e.a.b.f.n.n2.c` @type ^`java.util.List` @kind object;
  #L27fc50.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L27fc56.  v0:= temp @kind object;
  #L27fc58.  return v0 @kind object;
}
