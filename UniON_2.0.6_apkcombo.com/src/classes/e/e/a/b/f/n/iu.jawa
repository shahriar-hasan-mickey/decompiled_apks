record `e.e.a.b.f.n.iu` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/n/iu;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2ac1bc.  if v2 == 0 then goto L2ac1c2;
  #L2ac1c0.  return v2 @kind object;
  #L2ac1c2.  v2:= new `java.lang.NullPointerException`;
  #L2ac1c6.  v0:= new `java.lang.StringBuilder`;
  #L2ac1ca.  v1:= 20I;
  #L2ac1ce.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ac1d4.  v1:= "at index " @kind object;
  #L2ac1d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac1de.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac1e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ac1ea.  v3:= temp @kind object;
  #L2ac1ec.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ac1f2.  throw v2;
}
procedure `java.lang.Object`[] `a`(`java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/n/iu;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2ac204.  v0:= 0I;
  #L2ac206.  if v0 >= v3 then goto L2ac21a;
  #L2ac20a.  v1:= v2[v0] @kind object;
  #L2ac20e.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/n/iu;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L2ac214.  v0:= v0 + 1;
  #L2ac218.  goto L2ac206;
  #L2ac21a.  return v2 @kind object;
}
