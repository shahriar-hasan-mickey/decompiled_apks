record `e.e.a.b.f.n.iz` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.n.o1` @kind class, `e.e.a.b.f.n.h3` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.n.iz` v1 @kind this) @signature `Le/e/a/b/f/n/iz;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2b2dbc.  call temp:= `s`() @signature `Le/e/a/b/f/n/jz;.s:()Le/e/a/b/f/n/jz;` @kind static;
  #L2b2dc2.  v0:= temp @kind object;
  #L2b2dc4.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/o1;.<init>:(Le/e/a/b/f/n/p1;)V` @kind direct;
  #L2b2dca.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.iz` v0 @kind this, `e.e.a.b.f.n.dv` v1 @kind object) @signature `Le/e/a/b/f/n/iz;.<init>:(Le/e/a/b/f/n/dv;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b2ddc.  call temp:= `s`() @signature `Le/e/a/b/f/n/jz;.s:()Le/e/a/b/f/n/jz;` @kind static;
  #L2b2de2.  v1:= temp @kind object;
  #L2b2de4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/o1;.<init>:(Le/e/a/b/f/n/p1;)V` @kind direct;
  #L2b2dea.  return @kind void;
}
procedure `e.e.a.b.f.n.iz` `a`(`e.e.a.b.f.n.iz` v1 @kind this, `e.e.a.b.f.n.h40` v2 @kind object) @signature `Le/e/a/b/f/n/iz;.a:(Le/e/a/b/f/n/h40;)Le/e/a/b/f/n/iz;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b2cd0.  v0:= v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` @kind boolean;
  #L2b2cd4.  if v0 == 0 then goto L2b2ce4;
  #L2b2cd8.  call `a`(v1) @signature `Le/e/a/b/f/n/o1;.a:()V` @kind virtual;
  #L2b2cde.  v0:= 0I;
  #L2b2ce0.  v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` := v0 @kind boolean;
  #L2b2ce4.  v0:= v1.`e.e.a.b.f.n.n1.c` @type ^`e.e.a.b.f.n.t1` @kind object;
  #L2b2ce8.  v0:= (`e.e.a.b.f.n.jz`) v0 @kind object;
  #L2b2cec.  call temp:= `c`(v2) @signature `Le/e/a/b/f/n/n1;.c:()Le/e/a/b/f/n/t1;` @kind virtual;
  #L2b2cf2.  v2:= temp @kind object;
  #L2b2cf4.  v2:= (`e.e.a.b.f.n.i40`) v2 @kind object;
  #L2b2cf8.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/jz;.a:(Le/e/a/b/f/n/jz;Le/e/a/b/f/n/i40;)V` @kind static;
  #L2b2cfe.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.iz` `a`(`e.e.a.b.f.n.iz` v1 @kind this, `e.e.a.b.f.n.ty` v2 @kind object) @signature `Le/e/a/b/f/n/iz;.a:(Le/e/a/b/f/n/ty;)Le/e/a/b/f/n/iz;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b2d10.  v0:= v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` @kind boolean;
  #L2b2d14.  if v0 == 0 then goto L2b2d24;
  #L2b2d18.  call `a`(v1) @signature `Le/e/a/b/f/n/o1;.a:()V` @kind virtual;
  #L2b2d1e.  v0:= 0I;
  #L2b2d20.  v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` := v0 @kind boolean;
  #L2b2d24.  v0:= v1.`e.e.a.b.f.n.n1.c` @type ^`e.e.a.b.f.n.t1` @kind object;
  #L2b2d28.  v0:= (`e.e.a.b.f.n.jz`) v0 @kind object;
  #L2b2d2c.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/jz;.a:(Le/e/a/b/f/n/jz;Le/e/a/b/f/n/ty;)V` @kind static;
  #L2b2d32.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.iz` `a`(`e.e.a.b.f.n.iz` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Le/e/a/b/f/n/iz;.a:(Ljava/lang/Iterable;)Le/e/a/b/f/n/iz;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b2d44.  v0:= v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` @kind boolean;
  #L2b2d48.  if v0 == 0 then goto L2b2d58;
  #L2b2d4c.  call `a`(v1) @signature `Le/e/a/b/f/n/o1;.a:()V` @kind virtual;
  #L2b2d52.  v0:= 0I;
  #L2b2d54.  v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` := v0 @kind boolean;
  #L2b2d58.  v0:= v1.`e.e.a.b.f.n.n1.c` @type ^`e.e.a.b.f.n.t1` @kind object;
  #L2b2d5c.  v0:= (`e.e.a.b.f.n.jz`) v0 @kind object;
  #L2b2d60.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/jz;.a:(Le/e/a/b/f/n/jz;Ljava/lang/Iterable;)V` @kind static;
  #L2b2d66.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.i40` `e`(`e.e.a.b.f.n.iz` v1 @kind this) @signature `Le/e/a/b/f/n/iz;.e:()Le/e/a/b/f/n/i40;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b2d78.  v0:= v1.`e.e.a.b.f.n.n1.c` @type ^`e.e.a.b.f.n.t1` @kind object;
  #L2b2d7c.  v0:= (`e.e.a.b.f.n.jz`) v0 @kind object;
  #L2b2d80.  call temp:= `q`(v0) @signature `Le/e/a/b/f/n/jz;.q:()Le/e/a/b/f/n/i40;` @kind virtual;
  #L2b2d86.  v0:= temp @kind object;
  #L2b2d88.  return v0 @kind object;
}
