record `e.e.a.b.f.b.h1` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@e.e.a.b.f.b.h1.a` @AccessFlag STATIC_FINAL;
global `byte`[] `@@e.e.a.b.f.b.h1.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/h1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L20227c.  v0:= "UTF-8" @kind object;
  #L202280.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L202286.  v0:= temp @kind object;
  #L202288.  `@@e.e.a.b.f.b.h1.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L20228c.  v0:= "ISO-8859-1" @kind object;
  #L202290.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L202296.  v0:= 0I;
  #L202298.  v1:= new `byte`[v0];
  #L20229c.  `@@e.e.a.b.f.b.h1.b` @type ^`byte`[] := v1 @kind object;
  #L2022a0.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2022a6.  v1:= `@@e.e.a.b.f.b.h1.b` @type ^`byte`[] @kind object;
  #L2022aa.  v2:= length @variable v1;
  #L2022ac.  call temp:= `a`(v1, v0, v2, v0) @signature `Le/e/a/b/f/b/j0;.a:([BIIZ)Le/e/a/b/f/b/j0;` @kind static;
  #L2022b2.  return @kind void;
}
procedure `int` `a`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/b/h1;.a:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L202174.  v0:= v2;
  #L202176.  v2:= v4;
  #L202178.  v1:= v4 + v5 @kind int;
  #L20217c.  if v2 >= v1 then goto L202190;
  #L202180.  v0:= v0 * 31;
  #L202184.  v1:= v3[v2] @kind byte;
  #L202188.  v0:= v0 + v1 @kind int;
  #L20218a.  v2:= v2 + 1;
  #L20218e.  goto L202178;
  #L202190.  return v0;
}
procedure `int` `a`(`long` v2 ) @signature `Le/e/a/b/f/b/h1;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2021c4.  v0:= 32I;
  #L2021c8.  v0:= v2 ^>> v0 @kind long;
  #L2021cc.  v2:= v2 ^~ v0 @kind long;
  #L2021ce.  v3:= (`int`) v2 @kind l2i;
  #L2021d0.  return v3;
}
procedure `int` `a`(`boolean` v0 ) @signature `Le/e/a/b/f/b/h1;.a:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2021a4.  if v0 == 0 then goto L2021ae;
  #L2021a8.  v0:= 1231I;
  #L2021ac.  return v0;
  #L2021ae.  v0:= 1237I;
  #L2021b2.  return v0;
}
procedure `int` `a`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/b/h1;.a:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L202150.  v0:= length @variable v2;
  #L202152.  v1:= 0I;
  #L202154.  call temp:= `a`(v0, v2, v1, v0) @signature `Le/e/a/b/f/b/h1;.a:(I[BII)I` @kind static;
  #L20215a.  v2:= temp;
  #L20215c.  if v2 != 0 then goto L202162;
  #L202160.  v2:= 1I;
  #L202162.  return v2;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L2021e4.  if v0 == 0 then goto L2021ea;
  #L2021e8.  return v0 @kind object;
  #L2021ea.  v0:= new `java.lang.NullPointerException`;
  #L2021ee.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L2021f4.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L202208.  v0:= (`e.e.a.b.f.b.k2`) v0 @kind object;
  #L20220c.  call temp:= `l`(v0) @signature `Le/e/a/b/f/b/k2;.l:()Le/e/a/b/f/b/l2;` @kind interface;
  #L202212.  v0:= temp @kind object;
  #L202214.  v1:= (`e.e.a.b.f.b.k2`) v1 @kind object;
  #L202218.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/l2;.a:(Le/e/a/b/f/b/k2;)Le/e/a/b/f/b/l2;` @kind interface;
  #L20221e.  call temp:= `p`(v0) @signature `Le/e/a/b/f/b/l2;.p:()Le/e/a/b/f/b/k2;` @kind interface;
  #L202224.  v0:= temp @kind object;
  #L202226.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L202238.  if v0 == 0 then goto L20223e;
  #L20223c.  return v0 @kind object;
  #L20223e.  v0:= new `java.lang.NullPointerException`;
  #L202242.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L202248.  throw v0;
}
procedure `boolean` `a`(`e.e.a.b.f.b.k2` v0 @kind object) @signature `Le/e/a/b/f/b/h1;.a:(Le/e/a/b/f/b/k2;)Z` @AccessFlag STATIC {
    temp;

  #L20213c.  v0:= 0I;
  #L20213e.  return v0;
}
procedure `boolean` `b`(`byte`[] v0 @kind object) @signature `Le/e/a/b/f/b/h1;.b:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L202120.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/c4;.a:([B)Z` @kind static;
  #L202126.  v0:= temp;
  #L202128.  return v0;
}
procedure `java.lang.String` `c`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/b/h1;.c:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20225c.  v0:= new `java.lang.String`;
  #L202260.  v1:= `@@e.e.a.b.f.b.h1.a` @type ^`java.nio.charset.Charset` @kind object;
  #L202264.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L20226a.  return v0 @kind object;
}
