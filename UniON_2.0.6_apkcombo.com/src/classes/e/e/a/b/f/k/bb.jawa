record `e.e.a.b.f.k.bb` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.k.bb` `@@e.e.a.b.f.k.bb.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.k.bb` v0 @kind this) @signature `Le/e/a/b/f/k/bb;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L254544.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25454a.  return @kind void;
}
procedure `e.e.a.b.f.k.bb` `a`() @signature `Le/e/a/b/f/k/bb;.a:()Le/e/a/b/f/k/bb;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2544fc.  v0:= constclass @type ^`e.e.a.b.f.k.bb` @kind object;
  #L254500.  @monitorenter v0
  #L254502.  v1:= `@@e.e.a.b.f.k.bb.a` @type ^`e.e.a.b.f.k.bb` @kind object;
  #L254506.  if v1 != 0 then goto L254518;
  #L25450a.  v1:= new `e.e.a.b.f.k.bb`;
  #L25450e.  call `<init>`(v1) @signature `Le/e/a/b/f/k/bb;.<init>:()V` @kind direct;
  #L254514.  `@@e.e.a.b.f.k.bb.a` @type ^`e.e.a.b.f.k.bb` := v1 @kind object;
  #L254518.  v1:= `@@e.e.a.b.f.k.bb.a` @type ^`e.e.a.b.f.k.bb` @kind object;
  #L25451c.  @monitorexit v0
  #L25451e.  return v1 @kind object;
  #L254520.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L254522.  @monitorexit v0
  #L254524.  throw v1;
  catch `java.lang.Throwable` @[L254502..L25451c] goto L254520;
}
