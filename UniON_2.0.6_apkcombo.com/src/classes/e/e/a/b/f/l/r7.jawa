record `e.e.a.b.f.l.r7` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.l.m7` @kind class, `java.util.Set` @kind interface {
  `e.e.a.b.f.l.q7` `e.e.a.b.f.l.r7.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.l.r7` v0 @kind this) @signature `Le/e/a/b/f/l/r7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L263430.  call `<init>`(v0) @signature `Le/e/a/b/f/l/m7;.<init>:()V` @kind direct;
  #L263436.  return @kind void;
}
procedure `e.e.a.b.f.l.r7` `a`(`int` v13 , `java.lang.Object`[] v14 @kind object) @signature `Le/e/a/b/f/l/r7;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/l/r7;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L263270.  if v13 == 0 then goto L26334a;
  #L263274.  v0:= 0I;
  #L263276.  v1:= 1I;
  #L263278.  if v13 == v1 then goto L26333a;
  #L26327c.  call temp:= `d`(v13) @signature `Le/e/a/b/f/l/r7;.d:(I)I` @kind static;
  #L263282.  v2:= temp;
  #L263284.  v6:= new `java.lang.Object`[v2];
  #L263288.  v7:= v2 + -1;
  #L26328c.  v3:= 0I;
  #L26328e.  v5:= 0I;
  #L263290.  v8:= 0I;
  #L263292.  if v3 >= v13 then goto L2632e6;
  #L263296.  v4:= v14[v3] @kind object;
  #L26329a.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/l/t7;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L2632a0.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2632a6.  v9:= temp;
  #L2632a8.  call temp:= `a`(v9) @signature `Le/e/a/b/f/l/i7;.a:(I)I` @kind static;
  #L2632ae.  v10:= temp;
  #L2632b0.  v11:= v10 ^& v7 @kind int;
  #L2632b4.  v12:= v6[v11] @kind object;
  #L2632b8.  if v12 != 0 then goto L2632ce;
  #L2632bc.  v10:= v8 + 1;
  #L2632c0.  v14[v8]:= v4 @kind object;
  #L2632c4.  v6[v11]:= v4 @kind object;
  #L2632c8.  v5:= v5 + v9 @kind int;
  #L2632ca.  v8:= v10;
  #L2632cc.  goto L2632da;
  #L2632ce.  call temp:= `equals`(v12, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2632d4.  v11:= temp;
  #L2632d6.  if v11 == 0 then goto L2632e0;
  #L2632da.  v3:= v3 + 1;
  #L2632de.  goto L263292;
  #L2632e0.  v10:= v10 + 1;
  #L2632e4.  goto L2632b0;
  #L2632e6.  v3:= 0I;
  #L2632e8.  call `fill`(v14, v8, v13, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L2632ee.  if v8 != v1 then goto L263302;
  #L2632f2.  v13:= v14[v0] @kind object;
  #L2632f6.  v14:= new `e.e.a.b.f.l.w7`;
  #L2632fa.  call `<init>`(v14, v13, v5) @signature `Le/e/a/b/f/l/w7;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L263300.  return v14 @kind object;
  #L263302.  call temp:= `d`(v8) @signature `Le/e/a/b/f/l/r7;.d:(I)I` @kind static;
  #L263308.  v13:= temp;
  #L26330a.  v2:= v2 / 2;
  #L26330e.  if v13 < v2 then goto L263330;
  #L263312.  v13:= 6I;
  #L263314.  if v8 >= v13 then goto L263320;
  #L263318.  call temp:= `copyOf`(v14, v8) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L26331e.  v14:= temp @kind object;
  #L263320.  v4:= v14 @kind object;
  #L263322.  v13:= new `e.e.a.b.f.l.v7`;
  #L263326.  v3:= v13 @kind object;
  #L263328.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/l/v7;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L26332e.  return v13 @kind object;
  #L263330.  call temp:= `a`(v8, v14) @signature `Le/e/a/b/f/l/r7;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/l/r7;` @kind static;
  #L263336.  v13:= temp @kind object;
  #L263338.  return v13 @kind object;
  #L26333a.  v13:= v14[v0] @kind object;
  #L26333e.  v14:= new `e.e.a.b.f.l.w7`;
  #L263342.  call `<init>`(v14, v13) @signature `Le/e/a/b/f/l/w7;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L263348.  return v14 @kind object;
  #L26334a.  v13:= `@@e.e.a.b.f.l.v7.i` @type ^`e.e.a.b.f.l.v7` @kind object;
  #L26334e.  return v13 @kind object;
}
procedure `e.e.a.b.f.l.r7` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Le/e/a/b/f/l/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Le/e/a/b/f/l/r7;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L263208.  v0:= 8I;
  #L26320c.  v1:= new `java.lang.Object`[v0];
  #L263210.  v2:= 0I;
  #L263212.  v3:= "common" @kind object;
  #L263216.  v1[v2]:= v3 @kind object;
  #L26321a.  v3:= 1I;
  #L26321c.  v4:= "vision-common" @kind object;
  #L263220.  v1[v3]:= v4 @kind object;
  #L263224.  v3:= 2I;
  #L263226.  v4:= "play-services-mlkit-barcode-scanning" @kind object;
  #L26322a.  v1[v3]:= v4 @kind object;
  #L26322e.  v4:= 3I;
  #L263230.  v5:= "barcode-scanning" @kind object;
  #L263234.  v1[v4]:= v5 @kind object;
  #L263238.  v4:= 4I;
  #L26323a.  v5:= "play-services-mlkit-face-detection" @kind object;
  #L26323e.  v1[v4]:= v5 @kind object;
  #L263242.  v4:= 5I;
  #L263244.  v5:= "face-detection" @kind object;
  #L263248.  v1[v4]:= v5 @kind object;
  #L26324c.  v4:= 6I;
  #L26324e.  call `arraycopy`(v6, v2, v1, v4, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L263254.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/l/r7;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/l/r7;` @kind static;
  #L26325a.  v0:= temp @kind object;
  #L26325c.  return v0 @kind object;
}
procedure `int` `d`(`int` v6 ) @signature `Le/e/a/b/f/l/r7;.d:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2633a8.  v0:= 2I;
  #L2633aa.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2633b0.  v6:= temp;
  #L2633b2.  v0:= 751619276I;
  #L2633b8.  if v6 >= v0 then goto L2633e8;
  #L2633bc.  v0:= v6 + -1;
  #L2633c0.  call temp:= `highestOneBit`(v0) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2633c6.  v0:= temp;
  #L2633c8.  v0:= v0 + v0 @kind int;
  #L2633ca.  v1:= (`double`) v0 @kind i2d;
  #L2633cc.  v3:= 0.7D;
  #L2633d6.  v1:= v1 * v3 @kind double;
  #L2633da.  v3:= (`double`) v6 @kind i2d;
  #L2633dc.  v5:= dcmpg(v1, v3);
  #L2633e0.  if v5 >= 0 then goto L2633e6;
  #L2633e4.  goto L2633c8;
  #L2633e6.  return v0;
  #L2633e8.  v0:= 2.0F;
  #L2633ec.  if v6 >= v0 then goto L2633f2;
  #L2633f0.  return v0;
  #L2633f2.  v6:= new `java.lang.IllegalArgumentException`;
  #L2633f6.  v0:= "collection too large" @kind object;
  #L2633fa.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L263400.  throw v6;
}
procedure `e.e.a.b.f.l.q7` `e`(`e.e.a.b.f.l.r7` v1 @kind this) @signature `Le/e/a/b/f/l/r7;.e:()Le/e/a/b/f/l/q7;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2631cc.  v0:= v1.`e.e.a.b.f.l.r7.c` @type ^`e.e.a.b.f.l.q7` @kind object;
  #L2631d0.  if v0 != 0 then goto L2631e0;
  #L2631d4.  call temp:= `f`(v1) @signature `Le/e/a/b/f/l/r7;.f:()Le/e/a/b/f/l/q7;` @kind virtual;
  #L2631da.  v0:= temp @kind object;
  #L2631dc.  v1.`e.e.a.b.f.l.r7.c` @type ^`e.e.a.b.f.l.q7` := v0 @kind object;
  #L2631e0.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.l.r7` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/l/r7;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L263114.  v0:= 1I;
  #L263116.  if v5 != v4 then goto L26311c;
  #L26311a.  return v0;
  #L26311c.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.l.r7` @kind boolean;
  #L263120.  v2:= 0I;
  #L263122.  if v1 == 0 then goto L26315c;
  #L263126.  call temp:= `v`(v4) @signature `Le/e/a/b/f/l/r7;.v:()Z` @kind virtual;
  #L26312c.  v1:= temp;
  #L26312e.  if v1 == 0 then goto L26315c;
  #L263132.  v1:= v5 @kind object;
  #L263134.  v1:= (`e.e.a.b.f.l.r7`) v1 @kind object;
  #L263138.  call temp:= `v`(v1) @signature `Le/e/a/b/f/l/r7;.v:()Z` @kind virtual;
  #L26313e.  v1:= temp;
  #L263140.  if v1 == 0 then goto L26315c;
  #L263144.  call temp:= `hashCode`(v4) @signature `Le/e/a/b/f/l/r7;.hashCode:()I` @kind virtual;
  #L26314a.  v1:= temp;
  #L26314c.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L263152.  v3:= temp;
  #L263154.  if v1 != v3 then goto L26315a;
  #L263158.  goto L26315c;
  #L26315a.  return v2;
  #L26315c.  if v5 != v4 then goto L263164;
  #L263160.  v2:= 1I;
  #L263162.  goto L263194;
  #L263164.  v1:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L263168.  if v1 == 0 then goto L263194;
  #L26316c.  v5:= (`java.util.Set`) v5 @kind object;
  #L263170.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L263176.  v1:= temp;
  #L263178.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L26317e.  v3:= temp;
  #L263180.  if v1 != v3 then goto L263194;
  #L263184.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L26318a.  v5:= temp;
  #L26318c.  if v5 != 0 then goto L263192;
  #L263190.  goto L263194;
  #L263192.  return v0;
  #L263194.  return v2;
  catch `java.lang.NullPointerException` @[L263170..L26318c] goto L263194;
  catch `java.lang.ClassCastException` @[L263170..L26318c] goto L263194;
}
procedure `e.e.a.b.f.l.q7` `f`(`e.e.a.b.f.l.r7` v1 @kind this) @signature `Le/e/a/b/f/l/r7;.f:()Le/e/a/b/f/l/q7;` @AccessFlag  {
    temp;
    v0;

  #L2631f4.  v0:= 0I;
  #L2631f6.  throw v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.l.r7` v4 @kind this) @signature `Le/e/a/b/f/l/r7;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L263360.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L263366.  v0:= temp @kind object;
  #L263368.  v1:= 0I;
  #L26336a.  v2:= 0I;
  #L26336c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L263372.  v3:= temp;
  #L263374.  if v3 == 0 then goto L263394;
  #L263378.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L26337e.  v3:= temp @kind object;
  #L263380.  if v3 == 0 then goto L26338e;
  #L263384.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L26338a.  v3:= temp;
  #L26338c.  goto L263390;
  #L26338e.  v3:= 0I;
  #L263390.  v2:= v2 + v3 @kind int;
  #L263392.  goto L26336c;
  #L263394.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.l.r7` v1 @kind this) @signature `Le/e/a/b/f/l/r7;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L263414.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/l/r7;.zza:()Le/e/a/b/f/l/x7;` @kind virtual;
  #L26341a.  v0:= temp @kind object;
  #L26341c.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.l.r7` v1 @kind this) @signature `Le/e/a/b/f/l/r7;.v:()Z` @AccessFlag  {
    temp;
    v0;

  #L2631b8.  v0:= 0I;
  #L2631ba.  throw v0;
}
procedure `e.e.a.b.f.l.x7` `zza`() @signature `Le/e/a/b/f/l/r7;.zza:()Le/e/a/b/f/l/x7;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
