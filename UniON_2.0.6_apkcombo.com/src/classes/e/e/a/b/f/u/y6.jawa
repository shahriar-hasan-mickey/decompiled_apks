record `e.e.a.b.f.u.y6` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.u.y6.b` @AccessFlag PRIVATE;
  `java.util.Iterator` `e.e.a.b.f.u.y6.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.u.w6` `e.e.a.b.f.u.y6.d` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.u.y6` v0 @kind this, `e.e.a.b.f.u.w6` v1 @kind object) @signature `Le/e/a/b/f/u/y6;.<init>:(Le/e/a/b/f/u/w6;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L339fb0.  v0.`e.e.a.b.f.u.y6.d` @type ^`e.e.a.b.f.u.w6` := v1 @kind object;
  #L339fb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339fba.  v1:= v0.`e.e.a.b.f.u.y6.d` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L339fbe.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/w6;.b:(Le/e/a/b/f/u/w6;)Ljava/util/List;` @kind static;
  #L339fc4.  v1:= temp @kind object;
  #L339fc6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339fcc.  v1:= temp;
  #L339fce.  v0.`e.e.a.b.f.u.y6.b` @type ^`int` := v1;
  #L339fd2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.y6` v0 @kind this, `e.e.a.b.f.u.w6` v1 @kind object, `e.e.a.b.f.u.v6` v2 @kind object) @signature `Le/e/a/b/f/u/y6;.<init>:(Le/e/a/b/f/u/w6;Le/e/a/b/f/u/v6;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L339fe4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/y6;.<init>:(Le/e/a/b/f/u/w6;)V` @kind direct;
  #L339fea.  return @kind void;
}
procedure `java.util.Iterator` `zza`(`e.e.a.b.f.u.y6` v1 @kind this) @signature `Le/e/a/b/f/u/y6;.zza:()Ljava/util/Iterator;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L339f70.  v0:= v1.`e.e.a.b.f.u.y6.c` @type ^`java.util.Iterator` @kind object;
  #L339f74.  if v0 != 0 then goto L339f98;
  #L339f78.  v0:= v1.`e.e.a.b.f.u.y6.d` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L339f7c.  call temp:= `d`(v0) @signature `Le/e/a/b/f/u/w6;.d:(Le/e/a/b/f/u/w6;)Ljava/util/Map;` @kind static;
  #L339f82.  v0:= temp @kind object;
  #L339f84.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L339f8a.  v0:= temp @kind object;
  #L339f8c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L339f92.  v0:= temp @kind object;
  #L339f94.  v1.`e.e.a.b.f.u.y6.c` @type ^`java.util.Iterator` := v0 @kind object;
  #L339f98.  v0:= v1.`e.e.a.b.f.u.y6.c` @type ^`java.util.Iterator` @kind object;
  #L339f9c.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.u.y6` v2 @kind this) @signature `Le/e/a/b/f/u/y6;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L339ec8.  v0:= v2.`e.e.a.b.f.u.y6.b` @type ^`int`;
  #L339ecc.  if v0 <= 0 then goto L339ee8;
  #L339ed0.  v1:= v2.`e.e.a.b.f.u.y6.d` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L339ed4.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/w6;.b:(Le/e/a/b/f/u/w6;)Ljava/util/List;` @kind static;
  #L339eda.  v1:= temp @kind object;
  #L339edc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339ee2.  v1:= temp;
  #L339ee4.  if v0 <= v1 then goto L339efc;
  #L339ee8.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/y6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L339eee.  v0:= temp @kind object;
  #L339ef0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L339ef6.  v0:= temp;
  #L339ef8.  if v0 == 0 then goto L339f00;
  #L339efc.  v0:= 1I;
  #L339efe.  return v0;
  #L339f00.  v0:= 0I;
  #L339f02.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.u.y6` v2 @kind this) @signature `Le/e/a/b/f/u/y6;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L339f14.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/y6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L339f1a.  v0:= temp @kind object;
  #L339f1c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L339f22.  v0:= temp;
  #L339f24.  if v0 == 0 then goto L339f3e;
  #L339f28.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/y6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L339f2e.  v0:= temp @kind object;
  #L339f30.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L339f36.  v0:= temp @kind object;
  #L339f38.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L339f3c.  return v0 @kind object;
  #L339f3e.  v0:= v2.`e.e.a.b.f.u.y6.d` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L339f42.  call temp:= `b`(v0) @signature `Le/e/a/b/f/u/w6;.b:(Le/e/a/b/f/u/w6;)Ljava/util/List;` @kind static;
  #L339f48.  v0:= temp @kind object;
  #L339f4a.  v1:= v2.`e.e.a.b.f.u.y6.b` @type ^`int`;
  #L339f4e.  v1:= v1 + -1;
  #L339f52.  v2.`e.e.a.b.f.u.y6.b` @type ^`int` := v1;
  #L339f56.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339f5c.  v0:= temp @kind object;
  #L339f5e.  goto L339f38;
}
procedure `void` `remove`(`e.e.a.b.f.u.y6` v1 @kind this) @signature `Le/e/a/b/f/u/y6;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L339ffc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L33a000.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L33a006.  throw v0;
}
