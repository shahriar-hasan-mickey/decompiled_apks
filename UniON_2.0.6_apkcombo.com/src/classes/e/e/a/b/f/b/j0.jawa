record `e.e.a.b.f.b.j0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`e.e.a.b.f.b.j0` v0 @kind this) @signature `Le/e/a/b/f/b/j0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fae84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fae8a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.j0` v0 @kind this, `e.e.a.b.f.b.k0` v1 @kind object) @signature `Le/e/a/b/f/b/j0;.<init>:(Le/e/a/b/f/b/k0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1fae9c.  call `<init>`(v0) @signature `Le/e/a/b/f/b/j0;.<init>:()V` @kind direct;
  #L1faea2.  return @kind void;
}
procedure `int` `a`(`int` v1 ) @signature `Le/e/a/b/f/b/j0;.a:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fae40.  v0:= v1 ^>> 1;
  #L1fae44.  v1:= v1 ^& 1;
  #L1fae48.  v1:= -v1 @kind int;
  #L1fae4a.  v1:= v1 ^~ v0 @kind int;
  #L1fae4c.  return v1;
}
procedure `long` `a`(`long` v4 ) @signature `Le/e/a/b/f/b/j0;.a:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fae60.  v0:= 1I;
  #L1fae62.  v0:= v4 ^>> v0 @kind long;
  #L1fae66.  v2:= 1L;
  #L1fae6a.  v4:= v4 ^& v2 @kind long;
  #L1fae6c.  v4:= -v4 @kind long;
  #L1fae6e.  v4:= v4 ^~ v0 @kind long;
  #L1fae70.  return v4 @kind wide;
}
procedure `e.e.a.b.f.b.j0` `a`(`byte`[] v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Le/e/a/b/f/b/j0;.a:([BIIZ)Le/e/a/b/f/b/j0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1fadf4.  v7:= new `e.e.a.b.f.b.l0`;
  #L1fadf8.  v2:= 0I;
  #L1fadfa.  v4:= 0I;
  #L1fadfc.  v5:= 0I;
  #L1fadfe.  v0:= v7 @kind object;
  #L1fae00.  v1:= v6 @kind object;
  #L1fae02.  v3:= v8;
  #L1fae04.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Le/e/a/b/f/b/l0;.<init>:([BIIZLe/e/a/b/f/b/k0;)V` @kind direct;
  #L1fae0a.  call temp:= `b`(v7, v8) @signature `Le/e/a/b/f/b/l0;.b:(I)I` @kind virtual;
  #L1fae10.  return v7 @kind object;
  #L1fae12.  v6:= Exception @type ^`e.e.a.b.f.b.l1` @kind object;
  #L1fae14.  v7:= new `java.lang.IllegalArgumentException`;
  #L1fae18.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fae1e.  throw v7;
  catch `e.e.a.b.f.b.l1` @[L1fae0a..L1fae10] goto L1fae12;
}
