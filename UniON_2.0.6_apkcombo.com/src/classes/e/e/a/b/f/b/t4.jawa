record `e.e.a.b.f.b.t4` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `int`[] `e.e.a.b.f.b.t4.b` @AccessFlag PRIVATE;
  `e.e.a.b.f.b.u4`[] `e.e.a.b.f.b.t4.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.t4.d` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/t4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L212718.  v0:= new `e.e.a.b.f.b.u4`;
  #L21271c.  call `<init>`(v0) @signature `Le/e/a/b/f/b/u4;.<init>:()V` @kind direct;
  #L212722.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.t4` v1 @kind this) @signature `Le/e/a/b/f/b/t4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L212734.  v0:= 10I;
  #L212738.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/t4;.<init>:(I)V` @kind direct;
  #L21273e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.t4` v3 @kind this, `int` v4 ) @signature `Le/e/a/b/f/b/t4;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L212750.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L212756.  v4:= v4 ^< 2;
  #L21275a.  v0:= 4I;
  #L21275c.  v1:= 4I;
  #L21275e.  v2:= 32I;
  #L212762.  if v1 >= v2 then goto L21277c;
  #L212766.  v2:= 1I;
  #L212768.  v2:= v2 ^< v1 @kind int;
  #L21276a.  v2:= v2 + -12;
  #L21276e.  if v4 > v2 then goto L212776;
  #L212772.  v4:= v2;
  #L212774.  goto L21277c;
  #L212776.  v1:= v1 + 1;
  #L21277a.  goto L21275e;
  #L21277c.  v4:= v4 / v0 @kind int;
  #L21277e.  v0:= new `int`[v4];
  #L212782.  v3.`e.e.a.b.f.b.t4.b` @type ^`int`[] := v0 @kind object;
  #L212786.  v4:= new `e.e.a.b.f.b.u4`[v4];
  #L21278a.  v3.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] := v4 @kind object;
  #L21278e.  v4:= 0I;
  #L212790.  v3.`e.e.a.b.f.b.t4.d` @type ^`int` := v4;
  #L212794.  return @kind void;
}
procedure `e.e.a.b.f.b.u4` `a`(`e.e.a.b.f.b.t4` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/t4;.a:(I)Le/e/a/b/f/b/u4;` @AccessFlag FINAL {
    temp;
    v0;

  #L212634.  v0:= v1.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L212638.  v2:= v0[v2] @kind object;
  #L21263c.  return v2 @kind object;
}
procedure `boolean` `c`(`e.e.a.b.f.b.t4` v1 @kind this) @signature `Le/e/a/b/f/b/t4;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L212614.  v0:= v1.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L212618.  if v0 != 0 then goto L212620;
  #L21261c.  v0:= 1I;
  #L21261e.  return v0;
  #L212620.  v0:= 0I;
  #L212622.  return v0;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.b.t4` v5 @kind this) @signature `Le/e/a/b/f/b/t4;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2126b4.  v0:= v5.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L2126b8.  v1:= new `e.e.a.b.f.b.t4`;
  #L2126bc.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/t4;.<init>:(I)V` @kind direct;
  #L2126c2.  v2:= v5.`e.e.a.b.f.b.t4.b` @type ^`int`[] @kind object;
  #L2126c6.  v3:= v1.`e.e.a.b.f.b.t4.b` @type ^`int`[] @kind object;
  #L2126ca.  v4:= 0I;
  #L2126cc.  call `arraycopy`(v2, v4, v3, v4, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2126d2.  if v4 >= v0 then goto L212700;
  #L2126d6.  v2:= v5.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L2126da.  v3:= v2[v4] @kind object;
  #L2126de.  if v3 == 0 then goto L2126fa;
  #L2126e2.  v3:= v1.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L2126e6.  v2:= v2[v4] @kind object;
  #L2126ea.  call temp:= `clone`(v2) @signature `Le/e/a/b/f/b/u4;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2126f0.  v2:= temp @kind object;
  #L2126f2.  v2:= (`e.e.a.b.f.b.u4`) v2 @kind object;
  #L2126f6.  v3[v4]:= v2 @kind object;
  #L2126fa.  v4:= v4 + 1;
  #L2126fe.  goto L2126d2;
  #L212700.  v1.`e.e.a.b.f.b.t4.d` @type ^`int` := v0;
  #L212704.  return v1 @kind object;
}
procedure `int` `d`(`e.e.a.b.f.b.t4` v1 @kind this) @signature `Le/e/a/b/f/b/t4;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L21269c.  v0:= v1.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L2126a0.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.t4` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/b/t4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L212578.  v0:= 1I;
  #L21257a.  if v9 != v8 then goto L212580;
  #L21257e.  return v0;
  #L212580.  v1:= instanceof @variable v9 @type ^`e.e.a.b.f.b.t4` @kind boolean;
  #L212584.  v2:= 0I;
  #L212586.  if v1 != 0 then goto L21258c;
  #L21258a.  return v2;
  #L21258c.  v9:= (`e.e.a.b.f.b.t4`) v9 @kind object;
  #L212590.  v1:= v8.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L212594.  v3:= v9.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L212598.  if v1 == v3 then goto L21259e;
  #L21259c.  return v2;
  #L21259e.  v3:= v8.`e.e.a.b.f.b.t4.b` @type ^`int`[] @kind object;
  #L2125a2.  v4:= v9.`e.e.a.b.f.b.t4.b` @type ^`int`[] @kind object;
  #L2125a6.  v5:= 0I;
  #L2125a8.  if v5 >= v1 then goto L2125c2;
  #L2125ac.  v6:= v3[v5];
  #L2125b0.  v7:= v4[v5];
  #L2125b4.  if v6 == v7 then goto L2125bc;
  #L2125b8.  v1:= 0I;
  #L2125ba.  goto L2125c4;
  #L2125bc.  v5:= v5 + 1;
  #L2125c0.  goto L2125a8;
  #L2125c2.  v1:= 1I;
  #L2125c4.  if v1 == 0 then goto L212600;
  #L2125c8.  v1:= v8.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L2125cc.  v9:= v9.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L2125d0.  v3:= v8.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L2125d4.  v4:= 0I;
  #L2125d6.  if v4 >= v3 then goto L2125f8;
  #L2125da.  v5:= v1[v4] @kind object;
  #L2125de.  v6:= v9[v4] @kind object;
  #L2125e2.  call temp:= `equals`(v5, v6) @signature `Le/e/a/b/f/b/u4;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2125e8.  v5:= temp;
  #L2125ea.  if v5 != 0 then goto L2125f2;
  #L2125ee.  v9:= 0I;
  #L2125f0.  goto L2125fa;
  #L2125f2.  v4:= v4 + 1;
  #L2125f6.  goto L2125d6;
  #L2125f8.  v9:= 1I;
  #L2125fa.  if v9 == 0 then goto L212600;
  #L2125fe.  return v0;
  #L212600.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.t4` v3 @kind this) @signature `Le/e/a/b/f/b/t4;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L212650.  v0:= 17I;
  #L212654.  v1:= 0I;
  #L212656.  v2:= v3.`e.e.a.b.f.b.t4.d` @type ^`int`;
  #L21265a.  if v1 >= v2 then goto L212688;
  #L21265e.  v0:= v0 * 31;
  #L212662.  v2:= v3.`e.e.a.b.f.b.t4.b` @type ^`int`[] @kind object;
  #L212666.  v2:= v2[v1];
  #L21266a.  v0:= v0 + v2 @kind int;
  #L21266c.  v0:= v0 * 31;
  #L212670.  v2:= v3.`e.e.a.b.f.b.t4.c` @type ^`e.e.a.b.f.b.u4`[] @kind object;
  #L212674.  v2:= v2[v1] @kind object;
  #L212678.  call temp:= `hashCode`(v2) @signature `Le/e/a/b/f/b/u4;.hashCode:()I` @kind virtual;
  #L21267e.  v2:= temp;
  #L212680.  v0:= v0 + v2 @kind int;
  #L212682.  v1:= v1 + 1;
  #L212686.  goto L212656;
  #L212688.  return v0;
}
