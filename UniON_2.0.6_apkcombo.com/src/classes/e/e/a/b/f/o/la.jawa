record `e.e.a.b.f.o.la` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.o.la` `@@e.e.a.b.f.o.la.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.o.la` v0 @kind this) @signature `Le/e/a/b/f/o/la;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2cf1fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cf202.  return @kind void;
}
procedure `e.e.a.b.f.o.la` `a`() @signature `Le/e/a/b/f/o/la;.a:()Le/e/a/b/f/o/la;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2cf1b4.  v0:= constclass @type ^`e.e.a.b.f.o.la` @kind object;
  #L2cf1b8.  @monitorenter v0
  #L2cf1ba.  v1:= `@@e.e.a.b.f.o.la.a` @type ^`e.e.a.b.f.o.la` @kind object;
  #L2cf1be.  if v1 != 0 then goto L2cf1d0;
  #L2cf1c2.  v1:= new `e.e.a.b.f.o.la`;
  #L2cf1c6.  call `<init>`(v1) @signature `Le/e/a/b/f/o/la;.<init>:()V` @kind direct;
  #L2cf1cc.  `@@e.e.a.b.f.o.la.a` @type ^`e.e.a.b.f.o.la` := v1 @kind object;
  #L2cf1d0.  v1:= `@@e.e.a.b.f.o.la.a` @type ^`e.e.a.b.f.o.la` @kind object;
  #L2cf1d4.  @monitorexit v0
  #L2cf1d6.  return v1 @kind object;
  #L2cf1d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cf1da.  @monitorexit v0
  #L2cf1dc.  throw v1;
  catch `java.lang.Throwable` @[L2cf1ba..L2cf1d4] goto L2cf1d8;
}
