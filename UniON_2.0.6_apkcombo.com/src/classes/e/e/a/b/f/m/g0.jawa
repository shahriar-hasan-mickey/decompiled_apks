record `e.e.a.b.f.m.g0` @kind class @AccessFlag  extends `e.e.a.b.f.m.h0` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.m.g0.a` @AccessFlag ;
  `int` `e.e.a.b.f.m.g0.b` @AccessFlag ;
  `boolean` `e.e.a.b.f.m.g0.c` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.a.b.f.m.g0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/m/g0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L266878.  call `<init>`(v0) @signature `Le/e/a/b/f/m/h0;.<init>:()V` @kind direct;
  #L26687e.  v1:= 4I;
  #L266880.  v1:= new `java.lang.Object`[v1];
  #L266884.  v0.`e.e.a.b.f.m.g0.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L266888.  v1:= 0I;
  #L26688a.  v0.`e.e.a.b.f.m.g0.b` @type ^`int` := v1;
  #L26688e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.m.g0` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/m/g0;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2668a0.  v0:= v4.`e.e.a.b.f.m.g0.a` @type ^`java.lang.Object`[] @kind object;
  #L2668a4.  v1:= length @variable v0;
  #L2668a6.  v2:= 0I;
  #L2668a8.  if v1 >= v5 then goto L2668e6;
  #L2668ac.  v3:= v1 ^> 1;
  #L2668b0.  v1:= v1 + v3 @kind int;
  #L2668b2.  v1:= v1 + 1;
  #L2668b6.  if v1 >= v5 then goto L2668ca;
  #L2668ba.  v5:= v5 + -1;
  #L2668be.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2668c4.  v5:= temp;
  #L2668c6.  v1:= v5 + v5 @kind int;
  #L2668ca.  if v1 >= 0 then goto L2668d4;
  #L2668ce.  v1:= 2147483647I;
  #L2668d4.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2668da.  v5:= temp @kind object;
  #L2668dc.  v4.`e.e.a.b.f.m.g0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L2668e0.  v4.`e.e.a.b.f.m.g0.c` @type ^`boolean` := v2 @kind boolean;
  #L2668e4.  return @kind void;
  #L2668e6.  v5:= v4.`e.e.a.b.f.m.g0.c` @type ^`boolean` @kind boolean;
  #L2668ea.  if v5 == 0 then goto L266900;
  #L2668ee.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2668f4.  v5:= temp @kind object;
  #L2668f6.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L2668fa.  v4.`e.e.a.b.f.m.g0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L2668fe.  goto L2668e0;
  #L266900.  return @kind void;
}
procedure `e.e.a.b.f.m.g0` `a`(`e.e.a.b.f.m.g0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/m/g0;.a:(Ljava/lang/Object;)Le/e/a/b/f/m/g0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L26683c.  if v4 == 0 then goto L266864;
  #L266840.  v0:= v3.`e.e.a.b.f.m.g0.b` @type ^`int`;
  #L266844.  v0:= v0 + 1;
  #L266848.  call `a`(v3, v0) @signature `Le/e/a/b/f/m/g0;.a:(I)V` @kind direct;
  #L26684e.  v0:= v3.`e.e.a.b.f.m.g0.a` @type ^`java.lang.Object`[] @kind object;
  #L266852.  v1:= v3.`e.e.a.b.f.m.g0.b` @type ^`int`;
  #L266856.  v2:= v1 + 1;
  #L26685a.  v3.`e.e.a.b.f.m.g0.b` @type ^`int` := v2;
  #L26685e.  v0[v1]:= v4 @kind object;
  #L266862.  return v3 @kind object;
  #L266864.  v4:= 0I;
  #L266866.  throw v4;
}
