record `e.e.a.b.f.k.ca` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.ea` @kind class {
  `java.lang.String` `e.e.a.b.f.k.ca.a` @AccessFlag PRIVATE;
  `java.lang.Boolean` `e.e.a.b.f.k.ca.b` @AccessFlag PRIVATE;
  `java.lang.Boolean` `e.e.a.b.f.k.ca.c` @AccessFlag PRIVATE;
  `e.e.a.a.d` `e.e.a.b.f.k.ca.d` @AccessFlag PRIVATE;
  `java.lang.Integer` `e.e.a.b.f.k.ca.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.k.ca` v0 @kind this) @signature `Le/e/a/b/f/k/ca;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L253320.  call `<init>`(v0) @signature `Le/e/a/b/f/k/ea;.<init>:()V` @kind direct;
  #L253326.  return @kind void;
}
procedure `e.e.a.b.f.k.ea` `a`(`e.e.a.b.f.k.ca` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/k/ca;.a:(I)Le/e/a/b/f/k/ea;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2531f4.  v1:= 0I;
  #L2531f6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2531fc.  v1:= temp @kind object;
  #L2531fe.  v0.`e.e.a.b.f.k.ca.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L253202.  return v0 @kind object;
}
procedure `e.e.a.b.f.k.ea` `a`(`e.e.a.b.f.k.ca` v1 @kind this, `e.e.a.a.d` v2 @kind object) @signature `Le/e/a/b/f/k/ca;.a:(Le/e/a/a/d;)Le/e/a/b/f/k/ea;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2531c8.  if v2 == 0 then goto L2531d2;
  #L2531cc.  v1.`e.e.a.b.f.k.ca.d` @type ^`e.e.a.a.d` := v2 @kind object;
  #L2531d0.  return v1 @kind object;
  #L2531d2.  v2:= new `java.lang.NullPointerException`;
  #L2531d6.  v0:= "Null firelogEventPriority" @kind object;
  #L2531da.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2531e0.  throw v2;
}
procedure `e.e.a.b.f.k.ea` `a`(`e.e.a.b.f.k.ca` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/k/ca;.a:(Ljava/lang/String;)Le/e/a/b/f/k/ea;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L25315c.  if v2 == 0 then goto L253166;
  #L253160.  v1.`e.e.a.b.f.k.ca.a` @type ^`java.lang.String` := v2 @kind object;
  #L253164.  return v1 @kind object;
  #L253166.  v2:= new `java.lang.NullPointerException`;
  #L25316a.  v0:= "Null libraryName" @kind object;
  #L25316e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L253174.  throw v2;
}
procedure `e.e.a.b.f.k.ea` `a`(`e.e.a.b.f.k.ca` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/k/ca;.a:(Z)Le/e/a/b/f/k/ea;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L253188.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L25318e.  v1:= temp @kind object;
  #L253190.  v0.`e.e.a.b.f.k.ca.b` @type ^`java.lang.Boolean` := v1 @kind object;
  #L253194.  return v0 @kind object;
}
procedure `e.e.a.b.f.k.fa` `a`(`e.e.a.b.f.k.ca` v9 @kind this) @signature `Le/e/a/b/f/k/ca;.a:()Le/e/a/b/f/k/fa;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L253214.  v0:= v9.`e.e.a.b.f.k.ca.a` @type ^`java.lang.String` @kind object;
  #L253218.  if v0 != 0 then goto L253222;
  #L25321c.  v0:= " libraryName" @kind object;
  #L253220.  goto L253226;
  #L253222.  v0:= "" @kind object;
  #L253226.  v1:= v9.`e.e.a.b.f.k.ca.b` @type ^`java.lang.Boolean` @kind object;
  #L25322a.  if v1 != 0 then goto L25323a;
  #L25322e.  v1:= " enableClearcut" @kind object;
  #L253232.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L253238.  v0:= temp @kind object;
  #L25323a.  v1:= v9.`e.e.a.b.f.k.ca.c` @type ^`java.lang.Boolean` @kind object;
  #L25323e.  if v1 != 0 then goto L253256;
  #L253242.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253248.  v0:= temp @kind object;
  #L25324a.  v1:= " enableFirelog" @kind object;
  #L25324e.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L253254.  v0:= temp @kind object;
  #L253256.  v1:= v9.`e.e.a.b.f.k.ca.d` @type ^`e.e.a.a.d` @kind object;
  #L25325a.  if v1 != 0 then goto L253272;
  #L25325e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253264.  v0:= temp @kind object;
  #L253266.  v1:= " firelogEventPriority" @kind object;
  #L25326a.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L253270.  v0:= temp @kind object;
  #L253272.  v1:= v9.`e.e.a.b.f.k.ca.e` @type ^`java.lang.Integer` @kind object;
  #L253276.  if v1 != 0 then goto L25328e;
  #L25327a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L253280.  v0:= temp @kind object;
  #L253282.  v1:= " firelogEventType" @kind object;
  #L253286.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L25328c.  v0:= temp @kind object;
  #L25328e.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L253294.  v1:= temp;
  #L253296.  if v1 != 0 then goto L2532d2;
  #L25329a.  v1:= new `java.lang.IllegalStateException`;
  #L25329e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2532a4.  v0:= temp @kind object;
  #L2532a6.  v2:= "Missing required properties:" @kind object;
  #L2532aa.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2532b0.  v3:= temp;
  #L2532b2.  if v3 == 0 then goto L2532c0;
  #L2532b6.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2532bc.  v0:= temp @kind object;
  #L2532be.  goto L2532ca;
  #L2532c0.  v0:= new `java.lang.String`;
  #L2532c4.  call `<init>`(v0, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2532ca.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2532d0.  throw v1;
  #L2532d2.  v0:= new `e.e.a.b.f.k.da`;
  #L2532d6.  v3:= v9.`e.e.a.b.f.k.ca.a` @type ^`java.lang.String` @kind object;
  #L2532da.  v1:= v9.`e.e.a.b.f.k.ca.b` @type ^`java.lang.Boolean` @kind object;
  #L2532de.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2532e4.  v4:= temp;
  #L2532e6.  v1:= v9.`e.e.a.b.f.k.ca.c` @type ^`java.lang.Boolean` @kind object;
  #L2532ea.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2532f0.  v5:= temp;
  #L2532f2.  v6:= v9.`e.e.a.b.f.k.ca.d` @type ^`e.e.a.a.d` @kind object;
  #L2532f6.  v1:= v9.`e.e.a.b.f.k.ca.e` @type ^`java.lang.Integer` @kind object;
  #L2532fa.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L253300.  v7:= temp;
  #L253302.  v8:= 0I;
  #L253304.  v2:= v0 @kind object;
  #L253306.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/k/da;.<init>:(Ljava/lang/String;ZZLe/e/a/a/d;ILe/e/a/b/f/k/ba;)V` @kind direct;
  #L25330c.  return v0 @kind object;
}
procedure `e.e.a.b.f.k.ea` `b`(`e.e.a.b.f.k.ca` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/k/ca;.b:(Z)Le/e/a/b/f/k/ea;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2531a8.  v1:= 1I;
  #L2531aa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2531b0.  v1:= temp @kind object;
  #L2531b2.  v0.`e.e.a.b.f.k.ca.c` @type ^`java.lang.Boolean` := v1 @kind object;
  #L2531b6.  return v0 @kind object;
}
