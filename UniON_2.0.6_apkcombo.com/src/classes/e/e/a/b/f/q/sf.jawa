record `e.e.a.b.f.q.sf` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.q.t` @kind class, `e.e.a.b.f.q.d1` @kind interface {
  `int` `e.e.a.b.f.q.sf.zzb` @AccessFlag PRIVATE;
  `float` `e.e.a.b.f.q.sf.zze` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.q.sf` `@@e.e.a.b.f.q.sf.zzf` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/sf;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f1298.  v0:= new `e.e.a.b.f.q.sf`;
  #L2f129c.  call `<init>`(v0) @signature `Le/e/a/b/f/q/sf;.<init>:()V` @kind direct;
  #L2f12a2.  `@@e.e.a.b.f.q.sf.zzf` @type ^`e.e.a.b.f.q.sf` := v0 @kind object;
  #L2f12a6.  v1:= constclass @type ^`e.e.a.b.f.q.sf` @kind object;
  #L2f12aa.  call `a`(v1, v0) @signature `Le/e/a/b/f/q/t;.a:(Ljava/lang/Class;Le/e/a/b/f/q/t;)V` @kind static;
  #L2f12b0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.sf` v0 @kind this) @signature `Le/e/a/b/f/q/sf;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f12c4.  call `<init>`(v0) @signature `Le/e/a/b/f/q/t;.<init>:()V` @kind direct;
  #L2f12ca.  return @kind void;
}
procedure `e.e.a.b.f.q.sf` `i`() @signature `Le/e/a/b/f/q/sf;.i:()Le/e/a/b/f/q/sf;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2f11f8.  v0:= `@@e.e.a.b.f.q.sf.zzf` @type ^`e.e.a.b.f.q.sf` @kind object;
  #L2f11fc.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.q.sf` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/q/sf;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2f1210.  v2:= v2 + -1;
  #L2f1214.  v3:= 1I;
  #L2f1216.  if v2 == 0 then goto L2f127c;
  #L2f121a.  v4:= 2I;
  #L2f121c.  if v2 == v4 then goto L2f1254;
  #L2f1220.  v3:= 3I;
  #L2f1222.  if v2 == v3 then goto L2f1248;
  #L2f1226.  v3:= 4I;
  #L2f1228.  v4:= 0I;
  #L2f122a.  if v2 == v3 then goto L2f123c;
  #L2f122e.  v3:= 5I;
  #L2f1230.  if v2 == v3 then goto L2f1236;
  #L2f1234.  return v4 @kind object;
  #L2f1236.  v2:= `@@e.e.a.b.f.q.sf.zzf` @type ^`e.e.a.b.f.q.sf` @kind object;
  #L2f123a.  return v2 @kind object;
  #L2f123c.  v2:= new `e.e.a.b.f.q.rf`;
  #L2f1240.  call `<init>`(v2, v4) @signature `Le/e/a/b/f/q/rf;.<init>:(Le/e/a/b/f/q/j7;)V` @kind direct;
  #L2f1246.  return v2 @kind object;
  #L2f1248.  v2:= new `e.e.a.b.f.q.sf`;
  #L2f124c.  call `<init>`(v2) @signature `Le/e/a/b/f/q/sf;.<init>:()V` @kind direct;
  #L2f1252.  return v2 @kind object;
  #L2f1254.  v2:= new `java.lang.Object`[v4];
  #L2f1258.  v4:= 0I;
  #L2f125a.  v0:= "zzb" @kind object;
  #L2f125e.  v2[v4]:= v0 @kind object;
  #L2f1262.  v4:= "zze" @kind object;
  #L2f1266.  v2[v3]:= v4 @kind object;
  #L2f126a.  v3:= `@@e.e.a.b.f.q.sf.zzf` @type ^`e.e.a.b.f.q.sf` @kind object;
  #L2f126e.  v4:= "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001·ÄÅ\u0000" @kind object;
  #L2f1272.  call temp:= `a`(v3, v4, v2) @signature `Le/e/a/b/f/q/t;.a:(Le/e/a/b/f/q/b1;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2f1278.  v2:= temp @kind object;
  #L2f127a.  return v2 @kind object;
  #L2f127c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L2f1282.  v2:= temp @kind object;
  #L2f1284.  return v2 @kind object;
}
