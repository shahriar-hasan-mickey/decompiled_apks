record `e.e.a.b.f.n.ot` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.n.ot` v0 @kind this) @signature `Le/e/a/b/f/n/ot;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2aaafc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aab02.  return @kind void;
}
procedure `e.e.a.b.f.n.ot` `b`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/ot;.b:(Ljava/lang/Object;)Le/e/a/b/f/n/ot;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2aaad8.  v0:= new `e.e.a.b.f.n.qt`;
  #L2aaadc.  if v1 == 0 then goto L2aaae8;
  #L2aaae0.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/qt;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2aaae6.  return v0 @kind object;
  #L2aaae8.  v1:= 0I;
  #L2aaaea.  throw v1;
}
procedure `e.e.a.b.f.n.ot` `c`() @signature `Le/e/a/b/f/n/ot;.c:()Le/e/a/b/f/n/ot;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2aaac0.  v0:= `@@e.e.a.b.f.n.gt.b` @type ^`e.e.a.b.f.n.gt` @kind object;
  #L2aaac4.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/n/ot;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`() @signature `Le/e/a/b/f/n/ot;.a:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `b`() @signature `Le/e/a/b/f/n/ot;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
