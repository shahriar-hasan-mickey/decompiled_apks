record `e.e.a.b.f.k.x` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.n1` @kind class {
  `java.util.Map` `e.e.a.b.f.k.x.d` @AccessFlag FINAL_TRANSIENT;
  `e.e.a.b.f.k.g0` `e.e.a.b.f.k.x.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.x` v0 @kind this, `e.e.a.b.f.k.g0` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Le/e/a/b/f/k/x;.<init>:(Le/e/a/b/f/k/g0;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243b18.  v0.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` := v1 @kind object;
  #L243b1c.  call `<init>`(v0) @signature `Le/e/a/b/f/k/n1;.<init>:()V` @kind direct;
  #L243b22.  v0.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` := v2 @kind object;
  #L243b26.  return @kind void;
}
procedure `java.util.Set` `a`(`e.e.a.b.f.k.x` v1 @kind this) @signature `Le/e/a/b/f/k/x;.a:()Ljava/util/Set;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L243afc.  v0:= new `e.e.a.b.f.k.v`;
  #L243b00.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/v;.<init>:(Le/e/a/b/f/k/x;)V` @kind direct;
  #L243b06.  return v0 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.k.x` v2 @kind this) @signature `Le/e/a/b/f/k/x;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L243b38.  v0:= v2.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243b3c.  v1:= v2.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243b40.  call temp:= `a`(v1) @signature `Le/e/a/b/f/k/g0;.a:(Le/e/a/b/f/k/g0;)Ljava/util/Map;` @kind static;
  #L243b46.  v1:= temp @kind object;
  #L243b48.  if v0 != v1 then goto L243b58;
  #L243b4c.  v0:= v2.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243b50.  call `f`(v0) @signature `Le/e/a/b/f/k/g0;.f:()V` @kind virtual;
  #L243b56.  return @kind void;
  #L243b58.  v0:= new `e.e.a.b.f.k.w`;
  #L243b5c.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/k/w;.<init>:(Le/e/a/b/f/k/x;)V` @kind direct;
  #L243b62.  call `a`(v0) @signature `Le/e/a/b/f/k/h1;.a:(Ljava/util/Iterator;)V` @kind static;
  #L243b68.  return @kind void;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.k.x` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/x;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2439a0.  v0:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L2439a4.  call temp:= `b`(v0, v2) @signature `Le/e/a/b/f/k/o1;.b:(Ljava/util/Map;Ljava/lang/Object;)Z` @kind static;
  #L2439aa.  v2:= temp;
  #L2439ac.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.k.x` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/x;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2439c0.  if v1 == v2 then goto L2439da;
  #L2439c4.  v0:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L2439c8.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2439ce.  v2:= temp;
  #L2439d0.  if v2 == 0 then goto L2439d6;
  #L2439d4.  goto L2439da;
  #L2439d6.  v2:= 0I;
  #L2439d8.  return v2;
  #L2439da.  v2:= 1I;
  #L2439dc.  return v2;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.k.x` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/k/x;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L243a30.  v0:= v2.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243a34.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/k/o1;.a:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243a3a.  v0:= temp @kind object;
  #L243a3c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L243a40.  if v0 != 0 then goto L243a48;
  #L243a44.  v3:= 0I;
  #L243a46.  return v3 @kind object;
  #L243a48.  v1:= v2.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243a4c.  call temp:= `a`(v1, v3, v0) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L243a52.  v3:= temp @kind object;
  #L243a54.  return v3 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.x` v1 @kind this) @signature `Le/e/a/b/f/k/x;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2439f0.  v0:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L2439f4.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L2439fa.  v0:= temp;
  #L2439fc.  return v0;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.k.x` v1 @kind this) @signature `Le/e/a/b/f/k/x;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243adc.  v0:= v1.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243ae0.  call temp:= `c`(v0) @signature `Le/e/a/b/f/k/i0;.c:()Ljava/util/Set;` @kind virtual;
  #L243ae6.  v0:= temp @kind object;
  #L243ae8.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.k.x` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/x;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L243a68.  v0:= v3.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243a6c.  call temp:= `remove`(v0, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L243a72.  v4:= temp @kind object;
  #L243a74.  v4:= (`java.util.Collection`) v4 @kind object;
  #L243a78.  if v4 != 0 then goto L243a80;
  #L243a7c.  v4:= 0I;
  #L243a7e.  return v4 @kind object;
  #L243a80.  v0:= v3.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243a84.  call temp:= `e`(v0) @signature `Le/e/a/b/f/k/g0;.e:()Ljava/util/Collection;` @kind virtual;
  #L243a8a.  v0:= temp @kind object;
  #L243a8c.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L243a92.  v1:= v3.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243a96.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L243a9c.  v2:= temp;
  #L243a9e.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;I)I` @kind static;
  #L243aa4.  call `clear`(v4) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L243aaa.  return v0 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.x` v1 @kind this) @signature `Le/e/a/b/f/k/x;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243a10.  v0:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243a14.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L243a1a.  v0:= temp;
  #L243a1c.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.k.x` v1 @kind this) @signature `Le/e/a/b/f/k/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243abc.  v0:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243ac0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L243ac6.  v0:= temp @kind object;
  #L243ac8.  return v0 @kind object;
}
