record `e.e.a.b.f.k.g2` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.d2` @kind class {
  `e.e.a.b.f.k.f2` `e.e.a.b.f.k.g2.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.k.g2` v1 @kind this) @signature `Le/e/a/b/f/k/g2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L247be4.  call `<init>`(v1) @signature `Le/e/a/b/f/k/d2;.<init>:()V` @kind direct;
  #L247bea.  v0:= new `e.e.a.b.f.k.f2`;
  #L247bee.  call `<init>`(v0) @signature `Le/e/a/b/f/k/f2;.<init>:()V` @kind direct;
  #L247bf4.  v1.`e.e.a.b.f.k.g2.a` @type ^`e.e.a.b.f.k.f2` := v0 @kind object;
  #L247bf8.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.k.g2` v2 @kind this, `java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Le/e/a/b/f/k/g2;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L247c0c.  if v4 == v3 then goto L247c26;
  #L247c10.  v0:= v2.`e.e.a.b.f.k.g2.a` @type ^`e.e.a.b.f.k.f2` @kind object;
  #L247c14.  v1:= 1I;
  #L247c16.  call temp:= `a`(v0, v3, v1) @signature `Le/e/a/b/f/k/f2;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @kind virtual;
  #L247c1c.  v3:= temp @kind object;
  #L247c1e.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L247c24.  return @kind void;
  #L247c26.  v3:= new `java.lang.IllegalArgumentException`;
  #L247c2a.  v0:= "Self suppression is not allowed." @kind object;
  #L247c2e.  call `<init>`(v3, v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L247c34.  throw v3;
}
