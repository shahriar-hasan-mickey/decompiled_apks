record `e.e.a.b.f.k.w1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.f1` @kind class {
  `java.lang.Object` `e.e.a.b.f.k.w1.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.k.w1.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.k.w1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/w1;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L247880.  call `<init>`(v0) @signature `Le/e/a/b/f/k/f1;.<init>:()V` @kind direct;
  #L247886.  if v1 == 0 then goto L247890;
  #L24788a.  v0.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` := v1 @kind object;
  #L24788e.  return @kind void;
  #L247890.  v1:= 0I;
  #L247892.  throw v1;
}
procedure `void` `<init>`(`e.e.a.b.f.k.w1` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/k/w1;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2478a4.  call `<init>`(v0) @signature `Le/e/a/b/f/k/f1;.<init>:()V` @kind direct;
  #L2478aa.  v0.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` := v1 @kind object;
  #L2478ae.  v0.`e.e.a.b.f.k.w1.e` @type ^`int` := v2;
  #L2478b2.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.k.w1` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/k/w1;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L2477e0.  v0:= v1.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L2477e4.  v2[v3]:= v0 @kind object;
  #L2477e8.  v3:= v3 + 1;
  #L2477ec.  return v3;
}
procedure `boolean` `contains`(`e.e.a.b.f.k.w1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/w1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L247720.  v0:= v1.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L247724.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L24772a.  v2:= temp;
  #L24772c.  return v2;
}
procedure `e.e.a.b.f.k.e1` `f`(`e.e.a.b.f.k.w1` v1 @kind this) @signature `Le/e/a/b/f/k/w1;.f:()Le/e/a/b/f/k/e1;` @AccessFlag FINAL {
    temp;
    v0;

  #L247760.  v0:= v1.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L247764.  call temp:= `a`(v0) @signature `Le/e/a/b/f/k/e1;.a:(Ljava/lang/Object;)Le/e/a/b/f/k/e1;` @kind static;
  #L24776a.  v0:= temp @kind object;
  #L24776c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.w1` v1 @kind this) @signature `Le/e/a/b/f/k/w1;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2477a0.  v0:= v1.`e.e.a.b.f.k.w1.e` @type ^`int`;
  #L2477a4.  if v0 != 0 then goto L2477b8;
  #L2477a8.  v0:= v1.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L2477ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2477b2.  v0:= temp;
  #L2477b4.  v1.`e.e.a.b.f.k.w1.e` @type ^`int` := v0;
  #L2477b8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.w1` v2 @kind this) @signature `Le/e/a/b/f/k/w1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L247860.  v0:= v2.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L247864.  v1:= new `e.e.a.b.f.k.g1`;
  #L247868.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/k/g1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L24786e.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.w1` v1 @kind this) @signature `Le/e/a/b/f/k/w1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2477cc.  v0:= 1I;
  #L2477ce.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.k.w1` v3 @kind this) @signature `Le/e/a/b/f/k/w1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L247800.  v0:= v3.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L247804.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L24780a.  v0:= temp @kind object;
  #L24780c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L247812.  v1:= temp @kind object;
  #L247814.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24781a.  v1:= temp;
  #L24781c.  v2:= new `java.lang.StringBuilder`;
  #L247820.  v1:= v1 + 2;
  #L247824.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L24782a.  v1:= 91I;
  #L24782e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L247834.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24783a.  v0:= 93I;
  #L24783e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L247844.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24784a.  v0:= temp @kind object;
  #L24784c.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.k.w1` v1 @kind this) @signature `Le/e/a/b/f/k/w1;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L247740.  v0:= v1.`e.e.a.b.f.k.w1.e` @type ^`int`;
  #L247744.  if v0 == 0 then goto L24774c;
  #L247748.  v0:= 1I;
  #L24774a.  return v0;
  #L24774c.  v0:= 0I;
  #L24774e.  return v0;
}
procedure `e.e.a.b.f.k.y1` `zza`(`e.e.a.b.f.k.w1` v2 @kind this) @signature `Le/e/a/b/f/k/w1;.zza:()Le/e/a/b/f/k/y1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L247780.  v0:= v2.`e.e.a.b.f.k.w1.d` @type ^`java.lang.Object` @kind object;
  #L247784.  v1:= new `e.e.a.b.f.k.g1`;
  #L247788.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/k/g1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L24778e.  return v1 @kind object;
}
