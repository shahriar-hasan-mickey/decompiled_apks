record `e.e.a.b.f.j.d5` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v6 , `int` v7 ) @signature `Le/e/a/b/f/j/d5;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22e83c.  if v6 < 0 then goto L22e848;
  #L22e840.  if v6 < v7 then goto L22e846;
  #L22e844.  goto L22e848;
  #L22e846.  return v6;
  #L22e848.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L22e84c.  v1:= 1I;
  #L22e84e.  v2:= 0I;
  #L22e850.  v3:= 2I;
  #L22e852.  v4:= "index" @kind object;
  #L22e856.  if v6 < 0 then goto L22e8c0;
  #L22e85a.  if v7 >= 0 then goto L22e890;
  #L22e85e.  v6:= new `java.lang.IllegalArgumentException`;
  #L22e862.  v0:= 26I;
  #L22e866.  v1:= new `java.lang.StringBuilder`;
  #L22e86a.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22e870.  v0:= "negative size: " @kind object;
  #L22e874.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e87a.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e880.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e886.  v7:= temp @kind object;
  #L22e888.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e88e.  throw v6;
  #L22e890.  v5:= 3I;
  #L22e892.  v5:= new `java.lang.Object`[v5];
  #L22e896.  v5[v2]:= v4 @kind object;
  #L22e89a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e8a0.  v6:= temp @kind object;
  #L22e8a2.  v5[v1]:= v6 @kind object;
  #L22e8a6.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e8ac.  v6:= temp @kind object;
  #L22e8ae.  v5[v3]:= v6 @kind object;
  #L22e8b2.  v6:= "%s (%s) must be less than size (%s)" @kind object;
  #L22e8b6.  call temp:= `a`(v6, v5) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22e8bc.  v6:= temp @kind object;
  #L22e8be.  goto L22e8e0;
  #L22e8c0.  v7:= new `java.lang.Object`[v3];
  #L22e8c4.  v7[v2]:= v4 @kind object;
  #L22e8c8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e8ce.  v6:= temp @kind object;
  #L22e8d0.  v7[v1]:= v6 @kind object;
  #L22e8d4.  v6:= "%s (%s) must not be negative" @kind object;
  #L22e8d8.  call temp:= `a`(v6, v7) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22e8de.  v6:= temp @kind object;
  #L22e8e0.  call `<init>`(v0, v6) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e8e6.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/j/d5;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L22e92c.  if v0 == 0 then goto L22e932;
  #L22e930.  return v0 @kind object;
  #L22e932.  v0:= new `java.lang.NullPointerException`;
  #L22e936.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L22e93c.  throw v0;
}
procedure `java.lang.String` `a`(`int` v4 , `int` v5 , `java.lang.String` v6 @kind object) @signature `Le/e/a/b/f/j/d5;.a:(IILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e950.  v0:= 1I;
  #L22e952.  v1:= 0I;
  #L22e954.  v2:= 2I;
  #L22e956.  if v4 >= 0 then goto L22e97c;
  #L22e95a.  v5:= new `java.lang.Object`[v2];
  #L22e95e.  v5[v1]:= v6 @kind object;
  #L22e962.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e968.  v4:= temp @kind object;
  #L22e96a.  v5[v0]:= v4 @kind object;
  #L22e96e.  v4:= "%s (%s) must not be negative" @kind object;
  #L22e972.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22e978.  v4:= temp @kind object;
  #L22e97a.  return v4 @kind object;
  #L22e97c.  if v5 < 0 then goto L22e9b0;
  #L22e980.  v3:= 3I;
  #L22e982.  v3:= new `java.lang.Object`[v3];
  #L22e986.  v3[v1]:= v6 @kind object;
  #L22e98a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e990.  v4:= temp @kind object;
  #L22e992.  v3[v0]:= v4 @kind object;
  #L22e996.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22e99c.  v4:= temp @kind object;
  #L22e99e.  v3[v2]:= v4 @kind object;
  #L22e9a2.  v4:= "%s (%s) must not be greater than size (%s)" @kind object;
  #L22e9a6.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22e9ac.  v4:= temp @kind object;
  #L22e9ae.  return v4 @kind object;
  #L22e9b0.  v4:= new `java.lang.IllegalArgumentException`;
  #L22e9b4.  v6:= 26I;
  #L22e9b8.  v0:= new `java.lang.StringBuilder`;
  #L22e9bc.  call `<init>`(v0, v6) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L22e9c2.  v6:= "negative size: " @kind object;
  #L22e9c6.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e9cc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e9d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e9d8.  v5:= temp @kind object;
  #L22e9da.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e9e0.  throw v4;
}
procedure `void` `a`(`int` v2 , `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/j/d5;.a:(III)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2305bc.  if v2 < 0 then goto L2305cc;
  #L2305c0.  if v3 < v2 then goto L2305cc;
  #L2305c4.  if v3 <= v4 then goto L2305ca;
  #L2305c8.  goto L2305cc;
  #L2305ca.  return @kind void;
  #L2305cc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2305d0.  if v2 < 0 then goto L230620;
  #L2305d4.  if v2 > v4 then goto L230620;
  #L2305d8.  if v3 < 0 then goto L230612;
  #L2305dc.  if v3 <= v4 then goto L2305e2;
  #L2305e0.  goto L230612;
  #L2305e2.  v4:= 2I;
  #L2305e4.  v4:= new `java.lang.Object`[v4];
  #L2305e8.  v1:= 0I;
  #L2305ea.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2305f0.  v3:= temp @kind object;
  #L2305f2.  v4[v1]:= v3 @kind object;
  #L2305f6.  v3:= 1I;
  #L2305f8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2305fe.  v2:= temp @kind object;
  #L230600.  v4[v3]:= v2 @kind object;
  #L230604.  v2:= "end index (%s) must not be less than start index (%s)" @kind object;
  #L230608.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L23060e.  v2:= temp @kind object;
  #L230610.  goto L23062c;
  #L230612.  v2:= "end index" @kind object;
  #L230616.  call temp:= `a`(v3, v4, v2) @signature `Le/e/a/b/f/j/d5;.a:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L23061c.  v2:= temp @kind object;
  #L23061e.  goto L23062c;
  #L230620.  v3:= "start index" @kind object;
  #L230624.  call temp:= `a`(v2, v4, v3) @signature `Le/e/a/b/f/j/d5;.a:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L23062a.  v2:= temp @kind object;
  #L23062c.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L230632.  throw v0;
}
procedure `int` `b`(`int` v2 , `int` v3 ) @signature `Le/e/a/b/f/j/d5;.b:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L22e8f8.  if v2 < 0 then goto L22e902;
  #L22e8fc.  if v2 > v3 then goto L22e902;
  #L22e900.  return v2;
  #L22e902.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L22e906.  v1:= "index" @kind object;
  #L22e90a.  call temp:= `a`(v2, v3, v1) @signature `Le/e/a/b/f/j/d5;.a:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L22e910.  v2:= temp @kind object;
  #L22e912.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e918.  throw v0;
}
