record `e.e.a.b.f.q.f6` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.l5` @kind class {
  `java.lang.Object` `e.e.a.b.f.q.f6.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.q.f6.f` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.q.f6.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `e.e.a.b.f.q.l5` `@@e.e.a.b.f.q.f6.h` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/f6;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e4a68.  v0:= new `e.e.a.b.f.q.f6`;
  #L2e4a6c.  v1:= 0I;
  #L2e4a6e.  v2:= new `java.lang.Object`[v1];
  #L2e4a72.  v3:= 0I;
  #L2e4a74.  call `<init>`(v0, v3, v2, v1) @signature `Le/e/a/b/f/q/f6;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @kind direct;
  #L2e4a7a.  `@@e.e.a.b.f.q.f6.h` @type ^`e.e.a.b.f.q.l5` := v0 @kind object;
  #L2e4a7e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.f6` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/q/f6;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e4a90.  call `<init>`(v0) @signature `Le/e/a/b/f/q/l5;.<init>:()V` @kind direct;
  #L2e4a96.  v0.`e.e.a.b.f.q.f6.e` @type ^`java.lang.Object` := v1 @kind object;
  #L2e4a9a.  v0.`e.e.a.b.f.q.f6.f` @type ^`java.lang.Object`[] := v2 @kind object;
  #L2e4a9e.  v0.`e.e.a.b.f.q.f6.g` @type ^`int` := v3;
  #L2e4aa2.  return @kind void;
}
procedure `e.e.a.b.f.q.f6` `a`(`int` v10 , `java.lang.Object`[] v11 @kind object) @signature `Le/e/a/b/f/q/f6;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/q/f6;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2e464c.  if v10 != 0 then goto L2e465a;
  #L2e4650.  v10:= `@@e.e.a.b.f.q.f6.h` @type ^`e.e.a.b.f.q.l5` @kind object;
  #L2e4654.  v10:= (`e.e.a.b.f.q.f6`) v10 @kind object;
  #L2e4658.  return v10 @kind object;
  #L2e465a.  v0:= 0I;
  #L2e465c.  v1:= 0I;
  #L2e465e.  v2:= 1I;
  #L2e4660.  if v10 != v2 then goto L2e467e;
  #L2e4664.  v10:= v11[v1] @kind object;
  #L2e4668.  v1:= v11[v2] @kind object;
  #L2e466c.  call `a`(v10, v1) @signature `Le/e/a/b/f/q/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2e4672.  v10:= new `e.e.a.b.f.q.f6`;
  #L2e4676.  call `<init>`(v10, v0, v11, v2) @signature `Le/e/a/b/f/q/f6;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @kind direct;
  #L2e467c.  return v10 @kind object;
  #L2e467e.  v3:= length @variable v11;
  #L2e4680.  v3:= v3 ^> v2 @kind int;
  #L2e4682.  v4:= "index" @kind object;
  #L2e4686.  call temp:= `b`(v10, v3, v4) @signature `Le/e/a/b/f/q/vb;.b:(IILjava/lang/String;)I` @kind static;
  #L2e468c.  call temp:= `d`(v10) @signature `Le/e/a/b/f/q/m5;.d:(I)I` @kind static;
  #L2e4692.  v3:= temp;
  #L2e4694.  if v10 != v2 then goto L2e46ac;
  #L2e4698.  v1:= v11[v1] @kind object;
  #L2e469c.  v2:= v11[v2] @kind object;
  #L2e46a0.  call `a`(v1, v2) @signature `Le/e/a/b/f/q/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2e46a6.  v2:= v0 @kind object;
  #L2e46a8.  goto L2e480e;
  #L2e46ac.  v0:= v3 + -1;
  #L2e46b0.  v2:= 128I;
  #L2e46b4.  v4:= -1I;
  #L2e46b6.  if v3 > v2 then goto L2e472a;
  #L2e46ba.  v2:= new `byte`[v3];
  #L2e46be.  call `fill`(v2, v4) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L2e46c4.  if v1 >= v10 then goto L2e480e;
  #L2e46c8.  v3:= v1 + v1 @kind int;
  #L2e46cc.  v4:= v11[v3] @kind object;
  #L2e46d0.  v5:= v3 ^~ 1;
  #L2e46d4.  v5:= v11[v5] @kind object;
  #L2e46d8.  call `a`(v4, v5) @signature `Le/e/a/b/f/q/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2e46de.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e46e4.  v6:= temp;
  #L2e46e6.  call temp:= `a`(v6) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e46ec.  v6:= temp;
  #L2e46ee.  v6:= v6 ^& v0 @kind int;
  #L2e46f0.  v7:= v2[v6] @kind byte;
  #L2e46f4.  v8:= 255I;
  #L2e46f8.  v7:= v7 ^& v8 @kind int;
  #L2e46fa.  if v7 != v8 then goto L2e470a;
  #L2e46fe.  v3:= (`byte`) v3 @kind i2b;
  #L2e4700.  v2[v6]:= v3 @kind byte;
  #L2e4704.  v1:= v1 + 1;
  #L2e4708.  goto L2e46c4;
  #L2e470a.  v8:= v11[v7] @kind object;
  #L2e470e.  call temp:= `equals`(v8, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4714.  v8:= temp;
  #L2e4716.  if v8 != 0 then goto L2e4720;
  #L2e471a.  v6:= v6 + 1;
  #L2e471e.  goto L2e46ee;
  #L2e4720.  call temp:= `a`(v4, v5, v11, v7) @signature `Le/e/a/b/f/q/f6;.a:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;I)Ljava/lang/IllegalArgumentException;` @kind static;
  #L2e4726.  v10:= temp @kind object;
  #L2e4728.  throw v10;
  #L2e472a.  v2:= 32768I;
  #L2e4730.  if v3 > v2 then goto L2e47a6;
  #L2e4734.  v2:= new `short`[v3];
  #L2e4738.  call `fill`(v2, v4) @signature `Ljava/util/Arrays;.fill:([SS)V` @kind static;
  #L2e473e.  if v1 >= v10 then goto L2e480e;
  #L2e4742.  v3:= v1 + v1 @kind int;
  #L2e4746.  v4:= v11[v3] @kind object;
  #L2e474a.  v5:= v3 ^~ 1;
  #L2e474e.  v5:= v11[v5] @kind object;
  #L2e4752.  call `a`(v4, v5) @signature `Le/e/a/b/f/q/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2e4758.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e475e.  v6:= temp;
  #L2e4760.  call temp:= `a`(v6) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e4766.  v6:= temp;
  #L2e4768.  v6:= v6 ^& v0 @kind int;
  #L2e476a.  v7:= v2[v6] @kind short;
  #L2e476e.  v7:= (`char`) v7 @kind i2c;
  #L2e4770.  v8:= 65535I;
  #L2e4776.  if v7 != v8 then goto L2e4786;
  #L2e477a.  v3:= (`short`) v3 @kind i2s;
  #L2e477c.  v2[v6]:= v3 @kind short;
  #L2e4780.  v1:= v1 + 1;
  #L2e4784.  goto L2e473e;
  #L2e4786.  v8:= v11[v7] @kind object;
  #L2e478a.  call temp:= `equals`(v8, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4790.  v8:= temp;
  #L2e4792.  if v8 != 0 then goto L2e479c;
  #L2e4796.  v6:= v6 + 1;
  #L2e479a.  goto L2e4768;
  #L2e479c.  call temp:= `a`(v4, v5, v11, v7) @signature `Le/e/a/b/f/q/f6;.a:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;I)Ljava/lang/IllegalArgumentException;` @kind static;
  #L2e47a2.  v10:= temp @kind object;
  #L2e47a4.  throw v10;
  #L2e47a6.  v2:= new `int`[v3];
  #L2e47aa.  call `fill`(v2, v4) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L2e47b0.  if v1 >= v10 then goto L2e480e;
  #L2e47b4.  v3:= v1 + v1 @kind int;
  #L2e47b8.  v5:= v11[v3] @kind object;
  #L2e47bc.  v6:= v3 ^~ 1;
  #L2e47c0.  v6:= v11[v6] @kind object;
  #L2e47c4.  call `a`(v5, v6) @signature `Le/e/a/b/f/q/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2e47ca.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e47d0.  v7:= temp;
  #L2e47d2.  call temp:= `a`(v7) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e47d8.  v7:= temp;
  #L2e47da.  v7:= v7 ^& v0 @kind int;
  #L2e47dc.  v8:= v2[v7];
  #L2e47e0.  if v8 != v4 then goto L2e47ee;
  #L2e47e4.  v2[v7]:= v3;
  #L2e47e8.  v1:= v1 + 1;
  #L2e47ec.  goto L2e47b0;
  #L2e47ee.  v9:= v11[v8] @kind object;
  #L2e47f2.  call temp:= `equals`(v9, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e47f8.  v9:= temp;
  #L2e47fa.  if v9 != 0 then goto L2e4804;
  #L2e47fe.  v7:= v7 + 1;
  #L2e4802.  goto L2e47da;
  #L2e4804.  call temp:= `a`(v5, v6, v11, v8) @signature `Le/e/a/b/f/q/f6;.a:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;I)Ljava/lang/IllegalArgumentException;` @kind static;
  #L2e480a.  v10:= temp @kind object;
  #L2e480c.  throw v10;
  #L2e480e.  v0:= new `e.e.a.b.f.q.f6`;
  #L2e4812.  call `<init>`(v0, v2, v11, v10) @signature `Le/e/a/b/f/q/f6;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @kind direct;
  #L2e4818.  return v0 @kind object;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object`[] v8 @kind object, `int` v9 ) @signature `Le/e/a/b/f/q/f6;.a:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;I)Ljava/lang/IllegalArgumentException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e4844.  v0:= new `java.lang.IllegalArgumentException`;
  #L2e4848.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e484e.  v6:= temp @kind object;
  #L2e4850.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4856.  v7:= temp @kind object;
  #L2e4858.  v1:= v8[v9] @kind object;
  #L2e485c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4862.  v1:= temp @kind object;
  #L2e4864.  v9:= v9 ^~ 1;
  #L2e4868.  v8:= v8[v9] @kind object;
  #L2e486c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4872.  v8:= temp @kind object;
  #L2e4874.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e487a.  v9:= temp @kind object;
  #L2e487c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e4882.  v9:= temp;
  #L2e4884.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e488a.  v2:= temp @kind object;
  #L2e488c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e4892.  v2:= temp;
  #L2e4894.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e489a.  v3:= temp @kind object;
  #L2e489c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e48a2.  v3:= temp;
  #L2e48a4.  call temp:= `valueOf`(v8) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e48aa.  v4:= temp @kind object;
  #L2e48ac.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e48b2.  v4:= temp;
  #L2e48b4.  v5:= new `java.lang.StringBuilder`;
  #L2e48b8.  v9:= v9 + 39;
  #L2e48bc.  v9:= v9 + v2 @kind int;
  #L2e48be.  v9:= v9 + v3 @kind int;
  #L2e48c0.  v9:= v9 + v4 @kind int;
  #L2e48c2.  call `<init>`(v5, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2e48c8.  v9:= "Multiple entries with same key: " @kind object;
  #L2e48cc.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48d2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48d8.  v6:= "=" @kind object;
  #L2e48dc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48e2.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48e8.  v7:= " and " @kind object;
  #L2e48ec.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48f2.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48f8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e48fe.  call temp:= `append`(v5, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4904.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e490a.  v6:= temp @kind object;
  #L2e490c.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4912.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.m5` `b`(`e.e.a.b.f.q.f6` v4 @kind this) @signature `Le/e/a/b/f/q/f6;.b:()Le/e/a/b/f/q/m5;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e45f4.  v0:= new `e.e.a.b.f.q.c6`;
  #L2e45f8.  v1:= v4.`e.e.a.b.f.q.f6.f` @type ^`java.lang.Object`[] @kind object;
  #L2e45fc.  v2:= v4.`e.e.a.b.f.q.f6.g` @type ^`int`;
  #L2e4600.  v3:= 0I;
  #L2e4602.  call `<init>`(v0, v4, v1, v3, v2) @signature `Le/e/a/b/f/q/c6;.<init>:(Le/e/a/b/f/q/l5;[Ljava/lang/Object;II)V` @kind direct;
  #L2e4608.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.m5` `c`(`e.e.a.b.f.q.f6` v4 @kind this) @signature `Le/e/a/b/f/q/f6;.c:()Le/e/a/b/f/q/m5;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e461c.  v0:= new `e.e.a.b.f.q.e6`;
  #L2e4620.  v1:= v4.`e.e.a.b.f.q.f6.f` @type ^`java.lang.Object`[] @kind object;
  #L2e4624.  v2:= v4.`e.e.a.b.f.q.f6.g` @type ^`int`;
  #L2e4628.  v3:= 0I;
  #L2e462a.  call `<init>`(v0, v1, v3, v2) @signature `Le/e/a/b/f/q/e6;.<init>:([Ljava/lang/Object;II)V` @kind direct;
  #L2e4630.  v1:= new `e.e.a.b.f.q.d6`;
  #L2e4634.  call `<init>`(v1, v4, v0) @signature `Le/e/a/b/f/q/d6;.<init>:(Le/e/a/b/f/q/l5;Le/e/a/b/f/q/j5;)V` @kind direct;
  #L2e463a.  return v1 @kind object;
}
procedure `e.e.a.b.f.q.e5` `e`(`e.e.a.b.f.q.f6` v4 @kind this) @signature `Le/e/a/b/f/q/f6;.e:()Le/e/a/b/f/q/e5;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e45cc.  v0:= new `e.e.a.b.f.q.e6`;
  #L2e45d0.  v1:= v4.`e.e.a.b.f.q.f6.f` @type ^`java.lang.Object`[] @kind object;
  #L2e45d4.  v2:= v4.`e.e.a.b.f.q.f6.g` @type ^`int`;
  #L2e45d8.  v3:= 1I;
  #L2e45da.  call `<init>`(v0, v1, v3, v2) @signature `Le/e/a/b/f/q/e6;.<init>:([Ljava/lang/Object;II)V` @kind direct;
  #L2e45e0.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.q.f6` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Le/e/a/b/f/q/f6;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e4924.  v0:= v9.`e.e.a.b.f.q.f6.e` @type ^`java.lang.Object` @kind object;
  #L2e4928.  v1:= v9.`e.e.a.b.f.q.f6.f` @type ^`java.lang.Object`[] @kind object;
  #L2e492c.  v2:= v9.`e.e.a.b.f.q.f6.g` @type ^`int`;
  #L2e4930.  v3:= 0I;
  #L2e4932.  if v10 != 0 then goto L2e493a;
  #L2e4936.  goto L2e4a50;
  #L2e493a.  v4:= 1I;
  #L2e493c.  if v2 != v4 then goto L2e495c;
  #L2e4940.  v0:= 0I;
  #L2e4942.  v0:= v1[v0] @kind object;
  #L2e4946.  call temp:= `equals`(v0, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e494c.  v10:= temp;
  #L2e494e.  if v10 != 0 then goto L2e4956;
  #L2e4952.  goto L2e4a50;
  #L2e4956.  v10:= v1[v4] @kind object;
  #L2e495a.  return v10 @kind object;
  #L2e495c.  if v0 != 0 then goto L2e4964;
  #L2e4960.  goto L2e4a50;
  #L2e4964.  v2:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L2e4968.  v5:= -1I;
  #L2e496a.  if v2 == 0 then goto L2e49bc;
  #L2e496e.  v2:= v0 @kind object;
  #L2e4970.  v2:= (`byte`[]) v2 @kind object;
  #L2e4974.  v0:= length @variable v2;
  #L2e4976.  v6:= v0 + -1;
  #L2e497a.  call temp:= `hashCode`(v10) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e4980.  v0:= temp;
  #L2e4982.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e4988.  v0:= temp;
  #L2e498a.  v0:= v0 ^& v6 @kind int;
  #L2e498c.  v5:= v2[v0] @kind byte;
  #L2e4990.  v7:= 255I;
  #L2e4994.  v5:= v5 ^& v7 @kind int;
  #L2e4996.  if v5 != v7 then goto L2e499c;
  #L2e499a.  goto L2e4a50;
  #L2e499c.  v7:= v1[v5] @kind object;
  #L2e49a0.  call temp:= `equals`(v7, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e49a6.  v7:= temp;
  #L2e49a8.  if v7 == 0 then goto L2e49b6;
  #L2e49ac.  v10:= v5 ^~ 1;
  #L2e49b0.  v3:= v1[v10] @kind object;
  #L2e49b4.  goto L2e4a50;
  #L2e49b6.  v0:= v0 + 1;
  #L2e49ba.  goto L2e498a;
  #L2e49bc.  v2:= instanceof @variable v0 @type ^`short`[] @kind boolean;
  #L2e49c0.  if v2 == 0 then goto L2e4a14;
  #L2e49c4.  v2:= v0 @kind object;
  #L2e49c6.  v2:= (`short`[]) v2 @kind object;
  #L2e49ca.  v0:= length @variable v2;
  #L2e49cc.  v6:= v0 + -1;
  #L2e49d0.  call temp:= `hashCode`(v10) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e49d6.  v0:= temp;
  #L2e49d8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e49de.  v0:= temp;
  #L2e49e0.  v0:= v0 ^& v6 @kind int;
  #L2e49e2.  v5:= v2[v0] @kind short;
  #L2e49e6.  v5:= (`char`) v5 @kind i2c;
  #L2e49e8.  v7:= 65535I;
  #L2e49ee.  if v5 != v7 then goto L2e49f4;
  #L2e49f2.  goto L2e4a50;
  #L2e49f4.  v7:= v1[v5] @kind object;
  #L2e49f8.  call temp:= `equals`(v7, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e49fe.  v7:= temp;
  #L2e4a00.  if v7 == 0 then goto L2e4a0e;
  #L2e4a04.  v10:= v5 ^~ 1;
  #L2e4a08.  v3:= v1[v10] @kind object;
  #L2e4a0c.  goto L2e4a50;
  #L2e4a0e.  v0:= v0 + 1;
  #L2e4a12.  goto L2e49e0;
  #L2e4a14.  v0:= (`int`[]) v0 @kind object;
  #L2e4a18.  v2:= length @variable v0;
  #L2e4a1a.  v2:= v2 + v5 @kind int;
  #L2e4a1c.  call temp:= `hashCode`(v10) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e4a22.  v6:= temp;
  #L2e4a24.  call temp:= `a`(v6) @signature `Le/e/a/b/f/q/b5;.a:(I)I` @kind static;
  #L2e4a2a.  v6:= temp;
  #L2e4a2c.  v6:= v6 ^& v2 @kind int;
  #L2e4a2e.  v7:= v0[v6];
  #L2e4a32.  if v7 != v5 then goto L2e4a38;
  #L2e4a36.  goto L2e4a50;
  #L2e4a38.  v8:= v1[v7] @kind object;
  #L2e4a3c.  call temp:= `equals`(v8, v10) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4a42.  v8:= temp;
  #L2e4a44.  if v8 == 0 then goto L2e4a52;
  #L2e4a48.  v10:= v7 ^~ 1;
  #L2e4a4c.  v3:= v1[v10] @kind object;
  #L2e4a50.  return v3 @kind object;
  #L2e4a52.  v6:= v6 + 1;
  #L2e4a56.  goto L2e4a2c;
}
procedure `int` `size`(`e.e.a.b.f.q.f6` v1 @kind this) @signature `Le/e/a/b/f/q/f6;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e482c.  v0:= v1.`e.e.a.b.f.q.f6.g` @type ^`int`;
  #L2e4830.  return v0;
}
