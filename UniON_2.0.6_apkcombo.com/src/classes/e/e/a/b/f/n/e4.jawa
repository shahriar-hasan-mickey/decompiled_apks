record `e.e.a.b.f.n.e4` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.n.e4.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.n.e4.c` @AccessFlag PRIVATE;
  `java.util.Iterator` `e.e.a.b.f.n.e4.d` @AccessFlag PRIVATE;
  `e.e.a.b.f.n.h4` `e.e.a.b.f.n.e4.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.e4` v0 @kind this, `e.e.a.b.f.n.h4` v1 @kind object, `e.e.a.b.f.n.z3` v2 @kind object) @signature `Le/e/a/b/f/n/e4;.<init>:(Le/e/a/b/f/n/h4;Le/e/a/b/f/n/z3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28a794.  v0.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` := v1 @kind object;
  #L28a798.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28a79e.  v1:= -1I;
  #L28a7a0.  v0.`e.e.a.b.f.n.e4.b` @type ^`int` := v1;
  #L28a7a4.  return @kind void;
}
procedure `java.util.Iterator` `zza`(`e.e.a.b.f.n.e4` v1 @kind this) @signature `Le/e/a/b/f/n/e4;.zza:()Ljava/util/Iterator;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L28a754.  v0:= v1.`e.e.a.b.f.n.e4.d` @type ^`java.util.Iterator` @kind object;
  #L28a758.  if v0 != 0 then goto L28a77c;
  #L28a75c.  v0:= v1.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a760.  call temp:= `c`(v0) @signature `Le/e/a/b/f/n/h4;.c:(Le/e/a/b/f/n/h4;)Ljava/util/Map;` @kind static;
  #L28a766.  v0:= temp @kind object;
  #L28a768.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L28a76e.  v0:= temp @kind object;
  #L28a770.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28a776.  v0:= temp @kind object;
  #L28a778.  v1.`e.e.a.b.f.n.e4.d` @type ^`java.util.Iterator` := v0 @kind object;
  #L28a77c.  v0:= v1.`e.e.a.b.f.n.e4.d` @type ^`java.util.Iterator` @kind object;
  #L28a780.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.n.e4` v4 @kind this) @signature `Le/e/a/b/f/n/e4;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28a684.  v0:= v4.`e.e.a.b.f.n.e4.b` @type ^`int`;
  #L28a688.  v1:= 1I;
  #L28a68a.  v0:= v0 + v1 @kind int;
  #L28a68c.  v2:= v4.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a690.  call temp:= `b`(v2) @signature `Le/e/a/b/f/n/h4;.b:(Le/e/a/b/f/n/h4;)Ljava/util/List;` @kind static;
  #L28a696.  v2:= temp @kind object;
  #L28a698.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28a69e.  v2:= temp;
  #L28a6a0.  v3:= 0I;
  #L28a6a2.  if v0 < v2 then goto L28a6d8;
  #L28a6a6.  v0:= v4.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a6aa.  call temp:= `c`(v0) @signature `Le/e/a/b/f/n/h4;.c:(Le/e/a/b/f/n/h4;)Ljava/util/Map;` @kind static;
  #L28a6b0.  v0:= temp @kind object;
  #L28a6b2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28a6b8.  v0:= temp;
  #L28a6ba.  if v0 != 0 then goto L28a6d6;
  #L28a6be.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/n/e4;.zza:()Ljava/util/Iterator;` @kind direct;
  #L28a6c4.  v0:= temp @kind object;
  #L28a6c6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28a6cc.  v0:= temp;
  #L28a6ce.  if v0 == 0 then goto L28a6d4;
  #L28a6d2.  goto L28a6d8;
  #L28a6d4.  return v3;
  #L28a6d6.  v1:= 0I;
  #L28a6d8.  return v1;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.n.e4` v2 @kind this) @signature `Le/e/a/b/f/n/e4;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28a6ec.  v0:= 1I;
  #L28a6ee.  v2.`e.e.a.b.f.n.e4.c` @type ^`boolean` := v0 @kind boolean;
  #L28a6f2.  v1:= v2.`e.e.a.b.f.n.e4.b` @type ^`int`;
  #L28a6f6.  v1:= v1 + v0 @kind int;
  #L28a6f8.  v2.`e.e.a.b.f.n.e4.b` @type ^`int` := v1;
  #L28a6fc.  v0:= v2.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a700.  call temp:= `b`(v0) @signature `Le/e/a/b/f/n/h4;.b:(Le/e/a/b/f/n/h4;)Ljava/util/List;` @kind static;
  #L28a706.  v0:= temp @kind object;
  #L28a708.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28a70e.  v0:= temp;
  #L28a710.  if v1 >= v0 then goto L28a72e;
  #L28a714.  v0:= v2.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a718.  call temp:= `b`(v0) @signature `Le/e/a/b/f/n/h4;.b:(Le/e/a/b/f/n/h4;)Ljava/util/List;` @kind static;
  #L28a71e.  v0:= temp @kind object;
  #L28a720.  v1:= v2.`e.e.a.b.f.n.e4.b` @type ^`int`;
  #L28a724.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28a72a.  v0:= temp @kind object;
  #L28a72c.  goto L28a73e;
  #L28a72e.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/n/e4;.zza:()Ljava/util/Iterator;` @kind direct;
  #L28a734.  v0:= temp @kind object;
  #L28a736.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28a73c.  v0:= temp @kind object;
  #L28a73e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L28a742.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.n.e4` v3 @kind this) @signature `Le/e/a/b/f/n/e4;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L28a7b8.  v0:= v3.`e.e.a.b.f.n.e4.c` @type ^`boolean` @kind boolean;
  #L28a7bc.  if v0 == 0 then goto L28a814;
  #L28a7c0.  v0:= 0I;
  #L28a7c2.  v3.`e.e.a.b.f.n.e4.c` @type ^`boolean` := v0 @kind boolean;
  #L28a7c6.  v0:= v3.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a7ca.  call `a`(v0) @signature `Le/e/a/b/f/n/h4;.a:(Le/e/a/b/f/n/h4;)V` @kind static;
  #L28a7d0.  v0:= v3.`e.e.a.b.f.n.e4.b` @type ^`int`;
  #L28a7d4.  v1:= v3.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a7d8.  call temp:= `b`(v1) @signature `Le/e/a/b/f/n/h4;.b:(Le/e/a/b/f/n/h4;)Ljava/util/List;` @kind static;
  #L28a7de.  v1:= temp @kind object;
  #L28a7e0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28a7e6.  v1:= temp;
  #L28a7e8.  if v0 >= v1 then goto L28a804;
  #L28a7ec.  v0:= v3.`e.e.a.b.f.n.e4.e` @type ^`e.e.a.b.f.n.h4` @kind object;
  #L28a7f0.  v1:= v3.`e.e.a.b.f.n.e4.b` @type ^`int`;
  #L28a7f4.  v2:= v1 + -1;
  #L28a7f8.  v3.`e.e.a.b.f.n.e4.b` @type ^`int` := v2;
  #L28a7fc.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/n/h4;.a:(Le/e/a/b/f/n/h4;I)Ljava/lang/Object;` @kind static;
  #L28a802.  return @kind void;
  #L28a804.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/n/e4;.zza:()Ljava/util/Iterator;` @kind direct;
  #L28a80a.  v0:= temp @kind object;
  #L28a80c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L28a812.  return @kind void;
  #L28a814.  v0:= new `java.lang.IllegalStateException`;
  #L28a818.  v1:= "remove() was called before next()" @kind object;
  #L28a81c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28a822.  throw v0;
}
