record `e.e.a.b.f.n.t` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.n.g3` @kind interface {
  `int` `e.e.a.b.f.n.t.zza` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`e.e.a.b.f.n.t` v1 @kind this) @signature `Le/e/a/b/f/n/t;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L277dec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L277df2.  v0:= 0I;
  #L277df4.  v1.`e.e.a.b.f.n.t.zza` @type ^`int` := v0;
  #L277df8.  return @kind void;
}
procedure `void` `a`(`java.lang.Iterable` v6 @kind object, `java.util.List` v7 @kind object) @signature `Le/e/a/b/f/n/t;.a:(Ljava/lang/Iterable;Ljava/util/List;)V` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L277e20.  call temp:= `a`(v6) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L277e26.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.n.o2` @kind boolean;
  #L277e2a.  v1:= " is null." @kind object;
  #L277e2e.  v2:= "Element at index " @kind object;
  #L277e32.  v3:= 37I;
  #L277e36.  if v0 == 0 then goto L277ee6;
  #L277e3a.  v6:= (`e.e.a.b.f.n.o2`) v6 @kind object;
  #L277e3e.  call temp:= `v`(v6) @signature `Le/e/a/b/f/n/o2;.v:()Ljava/util/List;` @kind interface;
  #L277e44.  v6:= temp @kind object;
  #L277e46.  v0:= v7 @kind object;
  #L277e48.  v0:= (`e.e.a.b.f.n.o2`) v0 @kind object;
  #L277e4c.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277e52.  v7:= temp;
  #L277e54.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L277e5a.  v6:= temp @kind object;
  #L277e5c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L277e62.  v4:= temp;
  #L277e64.  if v4 == 0 then goto L277f9e;
  #L277e68.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L277e6e.  v4:= temp @kind object;
  #L277e70.  if v4 != 0 then goto L277ec6;
  #L277e74.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277e7a.  v6:= temp;
  #L277e7c.  v4:= new `java.lang.StringBuilder`;
  #L277e80.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L277e86.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277e8c.  v6:= v6 - v7 @kind int;
  #L277e8e.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L277e94.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277e9a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L277ea0.  v6:= temp @kind object;
  #L277ea2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277ea8.  v1:= temp;
  #L277eaa.  v1:= v1 + -1;
  #L277eae.  if v1 < v7 then goto L277eba;
  #L277eb2.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L277eb8.  goto L277eaa;
  #L277eba.  v7:= new `java.lang.NullPointerException`;
  #L277ebe.  call `<init>`(v7, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L277ec4.  throw v7;
  #L277ec6.  v5:= instanceof @variable v4 @type ^`e.e.a.b.f.n.q0` @kind boolean;
  #L277eca.  if v5 == 0 then goto L277eda;
  #L277ece.  v4:= (`e.e.a.b.f.n.q0`) v4 @kind object;
  #L277ed2.  call `a`(v0, v4) @signature `Le/e/a/b/f/n/o2;.a:(Le/e/a/b/f/n/q0;)V` @kind interface;
  #L277ed8.  goto L277e5c;
  #L277eda.  v4:= (`java.lang.String`) v4 @kind object;
  #L277ede.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L277ee4.  goto L277e5c;
  #L277ee6.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.n.o3` @kind boolean;
  #L277eea.  if v0 != 0 then goto L277fa0;
  #L277eee.  v0:= instanceof @variable v7 @type ^`java.util.ArrayList` @kind boolean;
  #L277ef2.  if v0 == 0 then goto L277f1c;
  #L277ef6.  v0:= instanceof @variable v6 @type ^`java.util.Collection` @kind boolean;
  #L277efa.  if v0 == 0 then goto L277f1c;
  #L277efe.  v0:= v7 @kind object;
  #L277f00.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L277f04.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277f0a.  v4:= temp;
  #L277f0c.  call temp:= `size`(v6) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L277f12.  v5:= temp;
  #L277f14.  v4:= v4 + v5 @kind int;
  #L277f16.  call `ensureCapacity`(v0, v4) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L277f1c.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277f22.  v0:= temp;
  #L277f24.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L277f2a.  v6:= temp @kind object;
  #L277f2c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L277f32.  v4:= temp;
  #L277f34.  if v4 == 0 then goto L277f9e;
  #L277f38.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L277f3e.  v4:= temp @kind object;
  #L277f40.  if v4 != 0 then goto L277f96;
  #L277f44.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277f4a.  v6:= temp;
  #L277f4c.  v4:= new `java.lang.StringBuilder`;
  #L277f50.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L277f56.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277f5c.  v6:= v6 - v0 @kind int;
  #L277f5e.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L277f64.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277f6a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L277f70.  v6:= temp @kind object;
  #L277f72.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L277f78.  v1:= temp;
  #L277f7a.  v1:= v1 + -1;
  #L277f7e.  if v1 < v0 then goto L277f8a;
  #L277f82.  call temp:= `remove`(v7, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L277f88.  goto L277f7a;
  #L277f8a.  v7:= new `java.lang.NullPointerException`;
  #L277f8e.  call `<init>`(v7, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L277f94.  throw v7;
  #L277f96.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L277f9c.  goto L277f2c;
  #L277f9e.  return @kind void;
  #L277fa0.  call temp:= `addAll`(v7, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L277fa6.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.t` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/t;.a:(I)V` @AccessFlag  {
    temp;

  #L277e0c.  v1:= 0I;
  #L277e0e.  throw v1;
}
procedure `byte`[] `a`(`e.e.a.b.f.n.t` v5 @kind this) @signature `Le/e/a/b/f/n/t;.a:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L277c68.  call temp:= `m`(v5) @signature `Le/e/a/b/f/n/g3;.m:()I` @kind interface;
  #L277c6e.  v0:= temp;
  #L277c70.  v0:= new `byte`[v0];
  #L277c74.  call temp:= `b`(v0) @signature `Le/e/a/b/f/n/x0;.b:([B)Le/e/a/b/f/n/x0;` @kind static;
  #L277c7a.  v1:= temp @kind object;
  #L277c7c.  call `a`(v5, v1) @signature `Le/e/a/b/f/n/g3;.a:(Le/e/a/b/f/n/x0;)V` @kind interface;
  #L277c82.  call `a`(v1) @signature `Le/e/a/b/f/n/x0;.a:()V` @kind virtual;
  #L277c88.  return v0 @kind object;
  #L277c8a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L277c8c.  v1:= new `java.lang.RuntimeException`;
  #L277c90.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L277c96.  v2:= temp @kind object;
  #L277c98.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L277c9e.  v2:= temp @kind object;
  #L277ca0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L277ca6.  v3:= temp @kind object;
  #L277ca8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L277cae.  v3:= temp;
  #L277cb0.  v4:= new `java.lang.StringBuilder`;
  #L277cb4.  v3:= v3 + 72;
  #L277cb8.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L277cbe.  v3:= "Serializing " @kind object;
  #L277cc2.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277cc8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277cce.  v2:= " to a " @kind object;
  #L277cd2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277cd8.  v2:= "byte array" @kind object;
  #L277cdc.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277ce2.  v2:= " threw an IOException (should never happen)." @kind object;
  #L277ce6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277cec.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L277cf2.  v2:= temp @kind object;
  #L277cf4.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L277cfa.  throw v1;
  catch `java.io.IOException` @[L277c68..L277c88] goto L277c8a;
}
procedure `int` `b`(`e.e.a.b.f.n.t` v1 @kind this) @signature `Le/e/a/b/f/n/t;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L277dd8.  v0:= 0I;
  #L277dda.  throw v0;
}
procedure `e.e.a.b.f.n.q0` `i`(`e.e.a.b.f.n.t` v5 @kind this) @signature `Le/e/a/b/f/n/t;.i:()Le/e/a/b/f/n/q0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L277d1c.  call temp:= `m`(v5) @signature `Le/e/a/b/f/n/g3;.m:()I` @kind interface;
  #L277d22.  v0:= temp;
  #L277d24.  call temp:= `h`(v0) @signature `Le/e/a/b/f/n/q0;.h:(I)Le/e/a/b/f/n/m0;` @kind static;
  #L277d2a.  v0:= temp @kind object;
  #L277d2c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/n/m0;.b:()Le/e/a/b/f/n/x0;` @kind virtual;
  #L277d32.  v1:= temp @kind object;
  #L277d34.  call `a`(v5, v1) @signature `Le/e/a/b/f/n/g3;.a:(Le/e/a/b/f/n/x0;)V` @kind interface;
  #L277d3a.  call temp:= `a`(v0) @signature `Le/e/a/b/f/n/m0;.a:()Le/e/a/b/f/n/q0;` @kind virtual;
  #L277d40.  v0:= temp @kind object;
  #L277d42.  return v0 @kind object;
  #L277d44.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L277d46.  v1:= new `java.lang.RuntimeException`;
  #L277d4a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L277d50.  v2:= temp @kind object;
  #L277d52.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L277d58.  v2:= temp @kind object;
  #L277d5a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L277d60.  v3:= temp @kind object;
  #L277d62.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L277d68.  v3:= temp;
  #L277d6a.  v4:= new `java.lang.StringBuilder`;
  #L277d6e.  v3:= v3 + 72;
  #L277d72.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L277d78.  v3:= "Serializing " @kind object;
  #L277d7c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277d82.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277d88.  v2:= " to a " @kind object;
  #L277d8c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277d92.  v2:= "ByteString" @kind object;
  #L277d96.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277d9c.  v2:= " threw an IOException (should never happen)." @kind object;
  #L277da0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L277da6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L277dac.  v2:= temp @kind object;
  #L277dae.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L277db4.  throw v1;
  catch `java.io.IOException` @[L277d1c..L277d42] goto L277d44;
}
