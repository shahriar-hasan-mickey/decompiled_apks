record `e.e.a.b.f.n.m20` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.m20.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.m20` `@@e.e.a.b.f.n.m20.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.m20` `@@e.e.a.b.f.n.m20.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.m20` `@@e.e.a.b.f.n.m20.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.m20`[] `@@e.e.a.b.f.n.m20.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/m20;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b6c28.  v0:= new `e.e.a.b.f.n.m20`;
  #L2b6c2c.  v1:= 0I;
  #L2b6c2e.  v2:= "MODE_UNSPECIFIED" @kind object;
  #L2b6c32.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/m20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b6c38.  `@@e.e.a.b.f.n.m20.c` @type ^`e.e.a.b.f.n.m20` := v0 @kind object;
  #L2b6c3c.  v0:= new `e.e.a.b.f.n.m20`;
  #L2b6c40.  v2:= 1I;
  #L2b6c42.  v3:= "STREAM" @kind object;
  #L2b6c46.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/m20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b6c4c.  `@@e.e.a.b.f.n.m20.d` @type ^`e.e.a.b.f.n.m20` := v0 @kind object;
  #L2b6c50.  v0:= new `e.e.a.b.f.n.m20`;
  #L2b6c54.  v3:= 2I;
  #L2b6c56.  v4:= "SINGLE_IMAGE" @kind object;
  #L2b6c5a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/m20;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b6c60.  `@@e.e.a.b.f.n.m20.e` @type ^`e.e.a.b.f.n.m20` := v0 @kind object;
  #L2b6c64.  v0:= 3I;
  #L2b6c66.  v0:= new `e.e.a.b.f.n.m20`[v0];
  #L2b6c6a.  v4:= `@@e.e.a.b.f.n.m20.c` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6c6e.  v0[v1]:= v4 @kind object;
  #L2b6c72.  v1:= `@@e.e.a.b.f.n.m20.d` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6c76.  v0[v2]:= v1 @kind object;
  #L2b6c7a.  v1:= `@@e.e.a.b.f.n.m20.e` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6c7e.  v0[v3]:= v1 @kind object;
  #L2b6c82.  `@@e.e.a.b.f.n.m20.f` @type ^`e.e.a.b.f.n.m20`[] := v0 @kind object;
  #L2b6c86.  v0:= new `e.e.a.b.f.n.k20`;
  #L2b6c8a.  call `<init>`(v0) @signature `Le/e/a/b/f/n/k20;.<init>:()V` @kind direct;
  #L2b6c90.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.m20` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/m20;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b6ca4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b6caa.  v0.`e.e.a.b.f.n.m20.b` @type ^`int` := v3;
  #L2b6cae.  return @kind void;
}
procedure `e.e.a.b.f.n.m20` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/m20;.a:(I)Le/e/a/b/f/n/m20;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6b24.  if v1 == 0 then goto L2b6b44;
  #L2b6b28.  v0:= 1I;
  #L2b6b2a.  if v1 == v0 then goto L2b6b3e;
  #L2b6b2e.  v0:= 2I;
  #L2b6b30.  if v1 == v0 then goto L2b6b38;
  #L2b6b34.  v1:= 0I;
  #L2b6b36.  return v1 @kind object;
  #L2b6b38.  v1:= `@@e.e.a.b.f.n.m20.e` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6b3c.  return v1 @kind object;
  #L2b6b3e.  v1:= `@@e.e.a.b.f.n.m20.d` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6b42.  return v1 @kind object;
  #L2b6b44.  v1:= `@@e.e.a.b.f.n.m20.c` @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6b48.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/m20;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6b0c.  v0:= `@@e.e.a.b.f.n.l20.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b6b10.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.m20`[] `values`() @signature `Le/e/a/b/f/n/m20;.values:()[Le/e/a/b/f/n/m20;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6b5c.  v0:= `@@e.e.a.b.f.n.m20.f` @type ^`e.e.a.b.f.n.m20`[] @kind object;
  #L2b6b60.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/m20;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b6b66.  v0:= temp @kind object;
  #L2b6b68.  v0:= (`e.e.a.b.f.n.m20`[]) v0 @kind object;
  #L2b6b6c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.m20` v2 @kind this) @signature `Le/e/a/b/f/n/m20;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b6b98.  v0:= new `java.lang.StringBuilder`;
  #L2b6b9c.  v1:= "<" @kind object;
  #L2b6ba0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6ba6.  v1:= constclass @type ^`e.e.a.b.f.n.m20` @kind object;
  #L2b6baa.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b6bb0.  v1:= temp @kind object;
  #L2b6bb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6bb8.  v1:= 64I;
  #L2b6bbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6bc2.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b6bc8.  v1:= temp;
  #L2b6bca.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b6bd0.  v1:= temp @kind object;
  #L2b6bd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6bd8.  v1:= " number=" @kind object;
  #L2b6bdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6be2.  v1:= v2.`e.e.a.b.f.n.m20.b` @type ^`int`;
  #L2b6be6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6bec.  v1:= " name=" @kind object;
  #L2b6bf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6bf6.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b6bfc.  v1:= temp @kind object;
  #L2b6bfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6c04.  v1:= 62I;
  #L2b6c08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6c0e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b6c14.  v0:= temp @kind object;
  #L2b6c16.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.m20` v1 @kind this) @signature `Le/e/a/b/f/n/m20;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b6b80.  v0:= v1.`e.e.a.b.f.n.m20.b` @type ^`int`;
  #L2b6b84.  return v0;
}
