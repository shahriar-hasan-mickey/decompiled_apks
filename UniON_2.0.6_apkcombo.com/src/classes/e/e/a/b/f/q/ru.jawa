record `e.e.a.b.f.q.ru` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.q.a1` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.q.ru` v0 @kind this) @signature `Le/e/a/b/f/q/ru;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L309a34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L309a3a.  return @kind void;
}
procedure `e.e.a.b.f.q.a1` `a`(`e.e.a.b.f.q.ru` v1 @kind this, `e.e.a.b.f.q.b1` v2 @kind object) @signature `Le/e/a/b/f/q/ru;.a:(Le/e/a/b/f/q/b1;)Le/e/a/b/f/q/a1;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L3099ec.  call temp:= `h`(v1) @signature `Le/e/a/b/f/q/d1;.h:()Le/e/a/b/f/q/b1;` @kind interface;
  #L3099f2.  v0:= temp @kind object;
  #L3099f4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3099fa.  v0:= temp @kind object;
  #L3099fc.  call temp:= `isInstance`(v0, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L309a02.  v0:= temp;
  #L309a04.  if v0 == 0 then goto L309a14;
  #L309a08.  v2:= (`e.e.a.b.f.q.su`) v2 @kind object;
  #L309a0c.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/q/ru;.a:(Le/e/a/b/f/q/su;)Le/e/a/b/f/q/ru;` @kind virtual;
  #L309a12.  return v1 @kind object;
  #L309a14.  v2:= new `java.lang.IllegalArgumentException`;
  #L309a18.  v0:= "mergeFrom(MessageLite) can only merge messages of the same type." @kind object;
  #L309a1c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309a22.  throw v2;
}
procedure `e.e.a.b.f.q.ru` `a`(`e.e.a.b.f.q.su` v0 @kind object) @signature `Le/e/a/b/f/q/ru;.a:(Le/e/a/b/f/q/su;)Le/e/a/b/f/q/ru;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
