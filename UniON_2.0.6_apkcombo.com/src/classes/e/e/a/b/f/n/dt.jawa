record `e.e.a.b.f.n.dt` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.dt.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/dt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa4d8.  v0:= new `e.e.a.b.f.n.dt`;
  #L2aa4dc.  call `<init>`(v0) @signature `Le/e/a/b/f/n/dt;.<init>:()V` @kind direct;
  #L2aa4e2.  `@@e.e.a.b.f.n.dt.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2aa4e6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.dt` v0 @kind this) @signature `Le/e/a/b/f/n/dt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2aa4f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aa4fe.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.dt` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/dt;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2aa4b4.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/et;.a:(I)Le/e/a/b/f/n/et;` @kind static;
  #L2aa4ba.  v1:= temp @kind object;
  #L2aa4bc.  if v1 == 0 then goto L2aa4c4;
  #L2aa4c0.  v1:= 1I;
  #L2aa4c2.  return v1;
  #L2aa4c4.  v1:= 0I;
  #L2aa4c6.  return v1;
}
