record `e.e.a.b.f.n.f50` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
}
global `e.e.a.b.f.n.f50` `@@e.e.a.b.f.n.f50.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.f50`[] `@@e.e.a.b.f.n.f50.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/f50;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ba4f8.  v0:= new `e.e.a.b.f.n.f50`;
  #L2ba4fc.  v1:= 0I;
  #L2ba4fe.  v2:= "DETECTOR_UNDEFINED" @kind object;
  #L2ba502.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/f50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba508.  `@@e.e.a.b.f.n.f50.b` @type ^`e.e.a.b.f.n.f50` := v0 @kind object;
  #L2ba50c.  v0:= 1I;
  #L2ba50e.  v0:= new `e.e.a.b.f.n.f50`[v0];
  #L2ba512.  v2:= `@@e.e.a.b.f.n.f50.b` @type ^`e.e.a.b.f.n.f50` @kind object;
  #L2ba516.  v0[v1]:= v2 @kind object;
  #L2ba51a.  `@@e.e.a.b.f.n.f50.c` @type ^`e.e.a.b.f.n.f50`[] := v0 @kind object;
  #L2ba51e.  v0:= new `e.e.a.b.f.n.d50`;
  #L2ba522.  call `<init>`(v0) @signature `Le/e/a/b/f/n/d50;.<init>:()V` @kind direct;
  #L2ba528.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.f50` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/f50;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ba53c.  v1:= "DETECTOR_UNDEFINED" @kind object;
  #L2ba540.  v2:= 0I;
  #L2ba542.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ba548.  return @kind void;
}
procedure `e.e.a.b.f.n.f50` `a`(`int` v0 ) @signature `Le/e/a/b/f/n/f50;.a:(I)Le/e/a/b/f/n/f50;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ba410.  if v0 == 0 then goto L2ba418;
  #L2ba414.  v0:= 0I;
  #L2ba416.  return v0 @kind object;
  #L2ba418.  v0:= `@@e.e.a.b.f.n.f50.b` @type ^`e.e.a.b.f.n.f50` @kind object;
  #L2ba41c.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/f50;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ba3f8.  v0:= `@@e.e.a.b.f.n.e50.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2ba3fc.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.f50`[] `values`() @signature `Le/e/a/b/f/n/f50;.values:()[Le/e/a/b/f/n/f50;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ba430.  v0:= `@@e.e.a.b.f.n.f50.c` @type ^`e.e.a.b.f.n.f50`[] @kind object;
  #L2ba434.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/f50;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ba43a.  v0:= temp @kind object;
  #L2ba43c.  v0:= (`e.e.a.b.f.n.f50`[]) v0 @kind object;
  #L2ba440.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.f50` v2 @kind this) @signature `Le/e/a/b/f/n/f50;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ba468.  v0:= new `java.lang.StringBuilder`;
  #L2ba46c.  v1:= "<" @kind object;
  #L2ba470.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba476.  v1:= constclass @type ^`e.e.a.b.f.n.f50` @kind object;
  #L2ba47a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ba480.  v1:= temp @kind object;
  #L2ba482.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba488.  v1:= 64I;
  #L2ba48c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba492.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ba498.  v1:= temp;
  #L2ba49a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2ba4a0.  v1:= temp @kind object;
  #L2ba4a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4a8.  v1:= " number=" @kind object;
  #L2ba4ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4b2.  v1:= 0I;
  #L2ba4b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4ba.  v1:= " name=" @kind object;
  #L2ba4be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4c4.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2ba4ca.  v1:= temp @kind object;
  #L2ba4cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4d2.  v1:= 62I;
  #L2ba4d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba4dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba4e2.  v0:= temp @kind object;
  #L2ba4e4.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.f50` v1 @kind this) @signature `Le/e/a/b/f/n/f50;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ba454.  v0:= 0I;
  #L2ba456.  return v0;
}
