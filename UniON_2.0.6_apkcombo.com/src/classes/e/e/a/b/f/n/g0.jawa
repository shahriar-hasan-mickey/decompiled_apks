record `e.e.a.b.f.n.g0` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.n.g0` v0 @kind this) @signature `Le/e/a/b/f/n/g0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2792d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2792da.  return @kind void;
}
procedure `int` `compare`(`e.e.a.b.f.n.g0` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/n/g0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L279254.  v5:= (`e.e.a.b.f.n.q0`) v5 @kind object;
  #L279258.  v6:= (`e.e.a.b.f.n.q0`) v6 @kind object;
  #L27925c.  call temp:= `g`(v5) @signature `Le/e/a/b/f/n/q0;.g:()Le/e/a/b/f/n/l0;` @kind virtual;
  #L279262.  v0:= temp @kind object;
  #L279264.  call temp:= `g`(v6) @signature `Le/e/a/b/f/n/q0;.g:()Le/e/a/b/f/n/l0;` @kind virtual;
  #L27926a.  v1:= temp @kind object;
  #L27926c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L279272.  v2:= temp;
  #L279274.  if v2 == 0 then goto L2792aa;
  #L279278.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L27927e.  v2:= temp;
  #L279280.  if v2 == 0 then goto L2792aa;
  #L279284.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/n/l0;.zza:()B` @kind interface;
  #L27928a.  v2:= temp;
  #L27928c.  v2:= v2 ^& 255;
  #L279290.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/l0;.zza:()B` @kind interface;
  #L279296.  v3:= temp;
  #L279298.  v3:= v3 ^& 255;
  #L27929c.  call temp:= `compare`(v2, v3) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L2792a2.  v2:= temp;
  #L2792a4.  if v2 == 0 then goto L27926c;
  #L2792a8.  goto L2792c2;
  #L2792aa.  call temp:= `d`(v5) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L2792b0.  v5:= temp;
  #L2792b2.  call temp:= `d`(v6) @signature `Le/e/a/b/f/n/q0;.d:()I` @kind virtual;
  #L2792b8.  v6:= temp;
  #L2792ba.  call temp:= `compare`(v5, v6) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L2792c0.  v2:= temp;
  #L2792c2.  return v2;
}
