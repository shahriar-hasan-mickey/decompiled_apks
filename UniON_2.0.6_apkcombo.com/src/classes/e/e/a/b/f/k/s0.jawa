record `e.e.a.b.f.k.s0` @kind class @AccessFlag FINAL extends `java.util.AbstractCollection` @kind class {
  `e.e.a.b.f.k.t0` `e.e.a.b.f.k.s0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.s0` v0 @kind this, `e.e.a.b.f.k.t0` v1 @kind object) @signature `Le/e/a/b/f/k/s0;.<init>:(Le/e/a/b/f/k/t0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2452d0.  v0.`e.e.a.b.f.k.s0.b` @type ^`e.e.a.b.f.k.t0` := v1 @kind object;
  #L2452d4.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L2452da.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.k.s0` v1 @kind this) @signature `Le/e/a/b/f/k/s0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2452ec.  v0:= v1.`e.e.a.b.f.k.s0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L2452f0.  call `clear`(v0) @signature `Le/e/a/b/f/k/t0;.clear:()V` @kind virtual;
  #L2452f6.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.s0` v2 @kind this) @signature `Le/e/a/b/f/k/s0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L245290.  v0:= v2.`e.e.a.b.f.k.s0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L245294.  call temp:= `b`(v0) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L24529a.  v1:= temp @kind object;
  #L24529c.  if v1 == 0 then goto L2452b2;
  #L2452a0.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2452a6.  v0:= temp @kind object;
  #L2452a8.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2452ae.  v0:= temp @kind object;
  #L2452b0.  goto L2452be;
  #L2452b2.  v1:= new `e.e.a.b.f.k.n0`;
  #L2452b6.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/k/n0;.<init>:(Le/e/a/b/f/k/t0;)V` @kind direct;
  #L2452bc.  v0:= v1 @kind object;
  #L2452be.  return v0 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.s0` v1 @kind this) @signature `Le/e/a/b/f/k/s0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L245270.  v0:= v1.`e.e.a.b.f.k.s0.b` @type ^`e.e.a.b.f.k.t0` @kind object;
  #L245274.  call temp:= `size`(v0) @signature `Le/e/a/b/f/k/t0;.size:()I` @kind virtual;
  #L24527a.  v0:= temp;
  #L24527c.  return v0;
}
