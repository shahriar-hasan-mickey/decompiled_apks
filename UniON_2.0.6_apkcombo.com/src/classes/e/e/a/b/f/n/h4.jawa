record `e.e.a.b.f.n.h4` @kind class @AccessFlag  extends `java.util.AbstractMap` @kind class {
  `int` `e.e.a.b.f.n.h4.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.e.a.b.f.n.h4.c` @AccessFlag PRIVATE;
  `java.util.Map` `e.e.a.b.f.n.h4.d` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.n.h4.e` @AccessFlag PRIVATE;
  `e.e.a.b.f.n.g4` `e.e.a.b.f.n.h4.f` @AccessFlag PRIVATE_VOLATILE;
  `java.util.Map` `e.e.a.b.f.n.h4.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.n.h4` v0 @kind this, `int` v1 , `e.e.a.b.f.n.z3` v2 @kind object) @signature `Le/e/a/b/f/n/h4;.<init>:(ILe/e/a/b/f/n/z3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28af5c.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L28af62.  v0.`e.e.a.b.f.n.h4.b` @type ^`int` := v1;
  #L28af66.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L28af6c.  v1:= temp @kind object;
  #L28af6e.  v0.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` := v1 @kind object;
  #L28af72.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L28af78.  v1:= temp @kind object;
  #L28af7a.  v0.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` := v1 @kind object;
  #L28af7e.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L28af84.  v1:= temp @kind object;
  #L28af86.  v0.`e.e.a.b.f.n.h4.g` @type ^`java.util.Map` := v1 @kind object;
  #L28af8a.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.n.h4` v4 @kind this, `java.lang.Comparable` v5 @kind object) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28ab3c.  v0:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ab40.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28ab46.  v0:= temp;
  #L28ab48.  v0:= v0 + -1;
  #L28ab4c.  v1:= 0I;
  #L28ab4e.  if v0 < 0 then goto L28ab86;
  #L28ab52.  v2:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ab56.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28ab5c.  v2:= temp @kind object;
  #L28ab5e.  v2:= (`e.e.a.b.f.n.d4`) v2 @kind object;
  #L28ab62.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/n/d4;.zza:()Ljava/lang/Comparable;` @kind virtual;
  #L28ab68.  v2:= temp @kind object;
  #L28ab6a.  call temp:= `compareTo`(v5, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L28ab70.  v2:= temp;
  #L28ab72.  if v2 <= 0 then goto L28ab7e;
  #L28ab76.  v0:= v0 + 2;
  #L28ab7a.  v5:= -v0 @kind int;
  #L28ab7c.  return v5;
  #L28ab7e.  if v2 == 0 then goto L28ab84;
  #L28ab82.  goto L28ab86;
  #L28ab84.  return v0;
  #L28ab86.  if v1 > v0 then goto L28abcc;
  #L28ab8a.  v2:= v1 + v0 @kind int;
  #L28ab8e.  v2:= v2 / 2;
  #L28ab92.  v3:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ab96.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28ab9c.  v3:= temp @kind object;
  #L28ab9e.  v3:= (`e.e.a.b.f.n.d4`) v3 @kind object;
  #L28aba2.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/n/d4;.zza:()Ljava/lang/Comparable;` @kind virtual;
  #L28aba8.  v3:= temp @kind object;
  #L28abaa.  call temp:= `compareTo`(v5, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L28abb0.  v3:= temp;
  #L28abb2.  if v3 >= 0 then goto L28abbe;
  #L28abb6.  v2:= v2 + -1;
  #L28abba.  v0:= v2;
  #L28abbc.  goto L28ab86;
  #L28abbe.  if v3 <= 0 then goto L28abca;
  #L28abc2.  v2:= v2 + 1;
  #L28abc6.  v1:= v2;
  #L28abc8.  goto L28ab86;
  #L28abca.  return v2;
  #L28abcc.  v1:= v1 + 1;
  #L28abd0.  v5:= -v1 @kind int;
  #L28abd2.  return v5;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.n.h4` v0 @kind object, `int` v1 ) @signature `Le/e/a/b/f/n/h4;.a:(Le/e/a/b/f/n/h4;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28adc8.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/n/h4;.b:(I)Ljava/lang/Object;` @kind direct;
  #L28adce.  v0:= temp @kind object;
  #L28add0.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.h4` v0 @kind object) @signature `Le/e/a/b/f/n/h4;.a:(Le/e/a/b/f/n/h4;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b05c.  call `e`(v0) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28b062.  return @kind void;
}
procedure `java.lang.Object` `b`(`e.e.a.b.f.n.h4` v5 @kind this, `int` v6 ) @signature `Le/e/a/b/f/n/h4;.b:(I)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28ade4.  call `e`(v5) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28adea.  v0:= v5.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28adee.  call temp:= `remove`(v0, v6) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L28adf4.  v6:= temp @kind object;
  #L28adf6.  v6:= (`e.e.a.b.f.n.d4`) v6 @kind object;
  #L28adfa.  call temp:= `getValue`(v6) @signature `Le/e/a/b/f/n/d4;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L28ae00.  v6:= temp @kind object;
  #L28ae02.  v0:= v5.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28ae06.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28ae0c.  v0:= temp;
  #L28ae0e.  if v0 != 0 then goto L28ae64;
  #L28ae12.  call temp:= `f`(v5) @signature `Le/e/a/b/f/n/h4;.f:()Ljava/util/SortedMap;` @kind direct;
  #L28ae18.  v0:= temp @kind object;
  #L28ae1a.  call temp:= `entrySet`(v0) @signature `Ljava/util/SortedMap;.entrySet:()Ljava/util/Set;` @kind interface;
  #L28ae20.  v0:= temp @kind object;
  #L28ae22.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28ae28.  v0:= temp @kind object;
  #L28ae2a.  v1:= v5.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ae2e.  v2:= new `e.e.a.b.f.n.d4`;
  #L28ae32.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28ae38.  v3:= temp @kind object;
  #L28ae3a.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L28ae3e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28ae44.  v4:= temp @kind object;
  #L28ae46.  v4:= (`java.lang.Comparable`) v4 @kind object;
  #L28ae4a.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L28ae50.  v3:= temp @kind object;
  #L28ae52.  call `<init>`(v2, v5, v4, v3) @signature `Le/e/a/b/f/n/d4;.<init>:(Le/e/a/b/f/n/h4;Ljava/lang/Comparable;Ljava/lang/Object;)V` @kind direct;
  #L28ae58.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28ae5e.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L28ae64.  return v6 @kind object;
}
procedure `java.util.List` `b`(`e.e.a.b.f.n.h4` v0 @kind object) @signature `Le/e/a/b/f/n/h4;.b:(Le/e/a/b/f/n/h4;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae78.  v0:= v0.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ae7c.  return v0 @kind object;
}
procedure `java.util.Map` `c`(`e.e.a.b.f.n.h4` v0 @kind object) @signature `Le/e/a/b/f/n/h4;.c:(Le/e/a/b/f/n/h4;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae90.  v0:= v0.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28ae94.  return v0 @kind object;
}
procedure `void` `e`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L28b074.  v0:= v1.`e.e.a.b.f.n.h4.e` @type ^`boolean` @kind boolean;
  #L28b078.  if v0 != 0 then goto L28b07e;
  #L28b07c.  return @kind void;
  #L28b07e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L28b082.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L28b088.  throw v0;
}
procedure `java.util.SortedMap` `f`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.f:()Ljava/util/SortedMap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L28aefc.  call `e`(v1) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28af02.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28af06.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28af0c.  v0:= temp;
  #L28af0e.  if v0 == 0 then goto L28af40;
  #L28af12.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28af16.  v0:= instanceof @variable v0 @type ^`java.util.TreeMap` @kind boolean;
  #L28af1a.  if v0 != 0 then goto L28af40;
  #L28af1e.  v0:= new `java.util.TreeMap`;
  #L28af22.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L28af28.  v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` := v0 @kind object;
  #L28af2c.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28af30.  v0:= (`java.util.TreeMap`) v0 @kind object;
  #L28af34.  call temp:= `descendingMap`(v0) @signature `Ljava/util/TreeMap;.descendingMap:()Ljava/util/NavigableMap;` @kind virtual;
  #L28af3a.  v0:= temp @kind object;
  #L28af3c.  v1.`e.e.a.b.f.n.h4.g` @type ^`java.util.Map` := v0 @kind object;
  #L28af40.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28af44.  v0:= (`java.util.SortedMap`) v0 @kind object;
  #L28af48.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.n.h4` v4 @kind this, `java.lang.Comparable` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28acd8.  call `e`(v4) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28acde.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L28ace4.  v0:= temp;
  #L28ace6.  if v0 < 0 then goto L28ad04;
  #L28acea.  v5:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28acee.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28acf4.  v5:= temp @kind object;
  #L28acf6.  v5:= (`e.e.a.b.f.n.d4`) v5 @kind object;
  #L28acfa.  call temp:= `setValue`(v5, v6) @signature `Le/e/a/b/f/n/d4;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28ad00.  v5:= temp @kind object;
  #L28ad02.  return v5 @kind object;
  #L28ad04.  call `e`(v4) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28ad0a.  v1:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ad0e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L28ad14.  v1:= temp;
  #L28ad16.  if v1 == 0 then goto L28ad38;
  #L28ad1a.  v1:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ad1e.  v1:= instanceof @variable v1 @type ^`java.util.ArrayList` @kind boolean;
  #L28ad22.  if v1 != 0 then goto L28ad38;
  #L28ad26.  v1:= new `java.util.ArrayList`;
  #L28ad2a.  v2:= v4.`e.e.a.b.f.n.h4.b` @type ^`int`;
  #L28ad2e.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L28ad34.  v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` := v1 @kind object;
  #L28ad38.  v0:= v0 + 1;
  #L28ad3c.  v0:= -v0 @kind int;
  #L28ad3e.  v1:= v4.`e.e.a.b.f.n.h4.b` @type ^`int`;
  #L28ad42.  if v0 < v1 then goto L28ad58;
  #L28ad46.  call temp:= `f`(v4) @signature `Le/e/a/b/f/n/h4;.f:()Ljava/util/SortedMap;` @kind direct;
  #L28ad4c.  v0:= temp @kind object;
  #L28ad4e.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/SortedMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28ad54.  v5:= temp @kind object;
  #L28ad56.  return v5 @kind object;
  #L28ad58.  v1:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ad5c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28ad62.  v1:= temp;
  #L28ad64.  v2:= v4.`e.e.a.b.f.n.h4.b` @type ^`int`;
  #L28ad68.  if v1 != v2 then goto L28ad9e;
  #L28ad6c.  v1:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ad70.  v2:= v2 + -1;
  #L28ad74.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L28ad7a.  v1:= temp @kind object;
  #L28ad7c.  v1:= (`e.e.a.b.f.n.d4`) v1 @kind object;
  #L28ad80.  call temp:= `f`(v4) @signature `Le/e/a/b/f/n/h4;.f:()Ljava/util/SortedMap;` @kind direct;
  #L28ad86.  v2:= temp @kind object;
  #L28ad88.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/n/d4;.zza:()Ljava/lang/Comparable;` @kind virtual;
  #L28ad8e.  v3:= temp @kind object;
  #L28ad90.  call temp:= `getValue`(v1) @signature `Le/e/a/b/f/n/d4;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L28ad96.  v1:= temp @kind object;
  #L28ad98.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/SortedMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28ad9e.  v1:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ada2.  v2:= new `e.e.a.b.f.n.d4`;
  #L28ada6.  call `<init>`(v2, v4, v5, v6) @signature `Le/e/a/b/f/n/d4;.<init>:(Le/e/a/b/f/n/h4;Ljava/lang/Comparable;Ljava/lang/Object;)V` @kind direct;
  #L28adac.  call `add`(v1, v0, v2) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L28adb2.  v5:= 0I;
  #L28adb4.  return v5 @kind object;
}
procedure `java.util.Map$Entry` `a`(`e.e.a.b.f.n.h4` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/h4;.a:(I)Ljava/util/Map$Entry;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28aea8.  v0:= v1.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28aeac.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28aeb2.  v2:= temp @kind object;
  #L28aeb4.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L28aeb8.  return v2 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28afe8.  v0:= v1.`e.e.a.b.f.n.h4.e` @type ^`boolean` @kind boolean;
  #L28afec.  if v0 != 0 then goto L28b04a;
  #L28aff0.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aff4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28affa.  v0:= temp;
  #L28affc.  if v0 == 0 then goto L28b00a;
  #L28b000.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L28b006.  v0:= temp @kind object;
  #L28b008.  goto L28b016;
  #L28b00a.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28b00e.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L28b014.  v0:= temp @kind object;
  #L28b016.  v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` := v0 @kind object;
  #L28b01a.  v0:= v1.`e.e.a.b.f.n.h4.g` @type ^`java.util.Map` @kind object;
  #L28b01e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28b024.  v0:= temp;
  #L28b026.  if v0 == 0 then goto L28b034;
  #L28b02a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L28b030.  v0:= temp @kind object;
  #L28b032.  goto L28b040;
  #L28b034.  v0:= v1.`e.e.a.b.f.n.h4.g` @type ^`java.util.Map` @kind object;
  #L28b038.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L28b03e.  v0:= temp @kind object;
  #L28b040.  v1.`e.e.a.b.f.n.h4.g` @type ^`java.util.Map` := v0 @kind object;
  #L28b044.  v0:= 1I;
  #L28b046.  v1.`e.e.a.b.f.n.h4.e` @type ^`boolean` := v0 @kind boolean;
  #L28b04a.  return @kind void;
}
procedure `boolean` `b`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28aa78.  v0:= v1.`e.e.a.b.f.n.h4.e` @type ^`boolean` @kind boolean;
  #L28aa7c.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.c:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28ab1c.  v0:= v1.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ab20.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28ab26.  v0:= temp;
  #L28ab28.  return v0;
}
procedure `void` `clear`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28af9c.  call `e`(v1) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28afa2.  v0:= v1.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28afa6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L28afac.  v0:= temp;
  #L28afae.  if v0 != 0 then goto L28afbc;
  #L28afb2.  v0:= v1.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28afb6.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L28afbc.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28afc0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28afc6.  v0:= temp;
  #L28afc8.  if v0 != 0 then goto L28afd6;
  #L28afcc.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28afd0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L28afd6.  return @kind void;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.n.h4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/h4;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28a984.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L28a988.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L28a98e.  v0:= temp;
  #L28a990.  if v0 >= 0 then goto L28a9aa;
  #L28a994.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28a998.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L28a99e.  v2:= temp;
  #L28a9a0.  if v2 == 0 then goto L28a9a6;
  #L28a9a4.  goto L28a9aa;
  #L28a9a6.  v2:= 0I;
  #L28a9a8.  return v2;
  #L28a9aa.  v2:= 1I;
  #L28a9ac.  return v2;
}
procedure `java.lang.Iterable` `d`(`e.e.a.b.f.n.h4` v1 @kind this) @signature `Le/e/a/b/f/n/h4;.d:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28abe4.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28abe8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28abee.  v0:= temp;
  #L28abf0.  if v0 == 0 then goto L28abfe;
  #L28abf4.  call temp:= `a`() @signature `Le/e/a/b/f/n/c4;.a:()Ljava/lang/Iterable;` @kind static;
  #L28abfa.  v0:= temp @kind object;
  #L28abfc.  goto L28ac0a;
  #L28abfe.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28ac02.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L28ac08.  v0:= temp @kind object;
  #L28ac0a.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.n.h4` v2 @kind this) @signature `Le/e/a/b/f/n/h4;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L28aecc.  v0:= v2.`e.e.a.b.f.n.h4.f` @type ^`e.e.a.b.f.n.g4` @kind object;
  #L28aed0.  if v0 != 0 then goto L28aee4;
  #L28aed4.  v0:= new `e.e.a.b.f.n.g4`;
  #L28aed8.  v1:= 0I;
  #L28aeda.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/n/g4;.<init>:(Le/e/a/b/f/n/h4;Le/e/a/b/f/n/z3;)V` @kind direct;
  #L28aee0.  v2.`e.e.a.b.f.n.h4.f` @type ^`e.e.a.b.f.n.g4` := v0 @kind object;
  #L28aee4.  v0:= v2.`e.e.a.b.f.n.h4.f` @type ^`e.e.a.b.f.n.g4` @kind object;
  #L28aee8.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.n.h4` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/b/f/n/h4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28a9c0.  v0:= 1I;
  #L28a9c2.  if v7 != v8 then goto L28a9c8;
  #L28a9c6.  return v0;
  #L28a9c8.  v1:= instanceof @variable v8 @type ^`e.e.a.b.f.n.h4` @kind boolean;
  #L28a9cc.  if v1 != 0 then goto L28a9da;
  #L28a9d0.  call temp:= `equals`(v7, v8) @signature `Ljava/util/AbstractMap;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L28a9d6.  v8:= temp;
  #L28a9d8.  return v8;
  #L28a9da.  v8:= (`e.e.a.b.f.n.h4`) v8 @kind object;
  #L28a9de.  call temp:= `size`(v7) @signature `Le/e/a/b/f/n/h4;.size:()I` @kind virtual;
  #L28a9e4.  v1:= temp;
  #L28a9e6.  call temp:= `size`(v8) @signature `Le/e/a/b/f/n/h4;.size:()I` @kind virtual;
  #L28a9ec.  v2:= temp;
  #L28a9ee.  v3:= 0I;
  #L28a9f0.  if v1 == v2 then goto L28a9f6;
  #L28a9f4.  return v3;
  #L28a9f6.  call temp:= `c`(v7) @signature `Le/e/a/b/f/n/h4;.c:()I` @kind virtual;
  #L28a9fc.  v2:= temp;
  #L28a9fe.  call temp:= `c`(v8) @signature `Le/e/a/b/f/n/h4;.c:()I` @kind virtual;
  #L28aa04.  v4:= temp;
  #L28aa06.  if v2 != v4 then goto L28aa4c;
  #L28aa0a.  v4:= 0I;
  #L28aa0c.  if v4 >= v2 then goto L28aa34;
  #L28aa10.  call temp:= `a`(v7, v4) @signature `Le/e/a/b/f/n/h4;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L28aa16.  v5:= temp @kind object;
  #L28aa18.  call temp:= `a`(v8, v4) @signature `Le/e/a/b/f/n/h4;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L28aa1e.  v6:= temp @kind object;
  #L28aa20.  call temp:= `equals`(v5, v6) @signature `Ljava/util/Map$Entry;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L28aa26.  v5:= temp;
  #L28aa28.  if v5 != 0 then goto L28aa2e;
  #L28aa2c.  return v3;
  #L28aa2e.  v4:= v4 + 1;
  #L28aa32.  goto L28aa0c;
  #L28aa34.  if v2 == v1 then goto L28aa4a;
  #L28aa38.  v0:= v7.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aa3c.  v8:= v8.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aa40.  call temp:= `equals`(v0, v8) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L28aa46.  v8:= temp;
  #L28aa48.  return v8;
  #L28aa4a.  return v0;
  #L28aa4c.  call temp:= `entrySet`(v7) @signature `Le/e/a/b/f/n/h4;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L28aa52.  v0:= temp @kind object;
  #L28aa54.  call temp:= `entrySet`(v8) @signature `Le/e/a/b/f/n/h4;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L28aa5a.  v8:= temp @kind object;
  #L28aa5c.  call temp:= `equals`(v0, v8) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L28aa62.  v8:= temp;
  #L28aa64.  return v8;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.n.h4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/h4;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28ac1c.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L28ac20.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L28ac26.  v0:= temp;
  #L28ac28.  if v0 < 0 then goto L28ac46;
  #L28ac2c.  v2:= v1.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28ac30.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28ac36.  v2:= temp @kind object;
  #L28ac38.  v2:= (`e.e.a.b.f.n.d4`) v2 @kind object;
  #L28ac3c.  call temp:= `getValue`(v2) @signature `Le/e/a/b/f/n/d4;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L28ac42.  v2:= temp @kind object;
  #L28ac44.  return v2 @kind object;
  #L28ac46.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28ac4a.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28ac50.  v2:= temp @kind object;
  #L28ac52.  return v2 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.h4` v4 @kind this) @signature `Le/e/a/b/f/n/h4;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28aa90.  call temp:= `c`(v4) @signature `Le/e/a/b/f/n/h4;.c:()I` @kind virtual;
  #L28aa96.  v0:= temp;
  #L28aa98.  v1:= 0I;
  #L28aa9a.  v2:= 0I;
  #L28aa9c.  if v1 >= v0 then goto L28aac0;
  #L28aaa0.  v3:= v4.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28aaa4.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28aaaa.  v3:= temp @kind object;
  #L28aaac.  v3:= (`e.e.a.b.f.n.d4`) v3 @kind object;
  #L28aab0.  call temp:= `hashCode`(v3) @signature `Le/e/a/b/f/n/d4;.hashCode:()I` @kind virtual;
  #L28aab6.  v3:= temp;
  #L28aab8.  v2:= v2 + v3 @kind int;
  #L28aaba.  v1:= v1 + 1;
  #L28aabe.  goto L28aa9c;
  #L28aac0.  v0:= v4.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aac4.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L28aaca.  v0:= temp;
  #L28aacc.  if v0 <= 0 then goto L28aade;
  #L28aad0.  v0:= v4.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aad4.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L28aada.  v0:= temp;
  #L28aadc.  v2:= v2 + v0 @kind int;
  #L28aade.  return v2;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.n.h4` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/h4;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L28ac64.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L28ac68.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28ac6e.  v1:= temp @kind object;
  #L28ac70.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.n.h4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/h4;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28ac84.  call `e`(v1) @signature `Le/e/a/b/f/n/h4;.e:()V` @kind direct;
  #L28ac8a.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L28ac8e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/h4;.a:(Ljava/lang/Comparable;)I` @kind direct;
  #L28ac94.  v0:= temp;
  #L28ac96.  if v0 < 0 then goto L28aca4;
  #L28ac9a.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/n/h4;.b:(I)Ljava/lang/Object;` @kind direct;
  #L28aca0.  v2:= temp @kind object;
  #L28aca2.  return v2 @kind object;
  #L28aca4.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28aca8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L28acae.  v0:= temp;
  #L28acb0.  if v0 == 0 then goto L28acb8;
  #L28acb4.  v2:= 0I;
  #L28acb6.  return v2 @kind object;
  #L28acb8.  v0:= v1.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28acbc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28acc2.  v2:= temp @kind object;
  #L28acc4.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.n.h4` v2 @kind this) @signature `Le/e/a/b/f/n/h4;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L28aaf0.  v0:= v2.`e.e.a.b.f.n.h4.c` @type ^`java.util.List` @kind object;
  #L28aaf4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28aafa.  v0:= temp;
  #L28aafc.  v1:= v2.`e.e.a.b.f.n.h4.d` @type ^`java.util.Map` @kind object;
  #L28ab00.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L28ab06.  v1:= temp;
  #L28ab08.  v0:= v0 + v1 @kind int;
  #L28ab0a.  return v0;
}
