record `e.e.a.b.f.o.pa` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.o.pa.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.o.pa.c` @AccessFlag FINAL;
  `e.e.a.b.f.o.qa` `e.e.a.b.f.o.pa.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.o.pa` v1 @kind this, `e.e.a.b.f.o.qa` v2 @kind object) @signature `Le/e/a/b/f/o/pa;.<init>:(Le/e/a/b/f/o/qa;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2cf668.  v1.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` := v2 @kind object;
  #L2cf66c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cf672.  v0:= v1.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf676.  v0:= v0.`e.e.a.b.f.o.qa.c` @type ^`java.util.Collection` @kind object;
  #L2cf67a.  v1.`e.e.a.b.f.o.pa.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2cf67e.  v2:= v2.`e.e.a.b.f.o.qa.c` @type ^`java.util.Collection` @kind object;
  #L2cf682.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L2cf686.  if v0 == 0 then goto L2cf698;
  #L2cf68a.  v2:= (`java.util.List`) v2 @kind object;
  #L2cf68e.  call temp:= `listIterator`(v2) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L2cf694.  v2:= temp @kind object;
  #L2cf696.  goto L2cf6a0;
  #L2cf698.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2cf69e.  v2:= temp @kind object;
  #L2cf6a0.  v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L2cf6a4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.o.pa` v0 @kind this, `e.e.a.b.f.o.qa` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/o/pa;.<init>:(Le/e/a/b/f/o/qa;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cf6b8.  v0.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` := v1 @kind object;
  #L2cf6bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cf6c2.  v1:= v0.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf6c6.  v1:= v1.`e.e.a.b.f.o.qa.c` @type ^`java.util.Collection` @kind object;
  #L2cf6ca.  v0.`e.e.a.b.f.o.pa.c` @type ^`java.util.Collection` := v1 @kind object;
  #L2cf6ce.  v0.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L2cf6d2.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.o.pa` v1 @kind this) @signature `Le/e/a/b/f/o/pa;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf620.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cf626.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cf62a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2cf630.  v0:= temp;
  #L2cf632.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.o.pa` v1 @kind this) @signature `Le/e/a/b/f/o/pa;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf644.  call `zza`(v1) @signature `Le/e/a/b/f/o/pa;.zza:()V` @kind virtual;
  #L2cf64a.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cf64e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2cf654.  v0:= temp @kind object;
  #L2cf656.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.o.pa` v1 @kind this) @signature `Le/e/a/b/f/o/pa;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf6e4.  v0:= v1.`e.e.a.b.f.o.pa.b` @type ^`java.util.Iterator` @kind object;
  #L2cf6e8.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2cf6ee.  v0:= v1.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf6f2.  v0:= v0.`e.e.a.b.f.o.qa.f` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2cf6f6.  call temp:= `b`(v0) @signature `Le/e/a/b/f/o/ta;.b:(Le/e/a/b/f/o/ta;)I` @kind static;
  #L2cf6fc.  v0:= v1.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf700.  call `zzb`(v0) @signature `Le/e/a/b/f/o/qa;.zzb:()V` @kind virtual;
  #L2cf706.  return @kind void;
}
procedure `void` `zza`(`e.e.a.b.f.o.pa` v2 @kind this) @signature `Le/e/a/b/f/o/pa;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2cf718.  v0:= v2.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf71c.  call `zza`(v0) @signature `Le/e/a/b/f/o/qa;.zza:()V` @kind virtual;
  #L2cf722.  v0:= v2.`e.e.a.b.f.o.pa.d` @type ^`e.e.a.b.f.o.qa` @kind object;
  #L2cf726.  v0:= v0.`e.e.a.b.f.o.qa.c` @type ^`java.util.Collection` @kind object;
  #L2cf72a.  v1:= v2.`e.e.a.b.f.o.pa.c` @type ^`java.util.Collection` @kind object;
  #L2cf72e.  if v0 != v1 then goto L2cf734;
  #L2cf732.  return @kind void;
  #L2cf734.  v0:= new `java.util.ConcurrentModificationException`;
  #L2cf738.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L2cf73e.  throw v0;
}
