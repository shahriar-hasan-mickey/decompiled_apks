record `e.e.a.b.f.n.yt` @kind class @AccessFlag  extends `e.e.a.b.f.n.zt` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.n.yt.a` @AccessFlag ;
  `int` `e.e.a.b.f.n.yt.b` @AccessFlag ;
  `boolean` `e.e.a.b.f.n.yt.c` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.a.b.f.n.yt` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/yt;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ab51c.  call `<init>`(v0) @signature `Le/e/a/b/f/n/zt;.<init>:()V` @kind direct;
  #L2ab522.  v1:= 4I;
  #L2ab524.  v1:= new `java.lang.Object`[v1];
  #L2ab528.  v0.`e.e.a.b.f.n.yt.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2ab52c.  v1:= 0I;
  #L2ab52e.  v0.`e.e.a.b.f.n.yt.b` @type ^`int` := v1;
  #L2ab532.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.n.yt` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/n/yt;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ab544.  v0:= v4.`e.e.a.b.f.n.yt.a` @type ^`java.lang.Object`[] @kind object;
  #L2ab548.  v1:= length @variable v0;
  #L2ab54a.  v2:= 0I;
  #L2ab54c.  if v1 >= v5 then goto L2ab58a;
  #L2ab550.  v3:= v1 ^> 1;
  #L2ab554.  v1:= v1 + v3 @kind int;
  #L2ab556.  v1:= v1 + 1;
  #L2ab55a.  if v1 >= v5 then goto L2ab56e;
  #L2ab55e.  v5:= v5 + -1;
  #L2ab562.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2ab568.  v5:= temp;
  #L2ab56a.  v1:= v5 + v5 @kind int;
  #L2ab56e.  if v1 >= 0 then goto L2ab578;
  #L2ab572.  v1:= 2147483647I;
  #L2ab578.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2ab57e.  v5:= temp @kind object;
  #L2ab580.  v4.`e.e.a.b.f.n.yt.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L2ab584.  v4.`e.e.a.b.f.n.yt.c` @type ^`boolean` := v2 @kind boolean;
  #L2ab588.  return @kind void;
  #L2ab58a.  v5:= v4.`e.e.a.b.f.n.yt.c` @type ^`boolean` @kind boolean;
  #L2ab58e.  if v5 == 0 then goto L2ab5a4;
  #L2ab592.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ab598.  v5:= temp @kind object;
  #L2ab59a.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L2ab59e.  v4.`e.e.a.b.f.n.yt.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L2ab5a2.  goto L2ab584;
  #L2ab5a4.  return @kind void;
}
procedure `e.e.a.b.f.n.yt` `a`(`e.e.a.b.f.n.yt` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/n/yt;.a:(Ljava/lang/Object;)Le/e/a/b/f/n/yt;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ab4e0.  if v4 == 0 then goto L2ab508;
  #L2ab4e4.  v0:= v3.`e.e.a.b.f.n.yt.b` @type ^`int`;
  #L2ab4e8.  v0:= v0 + 1;
  #L2ab4ec.  call `a`(v3, v0) @signature `Le/e/a/b/f/n/yt;.a:(I)V` @kind direct;
  #L2ab4f2.  v0:= v3.`e.e.a.b.f.n.yt.a` @type ^`java.lang.Object`[] @kind object;
  #L2ab4f6.  v1:= v3.`e.e.a.b.f.n.yt.b` @type ^`int`;
  #L2ab4fa.  v2:= v1 + 1;
  #L2ab4fe.  v3.`e.e.a.b.f.n.yt.b` @type ^`int` := v2;
  #L2ab502.  v0[v1]:= v4 @kind object;
  #L2ab506.  return v3 @kind object;
  #L2ab508.  v4:= 0I;
  #L2ab50a.  throw v4;
}
