record `e.e.a.b.f.b.w4` @kind class @AccessFlag PUBLIC {
  `int` `e.e.a.b.f.b.w4.b` @AccessFlag PROTECTED_VOLATILE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L212fb0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L212fb6.  v0:= -1I;
  #L212fb8.  v1.`e.e.a.b.f.b.w4.b` @type ^`int` := v0;
  #L212fbc.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.w4` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/w4;.a:(Le/e/a/b/f/b/w4;[BII)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L212fe4.  v2:= 0I;
  #L212fe6.  call temp:= `a`(v1, v2, v3) @signature `Le/e/a/b/f/b/p4;.a:([BII)Le/e/a/b/f/b/p4;` @kind static;
  #L212fec.  v1:= temp @kind object;
  #L212fee.  call `a`(v0, v1) @signature `Le/e/a/b/f/b/w4;.a:(Le/e/a/b/f/b/p4;)V` @kind virtual;
  #L212ff4.  call `a`(v1) @signature `Le/e/a/b/f/b/p4;.a:()V` @kind virtual;
  #L212ffa.  return @kind void;
  #L212ffc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L212ffe.  v1:= new `java.lang.RuntimeException`;
  #L213002.  v2:= "Serializing to a byte array threw an IOException (should never happen)." @kind object;
  #L213006.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L21300c.  throw v1;
  catch `java.io.IOException` @[L212fe6..L212ffa] goto L212ffc;
}
procedure `void` `a`(`e.e.a.b.f.b.w4` v0 @kind this, `e.e.a.b.f.b.p4` v1 @kind object) @signature `Le/e/a/b/f/b/w4;.a:(Le/e/a/b/f/b/p4;)V` @AccessFlag PUBLIC {
    temp;

  #L212fd0.  return @kind void;
}
procedure `int` `c`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.c:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L212f44.  call temp:= `d`(v1) @signature `Le/e/a/b/f/b/w4;.d:()I` @kind virtual;
  #L212f4a.  v0:= temp;
  #L212f4c.  v1.`e.e.a.b.f.b.w4.b` @type ^`int` := v0;
  #L212f50.  return v0;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L212f78.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/w4;.e:()Le/e/a/b/f/b/w4;` @kind virtual;
  #L212f7e.  v0:= temp @kind object;
  #L212f80.  return v0 @kind object;
}
procedure `int` `d`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.d:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L212f64.  v0:= 0I;
  #L212f66.  return v0;
}
procedure `e.e.a.b.f.b.w4` `e`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.e:()Le/e/a/b/f/b/w4;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L212f24.  call temp:= `clone`(v1) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L212f2a.  v0:= temp @kind object;
  #L212f2c.  v0:= (`e.e.a.b.f.b.w4`) v0 @kind object;
  #L212f30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.b.w4` v1 @kind this) @signature `Le/e/a/b/f/b/w4;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L212f94.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/y4;.a:(Le/e/a/b/f/b/w4;)Ljava/lang/String;` @kind static;
  #L212f9a.  v0:= temp @kind object;
  #L212f9c.  return v0 @kind object;
}
