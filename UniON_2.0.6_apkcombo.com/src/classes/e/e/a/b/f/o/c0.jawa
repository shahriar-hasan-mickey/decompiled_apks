record `e.e.a.b.f.o.c0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/c0;.a:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L2c10c0.  v0:= 0I;
  #L2c10c2.  if v1 == 0 then goto L2c10d2;
  #L2c10c6.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c10cc.  v1:= temp @kind object;
  #L2c10ce.  return v1 @kind object;
  #L2c10d0.  return v0 @kind object;
  #L2c10d2.  throw v0;
  catch `java.lang.ClassCastException` @[L2c10c6..L2c10ce] goto L2c10d0;
  catch `java.lang.NullPointerException` @[L2c10c6..L2c10ce] goto L2c10d0;
}
procedure `boolean` `b`(`java.util.Map` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/o/c0;.b:(Ljava/util/Map;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;

  #L2c1088.  if v0 == 0 then goto L2c109a;
  #L2c108c.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2c1092.  v0:= temp;
  #L2c1094.  return v0;
  #L2c1096.  v0:= 0I;
  #L2c1098.  return v0;
  #L2c109a.  v0:= 0I;
  #L2c109c.  throw v0;
  catch `java.lang.ClassCastException` @[L2c108c..L2c1094] goto L2c1096;
  catch `java.lang.NullPointerException` @[L2c108c..L2c1094] goto L2c1096;
}
