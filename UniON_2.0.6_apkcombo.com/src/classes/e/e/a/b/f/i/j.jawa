record `e.e.a.b.f.i.j` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.i.f` @kind class, `java.util.Set` @kind interface {
  `e.e.a.b.f.i.i` `e.e.a.b.f.i.j.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.i.j` v0 @kind this) @signature `Le/e/a/b/f/i/j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21c858.  call `<init>`(v0) @signature `Le/e/a/b/f/i/f;.<init>:()V` @kind direct;
  #L21c85e.  return @kind void;
}
procedure `e.e.a.b.f.i.j` `a`(`int` v13 , `java.lang.Object`[] v14 @kind object) @signature `Le/e/a/b/f/i/j;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/i/j;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L21c698.  if v13 == 0 then goto L21c772;
  #L21c69c.  v0:= 0I;
  #L21c69e.  v1:= 1I;
  #L21c6a0.  if v13 == v1 then goto L21c762;
  #L21c6a4.  call temp:= `d`(v13) @signature `Le/e/a/b/f/i/j;.d:(I)I` @kind static;
  #L21c6aa.  v2:= temp;
  #L21c6ac.  v6:= new `java.lang.Object`[v2];
  #L21c6b0.  v7:= v2 + -1;
  #L21c6b4.  v3:= 0I;
  #L21c6b6.  v5:= 0I;
  #L21c6b8.  v8:= 0I;
  #L21c6ba.  if v3 >= v13 then goto L21c70e;
  #L21c6be.  v4:= v14[v3] @kind object;
  #L21c6c2.  call temp:= `a`(v4, v3) @signature `Le/e/a/b/f/i/l;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L21c6c8.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21c6ce.  v9:= temp;
  #L21c6d0.  call temp:= `a`(v9) @signature `Le/e/a/b/f/i/e;.a:(I)I` @kind static;
  #L21c6d6.  v10:= temp;
  #L21c6d8.  v11:= v10 ^& v7 @kind int;
  #L21c6dc.  v12:= v6[v11] @kind object;
  #L21c6e0.  if v12 != 0 then goto L21c6f6;
  #L21c6e4.  v10:= v8 + 1;
  #L21c6e8.  v14[v8]:= v4 @kind object;
  #L21c6ec.  v6[v11]:= v4 @kind object;
  #L21c6f0.  v5:= v5 + v9 @kind int;
  #L21c6f2.  v8:= v10;
  #L21c6f4.  goto L21c702;
  #L21c6f6.  call temp:= `equals`(v12, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c6fc.  v11:= temp;
  #L21c6fe.  if v11 == 0 then goto L21c708;
  #L21c702.  v3:= v3 + 1;
  #L21c706.  goto L21c6ba;
  #L21c708.  v10:= v10 + 1;
  #L21c70c.  goto L21c6d8;
  #L21c70e.  v3:= 0I;
  #L21c710.  call `fill`(v14, v8, v13, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L21c716.  if v8 != v1 then goto L21c72a;
  #L21c71a.  v13:= v14[v0] @kind object;
  #L21c71e.  v14:= new `e.e.a.b.f.i.o`;
  #L21c722.  call `<init>`(v14, v13, v5) @signature `Le/e/a/b/f/i/o;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L21c728.  return v14 @kind object;
  #L21c72a.  call temp:= `d`(v8) @signature `Le/e/a/b/f/i/j;.d:(I)I` @kind static;
  #L21c730.  v13:= temp;
  #L21c732.  v2:= v2 / 2;
  #L21c736.  if v13 < v2 then goto L21c758;
  #L21c73a.  v13:= 6I;
  #L21c73c.  if v8 >= v13 then goto L21c748;
  #L21c740.  call temp:= `copyOf`(v14, v8) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L21c746.  v14:= temp @kind object;
  #L21c748.  v4:= v14 @kind object;
  #L21c74a.  v13:= new `e.e.a.b.f.i.n`;
  #L21c74e.  v3:= v13 @kind object;
  #L21c750.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/i/n;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L21c756.  return v13 @kind object;
  #L21c758.  call temp:= `a`(v8, v14) @signature `Le/e/a/b/f/i/j;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/i/j;` @kind static;
  #L21c75e.  v13:= temp @kind object;
  #L21c760.  return v13 @kind object;
  #L21c762.  v13:= v14[v0] @kind object;
  #L21c766.  v14:= new `e.e.a.b.f.i.o`;
  #L21c76a.  call `<init>`(v14, v13) @signature `Le/e/a/b/f/i/o;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L21c770.  return v14 @kind object;
  #L21c772.  v13:= `@@e.e.a.b.f.i.n.i` @type ^`e.e.a.b.f.i.n` @kind object;
  #L21c776.  return v13 @kind object;
}
procedure `e.e.a.b.f.i.j` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Le/e/a/b/f/i/j;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Le/e/a/b/f/i/j;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L21c630.  v0:= 8I;
  #L21c634.  v1:= new `java.lang.Object`[v0];
  #L21c638.  v2:= 0I;
  #L21c63a.  v3:= "common" @kind object;
  #L21c63e.  v1[v2]:= v3 @kind object;
  #L21c642.  v3:= 1I;
  #L21c644.  v4:= "vision-common" @kind object;
  #L21c648.  v1[v3]:= v4 @kind object;
  #L21c64c.  v3:= 2I;
  #L21c64e.  v4:= "play-services-mlkit-barcode-scanning" @kind object;
  #L21c652.  v1[v3]:= v4 @kind object;
  #L21c656.  v4:= 3I;
  #L21c658.  v5:= "barcode-scanning" @kind object;
  #L21c65c.  v1[v4]:= v5 @kind object;
  #L21c660.  v4:= 4I;
  #L21c662.  v5:= "play-services-mlkit-face-detection" @kind object;
  #L21c666.  v1[v4]:= v5 @kind object;
  #L21c66a.  v4:= 5I;
  #L21c66c.  v5:= "face-detection" @kind object;
  #L21c670.  v1[v4]:= v5 @kind object;
  #L21c674.  v4:= 6I;
  #L21c676.  call `arraycopy`(v6, v2, v1, v4, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L21c67c.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/i/j;.a:(I[Ljava/lang/Object;)Le/e/a/b/f/i/j;` @kind static;
  #L21c682.  v0:= temp @kind object;
  #L21c684.  return v0 @kind object;
}
procedure `int` `d`(`int` v6 ) @signature `Le/e/a/b/f/i/j;.d:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21c7d0.  v0:= 2I;
  #L21c7d2.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L21c7d8.  v6:= temp;
  #L21c7da.  v0:= 751619276I;
  #L21c7e0.  if v6 >= v0 then goto L21c810;
  #L21c7e4.  v0:= v6 + -1;
  #L21c7e8.  call temp:= `highestOneBit`(v0) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L21c7ee.  v0:= temp;
  #L21c7f0.  v0:= v0 + v0 @kind int;
  #L21c7f2.  v1:= (`double`) v0 @kind i2d;
  #L21c7f4.  v3:= 0.7D;
  #L21c7fe.  v1:= v1 * v3 @kind double;
  #L21c802.  v3:= (`double`) v6 @kind i2d;
  #L21c804.  v5:= dcmpg(v1, v3);
  #L21c808.  if v5 >= 0 then goto L21c80e;
  #L21c80c.  goto L21c7f0;
  #L21c80e.  return v0;
  #L21c810.  v0:= 2.0F;
  #L21c814.  if v6 >= v0 then goto L21c81a;
  #L21c818.  return v0;
  #L21c81a.  v6:= new `java.lang.IllegalArgumentException`;
  #L21c81e.  v0:= "collection too large" @kind object;
  #L21c822.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c828.  throw v6;
}
procedure `e.e.a.b.f.i.i` `e`(`e.e.a.b.f.i.j` v1 @kind this) @signature `Le/e/a/b/f/i/j;.e:()Le/e/a/b/f/i/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21c5f4.  v0:= v1.`e.e.a.b.f.i.j.c` @type ^`e.e.a.b.f.i.i` @kind object;
  #L21c5f8.  if v0 != 0 then goto L21c608;
  #L21c5fc.  call temp:= `f`(v1) @signature `Le/e/a/b/f/i/j;.f:()Le/e/a/b/f/i/i;` @kind virtual;
  #L21c602.  v0:= temp @kind object;
  #L21c604.  v1.`e.e.a.b.f.i.j.c` @type ^`e.e.a.b.f.i.i` := v0 @kind object;
  #L21c608.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.i.j` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/i/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21c53c.  v0:= 1I;
  #L21c53e.  if v5 != v4 then goto L21c544;
  #L21c542.  return v0;
  #L21c544.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.i.j` @kind boolean;
  #L21c548.  v2:= 0I;
  #L21c54a.  if v1 == 0 then goto L21c584;
  #L21c54e.  call temp:= `v`(v4) @signature `Le/e/a/b/f/i/j;.v:()Z` @kind virtual;
  #L21c554.  v1:= temp;
  #L21c556.  if v1 == 0 then goto L21c584;
  #L21c55a.  v1:= v5 @kind object;
  #L21c55c.  v1:= (`e.e.a.b.f.i.j`) v1 @kind object;
  #L21c560.  call temp:= `v`(v1) @signature `Le/e/a/b/f/i/j;.v:()Z` @kind virtual;
  #L21c566.  v1:= temp;
  #L21c568.  if v1 == 0 then goto L21c584;
  #L21c56c.  call temp:= `hashCode`(v4) @signature `Le/e/a/b/f/i/j;.hashCode:()I` @kind virtual;
  #L21c572.  v1:= temp;
  #L21c574.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21c57a.  v3:= temp;
  #L21c57c.  if v1 != v3 then goto L21c582;
  #L21c580.  goto L21c584;
  #L21c582.  return v2;
  #L21c584.  if v5 != v4 then goto L21c58c;
  #L21c588.  v2:= 1I;
  #L21c58a.  goto L21c5bc;
  #L21c58c.  v1:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L21c590.  if v1 == 0 then goto L21c5bc;
  #L21c594.  v5:= (`java.util.Set`) v5 @kind object;
  #L21c598.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L21c59e.  v1:= temp;
  #L21c5a0.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L21c5a6.  v3:= temp;
  #L21c5a8.  if v1 != v3 then goto L21c5bc;
  #L21c5ac.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L21c5b2.  v5:= temp;
  #L21c5b4.  if v5 != 0 then goto L21c5ba;
  #L21c5b8.  goto L21c5bc;
  #L21c5ba.  return v0;
  #L21c5bc.  return v2;
  catch `java.lang.NullPointerException` @[L21c598..L21c5b4] goto L21c5bc;
  catch `java.lang.ClassCastException` @[L21c598..L21c5b4] goto L21c5bc;
}
procedure `e.e.a.b.f.i.i` `f`(`e.e.a.b.f.i.j` v1 @kind this) @signature `Le/e/a/b/f/i/j;.f:()Le/e/a/b/f/i/i;` @AccessFlag  {
    temp;
    v0;

  #L21c61c.  v0:= 0I;
  #L21c61e.  throw v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.i.j` v4 @kind this) @signature `Le/e/a/b/f/i/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21c788.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21c78e.  v0:= temp @kind object;
  #L21c790.  v1:= 0I;
  #L21c792.  v2:= 0I;
  #L21c794.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21c79a.  v3:= temp;
  #L21c79c.  if v3 == 0 then goto L21c7bc;
  #L21c7a0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21c7a6.  v3:= temp @kind object;
  #L21c7a8.  if v3 == 0 then goto L21c7b6;
  #L21c7ac.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21c7b2.  v3:= temp;
  #L21c7b4.  goto L21c7b8;
  #L21c7b6.  v3:= 0I;
  #L21c7b8.  v2:= v2 + v3 @kind int;
  #L21c7ba.  goto L21c794;
  #L21c7bc.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.i.j` v1 @kind this) @signature `Le/e/a/b/f/i/j;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L21c83c.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/i/j;.zza:()Le/e/a/b/f/i/p;` @kind virtual;
  #L21c842.  v0:= temp @kind object;
  #L21c844.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.i.j` v1 @kind this) @signature `Le/e/a/b/f/i/j;.v:()Z` @AccessFlag  {
    temp;
    v0;

  #L21c5e0.  v0:= 0I;
  #L21c5e2.  throw v0;
}
procedure `e.e.a.b.f.i.p` `zza`() @signature `Le/e/a/b/f/i/j;.zza:()Le/e/a/b/f/i/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
