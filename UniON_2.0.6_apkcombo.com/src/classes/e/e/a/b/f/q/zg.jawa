record `e.e.a.b.f.q.zg` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`e.e.a.b.f.q.zg` v0 @kind this) @signature `Le/e/a/b/f/q/zg;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f3440.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3446.  return @kind void;
}
procedure `e.e.a.b.f.q.ug` `a`(`e.e.a.b.f.q.dj` v6 @kind object) @signature `Le/e/a/b/f/q/zg;.a:(Le/e/a/b/f/q/dj;)Le/e/a/b/f/q/ug;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f32e4.  v0:= " to Json" @kind object;
  #L2f32e8.  v1:= "Failed parsing JSON source: " @kind object;
  #L2f32ec.  call temp:= `k`(v6) @signature `Le/e/a/b/f/q/dj;.k:()Z` @kind virtual;
  #L2f32f2.  v2:= temp;
  #L2f32f4.  v3:= 1I;
  #L2f32f6.  call `a`(v6, v3) @signature `Le/e/a/b/f/q/dj;.a:(Z)V` @kind virtual;
  #L2f32fc.  call temp:= `a`(v6) @signature `Le/e/a/b/f/q/qh;.a:(Le/e/a/b/f/q/dj;)Le/e/a/b/f/q/ug;` @kind static;
  #L2f3302.  v0:= temp @kind object;
  #L2f3304.  call `a`(v6, v2) @signature `Le/e/a/b/f/q/dj;.a:(Z)V` @kind virtual;
  #L2f330a.  return v0 @kind object;
  #L2f330c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f330e.  goto L2f3374;
  #L2f3310.  v3:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2f3312.  v4:= new `e.e.a.b.f.q.yg`;
  #L2f3316.  v5:= new `java.lang.StringBuilder`;
  #L2f331a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f3320.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f3326.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f332c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f3332.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f3338.  v0:= temp @kind object;
  #L2f333a.  call `<init>`(v4, v0, v3) @signature `Le/e/a/b/f/q/yg;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2f3340.  throw v4;
  #L2f3342.  v3:= Exception @type ^`java.lang.StackOverflowError` @kind object;
  #L2f3344.  v4:= new `e.e.a.b.f.q.yg`;
  #L2f3348.  v5:= new `java.lang.StringBuilder`;
  #L2f334c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f3352.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f3358.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f335e.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f3364.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f336a.  v0:= temp @kind object;
  #L2f336c.  call `<init>`(v4, v0, v3) @signature `Le/e/a/b/f/q/yg;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2f3372.  throw v4;
  #L2f3374.  call `a`(v6, v2) @signature `Le/e/a/b/f/q/dj;.a:(Z)V` @kind virtual;
  #L2f337a.  throw v0;
  catch `java.lang.StackOverflowError` @[L2f32fc..L2f3304] goto L2f3342;
  catch `java.lang.OutOfMemoryError` @[L2f32fc..L2f3304] goto L2f3310;
  catch `java.lang.Throwable` @[L2f32fc..L2f3304] goto L2f330c;
  catch `java.lang.Throwable` @[L2f3312..L2f3374] goto L2f330c;
}
procedure `e.e.a.b.f.q.ug` `a`(`java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/q/zg;.a:(Ljava/lang/String;)Le/e/a/b/f/q/ug;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2f33a8.  v0:= new `java.io.StringReader`;
  #L2f33ac.  call `<init>`(v0, v2) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f33b2.  v2:= new `e.e.a.b.f.q.dj`;
  #L2f33b6.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/q/dj;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L2f33bc.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/zg;.a:(Le/e/a/b/f/q/dj;)Le/e/a/b/f/q/ug;` @kind static;
  #L2f33c2.  v0:= temp @kind object;
  #L2f33c4.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.q.wg` @kind boolean;
  #L2f33c8.  if v1 != 0 then goto L2f33ee;
  #L2f33cc.  call temp:= `w`(v2) @signature `Le/e/a/b/f/q/dj;.w:()I` @kind virtual;
  #L2f33d2.  v2:= temp;
  #L2f33d4.  v1:= 10I;
  #L2f33d8.  if v2 != v1 then goto L2f33de;
  #L2f33dc.  goto L2f33ee;
  #L2f33de.  v2:= new `e.e.a.b.f.q.ch`;
  #L2f33e2.  v0:= "Did not consume the entire document." @kind object;
  #L2f33e6.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/q/ch;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f33ec.  throw v2;
  #L2f33ee.  return v0 @kind object;
  #L2f33f0.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L2f33f2.  v0:= new `e.e.a.b.f.q.ch`;
  #L2f33f6.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/q/ch;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2f33fc.  throw v0;
  #L2f33fe.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2f3400.  v0:= new `e.e.a.b.f.q.vg`;
  #L2f3404.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/q/vg;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2f340a.  throw v0;
  #L2f340c.  v2:= Exception @type ^`e.e.a.b.f.q.gj` @kind object;
  #L2f340e.  v0:= new `e.e.a.b.f.q.ch`;
  #L2f3412.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/q/ch;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2f3418.  throw v0;
  catch `e.e.a.b.f.q.gj` @[L2f33b2..L2f33ee] goto L2f340c;
  catch `java.io.IOException` @[L2f33b2..L2f33ee] goto L2f33fe;
  catch `java.lang.NumberFormatException` @[L2f33b2..L2f33ee] goto L2f33f0;
}
