record `e.e.a.b.f.q.gf` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.q.v` @kind interface {
  `int` `e.e.a.b.f.q.gf.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.q.gf` `@@e.e.a.b.f.q.gf.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.gf` `@@e.e.a.b.f.q.gf.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.gf` `@@e.e.a.b.f.q.gf.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.q.gf`[] `@@e.e.a.b.f.q.gf.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/gf;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f0ad8.  v0:= new `e.e.a.b.f.q.gf`;
  #L2f0adc.  v1:= 0I;
  #L2f0ade.  v2:= "INVALID_MODE" @kind object;
  #L2f0ae2.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/q/gf;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2f0ae8.  `@@e.e.a.b.f.q.gf.c` @type ^`e.e.a.b.f.q.gf` := v0 @kind object;
  #L2f0aec.  v0:= new `e.e.a.b.f.q.gf`;
  #L2f0af0.  v2:= 1I;
  #L2f0af2.  v3:= "STREAM" @kind object;
  #L2f0af6.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/q/gf;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2f0afc.  `@@e.e.a.b.f.q.gf.d` @type ^`e.e.a.b.f.q.gf` := v0 @kind object;
  #L2f0b00.  v0:= new `e.e.a.b.f.q.gf`;
  #L2f0b04.  v3:= 2I;
  #L2f0b06.  v4:= "SINGLE_IMAGE" @kind object;
  #L2f0b0a.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/q/gf;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2f0b10.  `@@e.e.a.b.f.q.gf.e` @type ^`e.e.a.b.f.q.gf` := v0 @kind object;
  #L2f0b14.  v0:= 3I;
  #L2f0b16.  v0:= new `e.e.a.b.f.q.gf`[v0];
  #L2f0b1a.  v4:= `@@e.e.a.b.f.q.gf.c` @type ^`e.e.a.b.f.q.gf` @kind object;
  #L2f0b1e.  v0[v1]:= v4 @kind object;
  #L2f0b22.  v1:= `@@e.e.a.b.f.q.gf.d` @type ^`e.e.a.b.f.q.gf` @kind object;
  #L2f0b26.  v0[v2]:= v1 @kind object;
  #L2f0b2a.  v1:= `@@e.e.a.b.f.q.gf.e` @type ^`e.e.a.b.f.q.gf` @kind object;
  #L2f0b2e.  v0[v3]:= v1 @kind object;
  #L2f0b32.  `@@e.e.a.b.f.q.gf.f` @type ^`e.e.a.b.f.q.gf`[] := v0 @kind object;
  #L2f0b36.  v0:= new `e.e.a.b.f.q.ef`;
  #L2f0b3a.  call `<init>`(v0) @signature `Le/e/a/b/f/q/ef;.<init>:()V` @kind direct;
  #L2f0b40.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.gf` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/gf;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f0b54.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f0b5a.  v0.`e.e.a.b.f.q.gf.b` @type ^`int` := v3;
  #L2f0b5e.  return @kind void;
}
procedure `e.e.a.b.f.q.gf`[] `values`() @signature `Le/e/a/b/f/q/gf;.values:()[Le/e/a/b/f/q/gf;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0a24.  v0:= `@@e.e.a.b.f.q.gf.f` @type ^`e.e.a.b.f.q.gf`[] @kind object;
  #L2f0a28.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/q/gf;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2f0a2e.  v0:= temp @kind object;
  #L2f0a30.  v0:= (`e.e.a.b.f.q.gf`[]) v0 @kind object;
  #L2f0a34.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.x` `zza`() @signature `Le/e/a/b/f/q/gf;.zza:()Le/e/a/b/f/q/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0a0c.  v0:= `@@e.e.a.b.f.q.ff.a` @type ^`e.e.a.b.f.q.x` @kind object;
  #L2f0a10.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.q.gf` v2 @kind this) @signature `Le/e/a/b/f/q/gf;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2f0a48.  v0:= new `java.lang.StringBuilder`;
  #L2f0a4c.  v1:= "<" @kind object;
  #L2f0a50.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0a56.  v1:= constclass @type ^`e.e.a.b.f.q.gf` @kind object;
  #L2f0a5a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2f0a60.  v1:= temp @kind object;
  #L2f0a62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0a68.  v1:= 64I;
  #L2f0a6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0a72.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2f0a78.  v1:= temp;
  #L2f0a7a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2f0a80.  v1:= temp @kind object;
  #L2f0a82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0a88.  v1:= " number=" @kind object;
  #L2f0a8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0a92.  v1:= v2.`e.e.a.b.f.q.gf.b` @type ^`int`;
  #L2f0a96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0a9c.  v1:= " name=" @kind object;
  #L2f0aa0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0aa6.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2f0aac.  v1:= temp @kind object;
  #L2f0aae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0ab4.  v1:= 62I;
  #L2f0ab8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f0abe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f0ac4.  v0:= temp @kind object;
  #L2f0ac6.  return v0 @kind object;
}
