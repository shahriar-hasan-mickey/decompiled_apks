record `e.e.a.b.f.u.l3` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface, `java.lang.Iterable` @kind interface {
  `int` `e.e.a.b.f.u.l3.b` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.u.l3` `@@e.e.a.b.f.u.l3.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `e.e.a.b.f.u.r3` `@@e.e.a.b.f.u.l3.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/l3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L326e1c.  v0:= new `e.e.a.b.f.u.w3`;
  #L326e20.  v1:= `@@e.e.a.b.f.u.w4.b` @type ^`byte`[] @kind object;
  #L326e24.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/w3;.<init>:([B)V` @kind direct;
  #L326e2a.  `@@e.e.a.b.f.u.l3.c` @type ^`e.e.a.b.f.u.l3` := v0 @kind object;
  #L326e2e.  call temp:= `a`() @signature `Le/e/a/b/f/u/d3;.a:()Z` @kind static;
  #L326e34.  v0:= temp;
  #L326e36.  v1:= 0I;
  #L326e38.  if v0 == 0 then goto L326e48;
  #L326e3c.  v0:= new `e.e.a.b.f.u.v3`;
  #L326e40.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/v3;.<init>:(Le/e/a/b/f/u/k3;)V` @kind direct;
  #L326e46.  goto L326e52;
  #L326e48.  v0:= new `e.e.a.b.f.u.p3`;
  #L326e4c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/p3;.<init>:(Le/e/a/b/f/u/k3;)V` @kind direct;
  #L326e52.  `@@e.e.a.b.f.u.l3.d` @type ^`e.e.a.b.f.u.r3` := v0 @kind object;
  #L326e56.  v0:= new `e.e.a.b.f.u.n3`;
  #L326e5a.  call `<init>`(v0) @signature `Le/e/a/b/f/u/n3;.<init>:()V` @kind direct;
  #L326e60.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.l3` v1 @kind this) @signature `Le/e/a/b/f/u/l3;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L326e74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L326e7a.  v0:= 0I;
  #L326e7c.  v1.`e.e.a.b.f.u.l3.b` @type ^`int` := v0;
  #L326e80.  return @kind void;
}
procedure `int` `a`(`byte` v0 ) @signature `Le/e/a/b/f/u/l3;.a:(B)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L326bf8.  call temp:= `b`(v0) @signature `Le/e/a/b/f/u/l3;.b:(B)I` @kind static;
  #L326bfe.  v0:= temp;
  #L326c00.  return v0;
}
procedure `e.e.a.b.f.u.l3` `a`(`java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/u/l3;.a:(Ljava/lang/String;)Le/e/a/b/f/u/l3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L326b78.  v0:= new `e.e.a.b.f.u.w3`;
  #L326b7c.  v1:= `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` @kind object;
  #L326b80.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L326b86.  v2:= temp @kind object;
  #L326b88.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/u/w3;.<init>:([B)V` @kind direct;
  #L326b8e.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.l3` `a`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/u/l3;.a:([BII)Le/e/a/b/f/u/l3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L326b44.  v0:= v3 + v4 @kind int;
  #L326b48.  v1:= length @variable v2;
  #L326b4a.  call temp:= `b`(v3, v0, v1) @signature `Le/e/a/b/f/u/l3;.b:(III)I` @kind static;
  #L326b50.  v0:= new `e.e.a.b.f.u.w3`;
  #L326b54.  v1:= `@@e.e.a.b.f.u.l3.d` @type ^`e.e.a.b.f.u.r3` @kind object;
  #L326b58.  call temp:= `a`(v1, v2, v3, v4) @signature `Le/e/a/b/f/u/r3;.a:([BII)[B` @kind interface;
  #L326b5e.  v2:= temp @kind object;
  #L326b60.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/u/w3;.<init>:([B)V` @kind direct;
  #L326b66.  return v0 @kind object;
}
procedure `int` `b`(`byte` v0 ) @signature `Le/e/a/b/f/u/l3;.b:(B)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L326c14.  v0:= v0 ^& 255;
  #L326c18.  return v0;
}
procedure `int` `b`(`int` v3 , `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/u/l3;.b:(III)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L326c2c.  v0:= v4 - v3 @kind int;
  #L326c30.  v1:= v3 ^| v4 @kind int;
  #L326c34.  v1:= v1 ^| v0 @kind int;
  #L326c36.  v2:= v5 - v4 @kind int;
  #L326c3a.  v1:= v1 ^| v2 @kind int;
  #L326c3c.  if v1 >= 0 then goto L326d08;
  #L326c40.  if v3 < 0 then goto L326ccc;
  #L326c44.  if v4 >= v3 then goto L326c8a;
  #L326c48.  v5:= new `java.lang.IndexOutOfBoundsException`;
  #L326c4c.  v0:= 66I;
  #L326c50.  v1:= new `java.lang.StringBuilder`;
  #L326c54.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L326c5a.  v0:= "Beginning index larger than ending index: " @kind object;
  #L326c5e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326c64.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326c6a.  v3:= ", " @kind object;
  #L326c6e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326c74.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326c7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326c80.  v3:= temp @kind object;
  #L326c82.  call `<init>`(v5, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326c88.  throw v5;
  #L326c8a.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L326c8e.  v0:= 37I;
  #L326c92.  v1:= new `java.lang.StringBuilder`;
  #L326c96.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L326c9c.  v0:= "End index: " @kind object;
  #L326ca0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326ca6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326cac.  v4:= " >= " @kind object;
  #L326cb0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326cb6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326cbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326cc2.  v4:= temp @kind object;
  #L326cc4.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326cca.  throw v3;
  #L326ccc.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L326cd0.  v5:= 32I;
  #L326cd4.  v0:= new `java.lang.StringBuilder`;
  #L326cd8.  call `<init>`(v0, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L326cde.  v5:= "Beginning index: " @kind object;
  #L326ce2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326ce8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326cee.  v3:= " < 0" @kind object;
  #L326cf2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326cf8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326cfe.  v3:= temp @kind object;
  #L326d00.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326d06.  throw v4;
  #L326d08.  return v0;
}
procedure `e.e.a.b.f.u.u3` `h`(`int` v2 ) @signature `Le/e/a/b/f/u/l3;.h:(I)Le/e/a/b/f/u/u3;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L326ba0.  v0:= new `e.e.a.b.f.u.u3`;
  #L326ba4.  v1:= 0I;
  #L326ba6.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/u/u3;.<init>:(ILe/e/a/b/f/u/k3;)V` @kind direct;
  #L326bac.  return v0 @kind object;
}
procedure `byte` `a`(`int` v0 ) @signature `Le/e/a/b/f/u/l3;.a:(I)B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/u/l3;.a:(III)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.e.a.b.f.u.l3` `a`(`int` v0 , `int` v1 ) @signature `Le/e/a/b/f/u/l3;.a:(II)Le/e/a/b/f/u/l3;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `a`(`java.nio.charset.Charset` v0 @kind object) @signature `Le/e/a/b/f/u/l3;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `a`(`e.e.a.b.f.u.i3` v0 @kind object) @signature `Le/e/a/b/f/u/l3;.a:(Le/e/a/b/f/u/i3;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `byte` `b`(`int` v0 ) @signature `Le/e/a/b/f/u/l3;.b:(I)B` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `c`(`e.e.a.b.f.u.l3` v1 @kind this) @signature `Le/e/a/b/f/u/l3;.c:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L326d1c.  v0:= v1.`e.e.a.b.f.u.l3.b` @type ^`int`;
  #L326d20.  return v0;
}
procedure `boolean` `d`() @signature `Le/e/a/b/f/u/l3;.d:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/u/l3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.l3` v2 @kind this) @signature `Le/e/a/b/f/u/l3;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L326bc0.  v0:= v2.`e.e.a.b.f.u.l3.b` @type ^`int`;
  #L326bc4.  if v0 != 0 then goto L326be4;
  #L326bc8.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L326bce.  v0:= temp;
  #L326bd0.  v1:= 0I;
  #L326bd2.  call temp:= `a`(v2, v0, v1, v0) @signature `Le/e/a/b/f/u/l3;.a:(III)I` @kind virtual;
  #L326bd8.  v0:= temp;
  #L326bda.  if v0 != 0 then goto L326be0;
  #L326bde.  v0:= 1I;
  #L326be0.  v2.`e.e.a.b.f.u.l3.b` @type ^`int` := v0;
  #L326be4.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.u.l3` v1 @kind this) @signature `Le/e/a/b/f/u/l3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L326e00.  v0:= new `e.e.a.b.f.u.k3`;
  #L326e04.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/k3;.<init>:(Le/e/a/b/f/u/l3;)V` @kind direct;
  #L326e0a.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.u.l3` v5 @kind this) @signature `Le/e/a/b/f/u/l3;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L326d34.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L326d38.  v1:= 3I;
  #L326d3a.  v1:= new `java.lang.Object`[v1];
  #L326d3e.  call temp:= `identityHashCode`(v5) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L326d44.  v2:= temp;
  #L326d46.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L326d4c.  v2:= temp @kind object;
  #L326d4e.  v3:= 0I;
  #L326d50.  v1[v3]:= v2 @kind object;
  #L326d54.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L326d5a.  v2:= temp;
  #L326d5c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L326d62.  v2:= temp @kind object;
  #L326d64.  v4:= 1I;
  #L326d66.  v1[v4]:= v2 @kind object;
  #L326d6a.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L326d70.  v2:= temp;
  #L326d72.  v4:= 50I;
  #L326d76.  if v2 > v4 then goto L326d84;
  #L326d7a.  call temp:= `a`(v5) @signature `Le/e/a/b/f/u/f7;.a:(Le/e/a/b/f/u/l3;)Ljava/lang/String;` @kind static;
  #L326d80.  v2:= temp @kind object;
  #L326d82.  goto L326dac;
  #L326d84.  v2:= 47I;
  #L326d88.  call temp:= `a`(v5, v3, v2) @signature `Le/e/a/b/f/u/l3;.a:(II)Le/e/a/b/f/u/l3;` @kind virtual;
  #L326d8e.  v2:= temp @kind object;
  #L326d90.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/f7;.a:(Le/e/a/b/f/u/l3;)Ljava/lang/String;` @kind static;
  #L326d96.  v2:= temp @kind object;
  #L326d98.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L326d9e.  v2:= temp @kind object;
  #L326da0.  v3:= "..." @kind object;
  #L326da4.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L326daa.  v2:= temp @kind object;
  #L326dac.  v3:= 2I;
  #L326dae.  v1[v3]:= v2 @kind object;
  #L326db2.  v2:= "<ByteString@%s size=%d contents=\"%s\">" @kind object;
  #L326db6.  call temp:= `format`(v0, v2, v1) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L326dbc.  v0:= temp @kind object;
  #L326dbe.  return v0 @kind object;
}
procedure `int` `zza`() @signature `Le/e/a/b/f/u/l3;.zza:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `zzb`(`e.e.a.b.f.u.l3` v2 @kind this) @signature `Le/e/a/b/f/u/l3;.zzb:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L326dd0.  v0:= `@@e.e.a.b.f.u.w4.a` @type ^`java.nio.charset.Charset` @kind object;
  #L326dd4.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L326dda.  v1:= temp;
  #L326ddc.  if v1 != 0 then goto L326de6;
  #L326de0.  v0:= "" @kind object;
  #L326de4.  return v0 @kind object;
  #L326de6.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/u/l3;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L326dec.  v0:= temp @kind object;
  #L326dee.  return v0 @kind object;
}
