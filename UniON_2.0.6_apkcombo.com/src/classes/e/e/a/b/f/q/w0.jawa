record `e.e.a.b.f.q.w0` @kind class @AccessFlag FINAL {
}
procedure `void` `<init>`(`e.e.a.b.f.q.w0` v0 @kind this) @signature `Le/e/a/b/f/q/w0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d5dec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d5df2.  return @kind void;
}
procedure `int` `a`(`int` v0 , `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/w0;.a:(ILjava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L2d5d88.  v1:= (`e.e.a.b.f.q.v0`) v1 @kind object;
  #L2d5d8c.  v2:= (`e.e.a.b.f.q.u0`) v2 @kind object;
  #L2d5d90.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L2d5d96.  v0:= temp;
  #L2d5d98.  if v0 == 0 then goto L2d5d9e;
  #L2d5d9c.  goto L2d5dba;
  #L2d5d9e.  call temp:= `entrySet`(v1) @signature `Le/e/a/b/f/q/v0;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2d5da4.  v0:= temp @kind object;
  #L2d5da6.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d5dac.  v0:= temp @kind object;
  #L2d5dae.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d5db4.  v1:= temp;
  #L2d5db6.  if v1 != 0 then goto L2d5dbe;
  #L2d5dba.  v0:= 0I;
  #L2d5dbc.  return v0;
  #L2d5dbe.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d5dc4.  v0:= temp @kind object;
  #L2d5dc6.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2d5dca.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d5dd0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d5dd6.  v0:= 0I;
  #L2d5dd8.  throw v0;
}
