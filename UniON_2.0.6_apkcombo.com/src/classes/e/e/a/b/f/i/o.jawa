record `e.e.a.b.f.i.o` @kind class @AccessFlag FINAL extends `e.e.a.b.f.i.j` @kind class {
  `java.lang.Object` `e.e.a.b.f.i.o.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.i.o.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.i.o` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/i/o;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cd70.  call `<init>`(v0) @signature `Le/e/a/b/f/i/j;.<init>:()V` @kind direct;
  #L21cd76.  if v1 == 0 then goto L21cd80;
  #L21cd7a.  v0.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` := v1 @kind object;
  #L21cd7e.  return @kind void;
  #L21cd80.  v1:= 0I;
  #L21cd82.  throw v1;
}
procedure `void` `<init>`(`e.e.a.b.f.i.o` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/i/o;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cd94.  call `<init>`(v0) @signature `Le/e/a/b/f/i/j;.<init>:()V` @kind direct;
  #L21cd9a.  v0.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` := v1 @kind object;
  #L21cd9e.  v0.`e.e.a.b.f.i.o.e` @type ^`int` := v2;
  #L21cda2.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.i.o` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/i/o;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L21ccd0.  v3:= v1.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21ccd4.  v0:= 0I;
  #L21ccd6.  v2[v0]:= v3 @kind object;
  #L21ccda.  v2:= 1I;
  #L21ccdc.  return v2;
}
procedure `boolean` `contains`(`e.e.a.b.f.i.o` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/i/o;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21cc10.  v0:= v1.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21cc14.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21cc1a.  v2:= temp;
  #L21cc1c.  return v2;
}
procedure `e.e.a.b.f.i.i` `f`(`e.e.a.b.f.i.o` v1 @kind this) @signature `Le/e/a/b/f/i/o;.f:()Le/e/a/b/f/i/i;` @AccessFlag FINAL {
    temp;
    v0;

  #L21cc50.  v0:= v1.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21cc54.  call temp:= `a`(v0) @signature `Le/e/a/b/f/i/i;.a:(Ljava/lang/Object;)Le/e/a/b/f/i/i;` @kind static;
  #L21cc5a.  v0:= temp @kind object;
  #L21cc5c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.i.o` v1 @kind this) @signature `Le/e/a/b/f/i/o;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21cc90.  v0:= v1.`e.e.a.b.f.i.o.e` @type ^`int`;
  #L21cc94.  if v0 != 0 then goto L21cca8;
  #L21cc98.  v0:= v1.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21cc9c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21cca2.  v0:= temp;
  #L21cca4.  v1.`e.e.a.b.f.i.o.e` @type ^`int` := v0;
  #L21cca8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.i.o` v2 @kind this) @signature `Le/e/a/b/f/i/o;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L21cd50.  v0:= v2.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21cd54.  v1:= new `e.e.a.b.f.i.k`;
  #L21cd58.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/i/k;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L21cd5e.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.i.o` v1 @kind this) @signature `Le/e/a/b/f/i/o;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21ccbc.  v0:= 1I;
  #L21ccbe.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.i.o` v3 @kind this) @signature `Le/e/a/b/f/i/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L21ccf0.  v0:= v3.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21ccf4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ccfa.  v0:= temp @kind object;
  #L21ccfc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L21cd02.  v1:= temp @kind object;
  #L21cd04.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21cd0a.  v1:= temp;
  #L21cd0c.  v2:= new `java.lang.StringBuilder`;
  #L21cd10.  v1:= v1 + 2;
  #L21cd14.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21cd1a.  v1:= 91I;
  #L21cd1e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cd24.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cd2a.  v0:= 93I;
  #L21cd2e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cd34.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21cd3a.  v0:= temp @kind object;
  #L21cd3c.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.i.o` v1 @kind this) @signature `Le/e/a/b/f/i/o;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L21cc30.  v0:= v1.`e.e.a.b.f.i.o.e` @type ^`int`;
  #L21cc34.  if v0 == 0 then goto L21cc3c;
  #L21cc38.  v0:= 1I;
  #L21cc3a.  return v0;
  #L21cc3c.  v0:= 0I;
  #L21cc3e.  return v0;
}
procedure `e.e.a.b.f.i.p` `zza`(`e.e.a.b.f.i.o` v2 @kind this) @signature `Le/e/a/b/f/i/o;.zza:()Le/e/a/b/f/i/p;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L21cc70.  v0:= v2.`e.e.a.b.f.i.o.d` @type ^`java.lang.Object` @kind object;
  #L21cc74.  v1:= new `e.e.a.b.f.i.k`;
  #L21cc78.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/i/k;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L21cc7e.  return v1 @kind object;
}
