record `e.e.a.b.f.m.f` @kind class @AccessFlag FINAL extends `e.e.a.b.f.m.t0` @kind class {
  `e.e.a.b.f.m.h` `e.e.a.b.f.m.f.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.f` v0 @kind this, `e.e.a.b.f.m.h` v1 @kind object) @signature `Le/e/a/b/f/m/f;.<init>:(Le/e/a/b/f/m/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L264200.  v0.`e.e.a.b.f.m.f.b` @type ^`e.e.a.b.f.m.h` := v1 @kind object;
  #L264204.  call `<init>`(v0) @signature `Le/e/a/b/f/m/t0;.<init>:()V` @kind direct;
  #L26420a.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.m.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/f;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264140.  v0:= v1.`e.e.a.b.f.m.f.b` @type ^`e.e.a.b.f.m.h` @kind object;
  #L264144.  v0:= v0.`e.e.a.b.f.m.h.d` @type ^`java.util.Map` @kind object;
  #L264148.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L26414e.  v0:= temp @kind object;
  #L264150.  if v0 == 0 then goto L264162;
  #L264154.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L26415a.  v2:= temp;
  #L26415c.  goto L264160;
  #L26415e.  v2:= 0I;
  #L264160.  return v2;
  #L264162.  v2:= 0I;
  #L264164.  throw v2;
  catch `java.lang.ClassCastException` @[L264154..L26415c] goto L26415e;
  catch `java.lang.NullPointerException` @[L264154..L26415c] goto L26415e;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.f` v2 @kind this) @signature `Le/e/a/b/f/m/f;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2641c8.  v0:= new `e.e.a.b.f.m.g`;
  #L2641cc.  v1:= v2.`e.e.a.b.f.m.f.b` @type ^`e.e.a.b.f.m.h` @kind object;
  #L2641d0.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/m/g;.<init>:(Le/e/a/b/f/m/h;)V` @kind direct;
  #L2641d6.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.m.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/f;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264188.  call temp:= `contains`(v1, v2) @signature `Le/e/a/b/f/m/f;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L26418e.  v0:= temp;
  #L264190.  if v0 != 0 then goto L264198;
  #L264194.  v2:= 0I;
  #L264196.  return v2;
  #L264198.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L26419c.  v0:= v1.`e.e.a.b.f.m.f.b` @type ^`e.e.a.b.f.m.h` @kind object;
  #L2641a0.  v0:= v0.`e.e.a.b.f.m.h.e` @type ^`e.e.a.b.f.m.p` @kind object;
  #L2641a4.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2641aa.  v2:= temp @kind object;
  #L2641ac.  call `a`(v0, v2) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;Ljava/lang/Object;)V` @kind static;
  #L2641b2.  v2:= 1I;
  #L2641b4.  return v2;
}
procedure `java.util.Map` `zza`(`e.e.a.b.f.m.f` v1 @kind this) @signature `Le/e/a/b/f/m/f;.zza:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L2641e8.  v0:= v1.`e.e.a.b.f.m.f.b` @type ^`e.e.a.b.f.m.h` @kind object;
  #L2641ec.  return v0 @kind object;
}
