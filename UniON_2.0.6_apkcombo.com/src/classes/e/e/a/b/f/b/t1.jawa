record `e.e.a.b.f.b.t1` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.b.t` @kind class, `e.e.a.b.f.b.u1` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.List` `e.e.a.b.f.b.t1.c` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.b.t1` `@@e.e.a.b.f.b.t1.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/t1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L202cfc.  v0:= new `e.e.a.b.f.b.t1`;
  #L202d00.  call `<init>`(v0) @signature `Le/e/a/b/f/b/t1;.<init>:()V` @kind direct;
  #L202d06.  `@@e.e.a.b.f.b.t1.d` @type ^`e.e.a.b.f.b.t1` := v0 @kind object;
  #L202d0a.  call `h`(v0) @signature `Le/e/a/b/f/b/t;.h:()V` @kind virtual;
  #L202d10.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.t1` v1 @kind this) @signature `Le/e/a/b/f/b/t1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L202d24.  v0:= 10I;
  #L202d28.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/t1;.<init>:(I)V` @kind direct;
  #L202d2e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/t1;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L202d40.  v0:= new `java.util.ArrayList`;
  #L202d44.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L202d4a.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/t1;.<init>:(Ljava/util/ArrayList;)V` @kind direct;
  #L202d50.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.t1` v0 @kind this, `java.util.ArrayList` v1 @kind object) @signature `Le/e/a/b/f/b/t1;.<init>:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L202d64.  call `<init>`(v0) @signature `Le/e/a/b/f/b/t;.<init>:()V` @kind direct;
  #L202d6a.  v0.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` := v1 @kind object;
  #L202d6e.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/t1;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L202c98.  v0:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L202c9c.  if v0 == 0 then goto L202ca6;
  #L202ca0.  v1:= (`java.lang.String`) v1 @kind object;
  #L202ca4.  return v1 @kind object;
  #L202ca6.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L202caa.  if v0 == 0 then goto L202cbc;
  #L202cae.  v1:= (`e.e.a.b.f.b.a0`) v1 @kind object;
  #L202cb2.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/a0;.g:()Ljava/lang/String;` @kind virtual;
  #L202cb8.  v1:= temp @kind object;
  #L202cba.  return v1 @kind object;
  #L202cbc.  v1:= (`byte`[]) v1 @kind object;
  #L202cc0.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/h1;.c:([B)Ljava/lang/String;` @kind static;
  #L202cc6.  v1:= temp @kind object;
  #L202cc8.  return v1 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/t1;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L202d80.  v3:= (`java.lang.String`) v3 @kind object;
  #L202d84.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L202d8a.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202d8e.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L202d94.  v2:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L202d98.  v2:= v2 + 1;
  #L202d9c.  v1.`java.util.AbstractList.modCount` @type ^`int` := v2;
  #L202da0.  return @kind void;
}
procedure `boolean` `addAll`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Le/e/a/b/f/b/t1;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202a98.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L202a9e.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.b.u1` @kind boolean;
  #L202aa2.  if v0 == 0 then goto L202ab2;
  #L202aa6.  v3:= (`e.e.a.b.f.b.u1`) v3 @kind object;
  #L202aaa.  call temp:= `x`(v3) @signature `Le/e/a/b/f/b/u1;.x:()Ljava/util/List;` @kind interface;
  #L202ab0.  v3:= temp @kind object;
  #L202ab2.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202ab6.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L202abc.  v2:= temp;
  #L202abe.  v3:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L202ac2.  v3:= v3 + 1;
  #L202ac6.  v1.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L202aca.  return v2;
}
procedure `boolean` `addAll`(`e.e.a.b.f.b.t1` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/b/t1;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202adc.  call temp:= `size`(v1) @signature `Le/e/a/b/f/b/t1;.size:()I` @kind virtual;
  #L202ae2.  v0:= temp;
  #L202ae4.  call temp:= `addAll`(v1, v0, v2) @signature `Le/e/a/b/f/b/t1;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L202aea.  v2:= temp;
  #L202aec.  return v2;
}
procedure `void` `clear`(`e.e.a.b.f.b.t1` v1 @kind this) @signature `Le/e/a/b/f/b/t1;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202db4.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L202dba.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202dbe.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L202dc4.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L202dc8.  v0:= v0 + 1;
  #L202dcc.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L202dd0.  return @kind void;
}
procedure `e.e.a.b.f.b.k1` `f`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/t1;.f:(I)Le/e/a/b/f/b/k1;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L202b00.  call temp:= `size`(v1) @signature `Le/e/a/b/f/b/t1;.size:()I` @kind virtual;
  #L202b06.  v0:= temp;
  #L202b08.  if v2 < v0 then goto L202b2c;
  #L202b0c.  v0:= new `java.util.ArrayList`;
  #L202b10.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L202b16.  v2:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202b1a.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L202b20.  v2:= new `e.e.a.b.f.b.t1`;
  #L202b24.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/b/t1;.<init>:(Ljava/util/ArrayList;)V` @kind direct;
  #L202b2a.  return v2 @kind object;
  #L202b2c.  v2:= new `java.lang.IllegalArgumentException`;
  #L202b30.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L202b36.  throw v2;
}
procedure `java.lang.Object` `g`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/t1;.g:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202c10.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202c14.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L202c1a.  v2:= temp @kind object;
  #L202c1c.  return v2 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.b.t1` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/t1;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L202b94.  v0:= v2.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202b98.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L202b9e.  v0:= temp @kind object;
  #L202ba0.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L202ba4.  if v1 == 0 then goto L202bae;
  #L202ba8.  v0:= (`java.lang.String`) v0 @kind object;
  #L202bac.  return v0 @kind object;
  #L202bae.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.b.a0` @kind boolean;
  #L202bb2.  if v1 == 0 then goto L202bda;
  #L202bb6.  v0:= (`e.e.a.b.f.b.a0`) v0 @kind object;
  #L202bba.  call temp:= `g`(v0) @signature `Le/e/a/b/f/b/a0;.g:()Ljava/lang/String;` @kind virtual;
  #L202bc0.  v1:= temp @kind object;
  #L202bc2.  call temp:= `d`(v0) @signature `Le/e/a/b/f/b/a0;.d:()Z` @kind virtual;
  #L202bc8.  v0:= temp;
  #L202bca.  if v0 == 0 then goto L202bd8;
  #L202bce.  v0:= v2.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202bd2.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L202bd8.  return v1 @kind object;
  #L202bda.  v0:= (`byte`[]) v0 @kind object;
  #L202bde.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/h1;.c:([B)Ljava/lang/String;` @kind static;
  #L202be4.  v1:= temp @kind object;
  #L202be6.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/h1;.b:([B)Z` @kind static;
  #L202bec.  v0:= temp;
  #L202bee.  if v0 == 0 then goto L202bfc;
  #L202bf2.  v0:= v2.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202bf6.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L202bfc.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/t1;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L202c30.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L202c36.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202c3a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L202c40.  v2:= temp @kind object;
  #L202c42.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L202c46.  v0:= v0 + 1;
  #L202c4a.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L202c4e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/t1;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L202c54.  v2:= temp @kind object;
  #L202c56.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.b.t1` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/t1;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L202c68.  v3:= (`java.lang.String`) v3 @kind object;
  #L202c6c.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L202c72.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202c76.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L202c7c.  v2:= temp @kind object;
  #L202c7e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/b/t1;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L202c84.  v2:= temp @kind object;
  #L202c86.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.b.t1` v1 @kind this) @signature `Le/e/a/b/f/b/t1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202b74.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202b78.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L202b7e.  v0:= temp;
  #L202b80.  return v0;
}
procedure `java.util.List` `x`(`e.e.a.b.f.b.t1` v1 @kind this) @signature `Le/e/a/b/f/b/t1;.x:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202cdc.  v0:= v1.`e.e.a.b.f.b.t1.c` @type ^`java.util.List` @kind object;
  #L202ce0.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L202ce6.  v0:= temp @kind object;
  #L202ce8.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.u1` `y`(`e.e.a.b.f.b.t1` v1 @kind this) @signature `Le/e/a/b/f/b/t1;.y:()Le/e/a/b/f/b/u1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L202b48.  call temp:= `t`(v1) @signature `Le/e/a/b/f/b/t1;.t:()Z` @kind virtual;
  #L202b4e.  v0:= temp;
  #L202b50.  if v0 == 0 then goto L202b60;
  #L202b54.  v0:= new `e.e.a.b.f.b.x3`;
  #L202b58.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/x3;.<init>:(Le/e/a/b/f/b/u1;)V` @kind direct;
  #L202b5e.  return v0 @kind object;
  #L202b60.  return v1 @kind object;
}
