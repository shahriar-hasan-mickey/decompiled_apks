record `e.e.a.b.f.n.d00` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.d00.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.d00` `@@e.e.a.b.f.n.d00.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.d00` `@@e.e.a.b.f.n.d00.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.d00`[] `@@e.e.a.b.f.n.d00.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/d00;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4070.  v0:= new `e.e.a.b.f.n.d00`;
  #L2b4074.  v1:= 0I;
  #L2b4076.  v2:= "UNKNOWN" @kind object;
  #L2b407a.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/d00;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b4080.  `@@e.e.a.b.f.n.d00.c` @type ^`e.e.a.b.f.n.d00` := v0 @kind object;
  #L2b4084.  v0:= new `e.e.a.b.f.n.d00`;
  #L2b4088.  v2:= 1I;
  #L2b408a.  v3:= "TRANSLATE" @kind object;
  #L2b408e.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/d00;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b4094.  `@@e.e.a.b.f.n.d00.d` @type ^`e.e.a.b.f.n.d00` := v0 @kind object;
  #L2b4098.  v0:= 2I;
  #L2b409a.  v0:= new `e.e.a.b.f.n.d00`[v0];
  #L2b409e.  v3:= `@@e.e.a.b.f.n.d00.c` @type ^`e.e.a.b.f.n.d00` @kind object;
  #L2b40a2.  v0[v1]:= v3 @kind object;
  #L2b40a6.  v1:= `@@e.e.a.b.f.n.d00.d` @type ^`e.e.a.b.f.n.d00` @kind object;
  #L2b40aa.  v0[v2]:= v1 @kind object;
  #L2b40ae.  `@@e.e.a.b.f.n.d00.e` @type ^`e.e.a.b.f.n.d00`[] := v0 @kind object;
  #L2b40b2.  v0:= new `e.e.a.b.f.n.b00`;
  #L2b40b6.  call `<init>`(v0) @signature `Le/e/a/b/f/n/b00;.<init>:()V` @kind direct;
  #L2b40bc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.d00` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/d00;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b40d0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b40d6.  v0.`e.e.a.b.f.n.d00.b` @type ^`int` := v3;
  #L2b40da.  return @kind void;
}
procedure `e.e.a.b.f.n.d00` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/d00;.a:(I)Le/e/a/b/f/n/d00;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b3f78.  if v1 == 0 then goto L2b3f8c;
  #L2b3f7c.  v0:= 1I;
  #L2b3f7e.  if v1 == v0 then goto L2b3f86;
  #L2b3f82.  v1:= 0I;
  #L2b3f84.  return v1 @kind object;
  #L2b3f86.  v1:= `@@e.e.a.b.f.n.d00.d` @type ^`e.e.a.b.f.n.d00` @kind object;
  #L2b3f8a.  return v1 @kind object;
  #L2b3f8c.  v1:= `@@e.e.a.b.f.n.d00.c` @type ^`e.e.a.b.f.n.d00` @kind object;
  #L2b3f90.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/d00;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b3f60.  v0:= `@@e.e.a.b.f.n.c00.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b3f64.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.d00`[] `values`() @signature `Le/e/a/b/f/n/d00;.values:()[Le/e/a/b/f/n/d00;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b3fa4.  v0:= `@@e.e.a.b.f.n.d00.e` @type ^`e.e.a.b.f.n.d00`[] @kind object;
  #L2b3fa8.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/d00;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b3fae.  v0:= temp @kind object;
  #L2b3fb0.  v0:= (`e.e.a.b.f.n.d00`[]) v0 @kind object;
  #L2b3fb4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.d00` v2 @kind this) @signature `Le/e/a/b/f/n/d00;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b3fe0.  v0:= new `java.lang.StringBuilder`;
  #L2b3fe4.  v1:= "<" @kind object;
  #L2b3fe8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3fee.  v1:= constclass @type ^`e.e.a.b.f.n.d00` @kind object;
  #L2b3ff2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b3ff8.  v1:= temp @kind object;
  #L2b3ffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4000.  v1:= 64I;
  #L2b4004.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b400a.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b4010.  v1:= temp;
  #L2b4012.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b4018.  v1:= temp @kind object;
  #L2b401a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4020.  v1:= " number=" @kind object;
  #L2b4024.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b402a.  v1:= v2.`e.e.a.b.f.n.d00.b` @type ^`int`;
  #L2b402e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4034.  v1:= " name=" @kind object;
  #L2b4038.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b403e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b4044.  v1:= temp @kind object;
  #L2b4046.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b404c.  v1:= 62I;
  #L2b4050.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4056.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b405c.  v0:= temp @kind object;
  #L2b405e.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.d00` v1 @kind this) @signature `Le/e/a/b/f/n/d00;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b3fc8.  v0:= v1.`e.e.a.b.f.n.d00.b` @type ^`int`;
  #L2b3fcc.  return v0;
}
