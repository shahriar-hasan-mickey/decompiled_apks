record `e.e.a.b.f.u.i5` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface {
  `java.util.Map$Entry` `e.e.a.b.f.u.i5.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.u.i5` v0 @kind this, `java.util.Map$Entry` v1 @kind object) @signature `Le/e/a/b/f/u/i5;.<init>:(Ljava/util/Map$Entry;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32eb04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32eb0a.  v0.`e.e.a.b.f.u.i5.b` @type ^`java.util.Map$Entry` := v1 @kind object;
  #L32eb0e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.i5` v0 @kind this, `java.util.Map$Entry` v1 @kind object, `e.e.a.b.f.u.f5` v2 @kind object) @signature `Le/e/a/b/f/u/i5;.<init>:(Ljava/util/Map$Entry;Le/e/a/b/f/u/f5;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L32eb20.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/i5;.<init>:(Ljava/util/Map$Entry;)V` @kind direct;
  #L32eb26.  return @kind void;
}
procedure `e.e.a.b.f.u.g5` `a`(`e.e.a.b.f.u.i5` v1 @kind this) @signature `Le/e/a/b/f/u/i5;.a:()Le/e/a/b/f/u/g5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32ea48.  v0:= v1.`e.e.a.b.f.u.i5.b` @type ^`java.util.Map$Entry` @kind object;
  #L32ea4c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32ea52.  v0:= temp @kind object;
  #L32ea54.  v0:= (`e.e.a.b.f.u.g5`) v0 @kind object;
  #L32ea58.  return v0 @kind object;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.u.i5` v1 @kind this) @signature `Le/e/a/b/f/u/i5;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32ea6c.  v0:= v1.`e.e.a.b.f.u.i5.b` @type ^`java.util.Map$Entry` @kind object;
  #L32ea70.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32ea76.  v0:= temp @kind object;
  #L32ea78.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.u.i5` v2 @kind this) @signature `Le/e/a/b/f/u/i5;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32ea8c.  v0:= v2.`e.e.a.b.f.u.i5.b` @type ^`java.util.Map$Entry` @kind object;
  #L32ea90.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32ea96.  v0:= temp @kind object;
  #L32ea98.  v0:= (`e.e.a.b.f.u.g5`) v0 @kind object;
  #L32ea9c.  v1:= 0I;
  #L32ea9e.  if v0 != 0 then goto L32eaa4;
  #L32eaa2.  return v1 @kind object;
  #L32eaa4.  call temp:= `c`() @signature `Le/e/a/b/f/u/g5;.c:()Le/e/a/b/f/u/b6;` @kind static;
  #L32eaaa.  throw v1;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.u.i5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/i5;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32eabc.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.u.b6` @kind boolean;
  #L32eac0.  if v0 == 0 then goto L32eae2;
  #L32eac4.  v0:= v1.`e.e.a.b.f.u.i5.b` @type ^`java.util.Map$Entry` @kind object;
  #L32eac8.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32eace.  v0:= temp @kind object;
  #L32ead0.  v0:= (`e.e.a.b.f.u.g5`) v0 @kind object;
  #L32ead4.  v2:= (`e.e.a.b.f.u.b6`) v2 @kind object;
  #L32ead8.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/u/k5;.a:(Le/e/a/b/f/u/b6;)Le/e/a/b/f/u/b6;` @kind virtual;
  #L32eade.  v2:= temp @kind object;
  #L32eae0.  return v2 @kind object;
  #L32eae2.  v2:= new `java.lang.IllegalArgumentException`;
  #L32eae6.  v0:= "LazyField now only used for MessageSet, and the value of MessageSet must be an instance of MessageLite" @kind object;
  #L32eaea.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32eaf0.  throw v2;
}
