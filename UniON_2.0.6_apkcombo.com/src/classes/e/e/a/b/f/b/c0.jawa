record `e.e.a.b.f.b.c0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.e0` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.b.c0` v0 @kind this) @signature `Le/e/a/b/f/b/c0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fa8a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fa8aa.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.c0` v0 @kind this, `e.e.a.b.f.b.b0` v1 @kind object) @signature `Le/e/a/b/f/b/c0;.<init>:(Le/e/a/b/f/b/b0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1fa8bc.  call `<init>`(v0) @signature `Le/e/a/b/f/b/c0;.<init>:()V` @kind direct;
  #L1fa8c2.  return @kind void;
}
procedure `byte`[] `a`(`e.e.a.b.f.b.c0` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/c0;.a:([BII)[B` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fa888.  v3:= v3 + v2 @kind int;
  #L1fa88a.  call temp:= `copyOfRange`(v1, v2, v3) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L1fa890.  v1:= temp @kind object;
  #L1fa892.  return v1 @kind object;
}
