record `e.e.a.b.f.u.f4` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `e.e.a.b.f.u.f4.a` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.u.f4` `@@e.e.a.b.f.u.f4.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `e.e.a.b.f.u.f4` `@@e.e.a.b.f.u.f4.c` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `e.e.a.b.f.u.f4` `@@e.e.a.b.f.u.f4.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/f4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32a198.  v0:= new `e.e.a.b.f.u.f4`;
  #L32a19c.  v1:= 1I;
  #L32a19e.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/f4;.<init>:(Z)V` @kind direct;
  #L32a1a4.  `@@e.e.a.b.f.u.f4.d` @type ^`e.e.a.b.f.u.f4` := v0 @kind object;
  #L32a1a8.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.f4` v1 @kind this) @signature `Le/e/a/b/f/u/f4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32a1bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a1c2.  v0:= new `java.util.HashMap`;
  #L32a1c6.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32a1cc.  v1.`e.e.a.b.f.u.f4.a` @type ^`java.util.Map` := v0 @kind object;
  #L32a1d0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.f4` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/u/f4;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32a1e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a1ea.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L32a1f0.  v1:= temp @kind object;
  #L32a1f2.  v0.`e.e.a.b.f.u.f4.a` @type ^`java.util.Map` := v1 @kind object;
  #L32a1f6.  return @kind void;
}
procedure `e.e.a.b.f.u.f4` `a`() @signature `Le/e/a/b/f/u/f4;.a:()Le/e/a/b/f/u/f4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32a0b8.  v0:= new `e.e.a.b.f.u.f4`;
  #L32a0bc.  call `<init>`(v0) @signature `Le/e/a/b/f/u/f4;.<init>:()V` @kind direct;
  #L32a0c2.  return v0 @kind object;
}
procedure `e.e.a.b.f.u.f4` `b`() @signature `Le/e/a/b/f/u/f4;.b:()Le/e/a/b/f/u/f4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32a0d4.  v0:= `@@e.e.a.b.f.u.f4.b` @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a0d8.  if v0 != 0 then goto L32a0fc;
  #L32a0dc.  v1:= constclass @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a0e0.  @monitorenter v1
  #L32a0e2.  v0:= `@@e.e.a.b.f.u.f4.b` @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a0e6.  if v0 != 0 then goto L32a0f2;
  #L32a0ea.  v0:= `@@e.e.a.b.f.u.f4.d` @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a0ee.  `@@e.e.a.b.f.u.f4.b` @type ^`e.e.a.b.f.u.f4` := v0 @kind object;
  #L32a0f2.  @monitorexit v1
  #L32a0f4.  goto L32a0fc;
  #L32a0f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32a0f8.  @monitorexit v1
  #L32a0fa.  throw v0;
  #L32a0fc.  return v0 @kind object;
  catch `java.lang.Throwable` @[L32a0e2..L32a0fa] goto L32a0f6;
}
procedure `e.e.a.b.f.u.f4` `c`() @signature `Le/e/a/b/f/u/f4;.c:()Le/e/a/b/f/u/f4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32a11c.  v0:= constclass @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a120.  v1:= `@@e.e.a.b.f.u.f4.c` @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a124.  if v1 == 0 then goto L32a12a;
  #L32a128.  return v1 @kind object;
  #L32a12a.  @monitorenter v0
  #L32a12c.  v1:= `@@e.e.a.b.f.u.f4.c` @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32a130.  if v1 == 0 then goto L32a138;
  #L32a134.  @monitorexit v0
  #L32a136.  return v1 @kind object;
  #L32a138.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/q4;.a:(Ljava/lang/Class;)Le/e/a/b/f/u/f4;` @kind static;
  #L32a13e.  v1:= temp @kind object;
  #L32a140.  `@@e.e.a.b.f.u.f4.c` @type ^`e.e.a.b.f.u.f4` := v1 @kind object;
  #L32a144.  @monitorexit v0
  #L32a146.  return v1 @kind object;
  #L32a148.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32a14a.  @monitorexit v0
  #L32a14c.  throw v1;
  catch `java.lang.Throwable` @[L32a12c..L32a14c] goto L32a148;
}
procedure `e.e.a.b.f.u.s4$e` `a`(`e.e.a.b.f.u.f4` v2 @kind this, `e.e.a.b.f.u.b6` v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/u/f4;.a:(Le/e/a/b/f/u/b6;I)Le/e/a/b/f/u/s4$e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32a16c.  v0:= v2.`e.e.a.b.f.u.f4.a` @type ^`java.util.Map` @kind object;
  #L32a170.  v1:= new `e.e.a.b.f.u.f4$a`;
  #L32a174.  call `<init>`(v1, v3, v4) @signature `Le/e/a/b/f/u/f4$a;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L32a17a.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32a180.  v3:= temp @kind object;
  #L32a182.  v3:= (`e.e.a.b.f.u.s4$e`) v3 @kind object;
  #L32a186.  return v3 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.f4` v4 @kind this, `e.e.a.b.f.u.s4$e` v5 @kind object) @signature `Le/e/a/b/f/u/f4;.a:(Le/e/a/b/f/u/s4$e;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a208.  v0:= v4.`e.e.a.b.f.u.f4.a` @type ^`java.util.Map` @kind object;
  #L32a20c.  v1:= new `e.e.a.b.f.u.f4$a`;
  #L32a210.  v2:= v5.`e.e.a.b.f.u.s4$e.a` @type ^`e.e.a.b.f.u.b6` @kind object;
  #L32a214.  v3:= v5.`e.e.a.b.f.u.s4$e.d` @type ^`e.e.a.b.f.u.s4$f` @kind object;
  #L32a218.  v3:= v3.`e.e.a.b.f.u.s4$f.b` @type ^`int`;
  #L32a21c.  call `<init>`(v1, v2, v3) @signature `Le/e/a/b/f/u/f4$a;.<init>:(Ljava/lang/Object;I)V` @kind direct;
  #L32a222.  call temp:= `put`(v0, v1, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32a228.  return @kind void;
}
