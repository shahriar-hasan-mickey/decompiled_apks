record `e.e.a.b.f.q.xu` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.q.xu` v0 @kind this) @signature `Le/e/a/b/f/q/xu;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30a00c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30a012.  return @kind void;
}
procedure `int` `compare`(`e.e.a.b.f.q.xu` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/q/xu;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L309f88.  v5:= (`e.e.a.b.f.q.hv`) v5 @kind object;
  #L309f8c.  v6:= (`e.e.a.b.f.q.hv`) v6 @kind object;
  #L309f90.  v0:= new `e.e.a.b.f.q.wu`;
  #L309f94.  call `<init>`(v0, v5) @signature `Le/e/a/b/f/q/wu;.<init>:(Le/e/a/b/f/q/hv;)V` @kind direct;
  #L309f9a.  v1:= new `e.e.a.b.f.q.wu`;
  #L309f9e.  call `<init>`(v1, v6) @signature `Le/e/a/b/f/q/wu;.<init>:(Le/e/a/b/f/q/hv;)V` @kind direct;
  #L309fa4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L309faa.  v2:= temp;
  #L309fac.  if v2 == 0 then goto L309fe2;
  #L309fb0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L309fb6.  v2:= temp;
  #L309fb8.  if v2 == 0 then goto L309fe2;
  #L309fbc.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/q/cv;.zza:()B` @kind interface;
  #L309fc2.  v2:= temp;
  #L309fc4.  v2:= v2 ^& 255;
  #L309fc8.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/q/cv;.zza:()B` @kind interface;
  #L309fce.  v3:= temp;
  #L309fd0.  v3:= v3 ^& 255;
  #L309fd4.  call temp:= `compare`(v2, v3) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L309fda.  v2:= temp;
  #L309fdc.  if v2 == 0 then goto L309fa4;
  #L309fe0.  goto L309ffa;
  #L309fe2.  call temp:= `d`(v5) @signature `Le/e/a/b/f/q/hv;.d:()I` @kind virtual;
  #L309fe8.  v5:= temp;
  #L309fea.  call temp:= `d`(v6) @signature `Le/e/a/b/f/q/hv;.d:()I` @kind virtual;
  #L309ff0.  v6:= temp;
  #L309ff2.  call temp:= `compare`(v5, v6) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L309ff8.  v2:= temp;
  #L309ffa.  return v2;
}
