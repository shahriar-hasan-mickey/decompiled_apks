record `e.e.a.b.f.k.d1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.e1` @kind class {
  `int` `e.e.a.b.f.k.d1.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.k.d1.e` @AccessFlag FINAL_TRANSIENT;
  `e.e.a.b.f.k.e1` `e.e.a.b.f.k.d1.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.d1` v0 @kind this, `e.e.a.b.f.k.e1` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/k/d1;.<init>:(Le/e/a/b/f/k/e1;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24649c.  v0.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` := v1 @kind object;
  #L2464a0.  call `<init>`(v0) @signature `Le/e/a/b/f/k/e1;.<init>:()V` @kind direct;
  #L2464a6.  v0.`e.e.a.b.f.k.d1.d` @type ^`int` := v2;
  #L2464aa.  v0.`e.e.a.b.f.k.d1.e` @type ^`int` := v3;
  #L2464ae.  return @kind void;
}
procedure `e.e.a.b.f.k.e1` `a`(`e.e.a.b.f.k.d1` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/k/d1;.a:(II)Le/e/a/b/f/k/e1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L246364.  v0:= v2.`e.e.a.b.f.k.d1.e` @type ^`int`;
  #L246368.  call `a`(v3, v4, v0) @signature `Le/e/a/b/f/k/r;.a:(III)V` @kind static;
  #L24636e.  v0:= v2.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` @kind object;
  #L246372.  v1:= v2.`e.e.a.b.f.k.d1.d` @type ^`int`;
  #L246376.  v3:= v3 + v1 @kind int;
  #L246378.  v4:= v4 + v1 @kind int;
  #L24637a.  call temp:= `a`(v0, v3, v4) @signature `Le/e/a/b/f/k/e1;.a:(II)Le/e/a/b/f/k/e1;` @kind virtual;
  #L246380.  v3:= temp @kind object;
  #L246382.  return v3 @kind object;
}
procedure `int` `c`(`e.e.a.b.f.k.d1` v2 @kind this) @signature `Le/e/a/b/f/k/d1;.c:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2463d0.  v0:= v2.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` @kind object;
  #L2463d4.  call temp:= `d`(v0) @signature `Le/e/a/b/f/k/y0;.d:()I` @kind virtual;
  #L2463da.  v0:= temp;
  #L2463dc.  v1:= v2.`e.e.a.b.f.k.d1.d` @type ^`int`;
  #L2463e0.  v0:= v0 + v1 @kind int;
  #L2463e2.  v1:= v2.`e.e.a.b.f.k.d1.e` @type ^`int`;
  #L2463e6.  v0:= v0 + v1 @kind int;
  #L2463e8.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.k.d1` v2 @kind this) @signature `Le/e/a/b/f/k/d1;.d:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2463ac.  v0:= v2.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` @kind object;
  #L2463b0.  call temp:= `d`(v0) @signature `Le/e/a/b/f/k/y0;.d:()I` @kind virtual;
  #L2463b6.  v0:= temp;
  #L2463b8.  v1:= v2.`e.e.a.b.f.k.d1.d` @type ^`int`;
  #L2463bc.  v0:= v0 + v1 @kind int;
  #L2463be.  return v0;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.k.d1` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/k/d1;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2463fc.  v0:= v2.`e.e.a.b.f.k.d1.e` @type ^`int`;
  #L246400.  v1:= "index" @kind object;
  #L246404.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/k/r;.a:(IILjava/lang/String;)I` @kind static;
  #L24640a.  v0:= v2.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` @kind object;
  #L24640e.  v1:= v2.`e.e.a.b.f.k.d1.d` @type ^`int`;
  #L246412.  v3:= v3 + v1 @kind int;
  #L246414.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24641a.  v3:= temp @kind object;
  #L24641c.  return v3 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.d1` v1 @kind this) @signature `Le/e/a/b/f/k/d1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246394.  v0:= v1.`e.e.a.b.f.k.d1.e` @type ^`int`;
  #L246398.  return v0;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.k.d1` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/k/d1;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L246450.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/k/d1;.a:(II)Le/e/a/b/f/k/e1;` @kind virtual;
  #L246456.  v1:= temp @kind object;
  #L246458.  return v1 @kind object;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.k.d1` v1 @kind this) @signature `Le/e/a/b/f/k/d1;.zzb:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L246430.  v0:= v1.`e.e.a.b.f.k.d1.f` @type ^`e.e.a.b.f.k.e1` @kind object;
  #L246434.  call temp:= `zzb`(v0) @signature `Le/e/a/b/f/k/y0;.zzb:()[Ljava/lang/Object;` @kind virtual;
  #L24643a.  v0:= temp @kind object;
  #L24643c.  return v0 @kind object;
}
