record `e.e.a.b.f.r.a0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.r.q` @kind class {
  `java.lang.Object` `e.e.a.b.f.r.a0.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.r.a0.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.r.d0` `e.e.a.b.f.r.a0.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.a0` v0 @kind this, `e.e.a.b.f.r.d0` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/r/a0;.<init>:(Le/e/a/b/f/r/d0;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30c8fc.  v0.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` := v1 @kind object;
  #L30c900.  call `<init>`(v0) @signature `Le/e/a/b/f/r/q;.<init>:()V` @kind direct;
  #L30c906.  v1:= v1.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30c90a.  v1:= v1[v2] @kind object;
  #L30c90e.  v0.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` := v1 @kind object;
  #L30c912.  v0.`e.e.a.b.f.r.a0.c` @type ^`int` := v2;
  #L30c916.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.r.a0` v3 @kind this) @signature `Le/e/a/b/f/r/a0;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30c928.  v0:= v3.`e.e.a.b.f.r.a0.c` @type ^`int`;
  #L30c92c.  v1:= -1I;
  #L30c92e.  if v0 == v1 then goto L30c966;
  #L30c932.  v1:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c936.  call temp:= `size`(v1) @signature `Le/e/a/b/f/r/d0;.size:()I` @kind virtual;
  #L30c93c.  v1:= temp;
  #L30c93e.  if v0 >= v1 then goto L30c966;
  #L30c942.  v0:= v3.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c946.  v1:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c94a.  v1:= v1.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30c94e.  v2:= v3.`e.e.a.b.f.r.a0.c` @type ^`int`;
  #L30c952.  v1:= v1[v2] @kind object;
  #L30c956.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30c95c.  v0:= temp;
  #L30c95e.  if v0 != 0 then goto L30c964;
  #L30c962.  goto L30c966;
  #L30c964.  return @kind void;
  #L30c966.  v0:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c96a.  v1:= v3.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c96e.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/r/d0;.b:(Le/e/a/b/f/r/d0;Ljava/lang/Object;)I` @kind static;
  #L30c974.  v0:= temp;
  #L30c976.  v3.`e.e.a.b.f.r.a0.c` @type ^`int` := v0;
  #L30c97a.  return @kind void;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.r.a0` v1 @kind this) @signature `Le/e/a/b/f/r/a0;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30c830.  v0:= v1.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c834.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.r.a0` v2 @kind this) @signature `Le/e/a/b/f/r/a0;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30c848.  v0:= v2.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c84c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30c852.  v0:= temp @kind object;
  #L30c854.  if v0 == 0 then goto L30c866;
  #L30c858.  v1:= v2.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c85c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30c862.  v0:= temp @kind object;
  #L30c864.  return v0 @kind object;
  #L30c866.  call `a`(v2) @signature `Le/e/a/b/f/r/a0;.a:()V` @kind direct;
  #L30c86c.  v0:= v2.`e.e.a.b.f.r.a0.c` @type ^`int`;
  #L30c870.  v1:= -1I;
  #L30c872.  if v0 != v1 then goto L30c87a;
  #L30c876.  v0:= 0I;
  #L30c878.  return v0 @kind object;
  #L30c87a.  v1:= v2.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c87e.  v1:= v1.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30c882.  v0:= v1[v0] @kind object;
  #L30c886.  return v0 @kind object;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.r.a0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/a0;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30c898.  v0:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c89c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30c8a2.  v0:= temp @kind object;
  #L30c8a4.  if v0 == 0 then goto L30c8b6;
  #L30c8a8.  v1:= v3.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c8ac.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30c8b2.  v4:= temp @kind object;
  #L30c8b4.  return v4 @kind object;
  #L30c8b6.  call `a`(v3) @signature `Le/e/a/b/f/r/a0;.a:()V` @kind direct;
  #L30c8bc.  v0:= v3.`e.e.a.b.f.r.a0.c` @type ^`int`;
  #L30c8c0.  v1:= -1I;
  #L30c8c2.  if v0 != v1 then goto L30c8d8;
  #L30c8c6.  v0:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c8ca.  v1:= v3.`e.e.a.b.f.r.a0.b` @type ^`java.lang.Object` @kind object;
  #L30c8ce.  call temp:= `put`(v0, v1, v4) @signature `Le/e/a/b/f/r/d0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30c8d4.  v4:= 0I;
  #L30c8d6.  return v4 @kind object;
  #L30c8d8.  v1:= v3.`e.e.a.b.f.r.a0.d` @type ^`e.e.a.b.f.r.d0` @kind object;
  #L30c8dc.  v1:= v1.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30c8e0.  v2:= v1[v0] @kind object;
  #L30c8e4.  v1[v0]:= v4 @kind object;
  #L30c8e8.  return v2 @kind object;
}
