record `e.e.a.b.f.n.e2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@e.e.a.b.f.n.e2.a` @AccessFlag STATIC_FINAL;
global `byte`[] `@@e.e.a.b.f.n.e2.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/e2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L27f240.  v0:= "UTF-8" @kind object;
  #L27f244.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L27f24a.  v0:= temp @kind object;
  #L27f24c.  `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L27f250.  v0:= "ISO-8859-1" @kind object;
  #L27f254.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L27f25a.  v0:= 0I;
  #L27f25c.  v1:= new `byte`[v0];
  #L27f260.  `@@e.e.a.b.f.n.e2.b` @type ^`byte`[] := v1 @kind object;
  #L27f264.  v1:= `@@e.e.a.b.f.n.e2.b` @type ^`byte`[] @kind object;
  #L27f268.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L27f26e.  v3:= `@@e.e.a.b.f.n.e2.b` @type ^`byte`[] @kind object;
  #L27f272.  v1:= length @variable v3;
  #L27f274.  v1:= new `e.e.a.b.f.n.s0`;
  #L27f278.  v4:= 0I;
  #L27f27a.  v5:= 0I;
  #L27f27c.  v6:= 0I;
  #L27f27e.  v7:= 0I;
  #L27f280.  v2:= v1 @kind object;
  #L27f282.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Le/e/a/b/f/n/s0;.<init>:([BIIZLe/e/a/b/f/n/r0;)V` @kind direct;
  #L27f288.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/n/s0;.b:(I)I` @kind virtual;
  #L27f28e.  return @kind void;
  #L27f290.  v0:= Exception @type ^`e.e.a.b.f.n.g2` @kind object;
  #L27f292.  v1:= new `java.lang.IllegalArgumentException`;
  #L27f296.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L27f29c.  throw v1;
  catch `e.e.a.b.f.n.g2` @[L27f288..L27f28e] goto L27f290;
}
procedure `int` `a`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/n/e2;.a:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L27f17c.  v0:= v2;
  #L27f17e.  v2:= v4;
  #L27f180.  v1:= v4 + v5 @kind int;
  #L27f184.  if v2 >= v1 then goto L27f198;
  #L27f188.  v0:= v0 * 31;
  #L27f18c.  v1:= v3[v2] @kind byte;
  #L27f190.  v0:= v0 + v1 @kind int;
  #L27f192.  v2:= v2 + 1;
  #L27f196.  goto L27f180;
  #L27f198.  return v0;
}
procedure `int` `a`(`long` v2 ) @signature `Le/e/a/b/f/n/e2;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L27f118.  v0:= 32I;
  #L27f11c.  v0:= v2 ^>> v0 @kind long;
  #L27f120.  v2:= v2 ^~ v0 @kind long;
  #L27f122.  v3:= (`int`) v2 @kind l2i;
  #L27f124.  return v3;
}
procedure `int` `a`(`boolean` v0 ) @signature `Le/e/a/b/f/n/e2;.a:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L27f138.  if v0 == 0 then goto L27f142;
  #L27f13c.  v0:= 1231I;
  #L27f140.  return v0;
  #L27f142.  v0:= 1237I;
  #L27f146.  return v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L27f1ac.  if v0 == 0 then goto L27f1b2;
  #L27f1b0.  return v0 @kind object;
  #L27f1b2.  v0:= 0I;
  #L27f1b4.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L27f1ec.  v0:= (`e.e.a.b.f.n.g3`) v0 @kind object;
  #L27f1f0.  call temp:= `n`(v0) @signature `Le/e/a/b/f/n/g3;.n:()Le/e/a/b/f/n/f3;` @kind interface;
  #L27f1f6.  v0:= temp @kind object;
  #L27f1f8.  v1:= (`e.e.a.b.f.n.g3`) v1 @kind object;
  #L27f1fc.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/n/f3;.a:(Le/e/a/b/f/n/g3;)Le/e/a/b/f/n/f3;` @kind interface;
  #L27f202.  v0:= temp @kind object;
  #L27f204.  call temp:= `k`(v0) @signature `Le/e/a/b/f/n/f3;.k:()Le/e/a/b/f/n/g3;` @kind interface;
  #L27f20a.  v0:= temp @kind object;
  #L27f20c.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/n/e2;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L27f1c8.  if v0 == 0 then goto L27f1ce;
  #L27f1cc.  return v0 @kind object;
  #L27f1ce.  v0:= new `java.lang.NullPointerException`;
  #L27f1d2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27f1d8.  throw v0;
}
procedure `boolean` `a`(`e.e.a.b.f.n.g3` v1 @kind object) @signature `Le/e/a/b/f/n/e2;.a:(Le/e/a/b/f/n/g3;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L27f0f4.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.n.u` @kind boolean;
  #L27f0f8.  if v0 != 0 then goto L27f100;
  #L27f0fc.  v1:= 0I;
  #L27f0fe.  return v1;
  #L27f100.  v1:= (`e.e.a.b.f.n.u`) v1 @kind object;
  #L27f104.  v1:= 0I;
  #L27f106.  throw v1;
}
procedure `boolean` `a`(`byte`[] v0 @kind object) @signature `Le/e/a/b/f/n/e2;.a:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L27f0d8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/n/c5;.a:([B)Z` @kind static;
  #L27f0de.  v0:= temp;
  #L27f0e0.  return v0;
}
procedure `java.lang.String` `b`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/n/e2;.b:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L27f220.  v0:= new `java.lang.String`;
  #L27f224.  v1:= `@@e.e.a.b.f.n.e2.a` @type ^`java.nio.charset.Charset` @kind object;
  #L27f228.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L27f22e.  return v0 @kind object;
}
procedure `int` `c`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/n/e2;.c:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L27f158.  v0:= length @variable v2;
  #L27f15a.  v1:= 0I;
  #L27f15c.  call temp:= `a`(v0, v2, v1, v0) @signature `Le/e/a/b/f/n/e2;.a:(I[BII)I` @kind static;
  #L27f162.  v2:= temp;
  #L27f164.  if v2 != 0 then goto L27f16a;
  #L27f168.  v2:= 1I;
  #L27f16a.  return v2;
}
