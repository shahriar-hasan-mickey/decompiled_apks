record `e.e.a.b.f.e.f` @kind class @AccessFlag FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `e.e.a.b.f.e.f.b` @AccessFlag PRIVATE;
  `long` `e.e.a.b.f.e.f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.e.f` v0 @kind this, `java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Le/e/a/b/f/e/f;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L218470.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L218476.  v2:= -1L;
  #L21847a.  v0.`e.e.a.b.f.e.f.c` @type ^`long` := v2 @kind wide;
  #L21847e.  if v1 == 0 then goto L21848e;
  #L218482.  v1:= 1048577L;
  #L218488.  v0.`e.e.a.b.f.e.f.b` @type ^`long` := v1 @kind wide;
  #L21848c.  return @kind void;
  #L21848e.  v1:= 0I;
  #L218490.  throw v1;
}
procedure `int` `available`(`e.e.a.b.f.e.f` v4 @kind this) @signature `Le/e/a/b/f/e/f;.available:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L218378.  v0:= v4.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L21837c.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L218382.  v0:= temp;
  #L218384.  v0:= (`long`) v0 @kind i2l;
  #L218386.  v2:= v4.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L21838a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L218390.  v0:= temp @kind wide;
  #L218392.  v1:= (`int`) v0 @kind l2i;
  #L218394.  return v1;
}
procedure `void` `mark`(`e.e.a.b.f.e.f` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/e/f;.mark:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2184a4.  @monitorenter v2
  #L2184a6.  v0:= v2.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2184aa.  call `mark`(v0, v3) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L2184b0.  v0:= v2.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L2184b4.  v2.`e.e.a.b.f.e.f.c` @type ^`long` := v0 @kind wide;
  #L2184b8.  @monitorexit v2
  #L2184ba.  return @kind void;
  #L2184bc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2184be.  @monitorexit v2
  #L2184c0.  throw v3;
  catch `java.lang.Throwable` @[L2184a6..L2184b8] goto L2184bc;
}
procedure `int` `read`(`e.e.a.b.f.e.f` v6 @kind this) @signature `Le/e/a/b/f/e/f;.read:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2183a8.  v0:= v6.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L2183ac.  v2:= -1I;
  #L2183ae.  v3:= 0L;
  #L2183b2.  v5:= lcmp(v0, v3);
  #L2183b6.  if v5 != 0 then goto L2183bc;
  #L2183ba.  return v2;
  #L2183bc.  v0:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2183c0.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2183c6.  v0:= temp;
  #L2183c8.  if v0 == v2 then goto L2183da;
  #L2183cc.  v1:= v6.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L2183d0.  v3:= -1L;
  #L2183d4.  v1:= v1 + v3 @kind long;
  #L2183d6.  v6.`e.e.a.b.f.e.f.b` @type ^`long` := v1 @kind wide;
  #L2183da.  return v0;
}
procedure `int` `read`(`e.e.a.b.f.e.f` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Le/e/a/b/f/e/f;.read:([BII)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2183ec.  v0:= v6.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L2183f0.  v2:= -1I;
  #L2183f2.  v3:= 0L;
  #L2183f6.  v5:= lcmp(v0, v3);
  #L2183fa.  if v5 != 0 then goto L218400;
  #L2183fe.  return v2;
  #L218400.  v3:= (`long`) v9 @kind i2l;
  #L218402.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L218408.  v0:= temp @kind wide;
  #L21840a.  v9:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L21840e.  v1:= (`int`) v0 @kind l2i;
  #L218410.  call temp:= `read`(v9, v7, v8, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L218416.  v7:= temp;
  #L218418.  if v7 == v2 then goto L218428;
  #L21841c.  v8:= v6.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L218420.  v0:= (`long`) v7 @kind i2l;
  #L218422.  v8:= v8 - v0 @kind long;
  #L218424.  v6.`e.e.a.b.f.e.f.b` @type ^`long` := v8 @kind wide;
  #L218428.  return v7;
}
procedure `void` `reset`(`e.e.a.b.f.e.f` v5 @kind this) @signature `Le/e/a/b/f/e/f;.reset:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2184e0.  @monitorenter v5
  #L2184e2.  v0:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L2184e6.  call temp:= `markSupported`(v0) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L2184ec.  v0:= temp;
  #L2184ee.  if v0 == 0 then goto L218528;
  #L2184f2.  v0:= v5.`e.e.a.b.f.e.f.c` @type ^`long` @kind wide;
  #L2184f6.  v2:= -1L;
  #L2184fa.  v4:= lcmp(v0, v2);
  #L2184fe.  if v4 == 0 then goto L218518;
  #L218502.  v0:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L218506.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L21850c.  v0:= v5.`e.e.a.b.f.e.f.c` @type ^`long` @kind wide;
  #L218510.  v5.`e.e.a.b.f.e.f.b` @type ^`long` := v0 @kind wide;
  #L218514.  @monitorexit v5
  #L218516.  return @kind void;
  #L218518.  v0:= new `java.io.IOException`;
  #L21851c.  v1:= "Mark not set" @kind object;
  #L218520.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218526.  throw v0;
  #L218528.  v0:= new `java.io.IOException`;
  #L21852c.  v1:= "Mark not supported" @kind object;
  #L218530.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218536.  throw v0;
  #L218538.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21853a.  @monitorexit v5
  #L21853c.  throw v0;
  catch `java.lang.Throwable` @[L2184e2..L218514] goto L218538;
  catch `java.lang.Throwable` @[L218518..L218538] goto L218538;
}
procedure `long` `skip`(`e.e.a.b.f.e.f` v2 @kind this, `long` v3 ) @signature `Le/e/a/b/f/e/f;.skip:(J)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L21843c.  v0:= v2.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L218440.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L218446.  v3:= temp @kind wide;
  #L218448.  v0:= v2.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L21844c.  call temp:= `skip`(v0, v3) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L218452.  v3:= temp @kind wide;
  #L218454.  v0:= v2.`e.e.a.b.f.e.f.b` @type ^`long` @kind wide;
  #L218458.  v0:= v0 - v3 @kind long;
  #L21845a.  v2.`e.e.a.b.f.e.f.b` @type ^`long` := v0 @kind wide;
  #L21845e.  return v3 @kind wide;
}
