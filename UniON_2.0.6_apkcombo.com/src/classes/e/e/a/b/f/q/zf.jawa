record `e.e.a.b.f.q.zf` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.s5` @kind class {
  `e.e.a.b.f.q.bi` `e.e.a.b.f.q.zf.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.zf` v0 @kind this, `e.e.a.b.f.q.bi` v1 @kind object) @signature `Le/e/a/b/f/q/zf;.<init>:(Le/e/a/b/f/q/bi;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f30d4.  v0.`e.e.a.b.f.q.zf.b` @type ^`e.e.a.b.f.q.bi` := v1 @kind object;
  #L2f30d8.  call `<init>`(v0) @signature `Le/e/a/b/f/q/s5;.<init>:()V` @kind direct;
  #L2f30de.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.zf` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/zf;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f1c2c.  v0:= v1.`e.e.a.b.f.q.zf.b` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f1c30.  v0:= v0.`e.e.a.b.f.q.bi.d` @type ^`java.util.Map` @kind object;
  #L2f1c34.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2f1c3a.  v0:= temp @kind object;
  #L2f1c3c.  if v0 == 0 then goto L2f1c4e;
  #L2f1c40.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2f1c46.  v2:= temp;
  #L2f1c48.  goto L2f1c4c;
  #L2f1c4a.  v2:= 0I;
  #L2f1c4c.  return v2;
  #L2f1c4e.  v2:= 0I;
  #L2f1c50.  throw v2;
  catch `java.lang.ClassCastException` @[L2f1c40..L2f1c48] goto L2f1c4a;
  catch `java.lang.NullPointerException` @[L2f1c40..L2f1c48] goto L2f1c4a;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.zf` v2 @kind this) @signature `Le/e/a/b/f/q/zf;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2f2168.  v0:= new `e.e.a.b.f.q.ah`;
  #L2f216c.  v1:= v2.`e.e.a.b.f.q.zf.b` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f2170.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/ah;.<init>:(Le/e/a/b/f/q/bi;)V` @kind direct;
  #L2f2176.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.q.zf` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/zf;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f1c74.  call temp:= `contains`(v1, v2) @signature `Le/e/a/b/f/q/zf;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f1c7a.  v0:= temp;
  #L2f1c7c.  if v0 != 0 then goto L2f1c84;
  #L2f1c80.  v2:= 0I;
  #L2f1c82.  return v2;
  #L2f1c84.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2f1c88.  v0:= v1.`e.e.a.b.f.q.zf.b` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f1c8c.  v0:= v0.`e.e.a.b.f.q.bi.e` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2f1c90.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2f1c96.  v2:= temp @kind object;
  #L2f1c98.  call `a`(v0, v2) @signature `Le/e/a/b/f/q/jq;.a:(Le/e/a/b/f/q/jq;Ljava/lang/Object;)V` @kind static;
  #L2f1c9e.  v2:= 1I;
  #L2f1ca0.  return v2;
}
procedure `java.util.Map` `zza`(`e.e.a.b.f.q.zf` v1 @kind this) @signature `Le/e/a/b/f/q/zf;.zza:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L2f2188.  v0:= v1.`e.e.a.b.f.q.zf.b` @type ^`e.e.a.b.f.q.bi` @kind object;
  #L2f218c.  return v0 @kind object;
}
