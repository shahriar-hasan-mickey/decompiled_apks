record `e.e.a.b.f.n.zb` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.zb.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/zb;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2968a0.  v0:= new `e.e.a.b.f.n.zb`;
  #L2968a4.  call `<init>`(v0) @signature `Le/e/a/b/f/n/zb;.<init>:()V` @kind direct;
  #L2968aa.  `@@e.e.a.b.f.n.zb.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2968ae.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.zb` v0 @kind this) @signature `Le/e/a/b/f/n/zb;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2968c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2968c6.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.zb` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/zb;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L29687c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/ac;.a:(I)Le/e/a/b/f/n/ac;` @kind static;
  #L296882.  v1:= temp @kind object;
  #L296884.  if v1 == 0 then goto L29688c;
  #L296888.  v1:= 1I;
  #L29688a.  return v1;
  #L29688c.  v1:= 0I;
  #L29688e.  return v1;
}
