record `e.e.a.b.f.b.a3` @kind class @AccessFlag FINAL {
  `java.lang.String` `e.e.a.b.f.b.a3.a` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.a3.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.a3` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/b/a3;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20bf80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20bf86.  v0.`e.e.a.b.f.b.a3.a` @type ^`java.lang.String` := v1 @kind object;
  #L20bf8a.  v1:= 0I;
  #L20bf8c.  v0.`e.e.a.b.f.b.a3.b` @type ^`int` := v1;
  #L20bf90.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.b.a3` v2 @kind this) @signature `Le/e/a/b/f/b/a3;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L20bee4.  v0:= v2.`e.e.a.b.f.b.a3.b` @type ^`int`;
  #L20bee8.  v1:= v2.`e.e.a.b.f.b.a3.a` @type ^`java.lang.String` @kind object;
  #L20beec.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20bef2.  v1:= temp;
  #L20bef4.  if v0 >= v1 then goto L20befc;
  #L20bef8.  v0:= 1I;
  #L20befa.  return v0;
  #L20befc.  v0:= 0I;
  #L20befe.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.b.a3` v6 @kind this) @signature `Le/e/a/b/f/b/a3;.b:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20bf10.  v0:= v6.`e.e.a.b.f.b.a3.a` @type ^`java.lang.String` @kind object;
  #L20bf14.  v1:= v6.`e.e.a.b.f.b.a3.b` @type ^`int`;
  #L20bf18.  v2:= v1 + 1;
  #L20bf1c.  v6.`e.e.a.b.f.b.a3.b` @type ^`int` := v2;
  #L20bf20.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20bf26.  v0:= temp;
  #L20bf28.  v1:= 55296I;
  #L20bf2e.  if v0 >= v1 then goto L20bf34;
  #L20bf32.  return v0;
  #L20bf34.  v0:= v0 ^& 8191;
  #L20bf38.  v2:= 13I;
  #L20bf3c.  v3:= v6.`e.e.a.b.f.b.a3.a` @type ^`java.lang.String` @kind object;
  #L20bf40.  v4:= v6.`e.e.a.b.f.b.a3.b` @type ^`int`;
  #L20bf44.  v5:= v4 + 1;
  #L20bf48.  v6.`e.e.a.b.f.b.a3.b` @type ^`int` := v5;
  #L20bf4c.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20bf52.  v3:= temp;
  #L20bf54.  if v3 < v1 then goto L20bf66;
  #L20bf58.  v3:= v3 ^& 8191;
  #L20bf5c.  v3:= v3 ^< v2 @kind int;
  #L20bf5e.  v0:= v0 ^| v3 @kind int;
  #L20bf60.  v2:= v2 + 13;
  #L20bf64.  goto L20bf3c;
  #L20bf66.  v1:= v3 ^< v2 @kind int;
  #L20bf6a.  v0:= v0 ^| v1 @kind int;
  #L20bf6c.  return v0;
}
