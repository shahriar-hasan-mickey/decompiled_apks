record `e.e.a.b.f.k.u0` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L245c78.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L245c7c.  if v0 == 0 then goto L245c8e;
  #L245c80.  v1:= (`byte`[]) v1 @kind object;
  #L245c84.  v1:= v1[v2] @kind byte;
  #L245c88.  v1:= v1 ^& 255;
  #L245c8c.  return v1;
  #L245c8e.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L245c92.  if v0 == 0 then goto L245ca2;
  #L245c96.  v1:= (`short`[]) v1 @kind object;
  #L245c9a.  v1:= v1[v2] @kind short;
  #L245c9e.  v1:= (`char`) v1 @kind i2c;
  #L245ca0.  return v1;
  #L245ca2.  v1:= (`int`[]) v1 @kind object;
  #L245ca6.  v1:= v1[v2];
  #L245caa.  return v1;
}
procedure `int` `a`(`java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object, `int`[] v13 @kind object, `java.lang.Object`[] v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L245ce4.  call temp:= `a`(v9) @signature `Le/e/a/b/f/k/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L245cea.  v0:= temp;
  #L245cec.  v1:= v0 ^& v11 @kind int;
  #L245cf0.  call temp:= `a`(v12, v1) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L245cf6.  v2:= temp;
  #L245cf8.  v3:= -1I;
  #L245cfa.  if v2 == 0 then goto L245d66;
  #L245cfe.  v4:= ~v11 @kind int;
  #L245d00.  v0:= v0 ^& v4 @kind int;
  #L245d02.  v5:= -1I;
  #L245d04.  v2:= v2 + v3 @kind int;
  #L245d06.  v6:= v13[v2];
  #L245d0a.  v7:= v6 ^& v4 @kind int;
  #L245d0e.  if v7 != v0 then goto L245d56;
  #L245d12.  v7:= v14[v2] @kind object;
  #L245d16.  call temp:= `a`(v9, v7) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L245d1c.  v7:= temp;
  #L245d1e.  if v7 == 0 then goto L245d56;
  #L245d22.  if v15 == 0 then goto L245d36;
  #L245d26.  v7:= v15[v2] @kind object;
  #L245d2a.  call temp:= `a`(v10, v7) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L245d30.  v7:= temp;
  #L245d32.  if v7 == 0 then goto L245d56;
  #L245d36.  v9:= v6 ^& v11 @kind int;
  #L245d3a.  if v5 != v3 then goto L245d46;
  #L245d3e.  call `a`(v12, v1, v9) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L245d44.  goto L245d54;
  #L245d46.  v10:= v13[v5];
  #L245d4a.  v10:= v10 ^& v4 @kind int;
  #L245d4c.  v9:= v9 ^& v11 @kind int;
  #L245d4e.  v9:= v9 ^| v10 @kind int;
  #L245d50.  v13[v5]:= v9;
  #L245d54.  return v2;
  #L245d56.  v5:= v6 ^& v11 @kind int;
  #L245d5a.  if v5 == 0 then goto L245d66;
  #L245d5e.  v8:= v5;
  #L245d60.  v5:= v2;
  #L245d62.  v2:= v8;
  #L245d64.  goto L245d04;
  #L245d66.  return v3;
}
procedure `java.lang.Object` `a`(`int` v3 ) @signature `Le/e/a/b/f/k/u0;.a:(I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L245d78.  v0:= 2I;
  #L245d7a.  if v3 < v0 then goto L245db4;
  #L245d7e.  v0:= 2.0F;
  #L245d82.  if v3 > v0 then goto L245db4;
  #L245d86.  call temp:= `highestOneBit`(v3) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L245d8c.  v0:= temp;
  #L245d8e.  if v0 != v3 then goto L245db4;
  #L245d92.  v0:= 256I;
  #L245d96.  if v3 > v0 then goto L245da0;
  #L245d9a.  v3:= new `byte`[v3];
  #L245d9e.  return v3 @kind object;
  #L245da0.  v0:= 65536I;
  #L245da4.  if v3 > v0 then goto L245dae;
  #L245da8.  v3:= new `short`[v3];
  #L245dac.  return v3 @kind object;
  #L245dae.  v3:= new `int`[v3];
  #L245db2.  return v3 @kind object;
  #L245db4.  v0:= new `java.lang.IllegalArgumentException`;
  #L245db8.  v1:= new `java.lang.StringBuilder`;
  #L245dbc.  v2:= 52I;
  #L245dc0.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L245dc6.  v2:= "must be power of 2 between 2^1 and 2^30: " @kind object;
  #L245dca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L245dd0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L245dd6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L245ddc.  v3:= temp @kind object;
  #L245dde.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L245de4.  throw v0;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @AccessFlag STATIC {
    temp;
    v0;

  #L245df8.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L245dfc.  if v0 == 0 then goto L245e0c;
  #L245e00.  v1:= (`byte`[]) v1 @kind object;
  #L245e04.  v3:= (`byte`) v3 @kind i2b;
  #L245e06.  v1[v2]:= v3 @kind byte;
  #L245e0a.  return @kind void;
  #L245e0c.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L245e10.  if v0 == 0 then goto L245e20;
  #L245e14.  v1:= (`short`[]) v1 @kind object;
  #L245e18.  v3:= (`short`) v3 @kind i2s;
  #L245e1a.  v1[v2]:= v3 @kind short;
  #L245e1e.  return @kind void;
  #L245e20.  v1:= (`int`[]) v1 @kind object;
  #L245e24.  v1[v2]:= v3;
  #L245e28.  return @kind void;
}
procedure `int` `b`(`int` v1 ) @signature `Le/e/a/b/f/k/u0;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L245cbc.  v0:= 32I;
  #L245cc0.  if v1 >= v0 then goto L245cc8;
  #L245cc4.  v0:= 4I;
  #L245cc6.  goto L245cca;
  #L245cc8.  v0:= 2I;
  #L245cca.  v1:= v1 + 1;
  #L245cce.  v0:= v0 * v1 @kind int;
  #L245cd2.  return v0;
}
