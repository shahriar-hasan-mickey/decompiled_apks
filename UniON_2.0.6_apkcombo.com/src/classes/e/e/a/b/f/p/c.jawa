record `e.e.a.b.f.p.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `e.e.a.b.f.p.c.a` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.p.b` `e.e.a.b.f.p.c.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.p.b` `e.e.a.b.f.p.c.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.p.c` v1 @kind this, `java.lang.String` v2 @kind object, `e.e.a.b.f.p.a` v3 @kind object) @signature `Le/e/a/b/f/p/c;.<init>:(Ljava/lang/String;Le/e/a/b/f/p/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d0618.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d061e.  v3:= new `e.e.a.b.f.p.b`;
  #L2d0622.  v0:= 0I;
  #L2d0624.  call `<init>`(v3, v0) @signature `Le/e/a/b/f/p/b;.<init>:(Le/e/a/b/f/p/a;)V` @kind direct;
  #L2d062a.  v1.`e.e.a.b.f.p.c.b` @type ^`e.e.a.b.f.p.b` := v3 @kind object;
  #L2d062e.  v3:= v1.`e.e.a.b.f.p.c.b` @type ^`e.e.a.b.f.p.b` @kind object;
  #L2d0632.  v1.`e.e.a.b.f.p.c.c` @type ^`e.e.a.b.f.p.b` := v3 @kind object;
  #L2d0636.  if v2 == 0 then goto L2d0640;
  #L2d063a.  v1.`e.e.a.b.f.p.c.a` @type ^`java.lang.String` := v2 @kind object;
  #L2d063e.  return @kind void;
  #L2d0640.  throw v0;
}
procedure `e.e.a.b.f.p.c` `b`(`e.e.a.b.f.p.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/p/c;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/p/c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2d051c.  v0:= new `e.e.a.b.f.p.b`;
  #L2d0520.  v1:= 0I;
  #L2d0522.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/p/b;.<init>:(Le/e/a/b/f/p/a;)V` @kind direct;
  #L2d0528.  v1:= v2.`e.e.a.b.f.p.c.c` @type ^`e.e.a.b.f.p.b` @kind object;
  #L2d052c.  v1.`e.e.a.b.f.p.b.c` @type ^`e.e.a.b.f.p.b` := v0 @kind object;
  #L2d0530.  v2.`e.e.a.b.f.p.c.c` @type ^`e.e.a.b.f.p.b` := v0 @kind object;
  #L2d0534.  v0.`e.e.a.b.f.p.b.b` @type ^`java.lang.Object` := v4 @kind object;
  #L2d0538.  v0.`e.e.a.b.f.p.b.a` @type ^`java.lang.String` := v3 @kind object;
  #L2d053c.  return v2 @kind object;
}
procedure `e.e.a.b.f.p.c` `a`(`e.e.a.b.f.p.c` v0 @kind this, `java.lang.String` v1 @kind object, `float` v2 ) @signature `Le/e/a/b/f/p/c;.a:(Ljava/lang/String;F)Le/e/a/b/f/p/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d04d4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(F)Ljava/lang/String;` @kind static;
  #L2d04da.  v1:= temp @kind object;
  #L2d04dc.  v2:= "confidence" @kind object;
  #L2d04e0.  call temp:= `b`(v0, v2, v1) @signature `Le/e/a/b/f/p/c;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/p/c;` @kind direct;
  #L2d04e6.  return v0 @kind object;
}
procedure `e.e.a.b.f.p.c` `a`(`e.e.a.b.f.p.c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/p/c;.a:(Ljava/lang/String;I)Le/e/a/b/f/p/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d04f8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d04fe.  v1:= temp @kind object;
  #L2d0500.  v2:= "index" @kind object;
  #L2d0504.  call temp:= `b`(v0, v2, v1) @signature `Le/e/a/b/f/p/c;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/p/c;` @kind direct;
  #L2d050a.  return v0 @kind object;
}
procedure `e.e.a.b.f.p.c` `a`(`e.e.a.b.f.p.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/p/c;.a:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/p/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d04bc.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/p/c;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/p/c;` @kind direct;
  #L2d04c2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.p.c` v6 @kind this) @signature `Le/e/a/b/f/p/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2d0550.  v0:= new `java.lang.StringBuilder`;
  #L2d0554.  v1:= 32I;
  #L2d0558.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2d055e.  v1:= v6.`e.e.a.b.f.p.c.a` @type ^`java.lang.String` @kind object;
  #L2d0562.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d0568.  v1:= 123I;
  #L2d056c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d0572.  v1:= v6.`e.e.a.b.f.p.c.b` @type ^`e.e.a.b.f.p.b` @kind object;
  #L2d0576.  v1:= v1.`e.e.a.b.f.p.b.c` @type ^`e.e.a.b.f.p.b` @kind object;
  #L2d057a.  v2:= "" @kind object;
  #L2d057e.  if v1 == 0 then goto L2d05f4;
  #L2d0582.  v3:= v1.`e.e.a.b.f.p.b.b` @type ^`java.lang.Object` @kind object;
  #L2d0586.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d058c.  v2:= v1.`e.e.a.b.f.p.b.a` @type ^`java.lang.String` @kind object;
  #L2d0590.  if v2 == 0 then goto L2d05a4;
  #L2d0594.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d059a.  v2:= 61I;
  #L2d059e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d05a4.  if v3 == 0 then goto L2d05e4;
  #L2d05a8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2d05ae.  v2:= temp @kind object;
  #L2d05b0.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2d05b6.  v2:= temp;
  #L2d05b8.  if v2 == 0 then goto L2d05e4;
  #L2d05bc.  v2:= 1I;
  #L2d05be.  v4:= new `java.lang.Object`[v2];
  #L2d05c2.  v5:= 0I;
  #L2d05c4.  v4[v5]:= v3 @kind object;
  #L2d05c8.  call temp:= `deepToString`(v4) @signature `Ljava/util/Arrays;.deepToString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d05ce.  v3:= temp @kind object;
  #L2d05d0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d05d6.  v4:= temp;
  #L2d05d8.  v4:= v4 + -1;
  #L2d05dc.  call temp:= `append`(v0, v3, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d05e2.  goto L2d05ea;
  #L2d05e4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d05ea.  v1:= v1.`e.e.a.b.f.p.b.c` @type ^`e.e.a.b.f.p.b` @kind object;
  #L2d05ee.  v2:= ", " @kind object;
  #L2d05f2.  goto L2d057e;
  #L2d05f4.  v1:= 125I;
  #L2d05f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d05fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d0604.  v0:= temp @kind object;
  #L2d0606.  return v0 @kind object;
}
