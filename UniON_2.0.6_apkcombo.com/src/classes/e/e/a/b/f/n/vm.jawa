record `e.e.a.b.f.n.vm` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.vm.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm` `@@e.e.a.b.f.n.vm.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.vm`[] `@@e.e.a.b.f.n.vm.i` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/vm;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a2b90.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2b94.  v1:= 0I;
  #L2a2b96.  v2:= "FRAME_SELECTION_RESULT_UNKNOWN" @kind object;
  #L2a2b9a.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2ba0.  `@@e.e.a.b.f.n.vm.c` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2ba4.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2ba8.  v2:= 1I;
  #L2a2baa.  v3:= "BOTH_FRAMES_UNACCEPTABLE" @kind object;
  #L2a2bae.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2bb4.  `@@e.e.a.b.f.n.vm.d` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2bb8.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2bbc.  v3:= 2I;
  #L2a2bbe.  v4:= "CURRENT_FRAME_BETTER" @kind object;
  #L2a2bc2.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2bc8.  `@@e.e.a.b.f.n.vm.e` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2bcc.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2bd0.  v4:= 3I;
  #L2a2bd2.  v5:= "LAST_SELECTED_FRAME_BETTER" @kind object;
  #L2a2bd6.  call `<init>`(v0, v5, v4, v4) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2bdc.  `@@e.e.a.b.f.n.vm.f` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2be0.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2be4.  v5:= 4I;
  #L2a2be6.  v6:= "TOO_BLURRY" @kind object;
  #L2a2bea.  call `<init>`(v0, v6, v5, v5) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2bf0.  `@@e.e.a.b.f.n.vm.g` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2bf4.  v0:= new `e.e.a.b.f.n.vm`;
  #L2a2bf8.  v6:= 5I;
  #L2a2bfa.  v7:= "TOO_LARGE_CAMERA_MOTION" @kind object;
  #L2a2bfe.  call `<init>`(v0, v7, v6, v6) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a2c04.  `@@e.e.a.b.f.n.vm.h` @type ^`e.e.a.b.f.n.vm` := v0 @kind object;
  #L2a2c08.  v0:= 6I;
  #L2a2c0a.  v0:= new `e.e.a.b.f.n.vm`[v0];
  #L2a2c0e.  v7:= `@@e.e.a.b.f.n.vm.c` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c12.  v0[v1]:= v7 @kind object;
  #L2a2c16.  v1:= `@@e.e.a.b.f.n.vm.d` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c1a.  v0[v2]:= v1 @kind object;
  #L2a2c1e.  v1:= `@@e.e.a.b.f.n.vm.e` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c22.  v0[v3]:= v1 @kind object;
  #L2a2c26.  v1:= `@@e.e.a.b.f.n.vm.f` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c2a.  v0[v4]:= v1 @kind object;
  #L2a2c2e.  v1:= `@@e.e.a.b.f.n.vm.g` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c32.  v0[v5]:= v1 @kind object;
  #L2a2c36.  v1:= `@@e.e.a.b.f.n.vm.h` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2c3a.  v0[v6]:= v1 @kind object;
  #L2a2c3e.  `@@e.e.a.b.f.n.vm.i` @type ^`e.e.a.b.f.n.vm`[] := v0 @kind object;
  #L2a2c42.  v0:= new `e.e.a.b.f.n.tm`;
  #L2a2c46.  call `<init>`(v0) @signature `Le/e/a/b/f/n/tm;.<init>:()V` @kind direct;
  #L2a2c4c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.vm` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/vm;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a2c60.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a2c66.  v0.`e.e.a.b.f.n.vm.b` @type ^`int` := v3;
  #L2a2c6a.  return @kind void;
}
procedure `e.e.a.b.f.n.vm` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/vm;.a:(I)Le/e/a/b/f/n/vm;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a2a68.  if v1 == 0 then goto L2a2aac;
  #L2a2a6c.  v0:= 1I;
  #L2a2a6e.  if v1 == v0 then goto L2a2aa6;
  #L2a2a72.  v0:= 2I;
  #L2a2a74.  if v1 == v0 then goto L2a2aa0;
  #L2a2a78.  v0:= 3I;
  #L2a2a7a.  if v1 == v0 then goto L2a2a9a;
  #L2a2a7e.  v0:= 4I;
  #L2a2a80.  if v1 == v0 then goto L2a2a94;
  #L2a2a84.  v0:= 5I;
  #L2a2a86.  if v1 == v0 then goto L2a2a8e;
  #L2a2a8a.  v1:= 0I;
  #L2a2a8c.  return v1 @kind object;
  #L2a2a8e.  v1:= `@@e.e.a.b.f.n.vm.h` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2a92.  return v1 @kind object;
  #L2a2a94.  v1:= `@@e.e.a.b.f.n.vm.g` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2a98.  return v1 @kind object;
  #L2a2a9a.  v1:= `@@e.e.a.b.f.n.vm.f` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2a9e.  return v1 @kind object;
  #L2a2aa0.  v1:= `@@e.e.a.b.f.n.vm.e` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2aa4.  return v1 @kind object;
  #L2a2aa6.  v1:= `@@e.e.a.b.f.n.vm.d` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2aaa.  return v1 @kind object;
  #L2a2aac.  v1:= `@@e.e.a.b.f.n.vm.c` @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2ab0.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/vm;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a2a50.  v0:= `@@e.e.a.b.f.n.um.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2a2a54.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.vm`[] `values`() @signature `Le/e/a/b/f/n/vm;.values:()[Le/e/a/b/f/n/vm;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a2ac4.  v0:= `@@e.e.a.b.f.n.vm.i` @type ^`e.e.a.b.f.n.vm`[] @kind object;
  #L2a2ac8.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/vm;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a2ace.  v0:= temp @kind object;
  #L2a2ad0.  v0:= (`e.e.a.b.f.n.vm`[]) v0 @kind object;
  #L2a2ad4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.vm` v2 @kind this) @signature `Le/e/a/b/f/n/vm;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a2b00.  v0:= new `java.lang.StringBuilder`;
  #L2a2b04.  v1:= "<" @kind object;
  #L2a2b08.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a2b0e.  v1:= constclass @type ^`e.e.a.b.f.n.vm` @kind object;
  #L2a2b12.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2a2b18.  v1:= temp @kind object;
  #L2a2b1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b20.  v1:= 64I;
  #L2a2b24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b2a.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2a2b30.  v1:= temp;
  #L2a2b32.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2a2b38.  v1:= temp @kind object;
  #L2a2b3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b40.  v1:= " number=" @kind object;
  #L2a2b44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b4a.  v1:= v2.`e.e.a.b.f.n.vm.b` @type ^`int`;
  #L2a2b4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b54.  v1:= " name=" @kind object;
  #L2a2b58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b5e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2a2b64.  v1:= temp @kind object;
  #L2a2b66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b6c.  v1:= 62I;
  #L2a2b70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2b76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a2b7c.  v0:= temp @kind object;
  #L2a2b7e.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.vm` v1 @kind this) @signature `Le/e/a/b/f/n/vm;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a2ae8.  v0:= v1.`e.e.a.b.f.n.vm.b` @type ^`int`;
  #L2a2aec.  return v0;
}
