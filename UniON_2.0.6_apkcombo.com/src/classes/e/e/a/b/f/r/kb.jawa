record `e.e.a.b.f.r.kb` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `e.e.a.b.f.r.kb.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.r.kb` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/r/kb;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31c484.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31c48a.  v1:= "\n" @kind object;
  #L31c48e.  v0.`e.e.a.b.f.r.kb.a` @type ^`java.lang.String` := v1 @kind object;
  #L31c492.  return @kind void;
}
procedure `e.e.a.b.f.r.kb` `a`(`java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/r/kb;.a:(Ljava/lang/String;)Le/e/a/b/f/r/kb;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L31c3a0.  v1:= new `e.e.a.b.f.r.kb`;
  #L31c3a4.  v0:= "\n" @kind object;
  #L31c3a8.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/r/kb;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31c3ae.  return v1 @kind object;
}
procedure `java.lang.CharSequence` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/kb;.a:(Ljava/lang/Object;)Ljava/lang/CharSequence;` @AccessFlag STATIC_FINAL {
    temp;
    v0;

  #L31c3c0.  if v1 == 0 then goto L31c3dc;
  #L31c3c4.  v0:= instanceof @variable v1 @type ^`java.lang.CharSequence` @kind boolean;
  #L31c3c8.  if v0 == 0 then goto L31c3d2;
  #L31c3cc.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L31c3d0.  goto L31c3da;
  #L31c3d2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31c3d8.  v1:= temp @kind object;
  #L31c3da.  return v1 @kind object;
  #L31c3dc.  v1:= 0I;
  #L31c3de.  throw v1;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.r.kb` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Le/e/a/b/f/r/kb;.a:(Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L31c3f0.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31c3f6.  v3:= temp @kind object;
  #L31c3f8.  v0:= new `java.lang.StringBuilder`;
  #L31c3fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31c402.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31c408.  v1:= temp;
  #L31c40a.  if v1 == 0 then goto L31c44c;
  #L31c40e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31c414.  v1:= temp @kind object;
  #L31c416.  call temp:= `a`(v1) @signature `Le/e/a/b/f/r/kb;.a:(Ljava/lang/Object;)Ljava/lang/CharSequence;` @kind static;
  #L31c41c.  v1:= temp @kind object;
  #L31c41e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L31c424.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31c42a.  v1:= temp;
  #L31c42c.  if v1 == 0 then goto L31c44c;
  #L31c430.  v1:= v2.`e.e.a.b.f.r.kb.a` @type ^`java.lang.String` @kind object;
  #L31c434.  call temp:= `append`(v0, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L31c43a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31c440.  v1:= temp @kind object;
  #L31c442.  call temp:= `a`(v1) @signature `Le/e/a/b/f/r/kb;.a:(Ljava/lang/Object;)Ljava/lang/CharSequence;` @kind static;
  #L31c448.  v1:= temp @kind object;
  #L31c44a.  goto L31c41e;
  #L31c44c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31c452.  v3:= temp @kind object;
  #L31c454.  return v3 @kind object;
  #L31c456.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L31c458.  v0:= new `java.lang.AssertionError`;
  #L31c45c.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L31c462.  throw v0;
  catch `java.io.IOException` @[L31c402..L31c44a] goto L31c456;
}
