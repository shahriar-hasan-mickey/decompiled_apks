record `e.e.a.b.f.k.v` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.k1` @kind class {
  `e.e.a.b.f.k.x` `e.e.a.b.f.k.v.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.v` v0 @kind this, `e.e.a.b.f.k.x` v1 @kind object) @signature `Le/e/a/b/f/k/v;.<init>:(Le/e/a/b/f/k/x;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2437f8.  v0.`e.e.a.b.f.k.v.b` @type ^`e.e.a.b.f.k.x` := v1 @kind object;
  #L2437fc.  call `<init>`(v0) @signature `Le/e/a/b/f/k/k1;.<init>:()V` @kind direct;
  #L243802.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.k.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/v;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243738.  v0:= v1.`e.e.a.b.f.k.v.b` @type ^`e.e.a.b.f.k.x` @kind object;
  #L24373c.  v0:= v0.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L243740.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L243746.  v0:= temp @kind object;
  #L243748.  if v0 == 0 then goto L24375a;
  #L24374c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L243752.  v2:= temp;
  #L243754.  goto L243758;
  #L243756.  v2:= 0I;
  #L243758.  return v2;
  #L24375a.  v2:= 0I;
  #L24375c.  throw v2;
  catch `java.lang.ClassCastException` @[L24374c..L243754] goto L243756;
  catch `java.lang.NullPointerException` @[L24374c..L243754] goto L243756;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.v` v2 @kind this) @signature `Le/e/a/b/f/k/v;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2437c0.  v0:= new `e.e.a.b.f.k.w`;
  #L2437c4.  v1:= v2.`e.e.a.b.f.k.v.b` @type ^`e.e.a.b.f.k.x` @kind object;
  #L2437c8.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/w;.<init>:(Le/e/a/b/f/k/x;)V` @kind direct;
  #L2437ce.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.k.v` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/v;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243780.  call temp:= `contains`(v1, v2) @signature `Le/e/a/b/f/k/v;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L243786.  v0:= temp;
  #L243788.  if v0 != 0 then goto L243790;
  #L24378c.  v2:= 0I;
  #L24378e.  return v2;
  #L243790.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L243794.  v0:= v1.`e.e.a.b.f.k.v.b` @type ^`e.e.a.b.f.k.x` @kind object;
  #L243798.  v0:= v0.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L24379c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2437a2.  v2:= temp @kind object;
  #L2437a4.  call `a`(v0, v2) @signature `Le/e/a/b/f/k/g0;.a:(Le/e/a/b/f/k/g0;Ljava/lang/Object;)V` @kind static;
  #L2437aa.  v2:= 1I;
  #L2437ac.  return v2;
}
procedure `java.util.Map` `zza`(`e.e.a.b.f.k.v` v1 @kind this) @signature `Le/e/a/b/f/k/v;.zza:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L2437e0.  v0:= v1.`e.e.a.b.f.k.v.b` @type ^`e.e.a.b.f.k.x` @kind object;
  #L2437e4.  return v0 @kind object;
}
