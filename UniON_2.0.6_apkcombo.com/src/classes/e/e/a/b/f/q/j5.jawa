record `e.e.a.b.f.q.j5` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.q.e5` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `e.e.a.b.f.q.m6` `@@e.e.a.b.f.q.j5.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/j5;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e33c8.  v0:= new `e.e.a.b.f.q.h5`;
  #L2e33cc.  v1:= `@@e.e.a.b.f.q.a6.f` @type ^`e.e.a.b.f.q.j5` @kind object;
  #L2e33d0.  v2:= 0I;
  #L2e33d2.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/q/h5;.<init>:(Le/e/a/b/f/q/j5;I)V` @kind direct;
  #L2e33d8.  `@@e.e.a.b.f.q.j5.c` @type ^`e.e.a.b.f.q.m6` := v0 @kind object;
  #L2e33dc.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.j5` v0 @kind this) @signature `Le/e/a/b/f/q/j5;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e33f0.  call `<init>`(v0) @signature `Le/e/a/b/f/q/e5;.<init>:()V` @kind direct;
  #L2e33f6.  return @kind void;
}
procedure `e.e.a.b.f.q.j5` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/j5;.a:(Ljava/lang/Object;)Le/e/a/b/f/q/j5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e3118.  v0:= 1I;
  #L2e311a.  v1:= new `java.lang.Object`[v0];
  #L2e311e.  v2:= 0I;
  #L2e3120.  v1[v2]:= v3 @kind object;
  #L2e3124.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/q/z5;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2e312a.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/q/j5;.b:([Ljava/lang/Object;I)Le/e/a/b/f/q/j5;` @kind static;
  #L2e3130.  v3:= temp @kind object;
  #L2e3132.  return v3 @kind object;
}
procedure `e.e.a.b.f.q.j5` `a`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/j5;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Le/e/a/b/f/q/j5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e3144.  v0:= 3I;
  #L2e3146.  v1:= new `java.lang.Object`[v0];
  #L2e314a.  v2:= 0I;
  #L2e314c.  v1[v2]:= v3 @kind object;
  #L2e3150.  v3:= 1I;
  #L2e3152.  v1[v3]:= v4 @kind object;
  #L2e3156.  v3:= 2I;
  #L2e3158.  v1[v3]:= v5 @kind object;
  #L2e315c.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/q/z5;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2e3162.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/q/j5;.b:([Ljava/lang/Object;I)Le/e/a/b/f/q/j5;` @kind static;
  #L2e3168.  v3:= temp @kind object;
  #L2e316a.  return v3 @kind object;
}
procedure `e.e.a.b.f.q.j5` `a`(`java.lang.Object`[] v1 @kind object) @signature `Le/e/a/b/f/q/j5;.a:([Ljava/lang/Object;)Le/e/a/b/f/q/j5;` @AccessFlag STATIC {
    temp;
    v0;

  #L2e317c.  v0:= length @variable v1;
  #L2e317e.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/q/j5;.b:([Ljava/lang/Object;I)Le/e/a/b/f/q/j5;` @kind static;
  #L2e3184.  v1:= temp @kind object;
  #L2e3186.  return v1 @kind object;
}
procedure `e.e.a.b.f.q.j5` `b`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/q/j5;.b:([Ljava/lang/Object;I)Le/e/a/b/f/q/j5;` @AccessFlag STATIC {
    temp;
    v0;

  #L2e3198.  if v2 != 0 then goto L2e31a2;
  #L2e319c.  v1:= `@@e.e.a.b.f.q.a6.f` @type ^`e.e.a.b.f.q.j5` @kind object;
  #L2e31a0.  return v1 @kind object;
  #L2e31a2.  v0:= new `e.e.a.b.f.q.a6`;
  #L2e31a6.  call `<init>`(v0, v1, v2) @signature `Le/e/a/b/f/q/a6;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L2e31ac.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.j5` `u`() @signature `Le/e/a/b/f/q/j5;.u:()Le/e/a/b/f/q/j5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e3100.  v0:= `@@e.e.a.b.f.q.a6.f` @type ^`e.e.a.b.f.q.j5` @kind object;
  #L2e3104.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.q.j5` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/q/j5;.a:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2e32ec.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L2e32f2.  v4:= temp;
  #L2e32f4.  v0:= 0I;
  #L2e32f6.  if v0 >= v4 then goto L2e330c;
  #L2e32fa.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3300.  v1:= temp @kind object;
  #L2e3302.  v3[v0]:= v1 @kind object;
  #L2e3306.  v0:= v0 + 1;
  #L2e330a.  goto L2e32f6;
  #L2e330c.  return v4;
}
procedure `e.e.a.b.f.q.j5` `a`(`e.e.a.b.f.q.j5` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/j5;.a:(II)Le/e/a/b/f/q/j5;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e30bc.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L2e30c2.  v0:= temp;
  #L2e30c4.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/q/vb;.a:(III)V` @kind static;
  #L2e30ca.  v3:= v3 - v2 @kind int;
  #L2e30cc.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L2e30d2.  v0:= temp;
  #L2e30d4.  if v3 != v0 then goto L2e30da;
  #L2e30d8.  return v1 @kind object;
  #L2e30da.  if v3 != 0 then goto L2e30e4;
  #L2e30de.  v2:= `@@e.e.a.b.f.q.a6.f` @type ^`e.e.a.b.f.q.j5` @kind object;
  #L2e30e2.  return v2 @kind object;
  #L2e30e4.  v0:= new `e.e.a.b.f.q.i5`;
  #L2e30e8.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/a/b/f/q/i5;.<init>:(Le/e/a/b/f/q/j5;II)V` @kind direct;
  #L2e30ee.  return v0 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/j5;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e3408.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e340c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e3412.  throw v1;
}
procedure `boolean` `addAll`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/q/j5;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e2fb0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e2fb4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e2fba.  throw v1;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.j5` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/j5;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e2fcc.  call temp:= `indexOf`(v0, v1) @signature `Le/e/a/b/f/q/j5;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L2e2fd2.  v1:= temp;
  #L2e2fd4.  if v1 < 0 then goto L2e2fdc;
  #L2e2fd8.  v1:= 1I;
  #L2e2fda.  return v1;
  #L2e2fdc.  v1:= 0I;
  #L2e2fde.  return v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.j5` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/q/j5;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e2ff0.  v0:= 1I;
  #L2e2ff2.  v1:= 0I;
  #L2e2ff4.  if v7 != v6 then goto L2e2ffc;
  #L2e2ff8.  v1:= 1I;
  #L2e2ffa.  goto L2e30a8;
  #L2e2ffc.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L2e3000.  if v2 != 0 then goto L2e3006;
  #L2e3004.  goto L2e30a8;
  #L2e3006.  v7:= (`java.util.List`) v7 @kind object;
  #L2e300a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3010.  v2:= temp;
  #L2e3012.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3018.  v3:= temp;
  #L2e301a.  if v2 == v3 then goto L2e3020;
  #L2e301e.  goto L2e30a8;
  #L2e3020.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L2e3024.  if v3 == 0 then goto L2e3052;
  #L2e3028.  v3:= 0I;
  #L2e302a.  if v3 >= v2 then goto L2e2ff8;
  #L2e302e.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3034.  v4:= temp @kind object;
  #L2e3036.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e303c.  v5:= temp @kind object;
  #L2e303e.  call temp:= `a`(v4, v5) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e3044.  v4:= temp;
  #L2e3046.  if v4 != 0 then goto L2e304c;
  #L2e304a.  goto L2e30a8;
  #L2e304c.  v3:= v3 + 1;
  #L2e3050.  goto L2e302a;
  #L2e3052.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e3058.  v2:= temp @kind object;
  #L2e305a.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e3060.  v7:= temp @kind object;
  #L2e3062.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e3068.  v3:= temp;
  #L2e306a.  if v3 == 0 then goto L2e309a;
  #L2e306e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e3074.  v3:= temp;
  #L2e3076.  if v3 != 0 then goto L2e307c;
  #L2e307a.  goto L2e30a8;
  #L2e307c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e3082.  v3:= temp @kind object;
  #L2e3084.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e308a.  v4:= temp @kind object;
  #L2e308c.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e3092.  v3:= temp;
  #L2e3094.  if v3 != 0 then goto L2e3062;
  #L2e3098.  goto L2e30a8;
  #L2e309a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e30a0.  v7:= temp;
  #L2e30a2.  if v7 != 0 then goto L2e30a8;
  #L2e30a6.  goto L2e2ff8;
  #L2e30a8.  return v1;
}
procedure `e.e.a.b.f.q.m6` `h`(`e.e.a.b.f.q.j5` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/q/j5;.h:(I)Le/e/a/b/f/q/m6;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e31dc.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L2e31e2.  v0:= temp;
  #L2e31e4.  v1:= "index" @kind object;
  #L2e31e8.  call temp:= `b`(v3, v0, v1) @signature `Le/e/a/b/f/q/vb;.b:(IILjava/lang/String;)I` @kind static;
  #L2e31ee.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L2e31f4.  v0:= temp;
  #L2e31f6.  if v0 == 0 then goto L2e3200;
  #L2e31fa.  v3:= `@@e.e.a.b.f.q.j5.c` @type ^`e.e.a.b.f.q.m6` @kind object;
  #L2e31fe.  return v3 @kind object;
  #L2e3200.  v0:= new `e.e.a.b.f.q.h5`;
  #L2e3204.  call `<init>`(v0, v2, v3) @signature `Le/e/a/b/f/q/h5;.<init>:(Le/e/a/b/f/q/j5;I)V` @kind direct;
  #L2e320a.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.j5` v4 @kind this) @signature `Le/e/a/b/f/q/j5;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e321c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L2e3222.  v0:= temp;
  #L2e3224.  v1:= 1I;
  #L2e3226.  v2:= 0I;
  #L2e3228.  if v2 >= v0 then goto L2e3248;
  #L2e322c.  v1:= v1 * 31;
  #L2e3230.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3236.  v3:= temp @kind object;
  #L2e3238.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2e323e.  v3:= temp;
  #L2e3240.  v1:= v1 + v3 @kind int;
  #L2e3242.  v2:= v2 + 1;
  #L2e3246.  goto L2e3228;
  #L2e3248.  return v1;
}
procedure `int` `indexOf`(`e.e.a.b.f.q.j5` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/q/j5;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e325c.  v0:= -1I;
  #L2e325e.  if v5 != 0 then goto L2e3264;
  #L2e3262.  return v0;
  #L2e3264.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e326a.  v1:= temp;
  #L2e326c.  v2:= 0I;
  #L2e326e.  if v2 >= v1 then goto L2e3290;
  #L2e3272.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3278.  v3:= temp @kind object;
  #L2e327a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e3280.  v3:= temp;
  #L2e3282.  if v3 == 0 then goto L2e328a;
  #L2e3286.  v0:= v2;
  #L2e3288.  goto L2e3290;
  #L2e328a.  v2:= v2 + 1;
  #L2e328e.  goto L2e326e;
  #L2e3290.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.j5` v1 @kind this) @signature `Le/e/a/b/f/q/j5;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3358.  v0:= 0I;
  #L2e335a.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/q/j5;.h:(I)Le/e/a/b/f/q/m6;` @kind virtual;
  #L2e3360.  v0:= temp @kind object;
  #L2e3362.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`e.e.a.b.f.q.j5` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/q/j5;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e32a4.  v0:= -1I;
  #L2e32a6.  if v4 != 0 then goto L2e32ac;
  #L2e32aa.  return v0;
  #L2e32ac.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e32b2.  v1:= temp;
  #L2e32b4.  v1:= v1 + v0 @kind int;
  #L2e32b6.  if v1 < 0 then goto L2e32d8;
  #L2e32ba.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e32c0.  v2:= temp @kind object;
  #L2e32c2.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e32c8.  v2:= temp;
  #L2e32ca.  if v2 == 0 then goto L2e32d2;
  #L2e32ce.  v0:= v1;
  #L2e32d0.  goto L2e32d8;
  #L2e32d2.  v1:= v1 + -1;
  #L2e32d6.  goto L2e32b6;
  #L2e32d8.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.q.j5` v1 @kind this) @signature `Le/e/a/b/f/q/j5;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3390.  v0:= 0I;
  #L2e3392.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/q/j5;.h:(I)Le/e/a/b/f/q/m6;` @kind virtual;
  #L2e3398.  v0:= temp @kind object;
  #L2e339a.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/q/j5;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2e33ac.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/q/j5;.h:(I)Le/e/a/b/f/q/m6;` @kind virtual;
  #L2e33b2.  v1:= temp @kind object;
  #L2e33b4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/q/j5;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e3320.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e3324.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e332a.  throw v1;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/j5;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e333c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e3340.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e3346.  throw v1;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.q.j5` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/q/j5;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e3374.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/q/j5;.a:(II)Le/e/a/b/f/q/j5;` @kind virtual;
  #L2e337a.  v1:= temp @kind object;
  #L2e337c.  return v1 @kind object;
}
procedure `e.e.a.b.f.q.l6` `zza`(`e.e.a.b.f.q.j5` v1 @kind this) @signature `Le/e/a/b/f/q/j5;.zza:()Le/e/a/b/f/q/l6;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e31c0.  v0:= 0I;
  #L2e31c2.  call temp:= `h`(v1, v0) @signature `Le/e/a/b/f/q/j5;.h:(I)Le/e/a/b/f/q/m6;` @kind virtual;
  #L2e31c8.  v0:= temp @kind object;
  #L2e31ca.  return v0 @kind object;
}
