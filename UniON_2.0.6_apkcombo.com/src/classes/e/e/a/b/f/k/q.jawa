record `e.e.a.b.f.k.q` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/k/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2430e0.  v0:= constclass @type ^`e.e.a.b.f.k.q` @kind object;
  #L2430e4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2430ea.  v0:= temp @kind object;
  #L2430ec.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2430f2.  v0:= new `e.e.a.b.f.k.p`;
  #L2430f6.  v1:= 0I;
  #L2430f8.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/p;.<init>:(Le/e/a/b/f/k/o;)V` @kind direct;
  #L2430fe.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.k.q` v0 @kind this) @signature `Le/e/a/b/f/k/q;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L243110.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243116.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/k/q;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;

  #L2430b4.  if v0 == 0 then goto L2430ca;
  #L2430b8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2430be.  v0:= temp;
  #L2430c0.  if v0 == 0 then goto L2430c6;
  #L2430c4.  goto L2430ca;
  #L2430c6.  v0:= 0I;
  #L2430c8.  return v0;
  #L2430ca.  v0:= 1I;
  #L2430cc.  return v0;
}
