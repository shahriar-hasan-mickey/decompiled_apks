record `e.e.a.b.f.k.t0` @kind class @AccessFlag FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.Object` `e.e.a.b.f.k.t0.b` @AccessFlag PRIVATE_TRANSIENT;
  `int`[] `e.e.a.b.f.k.t0.c` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.k.t0.d` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.k.t0.e` @AccessFlag TRANSIENT;
  `int` `e.e.a.b.f.k.t0.f` @AccessFlag PRIVATE_TRANSIENT;
  `int` `e.e.a.b.f.k.t0.g` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.k.t0.h` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.k.t0.i` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.k.t0.j` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Object` `@@e.e.a.b.f.k.t0.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/k/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L245a2c.  v0:= new `java.lang.Object`;
  #L245a30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L245a36.  `@@e.e.a.b.f.k.t0.k` @type ^`java.lang.Object` := v0 @kind object;
  #L245a3a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.k.t0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/k/t0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L245a4c.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L245a52.  v1:= 12I;
  #L245a56.  call `a`(v0, v1) @signature `Le/e/a/b/f/k/t0;.a:(I)V` @kind virtual;
  #L245a5c.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.k.t0` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 ) @signature `Le/e/a/b/f/k/t0;.a:(IIII)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2454e4.  call temp:= `a`(v10) @signature `Le/e/a/b/f/k/u0;.a:(I)Ljava/lang/Object;` @kind static;
  #L2454ea.  v0:= temp @kind object;
  #L2454ec.  v10:= v10 + -1;
  #L2454f0.  if v12 == 0 then goto L245500;
  #L2454f4.  v11:= v11 ^& v10 @kind int;
  #L2454f6.  v12:= v12 + 1;
  #L2454fa.  call `a`(v0, v11, v12) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L245500.  v11:= v8.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245504.  v12:= v8.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245508.  v1:= 0I;
  #L24550a.  if v1 > v9 then goto L245554;
  #L24550e.  call temp:= `a`(v11, v1) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L245514.  v2:= temp;
  #L245516.  if v2 == 0 then goto L24554e;
  #L24551a.  v3:= v2 + -1;
  #L24551e.  v4:= v12[v3];
  #L245522.  v5:= ~v9 @kind int;
  #L245524.  v5:= v5 ^& v4 @kind int;
  #L245526.  v5:= v5 ^| v1 @kind int;
  #L245528.  v6:= v5 ^& v10 @kind int;
  #L24552c.  call temp:= `a`(v0, v6) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L245532.  v7:= temp;
  #L245534.  call `a`(v0, v6, v2) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L24553a.  v2:= ~v10 @kind int;
  #L24553c.  v2:= v2 ^& v5 @kind int;
  #L24553e.  v5:= v7 ^& v10 @kind int;
  #L245542.  v2:= v2 ^| v5 @kind int;
  #L245544.  v12[v3]:= v2;
  #L245548.  v2:= v4 ^& v9 @kind int;
  #L24554c.  goto L245516;
  #L24554e.  v1:= v1 + 1;
  #L245552.  goto L24550a;
  #L245554.  v8.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L245558.  call `c`(v8, v10) @signature `Le/e/a/b/f/k/t0;.c:(I)V` @kind direct;
  #L24555e.  return v10;
}
procedure `int` `a`(`e.e.a.b.f.k.t0` v0 @kind object) @signature `Le/e/a/b/f/k/t0;.a:(Le/e/a/b/f/k/t0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L245450.  v0:= v0.`e.e.a.b.f.k.t0.f` @type ^`int`;
  #L245454.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.k.t0` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/b/f/k/t0;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L245570.  call temp:= `a`(v7) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L245576.  v0:= temp;
  #L245578.  v1:= -1I;
  #L24557a.  if v0 == 0 then goto L245580;
  #L24557e.  return v1;
  #L245580.  call temp:= `a`(v8) @signature `Le/e/a/b/f/k/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L245586.  v0:= temp;
  #L245588.  call temp:= `f`(v7) @signature `Le/e/a/b/f/k/t0;.f:()I` @kind direct;
  #L24558e.  v2:= temp;
  #L245590.  v3:= v7.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245594.  v4:= v0 ^& v2 @kind int;
  #L245598.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L24559e.  v3:= temp;
  #L2455a0.  if v3 == 0 then goto L2455da;
  #L2455a4.  v4:= ~v2 @kind int;
  #L2455a6.  v0:= v0 ^& v4 @kind int;
  #L2455a8.  v3:= v3 + v1 @kind int;
  #L2455aa.  v5:= v7.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L2455ae.  v5:= v5[v3];
  #L2455b2.  v6:= v5 ^& v4 @kind int;
  #L2455b6.  if v6 != v0 then goto L2455d2;
  #L2455ba.  v6:= v7.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L2455be.  v6:= v6[v3] @kind object;
  #L2455c2.  call temp:= `a`(v8, v6) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2455c8.  v6:= temp;
  #L2455ca.  if v6 != 0 then goto L2455d0;
  #L2455ce.  goto L2455d2;
  #L2455d0.  return v3;
  #L2455d2.  v3:= v5 ^& v2 @kind int;
  #L2455d6.  if v3 != 0 then goto L2455a8;
  #L2455da.  return v1;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.k.t0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/t0;.a:(Le/e/a/b/f/k/t0;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2458cc.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/k/t0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2458d2.  v0:= temp @kind object;
  #L2458d4.  return v0 @kind object;
}
procedure `int` `b`(`e.e.a.b.f.k.t0` v0 @kind object) @signature `Le/e/a/b/f/k/t0;.b:(Le/e/a/b/f/k/t0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L245484.  call temp:= `f`(v0) @signature `Le/e/a/b/f/k/t0;.f:()I` @kind direct;
  #L24548a.  v0:= temp;
  #L24548c.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.k.t0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/k/t0;.b:(Le/e/a/b/f/k/t0;Ljava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L245468.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/k/t0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L24546e.  v0:= temp;
  #L245470.  return v0;
}
procedure `java.lang.Object` `b`(`e.e.a.b.f.k.t0` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/k/t0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L245918.  call temp:= `a`(v8) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L24591e.  v0:= temp;
  #L245920.  if v0 == 0 then goto L24592a;
  #L245924.  v9:= `@@e.e.a.b.f.k.t0.k` @type ^`java.lang.Object` @kind object;
  #L245928.  return v9 @kind object;
  #L24592a.  call temp:= `f`(v8) @signature `Le/e/a/b/f/k/t0;.f:()I` @kind direct;
  #L245930.  v7:= temp;
  #L245932.  v1:= 0I;
  #L245934.  v3:= v8.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245938.  v4:= v8.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L24593c.  v5:= v8.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245940.  v6:= 0I;
  #L245942.  v0:= v9 @kind object;
  #L245944.  v2:= v7;
  #L245946.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L24594c.  v9:= temp;
  #L24594e.  v0:= -1I;
  #L245950.  if v9 != v0 then goto L24595a;
  #L245954.  v9:= `@@e.e.a.b.f.k.t0.k` @type ^`java.lang.Object` @kind object;
  #L245958.  return v9 @kind object;
  #L24595a.  v1:= v8.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L24595e.  v1:= v1[v9] @kind object;
  #L245962.  call `a`(v8, v9, v7) @signature `Le/e/a/b/f/k/t0;.a:(II)V` @kind virtual;
  #L245968.  v9:= v8.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L24596c.  v9:= v9 + v0 @kind int;
  #L24596e.  v8.`e.e.a.b.f.k.t0.g` @type ^`int` := v9;
  #L245972.  call `c`(v8) @signature `Le/e/a/b/f/k/t0;.c:()V` @kind virtual;
  #L245978.  return v1 @kind object;
}
procedure `java.lang.Object` `c`(`e.e.a.b.f.k.t0` v0 @kind object) @signature `Le/e/a/b/f/k/t0;.c:(Le/e/a/b/f/k/t0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L245900.  v0:= v0.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245904.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.k.t0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/k/t0;.c:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L245c48.  call temp:= `numberOfLeadingZeros`(v2) @signature `Ljava/lang/Integer;.numberOfLeadingZeros:(I)I` @kind static;
  #L245c4e.  v2:= temp;
  #L245c50.  v0:= v1.`e.e.a.b.f.k.t0.f` @type ^`int`;
  #L245c54.  v0:= v0 ^& -32;
  #L245c58.  v2:= v2 - 32;
  #L245c5c.  v2:= v2 ^& 31;
  #L245c60.  v2:= v2 ^| v0 @kind int;
  #L245c62.  v1.`e.e.a.b.f.k.t0.f` @type ^`int` := v2;
  #L245c66.  return @kind void;
}
procedure `int` `d`(`e.e.a.b.f.k.t0` v2 @kind object) @signature `Le/e/a/b/f/k/t0;.d:(Le/e/a/b/f/k/t0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2454a0.  v0:= v2.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L2454a4.  v1:= v0 + -1;
  #L2454a8.  v2.`e.e.a.b.f.k.t0.g` @type ^`int` := v1;
  #L2454ac.  return v0;
}
procedure `java.lang.Object` `e`() @signature `Le/e/a/b/f/k/t0;.e:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2458e8.  v0:= `@@e.e.a.b.f.k.t0.k` @type ^`java.lang.Object` @kind object;
  #L2458ec.  return v0 @kind object;
}
procedure `int` `f`(`e.e.a.b.f.k.t0` v2 @kind this) @signature `Le/e/a/b/f/k/t0;.f:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2454c0.  v0:= v2.`e.e.a.b.f.k.t0.f` @type ^`int`;
  #L2454c4.  v0:= v0 ^& 31;
  #L2454c8.  v1:= 1I;
  #L2454ca.  v0:= v1 ^< v0 @kind int;
  #L2454ce.  v0:= v0 + -1;
  #L2454d2.  return v0;
}
procedure `void` `a`(`e.e.a.b.f.k.t0` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/k/t0;.a:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L245b34.  v3:= 12I;
  #L245b38.  v0:= 1I;
  #L245b3a.  v1:= 1073741823I;
  #L245b40.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/k/a2;.a:(III)I` @kind static;
  #L245b46.  v3:= temp;
  #L245b48.  v2.`e.e.a.b.f.k.t0.f` @type ^`int` := v3;
  #L245b4c.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.k.t0` v7 @kind this, `int` v8 , `int` v9 ) @signature `Le/e/a/b/f/k/t0;.a:(II)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L245b80.  call temp:= `size`(v7) @signature `Le/e/a/b/f/k/t0;.size:()I` @kind virtual;
  #L245b86.  v0:= temp;
  #L245b88.  v0:= v0 + -1;
  #L245b8c.  v1:= 0I;
  #L245b8e.  v2:= 0I;
  #L245b90.  if v8 >= v0 then goto L245c1c;
  #L245b94.  v3:= v7.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245b98.  v4:= v3[v0] @kind object;
  #L245b9c.  v3[v8]:= v4 @kind object;
  #L245ba0.  v5:= v7.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245ba4.  v6:= v5[v0] @kind object;
  #L245ba8.  v5[v8]:= v6 @kind object;
  #L245bac.  v3[v0]:= v2 @kind object;
  #L245bb0.  v5[v0]:= v2 @kind object;
  #L245bb4.  v2:= v7.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245bb8.  v3:= v2[v0];
  #L245bbc.  v2[v8]:= v3;
  #L245bc0.  v2[v0]:= v1;
  #L245bc4.  call temp:= `a`(v4) @signature `Le/e/a/b/f/k/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L245bca.  v1:= temp;
  #L245bcc.  v1:= v1 ^& v9 @kind int;
  #L245bce.  v2:= v7.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245bd2.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L245bd8.  v2:= temp;
  #L245bda.  v0:= v0 + 1;
  #L245bde.  if v2 == v0 then goto L245c0c;
  #L245be2.  v2:= v2 + -1;
  #L245be6.  v1:= v7.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245bea.  v3:= v1[v2];
  #L245bee.  v4:= v3 ^& v9 @kind int;
  #L245bf2.  if v4 == v0 then goto L245bfa;
  #L245bf6.  v2:= v4;
  #L245bf8.  goto L245be2;
  #L245bfa.  v0:= ~v9 @kind int;
  #L245bfc.  v0:= v0 ^& v3 @kind int;
  #L245bfe.  v8:= v8 + 1;
  #L245c02.  v8:= v8 ^& v9 @kind int;
  #L245c04.  v8:= v8 ^| v0 @kind int;
  #L245c06.  v1[v2]:= v8;
  #L245c0a.  return @kind void;
  #L245c0c.  v9:= v7.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245c10.  v8:= v8 + 1;
  #L245c14.  call `a`(v9, v1, v8) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L245c1a.  return @kind void;
  #L245c1c.  v9:= v7.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245c20.  v9[v8]:= v2 @kind object;
  #L245c24.  v9:= v7.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245c28.  v9[v8]:= v2 @kind object;
  #L245c2c.  v9:= v7.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245c30.  v9[v8]:= v1;
  #L245c34.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L2453bc.  v0:= v1.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L2453c0.  if v0 != 0 then goto L2453c8;
  #L2453c4.  v0:= 1I;
  #L2453c6.  return v0;
  #L2453c8.  v0:= 0I;
  #L2453ca.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.k.t0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/k/t0;.b:(I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L24542c.  v2:= v2 + 1;
  #L245430.  v0:= v1.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L245434.  if v2 >= v0 then goto L24543a;
  #L245438.  return v2;
  #L24543a.  v2:= -1I;
  #L24543c.  return v2;
}
procedure `java.util.Map` `b`(`e.e.a.b.f.k.t0` v2 @kind this) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2459b4.  v0:= v2.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L2459b8.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L2459bc.  if v1 == 0 then goto L2459c6;
  #L2459c0.  v0:= (`java.util.Map`) v0 @kind object;
  #L2459c4.  return v0 @kind object;
  #L2459c6.  v0:= 0I;
  #L2459c8.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.c:()V` @AccessFlag FINAL {
    temp;
    v0;

  #L245b60.  v0:= v1.`e.e.a.b.f.k.t0.f` @type ^`int`;
  #L245b64.  v0:= v0 + 32;
  #L245b68.  v1.`e.e.a.b.f.k.t0.f` @type ^`int` := v0;
  #L245b6c.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.k.t0` v6 @kind this) @signature `Le/e/a/b/f/k/t0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L245a70.  call temp:= `a`(v6) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L245a76.  v0:= temp;
  #L245a78.  if v0 == 0 then goto L245a7e;
  #L245a7c.  return @kind void;
  #L245a7e.  call `c`(v6) @signature `Le/e/a/b/f/k/t0;.c:()V` @kind virtual;
  #L245a84.  call temp:= `b`(v6) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L245a8a.  v0:= temp @kind object;
  #L245a8c.  v1:= 0I;
  #L245a8e.  v2:= 0I;
  #L245a90.  if v0 == 0 then goto L245ac0;
  #L245a94.  call temp:= `size`(v6) @signature `Le/e/a/b/f/k/t0;.size:()I` @kind virtual;
  #L245a9a.  v3:= temp;
  #L245a9c.  v4:= 3I;
  #L245a9e.  v5:= 1073741823I;
  #L245aa4.  call temp:= `a`(v3, v4, v5) @signature `Le/e/a/b/f/k/a2;.a:(III)I` @kind static;
  #L245aaa.  v3:= temp;
  #L245aac.  v6.`e.e.a.b.f.k.t0.f` @type ^`int` := v3;
  #L245ab0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L245ab6.  v6.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` := v1 @kind object;
  #L245aba.  v6.`e.e.a.b.f.k.t0.g` @type ^`int` := v2;
  #L245abe.  return @kind void;
  #L245ac0.  v0:= v6.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245ac4.  v3:= v6.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L245ac8.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L245ace.  v0:= v6.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245ad2.  v3:= v6.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L245ad6.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L245adc.  v0:= v6.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245ae0.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L245ae4.  if v1 == 0 then goto L245af4;
  #L245ae8.  v0:= (`byte`[]) v0 @kind object;
  #L245aec.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L245af2.  goto L245b12;
  #L245af4.  v1:= instanceof @variable v0 @type ^`short`[] @kind boolean;
  #L245af8.  if v1 == 0 then goto L245b08;
  #L245afc.  v0:= (`short`[]) v0 @kind object;
  #L245b00.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([SS)V` @kind static;
  #L245b06.  goto L245b12;
  #L245b08.  v0:= (`int`[]) v0 @kind object;
  #L245b0c.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L245b12.  v0:= v6.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245b16.  v1:= v6.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L245b1a.  call `fill`(v0, v2, v1, v2) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L245b20.  goto L245aba;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.k.t0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/t0;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L245308.  call temp:= `b`(v1) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L24530e.  v0:= temp @kind object;
  #L245310.  if v0 == 0 then goto L24531e;
  #L245314.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L24531a.  v2:= temp;
  #L24531c.  goto L24532e;
  #L24531e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/k/t0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L245324.  v2:= temp;
  #L245326.  v0:= -1I;
  #L245328.  if v2 != v0 then goto L245330;
  #L24532c.  v2:= 0I;
  #L24532e.  return v2;
  #L245330.  v2:= 1I;
  #L245332.  return v2;
}
procedure `boolean` `containsValue`(`e.e.a.b.f.k.t0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/t0;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L245344.  call temp:= `b`(v3) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L24534a.  v0:= temp @kind object;
  #L24534c.  if v0 != 0 then goto L24537c;
  #L245350.  v0:= 0I;
  #L245352.  v1:= 0I;
  #L245354.  v2:= v3.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L245358.  if v1 >= v2 then goto L24537a;
  #L24535c.  v2:= v3.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245360.  v2:= v2[v1] @kind object;
  #L245364.  call temp:= `a`(v4, v2) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L24536a.  v2:= temp;
  #L24536c.  if v2 == 0 then goto L245374;
  #L245370.  v4:= 1I;
  #L245372.  return v4;
  #L245374.  v1:= v1 + 1;
  #L245378.  goto L245354;
  #L24537a.  return v0;
  #L24537c.  call temp:= `containsValue`(v0, v4) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L245382.  v4:= temp;
  #L245384.  return v4;
}
procedure `int` `d`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L245408.  call temp:= `isEmpty`(v1) @signature `Le/e/a/b/f/k/t0;.isEmpty:()Z` @kind virtual;
  #L24540e.  v0:= temp;
  #L245410.  if v0 == 0 then goto L245418;
  #L245414.  v0:= -1I;
  #L245416.  return v0;
  #L245418.  v0:= 0I;
  #L24541a.  return v0;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2459dc.  v0:= v1.`e.e.a.b.f.k.t0.i` @type ^`java.util.Set` @kind object;
  #L2459e0.  if v0 != 0 then goto L2459f2;
  #L2459e4.  v0:= new `e.e.a.b.f.k.o0`;
  #L2459e8.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/o0;.<init>:(Le/e/a/b/f/k/t0;)V` @kind direct;
  #L2459ee.  v1.`e.e.a.b.f.k.t0.i` @type ^`java.util.Set` := v0 @kind object;
  #L2459f2.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.k.t0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/t0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2455ec.  call temp:= `b`(v1) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L2455f2.  v0:= temp @kind object;
  #L2455f4.  if v0 == 0 then goto L245602;
  #L2455f8.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2455fe.  v2:= temp @kind object;
  #L245600.  return v2 @kind object;
  #L245602.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/k/t0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L245608.  v2:= temp;
  #L24560a.  v0:= -1I;
  #L24560c.  if v2 != v0 then goto L245614;
  #L245610.  v2:= 0I;
  #L245612.  return v2 @kind object;
  #L245614.  v0:= v1.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245618.  v2:= v0[v2] @kind object;
  #L24561c.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L245398.  call temp:= `size`(v1) @signature `Le/e/a/b/f/k/t0;.size:()I` @kind virtual;
  #L24539e.  v0:= temp;
  #L2453a0.  if v0 != 0 then goto L2453a8;
  #L2453a4.  v0:= 1I;
  #L2453a6.  return v0;
  #L2453a8.  v0:= 0I;
  #L2453aa.  return v0;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L245a04.  v0:= v1.`e.e.a.b.f.k.t0.h` @type ^`java.util.Set` @kind object;
  #L245a08.  if v0 != 0 then goto L245a1a;
  #L245a0c.  v0:= new `e.e.a.b.f.k.q0`;
  #L245a10.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/q0;.<init>:(Le/e/a/b/f/k/t0;)V` @kind direct;
  #L245a16.  v1.`e.e.a.b.f.k.t0.h` @type ^`java.util.Set` := v0 @kind object;
  #L245a1a.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.k.t0` v17 @kind this, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object) @signature `Le/e/a/b/f/k/t0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L245630.  v0:= v17 @kind object;
  #L245634.  v1:= v18 @kind object;
  #L245638.  v2:= v19 @kind object;
  #L24563c.  call temp:= `a`(v17) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L245642.  v3:= temp;
  #L245644.  if v3 == 0 then goto L2456be;
  #L245648.  call temp:= `a`(v17) @signature `Le/e/a/b/f/k/t0;.a:()Z` @kind virtual;
  #L24564e.  v3:= temp;
  #L245650.  v4:= "Arrays already allocated" @kind object;
  #L245654.  call `a`(v3, v4) @signature `Le/e/a/b/f/k/r;.a:(ZLjava/lang/Object;)V` @kind static;
  #L24565a.  v3:= v0.`e.e.a.b.f.k.t0.f` @type ^`int`;
  #L24565e.  v4:= v3 + 1;
  #L245662.  v5:= 2I;
  #L245664.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24566a.  v4:= temp;
  #L24566c.  call temp:= `highestOneBit`(v4) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L245672.  v5:= temp;
  #L245674.  v6:= (`double`) v5 @kind i2d;
  #L245676.  v6:= (`int`) v6 @kind d2i;
  #L245678.  if v4 <= v6 then goto L245686;
  #L24567c.  v5:= v5 + v5 @kind int;
  #L24567e.  if v5 > 0 then goto L245686;
  #L245682.  v5:= 2.0F;
  #L245686.  v4:= 4I;
  #L245688.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24568e.  v4:= temp;
  #L245690.  call temp:= `a`(v4) @signature `Le/e/a/b/f/k/u0;.a:(I)Ljava/lang/Object;` @kind static;
  #L245696.  v5:= temp @kind object;
  #L245698.  v0.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` := v5 @kind object;
  #L24569c.  v4:= v4 + -1;
  #L2456a0.  call `c`(v0, v4) @signature `Le/e/a/b/f/k/t0;.c:(I)V` @kind direct;
  #L2456a6.  v4:= new `int`[v3];
  #L2456aa.  v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] := v4 @kind object;
  #L2456ae.  v4:= new `java.lang.Object`[v3];
  #L2456b2.  v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] := v4 @kind object;
  #L2456b6.  v3:= new `java.lang.Object`[v3];
  #L2456ba.  v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2456be.  call temp:= `b`(v17) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L2456c4.  v3:= temp @kind object;
  #L2456c6.  if v3 == 0 then goto L2456d4;
  #L2456ca.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2456d0.  v1:= temp @kind object;
  #L2456d2.  return v1 @kind object;
  #L2456d4.  v3:= v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L2456d8.  v4:= v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L2456dc.  v5:= v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L2456e0.  v6:= v0.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L2456e4.  v7:= v6 + 1;
  #L2456e8.  call temp:= `a`(v18) @signature `Le/e/a/b/f/k/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L2456ee.  v8:= temp;
  #L2456f0.  call temp:= `f`(v17) @signature `Le/e/a/b/f/k/t0;.f:()I` @kind direct;
  #L2456f6.  v9:= temp;
  #L2456f8.  v10:= v8 ^& v9 @kind int;
  #L2456fc.  v11:= v0.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245700.  call temp:= `a`(v11, v10) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L245706.  v11:= temp;
  #L245708.  if v11 != 0 then goto L24572e;
  #L24570c.  if v7 <= v9 then goto L245722;
  #L245710.  call temp:= `b`(v9) @signature `Le/e/a/b/f/k/u0;.b:(I)I` @kind static;
  #L245716.  v3:= temp;
  #L245718.  call temp:= `a`(v0, v9, v3, v8, v6) @signature `Le/e/a/b/f/k/t0;.a:(IIII)I` @kind direct;
  #L24571e.  v9:= temp;
  #L245720.  goto L2457f2;
  #L245722.  v3:= v0.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` @kind object;
  #L245726.  call `a`(v3, v10, v7) @signature `Le/e/a/b/f/k/u0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L24572c.  goto L2457f2;
  #L24572e.  v10:= ~v9 @kind int;
  #L245730.  v14:= v8 ^& v10 @kind int;
  #L245734.  v15:= 0I;
  #L245736.  v11:= v11 + -1;
  #L24573a.  v16:= v3[v11];
  #L24573e.  v12:= v16 ^& v10 @kind int;
  #L245742.  if v12 != v14 then goto L245762;
  #L245746.  v13:= v4[v11] @kind object;
  #L24574a.  call temp:= `a`(v1, v13) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L245750.  v13:= temp;
  #L245752.  if v13 != 0 then goto L245758;
  #L245756.  goto L245762;
  #L245758.  v1:= v5[v11] @kind object;
  #L24575c.  v5[v11]:= v2 @kind object;
  #L245760.  return v1 @kind object;
  #L245762.  v13:= v16 ^& v9 @kind int;
  #L245766.  v16:= 1I;
  #L24576a.  v15:= v15 + 1;
  #L24576e.  if v13 != 0 then goto L24587a;
  #L245772.  v4:= 9I;
  #L245776.  if v15 < v4 then goto L2457e2;
  #L24577a.  call temp:= `f`(v17) @signature `Le/e/a/b/f/k/t0;.f:()I` @kind direct;
  #L245780.  v3:= temp;
  #L245782.  v4:= new `java.util.LinkedHashMap`;
  #L245786.  v3:= v3 + 1;
  #L24578a.  v5:= 1.0F;
  #L24578e.  call `<init>`(v4, v3, v5) @signature `Ljava/util/LinkedHashMap;.<init>:(IF)V` @kind direct;
  #L245794.  call temp:= `d`(v17) @signature `Le/e/a/b/f/k/t0;.d:()I` @kind virtual;
  #L24579a.  v3:= temp;
  #L24579c.  if v3 < 0 then goto L2457c0;
  #L2457a0.  v5:= v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L2457a4.  v5:= v5[v3] @kind object;
  #L2457a8.  v6:= v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L2457ac.  v6:= v6[v3] @kind object;
  #L2457b0.  call temp:= `put`(v4, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2457b6.  call temp:= `b`(v0, v3) @signature `Le/e/a/b/f/k/t0;.b:(I)I` @kind virtual;
  #L2457bc.  v3:= temp;
  #L2457be.  goto L24579c;
  #L2457c0.  v0.`e.e.a.b.f.k.t0.b` @type ^`java.lang.Object` := v4 @kind object;
  #L2457c4.  v3:= 0I;
  #L2457c6.  v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] := v3 @kind object;
  #L2457ca.  v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2457ce.  v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2457d2.  call `c`(v17) @signature `Le/e/a/b/f/k/t0;.c:()V` @kind virtual;
  #L2457d8.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2457de.  v1:= temp @kind object;
  #L2457e0.  return v1 @kind object;
  #L2457e2.  if v7 <= v9 then goto L2457e8;
  #L2457e6.  goto L245710;
  #L2457e8.  v4:= v7 ^& v9 @kind int;
  #L2457ec.  v4:= v4 ^| v12 @kind int;
  #L2457ee.  v3[v11]:= v4;
  #L2457f2.  v3:= v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L2457f6.  v3:= length @variable v3;
  #L2457f8.  if v7 <= v3 then goto L245850;
  #L2457fc.  v4:= 1073741823I;
  #L245802.  v5:= v3 ^>> 1;
  #L245806.  v11:= 1I;
  #L245808.  call temp:= `max`(v11, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L24580e.  v5:= temp;
  #L245810.  v5:= v5 + v3 @kind int;
  #L245812.  v5:= v5 ^| v11 @kind int;
  #L245814.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L24581a.  v4:= temp;
  #L24581c.  if v4 == v3 then goto L245850;
  #L245820.  v3:= v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245824.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L24582a.  v3:= temp @kind object;
  #L24582c.  v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] := v3 @kind object;
  #L245830.  v3:= v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245834.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L24583a.  v3:= temp @kind object;
  #L24583c.  v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L245840.  v3:= v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245844.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L24584a.  v3:= temp @kind object;
  #L24584c.  v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L245850.  v3:= v0.`e.e.a.b.f.k.t0.c` @type ^`int`[] @kind object;
  #L245854.  v4:= ~v9 @kind int;
  #L245856.  v4:= v4 ^& v8 @kind int;
  #L245858.  v3[v6]:= v4;
  #L24585c.  v3:= v0.`e.e.a.b.f.k.t0.d` @type ^`java.lang.Object`[] @kind object;
  #L245860.  v3[v6]:= v1 @kind object;
  #L245864.  v1:= v0.`e.e.a.b.f.k.t0.e` @type ^`java.lang.Object`[] @kind object;
  #L245868.  v1[v6]:= v2 @kind object;
  #L24586c.  v0.`e.e.a.b.f.k.t0.g` @type ^`int` := v7;
  #L245870.  call `c`(v17) @signature `Le/e/a/b/f/k/t0;.c:()V` @kind virtual;
  #L245876.  v12:= 0I;
  #L245878.  return v12 @kind object;
  #L24587a.  v11:= v13;
  #L24587c.  goto L245736;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.k.t0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/k/t0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L245890.  call temp:= `b`(v1) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L245896.  v0:= temp @kind object;
  #L245898.  if v0 == 0 then goto L2458a6;
  #L24589c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2458a2.  v2:= temp @kind object;
  #L2458a4.  return v2 @kind object;
  #L2458a6.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/k/t0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2458ac.  v2:= temp @kind object;
  #L2458ae.  v0:= `@@e.e.a.b.f.k.t0.k` @type ^`java.lang.Object` @kind object;
  #L2458b2.  if v2 != v0 then goto L2458b8;
  #L2458b6.  v2:= 0I;
  #L2458b8.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2453dc.  call temp:= `b`(v1) @signature `Le/e/a/b/f/k/t0;.b:()Ljava/util/Map;` @kind virtual;
  #L2453e2.  v0:= temp @kind object;
  #L2453e4.  if v0 == 0 then goto L2453f2;
  #L2453e8.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2453ee.  v0:= temp;
  #L2453f0.  goto L2453f6;
  #L2453f2.  v0:= v1.`e.e.a.b.f.k.t0.g` @type ^`int`;
  #L2453f6.  return v0;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.k.t0` v1 @kind this) @signature `Le/e/a/b/f/k/t0;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L24598c.  v0:= v1.`e.e.a.b.f.k.t0.j` @type ^`java.util.Collection` @kind object;
  #L245990.  if v0 != 0 then goto L2459a2;
  #L245994.  v0:= new `e.e.a.b.f.k.s0`;
  #L245998.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/s0;.<init>:(Le/e/a/b/f/k/t0;)V` @kind direct;
  #L24599e.  v1.`e.e.a.b.f.k.t0.j` @type ^`java.util.Collection` := v0 @kind object;
  #L2459a2.  return v0 @kind object;
}
