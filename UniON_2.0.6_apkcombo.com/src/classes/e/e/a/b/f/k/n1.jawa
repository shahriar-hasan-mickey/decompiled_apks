record `e.e.a.b.f.k.n1` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractMap` @kind class {
  `java.util.Set` `e.e.a.b.f.k.n1.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.k.n1.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.k.n1` v0 @kind this) @signature `Le/e/a/b/f/k/n1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L247240.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L247246.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Le/e/a/b/f/k/n1;.a:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.k.n1` v1 @kind this) @signature `Le/e/a/b/f/k/n1;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L247218.  v0:= v1.`e.e.a.b.f.k.n1.b` @type ^`java.util.Set` @kind object;
  #L24721c.  if v0 != 0 then goto L24722c;
  #L247220.  call temp:= `a`(v1) @signature `Le/e/a/b/f/k/n1;.a:()Ljava/util/Set;` @kind virtual;
  #L247226.  v0:= temp @kind object;
  #L247228.  v1.`e.e.a.b.f.k.n1.b` @type ^`java.util.Set` := v0 @kind object;
  #L24722c.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.k.n1` v1 @kind this) @signature `Le/e/a/b/f/k/n1;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2471f0.  v0:= v1.`e.e.a.b.f.k.n1.c` @type ^`java.util.Collection` @kind object;
  #L2471f4.  if v0 != 0 then goto L247206;
  #L2471f8.  v0:= new `e.e.a.b.f.k.m1`;
  #L2471fc.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/k/m1;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L247202.  v1.`e.e.a.b.f.k.n1.c` @type ^`java.util.Collection` := v0 @kind object;
  #L247206.  return v0 @kind object;
}
