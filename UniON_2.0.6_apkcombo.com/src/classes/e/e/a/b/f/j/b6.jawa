record `e.e.a.b.f.j.b6` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.j.b6.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.j.b6.c` @AccessFlag PRIVATE;
  `java.util.Iterator` `e.e.a.b.f.j.b6.d` @AccessFlag PRIVATE;
  `e.e.a.b.f.j.t5` `e.e.a.b.f.j.b6.e` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.j.b6` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object) @signature `Le/e/a/b/f/j/b6;.<init>:(Le/e/a/b/f/j/t5;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L230820.  v0.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` := v1 @kind object;
  #L230824.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23082a.  v1:= -1I;
  #L23082c.  v0.`e.e.a.b.f.j.b6.b` @type ^`int` := v1;
  #L230830.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.b6` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object, `e.e.a.b.f.j.w5` v2 @kind object) @signature `Le/e/a/b/f/j/b6;.<init>:(Le/e/a/b/f/j/t5;Le/e/a/b/f/j/w5;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L230844.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/b6;.<init>:(Le/e/a/b/f/j/t5;)V` @kind direct;
  #L23084a.  return @kind void;
}
procedure `java.util.Iterator` `zza`(`e.e.a.b.f.j.b6` v1 @kind this) @signature `Le/e/a/b/f/j/b6;.zza:()Ljava/util/Iterator;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2307e0.  v0:= v1.`e.e.a.b.f.j.b6.d` @type ^`java.util.Iterator` @kind object;
  #L2307e4.  if v0 != 0 then goto L230808;
  #L2307e8.  v0:= v1.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2307ec.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/t5;.c:(Le/e/a/b/f/j/t5;)Ljava/util/Map;` @kind static;
  #L2307f2.  v0:= temp @kind object;
  #L2307f4.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2307fa.  v0:= temp @kind object;
  #L2307fc.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L230802.  v0:= temp @kind object;
  #L230804.  v1.`e.e.a.b.f.j.b6.d` @type ^`java.util.Iterator` := v0 @kind object;
  #L230808.  v0:= v1.`e.e.a.b.f.j.b6.d` @type ^`java.util.Iterator` @kind object;
  #L23080c.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.j.b6` v3 @kind this) @signature `Le/e/a/b/f/j/b6;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L230714.  v0:= v3.`e.e.a.b.f.j.b6.b` @type ^`int`;
  #L230718.  v1:= 1I;
  #L23071a.  v0:= v0 + v1 @kind int;
  #L23071c.  v2:= v3.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230720.  call temp:= `b`(v2) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L230726.  v2:= temp @kind object;
  #L230728.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23072e.  v2:= temp;
  #L230730.  if v0 < v2 then goto L230766;
  #L230734.  v0:= v3.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230738.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/t5;.c:(Le/e/a/b/f/j/t5;)Ljava/util/Map;` @kind static;
  #L23073e.  v0:= temp @kind object;
  #L230740.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L230746.  v0:= temp;
  #L230748.  if v0 != 0 then goto L230762;
  #L23074c.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/j/b6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L230752.  v0:= temp @kind object;
  #L230754.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23075a.  v0:= temp;
  #L23075c.  if v0 == 0 then goto L230762;
  #L230760.  goto L230766;
  #L230762.  v0:= 0I;
  #L230764.  return v0;
  #L230766.  return v1;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.j.b6` v2 @kind this) @signature `Le/e/a/b/f/j/b6;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L230778.  v0:= 1I;
  #L23077a.  v2.`e.e.a.b.f.j.b6.c` @type ^`boolean` := v0 @kind boolean;
  #L23077e.  v1:= v2.`e.e.a.b.f.j.b6.b` @type ^`int`;
  #L230782.  v1:= v1 + v0 @kind int;
  #L230784.  v2.`e.e.a.b.f.j.b6.b` @type ^`int` := v1;
  #L230788.  v0:= v2.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L23078c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L230792.  v0:= temp @kind object;
  #L230794.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23079a.  v0:= temp;
  #L23079c.  if v1 >= v0 then goto L2307be;
  #L2307a0.  v0:= v2.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2307a4.  call temp:= `b`(v0) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L2307aa.  v0:= temp @kind object;
  #L2307ac.  v1:= v2.`e.e.a.b.f.j.b6.b` @type ^`int`;
  #L2307b0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2307b6.  v0:= temp @kind object;
  #L2307b8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2307bc.  return v0 @kind object;
  #L2307be.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/b6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2307c4.  v0:= temp @kind object;
  #L2307c6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2307cc.  v0:= temp @kind object;
  #L2307ce.  goto L2307b8;
}
procedure `void` `remove`(`e.e.a.b.f.j.b6` v3 @kind this) @signature `Le/e/a/b/f/j/b6;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23085c.  v0:= v3.`e.e.a.b.f.j.b6.c` @type ^`boolean` @kind boolean;
  #L230860.  if v0 == 0 then goto L2308b8;
  #L230864.  v0:= 0I;
  #L230866.  v3.`e.e.a.b.f.j.b6.c` @type ^`boolean` := v0 @kind boolean;
  #L23086a.  v0:= v3.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L23086e.  call `a`(v0) @signature `Le/e/a/b/f/j/t5;.a:(Le/e/a/b/f/j/t5;)V` @kind static;
  #L230874.  v0:= v3.`e.e.a.b.f.j.b6.b` @type ^`int`;
  #L230878.  v1:= v3.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L23087c.  call temp:= `b`(v1) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L230882.  v1:= temp @kind object;
  #L230884.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23088a.  v1:= temp;
  #L23088c.  if v0 >= v1 then goto L2308a8;
  #L230890.  v0:= v3.`e.e.a.b.f.j.b6.e` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230894.  v1:= v3.`e.e.a.b.f.j.b6.b` @type ^`int`;
  #L230898.  v2:= v1 + -1;
  #L23089c.  v3.`e.e.a.b.f.j.b6.b` @type ^`int` := v2;
  #L2308a0.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/j/t5;.a:(Le/e/a/b/f/j/t5;I)Ljava/lang/Object;` @kind static;
  #L2308a6.  return @kind void;
  #L2308a8.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/j/b6;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2308ae.  v0:= temp @kind object;
  #L2308b0.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2308b6.  return @kind void;
  #L2308b8.  v0:= new `java.lang.IllegalStateException`;
  #L2308bc.  v1:= "remove() was called before next()" @kind object;
  #L2308c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2308c6.  throw v0;
}
