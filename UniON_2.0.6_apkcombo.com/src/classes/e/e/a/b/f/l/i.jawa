record `e.e.a.b.f.l.i` @kind class @AccessFlag FINAL extends `java.io.OutputStream` @kind class {
  `long` `e.e.a.b.f.l.i.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.l.i` v2 @kind this) @signature `Le/e/a/b/f/l/i;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L257be8.  call `<init>`(v2) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L257bee.  v0:= 0L;
  #L257bf2.  v2.`e.e.a.b.f.l.i.b` @type ^`long` := v0 @kind wide;
  #L257bf6.  return @kind void;
}
procedure `long` `k`(`e.e.a.b.f.l.i` v2 @kind this) @signature `Le/e/a/b/f/l/i;.k:()J` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L257bd0.  v0:= v2.`e.e.a.b.f.l.i.b` @type ^`long` @kind wide;
  #L257bd4.  return v0 @kind wide;
}
procedure `void` `write`(`e.e.a.b.f.l.i` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/l/i;.write:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L257c6c.  v0:= v4.`e.e.a.b.f.l.i.b` @type ^`long` @kind wide;
  #L257c70.  v2:= 1L;
  #L257c74.  v0:= v0 + v2 @kind long;
  #L257c76.  v4.`e.e.a.b.f.l.i.b` @type ^`long` := v0 @kind wide;
  #L257c7a.  return @kind void;
}
procedure `void` `write`(`e.e.a.b.f.l.i` v4 @kind this, `byte`[] v5 @kind object) @signature `Le/e/a/b/f/l/i;.write:([B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L257c08.  v0:= v4.`e.e.a.b.f.l.i.b` @type ^`long` @kind wide;
  #L257c0c.  v5:= length @variable v5;
  #L257c0e.  v2:= (`long`) v5 @kind i2l;
  #L257c10.  v0:= v0 + v2 @kind long;
  #L257c12.  v4.`e.e.a.b.f.l.i.b` @type ^`long` := v0 @kind wide;
  #L257c16.  return @kind void;
}
procedure `void` `write`(`e.e.a.b.f.l.i` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/l/i;.write:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L257c28.  if v4 < 0 then goto L257c4e;
  #L257c2c.  v3:= length @variable v3;
  #L257c2e.  if v4 > v3 then goto L257c4e;
  #L257c32.  if v5 < 0 then goto L257c4e;
  #L257c36.  v4:= v4 + v5 @kind int;
  #L257c38.  if v4 > v3 then goto L257c4e;
  #L257c3c.  if v4 < 0 then goto L257c4e;
  #L257c40.  v3:= v2.`e.e.a.b.f.l.i.b` @type ^`long` @kind wide;
  #L257c44.  v0:= (`long`) v5 @kind i2l;
  #L257c46.  v3:= v3 + v0 @kind long;
  #L257c48.  v2.`e.e.a.b.f.l.i.b` @type ^`long` := v3 @kind wide;
  #L257c4c.  return @kind void;
  #L257c4e.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L257c52.  call `<init>`(v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L257c58.  throw v3;
}
