record `e.e.a.b.f.n.du` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.eu` @kind class {
  `int` `e.e.a.b.f.n.du.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.n.du.e` @AccessFlag FINAL_TRANSIENT;
  `e.e.a.b.f.n.eu` `e.e.a.b.f.n.du.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.du` v0 @kind this, `e.e.a.b.f.n.eu` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/du;.<init>:(Le/e/a/b/f/n/eu;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ab958.  v0.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` := v1 @kind object;
  #L2ab95c.  call `<init>`(v0) @signature `Le/e/a/b/f/n/eu;.<init>:()V` @kind direct;
  #L2ab962.  v0.`e.e.a.b.f.n.du.d` @type ^`int` := v2;
  #L2ab966.  v0.`e.e.a.b.f.n.du.e` @type ^`int` := v3;
  #L2ab96a.  return @kind void;
}
procedure `e.e.a.b.f.n.eu` `a`(`e.e.a.b.f.n.du` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/n/du;.a:(II)Le/e/a/b/f/n/eu;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ab850.  v0:= v2.`e.e.a.b.f.n.du.e` @type ^`int`;
  #L2ab854.  call `a`(v3, v4, v0) @signature `Le/e/a/b/f/n/pt;.a:(III)V` @kind static;
  #L2ab85a.  v0:= v2.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` @kind object;
  #L2ab85e.  v1:= v2.`e.e.a.b.f.n.du.d` @type ^`int`;
  #L2ab862.  v3:= v3 + v1 @kind int;
  #L2ab864.  v4:= v4 + v1 @kind int;
  #L2ab866.  call temp:= `a`(v0, v3, v4) @signature `Le/e/a/b/f/n/eu;.a:(II)Le/e/a/b/f/n/eu;` @kind virtual;
  #L2ab86c.  v3:= temp @kind object;
  #L2ab86e.  return v3 @kind object;
}
procedure `int` `c`(`e.e.a.b.f.n.du` v2 @kind this) @signature `Le/e/a/b/f/n/du;.c:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2ab8bc.  v0:= v2.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` @kind object;
  #L2ab8c0.  call temp:= `d`(v0) @signature `Le/e/a/b/f/n/au;.d:()I` @kind virtual;
  #L2ab8c6.  v0:= temp;
  #L2ab8c8.  v1:= v2.`e.e.a.b.f.n.du.d` @type ^`int`;
  #L2ab8cc.  v0:= v0 + v1 @kind int;
  #L2ab8ce.  v1:= v2.`e.e.a.b.f.n.du.e` @type ^`int`;
  #L2ab8d2.  v0:= v0 + v1 @kind int;
  #L2ab8d4.  return v0;
}
procedure `int` `d`(`e.e.a.b.f.n.du` v2 @kind this) @signature `Le/e/a/b/f/n/du;.d:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2ab898.  v0:= v2.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` @kind object;
  #L2ab89c.  call temp:= `d`(v0) @signature `Le/e/a/b/f/n/au;.d:()I` @kind virtual;
  #L2ab8a2.  v0:= temp;
  #L2ab8a4.  v1:= v2.`e.e.a.b.f.n.du.d` @type ^`int`;
  #L2ab8a8.  v0:= v0 + v1 @kind int;
  #L2ab8aa.  return v0;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.n.du` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/n/du;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ab8e8.  v0:= v2.`e.e.a.b.f.n.du.e` @type ^`int`;
  #L2ab8ec.  v1:= "index" @kind object;
  #L2ab8f0.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/n/pt;.a:(IILjava/lang/String;)I` @kind static;
  #L2ab8f6.  v0:= v2.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` @kind object;
  #L2ab8fa.  v1:= v2.`e.e.a.b.f.n.du.d` @type ^`int`;
  #L2ab8fe.  v3:= v3 + v1 @kind int;
  #L2ab900.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ab906.  v3:= temp @kind object;
  #L2ab908.  return v3 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.n.du` v1 @kind this) @signature `Le/e/a/b/f/n/du;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ab880.  v0:= v1.`e.e.a.b.f.n.du.e` @type ^`int`;
  #L2ab884.  return v0;
}
procedure `java.util.List` `subList`(`e.e.a.b.f.n.du` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/n/du;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2ab93c.  call temp:= `a`(v0, v1, v2) @signature `Le/e/a/b/f/n/du;.a:(II)Le/e/a/b/f/n/eu;` @kind virtual;
  #L2ab942.  v1:= temp @kind object;
  #L2ab944.  return v1 @kind object;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.n.du` v1 @kind this) @signature `Le/e/a/b/f/n/du;.zzb:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L2ab91c.  v0:= v1.`e.e.a.b.f.n.du.f` @type ^`e.e.a.b.f.n.eu` @kind object;
  #L2ab920.  call temp:= `zzb`(v0) @signature `Le/e/a/b/f/n/au;.zzb:()[Ljava/lang/Object;` @kind virtual;
  #L2ab926.  v0:= temp @kind object;
  #L2ab928.  return v0 @kind object;
}
