record `e.e.a.b.f.n.j50` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.j50.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.j50` `@@e.e.a.b.f.n.j50.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.j50` `@@e.e.a.b.f.n.j50.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.j50` `@@e.e.a.b.f.n.j50.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.j50`[] `@@e.e.a.b.f.n.j50.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/j50;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ba7f4.  v0:= new `e.e.a.b.f.n.j50`;
  #L2ba7f8.  v1:= 0I;
  #L2ba7fa.  v2:= "COORDINATE_TYPE_UNSPECIFIED" @kind object;
  #L2ba7fe.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/j50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba804.  `@@e.e.a.b.f.n.j50.c` @type ^`e.e.a.b.f.n.j50` := v0 @kind object;
  #L2ba808.  v0:= new `e.e.a.b.f.n.j50`;
  #L2ba80c.  v2:= 1I;
  #L2ba80e.  v3:= "NORMALIZED" @kind object;
  #L2ba812.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/j50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba818.  `@@e.e.a.b.f.n.j50.d` @type ^`e.e.a.b.f.n.j50` := v0 @kind object;
  #L2ba81c.  v0:= new `e.e.a.b.f.n.j50`;
  #L2ba820.  v3:= 2I;
  #L2ba822.  v4:= "IMAGE" @kind object;
  #L2ba826.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/j50;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2ba82c.  `@@e.e.a.b.f.n.j50.e` @type ^`e.e.a.b.f.n.j50` := v0 @kind object;
  #L2ba830.  v0:= 3I;
  #L2ba832.  v0:= new `e.e.a.b.f.n.j50`[v0];
  #L2ba836.  v4:= `@@e.e.a.b.f.n.j50.c` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba83a.  v0[v1]:= v4 @kind object;
  #L2ba83e.  v1:= `@@e.e.a.b.f.n.j50.d` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba842.  v0[v2]:= v1 @kind object;
  #L2ba846.  v1:= `@@e.e.a.b.f.n.j50.e` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba84a.  v0[v3]:= v1 @kind object;
  #L2ba84e.  `@@e.e.a.b.f.n.j50.f` @type ^`e.e.a.b.f.n.j50`[] := v0 @kind object;
  #L2ba852.  v0:= new `e.e.a.b.f.n.h50`;
  #L2ba856.  call `<init>`(v0) @signature `Le/e/a/b/f/n/h50;.<init>:()V` @kind direct;
  #L2ba85c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.j50` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/j50;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ba870.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ba876.  v0.`e.e.a.b.f.n.j50.b` @type ^`int` := v3;
  #L2ba87a.  return @kind void;
}
procedure `e.e.a.b.f.n.j50` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/j50;.a:(I)Le/e/a/b/f/n/j50;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ba6f0.  if v1 == 0 then goto L2ba710;
  #L2ba6f4.  v0:= 1I;
  #L2ba6f6.  if v1 == v0 then goto L2ba70a;
  #L2ba6fa.  v0:= 2I;
  #L2ba6fc.  if v1 == v0 then goto L2ba704;
  #L2ba700.  v1:= 0I;
  #L2ba702.  return v1 @kind object;
  #L2ba704.  v1:= `@@e.e.a.b.f.n.j50.e` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba708.  return v1 @kind object;
  #L2ba70a.  v1:= `@@e.e.a.b.f.n.j50.d` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba70e.  return v1 @kind object;
  #L2ba710.  v1:= `@@e.e.a.b.f.n.j50.c` @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba714.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/j50;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ba6d8.  v0:= `@@e.e.a.b.f.n.i50.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2ba6dc.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.j50`[] `values`() @signature `Le/e/a/b/f/n/j50;.values:()[Le/e/a/b/f/n/j50;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ba728.  v0:= `@@e.e.a.b.f.n.j50.f` @type ^`e.e.a.b.f.n.j50`[] @kind object;
  #L2ba72c.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/j50;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ba732.  v0:= temp @kind object;
  #L2ba734.  v0:= (`e.e.a.b.f.n.j50`[]) v0 @kind object;
  #L2ba738.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.j50` v2 @kind this) @signature `Le/e/a/b/f/n/j50;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ba764.  v0:= new `java.lang.StringBuilder`;
  #L2ba768.  v1:= "<" @kind object;
  #L2ba76c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba772.  v1:= constclass @type ^`e.e.a.b.f.n.j50` @kind object;
  #L2ba776.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ba77c.  v1:= temp @kind object;
  #L2ba77e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba784.  v1:= 64I;
  #L2ba788.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba78e.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ba794.  v1:= temp;
  #L2ba796.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2ba79c.  v1:= temp @kind object;
  #L2ba79e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7a4.  v1:= " number=" @kind object;
  #L2ba7a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7ae.  v1:= v2.`e.e.a.b.f.n.j50.b` @type ^`int`;
  #L2ba7b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7b8.  v1:= " name=" @kind object;
  #L2ba7bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7c2.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2ba7c8.  v1:= temp @kind object;
  #L2ba7ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7d0.  v1:= 62I;
  #L2ba7d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba7e0.  v0:= temp @kind object;
  #L2ba7e2.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.j50` v1 @kind this) @signature `Le/e/a/b/f/n/j50;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ba74c.  v0:= v1.`e.e.a.b.f.n.j50.b` @type ^`int`;
  #L2ba750.  return v0;
}
