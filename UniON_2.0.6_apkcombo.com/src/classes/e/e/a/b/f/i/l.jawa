record `e.e.a.b.f.i.l` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/i/l;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L21c8dc.  if v2 == 0 then goto L21c8e2;
  #L21c8e0.  return v2 @kind object;
  #L21c8e2.  v2:= new `java.lang.NullPointerException`;
  #L21c8e6.  v0:= new `java.lang.StringBuilder`;
  #L21c8ea.  v1:= 20I;
  #L21c8ee.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21c8f4.  v1:= "at index " @kind object;
  #L21c8f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c8fe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c904.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c90a.  v3:= temp @kind object;
  #L21c90c.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c912.  throw v2;
}
procedure `java.lang.Object`[] `a`(`java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/i/l;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L21c924.  v0:= 0I;
  #L21c926.  if v0 >= v3 then goto L21c93a;
  #L21c92a.  v1:= v2[v0] @kind object;
  #L21c92e.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/i/l;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L21c934.  v0:= v0 + 1;
  #L21c938.  goto L21c926;
  #L21c93a.  return v2 @kind object;
}
