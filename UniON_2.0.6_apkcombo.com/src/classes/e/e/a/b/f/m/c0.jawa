record `e.e.a.b.f.m.c0` @kind class @AccessFlag FINAL extends `java.util.AbstractCollection` @kind class {
  `e.e.a.b.f.m.d0` `e.e.a.b.f.m.c0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.c0` v0 @kind this, `e.e.a.b.f.m.d0` v1 @kind object) @signature `Le/e/a/b/f/m/c0;.<init>:(Le/e/a/b/f/m/d0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L265c68.  v0.`e.e.a.b.f.m.c0.b` @type ^`e.e.a.b.f.m.d0` := v1 @kind object;
  #L265c6c.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L265c72.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.m.c0` v1 @kind this) @signature `Le/e/a/b/f/m/c0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L265c84.  v0:= v1.`e.e.a.b.f.m.c0.b` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265c88.  call `clear`(v0) @signature `Le/e/a/b/f/m/d0;.clear:()V` @kind virtual;
  #L265c8e.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.c0` v2 @kind this) @signature `Le/e/a/b/f/m/c0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L265c28.  v0:= v2.`e.e.a.b.f.m.c0.b` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265c2c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/m/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L265c32.  v1:= temp @kind object;
  #L265c34.  if v1 == 0 then goto L265c4a;
  #L265c38.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L265c3e.  v0:= temp @kind object;
  #L265c40.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L265c46.  v0:= temp @kind object;
  #L265c48.  goto L265c56;
  #L265c4a.  v1:= new `e.e.a.b.f.m.w`;
  #L265c4e.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/m/w;.<init>:(Le/e/a/b/f/m/d0;)V` @kind direct;
  #L265c54.  v0:= v1 @kind object;
  #L265c56.  return v0 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.m.c0` v1 @kind this) @signature `Le/e/a/b/f/m/c0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L265c08.  v0:= v1.`e.e.a.b.f.m.c0.b` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265c0c.  call temp:= `size`(v0) @signature `Le/e/a/b/f/m/d0;.size:()I` @kind virtual;
  #L265c12.  v0:= temp;
  #L265c14.  return v0;
}
