record `e.e.a.b.f.e.k` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.e.k.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.e.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.e.k` v4 @kind this) @signature `Le/e/a/b/f/e/k;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21888c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L218892.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L218896.  v1:= 16I;
  #L21889a.  v2:= 0.75F;
  #L21889e.  v3:= 10I;
  #L2188a2.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L2188a8.  v4.`e.e.a.b.f.e.k.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L2188ac.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L2188b0.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L2188b6.  v4.`e.e.a.b.f.e.k.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L2188ba.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.e.k` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/e/k;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L21880c.  v5:= v3.`e.e.a.b.f.e.k.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L218810.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L218816.  v5:= temp @kind object;
  #L218818.  if v5 == 0 then goto L218828;
  #L21881c.  v0:= v3.`e.e.a.b.f.e.k.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L218820.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L218826.  goto L21880c;
  #L218828.  v5:= new `e.e.a.b.f.e.j`;
  #L21882c.  v0:= 0I;
  #L21882e.  call `<init>`(v5, v4, v0) @signature `Le/e/a/b/f/e/j;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L218834.  v0:= v3.`e.e.a.b.f.e.k.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L218838.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21883e.  v5:= temp @kind object;
  #L218840.  v5:= (`java.util.List`) v5 @kind object;
  #L218844.  if v5 == 0 then goto L21884a;
  #L218848.  return v5 @kind object;
  #L21884a.  v5:= new `java.util.Vector`;
  #L21884e.  v0:= 2I;
  #L218850.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L218856.  v0:= v3.`e.e.a.b.f.e.k.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L21885a.  v1:= new `e.e.a.b.f.e.j`;
  #L21885e.  v2:= v3.`e.e.a.b.f.e.k.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L218862.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/e/j;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L218868.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21886e.  v4:= temp @kind object;
  #L218870.  v4:= (`java.util.List`) v4 @kind object;
  #L218874.  if v4 != 0 then goto L21887a;
  #L218878.  return v5 @kind object;
  #L21887a.  return v4 @kind object;
}
