record `e.e.a.b.f.q.s0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.z0` @kind interface {
  `e.e.a.b.f.q.z0`[] `e.e.a.b.f.q.s0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.q.s0` v0 @kind this, `e.e.a.b.f.q.z0`[] v1 @kind object) @signature `Le/e/a/b/f/q/s0;.<init>:([Le/e/a/b/f/q/z0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d5810.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d5816.  v0.`e.e.a.b.f.q.s0.a` @type ^`e.e.a.b.f.q.z0`[] := v1 @kind object;
  #L2d581a.  return @kind void;
}
procedure `e.e.a.b.f.q.y0` `a`(`e.e.a.b.f.q.s0` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Le/e/a/b/f/q/s0;.a:(Ljava/lang/Class;)Le/e/a/b/f/q/y0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d5794.  v0:= v4.`e.e.a.b.f.q.s0.a` @type ^`e.e.a.b.f.q.z0`[] @kind object;
  #L2d5798.  v1:= 0I;
  #L2d579a.  v2:= 2I;
  #L2d579c.  if v1 >= v2 then goto L2d57c0;
  #L2d57a0.  v2:= v0[v1] @kind object;
  #L2d57a4.  call temp:= `b`(v2, v5) @signature `Le/e/a/b/f/q/z0;.b:(Ljava/lang/Class;)Z` @kind interface;
  #L2d57aa.  v3:= temp;
  #L2d57ac.  if v3 == 0 then goto L2d57ba;
  #L2d57b0.  call temp:= `a`(v2, v5) @signature `Le/e/a/b/f/q/z0;.a:(Ljava/lang/Class;)Le/e/a/b/f/q/y0;` @kind interface;
  #L2d57b6.  v5:= temp @kind object;
  #L2d57b8.  return v5 @kind object;
  #L2d57ba.  v1:= v1 + 1;
  #L2d57be.  goto L2d579a;
  #L2d57c0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2d57c4.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2d57ca.  v5:= temp @kind object;
  #L2d57cc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d57d2.  v5:= temp @kind object;
  #L2d57d4.  v1:= "No factory is available for message type: " @kind object;
  #L2d57d8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d57de.  v2:= temp;
  #L2d57e0.  if v2 == 0 then goto L2d57ee;
  #L2d57e4.  call temp:= `concat`(v1, v5) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d57ea.  v5:= temp @kind object;
  #L2d57ec.  goto L2d57f8;
  #L2d57ee.  v5:= new `java.lang.String`;
  #L2d57f2.  call `<init>`(v5, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d57f8.  call `<init>`(v0, v5) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d57fe.  throw v0;
}
procedure `boolean` `b`(`e.e.a.b.f.q.s0` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Le/e/a/b/f/q/s0;.b:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d5758.  v0:= v4.`e.e.a.b.f.q.s0.a` @type ^`e.e.a.b.f.q.z0`[] @kind object;
  #L2d575c.  v1:= 0I;
  #L2d575e.  v2:= 0I;
  #L2d5760.  v3:= 2I;
  #L2d5762.  if v2 >= v3 then goto L2d5780;
  #L2d5766.  v3:= v0[v2] @kind object;
  #L2d576a.  call temp:= `b`(v3, v5) @signature `Le/e/a/b/f/q/z0;.b:(Ljava/lang/Class;)Z` @kind interface;
  #L2d5770.  v3:= temp;
  #L2d5772.  if v3 == 0 then goto L2d577a;
  #L2d5776.  v5:= 1I;
  #L2d5778.  return v5;
  #L2d577a.  v2:= v2 + 1;
  #L2d577e.  goto L2d5760;
  #L2d5780.  return v1;
}
