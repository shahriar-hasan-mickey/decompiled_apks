record `e.e.a.b.f.u.r7` @kind class @AccessFlag FINAL extends `java.security.PrivilegedExceptionAction` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.u.r7` v0 @kind this) @signature `Le/e/a/b/f/u/r7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33c4a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33c4ae.  return @kind void;
}
procedure `java.lang.Object` `run`(`e.e.a.b.f.u.r7` v7 @kind this) @signature `Le/e/a/b/f/u/r7;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33c44c.  v0:= constclass @type ^`sun.misc.Unsafe` @kind object;
  #L33c450.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L33c456.  v1:= temp @kind object;
  #L33c458.  v2:= length @variable v1;
  #L33c45a.  v3:= 0I;
  #L33c45c.  v4:= 0I;
  #L33c45e.  if v3 >= v2 then goto L33c496;
  #L33c462.  v5:= v1[v3] @kind object;
  #L33c466.  v6:= 1I;
  #L33c468.  call `setAccessible`(v5, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L33c46e.  call temp:= `get`(v5, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33c474.  v4:= temp @kind object;
  #L33c476.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L33c47c.  v5:= temp;
  #L33c47e.  if v5 == 0 then goto L33c490;
  #L33c482.  call temp:= `cast`(v0, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33c488.  v0:= temp @kind object;
  #L33c48a.  v0:= (`sun.misc.Unsafe`) v0 @kind object;
  #L33c48e.  return v0 @kind object;
  #L33c490.  v3:= v3 + 1;
  #L33c494.  goto L33c45c;
  #L33c496.  return v4 @kind object;
}
