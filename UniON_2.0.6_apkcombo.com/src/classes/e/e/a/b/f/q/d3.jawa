record `e.e.a.b.f.q.d3` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `e.e.a.b.f.q.z4` `e.e.a.b.f.q.d3.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.d3` v0 @kind this, `e.e.a.b.f.q.z4` v1 @kind object) @signature `Le/e/a/b/f/q/d3;.<init>:(Le/e/a/b/f/q/z4;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e0c68.  v0.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` := v1 @kind object;
  #L2e0c6c.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L2e0c72.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.q.d3` v1 @kind this) @signature `Le/e/a/b/f/q/d3;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e0c84.  v0:= v1.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e0c88.  call `clear`(v0) @signature `Le/e/a/b/f/q/z4;.clear:()V` @kind virtual;
  #L2e0c8e.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.d3` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/q/d3;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2dfd8c.  v0:= v3.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfd90.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:()Ljava/util/Map;` @kind virtual;
  #L2dfd96.  v0:= temp @kind object;
  #L2dfd98.  if v0 == 0 then goto L2dfdae;
  #L2dfd9c.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2dfda2.  v0:= temp @kind object;
  #L2dfda4.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2dfdaa.  v4:= temp;
  #L2dfdac.  return v4;
  #L2dfdae.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L2dfdb2.  v1:= 0I;
  #L2dfdb4.  if v0 == 0 then goto L2dfdfa;
  #L2dfdb8.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L2dfdbc.  v0:= v3.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfdc0.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2dfdc6.  v2:= temp @kind object;
  #L2dfdc8.  call temp:= `b`(v0, v2) @signature `Le/e/a/b/f/q/z4;.b:(Le/e/a/b/f/q/z4;Ljava/lang/Object;)I` @kind static;
  #L2dfdce.  v0:= temp;
  #L2dfdd0.  v2:= -1I;
  #L2dfdd2.  if v0 == v2 then goto L2dfdfa;
  #L2dfdd6.  v2:= v3.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfdda.  v2:= v2.`e.e.a.b.f.q.z4.e` @type ^`java.lang.Object`[] @kind object;
  #L2dfdde.  v0:= v2[v0] @kind object;
  #L2dfde2.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2dfde8.  v4:= temp @kind object;
  #L2dfdea.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2dfdf0.  v4:= temp;
  #L2dfdf2.  if v4 == 0 then goto L2dfdfa;
  #L2dfdf6.  v4:= 1I;
  #L2dfdf8.  return v4;
  #L2dfdfa.  return v1;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.d3` v2 @kind this) @signature `Le/e/a/b/f/q/d3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e0334.  v0:= v2.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e0338.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:()Ljava/util/Map;` @kind virtual;
  #L2e033e.  v1:= temp @kind object;
  #L2e0340.  if v1 == 0 then goto L2e0356;
  #L2e0344.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2e034a.  v0:= temp @kind object;
  #L2e034c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e0352.  v0:= temp @kind object;
  #L2e0354.  goto L2e0362;
  #L2e0356.  v1:= new `e.e.a.b.f.q.c1`;
  #L2e035a.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/q/c1;.<init>:(Le/e/a/b/f/q/z4;)V` @kind direct;
  #L2e0360.  v0:= v1 @kind object;
  #L2e0362.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.q.d3` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Le/e/a/b/f/q/d3;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2dfe0c.  v0:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe10.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:()Ljava/util/Map;` @kind virtual;
  #L2dfe16.  v0:= temp @kind object;
  #L2dfe18.  if v0 == 0 then goto L2dfe2e;
  #L2dfe1c.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2dfe22.  v0:= temp @kind object;
  #L2dfe24.  call temp:= `remove`(v0, v10) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2dfe2a.  v10:= temp;
  #L2dfe2c.  return v10;
  #L2dfe2e.  v0:= instanceof @variable v10 @type ^`java.util.Map$Entry` @kind boolean;
  #L2dfe32.  v1:= 0I;
  #L2dfe34.  if v0 == 0 then goto L2dfeba;
  #L2dfe38.  v10:= (`java.util.Map$Entry`) v10 @kind object;
  #L2dfe3c.  v0:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe40.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/z4;.a:()Z` @kind virtual;
  #L2dfe46.  v0:= temp;
  #L2dfe48.  if v0 == 0 then goto L2dfe4e;
  #L2dfe4c.  return v1;
  #L2dfe4e.  v0:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe52.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:(Le/e/a/b/f/q/z4;)I` @kind static;
  #L2dfe58.  v0:= temp;
  #L2dfe5a.  call temp:= `getKey`(v10) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2dfe60.  v2:= temp @kind object;
  #L2dfe62.  call temp:= `getValue`(v10) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2dfe68.  v3:= temp @kind object;
  #L2dfe6a.  v10:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe6e.  call temp:= `c`(v10) @signature `Le/e/a/b/f/q/z4;.c:(Le/e/a/b/f/q/z4;)Ljava/lang/Object;` @kind static;
  #L2dfe74.  v5:= temp @kind object;
  #L2dfe76.  v10:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe7a.  v6:= v10.`e.e.a.b.f.q.z4.c` @type ^`int`[] @kind object;
  #L2dfe7e.  v7:= v10.`e.e.a.b.f.q.z4.d` @type ^`java.lang.Object`[] @kind object;
  #L2dfe82.  v8:= v10.`e.e.a.b.f.q.z4.e` @type ^`java.lang.Object`[] @kind object;
  #L2dfe86.  v4:= v0;
  #L2dfe88.  call temp:= `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L2dfe8e.  v10:= temp;
  #L2dfe90.  v2:= -1I;
  #L2dfe92.  if v10 != v2 then goto L2dfe98;
  #L2dfe96.  return v1;
  #L2dfe98.  v1:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfe9c.  call `a`(v1, v10, v0) @signature `Le/e/a/b/f/q/z4;.a:(II)V` @kind virtual;
  #L2dfea2.  v10:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfea6.  call temp:= `d`(v10) @signature `Le/e/a/b/f/q/z4;.d:(Le/e/a/b/f/q/z4;)I` @kind static;
  #L2dfeac.  v10:= v9.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2dfeb0.  call `c`(v10) @signature `Le/e/a/b/f/q/z4;.c:()V` @kind virtual;
  #L2dfeb6.  v10:= 1I;
  #L2dfeb8.  return v10;
  #L2dfeba.  return v1;
}
procedure `int` `size`(`e.e.a.b.f.q.d3` v1 @kind this) @signature `Le/e/a/b/f/q/d3;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e02fc.  v0:= v1.`e.e.a.b.f.q.d3.b` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e0300.  call temp:= `size`(v0) @signature `Le/e/a/b/f/q/z4;.size:()I` @kind virtual;
  #L2e0306.  v0:= temp;
  #L2e0308.  return v0;
}
