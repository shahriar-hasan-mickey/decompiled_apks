record `e.e.a.b.f.u.u5` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.c6` @kind interface {
  `e.e.a.b.f.u.c6`[] `e.e.a.b.f.u.u5.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.u.u5` v0 @kind this, `e.e.a.b.f.u.c6`[] v1 @kind object) @signature `Le/e/a/b/f/u/u5;.<init>:([Le/e/a/b/f/u/c6;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32fd5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32fd62.  v0.`e.e.a.b.f.u.u5.a` @type ^`e.e.a.b.f.u.c6`[] := v1 @kind object;
  #L32fd66.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.u.u5` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Le/e/a/b/f/u/u5;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32fca4.  v0:= v5.`e.e.a.b.f.u.u5.a` @type ^`e.e.a.b.f.u.c6`[] @kind object;
  #L32fca8.  v1:= length @variable v0;
  #L32fcaa.  v2:= 0I;
  #L32fcac.  v3:= 0I;
  #L32fcae.  if v3 >= v1 then goto L32fccc;
  #L32fcb2.  v4:= v0[v3] @kind object;
  #L32fcb6.  call temp:= `a`(v4, v6) @signature `Le/e/a/b/f/u/c6;.a:(Ljava/lang/Class;)Z` @kind interface;
  #L32fcbc.  v4:= temp;
  #L32fcbe.  if v4 == 0 then goto L32fcc6;
  #L32fcc2.  v6:= 1I;
  #L32fcc4.  return v6;
  #L32fcc6.  v3:= v3 + 1;
  #L32fcca.  goto L32fcae;
  #L32fccc.  return v2;
}
procedure `e.e.a.b.f.u.z5` `b`(`e.e.a.b.f.u.u5` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Le/e/a/b/f/u/u5;.b:(Ljava/lang/Class;)Le/e/a/b/f/u/z5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32fce0.  v0:= v5.`e.e.a.b.f.u.u5.a` @type ^`e.e.a.b.f.u.c6`[] @kind object;
  #L32fce4.  v1:= length @variable v0;
  #L32fce6.  v2:= 0I;
  #L32fce8.  if v2 >= v1 then goto L32fd0c;
  #L32fcec.  v3:= v0[v2] @kind object;
  #L32fcf0.  call temp:= `a`(v3, v6) @signature `Le/e/a/b/f/u/c6;.a:(Ljava/lang/Class;)Z` @kind interface;
  #L32fcf6.  v4:= temp;
  #L32fcf8.  if v4 == 0 then goto L32fd06;
  #L32fcfc.  call temp:= `b`(v3, v6) @signature `Le/e/a/b/f/u/c6;.b:(Ljava/lang/Class;)Le/e/a/b/f/u/z5;` @kind interface;
  #L32fd02.  v6:= temp @kind object;
  #L32fd04.  return v6 @kind object;
  #L32fd06.  v2:= v2 + 1;
  #L32fd0a.  goto L32fce8;
  #L32fd0c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L32fd10.  v1:= "No factory is available for message type: " @kind object;
  #L32fd14.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L32fd1a.  v6:= temp @kind object;
  #L32fd1c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32fd22.  v6:= temp @kind object;
  #L32fd24.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32fd2a.  v2:= temp;
  #L32fd2c.  if v2 == 0 then goto L32fd3a;
  #L32fd30.  call temp:= `concat`(v1, v6) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L32fd36.  v6:= temp @kind object;
  #L32fd38.  goto L32fd44;
  #L32fd3a.  v6:= new `java.lang.String`;
  #L32fd3e.  call `<init>`(v6, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fd44.  call `<init>`(v0, v6) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fd4a.  throw v0;
}
