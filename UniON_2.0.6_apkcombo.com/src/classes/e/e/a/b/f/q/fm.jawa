record `e.e.a.b.f.q.fm` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.q.fm.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.q.fm.c` @AccessFlag FINAL;
  `e.e.a.b.f.q.gn` `e.e.a.b.f.q.fm.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.fm` v1 @kind this, `e.e.a.b.f.q.gn` v2 @kind object) @signature `Le/e/a/b/f/q/fm;.<init>:(Le/e/a/b/f/q/gn;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2fd5b8.  v1.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` := v2 @kind object;
  #L2fd5bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd5c2.  v0:= v1.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd5c6.  v0:= v0.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fd5ca.  v1.`e.e.a.b.f.q.fm.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2fd5ce.  v2:= v2.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fd5d2.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L2fd5d6.  if v0 == 0 then goto L2fd5e8;
  #L2fd5da.  v2:= (`java.util.List`) v2 @kind object;
  #L2fd5de.  call temp:= `listIterator`(v2) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L2fd5e4.  v2:= temp @kind object;
  #L2fd5e6.  goto L2fd5f0;
  #L2fd5e8.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2fd5ee.  v2:= temp @kind object;
  #L2fd5f0.  v1.`e.e.a.b.f.q.fm.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L2fd5f4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.fm` v0 @kind this, `e.e.a.b.f.q.gn` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/q/fm;.<init>:(Le/e/a/b/f/q/gn;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2fd608.  v0.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` := v1 @kind object;
  #L2fd60c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd612.  v1:= v0.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd616.  v1:= v1.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fd61a.  v0.`e.e.a.b.f.q.fm.c` @type ^`java.util.Collection` := v1 @kind object;
  #L2fd61e.  v0.`e.e.a.b.f.q.fm.b` @type ^`java.util.Iterator` := v2 @kind object;
  #L2fd622.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.fm` v1 @kind this) @signature `Le/e/a/b/f/q/fm;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fad70.  call `zza`(v1) @signature `Le/e/a/b/f/q/fm;.zza:()V` @kind virtual;
  #L2fad76.  v0:= v1.`e.e.a.b.f.q.fm.b` @type ^`java.util.Iterator` @kind object;
  #L2fad7a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2fad80.  v0:= temp;
  #L2fad82.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.fm` v1 @kind this) @signature `Le/e/a/b/f/q/fm;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fbaf0.  call `zza`(v1) @signature `Le/e/a/b/f/q/fm;.zza:()V` @kind virtual;
  #L2fbaf6.  v0:= v1.`e.e.a.b.f.q.fm.b` @type ^`java.util.Iterator` @kind object;
  #L2fbafa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2fbb00.  v0:= temp @kind object;
  #L2fbb02.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.q.fm` v1 @kind this) @signature `Le/e/a/b/f/q/fm;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fd634.  v0:= v1.`e.e.a.b.f.q.fm.b` @type ^`java.util.Iterator` @kind object;
  #L2fd638.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2fd63e.  v0:= v1.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd642.  v0:= v0.`e.e.a.b.f.q.gn.f` @type ^`e.e.a.b.f.q.jq` @kind object;
  #L2fd646.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/jq;.b:(Le/e/a/b/f/q/jq;)I` @kind static;
  #L2fd64c.  v0:= v1.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd650.  call `zzb`(v0) @signature `Le/e/a/b/f/q/gn;.zzb:()V` @kind virtual;
  #L2fd656.  return @kind void;
}
procedure `void` `zza`(`e.e.a.b.f.q.fm` v2 @kind this) @signature `Le/e/a/b/f/q/fm;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L2fd668.  v0:= v2.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd66c.  call `zza`(v0) @signature `Le/e/a/b/f/q/gn;.zza:()V` @kind virtual;
  #L2fd672.  v0:= v2.`e.e.a.b.f.q.fm.d` @type ^`e.e.a.b.f.q.gn` @kind object;
  #L2fd676.  v0:= v0.`e.e.a.b.f.q.gn.c` @type ^`java.util.Collection` @kind object;
  #L2fd67a.  v1:= v2.`e.e.a.b.f.q.fm.c` @type ^`java.util.Collection` @kind object;
  #L2fd67e.  if v0 != v1 then goto L2fd684;
  #L2fd682.  return @kind void;
  #L2fd684.  v0:= new `java.util.ConcurrentModificationException`;
  #L2fd688.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L2fd68e.  throw v0;
}
