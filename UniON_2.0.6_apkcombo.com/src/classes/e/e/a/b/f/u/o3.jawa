record `e.e.a.b.f.u.o3` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.w3` @kind class {
  `int` `e.e.a.b.f.u.o3.f` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.u.o3.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.o3` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/u/o3;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L327094.  call `<init>`(v1, v2) @signature `Le/e/a/b/f/u/w3;.<init>:([B)V` @kind direct;
  #L32709a.  v0:= v3 + v4 @kind int;
  #L32709e.  v2:= length @variable v2;
  #L3270a0.  call temp:= `b`(v3, v0, v2) @signature `Le/e/a/b/f/u/l3;.b:(III)I` @kind static;
  #L3270a6.  v1.`e.e.a.b.f.u.o3.f` @type ^`int` := v3;
  #L3270aa.  v1.`e.e.a.b.f.u.o3.g` @type ^`int` := v4;
  #L3270ae.  return @kind void;
}
procedure `byte` `a`(`e.e.a.b.f.u.o3` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/u/o3;.a:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L326f94.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/o3;.zza:()I` @kind virtual;
  #L326f9a.  v0:= temp;
  #L326f9c.  v1:= v5 + 1;
  #L326fa0.  v1:= v0 - v1 @kind int;
  #L326fa4.  v1:= v1 ^| v5 @kind int;
  #L326fa6.  if v1 >= 0 then goto L327022;
  #L326faa.  if v5 >= 0 then goto L326fe0;
  #L326fae.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L326fb2.  v1:= 22I;
  #L326fb6.  v2:= new `java.lang.StringBuilder`;
  #L326fba.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L326fc0.  v1:= "Index < 0: " @kind object;
  #L326fc4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326fca.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L326fd0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326fd6.  v5:= temp @kind object;
  #L326fd8.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326fde.  throw v0;
  #L326fe0.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L326fe4.  v2:= 40I;
  #L326fe8.  v3:= new `java.lang.StringBuilder`;
  #L326fec.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L326ff2.  v2:= "Index > length: " @kind object;
  #L326ff6.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326ffc.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327002.  v5:= ", " @kind object;
  #L327006.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32700c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327012.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327018.  v5:= temp @kind object;
  #L32701a.  call `<init>`(v1, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327020.  throw v1;
  #L327022.  v0:= v4.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327026.  v1:= v4.`e.e.a.b.f.u.o3.f` @type ^`int`;
  #L32702a.  v1:= v1 + v5 @kind int;
  #L32702c.  v5:= v0[v1] @kind byte;
  #L327030.  return v5;
}
procedure `int` `a`(`e.e.a.b.f.u.o3` v1 @kind this) @signature `Le/e/a/b/f/u/o3;.a:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L32707c.  v0:= v1.`e.e.a.b.f.u.o3.f` @type ^`int`;
  #L327080.  return v0;
}
procedure `byte` `b`(`e.e.a.b.f.u.o3` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/u/o3;.b:(I)B` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L327044.  v0:= v2.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327048.  v1:= v2.`e.e.a.b.f.u.o3.f` @type ^`int`;
  #L32704c.  v1:= v1 + v3 @kind int;
  #L32704e.  v3:= v0[v1] @kind byte;
  #L327052.  return v3;
}
procedure `int` `zza`(`e.e.a.b.f.u.o3` v1 @kind this) @signature `Le/e/a/b/f/u/o3;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L327064.  v0:= v1.`e.e.a.b.f.u.o3.g` @type ^`int`;
  #L327068.  return v0;
}
