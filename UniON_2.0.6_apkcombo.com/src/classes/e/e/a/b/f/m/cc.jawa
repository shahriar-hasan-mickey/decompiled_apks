record `e.e.a.b.f.m.cc` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `e.e.a.b.f.m.cc.a` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.m.bc` `e.e.a.b.f.m.cc.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.m.bc` `e.e.a.b.f.m.cc.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.m.cc` v1 @kind this, `java.lang.String` v2 @kind object, `e.e.a.b.f.m.ac` v3 @kind object) @signature `Le/e/a/b/f/m/cc;.<init>:(Ljava/lang/String;Le/e/a/b/f/m/ac;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L276dac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L276db2.  v3:= new `e.e.a.b.f.m.bc`;
  #L276db6.  v0:= 0I;
  #L276db8.  call `<init>`(v3, v0) @signature `Le/e/a/b/f/m/bc;.<init>:(Le/e/a/b/f/m/ac;)V` @kind direct;
  #L276dbe.  v1.`e.e.a.b.f.m.cc.b` @type ^`e.e.a.b.f.m.bc` := v3 @kind object;
  #L276dc2.  v3:= v1.`e.e.a.b.f.m.cc.b` @type ^`e.e.a.b.f.m.bc` @kind object;
  #L276dc6.  v1.`e.e.a.b.f.m.cc.c` @type ^`e.e.a.b.f.m.bc` := v3 @kind object;
  #L276dca.  v1.`e.e.a.b.f.m.cc.a` @type ^`java.lang.String` := v2 @kind object;
  #L276dce.  return @kind void;
}
procedure `e.e.a.b.f.m.cc` `b`(`e.e.a.b.f.m.cc` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/m/cc;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L276cac.  v0:= new `e.e.a.b.f.m.bc`;
  #L276cb0.  v1:= 0I;
  #L276cb2.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/m/bc;.<init>:(Le/e/a/b/f/m/ac;)V` @kind direct;
  #L276cb8.  v2:= v3.`e.e.a.b.f.m.cc.c` @type ^`e.e.a.b.f.m.bc` @kind object;
  #L276cbc.  v2.`e.e.a.b.f.m.bc.c` @type ^`e.e.a.b.f.m.bc` := v0 @kind object;
  #L276cc0.  v3.`e.e.a.b.f.m.cc.c` @type ^`e.e.a.b.f.m.bc` := v0 @kind object;
  #L276cc4.  v0.`e.e.a.b.f.m.bc.b` @type ^`java.lang.Object` := v5 @kind object;
  #L276cc8.  if v4 == 0 then goto L276cd2;
  #L276ccc.  v0.`e.e.a.b.f.m.bc.a` @type ^`java.lang.String` := v4 @kind object;
  #L276cd0.  return v3 @kind object;
  #L276cd2.  throw v1;
}
procedure `e.e.a.b.f.m.cc` `a`(`e.e.a.b.f.m.cc` v0 @kind this, `java.lang.String` v1 @kind object, `float` v2 ) @signature `Le/e/a/b/f/m/cc;.a:(Ljava/lang/String;F)Le/e/a/b/f/m/cc;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L276c6c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(F)Ljava/lang/String;` @kind static;
  #L276c72.  v2:= temp @kind object;
  #L276c74.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/m/cc;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @kind direct;
  #L276c7a.  return v0 @kind object;
}
procedure `e.e.a.b.f.m.cc` `a`(`e.e.a.b.f.m.cc` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/m/cc;.a:(Ljava/lang/String;I)Le/e/a/b/f/m/cc;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L276c8c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L276c92.  v2:= temp @kind object;
  #L276c94.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/m/cc;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @kind direct;
  #L276c9a.  return v0 @kind object;
}
procedure `e.e.a.b.f.m.cc` `a`(`e.e.a.b.f.m.cc` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/cc;.a:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L276c30.  call temp:= `b`(v0, v1, v2) @signature `Le/e/a/b/f/m/cc;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @kind direct;
  #L276c36.  return v0 @kind object;
}
procedure `e.e.a.b.f.m.cc` `a`(`e.e.a.b.f.m.cc` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Le/e/a/b/f/m/cc;.a:(Ljava/lang/String;Z)Le/e/a/b/f/m/cc;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L276c48.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;` @kind static;
  #L276c4e.  v1:= temp @kind object;
  #L276c50.  v2:= "trackingEnabled" @kind object;
  #L276c54.  call temp:= `b`(v0, v2, v1) @signature `Le/e/a/b/f/m/cc;.b:(Ljava/lang/String;Ljava/lang/Object;)Le/e/a/b/f/m/cc;` @kind direct;
  #L276c5a.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.m.cc` v6 @kind this) @signature `Le/e/a/b/f/m/cc;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L276ce4.  v0:= new `java.lang.StringBuilder`;
  #L276ce8.  v1:= 32I;
  #L276cec.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L276cf2.  v1:= v6.`e.e.a.b.f.m.cc.a` @type ^`java.lang.String` @kind object;
  #L276cf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276cfc.  v1:= 123I;
  #L276d00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d06.  v1:= v6.`e.e.a.b.f.m.cc.b` @type ^`e.e.a.b.f.m.bc` @kind object;
  #L276d0a.  v1:= v1.`e.e.a.b.f.m.bc.c` @type ^`e.e.a.b.f.m.bc` @kind object;
  #L276d0e.  v2:= "" @kind object;
  #L276d12.  if v1 == 0 then goto L276d88;
  #L276d16.  v3:= v1.`e.e.a.b.f.m.bc.b` @type ^`java.lang.Object` @kind object;
  #L276d1a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d20.  v2:= v1.`e.e.a.b.f.m.bc.a` @type ^`java.lang.String` @kind object;
  #L276d24.  if v2 == 0 then goto L276d38;
  #L276d28.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d2e.  v2:= 61I;
  #L276d32.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d38.  if v3 == 0 then goto L276d78;
  #L276d3c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L276d42.  v2:= temp @kind object;
  #L276d44.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L276d4a.  v2:= temp;
  #L276d4c.  if v2 == 0 then goto L276d78;
  #L276d50.  v2:= 1I;
  #L276d52.  v4:= new `java.lang.Object`[v2];
  #L276d56.  v5:= 0I;
  #L276d58.  v4[v5]:= v3 @kind object;
  #L276d5c.  call temp:= `deepToString`(v4) @signature `Ljava/util/Arrays;.deepToString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L276d62.  v3:= temp @kind object;
  #L276d64.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L276d6a.  v4:= temp;
  #L276d6c.  v4:= v4 + -1;
  #L276d70.  call temp:= `append`(v0, v3, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d76.  goto L276d7e;
  #L276d78.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d7e.  v1:= v1.`e.e.a.b.f.m.bc.c` @type ^`e.e.a.b.f.m.bc` @kind object;
  #L276d82.  v2:= ", " @kind object;
  #L276d86.  goto L276d12;
  #L276d88.  v1:= 125I;
  #L276d8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L276d92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L276d98.  v0:= temp @kind object;
  #L276d9a.  return v0 @kind object;
}
