record `e.e.a.b.f.b.m0$d` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.m0` @kind class {
  `java.nio.ByteBuffer` `e.e.a.b.f.b.m0$d.d` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `e.e.a.b.f.b.m0$d.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.b.m0$d` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object) @signature `Le/e/a/b/f/b/m0$d;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1fbac4.  v0:= 0I;
  #L1fbac6.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/b/m0;.<init>:(Le/e/a/b/f/b/n0;)V` @kind direct;
  #L1fbacc.  v2.`e.e.a.b.f.b.m0$d.d` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L1fbad0.  call temp:= `duplicate`(v3) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbad6.  v0:= temp @kind object;
  #L1fbad8.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1fbadc.  call temp:= `order`(v0, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbae2.  v0:= temp @kind object;
  #L1fbae4.  v2.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L1fbae8.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fbaee.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/b/m0$d;.c:(Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1fbfa4.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbfa8.  call `a`(v2, v0) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L1fbfae.  return @kind void;
  #L1fbfb0.  v2:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fbfb2.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fbfb6.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbfbc.  throw v0;
  catch `java.lang.IndexOutOfBoundsException` @[L1fbfa4..L1fbfae] goto L1fbfb0;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v2 @kind this) @signature `Le/e/a/b/f/b/m0$d;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fbb00.  v0:= v2.`e.e.a.b.f.b.m0$d.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbb04.  v1:= v2.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbb08.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fbb0e.  v1:= temp;
  #L1fbb10.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fbb16.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `byte` v2 ) @signature `Le/e/a/b/f/b/m0$d;.a:(B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbb70.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbb74.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbb7a.  return @kind void;
  #L1fbb7c.  v2:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fbb7e.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fbb82.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbb88.  throw v0;
  catch `java.nio.BufferOverflowException` @[L1fbb70..L1fbb7a] goto L1fbb7c;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.a:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fbfe0.  if v3 < 0 then goto L1fbfec;
  #L1fbfe4.  call `b`(v2, v3) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbfea.  return @kind void;
  #L1fbfec.  v0:= (`long`) v3 @kind i2l;
  #L1fbfee.  call `a`(v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(J)V` @kind virtual;
  #L1fbff4.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fbd84.  v1:= v1 ^< 3;
  #L1fbd88.  v1:= v1 ^| v2 @kind int;
  #L1fbd8a.  call `b`(v0, v1) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbd90.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$d;.a:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbcb0.  v0:= 0I;
  #L1fbcb2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbcb8.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.a:(J)V` @kind virtual;
  #L1fbcbe.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `e.e.a.b.f.b.a0` v3 @kind object) @signature `Le/e/a/b/f/b/m0$d;.a:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbc30.  v0:= 2I;
  #L1fbc32.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbc38.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.b:(Le/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fbc3e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `e.e.a.b.f.b.k2` v3 @kind object) @signature `Le/e/a/b/f/b/m0$d;.a:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbc50.  v0:= 2I;
  #L1fbc52.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbc58.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.c:(Le/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fbc5e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `e.e.a.b.f.b.k2` v3 @kind object, `e.e.a.b.f.b.b3` v4 @kind object) @signature `Le/e/a/b/f/b/m0$d;.a:(ILe/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @AccessFlag FINAL {
    temp;
    v0;

  #L1fbc70.  v0:= 2I;
  #L1fbc72.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbc78.  call `b`(v1, v3, v4) @signature `Le/e/a/b/f/b/m0$d;.b:(Le/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @kind virtual;
  #L1fbc7e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Le/e/a/b/f/b/m0$d;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbc90.  v0:= 2I;
  #L1fbc92.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbc98.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.b:(Ljava/lang/String;)V` @kind virtual;
  #L1fbc9e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Le/e/a/b/f/b/m0$d;.a:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbcf8.  v0:= 0I;
  #L1fbcfa.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbd00.  v2:= (`byte`) v3 @kind i2b;
  #L1fbd02.  call `a`(v1, v2) @signature `Le/e/a/b/f/b/m0$d;.a:(B)V` @kind virtual;
  #L1fbd08.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v5 @kind this, `long` v6 ) @signature `Le/e/a/b/f/b/m0$d;.a:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fbda4.  v0:= -128L;
  #L1fbda8.  v0:= v0 ^& v6 @kind long;
  #L1fbdaa.  v2:= 0L;
  #L1fbdae.  v4:= lcmp(v0, v2);
  #L1fbdb2.  if v4 != 0 then goto L1fbdc6;
  #L1fbdb6.  v0:= v5.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbdba.  v7:= (`int`) v6 @kind l2i;
  #L1fbdbc.  v6:= (`byte`) v7 @kind i2b;
  #L1fbdbe.  call temp:= `put`(v0, v6) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbdc4.  return @kind void;
  #L1fbdc6.  v0:= v5.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbdca.  v1:= (`int`) v6 @kind l2i;
  #L1fbdcc.  v1:= v1 ^& 127;
  #L1fbdd0.  v1:= v1 ^| 128;
  #L1fbdd4.  v1:= (`byte`) v1 @kind i2b;
  #L1fbdd6.  call temp:= `put`(v0, v1) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbddc.  v0:= 7I;
  #L1fbdde.  v6:= v6 ^>> v0 @kind long;
  #L1fbde0.  goto L1fbda4;
  #L1fbde2.  v6:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fbde4.  v7:= new `e.e.a.b.f.b.m0$c`;
  #L1fbde8.  call `<init>`(v7, v6) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbdee.  throw v7;
  catch `java.nio.BufferOverflowException` @[L1fbdb6..L1fbddc] goto L1fbde2;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$d` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.a:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fbbac.  call `b`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/m0$d;.b:([BII)V` @kind virtual;
  #L1fbbb2.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.b.m0$d` v1 @kind this) @signature `Le/e/a/b/f/b/m0$d;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbaa4.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbaa8.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1fbaae.  v0:= temp;
  #L1fbab0.  return v0;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fc008.  v0:= v3 ^& -128;
  #L1fc00c.  if v0 != 0 then goto L1fc01e;
  #L1fc010.  v0:= v2.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc014.  v3:= (`byte`) v3 @kind i2b;
  #L1fc016.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc01c.  return @kind void;
  #L1fc01e.  v0:= v2.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc022.  v1:= v3 ^& 127;
  #L1fc026.  v1:= v1 ^| 128;
  #L1fc02a.  v1:= (`byte`) v1 @kind i2b;
  #L1fc02c.  call temp:= `put`(v0, v1) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc032.  v3:= v3 ^>> 7;
  #L1fc036.  goto L1fc008;
  #L1fc038.  v3:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fc03a.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fc03e.  call `<init>`(v0, v3) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fc044.  throw v0;
  catch `java.nio.BufferOverflowException` @[L1fc010..L1fc032] goto L1fc038;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.b:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbe10.  v0:= 0I;
  #L1fbe12.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbe18.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.a:(I)V` @kind virtual;
  #L1fbe1e.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v3 @kind this, `int` v4 , `e.e.a.b.f.b.a0` v5 @kind object) @signature `Le/e/a/b/f/b/m0$d;.b:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fbd1c.  v0:= 3I;
  #L1fbd1e.  v1:= 1I;
  #L1fbd20.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbd26.  v2:= 2I;
  #L1fbd28.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$d;.c:(II)V` @kind virtual;
  #L1fbd2e.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$d;.a:(ILe/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fbd34.  v4:= 4I;
  #L1fbd36.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbd3c.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v3 @kind this, `int` v4 , `e.e.a.b.f.b.k2` v5 @kind object) @signature `Le/e/a/b/f/b/m0$d;.b:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fbd50.  v0:= 3I;
  #L1fbd52.  v1:= 1I;
  #L1fbd54.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbd5a.  v2:= 2I;
  #L1fbd5c.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$d;.c:(II)V` @kind virtual;
  #L1fbd62.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$d;.a:(ILe/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fbd68.  v4:= 4I;
  #L1fbd6a.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbd70.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v1 @kind this, `e.e.a.b.f.b.a0` v2 @kind object) @signature `Le/e/a/b/f/b/m0$d;.b:(Le/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbbc4.  call temp:= `size`(v2) @signature `Le/e/a/b/f/b/a0;.size:()I` @kind virtual;
  #L1fbbca.  v0:= temp;
  #L1fbbcc.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbbd2.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/a0;.a:(Le/e/a/b/f/b/z;)V` @kind virtual;
  #L1fbbd8.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v3 @kind this, `e.e.a.b.f.b.k2` v4 @kind object, `e.e.a.b.f.b.b3` v5 @kind object) @signature `Le/e/a/b/f/b/m0$d;.b:(Le/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fbbec.  v0:= v4 @kind object;
  #L1fbbee.  v0:= (`e.e.a.b.f.b.q`) v0 @kind object;
  #L1fbbf2.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/q;.c:()I` @kind virtual;
  #L1fbbf8.  v1:= temp;
  #L1fbbfa.  v2:= -1I;
  #L1fbbfc.  if v1 != v2 then goto L1fbc0e;
  #L1fbc00.  call temp:= `d`(v5, v0) @signature `Le/e/a/b/f/b/b3;.d:(Ljava/lang/Object;)I` @kind interface;
  #L1fbc06.  v1:= temp;
  #L1fbc08.  call `a`(v0, v1) @signature `Le/e/a/b/f/b/q;.a:(I)V` @kind virtual;
  #L1fbc0e.  call `b`(v3, v1) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbc14.  v0:= v3.`e.e.a.b.f.b.m0.a` @type ^`e.e.a.b.f.b.o0` @kind object;
  #L1fbc18.  call `a`(v5, v4, v0) @signature `Le/e/a/b/f/b/b3;.a:(Ljava/lang/Object;Le/e/a/b/f/b/o4;)V` @kind interface;
  #L1fbc1e.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Le/e/a/b/f/b/m0$d;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fbecc.  v0:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbed0.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fbed6.  v0:= temp;
  #L1fbed8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fbede.  v1:= temp;
  #L1fbee0.  v1:= v1 * 3;
  #L1fbee4.  call temp:= `g`(v1) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fbeea.  v1:= temp;
  #L1fbeec.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fbef2.  v2:= temp;
  #L1fbef4.  call temp:= `g`(v2) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fbefa.  v2:= temp;
  #L1fbefc.  if v2 != v1 then goto L1fbf4a;
  #L1fbf00.  v1:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf04.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fbf0a.  v1:= temp;
  #L1fbf0c.  v1:= v1 + v2 @kind int;
  #L1fbf0e.  v2:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf12.  call temp:= `position`(v2, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fbf18.  call `c`(v4, v5) @signature `Le/e/a/b/f/b/m0$d;.c:(Ljava/lang/String;)V` @kind direct;
  #L1fbf1e.  v2:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf22.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fbf28.  v2:= temp;
  #L1fbf2a.  v3:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf2e.  call temp:= `position`(v3, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fbf34.  v1:= v2 - v1 @kind int;
  #L1fbf38.  call `b`(v4, v1) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbf3e.  v1:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf42.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fbf48.  return @kind void;
  #L1fbf4a.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L1fbf50.  v1:= temp;
  #L1fbf52.  call `b`(v4, v1) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbf58.  call `c`(v4, v5) @signature `Le/e/a/b/f/b/m0$d;.c:(Ljava/lang/String;)V` @kind direct;
  #L1fbf5e.  return @kind void;
  #L1fbf60.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L1fbf62.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fbf66.  call `<init>`(v0, v5) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbf6c.  throw v0;
  #L1fbf6e.  v1:= Exception @type ^`e.e.a.b.f.b.f4` @kind object;
  #L1fbf70.  v2:= v4.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbf74.  call temp:= `position`(v2, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fbf7a.  call `a`(v4, v5, v1) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;Le/e/a/b/f/b/f4;)V` @kind virtual;
  #L1fbf80.  return @kind void;
  catch `e.e.a.b.f.b.f4` @[L1fbed8..L1fbf5e] goto L1fbf6e;
  catch `java.lang.IllegalArgumentException` @[L1fbed8..L1fbf5e] goto L1fbf60;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$d` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/b/m0$d;.b:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbb28.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbb2c.  call temp:= `put`(v0, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbb32.  return @kind void;
  #L1fbb34.  v2:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fbb36.  v3:= new `e.e.a.b.f.b.m0$c`;
  #L1fbb3a.  call `<init>`(v3, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbb40.  throw v3;
  #L1fbb42.  v2:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fbb44.  v3:= new `e.e.a.b.f.b.m0$c`;
  #L1fbb48.  call `<init>`(v3, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbb4e.  throw v3;
  catch `java.lang.IndexOutOfBoundsException` @[L1fbb28..L1fbb32] goto L1fbb42;
  catch `java.nio.BufferOverflowException` @[L1fbb28..L1fbb32] goto L1fbb34;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.c:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbe50.  v0:= 0I;
  #L1fbe52.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbe58.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbe5e.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$d;.c:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbe30.  v0:= 1I;
  #L1fbe32.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbe38.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.c:(J)V` @kind virtual;
  #L1fbe3e.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$d` v1 @kind this, `long` v2 ) @signature `Le/e/a/b/f/b/m0$d;.c:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbe70.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fbe74.  call temp:= `putLong`(v0, v2) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fbe7a.  return @kind void;
  #L1fbe7c.  v2:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fbe7e.  v3:= new `e.e.a.b.f.b.m0$c`;
  #L1fbe82.  call `<init>`(v3, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fbe88.  throw v3;
  catch `java.nio.BufferOverflowException` @[L1fbe70..L1fbe7a] goto L1fbe7c;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$d` v1 @kind this, `e.e.a.b.f.b.k2` v2 @kind object) @signature `Le/e/a/b/f/b/m0$d;.c:(Le/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbcd0.  call temp:= `q`(v2) @signature `Le/e/a/b/f/b/k2;.q:()I` @kind interface;
  #L1fbcd6.  v0:= temp;
  #L1fbcd8.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$d;.b:(I)V` @kind virtual;
  #L1fbcde.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/k2;.a:(Le/e/a/b/f/b/m0;)V` @kind interface;
  #L1fbce4.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/m0$d;.d:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc068.  v0:= v1.`e.e.a.b.f.b.m0$d.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc06c.  call temp:= `putInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc072.  return @kind void;
  #L1fc074.  v2:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L1fc076.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fc07a.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fc080.  throw v0;
  catch `java.nio.BufferOverflowException` @[L1fc068..L1fc072] goto L1fc074;
}
procedure `void` `e`(`e.e.a.b.f.b.m0$d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$d;.e:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fbeac.  v0:= 5I;
  #L1fbeae.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$d;.a:(II)V` @kind virtual;
  #L1fbeb4.  call `d`(v1, v3) @signature `Le/e/a/b/f/b/m0$d;.d:(I)V` @kind virtual;
  #L1fbeba.  return @kind void;
}
