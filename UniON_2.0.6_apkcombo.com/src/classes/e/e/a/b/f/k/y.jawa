record `e.e.a.b.f.k.y` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Map$Entry` `e.e.a.b.f.k.y.b` @AccessFlag ;
  `java.util.Iterator` `e.e.a.b.f.k.y.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.a.b.f.k.z` `e.e.a.b.f.k.y.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.y` v0 @kind this, `e.e.a.b.f.k.z` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/k/y;.<init>:(Le/e/a/b/f/k/z;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243bd0.  v0.`e.e.a.b.f.k.y.d` @type ^`e.e.a.b.f.k.z` := v1 @kind object;
  #L243bd4.  v0.`e.e.a.b.f.k.y.c` @type ^`java.util.Iterator` := v2 @kind object;
  #L243bd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243bde.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.k.y` v1 @kind this) @signature `Le/e/a/b/f/k/y;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243b7c.  v0:= v1.`e.e.a.b.f.k.y.c` @type ^`java.util.Iterator` @kind object;
  #L243b80.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L243b86.  v0:= temp;
  #L243b88.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.k.y` v1 @kind this) @signature `Le/e/a/b/f/k/y;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243b9c.  v0:= v1.`e.e.a.b.f.k.y.c` @type ^`java.util.Iterator` @kind object;
  #L243ba0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L243ba6.  v0:= temp @kind object;
  #L243ba8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L243bac.  v1.`e.e.a.b.f.k.y.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L243bb0.  v0:= v1.`e.e.a.b.f.k.y.b` @type ^`java.util.Map$Entry` @kind object;
  #L243bb4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L243bba.  v0:= temp @kind object;
  #L243bbc.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.k.y` v3 @kind this) @signature `Le/e/a/b/f/k/y;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L243bf0.  v0:= v3.`e.e.a.b.f.k.y.b` @type ^`java.util.Map$Entry` @kind object;
  #L243bf4.  if v0 == 0 then goto L243bfc;
  #L243bf8.  v0:= 1I;
  #L243bfa.  goto L243bfe;
  #L243bfc.  v0:= 0I;
  #L243bfe.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L243c02.  call `a`(v0, v1) @signature `Le/e/a/b/f/k/r;.a:(ZLjava/lang/Object;)V` @kind static;
  #L243c08.  v0:= v3.`e.e.a.b.f.k.y.b` @type ^`java.util.Map$Entry` @kind object;
  #L243c0c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L243c12.  v0:= temp @kind object;
  #L243c14.  v0:= (`java.util.Collection`) v0 @kind object;
  #L243c18.  v1:= v3.`e.e.a.b.f.k.y.c` @type ^`java.util.Iterator` @kind object;
  #L243c1c.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L243c22.  v1:= v3.`e.e.a.b.f.k.y.d` @type ^`e.e.a.b.f.k.z` @kind object;
  #L243c26.  v1:= v1.`e.e.a.b.f.k.z.c` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243c2a.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L243c30.  v2:= temp;
  #L243c32.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;I)I` @kind static;
  #L243c38.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L243c3e.  v0:= 0I;
  #L243c40.  v3.`e.e.a.b.f.k.y.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L243c44.  return @kind void;
}
