record `e.e.a.b.f.u.f4$a` @kind class @AccessFlag FINAL {
  `java.lang.Object` `e.e.a.b.f.u.f4$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.u.f4$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.f4$a` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/u/f4$a;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32a098.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a09e.  v0.`e.e.a.b.f.u.f4$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L32a0a2.  v0.`e.e.a.b.f.u.f4$a.b` @type ^`int` := v2;
  #L32a0a6.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.f4$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/u/f4$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32a028.  v0:= instanceof @variable v4 @type ^`e.e.a.b.f.u.f4$a` @kind boolean;
  #L32a02c.  v1:= 0I;
  #L32a02e.  if v0 != 0 then goto L32a034;
  #L32a032.  return v1;
  #L32a034.  v4:= (`e.e.a.b.f.u.f4$a`) v4 @kind object;
  #L32a038.  v0:= v3.`e.e.a.b.f.u.f4$a.a` @type ^`java.lang.Object` @kind object;
  #L32a03c.  v2:= v4.`e.e.a.b.f.u.f4$a.a` @type ^`java.lang.Object` @kind object;
  #L32a040.  if v0 != v2 then goto L32a054;
  #L32a044.  v0:= v3.`e.e.a.b.f.u.f4$a.b` @type ^`int`;
  #L32a048.  v4:= v4.`e.e.a.b.f.u.f4$a.b` @type ^`int`;
  #L32a04c.  if v0 != v4 then goto L32a054;
  #L32a050.  v4:= 1I;
  #L32a052.  return v4;
  #L32a054.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.f4$a` v2 @kind this) @signature `Le/e/a/b/f/u/f4$a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32a068.  v0:= v2.`e.e.a.b.f.u.f4$a.a` @type ^`java.lang.Object` @kind object;
  #L32a06c.  call temp:= `identityHashCode`(v0) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L32a072.  v0:= temp;
  #L32a074.  v1:= 65535I;
  #L32a07a.  v0:= v0 * v1 @kind int;
  #L32a07e.  v1:= v2.`e.e.a.b.f.u.f4$a.b` @type ^`int`;
  #L32a082.  v0:= v0 + v1 @kind int;
  #L32a084.  return v0;
}
