record `e.e.a.b.f.n.jq` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.n.n1` @kind class, `e.e.a.b.f.n.h3` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.n.jq` v1 @kind this) @signature `Le/e/a/b/f/n/jq;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2a70ec.  call temp:= `q`() @signature `Le/e/a/b/f/n/kq;.q:()Le/e/a/b/f/n/kq;` @kind static;
  #L2a70f2.  v0:= temp @kind object;
  #L2a70f4.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/n1;.<init>:(Le/e/a/b/f/n/t1;)V` @kind direct;
  #L2a70fa.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.jq` v0 @kind this, `e.e.a.b.f.n.iq` v1 @kind object) @signature `Le/e/a/b/f/n/jq;.<init>:(Le/e/a/b/f/n/iq;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2a710c.  call temp:= `q`() @signature `Le/e/a/b/f/n/kq;.q:()Le/e/a/b/f/n/kq;` @kind static;
  #L2a7112.  v1:= temp @kind object;
  #L2a7114.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/n/n1;.<init>:(Le/e/a/b/f/n/t1;)V` @kind direct;
  #L2a711a.  return @kind void;
}
procedure `e.e.a.b.f.n.jq` `a`(`e.e.a.b.f.n.jq` v1 @kind this, `e.e.a.b.f.n.gq` v2 @kind object) @signature `Le/e/a/b/f/n/jq;.a:(Le/e/a/b/f/n/gq;)Le/e/a/b/f/n/jq;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a70ac.  v0:= v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` @kind boolean;
  #L2a70b0.  if v0 == 0 then goto L2a70c0;
  #L2a70b4.  call `a`(v1) @signature `Le/e/a/b/f/n/n1;.a:()V` @kind virtual;
  #L2a70ba.  v0:= 0I;
  #L2a70bc.  v1.`e.e.a.b.f.n.n1.d` @type ^`boolean` := v0 @kind boolean;
  #L2a70c0.  v0:= v1.`e.e.a.b.f.n.n1.c` @type ^`e.e.a.b.f.n.t1` @kind object;
  #L2a70c4.  v0:= (`e.e.a.b.f.n.kq`) v0 @kind object;
  #L2a70c8.  call temp:= `c`(v2) @signature `Le/e/a/b/f/n/n1;.c:()Le/e/a/b/f/n/t1;` @kind virtual;
  #L2a70ce.  v2:= temp @kind object;
  #L2a70d0.  v2:= (`e.e.a.b.f.n.hq`) v2 @kind object;
  #L2a70d4.  call `a`(v0, v2) @signature `Le/e/a/b/f/n/kq;.a:(Le/e/a/b/f/n/kq;Le/e/a/b/f/n/hq;)V` @kind static;
  #L2a70da.  return v1 @kind object;
}
