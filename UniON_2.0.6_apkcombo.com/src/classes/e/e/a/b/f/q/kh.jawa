record `e.e.a.b.f.q.kh` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `e.e.a.b.f.q.ph` `e.e.a.b.f.q.kh.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.kh` v0 @kind this, `e.e.a.b.f.q.ph` v1 @kind object) @signature `Le/e/a/b/f/q/kh;.<init>:(Le/e/a/b/f/q/ph;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3cfc.  v0.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` := v1 @kind object;
  #L2f3d00.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L2f3d06.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.q.kh` v1 @kind this) @signature `Le/e/a/b/f/q/kh;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f3d18.  v0:= v1.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` @kind object;
  #L2f3d1c.  call `clear`(v0) @signature `Le/e/a/b/f/q/ph;.clear:()V` @kind virtual;
  #L2f3d22.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.q.kh` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/kh;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f3c50.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L2f3c54.  if v0 == 0 then goto L2f3c70;
  #L2f3c58.  v0:= v1.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` @kind object;
  #L2f3c5c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2f3c60.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/util/Map$Entry;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f3c66.  v2:= temp @kind object;
  #L2f3c68.  if v2 == 0 then goto L2f3c70;
  #L2f3c6c.  v2:= 1I;
  #L2f3c6e.  return v2;
  #L2f3c70.  v2:= 0I;
  #L2f3c72.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.q.kh` v1 @kind this) @signature `Le/e/a/b/f/q/kh;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f3ce0.  v0:= new `e.e.a.b.f.q.jh`;
  #L2f3ce4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/jh;.<init>:(Le/e/a/b/f/q/kh;)V` @kind direct;
  #L2f3cea.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.q.kh` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/kh;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2f3c84.  v0:= instanceof @variable v3 @type ^`java.util.Map$Entry` @kind boolean;
  #L2f3c88.  v1:= 0I;
  #L2f3c8a.  if v0 != 0 then goto L2f3c90;
  #L2f3c8e.  return v1;
  #L2f3c90.  v0:= v2.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` @kind object;
  #L2f3c94.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2f3c98.  call temp:= `a`(v0, v3) @signature `Le/e/a/b/f/q/ph;.a:(Ljava/util/Map$Entry;)Le/e/a/b/f/q/oh;` @kind virtual;
  #L2f3c9e.  v3:= temp @kind object;
  #L2f3ca0.  if v3 != 0 then goto L2f3ca6;
  #L2f3ca4.  return v1;
  #L2f3ca6.  v0:= v2.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` @kind object;
  #L2f3caa.  v1:= 1I;
  #L2f3cac.  call `a`(v0, v3, v1) @signature `Le/e/a/b/f/q/ph;.a:(Le/e/a/b/f/q/oh;Z)V` @kind virtual;
  #L2f3cb2.  return v1;
}
procedure `int` `size`(`e.e.a.b.f.q.kh` v1 @kind this) @signature `Le/e/a/b/f/q/kh;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f3cc4.  v0:= v1.`e.e.a.b.f.q.kh.b` @type ^`e.e.a.b.f.q.ph` @kind object;
  #L2f3cc8.  v0:= v0.`e.e.a.b.f.q.ph.d` @type ^`int`;
  #L2f3ccc.  return v0;
}
