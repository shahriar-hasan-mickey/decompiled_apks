record `e.e.a.b.f.k.t1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.k.f1` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.k.t1.d` @AccessFlag FINAL_TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.k.t1.e` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.k.t1.f` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `e.e.a.b.f.k.t1.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `e.e.a.b.f.k.t1.h` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `e.e.a.b.f.k.t1` `@@e.e.a.b.f.k.t1.i` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/k/t1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L247594.  v6:= new `e.e.a.b.f.k.t1`;
  #L247598.  v0:= 0I;
  #L24759a.  v1:= new `java.lang.Object`[v0];
  #L24759e.  v2:= 0I;
  #L2475a0.  v3:= 0I;
  #L2475a2.  v4:= 0I;
  #L2475a4.  v5:= 0I;
  #L2475a6.  v0:= v6 @kind object;
  #L2475a8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Le/e/a/b/f/k/t1;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L2475ae.  `@@e.e.a.b.f.k.t1.i` @type ^`e.e.a.b.f.k.t1` := v6 @kind object;
  #L2475b2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.k.t1` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/k/t1;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2475c4.  call `<init>`(v0) @signature `Le/e/a/b/f/k/f1;.<init>:()V` @kind direct;
  #L2475ca.  v0.`e.e.a.b.f.k.t1.d` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2475ce.  v0.`e.e.a.b.f.k.t1.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2475d2.  v0.`e.e.a.b.f.k.t1.f` @type ^`int` := v4;
  #L2475d6.  v0.`e.e.a.b.f.k.t1.g` @type ^`int` := v2;
  #L2475da.  v0.`e.e.a.b.f.k.t1.h` @type ^`int` := v5;
  #L2475de.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.k.t1` v3 @kind this, `java.lang.Object`[] v4 @kind object, `int` v5 ) @signature `Le/e/a/b/f/k/t1;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L247530.  v0:= v3.`e.e.a.b.f.k.t1.d` @type ^`java.lang.Object`[] @kind object;
  #L247534.  v1:= v3.`e.e.a.b.f.k.t1.h` @type ^`int`;
  #L247538.  v2:= 0I;
  #L24753a.  call `arraycopy`(v0, v2, v4, v5, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L247540.  v4:= v3.`e.e.a.b.f.k.t1.h` @type ^`int`;
  #L247544.  v5:= v5 + v4 @kind int;
  #L247546.  return v5;
}
procedure `int` `c`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.c:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L247518.  v0:= v1.`e.e.a.b.f.k.t1.h` @type ^`int`;
  #L24751c.  return v0;
}
procedure `boolean` `contains`(`e.e.a.b.f.k.t1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/k/t1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L247428.  v0:= v4.`e.e.a.b.f.k.t1.e` @type ^`java.lang.Object`[] @kind object;
  #L24742c.  v1:= 0I;
  #L24742e.  if v5 == 0 then goto L247466;
  #L247432.  if v0 != 0 then goto L247438;
  #L247436.  goto L247466;
  #L247438.  call temp:= `a`(v5) @signature `Le/e/a/b/f/k/v0;.a:(Ljava/lang/Object;)I` @kind static;
  #L24743e.  v2:= temp;
  #L247440.  v3:= v4.`e.e.a.b.f.k.t1.f` @type ^`int`;
  #L247444.  v2:= v2 ^& v3 @kind int;
  #L247446.  v3:= v0[v2] @kind object;
  #L24744a.  if v3 != 0 then goto L247450;
  #L24744e.  return v1;
  #L247450.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L247456.  v3:= temp;
  #L247458.  if v3 == 0 then goto L247460;
  #L24745c.  v5:= 1I;
  #L24745e.  return v5;
  #L247460.  v2:= v2 + 1;
  #L247464.  goto L247440;
  #L247466.  return v1;
}
procedure `int` `d`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L247504.  v0:= 0I;
  #L247506.  return v0;
}
procedure `e.e.a.b.f.k.e1` `f`(`e.e.a.b.f.k.t1` v2 @kind this) @signature `Le/e/a/b/f/k/t1;.f:()Le/e/a/b/f/k/e1;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L24748c.  v0:= v2.`e.e.a.b.f.k.t1.d` @type ^`java.lang.Object`[] @kind object;
  #L247490.  v1:= v2.`e.e.a.b.f.k.t1.h` @type ^`int`;
  #L247494.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/k/e1;.b:([Ljava/lang/Object;I)Le/e/a/b/f/k/e1;` @kind static;
  #L24749a.  v0:= temp @kind object;
  #L24749c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2474d4.  v0:= v1.`e.e.a.b.f.k.t1.g` @type ^`int`;
  #L2474d8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.k.t1` v2 @kind this) @signature `Le/e/a/b/f/k/t1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L247570.  call temp:= `e`(v2) @signature `Le/e/a/b/f/k/f1;.e:()Le/e/a/b/f/k/e1;` @kind virtual;
  #L247576.  v0:= temp @kind object;
  #L247578.  v1:= 0I;
  #L24757a.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/k/e1;.h:(I)Le/e/a/b/f/k/z1;` @kind virtual;
  #L247580.  v0:= temp @kind object;
  #L247582.  return v0 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2474ec.  v0:= v1.`e.e.a.b.f.k.t1.h` @type ^`int`;
  #L2474f0.  return v0;
}
procedure `boolean` `v`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L247478.  v0:= 1I;
  #L24747a.  return v0;
}
procedure `e.e.a.b.f.k.y1` `zza`(`e.e.a.b.f.k.t1` v2 @kind this) @signature `Le/e/a/b/f/k/t1;.zza:()Le/e/a/b/f/k/y1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2474b0.  call temp:= `e`(v2) @signature `Le/e/a/b/f/k/f1;.e:()Le/e/a/b/f/k/e1;` @kind virtual;
  #L2474b6.  v0:= temp @kind object;
  #L2474b8.  v1:= 0I;
  #L2474ba.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/k/e1;.h:(I)Le/e/a/b/f/k/z1;` @kind virtual;
  #L2474c0.  v0:= temp @kind object;
  #L2474c2.  return v0 @kind object;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.k.t1` v1 @kind this) @signature `Le/e/a/b/f/k/t1;.zzb:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L247558.  v0:= v1.`e.e.a.b.f.k.t1.d` @type ^`java.lang.Object`[] @kind object;
  #L24755c.  return v0 @kind object;
}
