record `e.e.a.b.f.b.m0$e` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.m0` @kind class {
  `java.nio.ByteBuffer` `e.e.a.b.f.b.m0$e.d` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `e.e.a.b.f.b.m0$e.e` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.b.f.b.m0$e.f` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.b.f.b.m0$e.g` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.b.f.b.m0$e.h` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.b.f.b.m0$e.i` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.b.f.b.m0$e.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.m0$e` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object) @signature `Le/e/a/b/f/b/m0$e;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fc0c4.  v0:= 0I;
  #L1fc0c6.  call `<init>`(v4, v0) @signature `Le/e/a/b/f/b/m0;.<init>:(Le/e/a/b/f/b/n0;)V` @kind direct;
  #L1fc0cc.  v4.`e.e.a.b.f.b.m0$e.d` @type ^`java.nio.ByteBuffer` := v5 @kind object;
  #L1fc0d0.  call temp:= `duplicate`(v5) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc0d6.  v0:= temp @kind object;
  #L1fc0d8.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L1fc0dc.  call temp:= `order`(v0, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc0e2.  v0:= temp @kind object;
  #L1fc0e4.  v4.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L1fc0e8.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/a4;.a:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L1fc0ee.  v0:= temp @kind wide;
  #L1fc0f0.  v4.`e.e.a.b.f.b.m0$e.f` @type ^`long` := v0 @kind wide;
  #L1fc0f4.  v0:= v4.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc0f8.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fc0fe.  v2:= temp;
  #L1fc100.  v2:= (`long`) v2 @kind i2l;
  #L1fc102.  v0:= v0 + v2 @kind long;
  #L1fc104.  v4.`e.e.a.b.f.b.m0$e.g` @type ^`long` := v0 @kind wide;
  #L1fc108.  v0:= v4.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc10c.  call temp:= `limit`(v5) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1fc112.  v5:= temp;
  #L1fc114.  v2:= (`long`) v5 @kind i2l;
  #L1fc116.  v0:= v0 + v2 @kind long;
  #L1fc118.  v4.`e.e.a.b.f.b.m0$e.h` @type ^`long` := v0 @kind wide;
  #L1fc11c.  v0:= v4.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc120.  v2:= 10L;
  #L1fc124.  v0:= v0 - v2 @kind long;
  #L1fc126.  v4.`e.e.a.b.f.b.m0$e.i` @type ^`long` := v0 @kind wide;
  #L1fc12a.  v0:= v4.`e.e.a.b.f.b.m0$e.g` @type ^`long` @kind wide;
  #L1fc12e.  v4.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v0 @kind wide;
  #L1fc132.  return @kind void;
}
procedure `void` `i`(`e.e.a.b.f.b.m0$e` v3 @kind this, `long` v4 ) @signature `Le/e/a/b/f/b/m0$e;.i:(J)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fc744.  v0:= v3.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc748.  v1:= v3.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc74c.  v4:= v4 - v1 @kind long;
  #L1fc74e.  v5:= (`int`) v4 @kind l2i;
  #L1fc750.  call temp:= `position`(v0, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fc756.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v5 @kind this) @signature `Le/e/a/b/f/b/m0$e;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fc144.  v0:= v5.`e.e.a.b.f.b.m0$e.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc148.  v1:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc14c.  v3:= v5.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc150.  v1:= v1 - v3 @kind long;
  #L1fc152.  v2:= (`int`) v1 @kind l2i;
  #L1fc154.  call temp:= `position`(v0, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fc15a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v5 @kind this, `byte` v6 ) @signature `Le/e/a/b/f/b/m0$e;.a:(B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fc224.  v0:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc228.  v2:= v5.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc22c.  v4:= lcmp(v0, v2);
  #L1fc230.  if v4 >= 0 then goto L1fc246;
  #L1fc234.  v2:= 1L;
  #L1fc238.  v2:= v2 + v0 @kind long;
  #L1fc23a.  v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v2 @kind wide;
  #L1fc23e.  call `a`(v0, v6) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc244.  return @kind void;
  #L1fc246.  v6:= new `e.e.a.b.f.b.m0$c`;
  #L1fc24a.  v2:= 3I;
  #L1fc24c.  v2:= new `java.lang.Object`[v2];
  #L1fc250.  v3:= 0I;
  #L1fc252.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc258.  v0:= temp @kind object;
  #L1fc25a.  v2[v3]:= v0 @kind object;
  #L1fc25e.  v0:= v5.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc262.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc268.  v0:= temp @kind object;
  #L1fc26a.  v1:= 1I;
  #L1fc26c.  v2[v1]:= v0 @kind object;
  #L1fc270.  v0:= 2I;
  #L1fc272.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fc278.  v1:= temp @kind object;
  #L1fc27a.  v2[v0]:= v1 @kind object;
  #L1fc27e.  v0:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fc282.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fc288.  v0:= temp @kind object;
  #L1fc28a.  call `<init>`(v6, v0) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc290.  throw v6;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/m0$e;.a:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1fc768.  if v3 < 0 then goto L1fc774;
  #L1fc76c.  call `b`(v2, v3) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc772.  return @kind void;
  #L1fc774.  v0:= (`long`) v3 @kind i2l;
  #L1fc776.  call `a`(v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(J)V` @kind virtual;
  #L1fc77c.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fc47c.  v1:= v1 ^< 3;
  #L1fc480.  v1:= v1 ^| v2 @kind int;
  #L1fc482.  call `b`(v0, v1) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc488.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$e;.a:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc3a8.  v0:= 0I;
  #L1fc3aa.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc3b0.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.a:(J)V` @kind virtual;
  #L1fc3b6.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `e.e.a.b.f.b.a0` v3 @kind object) @signature `Le/e/a/b/f/b/m0$e;.a:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc328.  v0:= 2I;
  #L1fc32a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc330.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.b:(Le/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fc336.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `e.e.a.b.f.b.k2` v3 @kind object) @signature `Le/e/a/b/f/b/m0$e;.a:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc348.  v0:= 2I;
  #L1fc34a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc350.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.c:(Le/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fc356.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `e.e.a.b.f.b.k2` v3 @kind object, `e.e.a.b.f.b.b3` v4 @kind object) @signature `Le/e/a/b/f/b/m0$e;.a:(ILe/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @AccessFlag FINAL {
    temp;
    v0;

  #L1fc368.  v0:= 2I;
  #L1fc36a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc370.  call `b`(v1, v3, v4) @signature `Le/e/a/b/f/b/m0$e;.b:(Le/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @kind virtual;
  #L1fc376.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Le/e/a/b/f/b/m0$e;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc388.  v0:= 2I;
  #L1fc38a.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc390.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.b:(Ljava/lang/String;)V` @kind virtual;
  #L1fc396.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Le/e/a/b/f/b/m0$e;.a:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc3f0.  v0:= 0I;
  #L1fc3f2.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc3f8.  v2:= (`byte`) v3 @kind i2b;
  #L1fc3fa.  call `a`(v1, v2) @signature `Le/e/a/b/f/b/m0$e;.a:(B)V` @kind virtual;
  #L1fc400.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v12 @kind this, `long` v13 ) @signature `Le/e/a/b/f/b/m0$e;.a:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1fc49c.  v0:= v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc4a0.  v2:= v12.`e.e.a.b.f.b.m0$e.i` @type ^`long` @kind wide;
  #L1fc4a4.  v4:= 7I;
  #L1fc4a6.  v5:= 0L;
  #L1fc4aa.  v7:= -128L;
  #L1fc4ae.  v9:= 1L;
  #L1fc4b2.  v11:= lcmp(v0, v2);
  #L1fc4b6.  if v11 > 0 then goto L1fc4fa;
  #L1fc4ba.  v0:= v13 ^& v7 @kind long;
  #L1fc4be.  v2:= lcmp(v0, v5);
  #L1fc4c2.  v0:= v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc4c6.  if v2 != 0 then goto L1fc4dc;
  #L1fc4ca.  v9:= v9 + v0 @kind long;
  #L1fc4cc.  v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v9 @kind wide;
  #L1fc4d0.  v14:= (`int`) v13 @kind l2i;
  #L1fc4d2.  v13:= (`byte`) v14 @kind i2b;
  #L1fc4d4.  call `a`(v0, v13) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc4da.  return @kind void;
  #L1fc4dc.  v2:= v0 + v9 @kind long;
  #L1fc4e0.  v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v2 @kind wide;
  #L1fc4e4.  v2:= (`int`) v13 @kind l2i;
  #L1fc4e6.  v2:= v2 ^& 127;
  #L1fc4ea.  v2:= v2 ^| 128;
  #L1fc4ee.  v2:= (`byte`) v2 @kind i2b;
  #L1fc4f0.  call `a`(v0, v2) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc4f6.  v13:= v13 ^>> v4 @kind long;
  #L1fc4f8.  goto L1fc4ba;
  #L1fc4fa.  v0:= v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc4fe.  v2:= v12.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc502.  v11:= lcmp(v0, v2);
  #L1fc506.  if v11 >= 0 then goto L1fc536;
  #L1fc50a.  v2:= v13 ^& v7 @kind long;
  #L1fc50e.  v11:= lcmp(v2, v5);
  #L1fc512.  if v11 != 0 then goto L1fc518;
  #L1fc516.  goto L1fc4ca;
  #L1fc518.  v2:= v0 + v9 @kind long;
  #L1fc51c.  v12.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v2 @kind wide;
  #L1fc520.  v2:= (`int`) v13 @kind l2i;
  #L1fc522.  v2:= v2 ^& 127;
  #L1fc526.  v2:= v2 ^| 128;
  #L1fc52a.  v2:= (`byte`) v2 @kind i2b;
  #L1fc52c.  call `a`(v0, v2) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc532.  v13:= v13 ^>> v4 @kind long;
  #L1fc534.  goto L1fc4fa;
  #L1fc536.  v13:= new `e.e.a.b.f.b.m0$c`;
  #L1fc53a.  v14:= 3I;
  #L1fc53c.  v14:= new `java.lang.Object`[v14];
  #L1fc540.  v2:= 0I;
  #L1fc542.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc548.  v0:= temp @kind object;
  #L1fc54a.  v14[v2]:= v0 @kind object;
  #L1fc54e.  v0:= v12.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc552.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc558.  v0:= temp @kind object;
  #L1fc55a.  v1:= 1I;
  #L1fc55c.  v14[v1]:= v0 @kind object;
  #L1fc560.  v0:= 2I;
  #L1fc562.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fc568.  v1:= temp @kind object;
  #L1fc56a.  v14[v0]:= v1 @kind object;
  #L1fc56e.  v0:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fc572.  call temp:= `format`(v0, v14) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fc578.  v14:= temp @kind object;
  #L1fc57a.  call `<init>`(v13, v14) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc580.  throw v13;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$e` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$e;.a:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fc2a4.  call `b`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/m0$e;.b:([BII)V` @kind virtual;
  #L1fc2aa.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.b.m0$e` v4 @kind this) @signature `Le/e/a/b/f/b/m0$e;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fc0a4.  v0:= v4.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc0a8.  v2:= v4.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc0ac.  v0:= v0 - v2 @kind long;
  #L1fc0ae.  v1:= (`int`) v0 @kind l2i;
  #L1fc0b0.  return v1;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v7 @kind this, `int` v8 ) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1fc790.  v0:= v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc794.  v2:= v7.`e.e.a.b.f.b.m0$e.i` @type ^`long` @kind wide;
  #L1fc798.  v4:= 1L;
  #L1fc79c.  v6:= lcmp(v0, v2);
  #L1fc7a0.  if v6 > 0 then goto L1fc7e2;
  #L1fc7a4.  v0:= v8 ^& -128;
  #L1fc7a8.  if v0 != 0 then goto L1fc7c0;
  #L1fc7ac.  v0:= v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc7b0.  v4:= v4 + v0 @kind long;
  #L1fc7b2.  v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v4 @kind wide;
  #L1fc7b6.  v8:= (`byte`) v8 @kind i2b;
  #L1fc7b8.  call `a`(v0, v8) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc7be.  return @kind void;
  #L1fc7c0.  v0:= v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc7c4.  v2:= v0 + v4 @kind long;
  #L1fc7c8.  v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v2 @kind wide;
  #L1fc7cc.  v2:= v8 ^& 127;
  #L1fc7d0.  v2:= v2 ^| 128;
  #L1fc7d4.  v2:= (`byte`) v2 @kind i2b;
  #L1fc7d6.  call `a`(v0, v2) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc7dc.  v8:= v8 ^>> 7;
  #L1fc7e0.  goto L1fc7a4;
  #L1fc7e2.  v0:= v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc7e6.  v2:= v7.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc7ea.  v6:= lcmp(v0, v2);
  #L1fc7ee.  if v6 >= 0 then goto L1fc81a;
  #L1fc7f2.  v2:= v8 ^& -128;
  #L1fc7f6.  if v2 != 0 then goto L1fc7fc;
  #L1fc7fa.  goto L1fc7b0;
  #L1fc7fc.  v2:= v0 + v4 @kind long;
  #L1fc800.  v7.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v2 @kind wide;
  #L1fc804.  v2:= v8 ^& 127;
  #L1fc808.  v2:= v2 ^| 128;
  #L1fc80c.  v2:= (`byte`) v2 @kind i2b;
  #L1fc80e.  call `a`(v0, v2) @signature `Le/e/a/b/f/b/a4;.a:(JB)V` @kind static;
  #L1fc814.  v8:= v8 ^>> 7;
  #L1fc818.  goto L1fc7e2;
  #L1fc81a.  v8:= new `e.e.a.b.f.b.m0$c`;
  #L1fc81e.  v2:= 3I;
  #L1fc820.  v2:= new `java.lang.Object`[v2];
  #L1fc824.  v3:= 0I;
  #L1fc826.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc82c.  v0:= temp @kind object;
  #L1fc82e.  v2[v3]:= v0 @kind object;
  #L1fc832.  v0:= v7.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc836.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc83c.  v0:= temp @kind object;
  #L1fc83e.  v1:= 1I;
  #L1fc840.  v2[v1]:= v0 @kind object;
  #L1fc844.  v0:= 2I;
  #L1fc846.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fc84c.  v1:= temp @kind object;
  #L1fc84e.  v2[v0]:= v1 @kind object;
  #L1fc852.  v0:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fc856.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fc85c.  v0:= temp @kind object;
  #L1fc85e.  call `<init>`(v8, v0) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc864.  throw v8;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$e;.b:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc594.  v0:= 0I;
  #L1fc596.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc59c.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.a:(I)V` @kind virtual;
  #L1fc5a2.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v3 @kind this, `int` v4 , `e.e.a.b.f.b.a0` v5 @kind object) @signature `Le/e/a/b/f/b/m0$e;.b:(ILe/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fc414.  v0:= 3I;
  #L1fc416.  v1:= 1I;
  #L1fc418.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc41e.  v2:= 2I;
  #L1fc420.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$e;.c:(II)V` @kind virtual;
  #L1fc426.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$e;.a:(ILe/e/a/b/f/b/a0;)V` @kind virtual;
  #L1fc42c.  v4:= 4I;
  #L1fc42e.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc434.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v3 @kind this, `int` v4 , `e.e.a.b.f.b.k2` v5 @kind object) @signature `Le/e/a/b/f/b/m0$e;.b:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fc448.  v0:= 3I;
  #L1fc44a.  v1:= 1I;
  #L1fc44c.  call `a`(v3, v1, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc452.  v2:= 2I;
  #L1fc454.  call `c`(v3, v2, v4) @signature `Le/e/a/b/f/b/m0$e;.c:(II)V` @kind virtual;
  #L1fc45a.  call `a`(v3, v0, v5) @signature `Le/e/a/b/f/b/m0$e;.a:(ILe/e/a/b/f/b/k2;)V` @kind virtual;
  #L1fc460.  v4:= 4I;
  #L1fc462.  call `a`(v3, v1, v4) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc468.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v1 @kind this, `e.e.a.b.f.b.a0` v2 @kind object) @signature `Le/e/a/b/f/b/m0$e;.b:(Le/e/a/b/f/b/a0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc2bc.  call temp:= `size`(v2) @signature `Le/e/a/b/f/b/a0;.size:()I` @kind virtual;
  #L1fc2c2.  v0:= temp;
  #L1fc2c4.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc2ca.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/a0;.a:(Le/e/a/b/f/b/z;)V` @kind virtual;
  #L1fc2d0.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v3 @kind this, `e.e.a.b.f.b.k2` v4 @kind object, `e.e.a.b.f.b.b3` v5 @kind object) @signature `Le/e/a/b/f/b/m0$e;.b:(Le/e/a/b/f/b/k2;Le/e/a/b/f/b/b3;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fc2e4.  v0:= v4 @kind object;
  #L1fc2e6.  v0:= (`e.e.a.b.f.b.q`) v0 @kind object;
  #L1fc2ea.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/q;.c:()I` @kind virtual;
  #L1fc2f0.  v1:= temp;
  #L1fc2f2.  v2:= -1I;
  #L1fc2f4.  if v1 != v2 then goto L1fc306;
  #L1fc2f8.  call temp:= `d`(v5, v0) @signature `Le/e/a/b/f/b/b3;.d:(Ljava/lang/Object;)I` @kind interface;
  #L1fc2fe.  v1:= temp;
  #L1fc300.  call `a`(v0, v1) @signature `Le/e/a/b/f/b/q;.a:(I)V` @kind virtual;
  #L1fc306.  call `b`(v3, v1) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc30c.  v0:= v3.`e.e.a.b.f.b.m0.a` @type ^`e.e.a.b.f.b.o0` @kind object;
  #L1fc310.  call `a`(v5, v4, v0) @signature `Le/e/a/b/f/b/b3;.a:(Ljava/lang/Object;Le/e/a/b/f/b/o4;)V` @kind interface;
  #L1fc316.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Le/e/a/b/f/b/m0$e;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1fc64c.  v0:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc650.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fc656.  v2:= temp;
  #L1fc658.  v2:= v2 * 3;
  #L1fc65c.  call temp:= `g`(v2) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fc662.  v2:= temp;
  #L1fc664.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fc66a.  v3:= temp;
  #L1fc66c.  call temp:= `g`(v3) @signature `Le/e/a/b/f/b/m0;.g:(I)I` @kind static;
  #L1fc672.  v3:= temp;
  #L1fc674.  if v3 != v2 then goto L1fc6bc;
  #L1fc678.  v4:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc67c.  v6:= v8.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc680.  v4:= v4 - v6 @kind long;
  #L1fc682.  v2:= (`int`) v4 @kind l2i;
  #L1fc684.  v2:= v2 + v3 @kind int;
  #L1fc686.  v3:= v8.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc68a.  call temp:= `position`(v3, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fc690.  v3:= v8.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc694.  call `a`(v9, v3) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L1fc69a.  v3:= v8.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc69e.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fc6a4.  v3:= temp;
  #L1fc6a6.  v3:= v3 - v2 @kind int;
  #L1fc6a8.  call `b`(v8, v3) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc6ae.  v4:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc6b2.  v2:= (`long`) v3 @kind i2l;
  #L1fc6b4.  v4:= v4 + v2 @kind long;
  #L1fc6b6.  v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v4 @kind wide;
  #L1fc6ba.  return @kind void;
  #L1fc6bc.  call temp:= `a`(v9) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L1fc6c2.  v2:= temp;
  #L1fc6c4.  call `b`(v8, v2) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc6ca.  v3:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc6ce.  call `i`(v8, v3) @signature `Le/e/a/b/f/b/m0$e;.i:(J)V` @kind direct;
  #L1fc6d4.  v3:= v8.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc6d8.  call `a`(v9, v3) @signature `Le/e/a/b/f/b/c4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L1fc6de.  v3:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc6e2.  v5:= (`long`) v2 @kind i2l;
  #L1fc6e4.  v3:= v3 + v5 @kind long;
  #L1fc6e6.  v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v3 @kind wide;
  #L1fc6ea.  return @kind void;
  #L1fc6ec.  v9:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1fc6ee.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fc6f2.  call `<init>`(v0, v9) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fc6f8.  throw v0;
  #L1fc6fa.  v9:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L1fc6fc.  v0:= new `e.e.a.b.f.b.m0$c`;
  #L1fc700.  call `<init>`(v0, v9) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1fc706.  throw v0;
  #L1fc708.  v2:= Exception @type ^`e.e.a.b.f.b.f4` @kind object;
  #L1fc70a.  v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v0 @kind wide;
  #L1fc70e.  v0:= v8.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc712.  call `i`(v8, v0) @signature `Le/e/a/b/f/b/m0$e;.i:(J)V` @kind direct;
  #L1fc718.  call `a`(v8, v9, v2) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/lang/String;Le/e/a/b/f/b/f4;)V` @kind virtual;
  #L1fc71e.  return @kind void;
  catch `e.e.a.b.f.b.f4` @[L1fc650..L1fc6ea] goto L1fc708;
  catch `java.lang.IllegalArgumentException` @[L1fc650..L1fc6ea] goto L1fc6fa;
  catch `java.lang.IndexOutOfBoundsException` @[L1fc650..L1fc6ea] goto L1fc6ec;
}
procedure `void` `b`(`e.e.a.b.f.b.m0$e` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Le/e/a/b/f/b/m0$e;.b:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1fc16c.  if v12 == 0 then goto L1fc1ae;
  #L1fc170.  if v13 < 0 then goto L1fc1ae;
  #L1fc174.  if v14 < 0 then goto L1fc1ae;
  #L1fc178.  v0:= length @variable v12;
  #L1fc17a.  v0:= v0 - v14 @kind int;
  #L1fc17c.  if v0 < v13 then goto L1fc1ae;
  #L1fc180.  v0:= v11.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc184.  v9:= (`long`) v14 @kind i2l;
  #L1fc186.  v0:= v0 - v9 @kind long;
  #L1fc188.  v5:= v11.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc18c.  v2:= lcmp(v0, v5);
  #L1fc190.  if v2 >= 0 then goto L1fc196;
  #L1fc194.  goto L1fc1ae;
  #L1fc196.  v3:= (`long`) v13 @kind i2l;
  #L1fc198.  v2:= v12 @kind object;
  #L1fc19a.  v7:= v9 @kind wide;
  #L1fc19c.  call `a`(v2, v3, v5, v7) @signature `Le/e/a/b/f/b/a4;.a:([BJJJ)V` @kind static;
  #L1fc1a2.  v12:= v11.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc1a6.  v12:= v12 + v9 @kind long;
  #L1fc1a8.  v11.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v12 @kind wide;
  #L1fc1ac.  return @kind void;
  #L1fc1ae.  if v12 != 0 then goto L1fc1c2;
  #L1fc1b2.  v12:= new `java.lang.NullPointerException`;
  #L1fc1b6.  v13:= "value" @kind object;
  #L1fc1ba.  call `<init>`(v12, v13) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc1c0.  throw v12;
  #L1fc1c2.  v12:= new `e.e.a.b.f.b.m0$c`;
  #L1fc1c6.  v13:= 3I;
  #L1fc1c8.  v13:= new `java.lang.Object`[v13];
  #L1fc1cc.  v0:= 0I;
  #L1fc1ce.  v1:= v11.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc1d2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc1d8.  v1:= temp @kind object;
  #L1fc1da.  v13[v0]:= v1 @kind object;
  #L1fc1de.  v0:= 1I;
  #L1fc1e0.  v1:= v11.`e.e.a.b.f.b.m0$e.h` @type ^`long` @kind wide;
  #L1fc1e4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1fc1ea.  v1:= temp @kind object;
  #L1fc1ec.  v13[v0]:= v1 @kind object;
  #L1fc1f0.  v0:= 2I;
  #L1fc1f2.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1fc1f8.  v14:= temp @kind object;
  #L1fc1fa.  v13[v0]:= v14 @kind object;
  #L1fc1fe.  v14:= "Pos: %d, limit: %d, len: %d" @kind object;
  #L1fc202.  call temp:= `format`(v14, v13) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fc208.  v13:= temp @kind object;
  #L1fc20a.  call `<init>`(v12, v13) @signature `Le/e/a/b/f/b/m0$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc210.  throw v12;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$e;.c:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc5d4.  v0:= 0I;
  #L1fc5d6.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc5dc.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc5e2.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/m0$e;.c:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc5b4.  v0:= 1I;
  #L1fc5b6.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc5bc.  call `c`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.c:(J)V` @kind virtual;
  #L1fc5c2.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$e` v5 @kind this, `long` v6 ) @signature `Le/e/a/b/f/b/m0$e;.c:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fc5f4.  v0:= v5.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc5f8.  v1:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc5fc.  v3:= v5.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc600.  v1:= v1 - v3 @kind long;
  #L1fc602.  v2:= (`int`) v1 @kind l2i;
  #L1fc604.  call temp:= `putLong`(v0, v2, v6) @signature `Ljava/nio/ByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc60a.  v6:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc60e.  v0:= 8L;
  #L1fc612.  v6:= v6 + v0 @kind long;
  #L1fc614.  v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v6 @kind wide;
  #L1fc618.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.m0$e` v1 @kind this, `e.e.a.b.f.b.k2` v2 @kind object) @signature `Le/e/a/b/f/b/m0$e;.c:(Le/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc3c8.  call temp:= `q`(v2) @signature `Le/e/a/b/f/b/k2;.q:()I` @kind interface;
  #L1fc3ce.  v0:= temp;
  #L1fc3d0.  call `b`(v1, v0) @signature `Le/e/a/b/f/b/m0$e;.b:(I)V` @kind virtual;
  #L1fc3d6.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/k2;.a:(Le/e/a/b/f/b/m0;)V` @kind interface;
  #L1fc3dc.  return @kind void;
}
procedure `void` `d`(`e.e.a.b.f.b.m0$e` v5 @kind this, `int` v6 ) @signature `Le/e/a/b/f/b/m0$e;.d:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fc878.  v0:= v5.`e.e.a.b.f.b.m0$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fc87c.  v1:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc880.  v3:= v5.`e.e.a.b.f.b.m0$e.f` @type ^`long` @kind wide;
  #L1fc884.  v1:= v1 - v3 @kind long;
  #L1fc886.  v2:= (`int`) v1 @kind l2i;
  #L1fc888.  call temp:= `putInt`(v0, v2, v6) @signature `Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1fc88e.  v0:= v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` @kind wide;
  #L1fc892.  v2:= 4L;
  #L1fc896.  v0:= v0 + v2 @kind long;
  #L1fc898.  v5.`e.e.a.b.f.b.m0$e.j` @type ^`long` := v0 @kind wide;
  #L1fc89c.  return @kind void;
}
procedure `void` `e`(`e.e.a.b.f.b.m0$e` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/m0$e;.e:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fc62c.  v0:= 5I;
  #L1fc62e.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/m0$e;.a:(II)V` @kind virtual;
  #L1fc634.  call `d`(v1, v3) @signature `Le/e/a/b/f/b/m0$e;.d:(I)V` @kind virtual;
  #L1fc63a.  return @kind void;
}
