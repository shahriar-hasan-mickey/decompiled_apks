record `e.e.a.b.f.b.x2` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.t` @kind class {
  `java.util.List` `e.e.a.b.f.b.x2.c` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.b.x2` `@@e.e.a.b.f.b.x2.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/x2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20b3a4.  v0:= new `e.e.a.b.f.b.x2`;
  #L20b3a8.  call `<init>`(v0) @signature `Le/e/a/b/f/b/x2;.<init>:()V` @kind direct;
  #L20b3ae.  `@@e.e.a.b.f.b.x2.d` @type ^`e.e.a.b.f.b.x2` := v0 @kind object;
  #L20b3b2.  call `h`(v0) @signature `Le/e/a/b/f/b/t;.h:()V` @kind virtual;
  #L20b3b8.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.x2` v2 @kind this) @signature `Le/e/a/b/f/b/x2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20b3cc.  v0:= new `java.util.ArrayList`;
  #L20b3d0.  v1:= 10I;
  #L20b3d4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L20b3da.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/b/x2;.<init>:(Ljava/util/List;)V` @kind direct;
  #L20b3e0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.x2` v0 @kind this, `java.util.List` v1 @kind object) @signature `Le/e/a/b/f/b/x2;.<init>:(Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L20b3f4.  call `<init>`(v0) @signature `Le/e/a/b/f/b/t;.<init>:()V` @kind direct;
  #L20b3fa.  v0.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` := v1 @kind object;
  #L20b3fe.  return @kind void;
}
procedure `e.e.a.b.f.b.x2` `f`() @signature `Le/e/a/b/f/b/x2;.f:()Le/e/a/b/f/b/x2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20b2ec.  v0:= `@@e.e.a.b.f.b.x2.d` @type ^`e.e.a.b.f.b.x2` @kind object;
  #L20b2f0.  return v0 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.b.x2` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/x2;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20b410.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L20b416.  v0:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b41a.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L20b420.  v2:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L20b424.  v2:= v2 + 1;
  #L20b428.  v1.`java.util.AbstractList.modCount` @type ^`int` := v2;
  #L20b42c.  return @kind void;
}
procedure `e.e.a.b.f.b.k1` `f`(`e.e.a.b.f.b.x2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/x2;.f:(I)Le/e/a/b/f/b/k1;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L20b2a4.  call temp:= `size`(v1) @signature `Le/e/a/b/f/b/x2;.size:()I` @kind virtual;
  #L20b2aa.  v0:= temp;
  #L20b2ac.  if v2 < v0 then goto L20b2d0;
  #L20b2b0.  v0:= new `java.util.ArrayList`;
  #L20b2b4.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L20b2ba.  v2:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b2be.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L20b2c4.  v2:= new `e.e.a.b.f.b.x2`;
  #L20b2c8.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/b/x2;.<init>:(Ljava/util/List;)V` @kind direct;
  #L20b2ce.  return v2 @kind object;
  #L20b2d0.  v2:= new `java.lang.IllegalArgumentException`;
  #L20b2d4.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L20b2da.  throw v2;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.b.x2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/x2;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20b324.  v0:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b328.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20b32e.  v2:= temp @kind object;
  #L20b330.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.b.x2` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/x2;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20b344.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L20b34a.  v0:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b34e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L20b354.  v2:= temp @kind object;
  #L20b356.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L20b35a.  v0:= v0 + 1;
  #L20b35e.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L20b362.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.b.x2` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/b/x2;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20b374.  call `d`(v1) @signature `Le/e/a/b/f/b/t;.d:()V` @kind virtual;
  #L20b37a.  v0:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b37e.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20b384.  v2:= temp @kind object;
  #L20b386.  v3:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L20b38a.  v3:= v3 + 1;
  #L20b38e.  v1.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L20b392.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.b.x2` v1 @kind this) @signature `Le/e/a/b/f/b/x2;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20b304.  v0:= v1.`e.e.a.b.f.b.x2.c` @type ^`java.util.List` @kind object;
  #L20b308.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20b30e.  v0:= temp;
  #L20b310.  return v0;
}
