record `e.e.a.b.f.m.g` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.m.g.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.m.g.c` @AccessFlag ;
  `e.e.a.b.f.m.h` `e.e.a.b.f.m.g.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.g` v0 @kind this, `e.e.a.b.f.m.h` v1 @kind object) @signature `Le/e/a/b/f/m/g;.<init>:(Le/e/a/b/f/m/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26429c.  v0.`e.e.a.b.f.m.g.d` @type ^`e.e.a.b.f.m.h` := v1 @kind object;
  #L2642a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2642a6.  v1:= v0.`e.e.a.b.f.m.g.d` @type ^`e.e.a.b.f.m.h` @kind object;
  #L2642aa.  v1:= v1.`e.e.a.b.f.m.h.d` @type ^`java.util.Map` @kind object;
  #L2642ae.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2642b4.  v1:= temp @kind object;
  #L2642b6.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2642bc.  v1:= temp @kind object;
  #L2642be.  v0.`e.e.a.b.f.m.g.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L2642c2.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.m.g` v1 @kind this) @signature `Le/e/a/b/f/m/g;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L26421c.  v0:= v1.`e.e.a.b.f.m.g.b` @type ^`java.util.Iterator` @kind object;
  #L264220.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L264226.  v0:= temp;
  #L264228.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.m.g` v3 @kind this) @signature `Le/e/a/b/f/m/g;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L26423c.  v0:= v3.`e.e.a.b.f.m.g.b` @type ^`java.util.Iterator` @kind object;
  #L264240.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L264246.  v0:= temp @kind object;
  #L264248.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L26424c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L264252.  v1:= temp @kind object;
  #L264254.  v1:= (`java.util.Collection`) v1 @kind object;
  #L264258.  v3.`e.e.a.b.f.m.g.c` @type ^`java.util.Collection` := v1 @kind object;
  #L26425c.  v1:= v3.`e.e.a.b.f.m.g.d` @type ^`e.e.a.b.f.m.h` @kind object;
  #L264260.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L264266.  v2:= temp @kind object;
  #L264268.  v1:= v1.`e.e.a.b.f.m.h.e` @type ^`e.e.a.b.f.m.p` @kind object;
  #L26426c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L264272.  v0:= temp @kind object;
  #L264274.  v0:= (`java.util.Collection`) v0 @kind object;
  #L264278.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/m/p;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L26427e.  v0:= temp @kind object;
  #L264280.  v1:= new `e.e.a.b.f.m.j0`;
  #L264284.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/m/j0;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L26428a.  return v1 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.m.g` v2 @kind this) @signature `Le/e/a/b/f/m/g;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2642d4.  v0:= v2.`e.e.a.b.f.m.g.c` @type ^`java.util.Collection` @kind object;
  #L2642d8.  if v0 == 0 then goto L2642e0;
  #L2642dc.  v0:= 1I;
  #L2642de.  goto L2642e2;
  #L2642e0.  v0:= 0I;
  #L2642e2.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L2642e6.  call `a`(v0, v1) @signature `Le/e/a/b/f/m/b;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2642ec.  v0:= v2.`e.e.a.b.f.m.g.b` @type ^`java.util.Iterator` @kind object;
  #L2642f0.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2642f6.  v0:= v2.`e.e.a.b.f.m.g.d` @type ^`e.e.a.b.f.m.h` @kind object;
  #L2642fa.  v0:= v0.`e.e.a.b.f.m.h.e` @type ^`e.e.a.b.f.m.p` @kind object;
  #L2642fe.  v1:= v2.`e.e.a.b.f.m.g.c` @type ^`java.util.Collection` @kind object;
  #L264302.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L264308.  v1:= temp;
  #L26430a.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L264310.  v0:= v2.`e.e.a.b.f.m.g.c` @type ^`java.util.Collection` @kind object;
  #L264314.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L26431a.  v0:= 0I;
  #L26431c.  v2.`e.e.a.b.f.m.g.c` @type ^`java.util.Collection` := v0 @kind object;
  #L264320.  return @kind void;
}
