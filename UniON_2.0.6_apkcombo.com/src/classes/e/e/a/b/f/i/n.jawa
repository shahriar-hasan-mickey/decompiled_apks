record `e.e.a.b.f.i.n` @kind class @AccessFlag FINAL extends `e.e.a.b.f.i.j` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.i.n.d` @AccessFlag FINAL_TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.i.n.e` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.i.n.f` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `e.e.a.b.f.i.n.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `e.e.a.b.f.i.n.h` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `e.e.a.b.f.i.n` `@@e.e.a.b.f.i.n.i` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/i/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21cbb4.  v6:= new `e.e.a.b.f.i.n`;
  #L21cbb8.  v0:= 0I;
  #L21cbba.  v1:= new `java.lang.Object`[v0];
  #L21cbbe.  v2:= 0I;
  #L21cbc0.  v3:= 0I;
  #L21cbc2.  v4:= 0I;
  #L21cbc4.  v5:= 0I;
  #L21cbc6.  v0:= v6 @kind object;
  #L21cbc8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Le/e/a/b/f/i/n;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L21cbce.  `@@e.e.a.b.f.i.n.i` @type ^`e.e.a.b.f.i.n` := v6 @kind object;
  #L21cbd2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.i.n` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/i/n;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cbe4.  call `<init>`(v0) @signature `Le/e/a/b/f/i/j;.<init>:()V` @kind direct;
  #L21cbea.  v0.`e.e.a.b.f.i.n.d` @type ^`java.lang.Object`[] := v1 @kind object;
  #L21cbee.  v0.`e.e.a.b.f.i.n.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L21cbf2.  v0.`e.e.a.b.f.i.n.f` @type ^`int` := v4;
  #L21cbf6.  v0.`e.e.a.b.f.i.n.g` @type ^`int` := v2;
  #L21cbfa.  v0.`e.e.a.b.f.i.n.h` @type ^`int` := v5;
  #L21cbfe.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.i.n` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Le/e/a/b/f/i/n;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L21cb50.  v4:= v2.`e.e.a.b.f.i.n.d` @type ^`java.lang.Object`[] @kind object;
  #L21cb54.  v0:= v2.`e.e.a.b.f.i.n.h` @type ^`int`;
  #L21cb58.  v1:= 0I;
  #L21cb5a.  call `arraycopy`(v4, v1, v3, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L21cb60.  v3:= v2.`e.e.a.b.f.i.n.h` @type ^`int`;
  #L21cb64.  return v3;
}
procedure `int` `c`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.c:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L21cb38.  v0:= v1.`e.e.a.b.f.i.n.h` @type ^`int`;
  #L21cb3c.  return v0;
}
procedure `boolean` `contains`(`e.e.a.b.f.i.n` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/i/n;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21ca40.  v0:= v4.`e.e.a.b.f.i.n.e` @type ^`java.lang.Object`[] @kind object;
  #L21ca44.  v1:= 0I;
  #L21ca46.  if v5 == 0 then goto L21ca86;
  #L21ca4a.  if v0 != 0 then goto L21ca50;
  #L21ca4e.  goto L21ca86;
  #L21ca50.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21ca56.  v2:= temp;
  #L21ca58.  call temp:= `a`(v2) @signature `Le/e/a/b/f/i/e;.a:(I)I` @kind static;
  #L21ca5e.  v2:= temp;
  #L21ca60.  v3:= v4.`e.e.a.b.f.i.n.f` @type ^`int`;
  #L21ca64.  v2:= v2 ^& v3 @kind int;
  #L21ca66.  v3:= v0[v2] @kind object;
  #L21ca6a.  if v3 != 0 then goto L21ca70;
  #L21ca6e.  return v1;
  #L21ca70.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21ca76.  v3:= temp;
  #L21ca78.  if v3 == 0 then goto L21ca80;
  #L21ca7c.  v5:= 1I;
  #L21ca7e.  return v5;
  #L21ca80.  v2:= v2 + 1;
  #L21ca84.  goto L21ca60;
  #L21ca86.  return v1;
}
procedure `int` `d`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L21cb24.  v0:= 0I;
  #L21cb26.  return v0;
}
procedure `e.e.a.b.f.i.i` `f`(`e.e.a.b.f.i.n` v2 @kind this) @signature `Le/e/a/b/f/i/n;.f:()Le/e/a/b/f/i/i;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L21caac.  v0:= v2.`e.e.a.b.f.i.n.d` @type ^`java.lang.Object`[] @kind object;
  #L21cab0.  v1:= v2.`e.e.a.b.f.i.n.h` @type ^`int`;
  #L21cab4.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/i/i;.b:([Ljava/lang/Object;I)Le/e/a/b/f/i/i;` @kind static;
  #L21caba.  v0:= temp @kind object;
  #L21cabc.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21caf4.  v0:= v1.`e.e.a.b.f.i.n.g` @type ^`int`;
  #L21caf8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.i.n` v2 @kind this) @signature `Le/e/a/b/f/i/n;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L21cb90.  call temp:= `e`(v2) @signature `Le/e/a/b/f/i/j;.e:()Le/e/a/b/f/i/i;` @kind virtual;
  #L21cb96.  v0:= temp @kind object;
  #L21cb98.  v1:= 0I;
  #L21cb9a.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/i/i;.h:(I)Le/e/a/b/f/i/q;` @kind virtual;
  #L21cba0.  v0:= temp @kind object;
  #L21cba2.  return v0 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21cb0c.  v0:= v1.`e.e.a.b.f.i.n.h` @type ^`int`;
  #L21cb10.  return v0;
}
procedure `boolean` `v`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L21ca98.  v0:= 1I;
  #L21ca9a.  return v0;
}
procedure `e.e.a.b.f.i.p` `zza`(`e.e.a.b.f.i.n` v2 @kind this) @signature `Le/e/a/b/f/i/n;.zza:()Le/e/a/b/f/i/p;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L21cad0.  call temp:= `e`(v2) @signature `Le/e/a/b/f/i/j;.e:()Le/e/a/b/f/i/i;` @kind virtual;
  #L21cad6.  v0:= temp @kind object;
  #L21cad8.  v1:= 0I;
  #L21cada.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/i/i;.h:(I)Le/e/a/b/f/i/q;` @kind virtual;
  #L21cae0.  v0:= temp @kind object;
  #L21cae2.  return v0 @kind object;
}
procedure `java.lang.Object`[] `zzb`(`e.e.a.b.f.i.n` v1 @kind this) @signature `Le/e/a/b/f/i/n;.zzb:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L21cb78.  v0:= v1.`e.e.a.b.f.i.n.d` @type ^`java.lang.Object`[] @kind object;
  #L21cb7c.  return v0 @kind object;
}
