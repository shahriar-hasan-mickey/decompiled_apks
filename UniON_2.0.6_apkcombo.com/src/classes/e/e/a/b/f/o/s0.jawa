record `e.e.a.b.f.o.s0` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.e.a.b.f.o.s0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.e.a.b.f.o.s0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.o.s0` v4 @kind this) @signature `Le/e/a/b/f/o/s0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c1984.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c198a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L2c198e.  v1:= 16I;
  #L2c1992.  v2:= 0.75F;
  #L2c1996.  v3:= 10I;
  #L2c199a.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L2c19a0.  v4.`e.e.a.b.f.o.s0.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L2c19a4.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L2c19a8.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L2c19ae.  v4.`e.e.a.b.f.o.s0.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L2c19b2.  return @kind void;
}
procedure `java.util.List` `a`(`e.e.a.b.f.o.s0` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/o/s0;.a:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c1904.  v5:= v3.`e.e.a.b.f.o.s0.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2c1908.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L2c190e.  v5:= temp @kind object;
  #L2c1910.  if v5 == 0 then goto L2c1920;
  #L2c1914.  v0:= v3.`e.e.a.b.f.o.s0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2c1918.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c191e.  goto L2c1904;
  #L2c1920.  v5:= new `e.e.a.b.f.o.r0`;
  #L2c1924.  v0:= 0I;
  #L2c1926.  call `<init>`(v5, v4, v0) @signature `Le/e/a/b/f/o/r0;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2c192c.  v0:= v3.`e.e.a.b.f.o.s0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2c1930.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c1936.  v5:= temp @kind object;
  #L2c1938.  v5:= (`java.util.List`) v5 @kind object;
  #L2c193c.  if v5 == 0 then goto L2c1942;
  #L2c1940.  return v5 @kind object;
  #L2c1942.  v5:= new `java.util.Vector`;
  #L2c1946.  v0:= 2I;
  #L2c1948.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L2c194e.  v0:= v3.`e.e.a.b.f.o.s0.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L2c1952.  v1:= new `e.e.a.b.f.o.r0`;
  #L2c1956.  v2:= v3.`e.e.a.b.f.o.s0.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L2c195a.  call `<init>`(v1, v4, v2) @signature `Le/e/a/b/f/o/r0;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L2c1960.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c1966.  v4:= temp @kind object;
  #L2c1968.  v4:= (`java.util.List`) v4 @kind object;
  #L2c196c.  if v4 != 0 then goto L2c1972;
  #L2c1970.  return v5 @kind object;
  #L2c1972.  return v4 @kind object;
}
