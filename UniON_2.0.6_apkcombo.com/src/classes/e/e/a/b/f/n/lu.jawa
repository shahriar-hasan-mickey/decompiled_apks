record `e.e.a.b.f.n.lu` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.gu` @kind class {
  `java.lang.Object` `e.e.a.b.f.n.lu.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.n.lu.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.n.lu` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/n/lu;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ac650.  call `<init>`(v0) @signature `Le/e/a/b/f/n/gu;.<init>:()V` @kind direct;
  #L2ac656.  if v1 == 0 then goto L2ac660;
  #L2ac65a.  v0.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` := v1 @kind object;
  #L2ac65e.  return @kind void;
  #L2ac660.  v1:= 0I;
  #L2ac662.  throw v1;
}
procedure `void` `<init>`(`e.e.a.b.f.n.lu` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/n/lu;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ac674.  call `<init>`(v0) @signature `Le/e/a/b/f/n/gu;.<init>:()V` @kind direct;
  #L2ac67a.  v0.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` := v1 @kind object;
  #L2ac67e.  v0.`e.e.a.b.f.n.lu.e` @type ^`int` := v2;
  #L2ac682.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.n.lu` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/n/lu;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L2ac5b0.  v3:= v1.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac5b4.  v0:= 0I;
  #L2ac5b6.  v2[v0]:= v3 @kind object;
  #L2ac5ba.  v2:= 1I;
  #L2ac5bc.  return v2;
}
procedure `boolean` `contains`(`e.e.a.b.f.n.lu` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/n/lu;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ac4f0.  v0:= v1.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac4f4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ac4fa.  v2:= temp;
  #L2ac4fc.  return v2;
}
procedure `e.e.a.b.f.n.eu` `f`(`e.e.a.b.f.n.lu` v1 @kind this) @signature `Le/e/a/b/f/n/lu;.f:()Le/e/a/b/f/n/eu;` @AccessFlag FINAL {
    temp;
    v0;

  #L2ac530.  v0:= v1.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac534.  call temp:= `a`(v0) @signature `Le/e/a/b/f/n/eu;.a:(Ljava/lang/Object;)Le/e/a/b/f/n/eu;` @kind static;
  #L2ac53a.  v0:= temp @kind object;
  #L2ac53c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.n.lu` v1 @kind this) @signature `Le/e/a/b/f/n/lu;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ac570.  v0:= v1.`e.e.a.b.f.n.lu.e` @type ^`int`;
  #L2ac574.  if v0 != 0 then goto L2ac588;
  #L2ac578.  v0:= v1.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac57c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2ac582.  v0:= temp;
  #L2ac584.  v1.`e.e.a.b.f.n.lu.e` @type ^`int` := v0;
  #L2ac588.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.n.lu` v2 @kind this) @signature `Le/e/a/b/f/n/lu;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2ac630.  v0:= v2.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac634.  v1:= new `e.e.a.b.f.n.hu`;
  #L2ac638.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/hu;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2ac63e.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.n.lu` v1 @kind this) @signature `Le/e/a/b/f/n/lu;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ac59c.  v0:= 1I;
  #L2ac59e.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.lu` v3 @kind this) @signature `Le/e/a/b/f/n/lu;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ac5d0.  v0:= v3.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac5d4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ac5da.  v0:= temp @kind object;
  #L2ac5dc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ac5e2.  v1:= temp @kind object;
  #L2ac5e4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ac5ea.  v1:= temp;
  #L2ac5ec.  v2:= new `java.lang.StringBuilder`;
  #L2ac5f0.  v1:= v1 + 2;
  #L2ac5f4.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2ac5fa.  v1:= 91I;
  #L2ac5fe.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac604.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac60a.  v0:= 93I;
  #L2ac60e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac614.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ac61a.  v0:= temp @kind object;
  #L2ac61c.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.n.lu` v1 @kind this) @signature `Le/e/a/b/f/n/lu;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L2ac510.  v0:= v1.`e.e.a.b.f.n.lu.e` @type ^`int`;
  #L2ac514.  if v0 == 0 then goto L2ac51c;
  #L2ac518.  v0:= 1I;
  #L2ac51a.  return v0;
  #L2ac51c.  v0:= 0I;
  #L2ac51e.  return v0;
}
procedure `e.e.a.b.f.n.mu` `zza`(`e.e.a.b.f.n.lu` v2 @kind this) @signature `Le/e/a/b/f/n/lu;.zza:()Le/e/a/b/f/n/mu;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ac550.  v0:= v2.`e.e.a.b.f.n.lu.d` @type ^`java.lang.Object` @kind object;
  #L2ac554.  v1:= new `e.e.a.b.f.n.hu`;
  #L2ac558.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/n/hu;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2ac55e.  return v1 @kind object;
}
