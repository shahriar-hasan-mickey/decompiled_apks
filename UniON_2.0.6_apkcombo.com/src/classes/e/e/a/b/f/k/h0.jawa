record `e.e.a.b.f.k.h0` @kind class @AccessFlag ABSTRACT extends `java.util.Map$Entry` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.k.h0` v0 @kind this) @signature `Le/e/a/b/f/k/h0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L244a90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L244a96.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.k.h0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/k/h0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L244970.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L244974.  v1:= 0I;
  #L244976.  if v0 == 0 then goto L2449ba;
  #L24497a.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L24497e.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/k/h0;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L244984.  v0:= temp @kind object;
  #L244986.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24498c.  v2:= temp @kind object;
  #L24498e.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L244994.  v0:= temp;
  #L244996.  if v0 == 0 then goto L2449ba;
  #L24499a.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/k/h0;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2449a0.  v0:= temp @kind object;
  #L2449a2.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2449a8.  v4:= temp @kind object;
  #L2449aa.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/k/n;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2449b0.  v4:= temp;
  #L2449b2.  if v4 == 0 then goto L2449ba;
  #L2449b6.  v4:= 1I;
  #L2449b8.  return v4;
  #L2449ba.  return v1;
}
procedure `java.lang.Object` `getKey`() @signature `Le/e/a/b/f/k/h0;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Le/e/a/b/f/k/h0;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`e.e.a.b.f.k.h0` v3 @kind this) @signature `Le/e/a/b/f/k/h0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2449cc.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/k/h0;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2449d2.  v0:= temp @kind object;
  #L2449d4.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/k/h0;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2449da.  v1:= temp @kind object;
  #L2449dc.  v2:= 0I;
  #L2449de.  if v0 != 0 then goto L2449e6;
  #L2449e2.  v0:= 0I;
  #L2449e4.  goto L2449ee;
  #L2449e6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2449ec.  v0:= temp;
  #L2449ee.  if v1 != 0 then goto L2449f4;
  #L2449f2.  goto L2449fc;
  #L2449f4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2449fa.  v2:= temp;
  #L2449fc.  v0:= v0 ^~ v2 @kind int;
  #L2449fe.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.k.h0` v5 @kind this) @signature `Le/e/a/b/f/k/h0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L244a10.  call temp:= `getKey`(v5) @signature `Le/e/a/b/f/k/h0;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L244a16.  v0:= temp @kind object;
  #L244a18.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L244a1e.  v0:= temp @kind object;
  #L244a20.  call temp:= `getValue`(v5) @signature `Le/e/a/b/f/k/h0;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L244a26.  v1:= temp @kind object;
  #L244a28.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L244a2e.  v1:= temp @kind object;
  #L244a30.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L244a36.  v2:= temp @kind object;
  #L244a38.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L244a3e.  v2:= temp;
  #L244a40.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L244a46.  v3:= temp @kind object;
  #L244a48.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L244a4e.  v3:= temp;
  #L244a50.  v4:= new `java.lang.StringBuilder`;
  #L244a54.  v2:= v2 + 1;
  #L244a58.  v2:= v2 + v3 @kind int;
  #L244a5a.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L244a60.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L244a66.  v0:= "=" @kind object;
  #L244a6a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L244a70.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L244a76.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L244a7c.  v0:= temp @kind object;
  #L244a7e.  return v0 @kind object;
}
