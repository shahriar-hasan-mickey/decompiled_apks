record `e.e.a.b.f.n.el` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.el.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/el;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a0d38.  v0:= new `e.e.a.b.f.n.el`;
  #L2a0d3c.  call `<init>`(v0) @signature `Le/e/a/b/f/n/el;.<init>:()V` @kind direct;
  #L2a0d42.  `@@e.e.a.b.f.n.el.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2a0d46.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.el` v0 @kind this) @signature `Le/e/a/b/f/n/el;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a0d58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a0d5e.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.el` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/el;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a0d14.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/fl;.a:(I)Le/e/a/b/f/n/fl;` @kind static;
  #L2a0d1a.  v1:= temp @kind object;
  #L2a0d1c.  if v1 == 0 then goto L2a0d24;
  #L2a0d20.  v1:= 1I;
  #L2a0d22.  return v1;
  #L2a0d24.  v1:= 0I;
  #L2a0d26.  return v1;
}
