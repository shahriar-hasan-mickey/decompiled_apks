record `e.e.a.b.f.u.r0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `e.e.a.b.f.u.s0` `@@e.e.a.b.f.u.r0.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/r0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L320010.  v0:= new `e.e.a.b.f.u.e2`;
  #L320014.  v1:= 0I;
  #L320016.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/e2;.<init>:(Le/e/a/b/f/u/u2;)V` @kind direct;
  #L32001c.  `@@e.e.a.b.f.u.r0.a` @type ^`e.e.a.b.f.u.s0` := v0 @kind object;
  #L320020.  return @kind void;
}
procedure `e.e.a.b.f.u.s0` `a`() @signature `Le/e/a/b/f/u/r0;.a:()Le/e/a/b/f/u/s0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L31fff8.  v0:= `@@e.e.a.b.f.u.r0.a` @type ^`e.e.a.b.f.u.s0` @kind object;
  #L31fffc.  return v0 @kind object;
}
