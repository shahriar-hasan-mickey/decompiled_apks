record `e.e.a.b.f.b.d0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.h0` @kind class {
  `int` `e.e.a.b.f.b.d0.f` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.d0.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.b.d0` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/b/d0;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1fa9b4.  call `<init>`(v1, v2) @signature `Le/e/a/b/f/b/h0;.<init>:([B)V` @kind direct;
  #L1fa9ba.  v0:= v3 + v4 @kind int;
  #L1fa9be.  v2:= length @variable v2;
  #L1fa9c0.  call temp:= `b`(v3, v0, v2) @signature `Le/e/a/b/f/b/a0;.b:(III)I` @kind static;
  #L1fa9c6.  v1.`e.e.a.b.f.b.d0.f` @type ^`int` := v3;
  #L1fa9ca.  v1.`e.e.a.b.f.b.d0.g` @type ^`int` := v4;
  #L1fa9ce.  return @kind void;
}
procedure `byte` `h`(`e.e.a.b.f.b.d0` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/b/d0;.h:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa8d4.  call temp:= `size`(v4) @signature `Le/e/a/b/f/b/d0;.size:()I` @kind virtual;
  #L1fa8da.  v0:= temp;
  #L1fa8dc.  v1:= v5 + 1;
  #L1fa8e0.  v1:= v0 - v1 @kind int;
  #L1fa8e4.  v1:= v1 ^| v5 @kind int;
  #L1fa8e6.  if v1 >= 0 then goto L1fa962;
  #L1fa8ea.  if v5 >= 0 then goto L1fa920;
  #L1fa8ee.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1fa8f2.  v1:= 22I;
  #L1fa8f6.  v2:= new `java.lang.StringBuilder`;
  #L1fa8fa.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1fa900.  v1:= "Index < 0: " @kind object;
  #L1fa904.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa90a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa910.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa916.  v5:= temp @kind object;
  #L1fa918.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa91e.  throw v0;
  #L1fa920.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1fa924.  v2:= 40I;
  #L1fa928.  v3:= new `java.lang.StringBuilder`;
  #L1fa92c.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1fa932.  v2:= "Index > length: " @kind object;
  #L1fa936.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa93c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa942.  v5:= ", " @kind object;
  #L1fa946.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa94c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa952.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa958.  v5:= temp @kind object;
  #L1fa95a.  call `<init>`(v1, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa960.  throw v1;
  #L1fa962.  v0:= v4.`e.e.a.b.f.b.h0.e` @type ^`byte`[] @kind object;
  #L1fa966.  v1:= v4.`e.e.a.b.f.b.d0.f` @type ^`int`;
  #L1fa96a.  v1:= v1 + v5 @kind int;
  #L1fa96c.  v5:= v0[v1] @kind byte;
  #L1fa970.  return v5;
}
procedure `int` `i`(`e.e.a.b.f.b.d0` v1 @kind this) @signature `Le/e/a/b/f/b/d0;.i:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1fa99c.  v0:= v1.`e.e.a.b.f.b.d0.f` @type ^`int`;
  #L1fa9a0.  return v0;
}
procedure `int` `size`(`e.e.a.b.f.b.d0` v1 @kind this) @signature `Le/e/a/b/f/b/d0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fa984.  v0:= v1.`e.e.a.b.f.b.d0.g` @type ^`int`;
  #L1fa988.  return v0;
}
