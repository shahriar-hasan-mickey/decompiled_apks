record `e.e.a.b.f.r.d0` @kind class @AccessFlag FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.Object` `e.e.a.b.f.r.d0.b` @AccessFlag PRIVATE_TRANSIENT;
  `int`[] `e.e.a.b.f.r.d0.c` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.r.d0.d` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `e.e.a.b.f.r.d0.e` @AccessFlag TRANSIENT;
  `int` `e.e.a.b.f.r.d0.f` @AccessFlag PRIVATE_TRANSIENT;
  `int` `e.e.a.b.f.r.d0.g` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.r.d0.h` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `e.e.a.b.f.r.d0.i` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.r.d0.j` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Object` `@@e.e.a.b.f.r.d0.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/r/d0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30d148.  v0:= new `java.lang.Object`;
  #L30d14c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d152.  `@@e.e.a.b.f.r.d0.k` @type ^`java.lang.Object` := v0 @kind object;
  #L30d156.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.r.d0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/r/d0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d168.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L30d16e.  v1:= 12I;
  #L30d172.  call `a`(v0, v1) @signature `Le/e/a/b/f/r/d0;.a:(I)V` @kind virtual;
  #L30d178.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.r.d0` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 ) @signature `Le/e/a/b/f/r/d0;.a:(IIII)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30cc00.  call temp:= `a`(v10) @signature `Le/e/a/b/f/r/e0;.a:(I)Ljava/lang/Object;` @kind static;
  #L30cc06.  v0:= temp @kind object;
  #L30cc08.  v10:= v10 + -1;
  #L30cc0c.  if v12 == 0 then goto L30cc1c;
  #L30cc10.  v11:= v11 ^& v10 @kind int;
  #L30cc12.  v12:= v12 + 1;
  #L30cc16.  call `a`(v0, v11, v12) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L30cc1c.  v11:= v8.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30cc20.  v12:= v8.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30cc24.  v1:= 0I;
  #L30cc26.  if v1 > v9 then goto L30cc70;
  #L30cc2a.  call temp:= `a`(v11, v1) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30cc30.  v2:= temp;
  #L30cc32.  if v2 == 0 then goto L30cc6a;
  #L30cc36.  v3:= v2 + -1;
  #L30cc3a.  v4:= v12[v3];
  #L30cc3e.  v5:= ~v9 @kind int;
  #L30cc40.  v5:= v5 ^& v4 @kind int;
  #L30cc42.  v5:= v5 ^| v1 @kind int;
  #L30cc44.  v6:= v5 ^& v10 @kind int;
  #L30cc48.  call temp:= `a`(v0, v6) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30cc4e.  v7:= temp;
  #L30cc50.  call `a`(v0, v6, v2) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L30cc56.  v2:= ~v10 @kind int;
  #L30cc58.  v2:= v2 ^& v5 @kind int;
  #L30cc5a.  v5:= v7 ^& v10 @kind int;
  #L30cc5e.  v2:= v2 ^| v5 @kind int;
  #L30cc60.  v12[v3]:= v2;
  #L30cc64.  v2:= v4 ^& v9 @kind int;
  #L30cc68.  goto L30cc32;
  #L30cc6a.  v1:= v1 + 1;
  #L30cc6e.  goto L30cc26;
  #L30cc70.  v8.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L30cc74.  call `c`(v8, v10) @signature `Le/e/a/b/f/r/d0;.c:(I)V` @kind direct;
  #L30cc7a.  return v10;
}
procedure `int` `a`(`e.e.a.b.f.r.d0` v0 @kind object) @signature `Le/e/a/b/f/r/d0;.a:(Le/e/a/b/f/r/d0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30cb6c.  v0:= v0.`e.e.a.b.f.r.d0.f` @type ^`int`;
  #L30cb70.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.r.d0` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/b/f/r/d0;.a:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30cc8c.  call temp:= `a`(v7) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30cc92.  v0:= temp;
  #L30cc94.  v1:= -1I;
  #L30cc96.  if v0 == 0 then goto L30cc9c;
  #L30cc9a.  return v1;
  #L30cc9c.  call temp:= `a`(v8) @signature `Le/e/a/b/f/r/f0;.a:(Ljava/lang/Object;)I` @kind static;
  #L30cca2.  v0:= temp;
  #L30cca4.  call temp:= `f`(v7) @signature `Le/e/a/b/f/r/d0;.f:()I` @kind direct;
  #L30ccaa.  v2:= temp;
  #L30ccac.  v3:= v7.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30ccb0.  v4:= v0 ^& v2 @kind int;
  #L30ccb4.  call temp:= `a`(v3, v4) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30ccba.  v3:= temp;
  #L30ccbc.  if v3 == 0 then goto L30ccf6;
  #L30ccc0.  v4:= ~v2 @kind int;
  #L30ccc2.  v0:= v0 ^& v4 @kind int;
  #L30ccc4.  v3:= v3 + v1 @kind int;
  #L30ccc6.  v5:= v7.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30ccca.  v5:= v5[v3];
  #L30ccce.  v6:= v5 ^& v4 @kind int;
  #L30ccd2.  if v6 != v0 then goto L30ccee;
  #L30ccd6.  v6:= v7.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30ccda.  v6:= v6[v3] @kind object;
  #L30ccde.  call temp:= `a`(v8, v6) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30cce4.  v6:= temp;
  #L30cce6.  if v6 != 0 then goto L30ccec;
  #L30ccea.  goto L30ccee;
  #L30ccec.  return v3;
  #L30ccee.  v3:= v5 ^& v2 @kind int;
  #L30ccf2.  if v3 != 0 then goto L30ccc4;
  #L30ccf6.  return v1;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.r.d0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/d0;.a:(Le/e/a/b/f/r/d0;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30cfe8.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/r/d0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L30cfee.  v0:= temp @kind object;
  #L30cff0.  return v0 @kind object;
}
procedure `int` `b`(`e.e.a.b.f.r.d0` v0 @kind object) @signature `Le/e/a/b/f/r/d0;.b:(Le/e/a/b/f/r/d0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30cba0.  call temp:= `f`(v0) @signature `Le/e/a/b/f/r/d0;.f:()I` @kind direct;
  #L30cba6.  v0:= temp;
  #L30cba8.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.r.d0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/d0;.b:(Le/e/a/b/f/r/d0;Ljava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30cb84.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/r/d0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L30cb8a.  v0:= temp;
  #L30cb8c.  return v0;
}
procedure `java.lang.Object` `b`(`e.e.a.b.f.r.d0` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/r/d0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30d034.  call temp:= `a`(v8) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30d03a.  v0:= temp;
  #L30d03c.  if v0 == 0 then goto L30d046;
  #L30d040.  v9:= `@@e.e.a.b.f.r.d0.k` @type ^`java.lang.Object` @kind object;
  #L30d044.  return v9 @kind object;
  #L30d046.  call temp:= `f`(v8) @signature `Le/e/a/b/f/r/d0;.f:()I` @kind direct;
  #L30d04c.  v7:= temp;
  #L30d04e.  v1:= 0I;
  #L30d050.  v3:= v8.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d054.  v4:= v8.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30d058.  v5:= v8.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30d05c.  v6:= 0I;
  #L30d05e.  v0:= v9 @kind object;
  #L30d060.  v2:= v7;
  #L30d062.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L30d068.  v9:= temp;
  #L30d06a.  v0:= -1I;
  #L30d06c.  if v9 != v0 then goto L30d076;
  #L30d070.  v9:= `@@e.e.a.b.f.r.d0.k` @type ^`java.lang.Object` @kind object;
  #L30d074.  return v9 @kind object;
  #L30d076.  v1:= v8.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30d07a.  v1:= v1[v9] @kind object;
  #L30d07e.  call `a`(v8, v9, v7) @signature `Le/e/a/b/f/r/d0;.a:(II)V` @kind virtual;
  #L30d084.  v9:= v8.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30d088.  v9:= v9 + v0 @kind int;
  #L30d08a.  v8.`e.e.a.b.f.r.d0.g` @type ^`int` := v9;
  #L30d08e.  call `c`(v8) @signature `Le/e/a/b/f/r/d0;.c:()V` @kind virtual;
  #L30d094.  return v1 @kind object;
}
procedure `java.lang.Object` `c`(`e.e.a.b.f.r.d0` v0 @kind object) @signature `Le/e/a/b/f/r/d0;.c:(Le/e/a/b/f/r/d0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30d01c.  v0:= v0.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d020.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.r.d0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/r/d0;.c:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L30d364.  call temp:= `numberOfLeadingZeros`(v2) @signature `Ljava/lang/Integer;.numberOfLeadingZeros:(I)I` @kind static;
  #L30d36a.  v2:= temp;
  #L30d36c.  v0:= v1.`e.e.a.b.f.r.d0.f` @type ^`int`;
  #L30d370.  v0:= v0 ^& -32;
  #L30d374.  v2:= v2 - 32;
  #L30d378.  v2:= v2 ^& 31;
  #L30d37c.  v2:= v2 ^| v0 @kind int;
  #L30d37e.  v1.`e.e.a.b.f.r.d0.f` @type ^`int` := v2;
  #L30d382.  return @kind void;
}
procedure `int` `d`(`e.e.a.b.f.r.d0` v2 @kind object) @signature `Le/e/a/b/f/r/d0;.d:(Le/e/a/b/f/r/d0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L30cbbc.  v0:= v2.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30cbc0.  v1:= v0 + -1;
  #L30cbc4.  v2.`e.e.a.b.f.r.d0.g` @type ^`int` := v1;
  #L30cbc8.  return v0;
}
procedure `java.lang.Object` `e`() @signature `Le/e/a/b/f/r/d0;.e:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30d004.  v0:= `@@e.e.a.b.f.r.d0.k` @type ^`java.lang.Object` @kind object;
  #L30d008.  return v0 @kind object;
}
procedure `int` `f`(`e.e.a.b.f.r.d0` v2 @kind this) @signature `Le/e/a/b/f/r/d0;.f:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L30cbdc.  v0:= v2.`e.e.a.b.f.r.d0.f` @type ^`int`;
  #L30cbe0.  v0:= v0 ^& 31;
  #L30cbe4.  v1:= 1I;
  #L30cbe6.  v0:= v1 ^< v0 @kind int;
  #L30cbea.  v0:= v0 + -1;
  #L30cbee.  return v0;
}
procedure `void` `a`(`e.e.a.b.f.r.d0` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/r/d0;.a:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L30d250.  v3:= 12I;
  #L30d254.  v0:= 1I;
  #L30d256.  v1:= 1073741823I;
  #L30d25c.  call temp:= `a`(v3, v0, v1) @signature `Le/e/a/b/f/r/q1;.a:(III)I` @kind static;
  #L30d262.  v3:= temp;
  #L30d264.  v2.`e.e.a.b.f.r.d0.f` @type ^`int` := v3;
  #L30d268.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.r.d0` v7 @kind this, `int` v8 , `int` v9 ) @signature `Le/e/a/b/f/r/d0;.a:(II)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30d29c.  call temp:= `size`(v7) @signature `Le/e/a/b/f/r/d0;.size:()I` @kind virtual;
  #L30d2a2.  v0:= temp;
  #L30d2a4.  v0:= v0 + -1;
  #L30d2a8.  v1:= 0I;
  #L30d2aa.  v2:= 0I;
  #L30d2ac.  if v8 >= v0 then goto L30d338;
  #L30d2b0.  v3:= v7.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30d2b4.  v4:= v3[v0] @kind object;
  #L30d2b8.  v3[v8]:= v4 @kind object;
  #L30d2bc.  v5:= v7.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30d2c0.  v6:= v5[v0] @kind object;
  #L30d2c4.  v5[v8]:= v6 @kind object;
  #L30d2c8.  v3[v0]:= v2 @kind object;
  #L30d2cc.  v5[v0]:= v2 @kind object;
  #L30d2d0.  v2:= v7.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30d2d4.  v3:= v2[v0];
  #L30d2d8.  v2[v8]:= v3;
  #L30d2dc.  v2[v0]:= v1;
  #L30d2e0.  call temp:= `a`(v4) @signature `Le/e/a/b/f/r/f0;.a:(Ljava/lang/Object;)I` @kind static;
  #L30d2e6.  v1:= temp;
  #L30d2e8.  v1:= v1 ^& v9 @kind int;
  #L30d2ea.  v2:= v7.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d2ee.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30d2f4.  v2:= temp;
  #L30d2f6.  v0:= v0 + 1;
  #L30d2fa.  if v2 == v0 then goto L30d328;
  #L30d2fe.  v2:= v2 + -1;
  #L30d302.  v1:= v7.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30d306.  v3:= v1[v2];
  #L30d30a.  v4:= v3 ^& v9 @kind int;
  #L30d30e.  if v4 == v0 then goto L30d316;
  #L30d312.  v2:= v4;
  #L30d314.  goto L30d2fe;
  #L30d316.  v0:= ~v9 @kind int;
  #L30d318.  v0:= v0 ^& v3 @kind int;
  #L30d31a.  v8:= v8 + 1;
  #L30d31e.  v8:= v8 ^& v9 @kind int;
  #L30d320.  v8:= v8 ^| v0 @kind int;
  #L30d322.  v1[v2]:= v8;
  #L30d326.  return @kind void;
  #L30d328.  v9:= v7.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d32c.  v8:= v8 + 1;
  #L30d330.  call `a`(v9, v1, v8) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L30d336.  return @kind void;
  #L30d338.  v9:= v7.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30d33c.  v9[v8]:= v2 @kind object;
  #L30d340.  v9:= v7.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30d344.  v9[v8]:= v2 @kind object;
  #L30d348.  v9:= v7.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30d34c.  v9[v8]:= v1;
  #L30d350.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L30cad8.  v0:= v1.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30cadc.  if v0 != 0 then goto L30cae4;
  #L30cae0.  v0:= 1I;
  #L30cae2.  return v0;
  #L30cae4.  v0:= 0I;
  #L30cae6.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.r.d0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/r/d0;.b:(I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L30cb48.  v2:= v2 + 1;
  #L30cb4c.  v0:= v1.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30cb50.  if v2 >= v0 then goto L30cb56;
  #L30cb54.  return v2;
  #L30cb56.  v2:= -1I;
  #L30cb58.  return v2;
}
procedure `java.util.Map` `b`(`e.e.a.b.f.r.d0` v2 @kind this) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L30d0d0.  v0:= v2.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d0d4.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L30d0d8.  if v1 == 0 then goto L30d0e2;
  #L30d0dc.  v0:= (`java.util.Map`) v0 @kind object;
  #L30d0e0.  return v0 @kind object;
  #L30d0e2.  v0:= 0I;
  #L30d0e4.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.c:()V` @AccessFlag FINAL {
    temp;
    v0;

  #L30d27c.  v0:= v1.`e.e.a.b.f.r.d0.f` @type ^`int`;
  #L30d280.  v0:= v0 + 32;
  #L30d284.  v1.`e.e.a.b.f.r.d0.f` @type ^`int` := v0;
  #L30d288.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.r.d0` v6 @kind this) @signature `Le/e/a/b/f/r/d0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30d18c.  call temp:= `a`(v6) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30d192.  v0:= temp;
  #L30d194.  if v0 == 0 then goto L30d19a;
  #L30d198.  return @kind void;
  #L30d19a.  call `c`(v6) @signature `Le/e/a/b/f/r/d0;.c:()V` @kind virtual;
  #L30d1a0.  call temp:= `b`(v6) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30d1a6.  v0:= temp @kind object;
  #L30d1a8.  v1:= 0I;
  #L30d1aa.  v2:= 0I;
  #L30d1ac.  if v0 == 0 then goto L30d1dc;
  #L30d1b0.  call temp:= `size`(v6) @signature `Le/e/a/b/f/r/d0;.size:()I` @kind virtual;
  #L30d1b6.  v3:= temp;
  #L30d1b8.  v4:= 3I;
  #L30d1ba.  v5:= 1073741823I;
  #L30d1c0.  call temp:= `a`(v3, v4, v5) @signature `Le/e/a/b/f/r/q1;.a:(III)I` @kind static;
  #L30d1c6.  v3:= temp;
  #L30d1c8.  v6.`e.e.a.b.f.r.d0.f` @type ^`int` := v3;
  #L30d1cc.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L30d1d2.  v6.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` := v1 @kind object;
  #L30d1d6.  v6.`e.e.a.b.f.r.d0.g` @type ^`int` := v2;
  #L30d1da.  return @kind void;
  #L30d1dc.  v0:= v6.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30d1e0.  v3:= v6.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30d1e4.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L30d1ea.  v0:= v6.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30d1ee.  v3:= v6.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30d1f2.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L30d1f8.  v0:= v6.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30d1fc.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L30d200.  if v1 == 0 then goto L30d210;
  #L30d204.  v0:= (`byte`[]) v0 @kind object;
  #L30d208.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L30d20e.  goto L30d22e;
  #L30d210.  v1:= instanceof @variable v0 @type ^`short`[] @kind boolean;
  #L30d214.  if v1 == 0 then goto L30d224;
  #L30d218.  v0:= (`short`[]) v0 @kind object;
  #L30d21c.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([SS)V` @kind static;
  #L30d222.  goto L30d22e;
  #L30d224.  v0:= (`int`[]) v0 @kind object;
  #L30d228.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L30d22e.  v0:= v6.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30d232.  v1:= v6.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30d236.  call `fill`(v0, v2, v1, v2) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L30d23c.  goto L30d1d6;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.r.d0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/d0;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30ca24.  call temp:= `b`(v1) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30ca2a.  v0:= temp @kind object;
  #L30ca2c.  if v0 == 0 then goto L30ca3a;
  #L30ca30.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L30ca36.  v2:= temp;
  #L30ca38.  goto L30ca4a;
  #L30ca3a.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/r/d0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L30ca40.  v2:= temp;
  #L30ca42.  v0:= -1I;
  #L30ca44.  if v2 != v0 then goto L30ca4c;
  #L30ca48.  v2:= 0I;
  #L30ca4a.  return v2;
  #L30ca4c.  v2:= 1I;
  #L30ca4e.  return v2;
}
procedure `boolean` `containsValue`(`e.e.a.b.f.r.d0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/d0;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30ca60.  call temp:= `b`(v3) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30ca66.  v0:= temp @kind object;
  #L30ca68.  if v0 != 0 then goto L30ca98;
  #L30ca6c.  v0:= 0I;
  #L30ca6e.  v1:= 0I;
  #L30ca70.  v2:= v3.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30ca74.  if v1 >= v2 then goto L30ca96;
  #L30ca78.  v2:= v3.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30ca7c.  v2:= v2[v1] @kind object;
  #L30ca80.  call temp:= `a`(v4, v2) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30ca86.  v2:= temp;
  #L30ca88.  if v2 == 0 then goto L30ca90;
  #L30ca8c.  v4:= 1I;
  #L30ca8e.  return v4;
  #L30ca90.  v1:= v1 + 1;
  #L30ca94.  goto L30ca70;
  #L30ca96.  return v0;
  #L30ca98.  call temp:= `containsValue`(v0, v4) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L30ca9e.  v4:= temp;
  #L30caa0.  return v4;
}
procedure `int` `d`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.d:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L30cb24.  call temp:= `isEmpty`(v1) @signature `Le/e/a/b/f/r/d0;.isEmpty:()Z` @kind virtual;
  #L30cb2a.  v0:= temp;
  #L30cb2c.  if v0 == 0 then goto L30cb34;
  #L30cb30.  v0:= -1I;
  #L30cb32.  return v0;
  #L30cb34.  v0:= 0I;
  #L30cb36.  return v0;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30d0f8.  v0:= v1.`e.e.a.b.f.r.d0.i` @type ^`java.util.Set` @kind object;
  #L30d0fc.  if v0 != 0 then goto L30d10e;
  #L30d100.  v0:= new `e.e.a.b.f.r.x`;
  #L30d104.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/x;.<init>:(Le/e/a/b/f/r/d0;)V` @kind direct;
  #L30d10a.  v1.`e.e.a.b.f.r.d0.i` @type ^`java.util.Set` := v0 @kind object;
  #L30d10e.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.r.d0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/d0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30cd08.  call temp:= `b`(v1) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30cd0e.  v0:= temp @kind object;
  #L30cd10.  if v0 == 0 then goto L30cd1e;
  #L30cd14.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30cd1a.  v2:= temp @kind object;
  #L30cd1c.  return v2 @kind object;
  #L30cd1e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/r/d0;.a:(Ljava/lang/Object;)I` @kind direct;
  #L30cd24.  v2:= temp;
  #L30cd26.  v0:= -1I;
  #L30cd28.  if v2 != v0 then goto L30cd30;
  #L30cd2c.  v2:= 0I;
  #L30cd2e.  return v2 @kind object;
  #L30cd30.  v0:= v1.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30cd34.  v2:= v0[v2] @kind object;
  #L30cd38.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30cab4.  call temp:= `size`(v1) @signature `Le/e/a/b/f/r/d0;.size:()I` @kind virtual;
  #L30caba.  v0:= temp;
  #L30cabc.  if v0 != 0 then goto L30cac4;
  #L30cac0.  v0:= 1I;
  #L30cac2.  return v0;
  #L30cac4.  v0:= 0I;
  #L30cac6.  return v0;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30d120.  v0:= v1.`e.e.a.b.f.r.d0.h` @type ^`java.util.Set` @kind object;
  #L30d124.  if v0 != 0 then goto L30d136;
  #L30d128.  v0:= new `e.e.a.b.f.r.z`;
  #L30d12c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/z;.<init>:(Le/e/a/b/f/r/d0;)V` @kind direct;
  #L30d132.  v1.`e.e.a.b.f.r.d0.h` @type ^`java.util.Set` := v0 @kind object;
  #L30d136.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.r.d0` v17 @kind this, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object) @signature `Le/e/a/b/f/r/d0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L30cd4c.  v0:= v17 @kind object;
  #L30cd50.  v1:= v18 @kind object;
  #L30cd54.  v2:= v19 @kind object;
  #L30cd58.  call temp:= `a`(v17) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30cd5e.  v3:= temp;
  #L30cd60.  if v3 == 0 then goto L30cdda;
  #L30cd64.  call temp:= `a`(v17) @signature `Le/e/a/b/f/r/d0;.a:()Z` @kind virtual;
  #L30cd6a.  v3:= temp;
  #L30cd6c.  v4:= "Arrays already allocated" @kind object;
  #L30cd70.  call `a`(v3, v4) @signature `Le/e/a/b/f/r/b;.a:(ZLjava/lang/Object;)V` @kind static;
  #L30cd76.  v3:= v0.`e.e.a.b.f.r.d0.f` @type ^`int`;
  #L30cd7a.  v4:= v3 + 1;
  #L30cd7e.  v5:= 2I;
  #L30cd80.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L30cd86.  v4:= temp;
  #L30cd88.  call temp:= `highestOneBit`(v4) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L30cd8e.  v5:= temp;
  #L30cd90.  v6:= (`double`) v5 @kind i2d;
  #L30cd92.  v6:= (`int`) v6 @kind d2i;
  #L30cd94.  if v4 <= v6 then goto L30cda2;
  #L30cd98.  v5:= v5 + v5 @kind int;
  #L30cd9a.  if v5 > 0 then goto L30cda2;
  #L30cd9e.  v5:= 2.0F;
  #L30cda2.  v4:= 4I;
  #L30cda4.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L30cdaa.  v4:= temp;
  #L30cdac.  call temp:= `a`(v4) @signature `Le/e/a/b/f/r/e0;.a:(I)Ljava/lang/Object;` @kind static;
  #L30cdb2.  v5:= temp @kind object;
  #L30cdb4.  v0.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` := v5 @kind object;
  #L30cdb8.  v4:= v4 + -1;
  #L30cdbc.  call `c`(v0, v4) @signature `Le/e/a/b/f/r/d0;.c:(I)V` @kind direct;
  #L30cdc2.  v4:= new `int`[v3];
  #L30cdc6.  v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] := v4 @kind object;
  #L30cdca.  v4:= new `java.lang.Object`[v3];
  #L30cdce.  v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] := v4 @kind object;
  #L30cdd2.  v3:= new `java.lang.Object`[v3];
  #L30cdd6.  v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L30cdda.  call temp:= `b`(v17) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30cde0.  v3:= temp @kind object;
  #L30cde2.  if v3 == 0 then goto L30cdf0;
  #L30cde6.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30cdec.  v1:= temp @kind object;
  #L30cdee.  return v1 @kind object;
  #L30cdf0.  v3:= v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30cdf4.  v4:= v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30cdf8.  v5:= v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30cdfc.  v6:= v0.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30ce00.  v7:= v6 + 1;
  #L30ce04.  call temp:= `a`(v18) @signature `Le/e/a/b/f/r/f0;.a:(Ljava/lang/Object;)I` @kind static;
  #L30ce0a.  v8:= temp;
  #L30ce0c.  call temp:= `f`(v17) @signature `Le/e/a/b/f/r/d0;.f:()I` @kind direct;
  #L30ce12.  v9:= temp;
  #L30ce14.  v10:= v8 ^& v9 @kind int;
  #L30ce18.  v11:= v0.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30ce1c.  call temp:= `a`(v11, v10) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;I)I` @kind static;
  #L30ce22.  v11:= temp;
  #L30ce24.  if v11 != 0 then goto L30ce4a;
  #L30ce28.  if v7 <= v9 then goto L30ce3e;
  #L30ce2c.  call temp:= `b`(v9) @signature `Le/e/a/b/f/r/e0;.b:(I)I` @kind static;
  #L30ce32.  v3:= temp;
  #L30ce34.  call temp:= `a`(v0, v9, v3, v8, v6) @signature `Le/e/a/b/f/r/d0;.a:(IIII)I` @kind direct;
  #L30ce3a.  v9:= temp;
  #L30ce3c.  goto L30cf0e;
  #L30ce3e.  v3:= v0.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` @kind object;
  #L30ce42.  call `a`(v3, v10, v7) @signature `Le/e/a/b/f/r/e0;.a:(Ljava/lang/Object;II)V` @kind static;
  #L30ce48.  goto L30cf0e;
  #L30ce4a.  v10:= ~v9 @kind int;
  #L30ce4c.  v14:= v8 ^& v10 @kind int;
  #L30ce50.  v15:= 0I;
  #L30ce52.  v11:= v11 + -1;
  #L30ce56.  v16:= v3[v11];
  #L30ce5a.  v12:= v16 ^& v10 @kind int;
  #L30ce5e.  if v12 != v14 then goto L30ce7e;
  #L30ce62.  v13:= v4[v11] @kind object;
  #L30ce66.  call temp:= `a`(v1, v13) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30ce6c.  v13:= temp;
  #L30ce6e.  if v13 != 0 then goto L30ce74;
  #L30ce72.  goto L30ce7e;
  #L30ce74.  v1:= v5[v11] @kind object;
  #L30ce78.  v5[v11]:= v2 @kind object;
  #L30ce7c.  return v1 @kind object;
  #L30ce7e.  v13:= v16 ^& v9 @kind int;
  #L30ce82.  v16:= 1I;
  #L30ce86.  v15:= v15 + 1;
  #L30ce8a.  if v13 != 0 then goto L30cf96;
  #L30ce8e.  v4:= 9I;
  #L30ce92.  if v15 < v4 then goto L30cefe;
  #L30ce96.  call temp:= `f`(v17) @signature `Le/e/a/b/f/r/d0;.f:()I` @kind direct;
  #L30ce9c.  v3:= temp;
  #L30ce9e.  v4:= new `java.util.LinkedHashMap`;
  #L30cea2.  v3:= v3 + 1;
  #L30cea6.  v5:= 1.0F;
  #L30ceaa.  call `<init>`(v4, v3, v5) @signature `Ljava/util/LinkedHashMap;.<init>:(IF)V` @kind direct;
  #L30ceb0.  call temp:= `d`(v17) @signature `Le/e/a/b/f/r/d0;.d:()I` @kind virtual;
  #L30ceb6.  v3:= temp;
  #L30ceb8.  if v3 < 0 then goto L30cedc;
  #L30cebc.  v5:= v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30cec0.  v5:= v5[v3] @kind object;
  #L30cec4.  v6:= v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30cec8.  v6:= v6[v3] @kind object;
  #L30cecc.  call temp:= `put`(v4, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30ced2.  call temp:= `b`(v0, v3) @signature `Le/e/a/b/f/r/d0;.b:(I)I` @kind virtual;
  #L30ced8.  v3:= temp;
  #L30ceda.  goto L30ceb8;
  #L30cedc.  v0.`e.e.a.b.f.r.d0.b` @type ^`java.lang.Object` := v4 @kind object;
  #L30cee0.  v3:= 0I;
  #L30cee2.  v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] := v3 @kind object;
  #L30cee6.  v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L30ceea.  v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L30ceee.  call `c`(v17) @signature `Le/e/a/b/f/r/d0;.c:()V` @kind virtual;
  #L30cef4.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30cefa.  v1:= temp @kind object;
  #L30cefc.  return v1 @kind object;
  #L30cefe.  if v7 <= v9 then goto L30cf04;
  #L30cf02.  goto L30ce2c;
  #L30cf04.  v4:= v7 ^& v9 @kind int;
  #L30cf08.  v4:= v4 ^| v12 @kind int;
  #L30cf0a.  v3[v11]:= v4;
  #L30cf0e.  v3:= v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30cf12.  v3:= length @variable v3;
  #L30cf14.  if v7 <= v3 then goto L30cf6c;
  #L30cf18.  v4:= 1073741823I;
  #L30cf1e.  v5:= v3 ^>> 1;
  #L30cf22.  v11:= 1I;
  #L30cf24.  call temp:= `max`(v11, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L30cf2a.  v5:= temp;
  #L30cf2c.  v5:= v5 + v3 @kind int;
  #L30cf2e.  v5:= v5 ^| v11 @kind int;
  #L30cf30.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L30cf36.  v4:= temp;
  #L30cf38.  if v4 == v3 then goto L30cf6c;
  #L30cf3c.  v3:= v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30cf40.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L30cf46.  v3:= temp @kind object;
  #L30cf48.  v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] := v3 @kind object;
  #L30cf4c.  v3:= v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30cf50.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L30cf56.  v3:= temp @kind object;
  #L30cf58.  v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] := v3 @kind object;
  #L30cf5c.  v3:= v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30cf60.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L30cf66.  v3:= temp @kind object;
  #L30cf68.  v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] := v3 @kind object;
  #L30cf6c.  v3:= v0.`e.e.a.b.f.r.d0.c` @type ^`int`[] @kind object;
  #L30cf70.  v4:= ~v9 @kind int;
  #L30cf72.  v4:= v4 ^& v8 @kind int;
  #L30cf74.  v3[v6]:= v4;
  #L30cf78.  v3:= v0.`e.e.a.b.f.r.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L30cf7c.  v3[v6]:= v1 @kind object;
  #L30cf80.  v1:= v0.`e.e.a.b.f.r.d0.e` @type ^`java.lang.Object`[] @kind object;
  #L30cf84.  v1[v6]:= v2 @kind object;
  #L30cf88.  v0.`e.e.a.b.f.r.d0.g` @type ^`int` := v7;
  #L30cf8c.  call `c`(v17) @signature `Le/e/a/b/f/r/d0;.c:()V` @kind virtual;
  #L30cf92.  v12:= 0I;
  #L30cf94.  return v12 @kind object;
  #L30cf96.  v11:= v13;
  #L30cf98.  goto L30ce52;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.r.d0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/d0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30cfac.  call temp:= `b`(v1) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30cfb2.  v0:= temp @kind object;
  #L30cfb4.  if v0 == 0 then goto L30cfc2;
  #L30cfb8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30cfbe.  v2:= temp @kind object;
  #L30cfc0.  return v2 @kind object;
  #L30cfc2.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/r/d0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L30cfc8.  v2:= temp @kind object;
  #L30cfca.  v0:= `@@e.e.a.b.f.r.d0.k` @type ^`java.lang.Object` @kind object;
  #L30cfce.  if v2 != v0 then goto L30cfd4;
  #L30cfd2.  v2:= 0I;
  #L30cfd4.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30caf8.  call temp:= `b`(v1) @signature `Le/e/a/b/f/r/d0;.b:()Ljava/util/Map;` @kind virtual;
  #L30cafe.  v0:= temp @kind object;
  #L30cb00.  if v0 == 0 then goto L30cb0e;
  #L30cb04.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30cb0a.  v0:= temp;
  #L30cb0c.  goto L30cb12;
  #L30cb0e.  v0:= v1.`e.e.a.b.f.r.d0.g` @type ^`int`;
  #L30cb12.  return v0;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.r.d0` v1 @kind this) @signature `Le/e/a/b/f/r/d0;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30d0a8.  v0:= v1.`e.e.a.b.f.r.d0.j` @type ^`java.util.Collection` @kind object;
  #L30d0ac.  if v0 != 0 then goto L30d0be;
  #L30d0b0.  v0:= new `e.e.a.b.f.r.c0`;
  #L30d0b4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/c0;.<init>:(Le/e/a/b/f/r/d0;)V` @kind direct;
  #L30d0ba.  v1.`e.e.a.b.f.r.d0.j` @type ^`java.util.Collection` := v0 @kind object;
  #L30d0be.  return v0 @kind object;
}
