record `e.e.a.b.f.n.sy` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.x1` @kind interface {
}
global `e.e.a.b.f.n.x1` `@@e.e.a.b.f.n.sy.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/sy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b08fc.  v0:= new `e.e.a.b.f.n.sy`;
  #L2b0900.  call `<init>`(v0) @signature `Le/e/a/b/f/n/sy;.<init>:()V` @kind direct;
  #L2b0906.  `@@e.e.a.b.f.n.sy.a` @type ^`e.e.a.b.f.n.x1` := v0 @kind object;
  #L2b090a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.sy` v0 @kind this) @signature `Le/e/a/b/f/n/sy;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b091c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b0922.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.n.sy` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/n/sy;.a:(I)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2b08d8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/n/ty;.a:(I)Le/e/a/b/f/n/ty;` @kind static;
  #L2b08de.  v1:= temp @kind object;
  #L2b08e0.  if v1 == 0 then goto L2b08e8;
  #L2b08e4.  v1:= 1I;
  #L2b08e6.  return v1;
  #L2b08e8.  v1:= 0I;
  #L2b08ea.  return v1;
}
