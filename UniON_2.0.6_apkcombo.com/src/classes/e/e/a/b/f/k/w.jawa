record `e.e.a.b.f.k.w` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `e.e.a.b.f.k.w.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.k.w.c` @AccessFlag ;
  `e.e.a.b.f.k.x` `e.e.a.b.f.k.w.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.k.w` v0 @kind this, `e.e.a.b.f.k.x` v1 @kind object) @signature `Le/e/a/b/f/k/w;.<init>:(Le/e/a/b/f/k/x;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243908.  v0.`e.e.a.b.f.k.w.d` @type ^`e.e.a.b.f.k.x` := v1 @kind object;
  #L24390c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243912.  v1:= v0.`e.e.a.b.f.k.w.d` @type ^`e.e.a.b.f.k.x` @kind object;
  #L243916.  v1:= v1.`e.e.a.b.f.k.x.d` @type ^`java.util.Map` @kind object;
  #L24391a.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L243920.  v1:= temp @kind object;
  #L243922.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L243928.  v1:= temp @kind object;
  #L24392a.  v0.`e.e.a.b.f.k.w.b` @type ^`java.util.Iterator` := v1 @kind object;
  #L24392e.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.k.w` v1 @kind this) @signature `Le/e/a/b/f/k/w;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L243814.  v0:= v1.`e.e.a.b.f.k.w.b` @type ^`java.util.Iterator` @kind object;
  #L243818.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24381e.  v0:= temp;
  #L243820.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.k.w` v3 @kind this) @signature `Le/e/a/b/f/k/w;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L243834.  v0:= v3.`e.e.a.b.f.k.w.b` @type ^`java.util.Iterator` @kind object;
  #L243838.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24383e.  v0:= temp @kind object;
  #L243840.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L243844.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24384a.  v1:= temp @kind object;
  #L24384c.  v1:= (`java.util.Collection`) v1 @kind object;
  #L243850.  v3.`e.e.a.b.f.k.w.c` @type ^`java.util.Collection` := v1 @kind object;
  #L243854.  v1:= v3.`e.e.a.b.f.k.w.d` @type ^`e.e.a.b.f.k.x` @kind object;
  #L243858.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24385e.  v2:= temp @kind object;
  #L243860.  v1:= v1.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L243864.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24386a.  v0:= temp @kind object;
  #L24386c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L243870.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/k/g0;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L243876.  v0:= temp @kind object;
  #L243878.  v1:= new `e.e.a.b.f.k.z0`;
  #L24387c.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/k/z0;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L243882.  return v1 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.k.w` v2 @kind this) @signature `Le/e/a/b/f/k/w;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L243940.  v0:= v2.`e.e.a.b.f.k.w.c` @type ^`java.util.Collection` @kind object;
  #L243944.  if v0 == 0 then goto L24394c;
  #L243948.  v0:= 1I;
  #L24394a.  goto L24394e;
  #L24394c.  v0:= 0I;
  #L24394e.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L243952.  call `a`(v0, v1) @signature `Le/e/a/b/f/k/r;.a:(ZLjava/lang/Object;)V` @kind static;
  #L243958.  v0:= v2.`e.e.a.b.f.k.w.b` @type ^`java.util.Iterator` @kind object;
  #L24395c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L243962.  v0:= v2.`e.e.a.b.f.k.w.d` @type ^`e.e.a.b.f.k.x` @kind object;
  #L243966.  v0:= v0.`e.e.a.b.f.k.x.e` @type ^`e.e.a.b.f.k.g0` @kind object;
  #L24396a.  v1:= v2.`e.e.a.b.f.k.w.c` @type ^`java.util.Collection` @kind object;
  #L24396e.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L243974.  v1:= temp;
  #L243976.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/k/g0;.b:(Le/e/a/b/f/k/g0;I)I` @kind static;
  #L24397c.  v0:= v2.`e.e.a.b.f.k.w.c` @type ^`java.util.Collection` @kind object;
  #L243980.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L243986.  v0:= 0I;
  #L243988.  v2.`e.e.a.b.f.k.w.c` @type ^`java.util.Collection` := v0 @kind object;
  #L24398c.  return @kind void;
}
