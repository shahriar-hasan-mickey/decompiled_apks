record `e.e.a.b.f.j.h8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.Object` v7 @kind object) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L236594.  if v7 != 0 then goto L23659e;
  #L236598.  v7:= "null" @kind object;
  #L23659c.  return v7 @kind object;
  #L23659e.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2365a4.  v7:= temp @kind object;
  #L2365a6.  return v7 @kind object;
  #L2365a8.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2365aa.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2365b0.  v0:= temp @kind object;
  #L2365b2.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2365b8.  v0:= temp @kind object;
  #L2365ba.  call temp:= `identityHashCode`(v7) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2365c0.  v7:= temp;
  #L2365c2.  call temp:= `toHexString`(v7) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2365c8.  v7:= temp @kind object;
  #L2365ca.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2365d0.  v1:= temp @kind object;
  #L2365d2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2365d8.  v1:= temp;
  #L2365da.  v1:= v1 + 1;
  #L2365de.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2365e4.  v2:= temp @kind object;
  #L2365e6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2365ec.  v2:= temp;
  #L2365ee.  v1:= v1 + v2 @kind int;
  #L2365f0.  v2:= new `java.lang.StringBuilder`;
  #L2365f4.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2365fa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L236600.  v0:= 64I;
  #L236604.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L23660a.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L236610.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L236616.  v7:= temp @kind object;
  #L236618.  v0:= "com.google.common.base.Strings" @kind object;
  #L23661c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L236622.  v0:= temp @kind object;
  #L236624.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L236628.  v2:= "Exception during lenientFormat for " @kind object;
  #L23662c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L236632.  v3:= temp @kind object;
  #L236634.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23663a.  v4:= temp;
  #L23663c.  if v4 == 0 then goto L23664c;
  #L236640.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L236646.  v2:= temp @kind object;
  #L236648.  v4:= v2 @kind object;
  #L23664a.  goto L236658;
  #L23664c.  v3:= new `java.lang.String`;
  #L236650.  call `<init>`(v3, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L236656.  v4:= v3 @kind object;
  #L236658.  v2:= "com.google.common.base.Strings" @kind object;
  #L23665c.  v3:= "lenientToString" @kind object;
  #L236660.  v5:= v6 @kind object;
  #L236662.  call `logp`(v0, v1, v2, v3, v4, v5) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L236668.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L23666e.  v0:= temp @kind object;
  #L236670.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L236676.  v0:= temp @kind object;
  #L236678.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L23667e.  v1:= temp @kind object;
  #L236680.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L236686.  v1:= temp;
  #L236688.  v1:= v1 + 9;
  #L23668c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L236692.  v2:= temp @kind object;
  #L236694.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23669a.  v2:= temp;
  #L23669c.  v1:= v1 + v2 @kind int;
  #L23669e.  v2:= new `java.lang.StringBuilder`;
  #L2366a2.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2366a8.  v1:= "<" @kind object;
  #L2366ac.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2366b2.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2366b8.  v7:= " threw " @kind object;
  #L2366bc.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2366c2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2366c8.  v7:= ">" @kind object;
  #L2366cc.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2366d2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2366d8.  v7:= temp @kind object;
  #L2366da.  return v7 @kind object;
  catch `java.lang.Exception` @[L23659e..L2365a6] goto L2365a8;
}
procedure `java.lang.String` `a`(`java.lang.String` v6 @kind object, `java.lang.Object`[] v7 @kind object) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2366fc.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L236702.  v6:= temp @kind object;
  #L236704.  v0:= 0I;
  #L236706.  v1:= 0I;
  #L236708.  v2:= length @variable v7;
  #L23670a.  if v1 >= v2 then goto L236724;
  #L23670e.  v2:= v7[v1] @kind object;
  #L236712.  call temp:= `a`(v2) @signature `Le/e/a/b/f/j/h8;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L236718.  v2:= temp @kind object;
  #L23671a.  v7[v1]:= v2 @kind object;
  #L23671e.  v1:= v1 + 1;
  #L236722.  goto L236708;
  #L236724.  v1:= new `java.lang.StringBuilder`;
  #L236728.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23672e.  v2:= temp;
  #L236730.  v3:= length @variable v7;
  #L236732.  v3:= v3 * 16;
  #L236736.  v2:= v2 + v3 @kind int;
  #L236738.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L23673e.  v2:= 0I;
  #L236740.  v3:= length @variable v7;
  #L236742.  if v0 >= v3 then goto L236778;
  #L236746.  v3:= "%s" @kind object;
  #L23674a.  call temp:= `indexOf`(v6, v3, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L236750.  v3:= temp;
  #L236752.  v4:= -1I;
  #L236754.  if v3 == v4 then goto L236778;
  #L236758.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L23675e.  v2:= v0 + 1;
  #L236762.  v0:= v7[v0] @kind object;
  #L236766.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23676c.  v0:= v3 + 2;
  #L236770.  v5:= v2;
  #L236772.  v2:= v0;
  #L236774.  v0:= v5;
  #L236776.  goto L236740;
  #L236778.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23677e.  v3:= temp;
  #L236780.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L236786.  v6:= length @variable v7;
  #L236788.  if v0 >= v6 then goto L2367d0;
  #L23678c.  v6:= " [" @kind object;
  #L236790.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L236796.  v6:= v0 + 1;
  #L23679a.  v0:= v7[v0] @kind object;
  #L23679e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2367a4.  v0:= length @variable v7;
  #L2367a6.  if v6 >= v0 then goto L2367c6;
  #L2367aa.  v0:= ", " @kind object;
  #L2367ae.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2367b4.  v0:= v6 + 1;
  #L2367b8.  v6:= v7[v6] @kind object;
  #L2367bc.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2367c2.  v6:= v0;
  #L2367c4.  goto L2367a4;
  #L2367c6.  v6:= 93I;
  #L2367ca.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2367d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2367d6.  v6:= temp @kind object;
  #L2367d8.  return v6 @kind object;
}
