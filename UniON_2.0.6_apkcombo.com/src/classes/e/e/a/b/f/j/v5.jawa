record `e.e.a.b.f.j.v5` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.j.v5.b` @AccessFlag PRIVATE;
  `java.util.Iterator` `e.e.a.b.f.j.v5.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.j.t5` `e.e.a.b.f.j.v5.d` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.j.v5` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object) @signature `Le/e/a/b/f/j/v5;.<init>:(Le/e/a/b/f/j/t5;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L230424.  v0.`e.e.a.b.f.j.v5.d` @type ^`e.e.a.b.f.j.t5` := v1 @kind object;
  #L230428.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23042e.  v1:= v0.`e.e.a.b.f.j.v5.d` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230432.  call temp:= `b`(v1) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L230438.  v1:= temp @kind object;
  #L23043a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L230440.  v1:= temp;
  #L230442.  v0.`e.e.a.b.f.j.v5.b` @type ^`int` := v1;
  #L230446.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.v5` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object, `e.e.a.b.f.j.w5` v2 @kind object) @signature `Le/e/a/b/f/j/v5;.<init>:(Le/e/a/b/f/j/t5;Le/e/a/b/f/j/w5;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L230458.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/v5;.<init>:(Le/e/a/b/f/j/t5;)V` @kind direct;
  #L23045e.  return @kind void;
}
procedure `java.util.Iterator` `zza`(`e.e.a.b.f.j.v5` v1 @kind this) @signature `Le/e/a/b/f/j/v5;.zza:()Ljava/util/Iterator;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2303e4.  v0:= v1.`e.e.a.b.f.j.v5.c` @type ^`java.util.Iterator` @kind object;
  #L2303e8.  if v0 != 0 then goto L23040c;
  #L2303ec.  v0:= v1.`e.e.a.b.f.j.v5.d` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2303f0.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/t5;.d:(Le/e/a/b/f/j/t5;)Ljava/util/Map;` @kind static;
  #L2303f6.  v0:= temp @kind object;
  #L2303f8.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2303fe.  v0:= temp @kind object;
  #L230400.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L230406.  v0:= temp @kind object;
  #L230408.  v1.`e.e.a.b.f.j.v5.c` @type ^`java.util.Iterator` := v0 @kind object;
  #L23040c.  v0:= v1.`e.e.a.b.f.j.v5.c` @type ^`java.util.Iterator` @kind object;
  #L230410.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.j.v5` v2 @kind this) @signature `Le/e/a/b/f/j/v5;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L23033c.  v0:= v2.`e.e.a.b.f.j.v5.b` @type ^`int`;
  #L230340.  if v0 <= 0 then goto L23035c;
  #L230344.  v1:= v2.`e.e.a.b.f.j.v5.d` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230348.  call temp:= `b`(v1) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L23034e.  v1:= temp @kind object;
  #L230350.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L230356.  v1:= temp;
  #L230358.  if v0 <= v1 then goto L230370;
  #L23035c.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/v5;.zza:()Ljava/util/Iterator;` @kind direct;
  #L230362.  v0:= temp @kind object;
  #L230364.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23036a.  v0:= temp;
  #L23036c.  if v0 == 0 then goto L230374;
  #L230370.  v0:= 1I;
  #L230372.  return v0;
  #L230374.  v0:= 0I;
  #L230376.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.j.v5` v2 @kind this) @signature `Le/e/a/b/f/j/v5;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L230388.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/v5;.zza:()Ljava/util/Iterator;` @kind direct;
  #L23038e.  v0:= temp @kind object;
  #L230390.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L230396.  v0:= temp;
  #L230398.  if v0 == 0 then goto L2303b2;
  #L23039c.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/j/v5;.zza:()Ljava/util/Iterator;` @kind direct;
  #L2303a2.  v0:= temp @kind object;
  #L2303a4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2303aa.  v0:= temp @kind object;
  #L2303ac.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2303b0.  return v0 @kind object;
  #L2303b2.  v0:= v2.`e.e.a.b.f.j.v5.d` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2303b6.  call temp:= `b`(v0) @signature `Le/e/a/b/f/j/t5;.b:(Le/e/a/b/f/j/t5;)Ljava/util/List;` @kind static;
  #L2303bc.  v0:= temp @kind object;
  #L2303be.  v1:= v2.`e.e.a.b.f.j.v5.b` @type ^`int`;
  #L2303c2.  v1:= v1 + -1;
  #L2303c6.  v2.`e.e.a.b.f.j.v5.b` @type ^`int` := v1;
  #L2303ca.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2303d0.  v0:= temp @kind object;
  #L2303d2.  goto L2303ac;
}
procedure `void` `remove`(`e.e.a.b.f.j.v5` v1 @kind this) @signature `Le/e/a/b/f/j/v5;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L230470.  v0:= new `java.lang.UnsupportedOperationException`;
  #L230474.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L23047a.  throw v0;
}
