record `e.e.a.b.f.o.b0` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractMap` @kind class {
  `java.util.Set` `e.e.a.b.f.o.b0.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `e.e.a.b.f.o.b0.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.o.b0` v0 @kind this) @signature `Le/e/a/b/f/o/b0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c1070.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L2c1076.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Le/e/a/b/f/o/b0;.a:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.o.b0` v1 @kind this) @signature `Le/e/a/b/f/o/b0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c1048.  v0:= v1.`e.e.a.b.f.o.b0.b` @type ^`java.util.Set` @kind object;
  #L2c104c.  if v0 != 0 then goto L2c105c;
  #L2c1050.  call temp:= `a`(v1) @signature `Le/e/a/b/f/o/b0;.a:()Ljava/util/Set;` @kind virtual;
  #L2c1056.  v0:= temp @kind object;
  #L2c1058.  v1.`e.e.a.b.f.o.b0.b` @type ^`java.util.Set` := v0 @kind object;
  #L2c105c.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.o.b0` v1 @kind this) @signature `Le/e/a/b/f/o/b0;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c1020.  v0:= v1.`e.e.a.b.f.o.b0.c` @type ^`java.util.Collection` @kind object;
  #L2c1024.  if v0 != 0 then goto L2c1036;
  #L2c1028.  v0:= new `e.e.a.b.f.o.z`;
  #L2c102c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/o/z;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2c1032.  v1.`e.e.a.b.f.o.b0.c` @type ^`java.util.Collection` := v0 @kind object;
  #L2c1036.  return v0 @kind object;
}
