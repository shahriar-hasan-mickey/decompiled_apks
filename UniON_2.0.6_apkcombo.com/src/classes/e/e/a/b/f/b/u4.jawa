record `e.e.a.b.f.b.u4` @kind class @AccessFlag FINAL extends `java.lang.Cloneable` @kind interface {
  `e.e.a.b.f.b.s4` `e.e.a.b.f.b.u4.b` @AccessFlag PRIVATE;
  `java.lang.Object` `e.e.a.b.f.b.u4.c` @AccessFlag PRIVATE;
  `java.util.List` `e.e.a.b.f.b.u4.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.u4` v1 @kind this) @signature `Le/e/a/b/f/b/u4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L212bd4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L212bda.  v0:= new `java.util.ArrayList`;
  #L212bde.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L212be4.  v1.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` := v0 @kind object;
  #L212be8.  return @kind void;
}
procedure `byte`[] `d`(`e.e.a.b.f.b.u4` v2 @kind this) @signature `Le/e/a/b/f/b/u4;.d:()[B` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L212930.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/u4;.c:()I` @kind virtual;
  #L212936.  v0:= temp;
  #L212938.  v0:= new `byte`[v0];
  #L21293c.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/p4;.a:([B)Le/e/a/b/f/b/p4;` @kind static;
  #L212942.  v1:= temp @kind object;
  #L212944.  call `a`(v2, v1) @signature `Le/e/a/b/f/b/u4;.a:(Le/e/a/b/f/b/p4;)V` @kind virtual;
  #L21294a.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.u4` `e`(`e.e.a.b.f.b.u4` v5 @kind this) @signature `Le/e/a/b/f/b/u4;.e:()Le/e/a/b/f/b/u4;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L21295c.  v0:= new `e.e.a.b.f.b.u4`;
  #L212960.  call `<init>`(v0) @signature `Le/e/a/b/f/b/u4;.<init>:()V` @kind direct;
  #L212966.  v1:= v5.`e.e.a.b.f.b.u4.b` @type ^`e.e.a.b.f.b.s4` @kind object;
  #L21296a.  v0.`e.e.a.b.f.b.u4.b` @type ^`e.e.a.b.f.b.s4` := v1 @kind object;
  #L21296e.  v1:= v5.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L212972.  if v1 != 0 then goto L21297e;
  #L212976.  v1:= 0I;
  #L212978.  v0.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` := v1 @kind object;
  #L21297c.  goto L21298c;
  #L21297e.  v1:= v0.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L212982.  v2:= v5.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L212986.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L21298c.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212990.  if v1 == 0 then goto L212aee;
  #L212994.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212998.  v1:= instanceof @variable v1 @type ^`e.e.a.b.f.b.w4` @kind boolean;
  #L21299c.  if v1 == 0 then goto L2129bc;
  #L2129a0.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2129a4.  v1:= (`e.e.a.b.f.b.w4`) v1 @kind object;
  #L2129a8.  call temp:= `clone`(v1) @signature `Le/e/a/b/f/b/w4;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2129ae.  v1:= temp @kind object;
  #L2129b0.  v1:= (`e.e.a.b.f.b.w4`) v1 @kind object;
  #L2129b4.  v0.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` := v1 @kind object;
  #L2129b8.  goto L212aee;
  #L2129bc.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2129c0.  v1:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2129c4.  if v1 == 0 then goto L2129da;
  #L2129c8.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2129cc.  v1:= (`byte`[]) v1 @kind object;
  #L2129d0.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L2129d6.  v1:= temp @kind object;
  #L2129d8.  goto L2129b4;
  #L2129da.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2129de.  v1:= instanceof @variable v1 @type ^`byte`[][] @kind boolean;
  #L2129e2.  v2:= 0I;
  #L2129e4.  if v1 == 0 then goto L212a1a;
  #L2129e8.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2129ec.  v1:= (`byte`[][]) v1 @kind object;
  #L2129f0.  v3:= length @variable v1;
  #L2129f2.  v3:= new `byte`[][v3];
  #L2129f6.  v0.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` := v3 @kind object;
  #L2129fa.  v4:= length @variable v1;
  #L2129fc.  if v2 >= v4 then goto L212aee;
  #L212a00.  v4:= v1[v2] @kind object;
  #L212a04.  call temp:= `clone`(v4) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L212a0a.  v4:= temp @kind object;
  #L212a0c.  v4:= (`byte`[]) v4 @kind object;
  #L212a10.  v3[v2]:= v4 @kind object;
  #L212a14.  v2:= v2 + 1;
  #L212a18.  goto L2129fa;
  #L212a1a.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a1e.  v1:= instanceof @variable v1 @type ^`boolean`[] @kind boolean;
  #L212a22.  if v1 == 0 then goto L212a38;
  #L212a26.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a2a.  v1:= (`boolean`[]) v1 @kind object;
  #L212a2e.  call temp:= `clone`(v1) @signature `[Z.clone:()Ljava/lang/Object;` @kind virtual;
  #L212a34.  v1:= temp @kind object;
  #L212a36.  goto L2129b4;
  #L212a38.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a3c.  v1:= instanceof @variable v1 @type ^`int`[] @kind boolean;
  #L212a40.  if v1 == 0 then goto L212a56;
  #L212a44.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a48.  v1:= (`int`[]) v1 @kind object;
  #L212a4c.  call temp:= `clone`(v1) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L212a52.  v1:= temp @kind object;
  #L212a54.  goto L2129b4;
  #L212a56.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a5a.  v1:= instanceof @variable v1 @type ^`long`[] @kind boolean;
  #L212a5e.  if v1 == 0 then goto L212a74;
  #L212a62.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a66.  v1:= (`long`[]) v1 @kind object;
  #L212a6a.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L212a70.  v1:= temp @kind object;
  #L212a72.  goto L2129b4;
  #L212a74.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a78.  v1:= instanceof @variable v1 @type ^`float`[] @kind boolean;
  #L212a7c.  if v1 == 0 then goto L212a92;
  #L212a80.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a84.  v1:= (`float`[]) v1 @kind object;
  #L212a88.  call temp:= `clone`(v1) @signature `[F.clone:()Ljava/lang/Object;` @kind virtual;
  #L212a8e.  v1:= temp @kind object;
  #L212a90.  goto L2129b4;
  #L212a92.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212a96.  v1:= instanceof @variable v1 @type ^`double`[] @kind boolean;
  #L212a9a.  if v1 == 0 then goto L212ab0;
  #L212a9e.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212aa2.  v1:= (`double`[]) v1 @kind object;
  #L212aa6.  call temp:= `clone`(v1) @signature `[D.clone:()Ljava/lang/Object;` @kind virtual;
  #L212aac.  v1:= temp @kind object;
  #L212aae.  goto L2129b4;
  #L212ab0.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212ab4.  v1:= instanceof @variable v1 @type ^`e.e.a.b.f.b.w4`[] @kind boolean;
  #L212ab8.  if v1 == 0 then goto L212aee;
  #L212abc.  v1:= v5.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212ac0.  v1:= (`e.e.a.b.f.b.w4`[]) v1 @kind object;
  #L212ac4.  v3:= length @variable v1;
  #L212ac6.  v3:= new `e.e.a.b.f.b.w4`[v3];
  #L212aca.  v0.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` := v3 @kind object;
  #L212ace.  v4:= length @variable v1;
  #L212ad0.  if v2 >= v4 then goto L212aee;
  #L212ad4.  v4:= v1[v2] @kind object;
  #L212ad8.  call temp:= `clone`(v4) @signature `Le/e/a/b/f/b/w4;.clone:()Ljava/lang/Object;` @kind virtual;
  #L212ade.  v4:= temp @kind object;
  #L212ae0.  v4:= (`e.e.a.b.f.b.w4`) v4 @kind object;
  #L212ae4.  v3[v2]:= v4 @kind object;
  #L212ae8.  v2:= v2 + 1;
  #L212aec.  goto L212ace;
  #L212aee.  return v0 @kind object;
  #L212af0.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L212af2.  v1:= new `java.lang.AssertionError`;
  #L212af6.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L212afc.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L212966..L212ae8] goto L212af0;
}
procedure `void` `a`(`e.e.a.b.f.b.u4` v1 @kind this, `e.e.a.b.f.b.p4` v2 @kind object) @signature `Le/e/a/b/f/b/u4;.a:(Le/e/a/b/f/b/p4;)V` @AccessFlag FINAL {
    temp;
    v0;

  #L212bfc.  v2:= v1.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212c00.  if v2 != 0 then goto L212c30;
  #L212c04.  v2:= v1.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L212c08.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L212c0e.  v2:= temp @kind object;
  #L212c10.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L212c16.  v0:= temp;
  #L212c18.  if v0 != 0 then goto L212c1e;
  #L212c1c.  return @kind void;
  #L212c1e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L212c24.  v2:= new `java.lang.NoSuchMethodError`;
  #L212c28.  call `<init>`(v2) @signature `Ljava/lang/NoSuchMethodError;.<init>:()V` @kind direct;
  #L212c2e.  throw v2;
  #L212c30.  v2:= new `java.lang.NoSuchMethodError`;
  #L212c34.  call `<init>`(v2) @signature `Ljava/lang/NoSuchMethodError;.<init>:()V` @kind direct;
  #L212c3a.  throw v2;
}
procedure `int` `c`(`e.e.a.b.f.b.u4` v2 @kind this) @signature `Le/e/a/b/f/b/u4;.c:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L212b64.  v0:= v2.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212b68.  if v0 != 0 then goto L212b9a;
  #L212b6c.  v0:= v2.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L212b70.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L212b76.  v0:= temp @kind object;
  #L212b78.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L212b7e.  v1:= temp;
  #L212b80.  if v1 != 0 then goto L212b88;
  #L212b84.  v0:= 0I;
  #L212b86.  return v0;
  #L212b88.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L212b8e.  v0:= new `java.lang.NoSuchMethodError`;
  #L212b92.  call `<init>`(v0) @signature `Ljava/lang/NoSuchMethodError;.<init>:()V` @kind direct;
  #L212b98.  throw v0;
  #L212b9a.  v0:= new `java.lang.NoSuchMethodError`;
  #L212b9e.  call `<init>`(v0) @signature `Ljava/lang/NoSuchMethodError;.<init>:()V` @kind direct;
  #L212ba4.  throw v0;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.b.u4` v1 @kind this) @signature `Le/e/a/b/f/b/u4;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L212bb8.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/u4;.e:()Le/e/a/b/f/b/u4;` @kind direct;
  #L212bbe.  v0:= temp @kind object;
  #L212bc0.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.u4` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/b/u4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2127a8.  if v4 != v3 then goto L2127b0;
  #L2127ac.  v4:= 1I;
  #L2127ae.  return v4;
  #L2127b0.  v0:= instanceof @variable v4 @type ^`e.e.a.b.f.b.u4` @kind boolean;
  #L2127b4.  v1:= 0I;
  #L2127b6.  if v0 != 0 then goto L2127bc;
  #L2127ba.  return v1;
  #L2127bc.  v4:= (`e.e.a.b.f.b.u4`) v4 @kind object;
  #L2127c0.  v0:= v3.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2127c4.  if v0 == 0 then goto L2128ce;
  #L2127c8.  v0:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2127cc.  if v0 == 0 then goto L2128ce;
  #L2127d0.  v0:= v3.`e.e.a.b.f.b.u4.b` @type ^`e.e.a.b.f.b.s4` @kind object;
  #L2127d4.  v2:= v4.`e.e.a.b.f.b.u4.b` @type ^`e.e.a.b.f.b.s4` @kind object;
  #L2127d8.  if v0 == v2 then goto L2127de;
  #L2127dc.  return v1;
  #L2127de.  v0:= v0.`e.e.a.b.f.b.s4.a` @type ^`java.lang.Class` @kind object;
  #L2127e2.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2127e8.  v0:= temp;
  #L2127ea.  if v0 != 0 then goto L212800;
  #L2127ee.  v0:= v3.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2127f2.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2127f6.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2127fc.  v4:= temp;
  #L2127fe.  return v4;
  #L212800.  v0:= v3.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212804.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L212808.  if v1 == 0 then goto L212822;
  #L21280c.  v0:= (`byte`[]) v0 @kind object;
  #L212810.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212814.  v4:= (`byte`[]) v4 @kind object;
  #L212818.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L21281e.  v4:= temp;
  #L212820.  return v4;
  #L212822.  v1:= instanceof @variable v0 @type ^`int`[] @kind boolean;
  #L212826.  if v1 == 0 then goto L212840;
  #L21282a.  v0:= (`int`[]) v0 @kind object;
  #L21282e.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212832.  v4:= (`int`[]) v4 @kind object;
  #L212836.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L21283c.  v4:= temp;
  #L21283e.  return v4;
  #L212840.  v1:= instanceof @variable v0 @type ^`long`[] @kind boolean;
  #L212844.  if v1 == 0 then goto L21285e;
  #L212848.  v0:= (`long`[]) v0 @kind object;
  #L21284c.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L212850.  v4:= (`long`[]) v4 @kind object;
  #L212854.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L21285a.  v4:= temp;
  #L21285c.  return v4;
  #L21285e.  v1:= instanceof @variable v0 @type ^`float`[] @kind boolean;
  #L212862.  if v1 == 0 then goto L21287c;
  #L212866.  v0:= (`float`[]) v0 @kind object;
  #L21286a.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L21286e.  v4:= (`float`[]) v4 @kind object;
  #L212872.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([F[F)Z` @kind static;
  #L212878.  v4:= temp;
  #L21287a.  return v4;
  #L21287c.  v1:= instanceof @variable v0 @type ^`double`[] @kind boolean;
  #L212880.  if v1 == 0 then goto L21289a;
  #L212884.  v0:= (`double`[]) v0 @kind object;
  #L212888.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L21288c.  v4:= (`double`[]) v4 @kind object;
  #L212890.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([D[D)Z` @kind static;
  #L212896.  v4:= temp;
  #L212898.  return v4;
  #L21289a.  v1:= instanceof @variable v0 @type ^`boolean`[] @kind boolean;
  #L21289e.  if v1 == 0 then goto L2128b8;
  #L2128a2.  v0:= (`boolean`[]) v0 @kind object;
  #L2128a6.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2128aa.  v4:= (`boolean`[]) v4 @kind object;
  #L2128ae.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([Z[Z)Z` @kind static;
  #L2128b4.  v4:= temp;
  #L2128b6.  return v4;
  #L2128b8.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L2128bc.  v4:= v4.`e.e.a.b.f.b.u4.c` @type ^`java.lang.Object` @kind object;
  #L2128c0.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L2128c4.  call temp:= `deepEquals`(v0, v4) @signature `Ljava/util/Arrays;.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L2128ca.  v4:= temp;
  #L2128cc.  return v4;
  #L2128ce.  v0:= v3.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L2128d2.  if v0 == 0 then goto L2128e8;
  #L2128d6.  v1:= v4.`e.e.a.b.f.b.u4.d` @type ^`java.util.List` @kind object;
  #L2128da.  if v1 == 0 then goto L2128e8;
  #L2128de.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2128e4.  v4:= temp;
  #L2128e6.  return v4;
  #L2128e8.  call temp:= `d`(v3) @signature `Le/e/a/b/f/b/u4;.d:()[B` @kind direct;
  #L2128ee.  v0:= temp @kind object;
  #L2128f0.  call temp:= `d`(v4) @signature `Le/e/a/b/f/b/u4;.d:()[B` @kind direct;
  #L2128f6.  v4:= temp @kind object;
  #L2128f8.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L2128fe.  v4:= temp;
  #L212900.  return v4;
  #L212902.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L212904.  v0:= new `java.lang.IllegalStateException`;
  #L212908.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21290e.  throw v0;
  catch `java.io.IOException` @[L2128e8..L212900] goto L212902;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.u4` v2 @kind this) @signature `Le/e/a/b/f/b/u4;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L212b20.  call temp:= `d`(v2) @signature `Le/e/a/b/f/b/u4;.d:()[B` @kind direct;
  #L212b26.  v0:= temp @kind object;
  #L212b28.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L212b2e.  v0:= temp;
  #L212b30.  v0:= v0 + 527;
  #L212b34.  return v0;
  #L212b36.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L212b38.  v1:= new `java.lang.IllegalStateException`;
  #L212b3c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L212b42.  throw v1;
  catch `java.io.IOException` @[L212b20..L212b30] goto L212b36;
}
