record `e.e.a.b.f.j.c6` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface, `java.util.Map$Entry` @kind interface {
  `java.lang.Comparable` `e.e.a.b.f.j.c6.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.b.f.j.c6.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.j.t5` `e.e.a.b.f.j.c6.d` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.j.c6` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object, `java.lang.Comparable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/j/c6;.<init>:(Le/e/a/b/f/j/t5;Ljava/lang/Comparable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L230aa0.  v0.`e.e.a.b.f.j.c6.d` @type ^`e.e.a.b.f.j.t5` := v1 @kind object;
  #L230aa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L230aaa.  v0.`e.e.a.b.f.j.c6.b` @type ^`java.lang.Comparable` := v2 @kind object;
  #L230aae.  v0.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` := v3 @kind object;
  #L230ab2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.c6` v1 @kind this, `e.e.a.b.f.j.t5` v2 @kind object, `java.util.Map$Entry` v3 @kind object) @signature `Le/e/a/b/f/j/c6;.<init>:(Le/e/a/b/f/j/t5;Ljava/util/Map$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L230ac4.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L230aca.  v0:= temp @kind object;
  #L230acc.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L230ad0.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L230ad6.  v3:= temp @kind object;
  #L230ad8.  call `<init>`(v1, v2, v0, v3) @signature `Le/e/a/b/f/j/c6;.<init>:(Le/e/a/b/f/j/t5;Ljava/lang/Comparable;Ljava/lang/Object;)V` @kind direct;
  #L230ade.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/j/c6;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L230934.  if v0 != 0 then goto L230944;
  #L230938.  if v1 != 0 then goto L230940;
  #L23093c.  v0:= 1I;
  #L23093e.  return v0;
  #L230940.  v0:= 0I;
  #L230942.  return v0;
  #L230944.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23094a.  v0:= temp;
  #L23094c.  return v0;
}
procedure `int` `compareTo`(`e.e.a.b.f.j.c6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/j/c6;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L230960.  v2:= (`e.e.a.b.f.j.c6`) v2 @kind object;
  #L230964.  call temp:= `getKey`(v1) @signature `Le/e/a/b/f/j/c6;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L23096a.  v0:= temp @kind object;
  #L23096c.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L230970.  call temp:= `getKey`(v2) @signature `Le/e/a/b/f/j/c6;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L230976.  v2:= temp @kind object;
  #L230978.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L23097c.  call temp:= `compareTo`(v0, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L230982.  v2:= temp;
  #L230984.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.j.c6` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/j/c6;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2308d8.  v0:= 1I;
  #L2308da.  if v5 != v4 then goto L2308e0;
  #L2308de.  return v0;
  #L2308e0.  v1:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L2308e4.  v2:= 0I;
  #L2308e6.  if v1 != 0 then goto L2308ec;
  #L2308ea.  return v2;
  #L2308ec.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L2308f0.  v1:= v4.`e.e.a.b.f.j.c6.b` @type ^`java.lang.Comparable` @kind object;
  #L2308f4.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2308fa.  v3:= temp @kind object;
  #L2308fc.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/j/c6;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L230902.  v1:= temp;
  #L230904.  if v1 == 0 then goto L230922;
  #L230908.  v1:= v4.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` @kind object;
  #L23090c.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L230912.  v5:= temp @kind object;
  #L230914.  call temp:= `a`(v1, v5) @signature `Le/e/a/b/f/j/c6;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L23091a.  v5:= temp;
  #L23091c.  if v5 == 0 then goto L230922;
  #L230920.  return v0;
  #L230922.  return v2;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.j.c6` v1 @kind this) @signature `Le/e/a/b/f/j/c6;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2309d4.  v0:= v1.`e.e.a.b.f.j.c6.b` @type ^`java.lang.Comparable` @kind object;
  #L2309d8.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.j.c6` v1 @kind this) @signature `Le/e/a/b/f/j/c6;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2309ec.  v0:= v1.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` @kind object;
  #L2309f0.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.j.c6` v3 @kind this) @signature `Le/e/a/b/f/j/c6;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L230998.  v0:= v3.`e.e.a.b.f.j.c6.b` @type ^`java.lang.Comparable` @kind object;
  #L23099c.  v1:= 0I;
  #L23099e.  if v0 != 0 then goto L2309a6;
  #L2309a2.  v0:= 0I;
  #L2309a4.  goto L2309ae;
  #L2309a6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2309ac.  v0:= temp;
  #L2309ae.  v2:= v3.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` @kind object;
  #L2309b2.  if v2 != 0 then goto L2309b8;
  #L2309b6.  goto L2309c0;
  #L2309b8.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2309be.  v1:= temp;
  #L2309c0.  v0:= v0 ^~ v1 @kind int;
  #L2309c2.  return v0;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.j.c6` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/j/c6;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L230a04.  v0:= v1.`e.e.a.b.f.j.c6.d` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L230a08.  call `a`(v0) @signature `Le/e/a/b/f/j/t5;.a:(Le/e/a/b/f/j/t5;)V` @kind static;
  #L230a0e.  v0:= v1.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` @kind object;
  #L230a12.  v1.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` := v2 @kind object;
  #L230a16.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.j.c6` v4 @kind this) @signature `Le/e/a/b/f/j/c6;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L230a28.  v0:= v4.`e.e.a.b.f.j.c6.b` @type ^`java.lang.Comparable` @kind object;
  #L230a2c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L230a32.  v0:= temp @kind object;
  #L230a34.  v1:= v4.`e.e.a.b.f.j.c6.c` @type ^`java.lang.Object` @kind object;
  #L230a38.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L230a3e.  v1:= temp @kind object;
  #L230a40.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L230a46.  v2:= temp @kind object;
  #L230a48.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L230a4e.  v2:= temp;
  #L230a50.  v2:= v2 + 1;
  #L230a54.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L230a5a.  v3:= temp @kind object;
  #L230a5c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L230a62.  v3:= temp;
  #L230a64.  v2:= v2 + v3 @kind int;
  #L230a66.  v3:= new `java.lang.StringBuilder`;
  #L230a6a.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L230a70.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L230a76.  v0:= "=" @kind object;
  #L230a7a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L230a80.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L230a86.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L230a8c.  v0:= temp @kind object;
  #L230a8e.  return v0 @kind object;
}
