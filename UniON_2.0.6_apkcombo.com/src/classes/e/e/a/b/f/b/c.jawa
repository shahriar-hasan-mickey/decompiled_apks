record `e.e.a.b.f.b.c` @kind class @AccessFlag PUBLIC_FINAL {
  `android.content.ContentResolver` `e.e.a.b.f.b.c.a` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `e.e.a.b.f.b.c.b` @AccessFlag PRIVATE_FINAL;
  `android.database.ContentObserver` `e.e.a.b.f.b.c.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.b.f.b.c.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `e.e.a.b.f.b.c.e` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `e.e.a.b.f.b.c.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.e.a.b.f.b.c.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.ConcurrentHashMap` `@@e.e.a.b.f.b.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@e.e.a.b.f.b.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f870c.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1f8710.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1f8716.  `@@e.e.a.b.f.b.c.h` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L1f871a.  v0:= "key" @kind object;
  #L1f871e.  v1:= "value" @kind object;
  #L1f8722.  temp:= new `java.lang.String`[v0, v1];
  #L1f8728.  v0:= temp @kind object;
  #L1f872a.  `@@e.e.a.b.f.b.c.i` @type ^`java.lang.String`[] := v0 @kind object;
  #L1f872e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.c` v1 @kind this, `android.content.ContentResolver` v2 @kind object, `android.net.Uri` v3 @kind object) @signature `Le/e/a/b/f/b/c;.<init>:(Landroid/content/ContentResolver;Landroid/net/Uri;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1f8740.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f8746.  v0:= new `java.lang.Object`;
  #L1f874a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f8750.  v1.`e.e.a.b.f.b.c.d` @type ^`java.lang.Object` := v0 @kind object;
  #L1f8754.  v0:= new `java.lang.Object`;
  #L1f8758.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f875e.  v1.`e.e.a.b.f.b.c.f` @type ^`java.lang.Object` := v0 @kind object;
  #L1f8762.  v0:= new `java.util.ArrayList`;
  #L1f8766.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f876c.  v1.`e.e.a.b.f.b.c.g` @type ^`java.util.List` := v0 @kind object;
  #L1f8770.  v1.`e.e.a.b.f.b.c.a` @type ^`android.content.ContentResolver` := v2 @kind object;
  #L1f8774.  v1.`e.e.a.b.f.b.c.b` @type ^`android.net.Uri` := v3 @kind object;
  #L1f8778.  v2:= new `e.e.a.b.f.b.d`;
  #L1f877c.  v3:= 0I;
  #L1f877e.  call `<init>`(v2, v1, v3) @signature `Le/e/a/b/f/b/d;.<init>:(Le/e/a/b/f/b/c;Landroid/os/Handler;)V` @kind direct;
  #L1f8784.  v1.`e.e.a.b.f.b.c.c` @type ^`android.database.ContentObserver` := v2 @kind object;
  #L1f8788.  return @kind void;
}
procedure `e.e.a.b.f.b.c` `a`(`android.content.ContentResolver` v3 @kind object, `android.net.Uri` v4 @kind object) @signature `Le/e/a/b/f/b/c;.a:(Landroid/content/ContentResolver;Landroid/net/Uri;)Le/e/a/b/f/b/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f8590.  v0:= `@@e.e.a.b.f.b.c.h` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L1f8594.  call temp:= `get`(v0, v4) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f859a.  v0:= temp @kind object;
  #L1f859c.  v0:= (`e.e.a.b.f.b.c`) v0 @kind object;
  #L1f85a0.  if v0 != 0 then goto L1f85da;
  #L1f85a4.  v0:= new `e.e.a.b.f.b.c`;
  #L1f85a8.  call `<init>`(v0, v3, v4) @signature `Le/e/a/b/f/b/c;.<init>:(Landroid/content/ContentResolver;Landroid/net/Uri;)V` @kind direct;
  #L1f85ae.  v3:= `@@e.e.a.b.f.b.c.h` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L1f85b2.  call temp:= `putIfAbsent`(v3, v4, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f85b8.  v3:= temp @kind object;
  #L1f85ba.  v3:= (`e.e.a.b.f.b.c`) v3 @kind object;
  #L1f85be.  if v3 != 0 then goto L1f85d8;
  #L1f85c2.  v3:= v0.`e.e.a.b.f.b.c.a` @type ^`android.content.ContentResolver` @kind object;
  #L1f85c6.  v4:= v0.`e.e.a.b.f.b.c.b` @type ^`android.net.Uri` @kind object;
  #L1f85ca.  v1:= 0I;
  #L1f85cc.  v2:= v0.`e.e.a.b.f.b.c.c` @type ^`android.database.ContentObserver` @kind object;
  #L1f85d0.  call `registerContentObserver`(v3, v4, v1, v2) @signature `Landroid/content/ContentResolver;.registerContentObserver:(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V` @kind virtual;
  #L1f85d6.  goto L1f85da;
  #L1f85d8.  v0:= v3 @kind object;
  #L1f85da.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.b.c` v0 @kind object) @signature `Le/e/a/b/f/b/c;.a:(Le/e/a/b/f/b/c;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1f879c.  call `d`(v0) @signature `Le/e/a/b/f/b/c;.d:()V` @kind direct;
  #L1f87a2.  return @kind void;
}
procedure `java.util.Map` `c`(`e.e.a.b.f.b.c` v7 @kind this) @signature `Le/e/a/b/f/b/c;.c:()Ljava/util/Map;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f8660.  v0:= new `java.util.HashMap`;
  #L1f8664.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1f866a.  v1:= v7.`e.e.a.b.f.b.c.a` @type ^`android.content.ContentResolver` @kind object;
  #L1f866e.  v2:= v7.`e.e.a.b.f.b.c.b` @type ^`android.net.Uri` @kind object;
  #L1f8672.  v3:= `@@e.e.a.b.f.b.c.i` @type ^`java.lang.String`[] @kind object;
  #L1f8676.  v4:= 0I;
  #L1f8678.  v5:= 0I;
  #L1f867a.  v6:= 0I;
  #L1f867c.  call temp:= `query`(v1, v2, v3, v4, v5, v6) @signature `Landroid/content/ContentResolver;.query:(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L1f8682.  v1:= temp @kind object;
  #L1f8684.  if v1 == 0 then goto L1f86c2;
  #L1f8688.  call temp:= `moveToNext`(v1) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L1f868e.  v2:= temp;
  #L1f8690.  if v2 == 0 then goto L1f86b0;
  #L1f8694.  v2:= 0I;
  #L1f8696.  call temp:= `getString`(v1, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L1f869c.  v2:= temp @kind object;
  #L1f869e.  v3:= 1I;
  #L1f86a0.  call temp:= `getString`(v1, v3) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L1f86a6.  v3:= temp @kind object;
  #L1f86a8.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f86ae.  goto L1f8688;
  #L1f86b0.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1f86b6.  goto L1f86c2;
  #L1f86b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f86ba.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1f86c0.  throw v0;
  #L1f86c2.  return v0 @kind object;
  #L1f86c4.  v0:= "ConfigurationContentLoader" @kind object;
  #L1f86c8.  v1:= "PhenotypeFlag unable to load ContentProvider, using default values" @kind object;
  #L1f86cc.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1f86d2.  v0:= 0I;
  #L1f86d4.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L1f8660..L1f8684] goto L1f86c4;
  catch `android.database.sqlite.SQLiteException` @[L1f8660..L1f8684] goto L1f86c4;
  catch `java.lang.Throwable` @[L1f8688..L1f86ae] goto L1f86b8;
  catch `java.lang.SecurityException` @[L1f86b0..L1f86c2] goto L1f86c4;
  catch `android.database.sqlite.SQLiteException` @[L1f86b0..L1f86c2] goto L1f86c4;
}
procedure `void` `d`(`e.e.a.b.f.b.c` v3 @kind this) @signature `Le/e/a/b/f/b/c;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1f87e8.  v0:= v3.`e.e.a.b.f.b.c.f` @type ^`java.lang.Object` @kind object;
  #L1f87ec.  @monitorenter v0
  #L1f87ee.  v1:= v3.`e.e.a.b.f.b.c.g` @type ^`java.util.List` @kind object;
  #L1f87f2.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1f87f8.  v1:= temp @kind object;
  #L1f87fa.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f8800.  v2:= temp;
  #L1f8802.  if v2 == 0 then goto L1f881a;
  #L1f8806.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f880c.  v2:= temp @kind object;
  #L1f880e.  v2:= (`e.e.a.b.f.b.e`) v2 @kind object;
  #L1f8812.  call `h`(v2) @signature `Le/e/a/b/f/b/e;.h:()V` @kind interface;
  #L1f8818.  goto L1f87fa;
  #L1f881a.  @monitorexit v0
  #L1f881c.  return @kind void;
  #L1f881e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f8820.  @monitorexit v0
  #L1f8822.  throw v1;
  catch `java.lang.Throwable` @[L1f87ee..L1f8822] goto L1f881e;
}
procedure `java.util.Map` `a`(`e.e.a.b.f.b.c` v2 @kind this) @signature `Le/e/a/b/f/b/c;.a:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1f85ec.  v0:= "gms:phenotype:phenotype_flag:debug_disable_caching" @kind object;
  #L1f85f0.  v1:= 0I;
  #L1f85f2.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/f;.a:(Ljava/lang/String;Z)Z` @kind static;
  #L1f85f8.  v0:= temp;
  #L1f85fa.  if v0 == 0 then goto L1f8608;
  #L1f85fe.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/c;.c:()Ljava/util/Map;` @kind direct;
  #L1f8604.  v0:= temp @kind object;
  #L1f8606.  goto L1f860c;
  #L1f8608.  v0:= v2.`e.e.a.b.f.b.c.e` @type ^`java.util.Map` @kind object;
  #L1f860c.  if v0 != 0 then goto L1f8634;
  #L1f8610.  v1:= v2.`e.e.a.b.f.b.c.d` @type ^`java.lang.Object` @kind object;
  #L1f8614.  @monitorenter v1
  #L1f8616.  v0:= v2.`e.e.a.b.f.b.c.e` @type ^`java.util.Map` @kind object;
  #L1f861a.  if v0 != 0 then goto L1f862a;
  #L1f861e.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/c;.c:()Ljava/util/Map;` @kind direct;
  #L1f8624.  v0:= temp @kind object;
  #L1f8626.  v2.`e.e.a.b.f.b.c.e` @type ^`java.util.Map` := v0 @kind object;
  #L1f862a.  @monitorexit v1
  #L1f862c.  goto L1f8634;
  #L1f862e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f8630.  @monitorexit v1
  #L1f8632.  throw v0;
  #L1f8634.  if v0 == 0 then goto L1f863a;
  #L1f8638.  return v0 @kind object;
  #L1f863a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1f8640.  v0:= temp @kind object;
  #L1f8642.  return v0 @kind object;
  catch `java.lang.Throwable` @[L1f8616..L1f8632] goto L1f862e;
}
procedure `void` `b`(`e.e.a.b.f.b.c` v2 @kind this) @signature `Le/e/a/b/f/b/c;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1f87b4.  v0:= v2.`e.e.a.b.f.b.c.d` @type ^`java.lang.Object` @kind object;
  #L1f87b8.  @monitorenter v0
  #L1f87ba.  v1:= 0I;
  #L1f87bc.  v2.`e.e.a.b.f.b.c.e` @type ^`java.util.Map` := v1 @kind object;
  #L1f87c0.  @monitorexit v0
  #L1f87c2.  return @kind void;
  #L1f87c4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f87c6.  @monitorexit v0
  #L1f87c8.  throw v1;
  catch `java.lang.Throwable` @[L1f87bc..L1f87c8] goto L1f87c4;
}
