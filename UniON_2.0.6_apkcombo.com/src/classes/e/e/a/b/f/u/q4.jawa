record `e.e.a.b.f.u.q4` @kind class @AccessFlag ABSTRACT {
}
global `java.util.logging.Logger` `@@e.e.a.b.f.u.q4.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@e.e.a.b.f.u.q4.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/q4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32cad0.  v0:= constclass @type ^`e.e.a.b.f.u.a4` @kind object;
  #L32cad4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L32cada.  v0:= temp @kind object;
  #L32cadc.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L32cae2.  v0:= temp @kind object;
  #L32cae4.  `@@e.e.a.b.f.u.q4.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L32cae8.  v0:= "com.google.protobuf.BlazeGeneratedExtensionRegistryLiteLoader" @kind object;
  #L32caec.  `@@e.e.a.b.f.u.q4.b` @type ^`java.lang.String` := v0 @kind object;
  #L32caf0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.q4` v0 @kind this) @signature `Le/e/a/b/f/u/q4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32cb04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32cb0a.  return @kind void;
}
procedure `e.e.a.b.f.u.f4` `a`(`java.lang.Class` v11 @kind object) @signature `Le/e/a/b/f/u/q4;.a:(Ljava/lang/Class;)Le/e/a/b/f/u/f4;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L32c854.  v0:= constclass @type ^`e.e.a.b.f.u.q4` @kind object;
  #L32c858.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L32c85e.  v1:= temp @kind object;
  #L32c860.  v2:= constclass @type ^`e.e.a.b.f.u.f4` @kind object;
  #L32c864.  call temp:= `equals`(v11, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32c86a.  v2:= temp;
  #L32c86c.  v3:= 1I;
  #L32c86e.  v4:= 0I;
  #L32c870.  if v2 == 0 then goto L32c87a;
  #L32c874.  v2:= `@@e.e.a.b.f.u.q4.b` @type ^`java.lang.String` @kind object;
  #L32c878.  goto L32c8c8;
  #L32c87a.  call temp:= `getPackage`(v11) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L32c880.  v2:= temp @kind object;
  #L32c882.  call temp:= `getPackage`(v0) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L32c888.  v5:= temp @kind object;
  #L32c88a.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32c890.  v2:= temp;
  #L32c892.  if v2 == 0 then goto L32ca5a;
  #L32c896.  v2:= 2I;
  #L32c898.  v2:= new `java.lang.Object`[v2];
  #L32c89c.  call temp:= `getPackage`(v11) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L32c8a2.  v5:= temp @kind object;
  #L32c8a4.  call temp:= `getName`(v5) @signature `Ljava/lang/Package;.getName:()Ljava/lang/String;` @kind virtual;
  #L32c8aa.  v5:= temp @kind object;
  #L32c8ac.  v2[v4]:= v5 @kind object;
  #L32c8b0.  call temp:= `getSimpleName`(v11) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32c8b6.  v5:= temp @kind object;
  #L32c8b8.  v2[v3]:= v5 @kind object;
  #L32c8bc.  v5:= "%s.BlazeGenerated%sLoader" @kind object;
  #L32c8c0.  call temp:= `format`(v5, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32c8c6.  v2:= temp @kind object;
  #L32c8c8.  call temp:= `forName`(v2, v3, v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L32c8ce.  v2:= temp @kind object;
  #L32c8d0.  v5:= new `java.lang.Class`[v4];
  #L32c8d4.  call temp:= `getConstructor`(v2, v5) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L32c8da.  v2:= temp @kind object;
  #L32c8dc.  v5:= new `java.lang.Object`[v4];
  #L32c8e0.  call temp:= `newInstance`(v2, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32c8e6.  v2:= temp @kind object;
  #L32c8e8.  v2:= (`e.e.a.b.f.u.q4`) v2 @kind object;
  #L32c8ec.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/q4;.a:()Le/e/a/b/f/u/f4;` @kind virtual;
  #L32c8f2.  v2:= temp @kind object;
  #L32c8f4.  call temp:= `cast`(v11, v2) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32c8fa.  v2:= temp @kind object;
  #L32c8fc.  v2:= (`e.e.a.b.f.u.f4`) v2 @kind object;
  #L32c900.  return v2 @kind object;
  #L32c902.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L32c904.  v5:= new `java.lang.IllegalStateException`;
  #L32c908.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32c90e.  throw v5;
  #L32c910.  v2:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L32c912.  v5:= new `java.lang.IllegalStateException`;
  #L32c916.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32c91c.  throw v5;
  #L32c91e.  v2:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L32c920.  v5:= new `java.lang.IllegalStateException`;
  #L32c924.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32c92a.  throw v5;
  #L32c92c.  v2:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L32c92e.  v5:= new `java.lang.IllegalStateException`;
  #L32c932.  call `<init>`(v5, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32c938.  throw v5;
  #L32c93a.  call temp:= `load`(v0, v1) @signature `Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;` @kind static;
  #L32c940.  v0:= temp @kind object;
  #L32c942.  call temp:= `iterator`(v0) @signature `Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L32c948.  v0:= temp @kind object;
  #L32c94a.  v1:= new `java.util.ArrayList`;
  #L32c94e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32c954.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32c95a.  v2:= temp;
  #L32c95c.  if v2 == 0 then goto L32c9d8;
  #L32c960.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32c966.  v2:= temp @kind object;
  #L32c968.  v2:= (`e.e.a.b.f.u.q4`) v2 @kind object;
  #L32c96c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/q4;.a:()Le/e/a/b/f/u/f4;` @kind virtual;
  #L32c972.  v2:= temp @kind object;
  #L32c974.  call temp:= `cast`(v11, v2) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32c97a.  v2:= temp @kind object;
  #L32c97c.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L32c982.  goto L32c954;
  #L32c984.  v2:= Exception @type ^`java.util.ServiceConfigurationError` @kind object;
  #L32c986.  v10:= v2 @kind object;
  #L32c988.  v5:= `@@e.e.a.b.f.u.q4.a` @type ^`java.util.logging.Logger` @kind object;
  #L32c98c.  v6:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L32c990.  v2:= "Unable to load " @kind object;
  #L32c994.  call temp:= `getSimpleName`(v11) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32c99a.  v7:= temp @kind object;
  #L32c99c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32c9a2.  v7:= temp @kind object;
  #L32c9a4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32c9aa.  v8:= temp;
  #L32c9ac.  if v8 == 0 then goto L32c9bc;
  #L32c9b0.  call temp:= `concat`(v2, v7) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L32c9b6.  v2:= temp @kind object;
  #L32c9b8.  v9:= v2 @kind object;
  #L32c9ba.  goto L32c9c8;
  #L32c9bc.  v7:= new `java.lang.String`;
  #L32c9c0.  call `<init>`(v7, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32c9c6.  v9:= v7 @kind object;
  #L32c9c8.  v7:= "com.google.protobuf.GeneratedExtensionRegistryLoader" @kind object;
  #L32c9cc.  v8:= "load" @kind object;
  #L32c9d0.  call `logp`(v5, v6, v7, v8, v9, v10) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L32c9d6.  goto L32c954;
  #L32c9d8.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L32c9de.  v0:= temp;
  #L32c9e0.  if v0 != v3 then goto L32c9f2;
  #L32c9e4.  call temp:= `get`(v1, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L32c9ea.  v11:= temp @kind object;
  #L32c9ec.  v11:= (`e.e.a.b.f.u.f4`) v11 @kind object;
  #L32c9f0.  return v11 @kind object;
  #L32c9f2.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L32c9f8.  v0:= temp;
  #L32c9fa.  v2:= 0I;
  #L32c9fc.  if v0 != 0 then goto L32ca02;
  #L32ca00.  return v2 @kind object;
  #L32ca02.  v0:= "combine" @kind object;
  #L32ca06.  v5:= new `java.lang.Class`[v3];
  #L32ca0a.  v6:= constclass @type ^`java.util.Collection` @kind object;
  #L32ca0e.  v5[v4]:= v6 @kind object;
  #L32ca12.  call temp:= `getMethod`(v11, v0, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L32ca18.  v11:= temp @kind object;
  #L32ca1a.  v0:= new `java.lang.Object`[v3];
  #L32ca1e.  v0[v4]:= v1 @kind object;
  #L32ca22.  call temp:= `invoke`(v11, v2, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32ca28.  v11:= temp @kind object;
  #L32ca2a.  v11:= (`e.e.a.b.f.u.f4`) v11 @kind object;
  #L32ca2e.  return v11 @kind object;
  #L32ca30.  v11:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L32ca32.  v0:= new `java.lang.IllegalStateException`;
  #L32ca36.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32ca3c.  throw v0;
  #L32ca3e.  v11:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L32ca40.  v0:= new `java.lang.IllegalStateException`;
  #L32ca44.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32ca4a.  throw v0;
  #L32ca4c.  v11:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L32ca4e.  v0:= new `java.lang.IllegalStateException`;
  #L32ca52.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32ca58.  throw v0;
  #L32ca5a.  v0:= new `java.lang.IllegalArgumentException`;
  #L32ca5e.  call temp:= `getName`(v11) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L32ca64.  v11:= temp @kind object;
  #L32ca66.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ca6c.  throw v0;
  catch `java.lang.ClassNotFoundException` @[L32c8c8..L32c8d0] goto L32c93a;
  catch `java.lang.NoSuchMethodException` @[L32c8d0..L32c8ec] goto L32c92c;
  catch `java.lang.InstantiationException` @[L32c8d0..L32c8ec] goto L32c91e;
  catch `java.lang.IllegalAccessException` @[L32c8d0..L32c8ec] goto L32c910;
  catch `java.lang.reflect.InvocationTargetException` @[L32c8d0..L32c8ec] goto L32c902;
  catch `java.lang.ClassNotFoundException` @[L32c8d0..L32c8ec] goto L32c93a;
  catch `java.lang.ClassNotFoundException` @[L32c8ec..L32c93a] goto L32c93a;
  catch `java.util.ServiceConfigurationError` @[L32c960..L32c982] goto L32c984;
  catch `java.lang.NoSuchMethodException` @[L32ca02..L32ca2e] goto L32ca4c;
  catch `java.lang.IllegalAccessException` @[L32ca02..L32ca2e] goto L32ca3e;
  catch `java.lang.reflect.InvocationTargetException` @[L32ca02..L32ca2e] goto L32ca30;
}
procedure `e.e.a.b.f.u.f4` `a`() @signature `Le/e/a/b/f/u/q4;.a:()Le/e/a/b/f/u/f4;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
