record `e.e.a.b.f.u.w3` @kind class @AccessFlag  extends `e.e.a.b.f.u.t3` @kind class {
  `byte`[] `e.e.a.b.f.u.w3.e` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.w3` v0 @kind this, `byte`[] v1 @kind object) @signature `Le/e/a/b/f/u/w3;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3274e0.  call `<init>`(v0) @signature `Le/e/a/b/f/u/t3;.<init>:()V` @kind direct;
  #L3274e6.  if v1 == 0 then goto L3274f0;
  #L3274ea.  v0.`e.e.a.b.f.u.w3.e` @type ^`byte`[] := v1 @kind object;
  #L3274ee.  return @kind void;
  #L3274f0.  v1:= new `java.lang.NullPointerException`;
  #L3274f4.  call `<init>`(v1) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3274fa.  throw v1;
}
procedure `byte` `a`(`e.e.a.b.f.u.w3` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/u/w3;.a:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3273e0.  v0:= v1.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L3273e4.  v2:= v0[v2] @kind byte;
  #L3273e8.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.u.w3` v1 @kind this) @signature `Le/e/a/b/f/u/w3;.a:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32749c.  v0:= 0I;
  #L32749e.  return v0;
}
procedure `int` `a`(`e.e.a.b.f.u.w3` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/u/w3;.a:(III)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L327474.  v3:= v1.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327478.  call temp:= `a`(v1) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L32747e.  v0:= temp;
  #L327480.  call temp:= `a`(v2, v3, v0, v4) @signature `Le/e/a/b/f/u/w4;.a:(I[BII)I` @kind static;
  #L327486.  v2:= temp;
  #L327488.  return v2;
}
procedure `e.e.a.b.f.u.l3` `a`(`e.e.a.b.f.u.w3` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/u/w3;.a:(II)Le/e/a/b/f/u/l3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L327418.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L32741e.  v3:= temp;
  #L327420.  v0:= 0I;
  #L327422.  call temp:= `b`(v0, v4, v3) @signature `Le/e/a/b/f/u/l3;.b:(III)I` @kind static;
  #L327428.  v3:= temp;
  #L32742a.  if v3 != 0 then goto L327434;
  #L32742e.  v3:= `@@e.e.a.b.f.u.l3.c` @type ^`e.e.a.b.f.u.l3` @kind object;
  #L327432.  return v3 @kind object;
  #L327434.  v4:= new `e.e.a.b.f.u.o3`;
  #L327438.  v0:= v2.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L32743c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L327442.  v1:= temp;
  #L327444.  call `<init>`(v4, v0, v1, v3) @signature `Le/e/a/b/f/u/o3;.<init>:([BII)V` @kind direct;
  #L32744a.  return v4 @kind object;
}
procedure `java.lang.String` `a`(`e.e.a.b.f.u.w3` v4 @kind this, `java.nio.charset.Charset` v5 @kind object) @signature `Le/e/a/b/f/u/w3;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3274b0.  v0:= new `java.lang.String`;
  #L3274b4.  v1:= v4.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L3274b8.  call temp:= `a`(v4) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L3274be.  v2:= temp;
  #L3274c0.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L3274c6.  v3:= temp;
  #L3274c8.  call `<init>`(v0, v1, v2, v3, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L3274ce.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.w3` v3 @kind this, `e.e.a.b.f.u.i3` v4 @kind object) @signature `Le/e/a/b/f/u/w3;.a:(Le/e/a/b/f/u/i3;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32750c.  v0:= v3.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327510.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L327516.  v1:= temp;
  #L327518.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L32751e.  v2:= temp;
  #L327520.  call `a`(v4, v0, v1, v2) @signature `Le/e/a/b/f/u/i3;.a:([BII)V` @kind virtual;
  #L327526.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.u.w3` v5 @kind this, `e.e.a.b.f.u.l3` v6 @kind object, `int` v7 , `int` v8 ) @signature `Le/e/a/b/f/u/w3;.a:(Le/e/a/b/f/u/l3;II)Z` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L327294.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L32729a.  v7:= temp;
  #L32729c.  if v8 > v7 then goto L327360;
  #L3272a0.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L3272a6.  v7:= temp;
  #L3272a8.  if v8 > v7 then goto L327316;
  #L3272ac.  v7:= instanceof @variable v6 @type ^`e.e.a.b.f.u.w3` @kind boolean;
  #L3272b0.  v0:= 0I;
  #L3272b2.  if v7 == 0 then goto L3272fc;
  #L3272b6.  v6:= (`e.e.a.b.f.u.w3`) v6 @kind object;
  #L3272ba.  v7:= v5.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L3272be.  v1:= v6.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L3272c2.  call temp:= `a`(v5) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L3272c8.  v2:= temp;
  #L3272ca.  v2:= v2 + v8 @kind int;
  #L3272cc.  call temp:= `a`(v5) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L3272d2.  v8:= temp;
  #L3272d4.  call temp:= `a`(v6) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L3272da.  v6:= temp;
  #L3272dc.  if v8 >= v2 then goto L3272f8;
  #L3272e0.  v3:= v7[v8] @kind byte;
  #L3272e4.  v4:= v1[v6] @kind byte;
  #L3272e8.  if v3 == v4 then goto L3272ee;
  #L3272ec.  return v0;
  #L3272ee.  v8:= v8 + 1;
  #L3272f2.  v6:= v6 + 1;
  #L3272f6.  goto L3272dc;
  #L3272f8.  v6:= 1I;
  #L3272fa.  return v6;
  #L3272fc.  call temp:= `a`(v6, v0, v8) @signature `Le/e/a/b/f/u/l3;.a:(II)Le/e/a/b/f/u/l3;` @kind virtual;
  #L327302.  v6:= temp @kind object;
  #L327304.  call temp:= `a`(v5, v0, v8) @signature `Le/e/a/b/f/u/w3;.a:(II)Le/e/a/b/f/u/l3;` @kind virtual;
  #L32730a.  v7:= temp @kind object;
  #L32730c.  call temp:= `equals`(v6, v7) @signature `Le/e/a/b/f/u/l3;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327312.  v6:= temp;
  #L327314.  return v6;
  #L327316.  v7:= new `java.lang.IllegalArgumentException`;
  #L32731a.  call temp:= `zza`(v6) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L327320.  v6:= temp;
  #L327322.  v0:= 59I;
  #L327326.  v1:= new `java.lang.StringBuilder`;
  #L32732a.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L327330.  v0:= "Ran off end of other: 0, " @kind object;
  #L327334.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32733a.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327340.  v8:= ", " @kind object;
  #L327344.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32734a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327350.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327356.  v6:= temp @kind object;
  #L327358.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32735e.  throw v7;
  #L327360.  v6:= new `java.lang.IllegalArgumentException`;
  #L327364.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L32736a.  v7:= temp;
  #L32736c.  v0:= 40I;
  #L327370.  v1:= new `java.lang.StringBuilder`;
  #L327374.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L32737a.  v0:= "Length too large: " @kind object;
  #L32737e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327384.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32738a.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327390.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327396.  v7:= temp @kind object;
  #L327398.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32739e.  throw v6;
}
procedure `byte` `b`(`e.e.a.b.f.u.w3` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/u/w3;.b:(I)B` @AccessFlag  {
    temp;
    v0;

  #L3273fc.  v0:= v1.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327400.  v2:= v0[v2] @kind byte;
  #L327404.  return v2;
}
procedure `boolean` `d`(`e.e.a.b.f.u.w3` v3 @kind this) @signature `Le/e/a/b/f/u/w3;.d:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3273b0.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/w3;.a:()I` @kind virtual;
  #L3273b6.  v0:= temp;
  #L3273b8.  v1:= v3.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L3273bc.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L3273c2.  v2:= temp;
  #L3273c4.  v2:= v2 + v0 @kind int;
  #L3273c6.  call temp:= `a`(v1, v0, v2) @signature `Le/e/a/b/f/u/s7;.a:([BII)Z` @kind static;
  #L3273cc.  v0:= temp;
  #L3273ce.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.w3` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/u/w3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L327200.  v0:= 1I;
  #L327202.  if v5 != v4 then goto L327208;
  #L327206.  return v0;
  #L327208.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.u.l3` @kind boolean;
  #L32720c.  v2:= 0I;
  #L32720e.  if v1 != 0 then goto L327214;
  #L327212.  return v2;
  #L327214.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L32721a.  v1:= temp;
  #L32721c.  v3:= v5 @kind object;
  #L32721e.  v3:= (`e.e.a.b.f.u.l3`) v3 @kind object;
  #L327222.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/u/l3;.zza:()I` @kind virtual;
  #L327228.  v3:= temp;
  #L32722a.  if v1 == v3 then goto L327230;
  #L32722e.  return v2;
  #L327230.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L327236.  v1:= temp;
  #L327238.  if v1 != 0 then goto L32723e;
  #L32723c.  return v0;
  #L32723e.  v0:= instanceof @variable v5 @type ^`e.e.a.b.f.u.w3` @kind boolean;
  #L327242.  if v0 == 0 then goto L32727a;
  #L327246.  v5:= (`e.e.a.b.f.u.w3`) v5 @kind object;
  #L32724a.  call temp:= `c`(v4) @signature `Le/e/a/b/f/u/l3;.c:()I` @kind virtual;
  #L327250.  v0:= temp;
  #L327252.  call temp:= `c`(v5) @signature `Le/e/a/b/f/u/l3;.c:()I` @kind virtual;
  #L327258.  v1:= temp;
  #L32725a.  if v0 == 0 then goto L327268;
  #L32725e.  if v1 == 0 then goto L327268;
  #L327262.  if v0 == v1 then goto L327268;
  #L327266.  return v2;
  #L327268.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/w3;.zza:()I` @kind virtual;
  #L32726e.  v0:= temp;
  #L327270.  call temp:= `a`(v4, v5, v2, v0) @signature `Le/e/a/b/f/u/w3;.a:(Le/e/a/b/f/u/l3;II)Z` @kind virtual;
  #L327276.  v5:= temp;
  #L327278.  return v5;
  #L32727a.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327280.  v5:= temp;
  #L327282.  return v5;
}
procedure `int` `zza`(`e.e.a.b.f.u.w3` v1 @kind this) @signature `Le/e/a/b/f/u/w3;.zza:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32745c.  v0:= v1.`e.e.a.b.f.u.w3.e` @type ^`byte`[] @kind object;
  #L327460.  v0:= length @variable v0;
  #L327462.  return v0;
}
