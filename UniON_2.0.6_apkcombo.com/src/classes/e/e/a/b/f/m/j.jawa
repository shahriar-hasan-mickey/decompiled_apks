record `e.e.a.b.f.m.j` @kind class @AccessFlag FINAL extends `e.e.a.b.f.m.u0` @kind class {
  `e.e.a.b.f.m.p` `e.e.a.b.f.m.j.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.j` v0 @kind this, `e.e.a.b.f.m.p` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Le/e/a/b/f/m/j;.<init>:(Le/e/a/b/f/m/p;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2646ec.  v0.`e.e.a.b.f.m.j.c` @type ^`e.e.a.b.f.m.p` := v1 @kind object;
  #L2646f0.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/m/u0;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2646f6.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.m.j` v1 @kind this) @signature `Le/e/a/b/f/m/j;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264708.  call temp:= `iterator`(v1) @signature `Le/e/a/b/f/m/j;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L26470e.  v0:= temp @kind object;
  #L264710.  call `a`(v0) @signature `Le/e/a/b/f/m/q0;.a:(Ljava/util/Iterator;)V` @kind static;
  #L264716.  return @kind void;
}
procedure `boolean` `containsAll`(`e.e.a.b.f.m.j` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/m/j;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2645ec.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L2645f0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2645f6.  v0:= temp @kind object;
  #L2645f8.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2645fe.  v2:= temp;
  #L264600.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.m.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264614.  if v1 == v2 then goto L264636;
  #L264618.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L26461c.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L264622.  v0:= temp @kind object;
  #L264624.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L26462a.  v2:= temp;
  #L26462c.  if v2 == 0 then goto L264632;
  #L264630.  goto L264636;
  #L264632.  v2:= 0I;
  #L264634.  return v2;
  #L264636.  v2:= 1I;
  #L264638.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.m.j` v1 @kind this) @signature `Le/e/a/b/f/m/j;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L264694.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L264698.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L26469e.  v0:= temp @kind object;
  #L2646a0.  call temp:= `hashCode`(v0) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L2646a6.  v0:= temp;
  #L2646a8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.m.j` v2 @kind this) @signature `Le/e/a/b/f/m/j;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2646bc.  v0:= v2.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L2646c0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2646c6.  v0:= temp @kind object;
  #L2646c8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2646ce.  v0:= temp @kind object;
  #L2646d0.  v1:= new `e.e.a.b.f.m.i`;
  #L2646d4.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/m/i;.<init>:(Le/e/a/b/f/m/j;Ljava/util/Iterator;)V` @kind direct;
  #L2646da.  return v1 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.m.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/j;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L26464c.  v0:= v1.`e.e.a.b.f.m.u0.b` @type ^`java.util.Map` @kind object;
  #L264650.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L264656.  v2:= temp @kind object;
  #L264658.  v2:= (`java.util.Collection`) v2 @kind object;
  #L26465c.  if v2 == 0 then goto L264680;
  #L264660.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L264666.  v0:= temp;
  #L264668.  call `clear`(v2) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L26466e.  v2:= v1.`e.e.a.b.f.m.j.c` @type ^`e.e.a.b.f.m.p` @kind object;
  #L264672.  call temp:= `b`(v2, v0) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;I)I` @kind static;
  #L264678.  if v0 <= 0 then goto L264680;
  #L26467c.  v2:= 1I;
  #L26467e.  return v2;
  #L264680.  v2:= 0I;
  #L264682.  return v2;
}
