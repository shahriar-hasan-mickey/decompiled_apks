record `e.e.a.b.f.m.x0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/x0;.a:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L267afc.  v0:= 0I;
  #L267afe.  if v1 == 0 then goto L267b0e;
  #L267b02.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L267b08.  v1:= temp @kind object;
  #L267b0a.  return v1 @kind object;
  #L267b0c.  return v0 @kind object;
  #L267b0e.  throw v0;
  catch `java.lang.ClassCastException` @[L267b02..L267b0a] goto L267b0c;
  catch `java.lang.NullPointerException` @[L267b02..L267b0a] goto L267b0c;
}
procedure `boolean` `b`(`java.util.Map` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/m/x0;.b:(Ljava/util/Map;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;

  #L267ac4.  if v0 == 0 then goto L267ad6;
  #L267ac8.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L267ace.  v0:= temp;
  #L267ad0.  return v0;
  #L267ad2.  v0:= 0I;
  #L267ad4.  return v0;
  #L267ad6.  v0:= 0I;
  #L267ad8.  throw v0;
  catch `java.lang.ClassCastException` @[L267ac8..L267ad0] goto L267ad2;
  catch `java.lang.NullPointerException` @[L267ac8..L267ad0] goto L267ad2;
}
