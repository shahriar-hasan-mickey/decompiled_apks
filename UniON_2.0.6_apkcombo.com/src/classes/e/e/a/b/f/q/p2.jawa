record `e.e.a.b.f.q.p2` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.o2` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.q.p2` v0 @kind this) @signature `Le/e/a/b/f/q/p2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2deb84.  call `<init>`(v0) @signature `Le/e/a/b/f/q/o2;.<init>:()V` @kind direct;
  #L2deb8a.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.q.p2` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Le/e/a/b/f/q/p2;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2de870.  v7:= 0I;
  #L2de872.  v9:= 0I;
  #L2de874.  if v9 >= v10 then goto L2de886;
  #L2de878.  v0:= v8[v9] @kind byte;
  #L2de87c.  if v0 < 0 then goto L2de886;
  #L2de880.  v9:= v9 + 1;
  #L2de884.  goto L2de874;
  #L2de886.  v0:= -1I;
  #L2de888.  if v9 < v10 then goto L2de892;
  #L2de88c.  v0:= 0I;
  #L2de88e.  goto L2de95c;
  #L2de892.  if v9 < v10 then goto L2de898;
  #L2de896.  goto L2de88c;
  #L2de898.  v1:= v9 + 1;
  #L2de89c.  v9:= v8[v9] @kind byte;
  #L2de8a0.  if v9 >= 0 then goto L2de95e;
  #L2de8a4.  v2:= -32I;
  #L2de8a8.  v3:= -65I;
  #L2de8ac.  if v9 >= v2 then goto L2de8ce;
  #L2de8b0.  if v1 >= v10 then goto L2de8ca;
  #L2de8b4.  v2:= -62I;
  #L2de8b8.  if v9 < v2 then goto L2de95c;
  #L2de8bc.  v9:= v1 + 1;
  #L2de8c0.  v1:= v8[v1] @kind byte;
  #L2de8c4.  if v1 <= v3 then goto L2de892;
  #L2de8c8.  goto L2de95c;
  #L2de8ca.  v0:= v9;
  #L2de8cc.  goto L2de95c;
  #L2de8ce.  v4:= -16I;
  #L2de8d2.  if v9 >= v4 then goto L2de912;
  #L2de8d6.  v4:= v10 + -1;
  #L2de8da.  if v1 < v4 then goto L2de8e0;
  #L2de8de.  goto L2de91a;
  #L2de8e0.  v4:= v1 + 1;
  #L2de8e4.  v1:= v8[v1] @kind byte;
  #L2de8e8.  if v1 > v3 then goto L2de95c;
  #L2de8ec.  v5:= -96I;
  #L2de8f0.  if v9 != v2 then goto L2de8f8;
  #L2de8f4.  if v1 < v5 then goto L2de95c;
  #L2de8f8.  v2:= -19I;
  #L2de8fc.  if v9 != v2 then goto L2de904;
  #L2de900.  if v1 >= v5 then goto L2de95c;
  #L2de904.  v9:= v4 + 1;
  #L2de908.  v1:= v8[v4] @kind byte;
  #L2de90c.  if v1 <= v3 then goto L2de892;
  #L2de910.  goto L2de95c;
  #L2de912.  v2:= v10 + -2;
  #L2de916.  if v1 < v2 then goto L2de926;
  #L2de91a.  call temp:= `b`(v8, v1, v10) @signature `Le/e/a/b/f/q/s2;.b:([BII)I` @kind static;
  #L2de920.  v7:= temp;
  #L2de922.  v0:= v7;
  #L2de924.  goto L2de95c;
  #L2de926.  v2:= v1 + 1;
  #L2de92a.  v1:= v8[v1] @kind byte;
  #L2de92e.  if v1 > v3 then goto L2de95c;
  #L2de932.  v9:= v9 ^< 28;
  #L2de936.  v1:= v1 + 112;
  #L2de93a.  v9:= v9 + v1 @kind int;
  #L2de93c.  v9:= v9 ^> 30;
  #L2de940.  if v9 != 0 then goto L2de95c;
  #L2de944.  v9:= v2 + 1;
  #L2de948.  v1:= v8[v2] @kind byte;
  #L2de94c.  if v1 > v3 then goto L2de95c;
  #L2de950.  v1:= v9 + 1;
  #L2de954.  v9:= v8[v9] @kind byte;
  #L2de958.  if v9 <= v3 then goto L2de95e;
  #L2de95c.  return v0;
  #L2de95e.  v9:= v1;
  #L2de960.  goto L2de892;
}
procedure `int` `a`(`e.e.a.b.f.q.p2` v7 @kind this, `java.lang.CharSequence` v8 @kind object, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Le/e/a/b/f/q/p2;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2de974.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2de97a.  v0:= temp;
  #L2de97c.  v11:= v11 + v10 @kind int;
  #L2de97e.  v1:= 0I;
  #L2de980.  v2:= 128I;
  #L2de984.  if v1 >= v0 then goto L2de9a8;
  #L2de988.  v3:= v1 + v10 @kind int;
  #L2de98c.  if v3 >= v11 then goto L2de9a8;
  #L2de990.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2de996.  v4:= temp;
  #L2de998.  if v4 >= v2 then goto L2de9a8;
  #L2de99c.  v2:= (`byte`) v4 @kind i2b;
  #L2de99e.  v9[v3]:= v2 @kind byte;
  #L2de9a2.  v1:= v1 + 1;
  #L2de9a6.  goto L2de980;
  #L2de9a8.  if v1 != v0 then goto L2de9b0;
  #L2de9ac.  v10:= v10 + v0 @kind int;
  #L2de9ae.  return v10;
  #L2de9b0.  v10:= v10 + v1 @kind int;
  #L2de9b2.  if v1 >= v0 then goto L2deb72;
  #L2de9b6.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2de9bc.  v3:= temp;
  #L2de9be.  if v3 >= v2 then goto L2de9d6;
  #L2de9c2.  if v10 >= v11 then goto L2de9d6;
  #L2de9c6.  v4:= v10 + 1;
  #L2de9ca.  v3:= (`byte`) v3 @kind i2b;
  #L2de9cc.  v9[v10]:= v3 @kind byte;
  #L2de9d0.  v10:= v4;
  #L2de9d2.  goto L2deade;
  #L2de9d6.  v4:= 2048I;
  #L2de9da.  if v3 >= v4 then goto L2dea0a;
  #L2de9de.  v4:= v11 + -2;
  #L2de9e2.  if v10 > v4 then goto L2dea0a;
  #L2de9e6.  v4:= v10 + 1;
  #L2de9ea.  v5:= v3 ^>> 6;
  #L2de9ee.  v5:= v5 ^| 960;
  #L2de9f2.  v5:= (`byte`) v5 @kind i2b;
  #L2de9f4.  v9[v10]:= v5 @kind byte;
  #L2de9f8.  v10:= v4 + 1;
  #L2de9fc.  v3:= v3 ^& 63;
  #L2dea00.  v3:= v3 ^| v2 @kind int;
  #L2dea02.  v3:= (`byte`) v3 @kind i2b;
  #L2dea04.  v9[v4]:= v3 @kind byte;
  #L2dea08.  goto L2deade;
  #L2dea0a.  v4:= 57343I;
  #L2dea10.  v5:= 55296I;
  #L2dea16.  if v3 < v5 then goto L2dea1e;
  #L2dea1a.  if v3 <= v4 then goto L2dea5e;
  #L2dea1e.  v6:= v11 + -3;
  #L2dea22.  if v10 > v6 then goto L2dea5e;
  #L2dea26.  v4:= v10 + 1;
  #L2dea2a.  v5:= v3 ^>> 12;
  #L2dea2e.  v5:= v5 ^| 480;
  #L2dea32.  v5:= (`byte`) v5 @kind i2b;
  #L2dea34.  v9[v10]:= v5 @kind byte;
  #L2dea38.  v10:= v4 + 1;
  #L2dea3c.  v5:= v3 ^>> 6;
  #L2dea40.  v5:= v5 ^& 63;
  #L2dea44.  v5:= v5 ^| v2 @kind int;
  #L2dea46.  v5:= (`byte`) v5 @kind i2b;
  #L2dea48.  v9[v4]:= v5 @kind byte;
  #L2dea4c.  v4:= v10 + 1;
  #L2dea50.  v3:= v3 ^& 63;
  #L2dea54.  v3:= v3 ^| v2 @kind int;
  #L2dea56.  v3:= (`byte`) v3 @kind i2b;
  #L2dea58.  v9[v10]:= v3 @kind byte;
  #L2dea5c.  goto L2de9d0;
  #L2dea5e.  v6:= v11 + -4;
  #L2dea62.  if v10 > v6 then goto L2deaf8;
  #L2dea66.  v4:= v1 + 1;
  #L2dea6a.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2dea70.  v5:= temp;
  #L2dea72.  if v4 == v5 then goto L2deae8;
  #L2dea76.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2dea7c.  v1:= temp;
  #L2dea7e.  call temp:= `isSurrogatePair`(v3, v1) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2dea84.  v5:= temp;
  #L2dea86.  if v5 == 0 then goto L2deae6;
  #L2dea8a.  call temp:= `toCodePoint`(v3, v1) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L2dea90.  v1:= temp;
  #L2dea92.  v3:= v10 + 1;
  #L2dea96.  v5:= v1 ^>> 18;
  #L2dea9a.  v5:= v5 ^| 240;
  #L2dea9e.  v5:= (`byte`) v5 @kind i2b;
  #L2deaa0.  v9[v10]:= v5 @kind byte;
  #L2deaa4.  v10:= v3 + 1;
  #L2deaa8.  v5:= v1 ^>> 12;
  #L2deaac.  v5:= v5 ^& 63;
  #L2deab0.  v5:= v5 ^| v2 @kind int;
  #L2deab2.  v5:= (`byte`) v5 @kind i2b;
  #L2deab4.  v9[v3]:= v5 @kind byte;
  #L2deab8.  v3:= v10 + 1;
  #L2deabc.  v5:= v1 ^>> 6;
  #L2deac0.  v5:= v5 ^& 63;
  #L2deac4.  v5:= v5 ^| v2 @kind int;
  #L2deac6.  v5:= (`byte`) v5 @kind i2b;
  #L2deac8.  v9[v10]:= v5 @kind byte;
  #L2deacc.  v10:= v3 + 1;
  #L2dead0.  v1:= v1 ^& 63;
  #L2dead4.  v1:= v1 ^| v2 @kind int;
  #L2dead6.  v1:= (`byte`) v1 @kind i2b;
  #L2dead8.  v9[v3]:= v1 @kind byte;
  #L2deadc.  v1:= v4;
  #L2deade.  v1:= v1 + 1;
  #L2deae2.  goto L2de9b2;
  #L2deae6.  v1:= v4;
  #L2deae8.  v8:= new `e.e.a.b.f.q.q2`;
  #L2deaec.  v1:= v1 + -1;
  #L2deaf0.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/q/q2;.<init>:(II)V` @kind direct;
  #L2deaf6.  throw v8;
  #L2deaf8.  if v3 < v5 then goto L2deb30;
  #L2deafc.  if v3 > v4 then goto L2deb30;
  #L2deb00.  v9:= v1 + 1;
  #L2deb04.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2deb0a.  v11:= temp;
  #L2deb0c.  if v9 == v11 then goto L2deb24;
  #L2deb10.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2deb16.  v8:= temp;
  #L2deb18.  call temp:= `isSurrogatePair`(v3, v8) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2deb1e.  v8:= temp;
  #L2deb20.  if v8 != 0 then goto L2deb30;
  #L2deb24.  v8:= new `e.e.a.b.f.q.q2`;
  #L2deb28.  call `<init>`(v8, v1, v0) @signature `Le/e/a/b/f/q/q2;.<init>:(II)V` @kind direct;
  #L2deb2e.  throw v8;
  #L2deb30.  v8:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2deb34.  v9:= new `java.lang.StringBuilder`;
  #L2deb38.  v11:= 37I;
  #L2deb3c.  call `<init>`(v9, v11) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2deb42.  v11:= "Failed writing " @kind object;
  #L2deb46.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2deb4c.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2deb52.  v11:= " at index " @kind object;
  #L2deb56.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2deb5c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2deb62.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2deb68.  v9:= temp @kind object;
  #L2deb6a.  call `<init>`(v8, v9) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2deb70.  throw v8;
  #L2deb72.  return v10;
}
