record `e.e.a.b.f.b.w2` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.b.c3` `e.e.a.b.f.b.w2.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `e.e.a.b.f.b.w2.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.b.w2` `@@e.e.a.b.f.b.w2.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/w2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20b21c.  v0:= new `e.e.a.b.f.b.w2`;
  #L20b220.  call `<init>`(v0) @signature `Le/e/a/b/f/b/w2;.<init>:()V` @kind direct;
  #L20b226.  `@@e.e.a.b.f.b.w2.c` @type ^`e.e.a.b.f.b.w2` := v0 @kind object;
  #L20b22a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.w2` v4 @kind this) @signature `Le/e/a/b/f/b/w2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20b23c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20b242.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L20b246.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L20b24c.  v4.`e.e.a.b.f.b.w2.b` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L20b250.  v0:= "com.google.protobuf.AndroidProto3SchemaFactory" @kind object;
  #L20b254.  temp:= new `java.lang.String`[v0];
  #L20b25a.  v0:= temp @kind object;
  #L20b25c.  v1:= 0I;
  #L20b25e.  v2:= 0I;
  #L20b260.  v3:= v2 @kind object;
  #L20b262.  v2:= 0I;
  #L20b264.  if v2 > 0 then goto L20b27e;
  #L20b268.  v3:= v0[v1] @kind object;
  #L20b26c.  call temp:= `a`(v3) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/String;)Le/e/a/b/f/b/c3;` @kind static;
  #L20b272.  v3:= temp @kind object;
  #L20b274.  if v3 != 0 then goto L20b27e;
  #L20b278.  v2:= v2 + 1;
  #L20b27c.  goto L20b264;
  #L20b27e.  if v3 != 0 then goto L20b28c;
  #L20b282.  v3:= new `e.e.a.b.f.b.a2`;
  #L20b286.  call `<init>`(v3) @signature `Le/e/a/b/f/b/a2;.<init>:()V` @kind direct;
  #L20b28c.  v4.`e.e.a.b.f.b.w2.a` @type ^`e.e.a.b.f.b.c3` := v3 @kind object;
  #L20b290.  return @kind void;
}
procedure `e.e.a.b.f.b.c3` `a`(`java.lang.String` v2 @kind object) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/String;)Le/e/a/b/f/b/c3;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20b1d4.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20b1da.  v2:= temp @kind object;
  #L20b1dc.  v0:= 0I;
  #L20b1de.  v1:= new `java.lang.Class`[v0];
  #L20b1e2.  call temp:= `getConstructor`(v2, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L20b1e8.  v2:= temp @kind object;
  #L20b1ea.  v0:= new `java.lang.Object`[v0];
  #L20b1ee.  call temp:= `newInstance`(v2, v0) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20b1f4.  v2:= temp @kind object;
  #L20b1f6.  v2:= (`e.e.a.b.f.b.c3`) v2 @kind object;
  #L20b1fa.  return v2 @kind object;
  #L20b1fc.  v2:= 0I;
  #L20b1fe.  return v2 @kind object;
  catch `java.lang.Throwable` @[L20b1d4..L20b1fa] goto L20b1fc;
}
procedure `e.e.a.b.f.b.w2` `a`() @signature `Le/e/a/b/f/b/w2;.a:()Le/e/a/b/f/b/w2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20b134.  v0:= `@@e.e.a.b.f.b.w2.c` @type ^`e.e.a.b.f.b.w2` @kind object;
  #L20b138.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.b3` `a`(`e.e.a.b.f.b.w2` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Class;)Le/e/a/b/f/b/b3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L20b14c.  v0:= "messageType" @kind object;
  #L20b150.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20b156.  v1:= v2.`e.e.a.b.f.b.w2.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20b15a.  call temp:= `get`(v1, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20b160.  v1:= temp @kind object;
  #L20b162.  v1:= (`e.e.a.b.f.b.b3`) v1 @kind object;
  #L20b166.  if v1 != 0 then goto L20b19c;
  #L20b16a.  v1:= v2.`e.e.a.b.f.b.w2.a` @type ^`e.e.a.b.f.b.c3` @kind object;
  #L20b16e.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/b/c3;.a:(Ljava/lang/Class;)Le/e/a/b/f/b/b3;` @kind interface;
  #L20b174.  v1:= temp @kind object;
  #L20b176.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20b17c.  v0:= "schema" @kind object;
  #L20b180.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/b/h1;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20b186.  v0:= v2.`e.e.a.b.f.b.w2.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20b18a.  call temp:= `putIfAbsent`(v0, v3, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20b190.  v3:= temp @kind object;
  #L20b192.  v3:= (`e.e.a.b.f.b.b3`) v3 @kind object;
  #L20b196.  if v3 == 0 then goto L20b19c;
  #L20b19a.  v1:= v3 @kind object;
  #L20b19c.  return v1 @kind object;
}
procedure `e.e.a.b.f.b.b3` `a`(`e.e.a.b.f.b.w2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/b3;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L20b1b0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20b1b6.  v1:= temp @kind object;
  #L20b1b8.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Class;)Le/e/a/b/f/b/b3;` @kind virtual;
  #L20b1be.  v1:= temp @kind object;
  #L20b1c0.  return v1 @kind object;
}
