record `e.e.a.b.f.b.f1$a` @kind class @AccessFlag PUBLIC extends `e.e.a.b.f.b.r` @kind class {
  `e.e.a.b.f.b.f1` `e.e.a.b.f.b.f1$a.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.b.f1` `e.e.a.b.f.b.f1$a.c` @AccessFlag PROTECTED;
  `boolean` `e.e.a.b.f.b.f1$a.d` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`e.e.a.b.f.b.f1$a` v2 @kind this, `e.e.a.b.f.b.f1` v3 @kind object) @signature `Le/e/a/b/f/b/f1$a;.<init>:(Le/e/a/b/f/b/f1;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L201418.  call `<init>`(v2) @signature `Le/e/a/b/f/b/r;.<init>:()V` @kind direct;
  #L20141e.  v2.`e.e.a.b.f.b.f1$a.b` @type ^`e.e.a.b.f.b.f1` := v3 @kind object;
  #L201422.  v0:= `@@e.e.a.b.f.b.f1$e.d` @type ^`int`;
  #L201426.  v1:= 0I;
  #L201428.  call temp:= `a`(v3, v0, v1, v1) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20142e.  v3:= temp @kind object;
  #L201430.  v3:= (`e.e.a.b.f.b.f1`) v3 @kind object;
  #L201434.  v2.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` := v3 @kind object;
  #L201438.  v3:= 0I;
  #L20143a.  v2.`e.e.a.b.f.b.f1$a.d` @type ^`boolean` := v3 @kind boolean;
  #L20143e.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.f1` v1 @kind object, `e.e.a.b.f.b.f1` v2 @kind object) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;Le/e/a/b/f/b/f1;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L201450.  call temp:= `a`() @signature `Le/e/a/b/f/b/w2;.a:()Le/e/a/b/f/b/w2;` @kind static;
  #L201456.  v0:= temp @kind object;
  #L201458.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/b3;` @kind virtual;
  #L20145e.  v0:= temp @kind object;
  #L201460.  call `b`(v0, v1, v2) @signature `Le/e/a/b/f/b/b3;.b:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L201466.  return @kind void;
}
procedure `e.e.a.b.f.b.f1$a` `a`(`e.e.a.b.f.b.f1$a` v1 @kind this, `e.e.a.b.f.b.f1` v2 @kind object) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;)Le/e/a/b/f/b/f1$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2012f0.  call `c`(v1) @signature `Le/e/a/b/f/b/f1$a;.c:()V` @kind virtual;
  #L2012f6.  v0:= v1.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L2012fa.  call `a`(v0, v2) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;Le/e/a/b/f/b/f1;)V` @kind static;
  #L201300.  return v1 @kind object;
}
procedure `e.e.a.b.f.b.r` `a`(`e.e.a.b.f.b.f1$a` v0 @kind this, `e.e.a.b.f.b.q` v1 @kind object) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/q;)Le/e/a/b/f/b/r;` @AccessFlag PROTECTED_FINAL_SYNTHETIC {
    temp;

  #L2011fc.  v1:= (`e.e.a.b.f.b.f1`) v1 @kind object;
  #L201200.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;)Le/e/a/b/f/b/f1$a;` @kind virtual;
  #L201206.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.k2` `b`(`e.e.a.b.f.b.f1$a` v1 @kind this) @signature `Le/e/a/b/f/b/f1$a;.b:()Le/e/a/b/f/b/k2;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L201314.  v0:= v1.`e.e.a.b.f.b.f1$a.b` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L201318.  return v0 @kind object;
}
procedure `void` `c`(`e.e.a.b.f.b.f1$a` v3 @kind this) @signature `Le/e/a/b/f/b/f1$a;.c:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L201478.  v0:= v3.`e.e.a.b.f.b.f1$a.d` @type ^`boolean` @kind boolean;
  #L20147c.  if v0 == 0 then goto L2014aa;
  #L201480.  v0:= v3.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L201484.  v1:= `@@e.e.a.b.f.b.f1$e.d` @type ^`int`;
  #L201488.  v2:= 0I;
  #L20148a.  call temp:= `a`(v0, v1, v2, v2) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L201490.  v0:= temp @kind object;
  #L201492.  v0:= (`e.e.a.b.f.b.f1`) v0 @kind object;
  #L201496.  v1:= v3.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L20149a.  call `a`(v0, v1) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;Le/e/a/b/f/b/f1;)V` @kind static;
  #L2014a0.  v3.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` := v0 @kind object;
  #L2014a4.  v0:= 0I;
  #L2014a6.  v3.`e.e.a.b.f.b.f1$a.d` @type ^`boolean` := v0 @kind boolean;
  #L2014aa.  return @kind void;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.b.f1$a` v3 @kind this) @signature `Le/e/a/b/f/b/f1$a;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2013dc.  v0:= v3.`e.e.a.b.f.b.f1$a.b` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L2013e0.  v1:= `@@e.e.a.b.f.b.f1$e.e` @type ^`int`;
  #L2013e4.  v2:= 0I;
  #L2013e6.  call temp:= `a`(v0, v1, v2, v2) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2013ec.  v0:= temp @kind object;
  #L2013ee.  v0:= (`e.e.a.b.f.b.f1$a`) v0 @kind object;
  #L2013f2.  call temp:= `p`(v3) @signature `Le/e/a/b/f/b/f1$a;.p:()Le/e/a/b/f/b/k2;` @kind virtual;
  #L2013f8.  v1:= temp @kind object;
  #L2013fa.  v1:= (`e.e.a.b.f.b.f1`) v1 @kind object;
  #L2013fe.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/b/f1$a;.a:(Le/e/a/b/f/b/f1;)Le/e/a/b/f/b/f1$a;` @kind virtual;
  #L201404.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.f1` `d`(`e.e.a.b.f.b.f1$a` v2 @kind this) @signature `Le/e/a/b/f/b/f1$a;.d:()Le/e/a/b/f/b/f1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L201218.  v0:= v2.`e.e.a.b.f.b.f1$a.d` @type ^`boolean` @kind boolean;
  #L20121c.  if v0 == 0 then goto L201226;
  #L201220.  v0:= v2.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L201224.  return v0 @kind object;
  #L201226.  v0:= v2.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L20122a.  call temp:= `a`() @signature `Le/e/a/b/f/b/w2;.a:()Le/e/a/b/f/b/w2;` @kind static;
  #L201230.  v1:= temp @kind object;
  #L201232.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/b3;` @kind virtual;
  #L201238.  v1:= temp @kind object;
  #L20123a.  call `c`(v1, v0) @signature `Le/e/a/b/f/b/b3;.c:(Ljava/lang/Object;)V` @kind interface;
  #L201240.  v0:= 1I;
  #L201242.  v2.`e.e.a.b.f.b.f1$a.d` @type ^`boolean` := v0 @kind boolean;
  #L201246.  v0:= v2.`e.e.a.b.f.b.f1$a.c` @type ^`e.e.a.b.f.b.f1` @kind object;
  #L20124a.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.f1` `e`(`e.e.a.b.f.b.f1$a` v5 @kind this) @signature `Le/e/a/b/f/b/f1$a;.e:()Le/e/a/b/f/b/f1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20125c.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/f1$a;.p:()Le/e/a/b/f/b/k2;` @kind virtual;
  #L201262.  v0:= temp @kind object;
  #L201264.  v0:= (`e.e.a.b.f.b.f1`) v0 @kind object;
  #L201268.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L20126c.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L201272.  v1:= temp;
  #L201274.  v2:= `@@e.e.a.b.f.b.f1$e.a` @type ^`int`;
  #L201278.  v3:= 0I;
  #L20127a.  call temp:= `a`(v0, v2, v3, v3) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L201280.  v2:= temp @kind object;
  #L201282.  v2:= (`java.lang.Byte`) v2 @kind object;
  #L201286.  call temp:= `byteValue`(v2) @signature `Ljava/lang/Byte;.byteValue:()B` @kind virtual;
  #L20128c.  v2:= temp;
  #L20128e.  v4:= 1I;
  #L201290.  if v2 != v4 then goto L201296;
  #L201294.  goto L2012ce;
  #L201296.  if v2 != 0 then goto L20129e;
  #L20129a.  v4:= 0I;
  #L20129c.  goto L2012ce;
  #L20129e.  call temp:= `a`() @signature `Le/e/a/b/f/b/w2;.a:()Le/e/a/b/f/b/w2;` @kind static;
  #L2012a4.  v2:= temp @kind object;
  #L2012a6.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/b3;` @kind virtual;
  #L2012ac.  v2:= temp @kind object;
  #L2012ae.  call temp:= `e`(v2, v0) @signature `Le/e/a/b/f/b/b3;.e:(Ljava/lang/Object;)Z` @kind interface;
  #L2012b4.  v4:= temp;
  #L2012b6.  if v1 == 0 then goto L2012ce;
  #L2012ba.  v1:= `@@e.e.a.b.f.b.f1$e.b` @type ^`int`;
  #L2012be.  if v4 == 0 then goto L2012c6;
  #L2012c2.  v2:= v0 @kind object;
  #L2012c4.  goto L2012c8;
  #L2012c6.  v2:= v3 @kind object;
  #L2012c8.  call temp:= `a`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2012ce.  if v4 == 0 then goto L2012d4;
  #L2012d2.  return v0 @kind object;
  #L2012d4.  v1:= new `e.e.a.b.f.b.s3`;
  #L2012d8.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/s3;.<init>:(Le/e/a/b/f/b/k2;)V` @kind direct;
  #L2012de.  throw v1;
}
procedure `e.e.a.b.f.b.k2` `o`(`e.e.a.b.f.b.f1$a` v5 @kind this) @signature `Le/e/a/b/f/b/f1$a;.o:()Le/e/a/b/f/b/k2;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L201348.  call temp:= `p`(v5) @signature `Le/e/a/b/f/b/f1$a;.p:()Le/e/a/b/f/b/k2;` @kind virtual;
  #L20134e.  v0:= temp @kind object;
  #L201350.  v0:= (`e.e.a.b.f.b.f1`) v0 @kind object;
  #L201354.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L201358.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L20135e.  v1:= temp;
  #L201360.  v2:= `@@e.e.a.b.f.b.f1$e.a` @type ^`int`;
  #L201364.  v3:= 0I;
  #L201366.  call temp:= `a`(v0, v2, v3, v3) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20136c.  v2:= temp @kind object;
  #L20136e.  v2:= (`java.lang.Byte`) v2 @kind object;
  #L201372.  call temp:= `byteValue`(v2) @signature `Ljava/lang/Byte;.byteValue:()B` @kind virtual;
  #L201378.  v2:= temp;
  #L20137a.  v4:= 1I;
  #L20137c.  if v2 != v4 then goto L201382;
  #L201380.  goto L2013ba;
  #L201382.  if v2 != 0 then goto L20138a;
  #L201386.  v4:= 0I;
  #L201388.  goto L2013ba;
  #L20138a.  call temp:= `a`() @signature `Le/e/a/b/f/b/w2;.a:()Le/e/a/b/f/b/w2;` @kind static;
  #L201390.  v2:= temp @kind object;
  #L201392.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/b/w2;.a:(Ljava/lang/Object;)Le/e/a/b/f/b/b3;` @kind virtual;
  #L201398.  v2:= temp @kind object;
  #L20139a.  call temp:= `e`(v2, v0) @signature `Le/e/a/b/f/b/b3;.e:(Ljava/lang/Object;)Z` @kind interface;
  #L2013a0.  v4:= temp;
  #L2013a2.  if v1 == 0 then goto L2013ba;
  #L2013a6.  v1:= `@@e.e.a.b.f.b.f1$e.b` @type ^`int`;
  #L2013aa.  if v4 == 0 then goto L2013b2;
  #L2013ae.  v2:= v0 @kind object;
  #L2013b0.  goto L2013b4;
  #L2013b2.  v2:= v3 @kind object;
  #L2013b4.  call temp:= `a`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/f1;.a:(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2013ba.  if v4 == 0 then goto L2013c0;
  #L2013be.  return v0 @kind object;
  #L2013c0.  v1:= new `e.e.a.b.f.b.s3`;
  #L2013c4.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/b/s3;.<init>:(Le/e/a/b/f/b/k2;)V` @kind direct;
  #L2013ca.  throw v1;
}
procedure `e.e.a.b.f.b.k2` `p`(`e.e.a.b.f.b.f1$a` v1 @kind this) @signature `Le/e/a/b/f/b/f1$a;.p:()Le/e/a/b/f/b/k2;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L20132c.  call temp:= `d`(v1) @signature `Le/e/a/b/f/b/f1$a;.d:()Le/e/a/b/f/b/f1;` @kind virtual;
  #L201332.  v0:= temp @kind object;
  #L201334.  return v0 @kind object;
}
