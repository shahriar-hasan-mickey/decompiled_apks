record `e.e.a.b.f.r.q` @kind class @AccessFlag ABSTRACT extends `java.util.Map$Entry` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.r.q` v0 @kind this) @signature `Le/e/a/b/f/r/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30c138.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30c13e.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.r.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/r/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30c018.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L30c01c.  v1:= 0I;
  #L30c01e.  if v0 == 0 then goto L30c062;
  #L30c022.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L30c026.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/r/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L30c02c.  v0:= temp @kind object;
  #L30c02e.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30c034.  v2:= temp @kind object;
  #L30c036.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30c03c.  v0:= temp;
  #L30c03e.  if v0 == 0 then goto L30c062;
  #L30c042.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/r/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L30c048.  v0:= temp @kind object;
  #L30c04a.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L30c050.  v4:= temp @kind object;
  #L30c052.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/r/lb;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L30c058.  v4:= temp;
  #L30c05a.  if v4 == 0 then goto L30c062;
  #L30c05e.  v4:= 1I;
  #L30c060.  return v4;
  #L30c062.  return v1;
}
procedure `java.lang.Object` `getKey`() @signature `Le/e/a/b/f/r/q;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Le/e/a/b/f/r/q;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`e.e.a.b.f.r.q` v3 @kind this) @signature `Le/e/a/b/f/r/q;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30c074.  call temp:= `getKey`(v3) @signature `Le/e/a/b/f/r/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L30c07a.  v0:= temp @kind object;
  #L30c07c.  call temp:= `getValue`(v3) @signature `Le/e/a/b/f/r/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L30c082.  v1:= temp @kind object;
  #L30c084.  v2:= 0I;
  #L30c086.  if v0 != 0 then goto L30c08e;
  #L30c08a.  v0:= 0I;
  #L30c08c.  goto L30c096;
  #L30c08e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30c094.  v0:= temp;
  #L30c096.  if v1 != 0 then goto L30c09c;
  #L30c09a.  goto L30c0a4;
  #L30c09c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30c0a2.  v2:= temp;
  #L30c0a4.  v0:= v0 ^~ v2 @kind int;
  #L30c0a6.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.r.q` v5 @kind this) @signature `Le/e/a/b/f/r/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30c0b8.  call temp:= `getKey`(v5) @signature `Le/e/a/b/f/r/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L30c0be.  v0:= temp @kind object;
  #L30c0c0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c0c6.  v0:= temp @kind object;
  #L30c0c8.  call temp:= `getValue`(v5) @signature `Le/e/a/b/f/r/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L30c0ce.  v1:= temp @kind object;
  #L30c0d0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c0d6.  v1:= temp @kind object;
  #L30c0d8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c0de.  v2:= temp @kind object;
  #L30c0e0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30c0e6.  v2:= temp;
  #L30c0e8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c0ee.  v3:= temp @kind object;
  #L30c0f0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30c0f6.  v3:= temp;
  #L30c0f8.  v4:= new `java.lang.StringBuilder`;
  #L30c0fc.  v2:= v2 + 1;
  #L30c100.  v2:= v2 + v3 @kind int;
  #L30c102.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30c108.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c10e.  v0:= "=" @kind object;
  #L30c112.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c118.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c11e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30c124.  v0:= temp @kind object;
  #L30c126.  return v0 @kind object;
}
