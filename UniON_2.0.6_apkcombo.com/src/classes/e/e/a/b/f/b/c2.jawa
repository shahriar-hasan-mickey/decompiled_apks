record `e.e.a.b.f.b.c2` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.j2` @kind interface {
  `e.e.a.b.f.b.j2`[] `e.e.a.b.f.b.c2.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.c2` v0 @kind this, `e.e.a.b.f.b.j2`[] v1 @kind object) @signature `Le/e/a/b/f/b/c2;.<init>:([Le/e/a/b/f/b/j2;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L203980.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L203986.  v0.`e.e.a.b.f.b.c2.a` @type ^`e.e.a.b.f.b.j2`[] := v1 @kind object;
  #L20398a.  return @kind void;
}
procedure `boolean` `a`(`e.e.a.b.f.b.c2` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Le/e/a/b/f/b/c2;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2038c8.  v0:= v5.`e.e.a.b.f.b.c2.a` @type ^`e.e.a.b.f.b.j2`[] @kind object;
  #L2038cc.  v1:= length @variable v0;
  #L2038ce.  v2:= 0I;
  #L2038d0.  v3:= 0I;
  #L2038d2.  if v3 >= v1 then goto L2038f0;
  #L2038d6.  v4:= v0[v3] @kind object;
  #L2038da.  call temp:= `a`(v4, v6) @signature `Le/e/a/b/f/b/j2;.a:(Ljava/lang/Class;)Z` @kind interface;
  #L2038e0.  v4:= temp;
  #L2038e2.  if v4 == 0 then goto L2038ea;
  #L2038e6.  v6:= 1I;
  #L2038e8.  return v6;
  #L2038ea.  v3:= v3 + 1;
  #L2038ee.  goto L2038d2;
  #L2038f0.  return v2;
}
procedure `e.e.a.b.f.b.i2` `b`(`e.e.a.b.f.b.c2` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Le/e/a/b/f/b/c2;.b:(Ljava/lang/Class;)Le/e/a/b/f/b/i2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L203904.  v0:= v5.`e.e.a.b.f.b.c2.a` @type ^`e.e.a.b.f.b.j2`[] @kind object;
  #L203908.  v1:= length @variable v0;
  #L20390a.  v2:= 0I;
  #L20390c.  if v2 >= v1 then goto L203930;
  #L203910.  v3:= v0[v2] @kind object;
  #L203914.  call temp:= `a`(v3, v6) @signature `Le/e/a/b/f/b/j2;.a:(Ljava/lang/Class;)Z` @kind interface;
  #L20391a.  v4:= temp;
  #L20391c.  if v4 == 0 then goto L20392a;
  #L203920.  call temp:= `b`(v3, v6) @signature `Le/e/a/b/f/b/j2;.b:(Ljava/lang/Class;)Le/e/a/b/f/b/i2;` @kind interface;
  #L203926.  v6:= temp @kind object;
  #L203928.  return v6 @kind object;
  #L20392a.  v2:= v2 + 1;
  #L20392e.  goto L20390c;
  #L203930.  v0:= new `java.lang.UnsupportedOperationException`;
  #L203934.  v1:= "No factory is available for message type: " @kind object;
  #L203938.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20393e.  v6:= temp @kind object;
  #L203940.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L203946.  v6:= temp @kind object;
  #L203948.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20394e.  v2:= temp;
  #L203950.  if v2 == 0 then goto L20395e;
  #L203954.  call temp:= `concat`(v1, v6) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L20395a.  v6:= temp @kind object;
  #L20395c.  goto L203968;
  #L20395e.  v6:= new `java.lang.String`;
  #L203962.  call `<init>`(v6, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L203968.  call `<init>`(v0, v6) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20396e.  throw v0;
}
