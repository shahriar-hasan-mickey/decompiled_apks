record `e.e.a.b.f.q.su` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.q.b1` @kind interface {
  `int` `e.e.a.b.f.q.su.zza` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`e.e.a.b.f.q.su` v1 @kind this) @signature `Le/e/a/b/f/q/su;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L309b08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L309b0e.  v0:= 0I;
  #L309b10.  v1.`e.e.a.b.f.q.su.zza` @type ^`int` := v0;
  #L309b14.  return @kind void;
}
procedure `void` `a`(`java.lang.Iterable` v3 @kind object, `java.util.List` v4 @kind object) @signature `Le/e/a/b/f/q/su;.a:(Ljava/lang/Iterable;Ljava/util/List;)V` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L309b3c.  call temp:= `a`(v3) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L309b42.  v0:= instanceof @variable v4 @type ^`java.util.ArrayList` @kind boolean;
  #L309b46.  if v0 == 0 then goto L309b70;
  #L309b4a.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L309b4e.  if v0 == 0 then goto L309b70;
  #L309b52.  v0:= v4 @kind object;
  #L309b54.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L309b58.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309b5e.  v1:= temp;
  #L309b60.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L309b66.  v2:= temp;
  #L309b68.  v1:= v1 + v2 @kind int;
  #L309b6a.  call `ensureCapacity`(v0, v1) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L309b70.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309b76.  v0:= temp;
  #L309b78.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L309b7e.  v3:= temp @kind object;
  #L309b80.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L309b86.  v1:= temp;
  #L309b88.  if v1 == 0 then goto L309bfe;
  #L309b8c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L309b92.  v1:= temp @kind object;
  #L309b94.  if v1 != 0 then goto L309bf6;
  #L309b98.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309b9e.  v3:= temp;
  #L309ba0.  v1:= new `java.lang.StringBuilder`;
  #L309ba4.  v2:= 37I;
  #L309ba8.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L309bae.  v2:= "Element at index " @kind object;
  #L309bb2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309bb8.  v3:= v3 - v0 @kind int;
  #L309bba.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L309bc0.  v3:= " is null." @kind object;
  #L309bc4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309bca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309bd0.  v3:= temp @kind object;
  #L309bd2.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309bd8.  v1:= temp;
  #L309bda.  v1:= v1 + -1;
  #L309bde.  if v1 < v0 then goto L309bea;
  #L309be2.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L309be8.  goto L309bda;
  #L309bea.  v4:= new `java.lang.NullPointerException`;
  #L309bee.  call `<init>`(v4, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309bf4.  throw v4;
  #L309bf6.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L309bfc.  goto L309b80;
  #L309bfe.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.su` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/q/su;.a:(I)V` @AccessFlag  {
    temp;

  #L309b28.  v1:= 0I;
  #L309b2a.  throw v1;
}
procedure `e.e.a.b.f.q.hv` `b`(`e.e.a.b.f.q.su` v5 @kind this) @signature `Le/e/a/b/f/q/su;.b:()Le/e/a/b/f/q/hv;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L309a4c.  call temp:= `l`(v5) @signature `Le/e/a/b/f/q/b1;.l:()I` @kind interface;
  #L309a52.  v0:= temp;
  #L309a54.  call temp:= `h`(v0) @signature `Le/e/a/b/f/q/hv;.h:(I)Le/e/a/b/f/q/dv;` @kind static;
  #L309a5a.  v0:= temp @kind object;
  #L309a5c.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/dv;.b:()Le/e/a/b/f/q/e;` @kind virtual;
  #L309a62.  v1:= temp @kind object;
  #L309a64.  call `a`(v5, v1) @signature `Le/e/a/b/f/q/b1;.a:(Le/e/a/b/f/q/e;)V` @kind interface;
  #L309a6a.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/dv;.a:()Le/e/a/b/f/q/hv;` @kind virtual;
  #L309a70.  v0:= temp @kind object;
  #L309a72.  return v0 @kind object;
  #L309a74.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L309a76.  v1:= new `java.lang.RuntimeException`;
  #L309a7a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L309a80.  v2:= temp @kind object;
  #L309a82.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L309a88.  v2:= temp @kind object;
  #L309a8a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L309a90.  v3:= temp @kind object;
  #L309a92.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L309a98.  v3:= temp;
  #L309a9a.  v4:= new `java.lang.StringBuilder`;
  #L309a9e.  v3:= v3 + 72;
  #L309aa2.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L309aa8.  v3:= "Serializing " @kind object;
  #L309aac.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ab2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ab8.  v2:= " to a ByteString threw an IOException (should never happen)." @kind object;
  #L309abc.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ac2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309ac8.  v2:= temp @kind object;
  #L309aca.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L309ad0.  throw v1;
  catch `java.io.IOException` @[L309a4c..L309a72] goto L309a74;
}
procedure `int` `c`(`e.e.a.b.f.q.su` v1 @kind this) @signature `Le/e/a/b/f/q/su;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L309af4.  v0:= 0I;
  #L309af6.  throw v0;
}
