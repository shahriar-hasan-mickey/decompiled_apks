record `e.e.a.b.f.q.b0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@e.e.a.b.f.q.b0.a` @AccessFlag STATIC_FINAL;
global `byte`[] `@@e.e.a.b.f.q.b0.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/b0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2d4430.  v0:= "UTF-8" @kind object;
  #L2d4434.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2d443a.  v0:= temp @kind object;
  #L2d443c.  `@@e.e.a.b.f.q.b0.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2d4440.  v0:= "ISO-8859-1" @kind object;
  #L2d4444.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2d444a.  v0:= 0I;
  #L2d444c.  v1:= new `byte`[v0];
  #L2d4450.  `@@e.e.a.b.f.q.b0.b` @type ^`byte`[] := v1 @kind object;
  #L2d4454.  v1:= `@@e.e.a.b.f.q.b0.b` @type ^`byte`[] @kind object;
  #L2d4458.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2d445e.  v3:= `@@e.e.a.b.f.q.b0.b` @type ^`byte`[] @kind object;
  #L2d4462.  v1:= length @variable v3;
  #L2d4464.  v1:= new `e.e.a.b.f.q.jv`;
  #L2d4468.  v4:= 0I;
  #L2d446a.  v5:= 0I;
  #L2d446c.  v6:= 0I;
  #L2d446e.  v7:= 0I;
  #L2d4470.  v2:= v1 @kind object;
  #L2d4472.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Le/e/a/b/f/q/jv;.<init>:([BIIZLe/e/a/b/f/q/iv;)V` @kind direct;
  #L2d4478.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/q/jv;.a:(I)I` @kind virtual;
  #L2d447e.  return @kind void;
  #L2d4480.  v0:= Exception @type ^`e.e.a.b.f.q.d0` @kind object;
  #L2d4482.  v1:= new `java.lang.IllegalArgumentException`;
  #L2d4486.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2d448c.  throw v1;
  catch `e.e.a.b.f.q.d0` @[L2d4478..L2d447e] goto L2d4480;
}
procedure `int` `a`(`int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/e/a/b/f/q/b0;.a:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2d4378.  v3:= 0I;
  #L2d437a.  if v3 >= v4 then goto L2d438e;
  #L2d437e.  v1:= v1 * 31;
  #L2d4382.  v0:= v2[v3] @kind byte;
  #L2d4386.  v1:= v1 + v0 @kind int;
  #L2d4388.  v3:= v3 + 1;
  #L2d438c.  goto L2d437a;
  #L2d438e.  return v1;
}
procedure `int` `a`(`long` v2 ) @signature `Le/e/a/b/f/q/b0;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d4314.  v0:= 32I;
  #L2d4318.  v0:= v2 ^>> v0 @kind long;
  #L2d431c.  v2:= v2 ^~ v0 @kind long;
  #L2d431e.  v3:= (`int`) v2 @kind l2i;
  #L2d4320.  return v3;
}
procedure `int` `a`(`boolean` v0 ) @signature `Le/e/a/b/f/q/b0;.a:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2d4334.  if v0 == 0 then goto L2d433e;
  #L2d4338.  v0:= 1231I;
  #L2d433c.  return v0;
  #L2d433e.  v0:= 1237I;
  #L2d4342.  return v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L2d43a0.  if v0 == 0 then goto L2d43a6;
  #L2d43a4.  return v0 @kind object;
  #L2d43a6.  v0:= 0I;
  #L2d43a8.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L2d43e0.  v0:= (`e.e.a.b.f.q.b1`) v0 @kind object;
  #L2d43e4.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/b1;.a:()Le/e/a/b/f/q/a1;` @kind interface;
  #L2d43ea.  v0:= temp @kind object;
  #L2d43ec.  v1:= (`e.e.a.b.f.q.b1`) v1 @kind object;
  #L2d43f0.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/a1;.a:(Le/e/a/b/f/q/b1;)Le/e/a/b/f/q/a1;` @kind interface;
  #L2d43f6.  call temp:= `l`(v0) @signature `Le/e/a/b/f/q/a1;.l:()Le/e/a/b/f/q/b1;` @kind interface;
  #L2d43fc.  v0:= temp @kind object;
  #L2d43fe.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/q/b0;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L2d43bc.  if v0 == 0 then goto L2d43c2;
  #L2d43c0.  return v0 @kind object;
  #L2d43c2.  v0:= new `java.lang.NullPointerException`;
  #L2d43c6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d43cc.  throw v0;
}
procedure `boolean` `a`(`byte`[] v0 @kind object) @signature `Le/e/a/b/f/q/b0;.a:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2d42f8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/s2;.a:([B)Z` @kind static;
  #L2d42fe.  v0:= temp;
  #L2d4300.  return v0;
}
procedure `java.lang.String` `b`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/q/b0;.b:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d4410.  v0:= new `java.lang.String`;
  #L2d4414.  v1:= `@@e.e.a.b.f.q.b0.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2d4418.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L2d441e.  return v0 @kind object;
}
procedure `int` `c`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/q/b0;.c:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d4354.  v0:= length @variable v2;
  #L2d4356.  v1:= 0I;
  #L2d4358.  call temp:= `a`(v0, v2, v1, v0) @signature `Le/e/a/b/f/q/b0;.a:(I[BII)I` @kind static;
  #L2d435e.  v2:= temp;
  #L2d4360.  if v2 != 0 then goto L2d4366;
  #L2d4364.  v2:= 1I;
  #L2d4366.  return v2;
}
