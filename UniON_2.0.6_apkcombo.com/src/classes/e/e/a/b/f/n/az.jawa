record `e.e.a.b.f.n.az` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.az.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.az` `@@e.e.a.b.f.n.az.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.az` `@@e.e.a.b.f.n.az.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.az` `@@e.e.a.b.f.n.az.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.az`[] `@@e.e.a.b.f.n.az.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/az;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b2698.  v0:= new `e.e.a.b.f.n.az`;
  #L2b269c.  v1:= 0I;
  #L2b269e.  v2:= "UNKNOWN_CONTOURS" @kind object;
  #L2b26a2.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/az;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b26a8.  `@@e.e.a.b.f.n.az.c` @type ^`e.e.a.b.f.n.az` := v0 @kind object;
  #L2b26ac.  v0:= new `e.e.a.b.f.n.az`;
  #L2b26b0.  v2:= 1I;
  #L2b26b2.  v3:= "NO_CONTOURS" @kind object;
  #L2b26b6.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/az;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b26bc.  `@@e.e.a.b.f.n.az.d` @type ^`e.e.a.b.f.n.az` := v0 @kind object;
  #L2b26c0.  v0:= new `e.e.a.b.f.n.az`;
  #L2b26c4.  v3:= 2I;
  #L2b26c6.  v4:= "ALL_CONTOURS" @kind object;
  #L2b26ca.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/az;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2b26d0.  `@@e.e.a.b.f.n.az.e` @type ^`e.e.a.b.f.n.az` := v0 @kind object;
  #L2b26d4.  v0:= 3I;
  #L2b26d6.  v0:= new `e.e.a.b.f.n.az`[v0];
  #L2b26da.  v4:= `@@e.e.a.b.f.n.az.c` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b26de.  v0[v1]:= v4 @kind object;
  #L2b26e2.  v1:= `@@e.e.a.b.f.n.az.d` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b26e6.  v0[v2]:= v1 @kind object;
  #L2b26ea.  v1:= `@@e.e.a.b.f.n.az.e` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b26ee.  v0[v3]:= v1 @kind object;
  #L2b26f2.  `@@e.e.a.b.f.n.az.f` @type ^`e.e.a.b.f.n.az`[] := v0 @kind object;
  #L2b26f6.  v0:= new `e.e.a.b.f.n.yy`;
  #L2b26fa.  call `<init>`(v0) @signature `Le/e/a/b/f/n/yy;.<init>:()V` @kind direct;
  #L2b2700.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.az` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/az;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b2714.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b271a.  v0.`e.e.a.b.f.n.az.b` @type ^`int` := v3;
  #L2b271e.  return @kind void;
}
procedure `e.e.a.b.f.n.az` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/az;.a:(I)Le/e/a/b/f/n/az;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b2594.  if v1 == 0 then goto L2b25b4;
  #L2b2598.  v0:= 1I;
  #L2b259a.  if v1 == v0 then goto L2b25ae;
  #L2b259e.  v0:= 2I;
  #L2b25a0.  if v1 == v0 then goto L2b25a8;
  #L2b25a4.  v1:= 0I;
  #L2b25a6.  return v1 @kind object;
  #L2b25a8.  v1:= `@@e.e.a.b.f.n.az.e` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b25ac.  return v1 @kind object;
  #L2b25ae.  v1:= `@@e.e.a.b.f.n.az.d` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b25b2.  return v1 @kind object;
  #L2b25b4.  v1:= `@@e.e.a.b.f.n.az.c` @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b25b8.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/az;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b257c.  v0:= `@@e.e.a.b.f.n.zy.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2b2580.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.az`[] `values`() @signature `Le/e/a/b/f/n/az;.values:()[Le/e/a/b/f/n/az;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b25cc.  v0:= `@@e.e.a.b.f.n.az.f` @type ^`e.e.a.b.f.n.az`[] @kind object;
  #L2b25d0.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/az;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b25d6.  v0:= temp @kind object;
  #L2b25d8.  v0:= (`e.e.a.b.f.n.az`[]) v0 @kind object;
  #L2b25dc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.az` v2 @kind this) @signature `Le/e/a/b/f/n/az;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b2608.  v0:= new `java.lang.StringBuilder`;
  #L2b260c.  v1:= "<" @kind object;
  #L2b2610.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2616.  v1:= constclass @type ^`e.e.a.b.f.n.az` @kind object;
  #L2b261a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b2620.  v1:= temp @kind object;
  #L2b2622.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2628.  v1:= 64I;
  #L2b262c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2632.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2b2638.  v1:= temp;
  #L2b263a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2b2640.  v1:= temp @kind object;
  #L2b2642.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2648.  v1:= " number=" @kind object;
  #L2b264c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2652.  v1:= v2.`e.e.a.b.f.n.az.b` @type ^`int`;
  #L2b2656.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b265c.  v1:= " name=" @kind object;
  #L2b2660.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2666.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2b266c.  v1:= temp @kind object;
  #L2b266e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2674.  v1:= 62I;
  #L2b2678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b267e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b2684.  v0:= temp @kind object;
  #L2b2686.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.az` v1 @kind this) @signature `Le/e/a/b/f/n/az;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b25f0.  v0:= v1.`e.e.a.b.f.n.az.b` @type ^`int`;
  #L2b25f4.  return v0;
}
