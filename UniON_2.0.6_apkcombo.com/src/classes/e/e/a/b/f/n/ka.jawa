record `e.e.a.b.f.n.ka` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int`[] `@@e.e.a.b.f.n.ka.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/ka;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2944a8.  call temp:= `a`() @signature `Le/e/a/b/f/n/s1;.a:()[I` @kind static;
  #L2944ae.  v0:= 7I;
  #L2944b0.  v1:= new `int`[v0];
  #L2944b4.  `@@e.e.a.b.f.n.ka.a` @type ^`int`[] := v1 @kind object;
  #L2944b8.  v1:= 1I;
  #L2944ba.  v2:= 3I;
  #L2944bc.  v3:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944c0.  v3[v2]:= v1;
  #L2944c4.  v3:= 2I;
  #L2944c6.  v4:= 4I;
  #L2944c8.  v5:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944cc.  v5[v4]:= v3;
  #L2944d0.  v5:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944d4.  v5[v3]:= v2;
  #L2944d8.  v2:= 5I;
  #L2944da.  v3:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944de.  v3[v2]:= v4;
  #L2944e2.  v3:= 6I;
  #L2944e4.  v4:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944e8.  v4[v3]:= v2;
  #L2944ec.  v2:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944f0.  v4:= 0I;
  #L2944f2.  v2[v4]:= v3;
  #L2944f6.  v2:= `@@e.e.a.b.f.n.ka.a` @type ^`int`[] @kind object;
  #L2944fa.  v2[v1]:= v0;
  #L2944fe.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L2944bc..L2944c4] goto L2944c4;
  catch `java.lang.NoSuchFieldError` @[L2944c8..L2944d0] goto L2944d0;
  catch `java.lang.NoSuchFieldError` @[L2944d0..L2944d8] goto L2944d8;
  catch `java.lang.NoSuchFieldError` @[L2944da..L2944e2] goto L2944e2;
  catch `java.lang.NoSuchFieldError` @[L2944e4..L2944ec] goto L2944ec;
  catch `java.lang.NoSuchFieldError` @[L2944ec..L2944f6] goto L2944f6;
  catch `java.lang.NoSuchFieldError` @[L2944f6..L2944fe] goto L2944fe;
}
