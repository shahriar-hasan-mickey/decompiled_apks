record `e.e.a.b.f.n.rt` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.tt` @kind class {
  `e.e.a.b.f.n.st` `e.e.a.b.f.n.rt.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.n.rt` v0 @kind this, `e.e.a.b.f.n.st` v1 @kind object, `e.e.a.b.f.n.ut` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Le/e/a/b/f/n/rt;.<init>:(Le/e/a/b/f/n/st;Le/e/a/b/f/n/ut;Ljava/lang/CharSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2aaf34.  v0.`e.e.a.b.f.n.rt.g` @type ^`e.e.a.b.f.n.st` := v1 @kind object;
  #L2aaf38.  call `<init>`(v0, v2, v3) @signature `Le/e/a/b/f/n/tt;.<init>:(Le/e/a/b/f/n/ut;Ljava/lang/CharSequence;)V` @kind direct;
  #L2aaf3e.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.n.rt` v5 @kind this, `int` v6 ) @signature `Le/e/a/b/f/n/rt;.a:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2aaea0.  v0:= v5.`e.e.a.b.f.n.rt.g` @type ^`e.e.a.b.f.n.st` @kind object;
  #L2aaea4.  v0:= v0.`e.e.a.b.f.n.st.a` @type ^`java.lang.String` @kind object;
  #L2aaea8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2aaeae.  v0:= temp;
  #L2aaeb0.  v1:= v5.`e.e.a.b.f.n.tt.d` @type ^`java.lang.CharSequence` @kind object;
  #L2aaeb4.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2aaeba.  v1:= temp;
  #L2aaebc.  v1:= v1 - v0 @kind int;
  #L2aaebe.  if v6 > v1 then goto L2aaefa;
  #L2aaec2.  v2:= 0I;
  #L2aaec4.  if v2 >= v0 then goto L2aaef8;
  #L2aaec8.  v3:= v5.`e.e.a.b.f.n.tt.d` @type ^`java.lang.CharSequence` @kind object;
  #L2aaecc.  v4:= v2 + v6 @kind int;
  #L2aaed0.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2aaed6.  v3:= temp;
  #L2aaed8.  v4:= v5.`e.e.a.b.f.n.rt.g` @type ^`e.e.a.b.f.n.st` @kind object;
  #L2aaedc.  v4:= v4.`e.e.a.b.f.n.st.a` @type ^`java.lang.String` @kind object;
  #L2aaee0.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2aaee6.  v4:= temp;
  #L2aaee8.  if v3 == v4 then goto L2aaef2;
  #L2aaeec.  v6:= v6 + 1;
  #L2aaef0.  goto L2aaebe;
  #L2aaef2.  v2:= v2 + 1;
  #L2aaef6.  goto L2aaec4;
  #L2aaef8.  return v6;
  #L2aaefa.  v6:= -1I;
  #L2aaefc.  return v6;
}
procedure `int` `b`(`e.e.a.b.f.n.rt` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/n/rt;.b:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aaf10.  v0:= v1.`e.e.a.b.f.n.rt.g` @type ^`e.e.a.b.f.n.st` @kind object;
  #L2aaf14.  v0:= v0.`e.e.a.b.f.n.st.a` @type ^`java.lang.String` @kind object;
  #L2aaf18.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2aaf1e.  v0:= temp;
  #L2aaf20.  v2:= v2 + v0 @kind int;
  #L2aaf22.  return v2;
}
