record `e.e.a.b.f.q.k0` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.a.b.f.q.tu` @kind class, `java.util.RandomAccess` @kind interface, `e.e.a.b.f.q.l0` @kind interface {
  `java.util.List` `e.e.a.b.f.q.k0.c` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.q.k0` `@@e.e.a.b.f.q.k0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/k0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d4d30.  v0:= new `e.e.a.b.f.q.k0`;
  #L2d4d34.  v1:= 10I;
  #L2d4d38.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/k0;.<init>:(I)V` @kind direct;
  #L2d4d3e.  `@@e.e.a.b.f.q.k0.d` @type ^`e.e.a.b.f.q.k0` := v0 @kind object;
  #L2d4d42.  v0:= `@@e.e.a.b.f.q.k0.d` @type ^`e.e.a.b.f.q.k0` @kind object;
  #L2d4d46.  call `zzb`(v0) @signature `Le/e/a/b/f/q/tu;.zzb:()V` @kind virtual;
  #L2d4d4c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.k0` v1 @kind this) @signature `Le/e/a/b/f/q/k0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d4d60.  v0:= 10I;
  #L2d4d64.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/q/k0;.<init>:(I)V` @kind direct;
  #L2d4d6a.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/q/k0;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d4d7c.  v0:= new `java.util.ArrayList`;
  #L2d4d80.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2d4d86.  call `<init>`(v1) @signature `Le/e/a/b/f/q/tu;.<init>:()V` @kind direct;
  #L2d4d8c.  v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` := v0 @kind object;
  #L2d4d90.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.k0` v0 @kind this, `java.util.ArrayList` v1 @kind object) @signature `Le/e/a/b/f/q/k0;.<init>:(Ljava/util/ArrayList;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d4da4.  call `<init>`(v0) @signature `Le/e/a/b/f/q/tu;.<init>:()V` @kind direct;
  #L2d4daa.  v0.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` := v1 @kind object;
  #L2d4dae.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/k0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d4cc8.  v0:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L2d4ccc.  if v0 == 0 then goto L2d4cd6;
  #L2d4cd0.  v1:= (`java.lang.String`) v1 @kind object;
  #L2d4cd4.  return v1 @kind object;
  #L2d4cd6.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.q.hv` @kind boolean;
  #L2d4cda.  if v0 == 0 then goto L2d4cf0;
  #L2d4cde.  v1:= (`e.e.a.b.f.q.hv`) v1 @kind object;
  #L2d4ce2.  v0:= `@@e.e.a.b.f.q.b0.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2d4ce6.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/q/hv;.b:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L2d4cec.  v1:= temp @kind object;
  #L2d4cee.  return v1 @kind object;
  #L2d4cf0.  v1:= (`byte`[]) v1 @kind object;
  #L2d4cf4.  call temp:= `b`(v1) @signature `Le/e/a/b/f/q/b0;.b:([B)Ljava/lang/String;` @kind static;
  #L2d4cfa.  v1:= temp @kind object;
  #L2d4cfc.  return v1 @kind object;
}
procedure `void` `add`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/k0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2d4dc0.  v3:= (`java.lang.String`) v3 @kind object;
  #L2d4dc4.  call `d`(v1) @signature `Le/e/a/b/f/q/tu;.d:()V` @kind virtual;
  #L2d4dca.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4dce.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L2d4dd4.  v2:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L2d4dd8.  v2:= v2 + 1;
  #L2d4ddc.  v1.`java.util.AbstractList.modCount` @type ^`int` := v2;
  #L2d4de0.  return @kind void;
}
procedure `boolean` `addAll`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Le/e/a/b/f/q/k0;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4aa8.  call `d`(v1) @signature `Le/e/a/b/f/q/tu;.d:()V` @kind virtual;
  #L2d4aae.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.q.l0` @kind boolean;
  #L2d4ab2.  if v0 == 0 then goto L2d4ac2;
  #L2d4ab6.  v3:= (`e.e.a.b.f.q.l0`) v3 @kind object;
  #L2d4aba.  call temp:= `b`(v3) @signature `Le/e/a/b/f/q/l0;.b:()Ljava/util/List;` @kind interface;
  #L2d4ac0.  v3:= temp @kind object;
  #L2d4ac2.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4ac6.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L2d4acc.  v2:= temp;
  #L2d4ace.  v3:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L2d4ad2.  v3:= v3 + 1;
  #L2d4ad6.  v1.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L2d4ada.  return v2;
}
procedure `boolean` `addAll`(`e.e.a.b.f.q.k0` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/q/k0;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4aec.  call temp:= `size`(v1) @signature `Le/e/a/b/f/q/k0;.size:()I` @kind virtual;
  #L2d4af2.  v0:= temp;
  #L2d4af4.  call temp:= `addAll`(v1, v0, v2) @signature `Le/e/a/b/f/q/k0;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L2d4afa.  v2:= temp;
  #L2d4afc.  return v2;
}
procedure `java.util.List` `b`(`e.e.a.b.f.q.k0` v1 @kind this) @signature `Le/e/a/b/f/q/k0;.b:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4d10.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4d14.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2d4d1a.  v0:= temp @kind object;
  #L2d4d1c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/q/k0;.c:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4c28.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4c2c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d4c32.  v2:= temp @kind object;
  #L2d4c34.  return v2 @kind object;
}
procedure `void` `clear`(`e.e.a.b.f.q.k0` v1 @kind this) @signature `Le/e/a/b/f/q/k0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4df4.  call `d`(v1) @signature `Le/e/a/b/f/q/tu;.d:()V` @kind virtual;
  #L2d4dfa.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4dfe.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2d4e04.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L2d4e08.  v0:= v0 + 1;
  #L2d4e0c.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L2d4e10.  return @kind void;
}
procedure `e.e.a.b.f.q.a0` `e`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/q/k0;.e:(I)Le/e/a/b/f/q/a0;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2d4b10.  call temp:= `size`(v1) @signature `Le/e/a/b/f/q/k0;.size:()I` @kind virtual;
  #L2d4b16.  v0:= temp;
  #L2d4b18.  if v2 < v0 then goto L2d4b3c;
  #L2d4b1c.  v0:= new `java.util.ArrayList`;
  #L2d4b20.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2d4b26.  v2:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4b2a.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L2d4b30.  v2:= new `e.e.a.b.f.q.k0`;
  #L2d4b34.  call `<init>`(v2, v0) @signature `Le/e/a/b/f/q/k0;.<init>:(Ljava/util/ArrayList;)V` @kind direct;
  #L2d4b3a.  return v2 @kind object;
  #L2d4b3c.  v2:= new `java.lang.IllegalArgumentException`;
  #L2d4b40.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2d4b46.  throw v2;
}
procedure `java.lang.Object` `get`(`e.e.a.b.f.q.k0` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/q/k0;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2d4ba4.  call temp:= `h`(v0, v1) @signature `Le/e/a/b/f/q/k0;.h:(I)Ljava/lang/String;` @kind virtual;
  #L2d4baa.  v1:= temp @kind object;
  #L2d4bac.  return v1 @kind object;
}
procedure `java.lang.String` `h`(`e.e.a.b.f.q.k0` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/q/k0;.h:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d4c48.  v0:= v2.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4c4c.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d4c52.  v0:= temp @kind object;
  #L2d4c54.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L2d4c58.  if v1 == 0 then goto L2d4c62;
  #L2d4c5c.  v0:= (`java.lang.String`) v0 @kind object;
  #L2d4c60.  return v0 @kind object;
  #L2d4c62.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.q.hv` @kind boolean;
  #L2d4c66.  if v1 == 0 then goto L2d4c92;
  #L2d4c6a.  v0:= (`e.e.a.b.f.q.hv`) v0 @kind object;
  #L2d4c6e.  v1:= `@@e.e.a.b.f.q.b0.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2d4c72.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/q/hv;.b:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L2d4c78.  v1:= temp @kind object;
  #L2d4c7a.  call temp:= `v`(v0) @signature `Le/e/a/b/f/q/hv;.v:()Z` @kind virtual;
  #L2d4c80.  v0:= temp;
  #L2d4c82.  if v0 == 0 then goto L2d4c90;
  #L2d4c86.  v0:= v2.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4c8a.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2d4c90.  return v1 @kind object;
  #L2d4c92.  v0:= (`byte`[]) v0 @kind object;
  #L2d4c96.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/b0;.b:([B)Ljava/lang/String;` @kind static;
  #L2d4c9c.  v1:= temp @kind object;
  #L2d4c9e.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/b0;.a:([B)Z` @kind static;
  #L2d4ca4.  v0:= temp;
  #L2d4ca6.  if v0 == 0 then goto L2d4cb4;
  #L2d4caa.  v0:= v2.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4cae.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2d4cb4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/q/k0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2d4bc0.  call `d`(v1) @signature `Le/e/a/b/f/q/tu;.d:()V` @kind virtual;
  #L2d4bc6.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4bca.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2d4bd0.  v2:= temp @kind object;
  #L2d4bd2.  v0:= v1.`java.util.AbstractList.modCount` @type ^`int`;
  #L2d4bd6.  v0:= v0 + 1;
  #L2d4bda.  v1.`java.util.AbstractList.modCount` @type ^`int` := v0;
  #L2d4bde.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/k0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d4be4.  v2:= temp @kind object;
  #L2d4be6.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`e.e.a.b.f.q.k0` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/q/k0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2d4bf8.  v3:= (`java.lang.String`) v3 @kind object;
  #L2d4bfc.  call `d`(v1) @signature `Le/e/a/b/f/q/tu;.d:()V` @kind virtual;
  #L2d4c02.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4c06.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2d4c0c.  v2:= temp @kind object;
  #L2d4c0e.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/k0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d4c14.  v2:= temp @kind object;
  #L2d4c16.  return v2 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.q.k0` v1 @kind this) @signature `Le/e/a/b/f/q/k0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4b84.  v0:= v1.`e.e.a.b.f.q.k0.c` @type ^`java.util.List` @kind object;
  #L2d4b88.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d4b8e.  v0:= temp;
  #L2d4b90.  return v0;
}
procedure `e.e.a.b.f.q.l0` `u`(`e.e.a.b.f.q.k0` v1 @kind this) @signature `Le/e/a/b/f/q/k0;.u:()Le/e/a/b/f/q/l0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d4b58.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/q/tu;.zza:()Z` @kind virtual;
  #L2d4b5e.  v0:= temp;
  #L2d4b60.  if v0 == 0 then goto L2d4b70;
  #L2d4b64.  v0:= new `e.e.a.b.f.q.h2`;
  #L2d4b68.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/h2;.<init>:(Le/e/a/b/f/q/l0;)V` @kind direct;
  #L2d4b6e.  return v0 @kind object;
  #L2d4b70.  return v1 @kind object;
}
