record `e.e.a.b.f.u.l4` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.u.w6` `e.e.a.b.f.u.l4.a` @AccessFlag FINAL;
  `boolean` `e.e.a.b.f.u.l4.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.u.l4.c` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.u.l4` `@@e.e.a.b.f.u.l4.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/l4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32b7c8.  v0:= new `e.e.a.b.f.u.l4`;
  #L32b7cc.  v1:= 1I;
  #L32b7ce.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/l4;.<init>:(Z)V` @kind direct;
  #L32b7d4.  `@@e.e.a.b.f.u.l4.d` @type ^`e.e.a.b.f.u.l4` := v0 @kind object;
  #L32b7d8.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.l4` v1 @kind this) @signature `Le/e/a/b/f/u/l4;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L32b7ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32b7f2.  v0:= 16I;
  #L32b7f6.  call temp:= `b`(v0) @signature `Le/e/a/b/f/u/w6;.b:(I)Le/e/a/b/f/u/w6;` @kind static;
  #L32b7fc.  v0:= temp @kind object;
  #L32b7fe.  v1.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` := v0 @kind object;
  #L32b802.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.l4` v0 @kind this, `e.e.a.b.f.u.w6` v1 @kind object) @signature `Le/e/a/b/f/u/l4;.<init>:(Le/e/a/b/f/u/w6;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32b83c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32b842.  v0.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` := v1 @kind object;
  #L32b846.  call `a`(v0) @signature `Le/e/a/b/f/u/l4;.a:()V` @kind virtual;
  #L32b84c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.l4` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/u/l4;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32b814.  v1:= 0I;
  #L32b816.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/w6;.b:(I)Le/e/a/b/f/u/w6;` @kind static;
  #L32b81c.  v1:= temp @kind object;
  #L32b81e.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/l4;.<init>:(Le/e/a/b/f/u/w6;)V` @kind direct;
  #L32b824.  call `a`(v0) @signature `Le/e/a/b/f/u/l4;.a:()V` @kind virtual;
  #L32b82a.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.u.a8` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;ILjava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L32b1b4.  call temp:= `e`(v2) @signature `Le/e/a/b/f/u/a4;.e:(I)I` @kind static;
  #L32b1ba.  v2:= temp;
  #L32b1bc.  v0:= `@@e.e.a.b.f.u.a8.m` @type ^`e.e.a.b.f.u.a8` @kind object;
  #L32b1c0.  if v1 != v0 then goto L32b1d4;
  #L32b1c4.  v0:= v3 @kind object;
  #L32b1c6.  v0:= (`e.e.a.b.f.u.b6`) v0 @kind object;
  #L32b1ca.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/w4;.a:(Le/e/a/b/f/u/b6;)Z` @kind static;
  #L32b1d0.  v2:= v2 ^< 1;
  #L32b1d4.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;Ljava/lang/Object;)I` @kind static;
  #L32b1da.  v1:= temp;
  #L32b1dc.  v2:= v2 + v1 @kind int;
  #L32b1de.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.u.a8` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32b1f0.  v0:= `@@e.e.a.b.f.u.k4.b` @type ^`int`[] @kind object;
  #L32b1f4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L32b1fa.  v1:= temp;
  #L32b1fc.  v1:= v0[v1];
  #L32b200.  goto L32b3e4;
  #L32b206.  v1:= new `java.lang.RuntimeException`;
  #L32b20a.  v2:= "There is no way to get here, but the compiler thinks otherwise." @kind object;
  #L32b20e.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b214.  throw v1;
  #L32b216.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.u.v4` @kind boolean;
  #L32b21a.  if v1 == 0 then goto L32b234;
  #L32b21e.  v2:= (`e.e.a.b.f.u.v4`) v2 @kind object;
  #L32b222.  call temp:= `zza`(v2) @signature `Le/e/a/b/f/u/v4;.zza:()I` @kind interface;
  #L32b228.  v1:= temp;
  #L32b22a.  call temp:= `k`(v1) @signature `Le/e/a/b/f/u/a4;.k:(I)I` @kind static;
  #L32b230.  v1:= temp;
  #L32b232.  return v1;
  #L32b234.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b238.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b23e.  v1:= temp;
  #L32b240.  call temp:= `k`(v1) @signature `Le/e/a/b/f/u/a4;.k:(I)I` @kind static;
  #L32b246.  v1:= temp;
  #L32b248.  return v1;
  #L32b24a.  v2:= (`java.lang.Long`) v2 @kind object;
  #L32b24e.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L32b254.  v1:= temp @kind wide;
  #L32b256.  call temp:= `f`(v1) @signature `Le/e/a/b/f/u/a4;.f:(J)I` @kind static;
  #L32b25c.  v1:= temp;
  #L32b25e.  return v1;
  #L32b260.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b264.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b26a.  v1:= temp;
  #L32b26c.  call temp:= `h`(v1) @signature `Le/e/a/b/f/u/a4;.h:(I)I` @kind static;
  #L32b272.  v1:= temp;
  #L32b274.  return v1;
  #L32b276.  v2:= (`java.lang.Long`) v2 @kind object;
  #L32b27a.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L32b280.  v1:= temp @kind wide;
  #L32b282.  call temp:= `h`(v1) @signature `Le/e/a/b/f/u/a4;.h:(J)I` @kind static;
  #L32b288.  v1:= temp;
  #L32b28a.  return v1;
  #L32b28c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b290.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b296.  v1:= temp;
  #L32b298.  call temp:= `j`(v1) @signature `Le/e/a/b/f/u/a4;.j:(I)I` @kind static;
  #L32b29e.  v1:= temp;
  #L32b2a0.  return v1;
  #L32b2a2.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b2a6.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b2ac.  v1:= temp;
  #L32b2ae.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(I)I` @kind static;
  #L32b2b4.  v1:= temp;
  #L32b2b6.  return v1;
  #L32b2b8.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.u.l3` @kind boolean;
  #L32b2bc.  if v1 == 0 then goto L32b2ce;
  #L32b2c0.  v2:= (`e.e.a.b.f.u.l3`) v2 @kind object;
  #L32b2c4.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/l3;)I` @kind static;
  #L32b2ca.  v1:= temp;
  #L32b2cc.  return v1;
  #L32b2ce.  v2:= (`byte`[]) v2 @kind object;
  #L32b2d2.  call temp:= `b`(v2) @signature `Le/e/a/b/f/u/a4;.b:([B)I` @kind static;
  #L32b2d8.  v1:= temp;
  #L32b2da.  return v1;
  #L32b2dc.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.u.l3` @kind boolean;
  #L32b2e0.  if v1 == 0 then goto L32b2f2;
  #L32b2e4.  v2:= (`e.e.a.b.f.u.l3`) v2 @kind object;
  #L32b2e8.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/l3;)I` @kind static;
  #L32b2ee.  v1:= temp;
  #L32b2f0.  return v1;
  #L32b2f2.  v2:= (`java.lang.String`) v2 @kind object;
  #L32b2f6.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:(Ljava/lang/String;)I` @kind static;
  #L32b2fc.  v1:= temp;
  #L32b2fe.  return v1;
  #L32b300.  v1:= instanceof @variable v2 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32b304.  if v1 == 0 then goto L32b316;
  #L32b308.  v2:= (`e.e.a.b.f.u.g5`) v2 @kind object;
  #L32b30c.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/k5;)I` @kind static;
  #L32b312.  v1:= temp;
  #L32b314.  return v1;
  #L32b316.  v2:= (`e.e.a.b.f.u.b6`) v2 @kind object;
  #L32b31a.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/a4;.a:(Le/e/a/b/f/u/b6;)I` @kind static;
  #L32b320.  v1:= temp;
  #L32b322.  return v1;
  #L32b324.  v2:= (`e.e.a.b.f.u.b6`) v2 @kind object;
  #L32b328.  call temp:= `b`(v2) @signature `Le/e/a/b/f/u/a4;.b:(Le/e/a/b/f/u/b6;)I` @kind static;
  #L32b32e.  v1:= temp;
  #L32b330.  return v1;
  #L32b332.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L32b336.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L32b33c.  v1:= temp;
  #L32b33e.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/a4;.b:(Z)I` @kind static;
  #L32b344.  v1:= temp;
  #L32b346.  return v1;
  #L32b348.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b34c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b352.  v1:= temp;
  #L32b354.  call temp:= `i`(v1) @signature `Le/e/a/b/f/u/a4;.i:(I)I` @kind static;
  #L32b35a.  v1:= temp;
  #L32b35c.  return v1;
  #L32b35e.  v2:= (`java.lang.Long`) v2 @kind object;
  #L32b362.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L32b368.  v1:= temp @kind wide;
  #L32b36a.  call temp:= `g`(v1) @signature `Le/e/a/b/f/u/a4;.g:(J)I` @kind static;
  #L32b370.  v1:= temp;
  #L32b372.  return v1;
  #L32b374.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L32b378.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32b37e.  v1:= temp;
  #L32b380.  call temp:= `f`(v1) @signature `Le/e/a/b/f/u/a4;.f:(I)I` @kind static;
  #L32b386.  v1:= temp;
  #L32b388.  return v1;
  #L32b38a.  v2:= (`java.lang.Long`) v2 @kind object;
  #L32b38e.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L32b394.  v1:= temp @kind wide;
  #L32b396.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/a4;.e:(J)I` @kind static;
  #L32b39c.  v1:= temp;
  #L32b39e.  return v1;
  #L32b3a0.  v2:= (`java.lang.Long`) v2 @kind object;
  #L32b3a4.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L32b3aa.  v1:= temp @kind wide;
  #L32b3ac.  call temp:= `d`(v1) @signature `Le/e/a/b/f/u/a4;.d:(J)I` @kind static;
  #L32b3b2.  v1:= temp;
  #L32b3b4.  return v1;
  #L32b3b6.  v2:= (`java.lang.Float`) v2 @kind object;
  #L32b3ba.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L32b3c0.  v1:= temp;
  #L32b3c2.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/a4;.b:(F)I` @kind static;
  #L32b3c8.  v1:= temp;
  #L32b3ca.  return v1;
  #L32b3cc.  v2:= (`java.lang.Double`) v2 @kind object;
  #L32b3d0.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L32b3d6.  v1:= temp @kind wide;
  #L32b3d8.  call temp:= `b`(v1) @signature `Le/e/a/b/f/u/a4;.b:(D)I` @kind static;
  #L32b3de.  v1:= temp;
  #L32b3e0.  return v1;
  #L32b3e2.  
  #L32b3e4.  switch v1
                  | 1 => goto L32b3cc
                  | 2 => goto L32b3b6
                  | 3 => goto L32b3a0
                  | 4 => goto L32b38a
                  | 5 => goto L32b374
                  | 6 => goto L32b35e
                  | 7 => goto L32b348
                  | 8 => goto L32b332
                  | 9 => goto L32b324
                  | 10 => goto L32b300
                  | 11 => goto L32b2dc
                  | 12 => goto L32b2b8
                  | 13 => goto L32b2a2
                  | 14 => goto L32b28c
                  | 15 => goto L32b276
                  | 16 => goto L32b260
                  | 17 => goto L32b24a
                  | 18 => goto L32b216
                  | else => goto L32b206;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32b6e0.  v0:= instanceof @variable v3 @type ^`e.e.a.b.f.u.j6` @kind boolean;
  #L32b6e4.  if v0 == 0 then goto L32b6f6;
  #L32b6e8.  v3:= (`e.e.a.b.f.u.j6`) v3 @kind object;
  #L32b6ec.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/u/j6;.zza:()Le/e/a/b/f/u/j6;` @kind interface;
  #L32b6f2.  v3:= temp @kind object;
  #L32b6f4.  return v3 @kind object;
  #L32b6f6.  v0:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L32b6fa.  if v0 == 0 then goto L32b714;
  #L32b6fe.  v3:= (`byte`[]) v3 @kind object;
  #L32b702.  v0:= length @variable v3;
  #L32b704.  v0:= new `byte`[v0];
  #L32b708.  v1:= length @variable v3;
  #L32b70a.  v2:= 0I;
  #L32b70c.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L32b712.  return v0 @kind object;
  #L32b714.  return v3 @kind object;
}
procedure `boolean` `a`(`java.util.Map$Entry` v4 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b034.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b03a.  v0:= temp @kind object;
  #L32b03c.  v0:= (`e.e.a.b.f.u.n4`) v0 @kind object;
  #L32b040.  call temp:= `d`(v0) @signature `Le/e/a/b/f/u/n4;.d:()Le/e/a/b/f/u/d8;` @kind interface;
  #L32b046.  v1:= temp @kind object;
  #L32b048.  v2:= `@@e.e.a.b.f.u.d8.j` @type ^`e.e.a.b.f.u.d8` @kind object;
  #L32b04c.  v3:= 1I;
  #L32b04e.  if v1 != v2 then goto L32b0ce;
  #L32b052.  call temp:= `c`(v0) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32b058.  v0:= temp;
  #L32b05a.  v1:= 0I;
  #L32b05c.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32b062.  v4:= temp @kind object;
  #L32b064.  if v0 == 0 then goto L32b09a;
  #L32b068.  v4:= (`java.util.List`) v4 @kind object;
  #L32b06c.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b072.  v4:= temp @kind object;
  #L32b074.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b07a.  v0:= temp;
  #L32b07c.  if v0 == 0 then goto L32b0ce;
  #L32b080.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b086.  v0:= temp @kind object;
  #L32b088.  v0:= (`e.e.a.b.f.u.b6`) v0 @kind object;
  #L32b08c.  call temp:= `h`(v0) @signature `Le/e/a/b/f/u/d6;.h:()Z` @kind interface;
  #L32b092.  v0:= temp;
  #L32b094.  if v0 != 0 then goto L32b074;
  #L32b098.  return v1;
  #L32b09a.  v0:= instanceof @variable v4 @type ^`e.e.a.b.f.u.b6` @kind boolean;
  #L32b09e.  if v0 == 0 then goto L32b0b4;
  #L32b0a2.  v4:= (`e.e.a.b.f.u.b6`) v4 @kind object;
  #L32b0a6.  call temp:= `h`(v4) @signature `Le/e/a/b/f/u/d6;.h:()Z` @kind interface;
  #L32b0ac.  v4:= temp;
  #L32b0ae.  if v4 != 0 then goto L32b0ce;
  #L32b0b2.  return v1;
  #L32b0b4.  v4:= instanceof @variable v4 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32b0b8.  if v4 == 0 then goto L32b0be;
  #L32b0bc.  return v3;
  #L32b0be.  v4:= new `java.lang.IllegalArgumentException`;
  #L32b0c2.  v0:= "Wrong object type used with protocol message reflection." @kind object;
  #L32b0c6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b0cc.  throw v4;
  #L32b0ce.  return v3;
}
procedure `void` `b`(`e.e.a.b.f.u.l4` v4 @kind this, `java.util.Map$Entry` v5 @kind object) @signature `Le/e/a/b/f/u/l4;.b:(Ljava/util/Map$Entry;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b9ec.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b9f2.  v0:= temp @kind object;
  #L32b9f4.  v0:= (`e.e.a.b.f.u.n4`) v0 @kind object;
  #L32b9f8.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32b9fe.  v5:= temp @kind object;
  #L32ba00.  v1:= instanceof @variable v5 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32ba04.  v2:= 0I;
  #L32ba06.  if v1 != 0 then goto L32baf6;
  #L32ba0a.  call temp:= `c`(v0) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32ba10.  v1:= temp;
  #L32ba12.  if v1 == 0 then goto L32ba6e;
  #L32ba16.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;)Ljava/lang/Object;` @kind virtual;
  #L32ba1c.  v1:= temp @kind object;
  #L32ba1e.  if v1 != 0 then goto L32ba2c;
  #L32ba22.  v1:= new `java.util.ArrayList`;
  #L32ba26.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32ba2c.  v5:= (`java.util.List`) v5 @kind object;
  #L32ba30.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32ba36.  v5:= temp @kind object;
  #L32ba38.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32ba3e.  v2:= temp;
  #L32ba40.  if v2 == 0 then goto L32ba62;
  #L32ba44.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32ba4a.  v2:= temp @kind object;
  #L32ba4c.  v3:= v1 @kind object;
  #L32ba4e.  v3:= (`java.util.List`) v3 @kind object;
  #L32ba52.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32ba58.  v2:= temp @kind object;
  #L32ba5a.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32ba60.  goto L32ba38;
  #L32ba62.  v5:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32ba66.  call temp:= `a`(v5, v0, v1) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32ba6c.  return @kind void;
  #L32ba6e.  call temp:= `d`(v0) @signature `Le/e/a/b/f/u/n4;.d:()Le/e/a/b/f/u/d8;` @kind interface;
  #L32ba74.  v1:= temp @kind object;
  #L32ba76.  v3:= `@@e.e.a.b.f.u.d8.j` @type ^`e.e.a.b.f.u.d8` @kind object;
  #L32ba7a.  if v1 != v3 then goto L32bae2;
  #L32ba7e.  call temp:= `a`(v4, v0) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;)Ljava/lang/Object;` @kind virtual;
  #L32ba84.  v1:= temp @kind object;
  #L32ba86.  if v1 != 0 then goto L32ba9e;
  #L32ba8a.  v1:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32ba8e.  call temp:= `a`(v5) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32ba94.  v5:= temp @kind object;
  #L32ba96.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32ba9c.  return @kind void;
  #L32ba9e.  v3:= instanceof @variable v1 @type ^`e.e.a.b.f.u.j6` @kind boolean;
  #L32baa2.  if v3 != 0 then goto L32bad2;
  #L32baa6.  v1:= (`e.e.a.b.f.u.b6`) v1 @kind object;
  #L32baaa.  call temp:= `c`(v1) @signature `Le/e/a/b/f/u/b6;.c:()Le/e/a/b/f/u/e6;` @kind interface;
  #L32bab0.  v1:= temp @kind object;
  #L32bab2.  v5:= (`e.e.a.b.f.u.b6`) v5 @kind object;
  #L32bab6.  call temp:= `a`(v0, v1, v5) @signature `Le/e/a/b/f/u/n4;.a:(Le/e/a/b/f/u/e6;Le/e/a/b/f/u/b6;)Le/e/a/b/f/u/e6;` @kind interface;
  #L32babc.  v5:= temp @kind object;
  #L32babe.  call temp:= `b`(v5) @signature `Le/e/a/b/f/u/e6;.b:()Le/e/a/b/f/u/b6;` @kind interface;
  #L32bac4.  v5:= temp @kind object;
  #L32bac6.  v1:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32baca.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32bad0.  return @kind void;
  #L32bad2.  v1:= (`e.e.a.b.f.u.j6`) v1 @kind object;
  #L32bad6.  v5:= (`e.e.a.b.f.u.j6`) v5 @kind object;
  #L32bada.  call temp:= `a`(v0, v1, v5) @signature `Le/e/a/b/f/u/n4;.a:(Le/e/a/b/f/u/j6;Le/e/a/b/f/u/j6;)Le/e/a/b/f/u/j6;` @kind interface;
  #L32bae0.  throw v2;
  #L32bae2.  v1:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32bae6.  call temp:= `a`(v5) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32baec.  v5:= temp @kind object;
  #L32baee.  call temp:= `a`(v1, v0, v5) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32baf4.  return @kind void;
  #L32baf6.  v5:= (`e.e.a.b.f.u.g5`) v5 @kind object;
  #L32bafa.  call temp:= `c`() @signature `Le/e/a/b/f/u/g5;.c:()Le/e/a/b/f/u/b6;` @kind static;
  #L32bb00.  throw v2;
}
procedure `int` `c`(`e.e.a.b.f.u.n4` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/u/l4;.c:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32b444.  call temp:= `zzb`(v3) @signature `Le/e/a/b/f/u/n4;.zzb:()Le/e/a/b/f/u/a8;` @kind interface;
  #L32b44a.  v0:= temp @kind object;
  #L32b44c.  call temp:= `zza`(v3) @signature `Le/e/a/b/f/u/n4;.zza:()I` @kind interface;
  #L32b452.  v1:= temp;
  #L32b454.  call temp:= `c`(v3) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32b45a.  v2:= temp;
  #L32b45c.  if v2 == 0 then goto L32b4da;
  #L32b460.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/n4;.a:()Z` @kind interface;
  #L32b466.  v3:= temp;
  #L32b468.  v2:= 0I;
  #L32b46a.  v4:= (`java.util.List`) v4 @kind object;
  #L32b46e.  if v3 == 0 then goto L32b4b0;
  #L32b472.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b478.  v3:= temp @kind object;
  #L32b47a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b480.  v4:= temp;
  #L32b482.  if v4 == 0 then goto L32b49a;
  #L32b486.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b48c.  v4:= temp @kind object;
  #L32b48e.  call temp:= `a`(v0, v4) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;Ljava/lang/Object;)I` @kind static;
  #L32b494.  v4:= temp;
  #L32b496.  v2:= v2 + v4 @kind int;
  #L32b498.  goto L32b47a;
  #L32b49a.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/a4;.e:(I)I` @kind static;
  #L32b4a0.  v3:= temp;
  #L32b4a2.  v3:= v3 + v2 @kind int;
  #L32b4a4.  call temp:= `l`(v2) @signature `Le/e/a/b/f/u/a4;.l:(I)I` @kind static;
  #L32b4aa.  v4:= temp;
  #L32b4ac.  v3:= v3 + v4 @kind int;
  #L32b4ae.  return v3;
  #L32b4b0.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b4b6.  v3:= temp @kind object;
  #L32b4b8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b4be.  v4:= temp;
  #L32b4c0.  if v4 == 0 then goto L32b4d8;
  #L32b4c4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b4ca.  v4:= temp @kind object;
  #L32b4cc.  call temp:= `a`(v0, v1, v4) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;ILjava/lang/Object;)I` @kind static;
  #L32b4d2.  v4:= temp;
  #L32b4d4.  v2:= v2 + v4 @kind int;
  #L32b4d6.  goto L32b4b8;
  #L32b4d8.  return v2;
  #L32b4da.  call temp:= `a`(v0, v1, v4) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/a8;ILjava/lang/Object;)I` @kind static;
  #L32b4e0.  v3:= temp;
  #L32b4e2.  return v3;
}
procedure `int` `c`(`java.util.Map$Entry` v4 @kind object) @signature `Le/e/a/b/f/u/l4;.c:(Ljava/util/Map$Entry;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b4f4.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b4fa.  v0:= temp @kind object;
  #L32b4fc.  v0:= (`e.e.a.b.f.u.n4`) v0 @kind object;
  #L32b500.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32b506.  v1:= temp @kind object;
  #L32b508.  call temp:= `d`(v0) @signature `Le/e/a/b/f/u/n4;.d:()Le/e/a/b/f/u/d8;` @kind interface;
  #L32b50e.  v2:= temp @kind object;
  #L32b510.  v3:= `@@e.e.a.b.f.u.d8.j` @type ^`e.e.a.b.f.u.d8` @kind object;
  #L32b514.  if v2 != v3 then goto L32b568;
  #L32b518.  call temp:= `c`(v0) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32b51e.  v2:= temp;
  #L32b520.  if v2 != 0 then goto L32b568;
  #L32b524.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/n4;.a:()Z` @kind interface;
  #L32b52a.  v2:= temp;
  #L32b52c.  if v2 != 0 then goto L32b568;
  #L32b530.  v0:= instanceof @variable v1 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32b534.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b53a.  v4:= temp @kind object;
  #L32b53c.  v4:= (`e.e.a.b.f.u.n4`) v4 @kind object;
  #L32b540.  call temp:= `zza`(v4) @signature `Le/e/a/b/f/u/n4;.zza:()I` @kind interface;
  #L32b546.  v4:= temp;
  #L32b548.  if v0 == 0 then goto L32b55a;
  #L32b54c.  v1:= (`e.e.a.b.f.u.g5`) v1 @kind object;
  #L32b550.  call temp:= `b`(v4, v1) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/k5;)I` @kind static;
  #L32b556.  v4:= temp;
  #L32b558.  return v4;
  #L32b55a.  v1:= (`e.e.a.b.f.u.b6`) v1 @kind object;
  #L32b55e.  call temp:= `b`(v4, v1) @signature `Le/e/a/b/f/u/a4;.b:(ILe/e/a/b/f/u/b6;)I` @kind static;
  #L32b564.  v4:= temp;
  #L32b566.  return v4;
  #L32b568.  call temp:= `c`(v0, v1) @signature `Le/e/a/b/f/u/l4;.c:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)I` @kind static;
  #L32b56e.  v4:= temp;
  #L32b570.  return v4;
}
procedure `void` `d`(`e.e.a.b.f.u.n4` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/a/b/f/u/l4;.d:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32bb14.  call temp:= `zzb`(v5) @signature `Le/e/a/b/f/u/n4;.zzb:()Le/e/a/b/f/u/a8;` @kind interface;
  #L32bb1a.  v0:= temp @kind object;
  #L32bb1c.  call temp:= `a`(v6) @signature `Le/e/a/b/f/u/w4;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32bb22.  v1:= `@@e.e.a.b.f.u.k4.a` @type ^`int`[] @kind object;
  #L32bb26.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/u/a8;.zza:()Le/e/a/b/f/u/d8;` @kind virtual;
  #L32bb2c.  v0:= temp @kind object;
  #L32bb2e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L32bb34.  v0:= temp;
  #L32bb36.  v0:= v1[v0];
  #L32bb3a.  v1:= 1I;
  #L32bb3c.  v2:= 0I;
  #L32bb3e.  goto L32bc04;
  #L32bb44.  v0:= 0I;
  #L32bb46.  goto L32bba2;
  #L32bb48.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.b6` @kind boolean;
  #L32bb4c.  if v0 != 0 then goto L32bb7c;
  #L32bb50.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32bb54.  if v0 == 0 then goto L32bb44;
  #L32bb58.  goto L32bb7c;
  #L32bb5a.  v0:= instanceof @variable v6 @type ^`java.lang.Integer` @kind boolean;
  #L32bb5e.  if v0 != 0 then goto L32bb7c;
  #L32bb62.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.v4` @kind boolean;
  #L32bb66.  if v0 == 0 then goto L32bb44;
  #L32bb6a.  goto L32bb7c;
  #L32bb6c.  v0:= instanceof @variable v6 @type ^`e.e.a.b.f.u.l3` @kind boolean;
  #L32bb70.  if v0 != 0 then goto L32bb7c;
  #L32bb74.  v0:= instanceof @variable v6 @type ^`byte`[] @kind boolean;
  #L32bb78.  if v0 == 0 then goto L32bb44;
  #L32bb7c.  v0:= 1I;
  #L32bb7e.  goto L32bba2;
  #L32bb80.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L32bb84.  goto L32bba2;
  #L32bb86.  v0:= instanceof @variable v6 @type ^`java.lang.Boolean` @kind boolean;
  #L32bb8a.  goto L32bba2;
  #L32bb8c.  v0:= instanceof @variable v6 @type ^`java.lang.Double` @kind boolean;
  #L32bb90.  goto L32bba2;
  #L32bb92.  v0:= instanceof @variable v6 @type ^`java.lang.Float` @kind boolean;
  #L32bb96.  goto L32bba2;
  #L32bb98.  v0:= instanceof @variable v6 @type ^`java.lang.Long` @kind boolean;
  #L32bb9c.  goto L32bba2;
  #L32bb9e.  v0:= instanceof @variable v6 @type ^`java.lang.Integer` @kind boolean;
  #L32bba2.  if v0 == 0 then goto L32bba8;
  #L32bba6.  return @kind void;
  #L32bba8.  v0:= new `java.lang.IllegalArgumentException`;
  #L32bbac.  v3:= 3I;
  #L32bbae.  v3:= new `java.lang.Object`[v3];
  #L32bbb2.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/u/n4;.zza:()I` @kind interface;
  #L32bbb8.  v4:= temp;
  #L32bbba.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32bbc0.  v4:= temp @kind object;
  #L32bbc2.  v3[v2]:= v4 @kind object;
  #L32bbc6.  call temp:= `zzb`(v5) @signature `Le/e/a/b/f/u/n4;.zzb:()Le/e/a/b/f/u/a8;` @kind interface;
  #L32bbcc.  v5:= temp @kind object;
  #L32bbce.  call temp:= `zza`(v5) @signature `Le/e/a/b/f/u/a8;.zza:()Le/e/a/b/f/u/d8;` @kind virtual;
  #L32bbd4.  v5:= temp @kind object;
  #L32bbd6.  v3[v1]:= v5 @kind object;
  #L32bbda.  v5:= 2I;
  #L32bbdc.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32bbe2.  v6:= temp @kind object;
  #L32bbe4.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L32bbea.  v6:= temp @kind object;
  #L32bbec.  v3[v5]:= v6 @kind object;
  #L32bbf0.  v5:= "Wrong object type used with protocol message reflection.\nField number: %d, field java type: %s, value type: %s\n" @kind object;
  #L32bbf4.  call temp:= `format`(v5, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32bbfa.  v5:= temp @kind object;
  #L32bbfc.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32bc02.  throw v0;
  #L32bc04.  switch v0
                  | 1 => goto L32bb9e
                  | 2 => goto L32bb98
                  | 3 => goto L32bb92
                  | 4 => goto L32bb8c
                  | 5 => goto L32bb86
                  | 6 => goto L32bb80
                  | 7 => goto L32bb6c
                  | 8 => goto L32bb5a
                  | 9 => goto L32bb48
                  | else => goto L32bb44;
}
procedure `e.e.a.b.f.u.l4` `g`() @signature `Le/e/a/b/f/u/l4;.g:()Le/e/a/b/f/u/l4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b17c.  v0:= `@@e.e.a.b.f.u.l4.d` @type ^`e.e.a.b.f.u.l4` @kind object;
  #L32b180.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.a.b.f.u.l4` v1 @kind this, `e.e.a.b.f.u.n4` v2 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32b6ac.  v0:= v1.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b6b0.  call temp:= `get`(v0, v2) @signature `Le/e/a/b/f/u/w6;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32b6b6.  v2:= temp @kind object;
  #L32b6b8.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32b6bc.  if v0 != 0 then goto L32b6c2;
  #L32b6c0.  return v2 @kind object;
  #L32b6c2.  v2:= (`e.e.a.b.f.u.g5`) v2 @kind object;
  #L32b6c6.  call temp:= `c`() @signature `Le/e/a/b/f/u/g5;.c:()Le/e/a/b/f/u/b6;` @kind static;
  #L32b6cc.  v2:= 0I;
  #L32b6ce.  throw v2;
}
procedure `void` `a`(`e.e.a.b.f.u.l4` v1 @kind this) @signature `Le/e/a/b/f/u/l4;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32b960.  v0:= v1.`e.e.a.b.f.u.l4.b` @type ^`boolean` @kind boolean;
  #L32b964.  if v0 == 0 then goto L32b96a;
  #L32b968.  return @kind void;
  #L32b96a.  v0:= v1.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b96e.  call `a`(v0) @signature `Le/e/a/b/f/u/w6;.a:()V` @kind virtual;
  #L32b974.  v0:= 1I;
  #L32b976.  v1.`e.e.a.b.f.u.l4.b` @type ^`boolean` := v0 @kind boolean;
  #L32b97a.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.l4` v2 @kind this, `e.e.a.b.f.u.l4` v3 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/l4;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32b860.  v0:= 0I;
  #L32b862.  v1:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b866.  call temp:= `c`(v1) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L32b86c.  v1:= temp;
  #L32b86e.  if v0 >= v1 then goto L32b88a;
  #L32b872.  v1:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b876.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L32b87c.  v1:= temp @kind object;
  #L32b87e.  call `b`(v2, v1) @signature `Le/e/a/b/f/u/l4;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L32b884.  v0:= v0 + 1;
  #L32b888.  goto L32b862;
  #L32b88a.  v3:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b88e.  call temp:= `d`(v3) @signature `Le/e/a/b/f/u/w6;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L32b894.  v3:= temp @kind object;
  #L32b896.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b89c.  v3:= temp @kind object;
  #L32b89e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b8a4.  v0:= temp;
  #L32b8a6.  if v0 == 0 then goto L32b8be;
  #L32b8aa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b8b0.  v0:= temp @kind object;
  #L32b8b2.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L32b8b6.  call `b`(v2, v0) @signature `Le/e/a/b/f/u/l4;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L32b8bc.  goto L32b89e;
  #L32b8be.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.l4` v3 @kind this, `e.e.a.b.f.u.n4` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32b8d0.  call temp:= `c`(v4) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32b8d6.  v0:= temp;
  #L32b8d8.  if v0 == 0 then goto L32b92e;
  #L32b8dc.  v0:= instanceof @variable v5 @type ^`java.util.List` @kind boolean;
  #L32b8e0.  if v0 == 0 then goto L32b91e;
  #L32b8e4.  v0:= new `java.util.ArrayList`;
  #L32b8e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32b8ee.  v5:= (`java.util.List`) v5 @kind object;
  #L32b8f2.  call temp:= `addAll`(v0, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32b8f8.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L32b8fe.  v5:= temp;
  #L32b900.  v1:= 0I;
  #L32b902.  if v1 >= v5 then goto L32b91a;
  #L32b906.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L32b90c.  v2:= temp @kind object;
  #L32b90e.  v1:= v1 + 1;
  #L32b912.  call `d`(v4, v2) @signature `Le/e/a/b/f/u/l4;.d:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @kind static;
  #L32b918.  goto L32b902;
  #L32b91a.  v5:= v0 @kind object;
  #L32b91c.  goto L32b934;
  #L32b91e.  v4:= new `java.lang.IllegalArgumentException`;
  #L32b922.  v5:= "Wrong object type used with protocol message reflection." @kind object;
  #L32b926.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b92c.  throw v4;
  #L32b92e.  call `d`(v4, v5) @signature `Le/e/a/b/f/u/l4;.d:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @kind static;
  #L32b934.  v0:= instanceof @variable v5 @type ^`e.e.a.b.f.u.g5` @kind boolean;
  #L32b938.  if v0 == 0 then goto L32b942;
  #L32b93c.  v0:= 1I;
  #L32b93e.  v3.`e.e.a.b.f.u.l4.c` @type ^`boolean` := v0 @kind boolean;
  #L32b942.  v0:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b946.  call temp:= `a`(v0, v4, v5) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32b94c.  return @kind void;
}
procedure `void` `b`(`e.e.a.b.f.u.l4` v2 @kind this, `e.e.a.b.f.u.n4` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/u/l4;.b:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32b98c.  call temp:= `c`(v3) @signature `Le/e/a/b/f/u/n4;.c:()Z` @kind interface;
  #L32b992.  v0:= temp;
  #L32b994.  if v0 == 0 then goto L32b9cc;
  #L32b998.  call `d`(v3, v4) @signature `Le/e/a/b/f/u/l4;.d:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @kind static;
  #L32b99e.  call temp:= `a`(v2, v3) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;)Ljava/lang/Object;` @kind virtual;
  #L32b9a4.  v0:= temp @kind object;
  #L32b9a6.  if v0 != 0 then goto L32b9c0;
  #L32b9aa.  v0:= new `java.util.ArrayList`;
  #L32b9ae.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32b9b4.  v1:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b9b8.  call temp:= `a`(v1, v3, v0) @signature `Le/e/a/b/f/u/w6;.a:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32b9be.  goto L32b9c4;
  #L32b9c0.  v0:= (`java.util.List`) v0 @kind object;
  #L32b9c4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32b9ca.  return @kind void;
  #L32b9cc.  v3:= new `java.lang.IllegalArgumentException`;
  #L32b9d0.  v4:= "addRepeatedField() can only be called on repeated fields." @kind object;
  #L32b9d4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b9da.  throw v3;
}
procedure `boolean` `b`(`e.e.a.b.f.u.l4` v1 @kind this) @signature `Le/e/a/b/f/u/l4;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32b0e0.  v0:= v1.`e.e.a.b.f.u.l4.b` @type ^`boolean` @kind boolean;
  #L32b0e4.  return v0;
}
procedure `java.util.Iterator` `c`(`e.e.a.b.f.u.l4` v2 @kind this) @signature `Le/e/a/b/f/u/l4;.c:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L32b728.  v0:= v2.`e.e.a.b.f.u.l4.c` @type ^`boolean` @kind boolean;
  #L32b72c.  if v0 == 0 then goto L32b750;
  #L32b730.  v0:= new `e.e.a.b.f.u.h5`;
  #L32b734.  v1:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b738.  call temp:= `entrySet`(v1) @signature `Le/e/a/b/f/u/w6;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L32b73e.  v1:= temp @kind object;
  #L32b740.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b746.  v1:= temp @kind object;
  #L32b748.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/h5;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L32b74e.  return v0 @kind object;
  #L32b750.  v0:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b754.  call temp:= `entrySet`(v0) @signature `Le/e/a/b/f/u/w6;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L32b75a.  v0:= temp @kind object;
  #L32b75c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b762.  v0:= temp @kind object;
  #L32b764.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.u.l4` v4 @kind this) @signature `Le/e/a/b/f/u/l4;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b600.  v0:= new `e.e.a.b.f.u.l4`;
  #L32b604.  call `<init>`(v0) @signature `Le/e/a/b/f/u/l4;.<init>:()V` @kind direct;
  #L32b60a.  v1:= 0I;
  #L32b60c.  v2:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b610.  call temp:= `c`(v2) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L32b616.  v2:= temp;
  #L32b618.  if v1 >= v2 then goto L32b648;
  #L32b61c.  v2:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b620.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L32b626.  v2:= temp @kind object;
  #L32b628.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b62e.  v3:= temp @kind object;
  #L32b630.  v3:= (`e.e.a.b.f.u.n4`) v3 @kind object;
  #L32b634.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32b63a.  v2:= temp @kind object;
  #L32b63c.  call `a`(v0, v3, v2) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @kind virtual;
  #L32b642.  v1:= v1 + 1;
  #L32b646.  goto L32b60c;
  #L32b648.  v1:= v4.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b64c.  call temp:= `d`(v1) @signature `Le/e/a/b/f/u/w6;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L32b652.  v1:= temp @kind object;
  #L32b654.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b65a.  v1:= temp @kind object;
  #L32b65c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b662.  v2:= temp;
  #L32b664.  if v2 == 0 then goto L32b690;
  #L32b668.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b66e.  v2:= temp @kind object;
  #L32b670.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32b674.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32b67a.  v3:= temp @kind object;
  #L32b67c.  v3:= (`e.e.a.b.f.u.n4`) v3 @kind object;
  #L32b680.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32b686.  v2:= temp @kind object;
  #L32b688.  call `a`(v0, v3, v2) @signature `Le/e/a/b/f/u/l4;.a:(Le/e/a/b/f/u/n4;Ljava/lang/Object;)V` @kind virtual;
  #L32b68e.  goto L32b65c;
  #L32b690.  v1:= v4.`e.e.a.b.f.u.l4.c` @type ^`boolean` @kind boolean;
  #L32b694.  v0.`e.e.a.b.f.u.l4.c` @type ^`boolean` := v1 @kind boolean;
  #L32b698.  return v0 @kind object;
}
procedure `java.util.Iterator` `d`(`e.e.a.b.f.u.l4` v2 @kind this) @signature `Le/e/a/b/f/u/l4;.d:()Ljava/util/Iterator;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L32b778.  v0:= v2.`e.e.a.b.f.u.l4.c` @type ^`boolean` @kind boolean;
  #L32b77c.  if v0 == 0 then goto L32b7a0;
  #L32b780.  v0:= new `e.e.a.b.f.u.h5`;
  #L32b784.  v1:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b788.  call temp:= `e`(v1) @signature `Le/e/a/b/f/u/w6;.e:()Ljava/util/Set;` @kind virtual;
  #L32b78e.  v1:= temp @kind object;
  #L32b790.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b796.  v1:= temp @kind object;
  #L32b798.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/u/h5;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L32b79e.  return v0 @kind object;
  #L32b7a0.  v0:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b7a4.  call temp:= `e`(v0) @signature `Le/e/a/b/f/u/w6;.e:()Ljava/util/Set;` @kind virtual;
  #L32b7aa.  v0:= temp @kind object;
  #L32b7ac.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b7b2.  v0:= temp @kind object;
  #L32b7b4.  return v0 @kind object;
}
procedure `boolean` `e`(`e.e.a.b.f.u.l4` v3 @kind this) @signature `Le/e/a/b/f/u/l4;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32b0f8.  v0:= 0I;
  #L32b0fa.  v1:= 0I;
  #L32b0fc.  v2:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b100.  call temp:= `c`(v2) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L32b106.  v2:= temp;
  #L32b108.  if v1 >= v2 then goto L32b12c;
  #L32b10c.  v2:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b110.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L32b116.  v2:= temp @kind object;
  #L32b118.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L32b11e.  v2:= temp;
  #L32b120.  if v2 != 0 then goto L32b126;
  #L32b124.  return v0;
  #L32b126.  v1:= v1 + 1;
  #L32b12a.  goto L32b0fc;
  #L32b12c.  v1:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b130.  call temp:= `d`(v1) @signature `Le/e/a/b/f/u/w6;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L32b136.  v1:= temp @kind object;
  #L32b138.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b13e.  v1:= temp @kind object;
  #L32b140.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b146.  v2:= temp;
  #L32b148.  if v2 == 0 then goto L32b166;
  #L32b14c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b152.  v2:= temp @kind object;
  #L32b154.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32b158.  call temp:= `a`(v2) @signature `Le/e/a/b/f/u/l4;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L32b15e.  v2:= temp;
  #L32b160.  if v2 != 0 then goto L32b140;
  #L32b164.  return v0;
  #L32b166.  v0:= 1I;
  #L32b168.  return v0;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.l4` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/u/l4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32aff8.  if v1 != v2 then goto L32b000;
  #L32affc.  v2:= 1I;
  #L32affe.  return v2;
  #L32b000.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.u.l4` @kind boolean;
  #L32b004.  if v0 != 0 then goto L32b00c;
  #L32b008.  v2:= 0I;
  #L32b00a.  return v2;
  #L32b00c.  v2:= (`e.e.a.b.f.u.l4`) v2 @kind object;
  #L32b010.  v0:= v1.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b014.  v2:= v2.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b018.  call temp:= `equals`(v0, v2) @signature `Le/e/a/b/f/u/w6;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32b01e.  v2:= temp;
  #L32b020.  return v2;
}
procedure `int` `f`(`e.e.a.b.f.u.l4` v3 @kind this) @signature `Le/e/a/b/f/u/l4;.f:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32b584.  v0:= 0I;
  #L32b586.  v1:= 0I;
  #L32b588.  v2:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b58c.  call temp:= `c`(v2) @signature `Le/e/a/b/f/u/w6;.c:()I` @kind virtual;
  #L32b592.  v2:= temp;
  #L32b594.  if v0 >= v2 then goto L32b5b4;
  #L32b598.  v2:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b59c.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/u/w6;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L32b5a2.  v2:= temp @kind object;
  #L32b5a4.  call temp:= `c`(v2) @signature `Le/e/a/b/f/u/l4;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L32b5aa.  v2:= temp;
  #L32b5ac.  v1:= v1 + v2 @kind int;
  #L32b5ae.  v0:= v0 + 1;
  #L32b5b2.  goto L32b588;
  #L32b5b4.  v0:= v3.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b5b8.  call temp:= `d`(v0) @signature `Le/e/a/b/f/u/w6;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L32b5be.  v0:= temp @kind object;
  #L32b5c0.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32b5c6.  v0:= temp @kind object;
  #L32b5c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32b5ce.  v2:= temp;
  #L32b5d0.  if v2 == 0 then goto L32b5ec;
  #L32b5d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32b5da.  v2:= temp @kind object;
  #L32b5dc.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32b5e0.  call temp:= `c`(v2) @signature `Le/e/a/b/f/u/l4;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L32b5e6.  v2:= temp;
  #L32b5e8.  v1:= v1 + v2 @kind int;
  #L32b5ea.  goto L32b5c8;
  #L32b5ec.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.l4` v1 @kind this) @signature `Le/e/a/b/f/u/l4;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L32b194.  v0:= v1.`e.e.a.b.f.u.l4.a` @type ^`e.e.a.b.f.u.w6` @kind object;
  #L32b198.  call temp:= `hashCode`(v0) @signature `Le/e/a/b/f/u/w6;.hashCode:()I` @kind virtual;
  #L32b19e.  v0:= temp;
  #L32b1a0.  return v0;
}
