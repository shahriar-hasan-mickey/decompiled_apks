record `e.e.a.b.f.b.q` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.e.a.b.f.b.k2` @kind interface {
  `int` `e.e.a.b.f.b.q.zzex` @AccessFlag PROTECTED;
}
global `boolean` `@@e.e.a.b.f.b.q.zzey` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`e.e.a.b.f.b.q` v1 @kind this) @signature `Le/e/a/b/f/b/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f95ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f95b2.  v0:= 0I;
  #L1f95b4.  v1.`e.e.a.b.f.b.q.zzex` @type ^`int` := v0;
  #L1f95b8.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.q` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/b/q;.a:(I)V` @AccessFlag  {
    temp;

  #L1f95cc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L1f95d0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L1f95d6.  throw v1;
}
procedure `int` `c`(`e.e.a.b.f.b.q` v1 @kind this) @signature `Le/e/a/b/f/b/q;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L1f9590.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1f9594.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L1f959a.  throw v0;
}
procedure `e.e.a.b.f.b.a0` `k`(`e.e.a.b.f.b.q` v6 @kind this) @signature `Le/e/a/b/f/b/q;.k:()Le/e/a/b/f/b/a0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f94cc.  call temp:= `q`(v6) @signature `Le/e/a/b/f/b/k2;.q:()I` @kind interface;
  #L1f94d2.  v0:= temp;
  #L1f94d4.  call temp:= `i`(v0) @signature `Le/e/a/b/f/b/a0;.i:(I)Le/e/a/b/f/b/f0;` @kind static;
  #L1f94da.  v0:= temp @kind object;
  #L1f94dc.  call temp:= `b`(v0) @signature `Le/e/a/b/f/b/f0;.b:()Le/e/a/b/f/b/m0;` @kind virtual;
  #L1f94e2.  v1:= temp @kind object;
  #L1f94e4.  call `a`(v6, v1) @signature `Le/e/a/b/f/b/k2;.a:(Le/e/a/b/f/b/m0;)V` @kind interface;
  #L1f94ea.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/f0;.a:()Le/e/a/b/f/b/a0;` @kind virtual;
  #L1f94f0.  v0:= temp @kind object;
  #L1f94f2.  return v0 @kind object;
  #L1f94f4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1f94f6.  v1:= new `java.lang.RuntimeException`;
  #L1f94fa.  v2:= "ByteString" @kind object;
  #L1f94fe.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1f9504.  v3:= temp @kind object;
  #L1f9506.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1f950c.  v3:= temp @kind object;
  #L1f950e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f9514.  v4:= temp @kind object;
  #L1f9516.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f951c.  v4:= temp;
  #L1f951e.  v4:= v4 + 62;
  #L1f9522.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f9528.  v5:= temp;
  #L1f952a.  v4:= v4 + v5 @kind int;
  #L1f952c.  v5:= new `java.lang.StringBuilder`;
  #L1f9530.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1f9536.  v4:= "Serializing " @kind object;
  #L1f953a.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9540.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9546.  v3:= " to a " @kind object;
  #L1f954a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9550.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9556.  v2:= " threw an IOException (should never happen)." @kind object;
  #L1f955a.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9560.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f9566.  v2:= temp @kind object;
  #L1f9568.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1f956e.  throw v1;
  catch `java.io.IOException` @[L1f94cc..L1f94f2] goto L1f94f4;
}
