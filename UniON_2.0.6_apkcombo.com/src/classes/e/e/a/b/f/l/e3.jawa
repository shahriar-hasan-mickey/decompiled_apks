record `e.e.a.b.f.l.e3` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/l/e3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25f204.  v0:= constclass @type ^`e.e.a.b.f.l.e3` @kind object;
  #L25f208.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L25f20e.  v0:= temp @kind object;
  #L25f210.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L25f216.  v0:= new `e.e.a.b.f.l.d2`;
  #L25f21a.  v1:= 0I;
  #L25f21c.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/l/d2;.<init>:(Le/e/a/b/f/l/c1;)V` @kind direct;
  #L25f222.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.l.e3` v0 @kind this) @signature `Le/e/a/b/f/l/e3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L25f234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25f23a.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/l/e3;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;

  #L25df74.  if v0 == 0 then goto L25df8a;
  #L25df78.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L25df7e.  v0:= temp;
  #L25df80.  if v0 == 0 then goto L25df86;
  #L25df84.  goto L25df8a;
  #L25df86.  v0:= 0I;
  #L25df88.  return v0;
  #L25df8a.  v0:= 1I;
  #L25df8c.  return v0;
}
