record `e.e.a.b.f.u.v0` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `int` `e.e.a.b.f.u.v0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.b.f.u.v0` v0 @kind this, `java.lang.Throwable` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object) @signature `Le/e/a/b/f/u/v0;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32026c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L320272.  if v1 == 0 then goto L320284;
  #L320276.  call temp:= `identityHashCode`(v1) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L32027c.  v1:= temp;
  #L32027e.  v0.`e.e.a.b.f.u.v0.a` @type ^`int` := v1;
  #L320282.  return @kind void;
  #L320284.  v1:= new `java.lang.NullPointerException`;
  #L320288.  v2:= "The referent cannot be null" @kind object;
  #L32028c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L320292.  throw v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.u.v0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/b/f/u/v0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3201fc.  v0:= 0I;
  #L3201fe.  if v5 == 0 then goto L320242;
  #L320202.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L320208.  v1:= temp @kind object;
  #L32020a.  v2:= constclass @type ^`e.e.a.b.f.u.v0` @kind object;
  #L32020e.  if v1 == v2 then goto L320214;
  #L320212.  goto L320242;
  #L320214.  v1:= 1I;
  #L320216.  if v4 != v5 then goto L32021c;
  #L32021a.  return v1;
  #L32021c.  v5:= (`e.e.a.b.f.u.v0`) v5 @kind object;
  #L320220.  v2:= v4.`e.e.a.b.f.u.v0.a` @type ^`int`;
  #L320224.  v3:= v5.`e.e.a.b.f.u.v0.a` @type ^`int`;
  #L320228.  if v2 != v3 then goto L320242;
  #L32022c.  call temp:= `get`(v4) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L320232.  v2:= temp @kind object;
  #L320234.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L32023a.  v5:= temp @kind object;
  #L32023c.  if v2 != v5 then goto L320242;
  #L320240.  return v1;
  #L320242.  return v0;
}
procedure `int` `hashCode`(`e.e.a.b.f.u.v0` v1 @kind this) @signature `Le/e/a/b/f/u/v0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L320254.  v0:= v1.`e.e.a.b.f.u.v0.a` @type ^`int`;
  #L320258.  return v0;
}
