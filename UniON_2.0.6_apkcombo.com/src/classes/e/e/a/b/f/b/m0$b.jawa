record `e.e.a.b.f.b.m0$b` @kind class @AccessFlag FINAL extends `e.e.a.b.f.b.m0$a` @kind class {
  `java.nio.ByteBuffer` `e.e.a.b.f.b.m0$b.h` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.b.m0$b.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.m0$b` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Le/e/a/b/f/b/m0$b;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1fb988.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1fb98e.  v0:= temp @kind object;
  #L1fb990.  call temp:= `arrayOffset`(v4) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L1fb996.  v1:= temp;
  #L1fb998.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fb99e.  v2:= temp;
  #L1fb9a0.  v1:= v1 + v2 @kind int;
  #L1fb9a2.  call temp:= `remaining`(v4) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1fb9a8.  v2:= temp;
  #L1fb9aa.  call `<init>`(v3, v0, v1, v2) @signature `Le/e/a/b/f/b/m0$a;.<init>:([BII)V` @kind direct;
  #L1fb9b0.  v3.`e.e.a.b.f.b.m0$b.h` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L1fb9b4.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1fb9ba.  v4:= temp;
  #L1fb9bc.  v3.`e.e.a.b.f.b.m0$b.i` @type ^`int` := v4;
  #L1fb9c0.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.m0$b` v3 @kind this) @signature `Le/e/a/b/f/b/m0$b;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fb9d4.  v0:= v3.`e.e.a.b.f.b.m0$b.h` @type ^`java.nio.ByteBuffer` @kind object;
  #L1fb9d8.  v1:= v3.`e.e.a.b.f.b.m0$b.i` @type ^`int`;
  #L1fb9dc.  call temp:= `d`(v3) @signature `Le/e/a/b/f/b/m0$a;.d:()I` @kind virtual;
  #L1fb9e2.  v2:= temp;
  #L1fb9e4.  v1:= v1 + v2 @kind int;
  #L1fb9e6.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1fb9ec.  return @kind void;
}
