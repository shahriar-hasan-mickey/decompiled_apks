record `e.e.a.b.f.u.n5` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.l5` @kind class {
}
global `java.lang.Class` `@@e.e.a.b.f.u.n5.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/u/n5;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32f288.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L32f28e.  v0:= temp @kind object;
  #L32f290.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32f296.  v0:= temp @kind object;
  #L32f298.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32f29e.  v0:= temp @kind object;
  #L32f2a0.  `@@e.e.a.b.f.u.n5.c` @type ^`java.lang.Class` := v0 @kind object;
  #L32f2a4.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.n5` v1 @kind this) @signature `Le/e/a/b/f/u/n5;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L32f2b8.  v0:= 0I;
  #L32f2ba.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/u/l5;.<init>:(Le/e/a/b/f/u/o5;)V` @kind direct;
  #L32f2c0.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.u.n5` v0 @kind this, `e.e.a.b.f.u.o5` v1 @kind object) @signature `Le/e/a/b/f/u/n5;.<init>:(Le/e/a/b/f/u/o5;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L32f2d4.  call `<init>`(v0) @signature `Le/e/a/b/f/u/n5;.<init>:()V` @kind direct;
  #L32f2da.  return @kind void;
}
procedure `java.util.List` `a`(`java.lang.Object` v3 @kind object, `long` v4 , `int` v6 ) @signature `Le/e/a/b/f/u/n5;.a:(Ljava/lang/Object;JI)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32f160.  call temp:= `b`(v3, v4) @signature `Le/e/a/b/f/u/n5;.b:(Ljava/lang/Object;J)Ljava/util/List;` @kind static;
  #L32f166.  v0:= temp @kind object;
  #L32f168.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L32f16e.  v1:= temp;
  #L32f170.  if v1 == 0 then goto L32f1ba;
  #L32f174.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.m5` @kind boolean;
  #L32f178.  if v1 == 0 then goto L32f188;
  #L32f17c.  v0:= new `e.e.a.b.f.u.j5`;
  #L32f180.  call `<init>`(v0, v6) @signature `Le/e/a/b/f/u/j5;.<init>:(I)V` @kind direct;
  #L32f186.  goto L32f1b2;
  #L32f188.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.m6` @kind boolean;
  #L32f18c.  if v1 == 0 then goto L32f1a8;
  #L32f190.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.c5` @kind boolean;
  #L32f194.  if v1 == 0 then goto L32f1a8;
  #L32f198.  v0:= (`e.e.a.b.f.u.c5`) v0 @kind object;
  #L32f19c.  call temp:= `a`(v0, v6) @signature `Le/e/a/b/f/u/c5;.a:(I)Le/e/a/b/f/u/c5;` @kind interface;
  #L32f1a2.  v6:= temp @kind object;
  #L32f1a4.  v0:= v6 @kind object;
  #L32f1a6.  goto L32f1b2;
  #L32f1a8.  v0:= new `java.util.ArrayList`;
  #L32f1ac.  call `<init>`(v0, v6) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L32f1b2.  call `a`(v3, v4, v0) @signature `Le/e/a/b/f/u/p7;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L32f1b8.  goto L32f254;
  #L32f1ba.  v1:= `@@e.e.a.b.f.u.n5.c` @type ^`java.lang.Class` @kind object;
  #L32f1be.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32f1c4.  v2:= temp @kind object;
  #L32f1c6.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L32f1cc.  v1:= temp;
  #L32f1ce.  if v1 == 0 then goto L32f1f6;
  #L32f1d2.  v1:= new `java.util.ArrayList`;
  #L32f1d6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f1dc.  v2:= temp;
  #L32f1de.  v2:= v2 + v6 @kind int;
  #L32f1e0.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L32f1e6.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L32f1ec.  call `a`(v3, v4, v1) @signature `Le/e/a/b/f/u/p7;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L32f1f2.  v0:= v1 @kind object;
  #L32f1f4.  goto L32f254;
  #L32f1f6.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.o7` @kind boolean;
  #L32f1fa.  if v1 == 0 then goto L32f21e;
  #L32f1fe.  v1:= new `e.e.a.b.f.u.j5`;
  #L32f202.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f208.  v2:= temp;
  #L32f20a.  v2:= v2 + v6 @kind int;
  #L32f20c.  call `<init>`(v1, v2) @signature `Le/e/a/b/f/u/j5;.<init>:(I)V` @kind direct;
  #L32f212.  v0:= (`e.e.a.b.f.u.o7`) v0 @kind object;
  #L32f216.  call temp:= `addAll`(v1, v0) @signature `Le/e/a/b/f/u/j5;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L32f21c.  goto L32f1ec;
  #L32f21e.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.m6` @kind boolean;
  #L32f222.  if v1 == 0 then goto L32f254;
  #L32f226.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.c5` @kind boolean;
  #L32f22a.  if v1 == 0 then goto L32f254;
  #L32f22e.  v1:= v0 @kind object;
  #L32f230.  v1:= (`e.e.a.b.f.u.c5`) v1 @kind object;
  #L32f234.  call temp:= `zza`(v1) @signature `Le/e/a/b/f/u/c5;.zza:()Z` @kind interface;
  #L32f23a.  v2:= temp;
  #L32f23c.  if v2 != 0 then goto L32f254;
  #L32f240.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f246.  v0:= temp;
  #L32f248.  v0:= v0 + v6 @kind int;
  #L32f24a.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/u/c5;.a:(I)Le/e/a/b/f/u/c5;` @kind interface;
  #L32f250.  v0:= temp @kind object;
  #L32f252.  goto L32f1b2;
  #L32f254.  return v0 @kind object;
}
procedure `java.util.List` `b`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Le/e/a/b/f/u/n5;.b:(Ljava/lang/Object;J)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L32f268.  call temp:= `f`(v0, v1) @signature `Le/e/a/b/f/u/p7;.f:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L32f26e.  v0:= temp @kind object;
  #L32f270.  v0:= (`java.util.List`) v0 @kind object;
  #L32f274.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.u.n5` v3 @kind this, `java.lang.Object` v4 @kind object, `long` v5 ) @signature `Le/e/a/b/f/u/n5;.a:(Ljava/lang/Object;J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32f340.  call temp:= `f`(v4, v5) @signature `Le/e/a/b/f/u/p7;.f:(Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L32f346.  v0:= temp @kind object;
  #L32f348.  v0:= (`java.util.List`) v0 @kind object;
  #L32f34c.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.m5` @kind boolean;
  #L32f350.  if v1 == 0 then goto L32f362;
  #L32f354.  v0:= (`e.e.a.b.f.u.m5`) v0 @kind object;
  #L32f358.  call temp:= `a`(v0) @signature `Le/e/a/b/f/u/m5;.a:()Le/e/a/b/f/u/m5;` @kind interface;
  #L32f35e.  v0:= temp @kind object;
  #L32f360.  goto L32f3ac;
  #L32f362.  v1:= `@@e.e.a.b.f.u.n5.c` @type ^`java.lang.Class` @kind object;
  #L32f366.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32f36c.  v2:= temp @kind object;
  #L32f36e.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L32f374.  v1:= temp;
  #L32f376.  if v1 == 0 then goto L32f37c;
  #L32f37a.  return @kind void;
  #L32f37c.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.m6` @kind boolean;
  #L32f380.  if v1 == 0 then goto L32f3a4;
  #L32f384.  v1:= instanceof @variable v0 @type ^`e.e.a.b.f.u.c5` @kind boolean;
  #L32f388.  if v1 == 0 then goto L32f3a4;
  #L32f38c.  v0:= (`e.e.a.b.f.u.c5`) v0 @kind object;
  #L32f390.  call temp:= `zza`(v0) @signature `Le/e/a/b/f/u/c5;.zza:()Z` @kind interface;
  #L32f396.  v4:= temp;
  #L32f398.  if v4 == 0 then goto L32f3a2;
  #L32f39c.  call `zzb`(v0) @signature `Le/e/a/b/f/u/c5;.zzb:()V` @kind interface;
  #L32f3a2.  return @kind void;
  #L32f3a4.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32f3aa.  v0:= temp @kind object;
  #L32f3ac.  call `a`(v4, v5, v0) @signature `Le/e/a/b/f/u/p7;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L32f3b2.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.u.n5` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `long` v6 ) @signature `Le/e/a/b/f/u/n5;.a:(Ljava/lang/Object;Ljava/lang/Object;J)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32f2ec.  call temp:= `b`(v5, v6) @signature `Le/e/a/b/f/u/n5;.b:(Ljava/lang/Object;J)Ljava/util/List;` @kind static;
  #L32f2f2.  v5:= temp @kind object;
  #L32f2f4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f2fa.  v0:= temp;
  #L32f2fc.  call temp:= `a`(v4, v6, v0) @signature `Le/e/a/b/f/u/n5;.a:(Ljava/lang/Object;JI)Ljava/util/List;` @kind static;
  #L32f302.  v0:= temp @kind object;
  #L32f304.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f30a.  v1:= temp;
  #L32f30c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32f312.  v2:= temp;
  #L32f314.  if v1 <= 0 then goto L32f322;
  #L32f318.  if v2 <= 0 then goto L32f322;
  #L32f31c.  call temp:= `addAll`(v0, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32f322.  if v1 <= 0 then goto L32f328;
  #L32f326.  v5:= v0 @kind object;
  #L32f328.  call `a`(v4, v6, v5) @signature `Le/e/a/b/f/u/p7;.a:(Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L32f32e.  return @kind void;
}
