record `e.e.a.b.f.b.b4` @kind class @AccessFlag FINAL extends `java.security.PrivilegedExceptionAction` @kind interface {
}
procedure `void` `<init>`(`e.e.a.b.f.b.b4` v0 @kind this) @signature `Le/e/a/b/f/b/b4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20fe50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20fe56.  return @kind void;
}
procedure `java.lang.Object` `run`(`e.e.a.b.f.b.b4` v7 @kind this) @signature `Le/e/a/b/f/b/b4;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20fdf4.  v0:= constclass @type ^`sun.misc.Unsafe` @kind object;
  #L20fdf8.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L20fdfe.  v1:= temp @kind object;
  #L20fe00.  v2:= length @variable v1;
  #L20fe02.  v3:= 0I;
  #L20fe04.  v4:= 0I;
  #L20fe06.  if v3 >= v2 then goto L20fe3e;
  #L20fe0a.  v5:= v1[v3] @kind object;
  #L20fe0e.  v6:= 1I;
  #L20fe10.  call `setAccessible`(v5, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L20fe16.  call temp:= `get`(v5, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20fe1c.  v4:= temp @kind object;
  #L20fe1e.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L20fe24.  v5:= temp;
  #L20fe26.  if v5 == 0 then goto L20fe38;
  #L20fe2a.  call temp:= `cast`(v0, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20fe30.  v0:= temp @kind object;
  #L20fe32.  v0:= (`sun.misc.Unsafe`) v0 @kind object;
  #L20fe36.  return v0 @kind object;
  #L20fe38.  v3:= v3 + 1;
  #L20fe3c.  goto L20fe04;
  #L20fe3e.  return v4 @kind object;
}
