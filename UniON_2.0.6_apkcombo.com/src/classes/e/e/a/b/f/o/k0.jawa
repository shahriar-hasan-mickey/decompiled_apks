record `e.e.a.b.f.o.k0` @kind class @AccessFlag FINAL extends `e.e.a.b.f.o.s` @kind class {
  `java.lang.Object` `e.e.a.b.f.o.k0.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.o.k0.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.o.k0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/o/k0;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c16e0.  call `<init>`(v0) @signature `Le/e/a/b/f/o/s;.<init>:()V` @kind direct;
  #L2c16e6.  if v1 == 0 then goto L2c16f0;
  #L2c16ea.  v0.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` := v1 @kind object;
  #L2c16ee.  return @kind void;
  #L2c16f0.  v1:= 0I;
  #L2c16f2.  throw v1;
}
procedure `void` `<init>`(`e.e.a.b.f.o.k0` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/o/k0;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c1704.  call `<init>`(v0) @signature `Le/e/a/b/f/o/s;.<init>:()V` @kind direct;
  #L2c170a.  v0.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` := v1 @kind object;
  #L2c170e.  v0.`e.e.a.b.f.o.k0.e` @type ^`int` := v2;
  #L2c1712.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.o.k0` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/o/k0;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L2c1640.  v3:= v1.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c1644.  v0:= 0I;
  #L2c1646.  v2[v0]:= v3 @kind object;
  #L2c164a.  v2:= 1I;
  #L2c164c.  return v2;
}
procedure `boolean` `contains`(`e.e.a.b.f.o.k0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/k0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c1580.  v0:= v1.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c1584.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c158a.  v2:= temp;
  #L2c158c.  return v2;
}
procedure `e.e.a.b.f.o.r` `f`(`e.e.a.b.f.o.k0` v1 @kind this) @signature `Le/e/a/b/f/o/k0;.f:()Le/e/a/b/f/o/r;` @AccessFlag FINAL {
    temp;
    v0;

  #L2c15c0.  v0:= v1.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c15c4.  call temp:= `a`(v0) @signature `Le/e/a/b/f/o/r;.a:(Ljava/lang/Object;)Le/e/a/b/f/o/r;` @kind static;
  #L2c15ca.  v0:= temp @kind object;
  #L2c15cc.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.o.k0` v1 @kind this) @signature `Le/e/a/b/f/o/k0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c1600.  v0:= v1.`e.e.a.b.f.o.k0.e` @type ^`int`;
  #L2c1604.  if v0 != 0 then goto L2c1618;
  #L2c1608.  v0:= v1.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c160c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2c1612.  v0:= temp;
  #L2c1614.  v1.`e.e.a.b.f.o.k0.e` @type ^`int` := v0;
  #L2c1618.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.o.k0` v2 @kind this) @signature `Le/e/a/b/f/o/k0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2c16c0.  v0:= v2.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c16c4.  v1:= new `e.e.a.b.f.o.t`;
  #L2c16c8.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/o/t;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2c16ce.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.o.k0` v1 @kind this) @signature `Le/e/a/b/f/o/k0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c162c.  v0:= 1I;
  #L2c162e.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.o.k0` v3 @kind this) @signature `Le/e/a/b/f/o/k0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c1660.  v0:= v3.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c1664.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c166a.  v0:= temp @kind object;
  #L2c166c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c1672.  v1:= temp @kind object;
  #L2c1674.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2c167a.  v1:= temp;
  #L2c167c.  v2:= new `java.lang.StringBuilder`;
  #L2c1680.  v1:= v1 + 2;
  #L2c1684.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c168a.  v1:= 91I;
  #L2c168e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c1694.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c169a.  v0:= 93I;
  #L2c169e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c16a4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c16aa.  v0:= temp @kind object;
  #L2c16ac.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.o.k0` v1 @kind this) @signature `Le/e/a/b/f/o/k0;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L2c15a0.  v0:= v1.`e.e.a.b.f.o.k0.e` @type ^`int`;
  #L2c15a4.  if v0 == 0 then goto L2c15ac;
  #L2c15a8.  v0:= 1I;
  #L2c15aa.  return v0;
  #L2c15ac.  v0:= 0I;
  #L2c15ae.  return v0;
}
procedure `e.e.a.b.f.o.m0` `zza`(`e.e.a.b.f.o.k0` v2 @kind this) @signature `Le/e/a/b/f/o/k0;.zza:()Le/e/a/b/f/o/m0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c15e0.  v0:= v2.`e.e.a.b.f.o.k0.d` @type ^`java.lang.Object` @kind object;
  #L2c15e4.  v1:= new `e.e.a.b.f.o.t`;
  #L2c15e8.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/o/t;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2c15ee.  return v1 @kind object;
}
