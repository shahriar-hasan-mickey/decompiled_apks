record `e.e.a.b.f.n.pr` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `e.e.a.b.f.n.v1` @kind interface {
  `int` `e.e.a.b.f.n.pr.b` @AccessFlag PRIVATE_FINAL;
}
global `e.e.a.b.f.n.pr` `@@e.e.a.b.f.n.pr.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.pr` `@@e.e.a.b.f.n.pr.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.pr` `@@e.e.a.b.f.n.pr.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.a.b.f.n.pr`[] `@@e.e.a.b.f.n.pr.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/n/pr;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a85d0.  v0:= new `e.e.a.b.f.n.pr`;
  #L2a85d4.  v1:= 0I;
  #L2a85d6.  v2:= "UNSPECIFIED" @kind object;
  #L2a85da.  call `<init>`(v0, v2, v1, v1) @signature `Le/e/a/b/f/n/pr;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a85e0.  `@@e.e.a.b.f.n.pr.c` @type ^`e.e.a.b.f.n.pr` := v0 @kind object;
  #L2a85e4.  v0:= new `e.e.a.b.f.n.pr`;
  #L2a85e8.  v2:= 1I;
  #L2a85ea.  v3:= "CATEGORY_MASK" @kind object;
  #L2a85ee.  call `<init>`(v0, v3, v2, v2) @signature `Le/e/a/b/f/n/pr;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a85f4.  `@@e.e.a.b.f.n.pr.d` @type ^`e.e.a.b.f.n.pr` := v0 @kind object;
  #L2a85f8.  v0:= new `e.e.a.b.f.n.pr`;
  #L2a85fc.  v3:= 2I;
  #L2a85fe.  v4:= "CONFIDENCE_MASK" @kind object;
  #L2a8602.  call `<init>`(v0, v4, v3, v3) @signature `Le/e/a/b/f/n/pr;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2a8608.  `@@e.e.a.b.f.n.pr.e` @type ^`e.e.a.b.f.n.pr` := v0 @kind object;
  #L2a860c.  v0:= 3I;
  #L2a860e.  v0:= new `e.e.a.b.f.n.pr`[v0];
  #L2a8612.  v4:= `@@e.e.a.b.f.n.pr.c` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a8616.  v0[v1]:= v4 @kind object;
  #L2a861a.  v1:= `@@e.e.a.b.f.n.pr.d` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a861e.  v0[v2]:= v1 @kind object;
  #L2a8622.  v1:= `@@e.e.a.b.f.n.pr.e` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a8626.  v0[v3]:= v1 @kind object;
  #L2a862a.  `@@e.e.a.b.f.n.pr.f` @type ^`e.e.a.b.f.n.pr`[] := v0 @kind object;
  #L2a862e.  v0:= new `e.e.a.b.f.n.nr`;
  #L2a8632.  call `<init>`(v0) @signature `Le/e/a/b/f/n/nr;.<init>:()V` @kind direct;
  #L2a8638.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.n.pr` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/n/pr;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a864c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a8652.  v0.`e.e.a.b.f.n.pr.b` @type ^`int` := v3;
  #L2a8656.  return @kind void;
}
procedure `e.e.a.b.f.n.pr` `a`(`int` v1 ) @signature `Le/e/a/b/f/n/pr;.a:(I)Le/e/a/b/f/n/pr;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a84cc.  if v1 == 0 then goto L2a84ec;
  #L2a84d0.  v0:= 1I;
  #L2a84d2.  if v1 == v0 then goto L2a84e6;
  #L2a84d6.  v0:= 2I;
  #L2a84d8.  if v1 == v0 then goto L2a84e0;
  #L2a84dc.  v1:= 0I;
  #L2a84de.  return v1 @kind object;
  #L2a84e0.  v1:= `@@e.e.a.b.f.n.pr.e` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a84e4.  return v1 @kind object;
  #L2a84e6.  v1:= `@@e.e.a.b.f.n.pr.d` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a84ea.  return v1 @kind object;
  #L2a84ec.  v1:= `@@e.e.a.b.f.n.pr.c` @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a84f0.  return v1 @kind object;
}
procedure `e.e.a.b.f.n.x1` `d`() @signature `Le/e/a/b/f/n/pr;.d:()Le/e/a/b/f/n/x1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a84b4.  v0:= `@@e.e.a.b.f.n.or.a` @type ^`e.e.a.b.f.n.x1` @kind object;
  #L2a84b8.  return v0 @kind object;
}
procedure `e.e.a.b.f.n.pr`[] `values`() @signature `Le/e/a/b/f/n/pr;.values:()[Le/e/a/b/f/n/pr;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a8504.  v0:= `@@e.e.a.b.f.n.pr.f` @type ^`e.e.a.b.f.n.pr`[] @kind object;
  #L2a8508.  call temp:= `clone`(v0) @signature `[Le/e/a/b/f/n/pr;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a850e.  v0:= temp @kind object;
  #L2a8510.  v0:= (`e.e.a.b.f.n.pr`[]) v0 @kind object;
  #L2a8514.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.n.pr` v2 @kind this) @signature `Le/e/a/b/f/n/pr;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a8540.  v0:= new `java.lang.StringBuilder`;
  #L2a8544.  v1:= "<" @kind object;
  #L2a8548.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a854e.  v1:= constclass @type ^`e.e.a.b.f.n.pr` @kind object;
  #L2a8552.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2a8558.  v1:= temp @kind object;
  #L2a855a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a8560.  v1:= 64I;
  #L2a8564.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a856a.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2a8570.  v1:= temp;
  #L2a8572.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2a8578.  v1:= temp @kind object;
  #L2a857a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a8580.  v1:= " number=" @kind object;
  #L2a8584.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a858a.  v1:= v2.`e.e.a.b.f.n.pr.b` @type ^`int`;
  #L2a858e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a8594.  v1:= " name=" @kind object;
  #L2a8598.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a859e.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L2a85a4.  v1:= temp @kind object;
  #L2a85a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a85ac.  v1:= 62I;
  #L2a85b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a85b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a85bc.  v0:= temp @kind object;
  #L2a85be.  return v0 @kind object;
}
procedure `int` `zza`(`e.e.a.b.f.n.pr` v1 @kind this) @signature `Le/e/a/b/f/n/pr;.zza:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a8528.  v0:= v1.`e.e.a.b.f.n.pr.b` @type ^`int`;
  #L2a852c.  return v0;
}
