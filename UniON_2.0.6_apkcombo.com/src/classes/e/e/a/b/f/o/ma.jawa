record `e.e.a.b.f.o.ma` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Map$Entry` `e.e.a.b.f.o.ma.b` @AccessFlag ;
  `java.util.Iterator` `e.e.a.b.f.o.ma.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.a.b.f.o.na` `e.e.a.b.f.o.ma.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.o.ma` v0 @kind this, `e.e.a.b.f.o.na` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Le/e/a/b/f/o/ma;.<init>:(Le/e/a/b/f/o/na;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cf444.  v0.`e.e.a.b.f.o.ma.d` @type ^`e.e.a.b.f.o.na` := v1 @kind object;
  #L2cf448.  v0.`e.e.a.b.f.o.ma.c` @type ^`java.util.Iterator` := v2 @kind object;
  #L2cf44c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cf452.  return @kind void;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.o.ma` v1 @kind this) @signature `Le/e/a/b/f/o/ma;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf3f0.  v0:= v1.`e.e.a.b.f.o.ma.c` @type ^`java.util.Iterator` @kind object;
  #L2cf3f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2cf3fa.  v0:= temp;
  #L2cf3fc.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.o.ma` v1 @kind this) @signature `Le/e/a/b/f/o/ma;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf410.  v0:= v1.`e.e.a.b.f.o.ma.c` @type ^`java.util.Iterator` @kind object;
  #L2cf414.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2cf41a.  v0:= temp @kind object;
  #L2cf41c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2cf420.  v1.`e.e.a.b.f.o.ma.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L2cf424.  v0:= v1.`e.e.a.b.f.o.ma.b` @type ^`java.util.Map$Entry` @kind object;
  #L2cf428.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2cf42e.  v0:= temp @kind object;
  #L2cf430.  return v0 @kind object;
}
procedure `void` `remove`(`e.e.a.b.f.o.ma` v3 @kind this) @signature `Le/e/a/b/f/o/ma;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2cf464.  v0:= v3.`e.e.a.b.f.o.ma.b` @type ^`java.util.Map$Entry` @kind object;
  #L2cf468.  if v0 == 0 then goto L2cf470;
  #L2cf46c.  v0:= 1I;
  #L2cf46e.  goto L2cf472;
  #L2cf470.  v0:= 0I;
  #L2cf472.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L2cf476.  call `a`(v0, v1) @signature `Le/e/a/b/f/o/e4;.a:(ZLjava/lang/Object;)V` @kind static;
  #L2cf47c.  v0:= v3.`e.e.a.b.f.o.ma.b` @type ^`java.util.Map$Entry` @kind object;
  #L2cf480.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2cf486.  v0:= temp @kind object;
  #L2cf488.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2cf48c.  v1:= v3.`e.e.a.b.f.o.ma.c` @type ^`java.util.Iterator` @kind object;
  #L2cf490.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2cf496.  v1:= v3.`e.e.a.b.f.o.ma.d` @type ^`e.e.a.b.f.o.na` @kind object;
  #L2cf49a.  v1:= v1.`e.e.a.b.f.o.na.c` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2cf49e.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2cf4a4.  v2:= temp;
  #L2cf4a6.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/o/ta;.b:(Le/e/a/b/f/o/ta;I)I` @kind static;
  #L2cf4ac.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2cf4b2.  v0:= 0I;
  #L2cf4b4.  v3.`e.e.a.b.f.o.ma.b` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L2cf4b8.  return @kind void;
}
