record `e.e.a.b.f.q.f2` @kind class @AccessFlag FINAL extends `java.util.ListIterator` @kind interface {
  `java.util.ListIterator` `e.e.a.b.f.q.f2.b` @AccessFlag FINAL;
  `int` `e.e.a.b.f.q.f2.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.a.b.f.q.h2` `e.e.a.b.f.q.f2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.f2` v0 @kind this, `e.e.a.b.f.q.h2` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/q/f2;.<init>:(Le/e/a/b/f/q/h2;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dd3a8.  v0.`e.e.a.b.f.q.f2.d` @type ^`e.e.a.b.f.q.h2` := v1 @kind object;
  #L2dd3ac.  v0.`e.e.a.b.f.q.f2.c` @type ^`int` := v2;
  #L2dd3b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd3b6.  v1:= v0.`e.e.a.b.f.q.f2.d` @type ^`e.e.a.b.f.q.h2` @kind object;
  #L2dd3ba.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/h2;.a:(Le/e/a/b/f/q/h2;)Le/e/a/b/f/q/l0;` @kind static;
  #L2dd3c0.  v1:= temp @kind object;
  #L2dd3c2.  v2:= v0.`e.e.a.b.f.q.f2.c` @type ^`int`;
  #L2dd3c6.  call temp:= `listIterator`(v1, v2) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L2dd3cc.  v1:= temp @kind object;
  #L2dd3ce.  v0.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` := v1 @kind object;
  #L2dd3d2.  return @kind void;
}
procedure `void` `add`(`e.e.a.b.f.q.f2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/f2;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2dd3e4.  v1:= (`java.lang.String`) v1 @kind object;
  #L2dd3e8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2dd3ec.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2dd3f2.  throw v1;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd2e0.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd2e4.  call temp:= `hasNext`(v0) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L2dd2ea.  v0:= temp;
  #L2dd2ec.  return v0;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd300.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd304.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L2dd30a.  v0:= temp;
  #L2dd30c.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2dd360.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd364.  call temp:= `next`(v0) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2dd36a.  v0:= temp @kind object;
  #L2dd36c.  v0:= (`java.lang.String`) v0 @kind object;
  #L2dd370.  return v0 @kind object;
}
procedure `int` `nextIndex`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd320.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd324.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L2dd32a.  v0:= temp;
  #L2dd32c.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2dd384.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd388.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L2dd38e.  v0:= temp @kind object;
  #L2dd390.  v0:= (`java.lang.String`) v0 @kind object;
  #L2dd394.  return v0 @kind object;
}
procedure `int` `previousIndex`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd340.  v0:= v1.`e.e.a.b.f.q.f2.b` @type ^`java.util.ListIterator` @kind object;
  #L2dd344.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L2dd34a.  v0:= temp;
  #L2dd34c.  return v0;
}
procedure `void` `remove`(`e.e.a.b.f.q.f2` v1 @kind this) @signature `Le/e/a/b/f/q/f2;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2dd404.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2dd408.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2dd40e.  throw v0;
}
procedure `void` `set`(`e.e.a.b.f.q.f2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/f2;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L2dd420.  v1:= (`java.lang.String`) v1 @kind object;
  #L2dd424.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2dd428.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2dd42e.  throw v1;
}
