record `e.e.a.b.f.o.va` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.o.d0` @kind interface {
  `java.util.Set` `e.e.a.b.f.o.va.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Map` `e.e.a.b.f.o.va.c` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.o.va` v0 @kind this) @signature `Le/e/a/b/f/o/va;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d0390.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d0396.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Le/e/a/b/f/o/va;.a:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Map` `b`() @signature `Le/e/a/b/f/o/va;.b:()Ljava/util/Map;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `c`(`e.e.a.b.f.o.va` v1 @kind this) @signature `Le/e/a/b/f/o/va;.c:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d0368.  v0:= v1.`e.e.a.b.f.o.va.b` @type ^`java.util.Set` @kind object;
  #L2d036c.  if v0 != 0 then goto L2d037c;
  #L2d0370.  call temp:= `a`(v1) @signature `Le/e/a/b/f/o/va;.a:()Ljava/util/Set;` @kind virtual;
  #L2d0376.  v0:= temp @kind object;
  #L2d0378.  v1.`e.e.a.b.f.o.va.b` @type ^`java.util.Set` := v0 @kind object;
  #L2d037c.  return v0 @kind object;
}
procedure `java.util.Map` `d`(`e.e.a.b.f.o.va` v1 @kind this) @signature `Le/e/a/b/f/o/va;.d:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d0340.  v0:= v1.`e.e.a.b.f.o.va.c` @type ^`java.util.Map` @kind object;
  #L2d0344.  if v0 != 0 then goto L2d0354;
  #L2d0348.  call temp:= `b`(v1) @signature `Le/e/a/b/f/o/va;.b:()Ljava/util/Map;` @kind virtual;
  #L2d034e.  v0:= temp @kind object;
  #L2d0350.  v1.`e.e.a.b.f.o.va.c` @type ^`java.util.Map` := v0 @kind object;
  #L2d0354.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.o.va` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/va;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d02ac.  if v2 != v1 then goto L2d02b4;
  #L2d02b0.  v2:= 1I;
  #L2d02b2.  goto L2d02be;
  #L2d02b4.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.o.d0` @kind boolean;
  #L2d02b8.  if v0 != 0 then goto L2d02c0;
  #L2d02bc.  v2:= 0I;
  #L2d02be.  return v2;
  #L2d02c0.  v2:= (`e.e.a.b.f.o.d0`) v2 @kind object;
  #L2d02c4.  call temp:= `d`(v1) @signature `Le/e/a/b/f/o/d0;.d:()Ljava/util/Map;` @kind interface;
  #L2d02ca.  v0:= temp @kind object;
  #L2d02cc.  call temp:= `d`(v2) @signature `Le/e/a/b/f/o/d0;.d:()Ljava/util/Map;` @kind interface;
  #L2d02d2.  v2:= temp @kind object;
  #L2d02d4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2d02da.  v2:= temp;
  #L2d02dc.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.o.va` v1 @kind this) @signature `Le/e/a/b/f/o/va;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d02f0.  call temp:= `d`(v1) @signature `Le/e/a/b/f/o/va;.d:()Ljava/util/Map;` @kind virtual;
  #L2d02f6.  v0:= temp @kind object;
  #L2d02f8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L2d02fe.  v0:= temp;
  #L2d0300.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.o.va` v1 @kind this) @signature `Le/e/a/b/f/o/va;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d0314.  call temp:= `d`(v1) @signature `Le/e/a/b/f/o/va;.d:()Ljava/util/Map;` @kind virtual;
  #L2d031a.  v0:= temp @kind object;
  #L2d031c.  v0:= (`e.e.a.b.f.o.ka`) v0 @kind object;
  #L2d0320.  v0:= v0.`e.e.a.b.f.o.ka.d` @type ^`java.util.Map` @kind object;
  #L2d0324.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d032a.  v0:= temp @kind object;
  #L2d032c.  return v0 @kind object;
}
