record `e.e.a.b.f.r.f` @kind class @AccessFlag FINAL extends `e.e.a.b.f.r.y0` @kind class {
  `e.e.a.b.f.r.h` `e.e.a.b.f.r.f.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.f` v0 @kind this, `e.e.a.b.f.r.h` v1 @kind object) @signature `Le/e/a/b/f/r/f;.<init>:(Le/e/a/b/f/r/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30af84.  v0.`e.e.a.b.f.r.f.b` @type ^`e.e.a.b.f.r.h` := v1 @kind object;
  #L30af88.  call `<init>`(v0) @signature `Le/e/a/b/f/r/y0;.<init>:()V` @kind direct;
  #L30af8e.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.r.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/f;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30aec4.  v0:= v1.`e.e.a.b.f.r.f.b` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30aec8.  v0:= v0.`e.e.a.b.f.r.h.d` @type ^`java.util.Map` @kind object;
  #L30aecc.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L30aed2.  v0:= temp @kind object;
  #L30aed4.  if v0 == 0 then goto L30aee6;
  #L30aed8.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30aede.  v2:= temp;
  #L30aee0.  goto L30aee4;
  #L30aee2.  v2:= 0I;
  #L30aee4.  return v2;
  #L30aee6.  v2:= 0I;
  #L30aee8.  throw v2;
  catch `java.lang.ClassCastException` @[L30aed8..L30aee0] goto L30aee2;
  catch `java.lang.NullPointerException` @[L30aed8..L30aee0] goto L30aee2;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.r.f` v2 @kind this) @signature `Le/e/a/b/f/r/f;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30af4c.  v0:= new `e.e.a.b.f.r.g`;
  #L30af50.  v1:= v2.`e.e.a.b.f.r.f.b` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30af54.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/g;.<init>:(Le/e/a/b/f/r/h;)V` @kind direct;
  #L30af5a.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.r.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/f;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30af0c.  call temp:= `contains`(v1, v2) @signature `Le/e/a/b/f/r/f;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L30af12.  v0:= temp;
  #L30af14.  if v0 != 0 then goto L30af1c;
  #L30af18.  v2:= 0I;
  #L30af1a.  return v2;
  #L30af1c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L30af20.  v0:= v1.`e.e.a.b.f.r.f.b` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30af24.  v0:= v0.`e.e.a.b.f.r.h.e` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30af28.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L30af2e.  v2:= temp @kind object;
  #L30af30.  call `a`(v0, v2) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;Ljava/lang/Object;)V` @kind static;
  #L30af36.  v2:= 1I;
  #L30af38.  return v2;
}
procedure `java.util.Map` `zza`(`e.e.a.b.f.r.f` v1 @kind this) @signature `Le/e/a/b/f/r/f;.zza:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L30af6c.  v0:= v1.`e.e.a.b.f.r.f.b` @type ^`e.e.a.b.f.r.h` @kind object;
  #L30af70.  return v0 @kind object;
}
