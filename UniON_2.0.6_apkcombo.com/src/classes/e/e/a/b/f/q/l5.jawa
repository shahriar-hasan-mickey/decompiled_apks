record `e.e.a.b.f.q.l5` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface {
  `e.e.a.b.f.q.m5` `e.e.a.b.f.q.l5.b` @AccessFlag PRIVATE_TRANSIENT;
  `e.e.a.b.f.q.m5` `e.e.a.b.f.q.l5.c` @AccessFlag PRIVATE_TRANSIENT;
  `e.e.a.b.f.q.e5` `e.e.a.b.f.q.l5.d` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.q.l5` v0 @kind this) @signature `Le/e/a/b/f/q/l5;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e3790.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e3796.  return @kind void;
}
procedure `e.e.a.b.f.q.l5` `f`() @signature `Le/e/a/b/f/q/l5;.f:()Le/e/a/b/f/q/l5;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e35ac.  v0:= `@@e.e.a.b.f.q.f6.h` @type ^`e.e.a.b.f.q.l5` @kind object;
  #L2e35b0.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.m5` `a`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.a:()Le/e/a/b/f/q/m5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e35c4.  v0:= v1.`e.e.a.b.f.q.l5.b` @type ^`e.e.a.b.f.q.m5` @kind object;
  #L2e35c8.  if v0 != 0 then goto L2e35d8;
  #L2e35cc.  call temp:= `b`(v1) @signature `Le/e/a/b/f/q/l5;.b:()Le/e/a/b/f/q/m5;` @kind virtual;
  #L2e35d2.  v0:= temp @kind object;
  #L2e35d4.  v1.`e.e.a.b.f.q.l5.b` @type ^`e.e.a.b.f.q.m5` := v0 @kind object;
  #L2e35d8.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.m5` `b`() @signature `Le/e/a/b/f/q/l5;.b:()Le/e/a/b/f/q/m5;` @AccessFlag ABSTRACT {

  # return;
}
procedure `e.e.a.b.f.q.m5` `c`() @signature `Le/e/a/b/f/q/l5;.c:()Le/e/a/b/f/q/m5;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `clear`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e37a8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2e37ac.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e37b2.  throw v0;
}
procedure `boolean` `containsKey`(`e.e.a.b.f.q.l5` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/l5;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e34d4.  call temp:= `get`(v0, v1) @signature `Le/e/a/b/f/q/l5;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e34da.  v1:= temp @kind object;
  #L2e34dc.  if v1 == 0 then goto L2e34e4;
  #L2e34e0.  v1:= 1I;
  #L2e34e2.  return v1;
  #L2e34e4.  v1:= 0I;
  #L2e34e6.  return v1;
}
procedure `boolean` `containsValue`(`e.e.a.b.f.q.l5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/l5;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e34f8.  call temp:= `d`(v1) @signature `Le/e/a/b/f/q/l5;.d:()Le/e/a/b/f/q/e5;` @kind virtual;
  #L2e34fe.  v0:= temp @kind object;
  #L2e3500.  call temp:= `contains`(v0, v2) @signature `Le/e/a/b/f/q/e5;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e3506.  v2:= temp;
  #L2e3508.  return v2;
}
procedure `e.e.a.b.f.q.e5` `d`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.d:()Le/e/a/b/f/q/e5;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3584.  v0:= v1.`e.e.a.b.f.q.l5.d` @type ^`e.e.a.b.f.q.e5` @kind object;
  #L2e3588.  if v0 != 0 then goto L2e3598;
  #L2e358c.  call temp:= `e`(v1) @signature `Le/e/a/b/f/q/l5;.e:()Le/e/a/b/f/q/e5;` @kind virtual;
  #L2e3592.  v0:= temp @kind object;
  #L2e3594.  v1.`e.e.a.b.f.q.l5.d` @type ^`e.e.a.b.f.q.e5` := v0 @kind object;
  #L2e3598.  return v0 @kind object;
}
procedure `e.e.a.b.f.q.e5` `e`() @signature `Le/e/a/b/f/q/l5;.e:()Le/e/a/b/f/q/e5;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e374c.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/l5;.a:()Le/e/a/b/f/q/m5;` @kind virtual;
  #L2e3752.  v0:= temp @kind object;
  #L2e3754.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.b.f.q.l5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/l5;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e351c.  if v1 != v2 then goto L2e3524;
  #L2e3520.  v2:= 1I;
  #L2e3522.  goto L2e352e;
  #L2e3524.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L2e3528.  if v0 != 0 then goto L2e3530;
  #L2e352c.  v2:= 0I;
  #L2e352e.  return v2;
  #L2e3530.  v2:= (`java.util.Map`) v2 @kind object;
  #L2e3534.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2e353a.  v0:= temp @kind object;
  #L2e353c.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2e3542.  v2:= temp @kind object;
  #L2e3544.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2e354a.  v2:= temp;
  #L2e354c.  return v2;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/q/l5;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getOrDefault`(`e.e.a.b.f.q.l5` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/l5;.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e3610.  call temp:= `get`(v0, v1) @signature `Le/e/a/b/f/q/l5;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e3616.  v1:= temp @kind object;
  #L2e3618.  if v1 == 0 then goto L2e361e;
  #L2e361c.  return v1 @kind object;
  #L2e361e.  return v2 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e35ec.  call temp:= `a`(v1) @signature `Le/e/a/b/f/q/l5;.a:()Le/e/a/b/f/q/m5;` @kind virtual;
  #L2e35f2.  v0:= temp @kind object;
  #L2e35f4.  call temp:= `a`(v0) @signature `Le/e/a/b/f/q/i6;.a:(Ljava/util/Set;)I` @kind static;
  #L2e35fa.  v0:= temp;
  #L2e35fc.  return v0;
}
procedure `boolean` `isEmpty`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3560.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2e3566.  v0:= temp;
  #L2e3568.  if v0 != 0 then goto L2e3570;
  #L2e356c.  v0:= 1I;
  #L2e356e.  return v0;
  #L2e3570.  v0:= 0I;
  #L2e3572.  return v0;
}
procedure `java.util.Set` `keySet`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3768.  v0:= v1.`e.e.a.b.f.q.l5.c` @type ^`e.e.a.b.f.q.m5` @kind object;
  #L2e376c.  if v0 != 0 then goto L2e377c;
  #L2e3770.  call temp:= `c`(v1) @signature `Le/e/a/b/f/q/l5;.c:()Le/e/a/b/f/q/m5;` @kind virtual;
  #L2e3776.  v0:= temp @kind object;
  #L2e3778.  v1.`e.e.a.b.f.q.l5.c` @type ^`e.e.a.b.f.q.m5` := v0 @kind object;
  #L2e377c.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`e.e.a.b.f.q.l5` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/q/l5;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e3630.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e3634.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e363a.  throw v1;
}
procedure `void` `putAll`(`e.e.a.b.f.q.l5` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Le/e/a/b/f/q/l5;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e37c4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e37c8.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e37ce.  throw v1;
}
procedure `java.lang.Object` `remove`(`e.e.a.b.f.q.l5` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/q/l5;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e364c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2e3650.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2e3656.  throw v1;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.q.l5` v6 @kind this) @signature `Le/e/a/b/f/q/l5;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e3668.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2e366e.  v0:= temp;
  #L2e3670.  v1:= "size" @kind object;
  #L2e3674.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/b;.a:(ILjava/lang/String;)I` @kind static;
  #L2e367a.  v1:= new `java.lang.StringBuilder`;
  #L2e367e.  v2:= (`long`) v0 @kind i2l;
  #L2e3680.  v4:= 8L;
  #L2e3684.  v2:= v2 * v4 @kind long;
  #L2e3688.  v4:= 1073741824L;
  #L2e368e.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2e3694.  v2:= temp @kind wide;
  #L2e3696.  v0:= (`int`) v2 @kind l2i;
  #L2e3698.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2e369e.  v0:= 123I;
  #L2e36a2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e36a8.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2e36ae.  v0:= temp @kind object;
  #L2e36b0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e36b6.  v0:= temp @kind object;
  #L2e36b8.  v2:= 1I;
  #L2e36ba.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e36c0.  v3:= temp;
  #L2e36c2.  if v3 == 0 then goto L2e370a;
  #L2e36c6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e36cc.  v3:= temp @kind object;
  #L2e36ce.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2e36d2.  if v2 != 0 then goto L2e36e0;
  #L2e36d6.  v2:= ", " @kind object;
  #L2e36da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e36e0.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2e36e6.  v2:= temp @kind object;
  #L2e36e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e36ee.  v2:= 61I;
  #L2e36f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e36f8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2e36fe.  v2:= temp @kind object;
  #L2e3700.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e3706.  v2:= 0I;
  #L2e3708.  goto L2e36ba;
  #L2e370a.  v0:= 125I;
  #L2e370e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e3714.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e371a.  v0:= temp @kind object;
  #L2e371c.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`e.e.a.b.f.q.l5` v1 @kind this) @signature `Le/e/a/b/f/q/l5;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3730.  call temp:= `d`(v1) @signature `Le/e/a/b/f/q/l5;.d:()Le/e/a/b/f/q/e5;` @kind virtual;
  #L2e3736.  v0:= temp @kind object;
  #L2e3738.  return v0 @kind object;
}
