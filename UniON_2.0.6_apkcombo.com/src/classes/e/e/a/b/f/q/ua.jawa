record `e.e.a.b.f.q.ua` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/q/ua;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2ebc20.  v0:= constclass @type ^`e.e.a.b.f.q.ua` @kind object;
  #L2ebc24.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ebc2a.  v0:= temp @kind object;
  #L2ebc2c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2ebc32.  v0:= new `e.e.a.b.f.q.t9`;
  #L2ebc36.  v1:= 0I;
  #L2ebc38.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/q/t9;.<init>:(Le/e/a/b/f/q/s8;)V` @kind direct;
  #L2ebc3e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.q.ua` v0 @kind this) @signature `Le/e/a/b/f/q/ua;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ebc50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ebc56.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/q/ua;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;

  #L2e9928.  if v0 == 0 then goto L2e993e;
  #L2e992c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2e9932.  v0:= temp;
  #L2e9934.  if v0 == 0 then goto L2e993a;
  #L2e9938.  goto L2e993e;
  #L2e993a.  v0:= 0I;
  #L2e993c.  return v0;
  #L2e993e.  v0:= 1I;
  #L2e9940.  return v0;
}
