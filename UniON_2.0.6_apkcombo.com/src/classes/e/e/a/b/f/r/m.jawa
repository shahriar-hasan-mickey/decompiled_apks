record `e.e.a.b.f.r.m` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `java.lang.Object` `e.e.a.b.f.r.m.b` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.r.m.c` @AccessFlag ;
  `e.e.a.b.f.r.m` `e.e.a.b.f.r.m.d` @AccessFlag FINAL;
  `java.util.Collection` `e.e.a.b.f.r.m.e` @AccessFlag FINAL;
  `e.e.a.b.f.r.p` `e.e.a.b.f.r.m.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.r.m` v0 @kind this, `e.e.a.b.f.r.p` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Collection` v3 @kind object, `e.e.a.b.f.r.m` v4 @kind object) @signature `Le/e/a/b/f/r/m;.<init>:(Le/e/a/b/f/r/p;Ljava/lang/Object;Ljava/util/Collection;Le/e/a/b/f/r/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30b884.  v0.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` := v1 @kind object;
  #L30b888.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L30b88e.  v0.`e.e.a.b.f.r.m.b` @type ^`java.lang.Object` := v2 @kind object;
  #L30b892.  v0.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` := v3 @kind object;
  #L30b896.  v0.`e.e.a.b.f.r.m.d` @type ^`e.e.a.b.f.r.m` := v4 @kind object;
  #L30b89a.  if v4 != 0 then goto L30b8a2;
  #L30b89e.  v1:= 0I;
  #L30b8a0.  goto L30b8a6;
  #L30b8a2.  v1:= v4.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b8a6.  v0.`e.e.a.b.f.r.m.e` @type ^`java.util.Collection` := v1 @kind object;
  #L30b8aa.  return @kind void;
}
procedure `boolean` `add`(`e.e.a.b.f.r.m` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/r/m;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30b5f4.  call `zza`(v2) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b5fa.  v0:= v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b5fe.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L30b604.  v0:= temp;
  #L30b606.  v1:= v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b60a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30b610.  v3:= temp;
  #L30b612.  if v3 == 0 then goto L30b62c;
  #L30b616.  v1:= v2.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b61a.  call temp:= `c`(v1) @signature `Le/e/a/b/f/r/p;.c:(Le/e/a/b/f/r/p;)I` @kind static;
  #L30b620.  if v0 == 0 then goto L30b62c;
  #L30b624.  call `d`(v2) @signature `Le/e/a/b/f/r/m;.d:()V` @kind virtual;
  #L30b62a.  v3:= 1I;
  #L30b62c.  return v3;
}
procedure `boolean` `addAll`(`e.e.a.b.f.r.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/r/m;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30b640.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L30b646.  v0:= temp;
  #L30b648.  if v0 == 0 then goto L30b650;
  #L30b64c.  v4:= 0I;
  #L30b64e.  return v4;
  #L30b650.  call temp:= `size`(v3) @signature `Le/e/a/b/f/r/m;.size:()I` @kind virtual;
  #L30b656.  v0:= temp;
  #L30b658.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b65c.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L30b662.  v4:= temp;
  #L30b664.  if v4 == 0 then goto L30b68c;
  #L30b668.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b66c.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b672.  v1:= temp;
  #L30b674.  v2:= v3.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b678.  v1:= v1 - v0 @kind int;
  #L30b67a.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b680.  if v0 != 0 then goto L30b68c;
  #L30b684.  call `d`(v3) @signature `Le/e/a/b/f/r/m;.d:()V` @kind virtual;
  #L30b68a.  v4:= 1I;
  #L30b68c.  return v4;
}
procedure `void` `clear`(`e.e.a.b.f.r.m` v2 @kind this) @signature `Le/e/a/b/f/r/m;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30b8bc.  call temp:= `size`(v2) @signature `Le/e/a/b/f/r/m;.size:()I` @kind virtual;
  #L30b8c2.  v0:= temp;
  #L30b8c4.  if v0 != 0 then goto L30b8ca;
  #L30b8c8.  return @kind void;
  #L30b8ca.  v1:= v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b8ce.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L30b8d4.  v1:= v2.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b8d8.  call temp:= `b`(v1, v0) @signature `Le/e/a/b/f/r/p;.b:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b8de.  call `zzb`(v2) @signature `Le/e/a/b/f/r/m;.zzb:()V` @kind virtual;
  #L30b8e4.  return @kind void;
}
procedure `boolean` `contains`(`e.e.a.b.f.r.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/m;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b6a0.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b6a6.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b6aa.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30b6b0.  v2:= temp;
  #L30b6b2.  return v2;
}
procedure `boolean` `containsAll`(`e.e.a.b.f.r.m` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/r/m;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b6c4.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b6ca.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b6ce.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L30b6d4.  v2:= temp;
  #L30b6d6.  return v2;
}
procedure `void` `d`(`e.e.a.b.f.r.m` v3 @kind this) @signature `Le/e/a/b/f/r/m;.d:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30b9b4.  v0:= v3.`e.e.a.b.f.r.m.d` @type ^`e.e.a.b.f.r.m` @kind object;
  #L30b9b8.  if v0 == 0 then goto L30b9c4;
  #L30b9bc.  call `d`(v0) @signature `Le/e/a/b/f/r/m;.d:()V` @kind virtual;
  #L30b9c2.  return @kind void;
  #L30b9c4.  v0:= v3.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b9c8.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;)Ljava/util/Map;` @kind static;
  #L30b9ce.  v0:= temp @kind object;
  #L30b9d0.  v1:= v3.`e.e.a.b.f.r.m.b` @type ^`java.lang.Object` @kind object;
  #L30b9d4.  v2:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b9d8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30b9de.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.r.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b6e8.  if v2 != v1 then goto L30b6f0;
  #L30b6ec.  v2:= 1I;
  #L30b6ee.  return v2;
  #L30b6f0.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b6f6.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b6fa.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Collection;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L30b700.  v2:= temp;
  #L30b702.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.r.m` v1 @kind this) @signature `Le/e/a/b/f/r/m;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b7f4.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b7fa.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b7fe.  call temp:= `hashCode`(v0) @signature `Ljava/util/Collection;.hashCode:()I` @kind interface;
  #L30b804.  v0:= temp;
  #L30b806.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.r.m` v1 @kind this) @signature `Le/e/a/b/f/r/m;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b860.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b866.  v0:= new `e.e.a.b.f.r.l`;
  #L30b86a.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/r/l;.<init>:(Le/e/a/b/f/r/m;)V` @kind direct;
  #L30b870.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.r.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/m;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b714.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b71a.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b71e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L30b724.  v2:= temp;
  #L30b726.  if v2 == 0 then goto L30b73a;
  #L30b72a.  v0:= v1.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b72e.  call temp:= `b`(v0) @signature `Le/e/a/b/f/r/p;.b:(Le/e/a/b/f/r/p;)I` @kind static;
  #L30b734.  call `zzb`(v1) @signature `Le/e/a/b/f/r/m;.zzb:()V` @kind virtual;
  #L30b73a.  return v2;
}
procedure `boolean` `removeAll`(`e.e.a.b.f.r.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/r/m;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30b74c.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L30b752.  v0:= temp;
  #L30b754.  if v0 == 0 then goto L30b75c;
  #L30b758.  v4:= 0I;
  #L30b75a.  return v4;
  #L30b75c.  call temp:= `size`(v3) @signature `Le/e/a/b/f/r/m;.size:()I` @kind virtual;
  #L30b762.  v0:= temp;
  #L30b764.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b768.  call temp:= `removeAll`(v1, v4) @signature `Ljava/util/Collection;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L30b76e.  v4:= temp;
  #L30b770.  if v4 == 0 then goto L30b792;
  #L30b774.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b778.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b77e.  v1:= temp;
  #L30b780.  v2:= v3.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b784.  v1:= v1 - v0 @kind int;
  #L30b786.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b78c.  call `zzb`(v3) @signature `Le/e/a/b/f/r/m;.zzb:()V` @kind virtual;
  #L30b792.  return v4;
}
procedure `boolean` `retainAll`(`e.e.a.b.f.r.m` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/e/a/b/f/r/m;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30b7a4.  if v4 == 0 then goto L30b7e0;
  #L30b7a8.  call temp:= `size`(v3) @signature `Le/e/a/b/f/r/m;.size:()I` @kind virtual;
  #L30b7ae.  v0:= temp;
  #L30b7b0.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b7b4.  call temp:= `retainAll`(v1, v4) @signature `Ljava/util/Collection;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L30b7ba.  v4:= temp;
  #L30b7bc.  if v4 == 0 then goto L30b7de;
  #L30b7c0.  v1:= v3.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b7c4.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b7ca.  v1:= temp;
  #L30b7cc.  v2:= v3.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b7d0.  v1:= v1 - v0 @kind int;
  #L30b7d2.  call temp:= `a`(v2, v1) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;I)I` @kind static;
  #L30b7d8.  call `zzb`(v3) @signature `Le/e/a/b/f/r/m;.zzb:()V` @kind virtual;
  #L30b7de.  return v4;
  #L30b7e0.  v4:= 0I;
  #L30b7e2.  throw v4;
}
procedure `int` `size`(`e.e.a.b.f.r.m` v1 @kind this) @signature `Le/e/a/b/f/r/m;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b818.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b81e.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b822.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L30b828.  v0:= temp;
  #L30b82a.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.r.m` v1 @kind this) @signature `Le/e/a/b/f/r/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30b83c.  call `zza`(v1) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b842.  v0:= v1.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b846.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30b84c.  v0:= temp @kind object;
  #L30b84e.  return v0 @kind object;
}
procedure `void` `zza`(`e.e.a.b.f.r.m` v2 @kind this) @signature `Le/e/a/b/f/r/m;.zza:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L30b8f8.  v0:= v2.`e.e.a.b.f.r.m.d` @type ^`e.e.a.b.f.r.m` @kind object;
  #L30b8fc.  if v0 == 0 then goto L30b924;
  #L30b900.  call `zza`(v0) @signature `Le/e/a/b/f/r/m;.zza:()V` @kind virtual;
  #L30b906.  v0:= v2.`e.e.a.b.f.r.m.d` @type ^`e.e.a.b.f.r.m` @kind object;
  #L30b90a.  v0:= v0.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b90e.  v1:= v2.`e.e.a.b.f.r.m.e` @type ^`java.util.Collection` @kind object;
  #L30b912.  if v0 != v1 then goto L30b918;
  #L30b916.  goto L30b958;
  #L30b918.  v0:= new `java.util.ConcurrentModificationException`;
  #L30b91c.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L30b922.  throw v0;
  #L30b924.  v0:= v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b928.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L30b92e.  v0:= temp;
  #L30b930.  if v0 == 0 then goto L30b958;
  #L30b934.  v0:= v2.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b938.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;)Ljava/util/Map;` @kind static;
  #L30b93e.  v0:= temp @kind object;
  #L30b940.  v1:= v2.`e.e.a.b.f.r.m.b` @type ^`java.lang.Object` @kind object;
  #L30b944.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30b94a.  v0:= temp @kind object;
  #L30b94c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L30b950.  if v0 == 0 then goto L30b958;
  #L30b954.  v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` := v0 @kind object;
  #L30b958.  return @kind void;
}
procedure `void` `zzb`(`e.e.a.b.f.r.m` v2 @kind this) @signature `Le/e/a/b/f/r/m;.zzb:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L30b96c.  v0:= v2.`e.e.a.b.f.r.m.d` @type ^`e.e.a.b.f.r.m` @kind object;
  #L30b970.  if v0 == 0 then goto L30b97c;
  #L30b974.  call `zzb`(v0) @signature `Le/e/a/b/f/r/m;.zzb:()V` @kind virtual;
  #L30b97a.  return @kind void;
  #L30b97c.  v0:= v2.`e.e.a.b.f.r.m.c` @type ^`java.util.Collection` @kind object;
  #L30b980.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L30b986.  v0:= temp;
  #L30b988.  if v0 == 0 then goto L30b9a2;
  #L30b98c.  v0:= v2.`e.e.a.b.f.r.m.f` @type ^`e.e.a.b.f.r.p` @kind object;
  #L30b990.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/p;.a:(Le/e/a/b/f/r/p;)Ljava/util/Map;` @kind static;
  #L30b996.  v0:= temp @kind object;
  #L30b998.  v1:= v2.`e.e.a.b.f.r.m.b` @type ^`java.lang.Object` @kind object;
  #L30b99c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30b9a2.  return @kind void;
}
