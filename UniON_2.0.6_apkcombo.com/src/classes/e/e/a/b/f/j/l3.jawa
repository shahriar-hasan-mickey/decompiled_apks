record `e.e.a.b.f.j.l3` @kind class @AccessFlag FINAL {
  `e.e.a.b.f.j.t5` `e.e.a.b.f.j.l3.a` @AccessFlag FINAL;
  `boolean` `e.e.a.b.f.j.l3.b` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.j.l3.c` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.j.l3` `@@e.e.a.b.f.j.l3.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/j/l3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L225264.  v0:= new `e.e.a.b.f.j.l3`;
  #L225268.  v1:= 1I;
  #L22526a.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/l3;.<init>:(Z)V` @kind direct;
  #L225270.  `@@e.e.a.b.f.j.l3.d` @type ^`e.e.a.b.f.j.l3` := v0 @kind object;
  #L225274.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.l3` v1 @kind this) @signature `Le/e/a/b/f/j/l3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L225288.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22528e.  v0:= 16I;
  #L225292.  call temp:= `b`(v0) @signature `Le/e/a/b/f/j/t5;.b:(I)Le/e/a/b/f/j/t5;` @kind static;
  #L225298.  v0:= temp @kind object;
  #L22529a.  v1.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` := v0 @kind object;
  #L22529e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.l3` v0 @kind this, `e.e.a.b.f.j.t5` v1 @kind object) @signature `Le/e/a/b/f/j/l3;.<init>:(Le/e/a/b/f/j/t5;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2252d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2252de.  v0.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` := v1 @kind object;
  #L2252e2.  call `a`(v0) @signature `Le/e/a/b/f/j/l3;.a:()V` @kind virtual;
  #L2252e8.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.j.l3` v0 @kind this, `boolean` v1 ) @signature `Le/e/a/b/f/j/l3;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2252b0.  v1:= 0I;
  #L2252b2.  call temp:= `b`(v1) @signature `Le/e/a/b/f/j/t5;.b:(I)Le/e/a/b/f/j/t5;` @kind static;
  #L2252b8.  v1:= temp @kind object;
  #L2252ba.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/l3;.<init>:(Le/e/a/b/f/j/t5;)V` @kind direct;
  #L2252c0.  call `a`(v0) @signature `Le/e/a/b/f/j/l3;.a:()V` @kind virtual;
  #L2252c6.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.j.n3` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/j/l3;.a:(Le/e/a/b/f/j/n3;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L225064.  call temp:= `zzb`(v0) @signature `Le/e/a/b/f/j/n3;.zzb:()Le/e/a/b/f/j/z6;` @kind interface;
  #L22506a.  v0:= 0I;
  #L22506c.  throw v0;
}
procedure `boolean` `a`(`java.util.Map$Entry` v0 @kind object) @signature `Le/e/a/b/f/j/l3;.a:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L224f7c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L224f82.  v0:= temp @kind object;
  #L224f84.  v0:= (`e.e.a.b.f.j.n3`) v0 @kind object;
  #L224f88.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/n3;.d:()Le/e/a/b/f/j/c7;` @kind interface;
  #L224f8e.  v0:= 0I;
  #L224f90.  throw v0;
}
procedure `void` `b`(`e.e.a.b.f.j.l3` v0 @kind this, `e.e.a.b.f.j.n3` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/j/l3;.b:(Le/e/a/b/f/j/n3;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L225394.  call temp:= `c`(v1) @signature `Le/e/a/b/f/j/n3;.c:()Z` @kind interface;
  #L22539a.  v1:= 0I;
  #L22539c.  throw v1;
}
procedure `void` `b`(`e.e.a.b.f.j.l3` v3 @kind this, `java.util.Map$Entry` v4 @kind object) @signature `Le/e/a/b/f/j/l3;.b:(Ljava/util/Map$Entry;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2253b0.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2253b6.  v0:= temp @kind object;
  #L2253b8.  v0:= (`e.e.a.b.f.j.n3`) v0 @kind object;
  #L2253bc.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2253c2.  v4:= temp @kind object;
  #L2253c4.  v1:= instanceof @variable v4 @type ^`e.e.a.b.f.j.d4` @kind boolean;
  #L2253c8.  v2:= 0I;
  #L2253ca.  if v1 == 0 then goto L2253da;
  #L2253ce.  v4:= (`e.e.a.b.f.j.d4`) v4 @kind object;
  #L2253d2.  call temp:= `c`() @signature `Le/e/a/b/f/j/d4;.c:()Le/e/a/b/f/j/c5;` @kind static;
  #L2253d8.  throw v2;
  #L2253da.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/n3;.c:()Z` @kind interface;
  #L2253e0.  throw v2;
}
procedure `int` `c`(`java.util.Map$Entry` v1 @kind object) @signature `Le/e/a/b/f/j/l3;.c:(Ljava/util/Map$Entry;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L225080.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L225086.  v0:= temp @kind object;
  #L225088.  v0:= (`e.e.a.b.f.j.n3`) v0 @kind object;
  #L22508c.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L225092.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/n3;.d:()Le/e/a/b/f/j/c7;` @kind interface;
  #L225098.  v1:= 0I;
  #L22509a.  throw v1;
}
procedure `e.e.a.b.f.j.l3` `g`() @signature `Le/e/a/b/f/j/l3;.g:()Le/e/a/b/f/j/l3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22502c.  v0:= `@@e.e.a.b.f.j.l3.d` @type ^`e.e.a.b.f.j.l3` @kind object;
  #L225030.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.j.l3` v1 @kind this) @signature `Le/e/a/b/f/j/l3;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L225368.  v0:= v1.`e.e.a.b.f.j.l3.b` @type ^`boolean` @kind boolean;
  #L22536c.  if v0 == 0 then goto L225372;
  #L225370.  return @kind void;
  #L225372.  v0:= v1.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L225376.  call `a`(v0) @signature `Le/e/a/b/f/j/t5;.a:()V` @kind virtual;
  #L22537c.  v0:= 1I;
  #L22537e.  v1.`e.e.a.b.f.j.l3.b` @type ^`boolean` := v0 @kind boolean;
  #L225382.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.j.l3` v2 @kind this, `e.e.a.b.f.j.l3` v3 @kind object) @signature `Le/e/a/b/f/j/l3;.a:(Le/e/a/b/f/j/l3;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2252fc.  v0:= v3.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L225300.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/t5;.c:()I` @kind virtual;
  #L225306.  v0:= temp;
  #L225308.  v1:= 0I;
  #L22530a.  v3:= v3.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L22530e.  if v0 > 0 then goto L225344;
  #L225312.  call temp:= `d`(v3) @signature `Le/e/a/b/f/j/t5;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L225318.  v3:= temp @kind object;
  #L22531a.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L225320.  v3:= temp @kind object;
  #L225322.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L225328.  v0:= temp;
  #L22532a.  if v0 != 0 then goto L225330;
  #L22532e.  return @kind void;
  #L225330.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L225336.  v3:= temp @kind object;
  #L225338.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L22533c.  call `b`(v2, v3) @signature `Le/e/a/b/f/j/l3;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L225342.  throw v1;
  #L225344.  v0:= 0I;
  #L225346.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/j/t5;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L22534c.  v3:= temp @kind object;
  #L22534e.  call `b`(v2, v3) @signature `Le/e/a/b/f/j/l3;.b:(Ljava/util/Map$Entry;)V` @kind direct;
  #L225354.  throw v1;
}
procedure `boolean` `b`(`e.e.a.b.f.j.l3` v1 @kind this) @signature `Le/e/a/b/f/j/l3;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L224fa4.  v0:= v1.`e.e.a.b.f.j.l3.b` @type ^`boolean` @kind boolean;
  #L224fa8.  return v0;
}
procedure `java.util.Iterator` `c`(`e.e.a.b.f.j.l3` v2 @kind this) @signature `Le/e/a/b/f/j/l3;.c:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2251c4.  v0:= v2.`e.e.a.b.f.j.l3.c` @type ^`boolean` @kind boolean;
  #L2251c8.  if v0 == 0 then goto L2251ec;
  #L2251cc.  v0:= new `e.e.a.b.f.j.i4`;
  #L2251d0.  v1:= v2.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2251d4.  call temp:= `entrySet`(v1) @signature `Le/e/a/b/f/j/t5;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2251da.  v1:= temp @kind object;
  #L2251dc.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2251e2.  v1:= temp @kind object;
  #L2251e4.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/i4;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L2251ea.  return v0 @kind object;
  #L2251ec.  v0:= v2.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2251f0.  call temp:= `entrySet`(v0) @signature `Le/e/a/b/f/j/t5;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2251f6.  v0:= temp @kind object;
  #L2251f8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2251fe.  v0:= temp @kind object;
  #L225200.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`e.e.a.b.f.j.l3` v4 @kind this) @signature `Le/e/a/b/f/j/l3;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22511c.  v0:= new `e.e.a.b.f.j.l3`;
  #L225120.  call `<init>`(v0) @signature `Le/e/a/b/f/j/l3;.<init>:()V` @kind direct;
  #L225126.  v1:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L22512a.  call temp:= `c`(v1) @signature `Le/e/a/b/f/j/t5;.c:()I` @kind virtual;
  #L225130.  v1:= temp;
  #L225132.  v2:= 0I;
  #L225134.  if v1 > 0 then goto L22518a;
  #L225138.  v1:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L22513c.  call temp:= `d`(v1) @signature `Le/e/a/b/f/j/t5;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L225142.  v1:= temp @kind object;
  #L225144.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22514a.  v1:= temp @kind object;
  #L22514c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L225152.  v3:= temp;
  #L225154.  if v3 != 0 then goto L225162;
  #L225158.  v1:= v4.`e.e.a.b.f.j.l3.c` @type ^`boolean` @kind boolean;
  #L22515c.  v0.`e.e.a.b.f.j.l3.c` @type ^`boolean` := v1 @kind boolean;
  #L225160.  return v0 @kind object;
  #L225162.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L225168.  v1:= temp @kind object;
  #L22516a.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L22516e.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L225174.  v3:= temp @kind object;
  #L225176.  v3:= (`e.e.a.b.f.j.n3`) v3 @kind object;
  #L22517a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L225180.  v1:= temp @kind object;
  #L225182.  call `b`(v0, v3, v1) @signature `Le/e/a/b/f/j/l3;.b:(Le/e/a/b/f/j/n3;Ljava/lang/Object;)V` @kind direct;
  #L225188.  throw v2;
  #L22518a.  v1:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L22518e.  v3:= 0I;
  #L225190.  call temp:= `a`(v1, v3) @signature `Le/e/a/b/f/j/t5;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L225196.  v1:= temp @kind object;
  #L225198.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L22519e.  v3:= temp @kind object;
  #L2251a0.  v3:= (`e.e.a.b.f.j.n3`) v3 @kind object;
  #L2251a4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2251aa.  v1:= temp @kind object;
  #L2251ac.  call `b`(v0, v3, v1) @signature `Le/e/a/b/f/j/l3;.b:(Le/e/a/b/f/j/n3;Ljava/lang/Object;)V` @kind direct;
  #L2251b2.  throw v2;
}
procedure `java.util.Iterator` `d`(`e.e.a.b.f.j.l3` v2 @kind this) @signature `Le/e/a/b/f/j/l3;.d:()Ljava/util/Iterator;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L225214.  v0:= v2.`e.e.a.b.f.j.l3.c` @type ^`boolean` @kind boolean;
  #L225218.  if v0 == 0 then goto L22523c;
  #L22521c.  v0:= new `e.e.a.b.f.j.i4`;
  #L225220.  v1:= v2.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L225224.  call temp:= `e`(v1) @signature `Le/e/a/b/f/j/t5;.e:()Ljava/util/Set;` @kind virtual;
  #L22522a.  v1:= temp @kind object;
  #L22522c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L225232.  v1:= temp @kind object;
  #L225234.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/j/i4;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L22523a.  return v0 @kind object;
  #L22523c.  v0:= v2.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L225240.  call temp:= `e`(v0) @signature `Le/e/a/b/f/j/t5;.e:()Ljava/util/Set;` @kind virtual;
  #L225246.  v0:= temp @kind object;
  #L225248.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22524e.  v0:= temp @kind object;
  #L225250.  return v0 @kind object;
}
procedure `boolean` `e`(`e.e.a.b.f.j.l3` v3 @kind this) @signature `Le/e/a/b/f/j/l3;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L224fbc.  v0:= v3.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L224fc0.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/t5;.c:()I` @kind virtual;
  #L224fc6.  v0:= temp;
  #L224fc8.  v1:= 0I;
  #L224fca.  if v0 > 0 then goto L225006;
  #L224fce.  v0:= v3.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L224fd2.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/t5;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L224fd8.  v0:= temp @kind object;
  #L224fda.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L224fe0.  v0:= temp @kind object;
  #L224fe2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L224fe8.  v2:= temp;
  #L224fea.  if v2 != 0 then goto L224ff2;
  #L224fee.  v0:= 1I;
  #L224ff0.  return v0;
  #L224ff2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L224ff8.  v0:= temp @kind object;
  #L224ffa.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L224ffe.  call temp:= `a`(v0) @signature `Le/e/a/b/f/j/l3;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L225004.  throw v1;
  #L225006.  v0:= v3.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L22500a.  v2:= 0I;
  #L22500c.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/j/t5;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L225012.  v0:= temp @kind object;
  #L225014.  call temp:= `a`(v0) @signature `Le/e/a/b/f/j/l3;.a:(Ljava/util/Map$Entry;)Z` @kind static;
  #L22501a.  throw v1;
}
procedure `boolean` `equals`(`e.e.a.b.f.j.l3` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/j/l3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L224f40.  if v1 != v2 then goto L224f48;
  #L224f44.  v2:= 1I;
  #L224f46.  return v2;
  #L224f48.  v0:= instanceof @variable v2 @type ^`e.e.a.b.f.j.l3` @kind boolean;
  #L224f4c.  if v0 != 0 then goto L224f54;
  #L224f50.  v2:= 0I;
  #L224f52.  return v2;
  #L224f54.  v2:= (`e.e.a.b.f.j.l3`) v2 @kind object;
  #L224f58.  v0:= v1.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L224f5c.  v2:= v2.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L224f60.  call temp:= `equals`(v0, v2) @signature `Le/e/a/b/f/j/t5;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L224f66.  v2:= temp;
  #L224f68.  return v2;
}
procedure `int` `f`(`e.e.a.b.f.j.l3` v4 @kind this) @signature `Le/e/a/b/f/j/l3;.f:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2250ac.  v0:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2250b0.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/t5;.c:()I` @kind virtual;
  #L2250b6.  v0:= temp;
  #L2250b8.  v1:= 0I;
  #L2250ba.  v2:= 0I;
  #L2250bc.  if v0 > 0 then goto L2250f6;
  #L2250c0.  v0:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2250c4.  call temp:= `d`(v0) @signature `Le/e/a/b/f/j/t5;.d:()Ljava/lang/Iterable;` @kind virtual;
  #L2250ca.  v0:= temp @kind object;
  #L2250cc.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2250d2.  v0:= temp @kind object;
  #L2250d4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2250da.  v3:= temp;
  #L2250dc.  if v3 != 0 then goto L2250e2;
  #L2250e0.  return v2;
  #L2250e2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2250e8.  v0:= temp @kind object;
  #L2250ea.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2250ee.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/l3;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L2250f4.  throw v1;
  #L2250f6.  v0:= v4.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L2250fa.  call temp:= `a`(v0, v2) @signature `Le/e/a/b/f/j/t5;.a:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L225100.  v0:= temp @kind object;
  #L225102.  call temp:= `c`(v0) @signature `Le/e/a/b/f/j/l3;.c:(Ljava/util/Map$Entry;)I` @kind static;
  #L225108.  throw v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.j.l3` v1 @kind this) @signature `Le/e/a/b/f/j/l3;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L225044.  v0:= v1.`e.e.a.b.f.j.l3.a` @type ^`e.e.a.b.f.j.t5` @kind object;
  #L225048.  call temp:= `hashCode`(v0) @signature `Le/e/a/b/f/j/t5;.hashCode:()I` @kind virtual;
  #L22504e.  v0:= temp;
  #L225050.  return v0;
}
