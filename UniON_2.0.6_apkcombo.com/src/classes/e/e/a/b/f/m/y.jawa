record `e.e.a.b.f.m.y` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `int` `e.e.a.b.f.m.y.b` @AccessFlag ;
  `int` `e.e.a.b.f.m.y.c` @AccessFlag ;
  `int` `e.e.a.b.f.m.y.d` @AccessFlag ;
  `e.e.a.b.f.m.d0` `e.e.a.b.f.m.y.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.m.y` v0 @kind this, `e.e.a.b.f.m.d0` v1 @kind object, `e.e.a.b.f.m.u` v2 @kind object) @signature `Le/e/a/b/f/m/y;.<init>:(Le/e/a/b/f/m/d0;Le/e/a/b/f/m/u;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2658c4.  v0.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` := v1 @kind object;
  #L2658c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2658ce.  v1:= v0.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L2658d2.  call temp:= `a`(v1) @signature `Le/e/a/b/f/m/d0;.a:(Le/e/a/b/f/m/d0;)I` @kind static;
  #L2658d8.  v1:= temp;
  #L2658da.  v0.`e.e.a.b.f.m.y.b` @type ^`int` := v1;
  #L2658de.  v1:= v0.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L2658e2.  call temp:= `d`(v1) @signature `Le/e/a/b/f/m/d0;.d:()I` @kind virtual;
  #L2658e8.  v1:= temp;
  #L2658ea.  v0.`e.e.a.b.f.m.y.c` @type ^`int` := v1;
  #L2658ee.  v1:= -1I;
  #L2658f0.  v0.`e.e.a.b.f.m.y.d` @type ^`int` := v1;
  #L2658f4.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.m.y` v2 @kind this) @signature `Le/e/a/b/f/m/y;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L26596c.  v0:= v2.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265970.  call temp:= `a`(v0) @signature `Le/e/a/b/f/m/d0;.a:(Le/e/a/b/f/m/d0;)I` @kind static;
  #L265976.  v0:= temp;
  #L265978.  v1:= v2.`e.e.a.b.f.m.y.b` @type ^`int`;
  #L26597c.  if v0 != v1 then goto L265982;
  #L265980.  return @kind void;
  #L265982.  v0:= new `java.util.ConcurrentModificationException`;
  #L265986.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L26598c.  throw v0;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Le/e/a/b/f/m/y;.a:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.m.y` v1 @kind this) @signature `Le/e/a/b/f/m/y;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L265850.  v0:= v1.`e.e.a.b.f.m.y.c` @type ^`int`;
  #L265854.  if v0 < 0 then goto L26585c;
  #L265858.  v0:= 1I;
  #L26585a.  return v0;
  #L26585c.  v0:= 0I;
  #L26585e.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.m.y` v3 @kind this) @signature `Le/e/a/b/f/m/y;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L265870.  call `a`(v3) @signature `Le/e/a/b/f/m/y;.a:()V` @kind direct;
  #L265876.  call temp:= `hasNext`(v3) @signature `Le/e/a/b/f/m/y;.hasNext:()Z` @kind virtual;
  #L26587c.  v0:= temp;
  #L26587e.  if v0 == 0 then goto L2658a8;
  #L265882.  v0:= v3.`e.e.a.b.f.m.y.c` @type ^`int`;
  #L265886.  v3.`e.e.a.b.f.m.y.d` @type ^`int` := v0;
  #L26588a.  call temp:= `a`(v3, v0) @signature `Le/e/a/b/f/m/y;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L265890.  v0:= temp @kind object;
  #L265892.  v1:= v3.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265896.  v2:= v3.`e.e.a.b.f.m.y.c` @type ^`int`;
  #L26589a.  call temp:= `b`(v1, v2) @signature `Le/e/a/b/f/m/d0;.b:(I)I` @kind virtual;
  #L2658a0.  v1:= temp;
  #L2658a2.  v3.`e.e.a.b.f.m.y.c` @type ^`int` := v1;
  #L2658a6.  return v0 @kind object;
  #L2658a8.  v0:= new `java.util.NoSuchElementException`;
  #L2658ac.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2658b2.  throw v0;
}
procedure `void` `remove`(`e.e.a.b.f.m.y` v3 @kind this) @signature `Le/e/a/b/f/m/y;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L265908.  call `a`(v3) @signature `Le/e/a/b/f/m/y;.a:()V` @kind direct;
  #L26590e.  v0:= v3.`e.e.a.b.f.m.y.d` @type ^`int`;
  #L265912.  if v0 < 0 then goto L26591a;
  #L265916.  v0:= 1I;
  #L265918.  goto L26591c;
  #L26591a.  v0:= 0I;
  #L26591c.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L265920.  call `a`(v0, v1) @signature `Le/e/a/b/f/m/b;.a:(ZLjava/lang/Object;)V` @kind static;
  #L265926.  v0:= v3.`e.e.a.b.f.m.y.b` @type ^`int`;
  #L26592a.  v0:= v0 + 32;
  #L26592e.  v3.`e.e.a.b.f.m.y.b` @type ^`int` := v0;
  #L265932.  v0:= v3.`e.e.a.b.f.m.y.e` @type ^`e.e.a.b.f.m.d0` @kind object;
  #L265936.  v1:= v0.`e.e.a.b.f.m.d0.d` @type ^`java.lang.Object`[] @kind object;
  #L26593a.  v2:= v3.`e.e.a.b.f.m.y.d` @type ^`int`;
  #L26593e.  v1:= v1[v2] @kind object;
  #L265942.  call temp:= `remove`(v0, v1) @signature `Le/e/a/b/f/m/d0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L265948.  v0:= v3.`e.e.a.b.f.m.y.c` @type ^`int`;
  #L26594c.  v1:= -1I;
  #L26594e.  v0:= v0 + v1 @kind int;
  #L265950.  v3.`e.e.a.b.f.m.y.c` @type ^`int` := v0;
  #L265954.  v3.`e.e.a.b.f.m.y.d` @type ^`int` := v1;
  #L265958.  return @kind void;
}
