record `e.e.a.b.f.l.h6` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.l.y7` @kind class {
  `int` `e.e.a.b.f.l.h6.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.l.h6.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.l.h6` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/l/h6;.<init>:(II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L2624a4.  call `<init>`(v1) @signature `Le/e/a/b/f/l/y7;.<init>:()V` @kind direct;
  #L2624aa.  v0:= "index" @kind object;
  #L2624ae.  call temp:= `b`(v3, v2, v0) @signature `Le/e/a/b/f/l/f4;.b:(IILjava/lang/String;)I` @kind static;
  #L2624b4.  v1.`e.e.a.b.f.l.h6.b` @type ^`int` := v2;
  #L2624b8.  v1.`e.e.a.b.f.l.h6.c` @type ^`int` := v3;
  #L2624bc.  return @kind void;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Le/e/a/b/f/l/h6;.a:(I)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`e.e.a.b.f.l.h6` v2 @kind this) @signature `Le/e/a/b/f/l/h6;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L261500.  v0:= v2.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261504.  v1:= v2.`e.e.a.b.f.l.h6.b` @type ^`int`;
  #L261508.  if v0 >= v1 then goto L261510;
  #L26150c.  v0:= 1I;
  #L26150e.  return v0;
  #L261510.  v0:= 0I;
  #L261512.  return v0;
}
procedure `boolean` `hasPrevious`(`e.e.a.b.f.l.h6` v1 @kind this) @signature `Le/e/a/b/f/l/h6;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L261524.  v0:= v1.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261528.  if v0 <= 0 then goto L261530;
  #L26152c.  v0:= 1I;
  #L26152e.  return v0;
  #L261530.  v0:= 0I;
  #L261532.  return v0;
}
procedure `java.lang.Object` `next`(`e.e.a.b.f.l.h6` v2 @kind this) @signature `Le/e/a/b/f/l/h6;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L261b68.  call temp:= `hasNext`(v2) @signature `Le/e/a/b/f/l/h6;.hasNext:()Z` @kind virtual;
  #L261b6e.  v0:= temp;
  #L261b70.  if v0 == 0 then goto L261b8a;
  #L261b74.  v0:= v2.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261b78.  v1:= v0 + 1;
  #L261b7c.  v2.`e.e.a.b.f.l.h6.c` @type ^`int` := v1;
  #L261b80.  call temp:= `a`(v2, v0) @signature `Le/e/a/b/f/l/h6;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L261b86.  v0:= temp @kind object;
  #L261b88.  return v0 @kind object;
  #L261b8a.  v0:= new `java.util.NoSuchElementException`;
  #L261b8e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L261b94.  throw v0;
}
procedure `int` `nextIndex`(`e.e.a.b.f.l.h6` v1 @kind this) @signature `Le/e/a/b/f/l/h6;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L261b18.  v0:= v1.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261b1c.  return v0;
}
procedure `java.lang.Object` `previous`(`e.e.a.b.f.l.h6` v1 @kind this) @signature `Le/e/a/b/f/l/h6;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L261ba8.  call temp:= `hasPrevious`(v1) @signature `Le/e/a/b/f/l/h6;.hasPrevious:()Z` @kind virtual;
  #L261bae.  v0:= temp;
  #L261bb0.  if v0 == 0 then goto L261bca;
  #L261bb4.  v0:= v1.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261bb8.  v0:= v0 + -1;
  #L261bbc.  v1.`e.e.a.b.f.l.h6.c` @type ^`int` := v0;
  #L261bc0.  call temp:= `a`(v1, v0) @signature `Le/e/a/b/f/l/h6;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L261bc6.  v0:= temp @kind object;
  #L261bc8.  return v0 @kind object;
  #L261bca.  v0:= new `java.util.NoSuchElementException`;
  #L261bce.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L261bd4.  throw v0;
}
procedure `int` `previousIndex`(`e.e.a.b.f.l.h6` v1 @kind this) @signature `Le/e/a/b/f/l/h6;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L261b30.  v0:= v1.`e.e.a.b.f.l.h6.c` @type ^`int`;
  #L261b34.  v0:= v0 + -1;
  #L261b38.  return v0;
}
