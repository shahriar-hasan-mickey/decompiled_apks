record `e.e.a.b.f.r.b2` @kind class @AccessFlag FINAL extends `java.io.OutputStream` @kind class {
  `long` `e.e.a.b.f.r.b2.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.r.b2` v2 @kind this) @signature `Le/e/a/b/f/r/b2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30f968.  call `<init>`(v2) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L30f96e.  v0:= 0L;
  #L30f972.  v2.`e.e.a.b.f.r.b2.b` @type ^`long` := v0 @kind wide;
  #L30f976.  return @kind void;
}
procedure `long` `k`(`e.e.a.b.f.r.b2` v2 @kind this) @signature `Le/e/a/b/f/r/b2;.k:()J` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L30f950.  v0:= v2.`e.e.a.b.f.r.b2.b` @type ^`long` @kind wide;
  #L30f954.  return v0 @kind wide;
}
procedure `void` `write`(`e.e.a.b.f.r.b2` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/r/b2;.write:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30f9ec.  v0:= v4.`e.e.a.b.f.r.b2.b` @type ^`long` @kind wide;
  #L30f9f0.  v2:= 1L;
  #L30f9f4.  v0:= v0 + v2 @kind long;
  #L30f9f6.  v4.`e.e.a.b.f.r.b2.b` @type ^`long` := v0 @kind wide;
  #L30f9fa.  return @kind void;
}
procedure `void` `write`(`e.e.a.b.f.r.b2` v4 @kind this, `byte`[] v5 @kind object) @signature `Le/e/a/b/f/r/b2;.write:([B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30f988.  v0:= v4.`e.e.a.b.f.r.b2.b` @type ^`long` @kind wide;
  #L30f98c.  v5:= length @variable v5;
  #L30f98e.  v2:= (`long`) v5 @kind i2l;
  #L30f990.  v0:= v0 + v2 @kind long;
  #L30f992.  v4.`e.e.a.b.f.r.b2.b` @type ^`long` := v0 @kind wide;
  #L30f996.  return @kind void;
}
procedure `void` `write`(`e.e.a.b.f.r.b2` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/r/b2;.write:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30f9a8.  if v4 < 0 then goto L30f9ce;
  #L30f9ac.  v3:= length @variable v3;
  #L30f9ae.  if v4 > v3 then goto L30f9ce;
  #L30f9b2.  if v5 < 0 then goto L30f9ce;
  #L30f9b6.  v4:= v4 + v5 @kind int;
  #L30f9b8.  if v4 > v3 then goto L30f9ce;
  #L30f9bc.  if v4 < 0 then goto L30f9ce;
  #L30f9c0.  v3:= v2.`e.e.a.b.f.r.b2.b` @type ^`long` @kind wide;
  #L30f9c4.  v0:= (`long`) v5 @kind i2l;
  #L30f9c6.  v3:= v3 + v0 @kind long;
  #L30f9c8.  v2.`e.e.a.b.f.r.b2.b` @type ^`long` := v3 @kind wide;
  #L30f9cc.  return @kind void;
  #L30f9ce.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L30f9d2.  call `<init>`(v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L30f9d8.  throw v3;
}
