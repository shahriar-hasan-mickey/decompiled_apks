record `e.e.a.b.f.j.s3` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.nio.charset.Charset` `@@e.e.a.b.f.j.s3.a` @AccessFlag STATIC_FINAL;
global `byte`[] `@@e.e.a.b.f.j.s3.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/j/s3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L226af4.  v0:= "UTF-8" @kind object;
  #L226af8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L226afe.  v0:= temp @kind object;
  #L226b00.  `@@e.e.a.b.f.j.s3.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L226b04.  v0:= "ISO-8859-1" @kind object;
  #L226b08.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L226b0e.  v0:= 0I;
  #L226b10.  v1:= new `byte`[v0];
  #L226b14.  `@@e.e.a.b.f.j.s3.b` @type ^`byte`[] := v1 @kind object;
  #L226b18.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L226b1e.  v1:= `@@e.e.a.b.f.j.s3.b` @type ^`byte`[] @kind object;
  #L226b22.  v2:= length @variable v1;
  #L226b24.  call temp:= `a`(v1, v0, v2, v0) @signature `Le/e/a/b/f/j/b3;.a:([BIIZ)Le/e/a/b/f/j/b3;` @kind static;
  #L226b2a.  return @kind void;
}
procedure `int` `a`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/b/f/j/s3;.a:(I[BII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2269e8.  v0:= v2;
  #L2269ea.  v2:= v4;
  #L2269ec.  v1:= v4 + v5 @kind int;
  #L2269f0.  if v2 >= v1 then goto L226a04;
  #L2269f4.  v0:= v0 * 31;
  #L2269f8.  v1:= v3[v2] @kind byte;
  #L2269fc.  v0:= v0 + v1 @kind int;
  #L2269fe.  v2:= v2 + 1;
  #L226a02.  goto L2269ec;
  #L226a04.  return v0;
}
procedure `int` `a`(`long` v2 ) @signature `Le/e/a/b/f/j/s3;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L226a18.  v0:= 32I;
  #L226a1c.  v0:= v2 ^>> v0 @kind long;
  #L226a20.  v2:= v2 ^~ v0 @kind long;
  #L226a22.  v3:= (`int`) v2 @kind l2i;
  #L226a24.  return v3;
}
procedure `int` `a`(`boolean` v0 ) @signature `Le/e/a/b/f/j/s3;.a:(Z)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2269c8.  if v0 == 0 then goto L2269d2;
  #L2269cc.  v0:= 1231I;
  #L2269d0.  return v0;
  #L2269d2.  v0:= 1237I;
  #L2269d6.  return v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L226a5c.  if v0 == 0 then goto L226a62;
  #L226a60.  return v0 @kind object;
  #L226a62.  v0:= new `java.lang.NullPointerException`;
  #L226a66.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L226a6c.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L226a80.  v0:= (`e.e.a.b.f.j.c5`) v0 @kind object;
  #L226a84.  call temp:= `g`(v0) @signature `Le/e/a/b/f/j/c5;.g:()Le/e/a/b/f/j/b5;` @kind interface;
  #L226a8a.  v0:= temp @kind object;
  #L226a8c.  v1:= (`e.e.a.b.f.j.c5`) v1 @kind object;
  #L226a90.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/j/b5;.a:(Le/e/a/b/f/j/c5;)Le/e/a/b/f/j/b5;` @kind interface;
  #L226a96.  call temp:= `b`(v0) @signature `Le/e/a/b/f/j/b5;.b:()Le/e/a/b/f/j/c5;` @kind interface;
  #L226a9c.  v0:= temp @kind object;
  #L226a9e.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/j/s3;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L226ab0.  if v0 == 0 then goto L226ab6;
  #L226ab4.  return v0 @kind object;
  #L226ab6.  v0:= new `java.lang.NullPointerException`;
  #L226aba.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226ac0.  throw v0;
}
procedure `boolean` `a`(`byte`[] v0 @kind object) @signature `Le/e/a/b/f/j/s3;.a:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2269ac.  call temp:= `a`(v0) @signature `Le/e/a/b/f/j/t6;.a:([B)Z` @kind static;
  #L2269b2.  v0:= temp;
  #L2269b4.  return v0;
}
procedure `java.lang.String` `b`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/j/s3;.b:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L226ad4.  v0:= new `java.lang.String`;
  #L226ad8.  v1:= `@@e.e.a.b.f.j.s3.a` @type ^`java.nio.charset.Charset` @kind object;
  #L226adc.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L226ae2.  return v0 @kind object;
}
procedure `int` `c`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/j/s3;.c:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L226a38.  v0:= length @variable v2;
  #L226a3a.  v1:= 0I;
  #L226a3c.  call temp:= `a`(v0, v2, v1, v0) @signature `Le/e/a/b/f/j/s3;.a:(I[BII)I` @kind static;
  #L226a42.  v2:= temp;
  #L226a44.  if v2 != 0 then goto L226a4a;
  #L226a48.  v2:= 1I;
  #L226a4a.  return v2;
}
