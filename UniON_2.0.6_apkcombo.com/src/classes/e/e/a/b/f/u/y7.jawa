record `e.e.a.b.f.u.y7` @kind class @AccessFlag FINAL extends `e.e.a.b.f.u.t7` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.u.y7` v0 @kind this) @signature `Le/e/a/b/f/u/y7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33d99c.  call `<init>`(v0) @signature `Le/e/a/b/f/u/t7;.<init>:()V` @kind direct;
  #L33d9a2.  return @kind void;
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 , `long` v4 , `int` v6 ) @signature `Le/e/a/b/f/u/y7;.a:([BIJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L33d2a4.  if v6 == 0 then goto L33d2f2;
  #L33d2a8.  v0:= 1I;
  #L33d2aa.  if v6 == v0 then goto L33d2e0;
  #L33d2ae.  v0:= 2I;
  #L33d2b0.  if v6 != v0 then goto L33d2d4;
  #L33d2b4.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d2ba.  v6:= temp;
  #L33d2bc.  v0:= 1L;
  #L33d2c0.  v4:= v4 + v0 @kind long;
  #L33d2c2.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d2c8.  v2:= temp;
  #L33d2ca.  call temp:= `a`(v3, v6, v2) @signature `Le/e/a/b/f/u/s7;.a:(III)I` @kind static;
  #L33d2d0.  v2:= temp;
  #L33d2d2.  return v2;
  #L33d2d4.  v2:= new `java.lang.AssertionError`;
  #L33d2d8.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L33d2de.  throw v2;
  #L33d2e0.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d2e6.  v2:= temp;
  #L33d2e8.  call temp:= `a`(v3, v2) @signature `Le/e/a/b/f/u/s7;.a:(II)I` @kind static;
  #L33d2ee.  v2:= temp;
  #L33d2f0.  return v2;
  #L33d2f2.  call temp:= `a`(v3) @signature `Le/e/a/b/f/u/s7;.a:(I)I` @kind static;
  #L33d2f8.  v2:= temp;
  #L33d2fa.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.u.y7` v15 @kind this, `int` v16 , `byte`[] v17 @kind object, `int` v18 , `int` v19 ) @signature `Le/e/a/b/f/u/y7;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L33d30c.  v0:= v17 @kind object;
  #L33d310.  v1:= v18;
  #L33d314.  v2:= v19;
  #L33d318.  v3:= v1 ^| v2 @kind int;
  #L33d31c.  v4:= length @variable v0;
  #L33d31e.  v4:= v4 - v2 @kind int;
  #L33d320.  v3:= v3 ^| v4 @kind int;
  #L33d322.  v4:= 2I;
  #L33d324.  v5:= 3I;
  #L33d326.  v6:= 0I;
  #L33d328.  if v3 < 0 then goto L33d480;
  #L33d32c.  v7:= (`long`) v1 @kind i2l;
  #L33d32e.  v1:= (`long`) v2 @kind i2l;
  #L33d330.  v1:= v1 - v7 @kind long;
  #L33d332.  v2:= (`int`) v1 @kind l2i;
  #L33d334.  v1:= 16I;
  #L33d338.  v9:= 1L;
  #L33d33c.  if v2 >= v1 then goto L33d344;
  #L33d340.  v1:= 0I;
  #L33d342.  goto L33d368;
  #L33d344.  v11:= v7 @kind wide;
  #L33d346.  v1:= 0I;
  #L33d348.  if v1 >= v2 then goto L33d366;
  #L33d34c.  v13:= v11 + v9 @kind long;
  #L33d350.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d356.  v3:= temp;
  #L33d358.  if v3 >= 0 then goto L33d35e;
  #L33d35c.  goto L33d368;
  #L33d35e.  v1:= v1 + 1;
  #L33d362.  v11:= v13 @kind wide;
  #L33d364.  goto L33d348;
  #L33d366.  v1:= v2;
  #L33d368.  v2:= v2 - v1 @kind int;
  #L33d36a.  v11:= (`long`) v1 @kind i2l;
  #L33d36c.  v7:= v7 + v11 @kind long;
  #L33d36e.  v1:= 0I;
  #L33d370.  if v2 <= 0 then goto L33d38c;
  #L33d374.  v11:= v7 + v9 @kind long;
  #L33d378.  call temp:= `a`(v0, v7) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d37e.  v1:= temp;
  #L33d380.  if v1 < 0 then goto L33d38e;
  #L33d384.  v2:= v2 + -1;
  #L33d388.  v7:= v11 @kind wide;
  #L33d38a.  goto L33d370;
  #L33d38c.  v11:= v7 @kind wide;
  #L33d38e.  if v2 != 0 then goto L33d394;
  #L33d392.  return v6;
  #L33d394.  v2:= v2 + -1;
  #L33d398.  v3:= -32I;
  #L33d39c.  v7:= -65I;
  #L33d3a0.  v8:= -1I;
  #L33d3a2.  if v1 >= v3 then goto L33d3d0;
  #L33d3a6.  if v2 != 0 then goto L33d3ac;
  #L33d3aa.  return v1;
  #L33d3ac.  v2:= v2 + -1;
  #L33d3b0.  v3:= -62I;
  #L33d3b4.  if v1 < v3 then goto L33d3ce;
  #L33d3b8.  v13:= v11 + v9 @kind long;
  #L33d3bc.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d3c2.  v1:= temp;
  #L33d3c4.  if v1 <= v7 then goto L33d3ca;
  #L33d3c8.  goto L33d3ce;
  #L33d3ca.  v7:= v13 @kind wide;
  #L33d3cc.  goto L33d36e;
  #L33d3ce.  return v8;
  #L33d3d0.  v13:= -16I;
  #L33d3d4.  if v1 >= v13 then goto L33d42a;
  #L33d3d8.  if v2 >= v4 then goto L33d3e6;
  #L33d3dc.  call temp:= `a`(v0, v1, v11, v2) @signature `Le/e/a/b/f/u/y7;.a:([BIJI)I` @kind static;
  #L33d3e2.  v0:= temp;
  #L33d3e4.  return v0;
  #L33d3e6.  v2:= v2 + -2;
  #L33d3ea.  v13:= v11 + v9 @kind long;
  #L33d3ee.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d3f4.  v11:= temp;
  #L33d3f6.  if v11 > v7 then goto L33d428;
  #L33d3fa.  v12:= -96I;
  #L33d3fe.  if v1 != v3 then goto L33d406;
  #L33d402.  if v11 < v12 then goto L33d428;
  #L33d406.  v3:= -19I;
  #L33d40a.  if v1 != v3 then goto L33d412;
  #L33d40e.  if v11 >= v12 then goto L33d428;
  #L33d412.  v11:= v13 + v9 @kind long;
  #L33d416.  call temp:= `a`(v0, v13) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d41c.  v1:= temp;
  #L33d41e.  if v1 <= v7 then goto L33d424;
  #L33d422.  goto L33d428;
  #L33d424.  v7:= v11 @kind wide;
  #L33d426.  goto L33d36e;
  #L33d428.  return v8;
  #L33d42a.  if v2 >= v5 then goto L33d438;
  #L33d42e.  call temp:= `a`(v0, v1, v11, v2) @signature `Le/e/a/b/f/u/y7;.a:([BIJI)I` @kind static;
  #L33d434.  v0:= temp;
  #L33d436.  return v0;
  #L33d438.  v2:= v2 + -3;
  #L33d43c.  v13:= v11 + v9 @kind long;
  #L33d440.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d446.  v3:= temp;
  #L33d448.  if v3 > v7 then goto L33d47e;
  #L33d44c.  v1:= v1 ^< 28;
  #L33d450.  v3:= v3 + 112;
  #L33d454.  v1:= v1 + v3 @kind int;
  #L33d456.  v1:= v1 ^> 30;
  #L33d45a.  if v1 != 0 then goto L33d47e;
  #L33d45e.  v11:= v13 + v9 @kind long;
  #L33d462.  call temp:= `a`(v0, v13) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d468.  v1:= temp;
  #L33d46a.  if v1 > v7 then goto L33d47e;
  #L33d46e.  v13:= v11 + v9 @kind long;
  #L33d472.  call temp:= `a`(v0, v11) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d478.  v1:= temp;
  #L33d47a.  if v1 <= v7 then goto L33d3ca;
  #L33d47e.  return v8;
  #L33d480.  v3:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33d484.  v5:= new `java.lang.Object`[v5];
  #L33d488.  v0:= length @variable v0;
  #L33d48a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d490.  v0:= temp @kind object;
  #L33d492.  v5[v6]:= v0 @kind object;
  #L33d496.  call temp:= `valueOf`(v18) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d49c.  v0:= temp @kind object;
  #L33d49e.  v1:= 1I;
  #L33d4a0.  v5[v1]:= v0 @kind object;
  #L33d4a4.  call temp:= `valueOf`(v19) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d4aa.  v0:= temp @kind object;
  #L33d4ac.  v5[v4]:= v0 @kind object;
  #L33d4b0.  v0:= "Array length=%d, index=%d, limit=%d" @kind object;
  #L33d4b4.  call temp:= `format`(v0, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33d4ba.  v0:= temp @kind object;
  #L33d4bc.  call `<init>`(v3, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d4c2.  throw v3;
}
procedure `int` `a`(`e.e.a.b.f.u.y7` v22 @kind this, `java.lang.CharSequence` v23 @kind object, `byte`[] v24 @kind object, `int` v25 , `int` v26 ) @signature `Le/e/a/b/f/u/y7;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L33d4d4.  v0:= v23 @kind object;
  #L33d4d8.  v1:= v24 @kind object;
  #L33d4dc.  v2:= v25;
  #L33d4e0.  v3:= v26;
  #L33d4e4.  v4:= (`long`) v2 @kind i2l;
  #L33d4e6.  v6:= (`long`) v3 @kind i2l;
  #L33d4e8.  v6:= v6 + v4 @kind long;
  #L33d4ea.  call temp:= `length`(v23) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L33d4f0.  v8:= temp;
  #L33d4f2.  v9:= " at index " @kind object;
  #L33d4f6.  v10:= "Failed writing " @kind object;
  #L33d4fa.  if v8 > v3 then goto L33d760;
  #L33d4fe.  v11:= length @variable v1;
  #L33d500.  v11:= v11 - v3 @kind int;
  #L33d502.  if v11 < v2 then goto L33d760;
  #L33d506.  v2:= 0I;
  #L33d508.  v3:= 128I;
  #L33d50c.  v11:= 1L;
  #L33d510.  if v2 >= v8 then goto L33d532;
  #L33d514.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33d51a.  v13:= temp;
  #L33d51c.  if v13 >= v3 then goto L33d532;
  #L33d520.  v11:= v11 + v4 @kind long;
  #L33d522.  v3:= (`byte`) v13 @kind i2b;
  #L33d524.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d52a.  v2:= v2 + 1;
  #L33d52e.  v4:= v11 @kind wide;
  #L33d530.  goto L33d508;
  #L33d532.  if v2 != v8 then goto L33d53a;
  #L33d536.  v0:= (`int`) v4 @kind l2i;
  #L33d538.  return v0;
  #L33d53a.  if v2 >= v8 then goto L33d75c;
  #L33d53e.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33d544.  v13:= temp;
  #L33d546.  if v13 >= v3 then goto L33d56a;
  #L33d54a.  v14:= lcmp(v4, v6);
  #L33d54e.  if v14 >= 0 then goto L33d56a;
  #L33d552.  v14:= v4 + v11 @kind long;
  #L33d556.  v13:= (`byte`) v13 @kind i2b;
  #L33d558.  call `a`(v1, v4, v13) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d55e.  v4:= v11 @kind wide;
  #L33d560.  v12:= v14 @kind wide;
  #L33d562.  v11:= 128I;
  #L33d566.  goto L33d6ca;
  #L33d56a.  v14:= 2048I;
  #L33d56e.  if v13 >= v14 then goto L33d5be;
  #L33d572.  v14:= 2L;
  #L33d576.  v14:= v6 - v14 @kind long;
  #L33d57a.  v16:= lcmp(v4, v14);
  #L33d57e.  if v16 > 0 then goto L33d5be;
  #L33d582.  v14:= v4 + v11 @kind long;
  #L33d586.  v3:= v13 ^>> 6;
  #L33d58a.  v3:= v3 ^| 960;
  #L33d58e.  v3:= (`byte`) v3 @kind i2b;
  #L33d590.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d596.  v3:= v14 + v11 @kind long;
  #L33d59a.  v5:= v13 ^& 63;
  #L33d59e.  v13:= 128I;
  #L33d5a2.  v5:= v5 ^| v13 @kind int;
  #L33d5a4.  v5:= (`byte`) v5 @kind i2b;
  #L33d5a6.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d5ac.  v20:= v11 @kind wide;
  #L33d5b0.  v11:= 128I;
  #L33d5b4.  v12:= v3 @kind wide;
  #L33d5b6.  v4:= v20 @kind wide;
  #L33d5ba.  goto L33d6ca;
  #L33d5be.  v3:= 57343I;
  #L33d5c4.  v14:= 55296I;
  #L33d5ca.  if v13 < v14 then goto L33d5d2;
  #L33d5ce.  if v3 >= v13 then goto L33d630;
  #L33d5d2.  v15:= 3L;
  #L33d5d6.  v15:= v6 - v15 @kind long;
  #L33d5da.  v17:= lcmp(v4, v15);
  #L33d5de.  if v17 > 0 then goto L33d630;
  #L33d5e2.  v14:= v4 + v11 @kind long;
  #L33d5e6.  v3:= v13 ^>> 12;
  #L33d5ea.  v3:= v3 ^| 480;
  #L33d5ee.  v3:= (`byte`) v3 @kind i2b;
  #L33d5f0.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d5f6.  v3:= v14 + v11 @kind long;
  #L33d5fa.  v5:= v13 ^>> 6;
  #L33d5fe.  v5:= v5 ^& 63;
  #L33d602.  v11:= 128I;
  #L33d606.  v5:= v5 ^| v11 @kind int;
  #L33d608.  v5:= (`byte`) v5 @kind i2b;
  #L33d60a.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d610.  v14:= 1L;
  #L33d614.  v18:= v3 + v14 @kind long;
  #L33d618.  v5:= v13 ^& 63;
  #L33d61c.  v5:= v5 ^| v11 @kind int;
  #L33d61e.  v5:= (`byte`) v5 @kind i2b;
  #L33d620.  call `a`(v1, v3, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d626.  v12:= v18 @kind wide;
  #L33d62a.  v4:= 1L;
  #L33d62e.  goto L33d562;
  #L33d630.  v11:= 4L;
  #L33d634.  v11:= v6 - v11 @kind long;
  #L33d638.  v15:= lcmp(v4, v11);
  #L33d63c.  if v15 > 0 then goto L33d6f2;
  #L33d640.  v3:= v2 + 1;
  #L33d644.  if v3 == v8 then goto L33d6e2;
  #L33d648.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33d64e.  v2:= temp;
  #L33d650.  call temp:= `isSurrogatePair`(v13, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L33d656.  v11:= temp;
  #L33d658.  if v11 == 0 then goto L33d6e0;
  #L33d65c.  call temp:= `toCodePoint`(v13, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L33d662.  v2:= temp;
  #L33d664.  v11:= 1L;
  #L33d668.  v13:= v4 + v11 @kind long;
  #L33d66c.  v15:= v2 ^>> 18;
  #L33d670.  v15:= v15 ^| 240;
  #L33d674.  v15:= (`byte`) v15 @kind i2b;
  #L33d676.  call `a`(v1, v4, v15) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d67c.  v4:= v13 + v11 @kind long;
  #L33d680.  v15:= v2 ^>> 12;
  #L33d684.  v15:= v15 ^& 63;
  #L33d688.  v11:= 128I;
  #L33d68c.  v12:= v15 ^| 128;
  #L33d690.  v12:= (`byte`) v12 @kind i2b;
  #L33d692.  call `a`(v1, v13, v12) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d698.  v12:= 1L;
  #L33d69c.  v14:= v4 + v12 @kind long;
  #L33d6a0.  v16:= v2 ^>> 6;
  #L33d6a4.  v12:= v16 ^& 63;
  #L33d6a8.  v12:= v12 ^| v11 @kind int;
  #L33d6aa.  v12:= (`byte`) v12 @kind i2b;
  #L33d6ac.  call `a`(v1, v4, v12) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d6b2.  v4:= 1L;
  #L33d6b6.  v12:= v14 + v4 @kind long;
  #L33d6ba.  v2:= v2 ^& 63;
  #L33d6be.  v2:= v2 ^| v11 @kind int;
  #L33d6c0.  v2:= (`byte`) v2 @kind i2b;
  #L33d6c2.  call `a`(v1, v14, v2) @signature `Le/e/a/b/f/u/p7;.a:([BJB)V` @kind static;
  #L33d6c8.  v2:= v3;
  #L33d6ca.  v2:= v2 + 1;
  #L33d6ce.  v3:= 128I;
  #L33d6d2.  v20:= v4 @kind wide;
  #L33d6d6.  v4:= v12 @kind wide;
  #L33d6d8.  v11:= v20 @kind wide;
  #L33d6dc.  goto L33d53a;
  #L33d6e0.  v2:= v3;
  #L33d6e2.  v0:= new `e.e.a.b.f.u.v7`;
  #L33d6e6.  v2:= v2 + -1;
  #L33d6ea.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/u/v7;.<init>:(II)V` @kind direct;
  #L33d6f0.  throw v0;
  #L33d6f2.  if v14 > v13 then goto L33d722;
  #L33d6f6.  if v13 > v3 then goto L33d722;
  #L33d6fa.  v1:= v2 + 1;
  #L33d6fe.  if v1 == v8 then goto L33d716;
  #L33d702.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33d708.  v0:= temp;
  #L33d70a.  call temp:= `isSurrogatePair`(v13, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L33d710.  v0:= temp;
  #L33d712.  if v0 != 0 then goto L33d722;
  #L33d716.  v0:= new `e.e.a.b.f.u.v7`;
  #L33d71a.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/u/v7;.<init>:(II)V` @kind direct;
  #L33d720.  throw v0;
  #L33d722.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33d726.  v1:= 46I;
  #L33d72a.  v2:= new `java.lang.StringBuilder`;
  #L33d72e.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L33d734.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d73a.  call temp:= `append`(v2, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d740.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d746.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d74c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33d752.  v1:= temp @kind object;
  #L33d754.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d75a.  throw v0;
  #L33d75c.  v0:= (`int`) v4 @kind l2i;
  #L33d75e.  return v0;
  #L33d760.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33d764.  v8:= v8 + -1;
  #L33d768.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L33d76e.  v0:= temp;
  #L33d770.  v2:= v2 + v3 @kind int;
  #L33d772.  v3:= 37I;
  #L33d776.  v4:= new `java.lang.StringBuilder`;
  #L33d77a.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L33d780.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d786.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d78c.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d792.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33d798.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33d79e.  v0:= temp @kind object;
  #L33d7a0.  call `<init>`(v1, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d7a6.  throw v1;
}
procedure `java.lang.String` `b`(`e.e.a.b.f.u.y7` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Le/e/a/b/f/u/y7;.b:([BII)Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L33d7b8.  v0:= v13 ^| v14 @kind int;
  #L33d7bc.  v1:= length @variable v12;
  #L33d7be.  v1:= v1 - v13 @kind int;
  #L33d7c0.  v1:= v1 - v14 @kind int;
  #L33d7c2.  v0:= v0 ^| v1 @kind int;
  #L33d7c4.  v1:= 0I;
  #L33d7c6.  v2:= 1I;
  #L33d7c8.  if v0 < 0 then goto L33d946;
  #L33d7cc.  v0:= v13 + v14 @kind int;
  #L33d7d0.  v14:= new `char`[v14];
  #L33d7d4.  v3:= 0I;
  #L33d7d6.  if v13 >= v0 then goto L33d802;
  #L33d7da.  v4:= (`long`) v13 @kind i2l;
  #L33d7dc.  call temp:= `a`(v12, v4) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d7e2.  v4:= temp;
  #L33d7e4.  call temp:= `a`(v4) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33d7ea.  v5:= temp;
  #L33d7ec.  if v5 == 0 then goto L33d802;
  #L33d7f0.  v13:= v13 + 1;
  #L33d7f4.  v5:= v3 + 1;
  #L33d7f8.  call `a`(v4, v14, v3) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33d7fe.  v3:= v5;
  #L33d800.  goto L33d7d6;
  #L33d802.  v8:= v3;
  #L33d804.  if v13 >= v0 then goto L33d93a;
  #L33d808.  v3:= v13 + 1;
  #L33d80c.  v4:= (`long`) v13 @kind i2l;
  #L33d80e.  call temp:= `a`(v12, v4) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d814.  v13:= temp;
  #L33d816.  call temp:= `a`(v13) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33d81c.  v4:= temp;
  #L33d81e.  if v4 == 0 then goto L33d85e;
  #L33d822.  v4:= v8 + 1;
  #L33d826.  call `a`(v13, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33d82c.  if v3 >= v0 then goto L33d858;
  #L33d830.  v5:= (`long`) v3 @kind i2l;
  #L33d832.  call temp:= `a`(v12, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d838.  v13:= temp;
  #L33d83a.  call temp:= `a`(v13) @signature `Le/e/a/b/f/u/u7;.a:(B)Z` @kind static;
  #L33d840.  v5:= temp;
  #L33d842.  if v5 == 0 then goto L33d858;
  #L33d846.  v3:= v3 + 1;
  #L33d84a.  v5:= v4 + 1;
  #L33d84e.  call `a`(v13, v14, v4) @signature `Le/e/a/b/f/u/u7;.a:(B[CI)V` @kind static;
  #L33d854.  v4:= v5;
  #L33d856.  goto L33d82c;
  #L33d858.  v13:= v3;
  #L33d85a.  v8:= v4;
  #L33d85c.  goto L33d804;
  #L33d85e.  call temp:= `b`(v13) @signature `Le/e/a/b/f/u/u7;.b:(B)Z` @kind static;
  #L33d864.  v4:= temp;
  #L33d866.  if v4 == 0 then goto L33d896;
  #L33d86a.  if v3 >= v0 then goto L33d88c;
  #L33d86e.  v4:= v3 + 1;
  #L33d872.  v5:= (`long`) v3 @kind i2l;
  #L33d874.  call temp:= `a`(v12, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d87a.  v3:= temp;
  #L33d87c.  v5:= v8 + 1;
  #L33d880.  call `a`(v13, v3, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(BB[CI)V` @kind static;
  #L33d886.  v13:= v4;
  #L33d888.  v8:= v5;
  #L33d88a.  goto L33d804;
  #L33d88c.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33d892.  v12:= temp @kind object;
  #L33d894.  throw v12;
  #L33d896.  call temp:= `c`(v13) @signature `Le/e/a/b/f/u/u7;.c:(B)Z` @kind static;
  #L33d89c.  v4:= temp;
  #L33d89e.  if v4 == 0 then goto L33d8e0;
  #L33d8a2.  v4:= v0 + -1;
  #L33d8a6.  if v3 >= v4 then goto L33d8d6;
  #L33d8aa.  v4:= v3 + 1;
  #L33d8ae.  v5:= (`long`) v3 @kind i2l;
  #L33d8b0.  call temp:= `a`(v12, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d8b6.  v3:= temp;
  #L33d8b8.  v5:= v4 + 1;
  #L33d8bc.  v6:= (`long`) v4 @kind i2l;
  #L33d8be.  call temp:= `a`(v12, v6) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d8c4.  v4:= temp;
  #L33d8c6.  v6:= v8 + 1;
  #L33d8ca.  call `a`(v13, v3, v4, v14, v8) @signature `Le/e/a/b/f/u/u7;.a:(BBB[CI)V` @kind static;
  #L33d8d0.  v13:= v5;
  #L33d8d2.  v8:= v6;
  #L33d8d4.  goto L33d804;
  #L33d8d6.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33d8dc.  v12:= temp @kind object;
  #L33d8de.  throw v12;
  #L33d8e0.  v4:= v0 + -2;
  #L33d8e4.  if v3 >= v4 then goto L33d930;
  #L33d8e8.  v4:= v3 + 1;
  #L33d8ec.  v5:= (`long`) v3 @kind i2l;
  #L33d8ee.  call temp:= `a`(v12, v5) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d8f4.  v5:= temp;
  #L33d8f6.  v3:= v4 + 1;
  #L33d8fa.  v6:= (`long`) v4 @kind i2l;
  #L33d8fc.  call temp:= `a`(v12, v6) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d902.  v6:= temp;
  #L33d904.  v9:= v3 + 1;
  #L33d908.  v3:= (`long`) v3 @kind i2l;
  #L33d90a.  call temp:= `a`(v12, v3) @signature `Le/e/a/b/f/u/p7;.a:([BJ)B` @kind static;
  #L33d910.  v7:= temp;
  #L33d912.  v10:= v8 + 1;
  #L33d916.  v3:= v13;
  #L33d918.  v4:= v5;
  #L33d91a.  v5:= v6;
  #L33d91c.  v6:= v7;
  #L33d91e.  v7:= v14 @kind object;
  #L33d920.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/u/u7;.a:(BBBB[CI)V` @kind static;
  #L33d926.  v10:= v10 + v2 @kind int;
  #L33d928.  v13:= v9;
  #L33d92a.  v8:= v10;
  #L33d92c.  goto L33d804;
  #L33d930.  call temp:= `f`() @signature `Le/e/a/b/f/u/b5;.f:()Le/e/a/b/f/u/b5;` @kind static;
  #L33d936.  v12:= temp @kind object;
  #L33d938.  throw v12;
  #L33d93a.  v12:= new `java.lang.String`;
  #L33d93e.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L33d944.  return v12 @kind object;
  #L33d946.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33d94a.  v3:= 3I;
  #L33d94c.  v3:= new `java.lang.Object`[v3];
  #L33d950.  v12:= length @variable v12;
  #L33d952.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d958.  v12:= temp @kind object;
  #L33d95a.  v3[v1]:= v12 @kind object;
  #L33d95e.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d964.  v12:= temp @kind object;
  #L33d966.  v3[v2]:= v12 @kind object;
  #L33d96a.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33d970.  v12:= temp @kind object;
  #L33d972.  v13:= 2I;
  #L33d974.  v3[v13]:= v12 @kind object;
  #L33d978.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L33d97c.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33d982.  v12:= temp @kind object;
  #L33d984.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d98a.  throw v0;
}
