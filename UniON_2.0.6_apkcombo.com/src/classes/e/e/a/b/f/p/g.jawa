record `e.e.a.b.f.p.g` @kind class @AccessFlag FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/p/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d06b8.  v0:= constclass @type ^`e.e.a.b.f.p.g` @kind object;
  #L2d06bc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2d06c2.  v0:= temp @kind object;
  #L2d06c4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2d06ca.  v0:= new `e.e.a.b.f.p.f`;
  #L2d06ce.  v1:= 0I;
  #L2d06d0.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/p/f;.<init>:(Le/e/a/b/f/p/e;)V` @kind direct;
  #L2d06d6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.p.g` v0 @kind this) @signature `Le/e/a/b/f/p/g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d06e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d06ee.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v0 @kind object) @signature `Le/e/a/b/f/p/g;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;

  #L2d069c.  if v0 != 0 then goto L2d06a4;
  #L2d06a0.  v0:= "" @kind object;
  #L2d06a4.  return v0 @kind object;
}
