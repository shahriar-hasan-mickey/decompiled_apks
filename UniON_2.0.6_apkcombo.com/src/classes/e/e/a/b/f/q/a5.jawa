record `e.e.a.b.f.q.a5` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2e279c.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2e27a0.  if v0 == 0 then goto L2e27b2;
  #L2e27a4.  v1:= (`byte`[]) v1 @kind object;
  #L2e27a8.  v1:= v1[v2] @kind byte;
  #L2e27ac.  v1:= v1 ^& 255;
  #L2e27b0.  return v1;
  #L2e27b2.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L2e27b6.  if v0 == 0 then goto L2e27c6;
  #L2e27ba.  v1:= (`short`[]) v1 @kind object;
  #L2e27be.  v1:= v1[v2] @kind short;
  #L2e27c2.  v1:= (`char`) v1 @kind i2c;
  #L2e27c4.  return v1;
  #L2e27c6.  v1:= (`int`[]) v1 @kind object;
  #L2e27ca.  v1:= v1[v2];
  #L2e27ce.  return v1;
}
procedure `int` `a`(`java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object, `int`[] v13 @kind object, `java.lang.Object`[] v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e2808.  call temp:= `a`(v9) @signature `Le/e/a/b/f/q/b5;.a:(Ljava/lang/Object;)I` @kind static;
  #L2e280e.  v0:= temp;
  #L2e2810.  v1:= v0 ^& v11 @kind int;
  #L2e2814.  call temp:= `a`(v12, v1) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;I)I` @kind static;
  #L2e281a.  v2:= temp;
  #L2e281c.  v3:= -1I;
  #L2e281e.  if v2 == 0 then goto L2e288a;
  #L2e2822.  v4:= ~v11 @kind int;
  #L2e2824.  v0:= v0 ^& v4 @kind int;
  #L2e2826.  v5:= -1I;
  #L2e2828.  v2:= v2 + v3 @kind int;
  #L2e282a.  v6:= v13[v2];
  #L2e282e.  v7:= v6 ^& v4 @kind int;
  #L2e2832.  if v7 != v0 then goto L2e287a;
  #L2e2836.  v7:= v14[v2] @kind object;
  #L2e283a.  call temp:= `a`(v9, v7) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e2840.  v7:= temp;
  #L2e2842.  if v7 == 0 then goto L2e287a;
  #L2e2846.  if v15 == 0 then goto L2e285a;
  #L2e284a.  v7:= v15[v2] @kind object;
  #L2e284e.  call temp:= `a`(v10, v7) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e2854.  v7:= temp;
  #L2e2856.  if v7 == 0 then goto L2e287a;
  #L2e285a.  v9:= v6 ^& v11 @kind int;
  #L2e285e.  if v5 != v3 then goto L2e286a;
  #L2e2862.  call `a`(v12, v1, v9) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;II)V` @kind static;
  #L2e2868.  goto L2e2878;
  #L2e286a.  v10:= v13[v5];
  #L2e286e.  v10:= v10 ^& v4 @kind int;
  #L2e2870.  v9:= v9 ^& v11 @kind int;
  #L2e2872.  v9:= v9 ^| v10 @kind int;
  #L2e2874.  v13[v5]:= v9;
  #L2e2878.  return v2;
  #L2e287a.  v5:= v6 ^& v11 @kind int;
  #L2e287e.  if v5 == 0 then goto L2e288a;
  #L2e2882.  v8:= v5;
  #L2e2884.  v5:= v2;
  #L2e2886.  v2:= v8;
  #L2e2888.  goto L2e2828;
  #L2e288a.  return v3;
}
procedure `java.lang.Object` `a`(`int` v3 ) @signature `Le/e/a/b/f/q/a5;.a:(I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2e289c.  v0:= 2I;
  #L2e289e.  if v3 < v0 then goto L2e28d8;
  #L2e28a2.  v0:= 2.0F;
  #L2e28a6.  if v3 > v0 then goto L2e28d8;
  #L2e28aa.  call temp:= `highestOneBit`(v3) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L2e28b0.  v0:= temp;
  #L2e28b2.  if v0 != v3 then goto L2e28d8;
  #L2e28b6.  v0:= 256I;
  #L2e28ba.  if v3 > v0 then goto L2e28c4;
  #L2e28be.  v3:= new `byte`[v3];
  #L2e28c2.  return v3 @kind object;
  #L2e28c4.  v0:= 65536I;
  #L2e28c8.  if v3 > v0 then goto L2e28d2;
  #L2e28cc.  v3:= new `short`[v3];
  #L2e28d0.  return v3 @kind object;
  #L2e28d2.  v3:= new `int`[v3];
  #L2e28d6.  return v3 @kind object;
  #L2e28d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L2e28dc.  v1:= new `java.lang.StringBuilder`;
  #L2e28e0.  v2:= 52I;
  #L2e28e4.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2e28ea.  v2:= "must be power of 2 between 2^1 and 2^30: " @kind object;
  #L2e28ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e28f4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e28fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e2900.  v3:= temp @kind object;
  #L2e2902.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e2908.  throw v0;
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/q/a5;.a:(Ljava/lang/Object;II)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2e291c.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2e2920.  if v0 == 0 then goto L2e2930;
  #L2e2924.  v1:= (`byte`[]) v1 @kind object;
  #L2e2928.  v3:= (`byte`) v3 @kind i2b;
  #L2e292a.  v1[v2]:= v3 @kind byte;
  #L2e292e.  return @kind void;
  #L2e2930.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L2e2934.  if v0 == 0 then goto L2e2944;
  #L2e2938.  v1:= (`short`[]) v1 @kind object;
  #L2e293c.  v3:= (`short`) v3 @kind i2s;
  #L2e293e.  v1[v2]:= v3 @kind short;
  #L2e2942.  return @kind void;
  #L2e2944.  v1:= (`int`[]) v1 @kind object;
  #L2e2948.  v1[v2]:= v3;
  #L2e294c.  return @kind void;
}
procedure `int` `b`(`int` v1 ) @signature `Le/e/a/b/f/q/a5;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2e27e0.  v0:= 32I;
  #L2e27e4.  if v1 >= v0 then goto L2e27ec;
  #L2e27e8.  v0:= 4I;
  #L2e27ea.  goto L2e27ee;
  #L2e27ec.  v0:= 2I;
  #L2e27ee.  v1:= v1 + 1;
  #L2e27f2.  v0:= v0 * v1 @kind int;
  #L2e27f6.  return v0;
}
