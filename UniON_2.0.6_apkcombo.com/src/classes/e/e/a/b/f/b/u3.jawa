record `e.e.a.b.f.b.u3` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `e.e.a.b.f.b.u3.a` @AccessFlag PRIVATE;
  `int`[] `e.e.a.b.f.b.u3.b` @AccessFlag PRIVATE;
  `java.lang.Object`[] `e.e.a.b.f.b.u3.c` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.u3.d` @AccessFlag PRIVATE;
  `boolean` `e.e.a.b.f.b.u3.e` @AccessFlag PRIVATE;
}
global `e.e.a.b.f.b.u3` `@@e.e.a.b.f.b.u3.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/b/u3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e364.  v0:= new `e.e.a.b.f.b.u3`;
  #L20e368.  v1:= 0I;
  #L20e36a.  v2:= new `int`[v1];
  #L20e36e.  v3:= new `java.lang.Object`[v1];
  #L20e372.  call `<init>`(v0, v1, v2, v3, v1) @signature `Le/e/a/b/f/b/u3;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L20e378.  `@@e.e.a.b.f.b.u3.f` @type ^`e.e.a.b.f.b.u3` := v0 @kind object;
  #L20e37c.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.u3` v4 @kind this) @signature `Le/e/a/b/f/b/u3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e390.  v0:= 8I;
  #L20e394.  v1:= new `int`[v0];
  #L20e398.  v0:= new `java.lang.Object`[v0];
  #L20e39c.  v2:= 0I;
  #L20e39e.  v3:= 1I;
  #L20e3a0.  call `<init>`(v4, v2, v1, v0, v3) @signature `Le/e/a/b/f/b/u3;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L20e3a6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.u3` v1 @kind this, `int` v2 , `int`[] v3 @kind object, `java.lang.Object`[] v4 @kind object, `boolean` v5 ) @signature `Le/e/a/b/f/b/u3;.<init>:(I[I[Ljava/lang/Object;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L20e3b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20e3be.  v0:= -1I;
  #L20e3c0.  v1.`e.e.a.b.f.b.u3.d` @type ^`int` := v0;
  #L20e3c4.  v1.`e.e.a.b.f.b.u3.a` @type ^`int` := v2;
  #L20e3c8.  v1.`e.e.a.b.f.b.u3.b` @type ^`int`[] := v3 @kind object;
  #L20e3cc.  v1.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] := v4 @kind object;
  #L20e3d0.  v1.`e.e.a.b.f.b.u3.e` @type ^`boolean` := v5 @kind boolean;
  #L20e3d4.  return @kind void;
}
procedure `e.e.a.b.f.b.u3` `a`(`e.e.a.b.f.b.u3` v6 @kind object, `e.e.a.b.f.b.u3` v7 @kind object) @signature `Le/e/a/b/f/b/u3;.a:(Le/e/a/b/f/b/u3;Le/e/a/b/f/b/u3;)Le/e/a/b/f/b/u3;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e0f8.  v0:= v6.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e0fc.  v1:= v7.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e100.  v0:= v0 + v1 @kind int;
  #L20e102.  v1:= v6.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e106.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L20e10c.  v1:= temp @kind object;
  #L20e10e.  v2:= v7.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e112.  v3:= v6.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e116.  v4:= v7.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e11a.  v5:= 0I;
  #L20e11c.  call `arraycopy`(v2, v5, v1, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L20e122.  v2:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e126.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L20e12c.  v2:= temp @kind object;
  #L20e12e.  v3:= v7.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e132.  v6:= v6.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e136.  v7:= v7.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e13a.  call `arraycopy`(v3, v5, v2, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L20e140.  v6:= new `e.e.a.b.f.b.u3`;
  #L20e144.  v7:= 1I;
  #L20e146.  call `<init>`(v6, v0, v1, v2, v7) @signature `Le/e/a/b/f/b/u3;.<init>:(I[I[Ljava/lang/Object;Z)V` @kind direct;
  #L20e14c.  return v6 @kind object;
}
procedure `void` `a`(`int` v2 , `java.lang.Object` v3 @kind object, `e.e.a.b.f.b.o4` v4 @kind object) @signature `Le/e/a/b/f/b/u3;.a:(ILjava/lang/Object;Le/e/a/b/f/b/o4;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20e5ac.  v0:= v2 ^>> 3;
  #L20e5b0.  v2:= v2 ^& 7;
  #L20e5b4.  if v2 == 0 then goto L20e658;
  #L20e5b8.  v1:= 1I;
  #L20e5ba.  if v2 == v1 then goto L20e644;
  #L20e5be.  v1:= 2I;
  #L20e5c0.  if v2 == v1 then goto L20e638;
  #L20e5c4.  v1:= 3I;
  #L20e5c6.  if v2 == v1 then goto L20e5f8;
  #L20e5ca.  v1:= 5I;
  #L20e5cc.  if v2 != v1 then goto L20e5e4;
  #L20e5d0.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L20e5d4.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20e5da.  v2:= temp;
  #L20e5dc.  call `a`(v4, v0, v2) @signature `Le/e/a/b/f/b/o4;.a:(II)V` @kind interface;
  #L20e5e2.  return @kind void;
  #L20e5e4.  v2:= new `java.lang.RuntimeException`;
  #L20e5e8.  call temp:= `c`() @signature `Le/e/a/b/f/b/l1;.c:()Le/e/a/b/f/b/m1;` @kind static;
  #L20e5ee.  v3:= temp @kind object;
  #L20e5f0.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L20e5f6.  throw v2;
  #L20e5f8.  call temp:= `a`(v4) @signature `Le/e/a/b/f/b/o4;.a:()I` @kind interface;
  #L20e5fe.  v2:= temp;
  #L20e600.  v1:= `@@e.e.a.b.f.b.f1$e.k` @type ^`int`;
  #L20e604.  if v2 != v1 then goto L20e620;
  #L20e608.  call `a`(v4, v0) @signature `Le/e/a/b/f/b/o4;.a:(I)V` @kind interface;
  #L20e60e.  v3:= (`e.e.a.b.f.b.u3`) v3 @kind object;
  #L20e612.  call `b`(v3, v4) @signature `Le/e/a/b/f/b/u3;.b:(Le/e/a/b/f/b/o4;)V` @kind virtual;
  #L20e618.  call `b`(v4, v0) @signature `Le/e/a/b/f/b/o4;.b:(I)V` @kind interface;
  #L20e61e.  return @kind void;
  #L20e620.  call `b`(v4, v0) @signature `Le/e/a/b/f/b/o4;.b:(I)V` @kind interface;
  #L20e626.  v3:= (`e.e.a.b.f.b.u3`) v3 @kind object;
  #L20e62a.  call `b`(v3, v4) @signature `Le/e/a/b/f/b/u3;.b:(Le/e/a/b/f/b/o4;)V` @kind virtual;
  #L20e630.  call `a`(v4, v0) @signature `Le/e/a/b/f/b/o4;.a:(I)V` @kind interface;
  #L20e636.  return @kind void;
  #L20e638.  v3:= (`e.e.a.b.f.b.a0`) v3 @kind object;
  #L20e63c.  call `a`(v4, v0, v3) @signature `Le/e/a/b/f/b/o4;.a:(ILe/e/a/b/f/b/a0;)V` @kind interface;
  #L20e642.  return @kind void;
  #L20e644.  v3:= (`java.lang.Long`) v3 @kind object;
  #L20e648.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20e64e.  v2:= temp @kind wide;
  #L20e650.  call `a`(v4, v0, v2) @signature `Le/e/a/b/f/b/o4;.a:(IJ)V` @kind interface;
  #L20e656.  return @kind void;
  #L20e658.  v3:= (`java.lang.Long`) v3 @kind object;
  #L20e65c.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20e662.  v2:= temp @kind wide;
  #L20e664.  call `f`(v4, v0, v2) @signature `Le/e/a/b/f/b/o4;.f:(IJ)V` @kind interface;
  #L20e66a.  return @kind void;
}
procedure `e.e.a.b.f.b.u3` `d`() @signature `Le/e/a/b/f/b/u3;.d:()Le/e/a/b/f/b/u3;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20e160.  v0:= `@@e.e.a.b.f.b.u3.f` @type ^`e.e.a.b.f.b.u3` @kind object;
  #L20e164.  return v0 @kind object;
}
procedure `e.e.a.b.f.b.u3` `e`() @signature `Le/e/a/b/f/b/u3;.e:()Le/e/a/b/f/b/u3;` @AccessFlag STATIC {
    temp;
    v0;

  #L20e178.  v0:= new `e.e.a.b.f.b.u3`;
  #L20e17c.  call `<init>`(v0) @signature `Le/e/a/b/f/b/u3;.<init>:()V` @kind direct;
  #L20e182.  return v0 @kind object;
}
procedure `int` `a`(`e.e.a.b.f.b.u3` v6 @kind this) @signature `Le/e/a/b/f/b/u3;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20e204.  v0:= v6.`e.e.a.b.f.b.u3.d` @type ^`int`;
  #L20e208.  v1:= -1I;
  #L20e20a.  if v0 == v1 then goto L20e210;
  #L20e20e.  return v0;
  #L20e210.  v0:= 0I;
  #L20e212.  v1:= 0I;
  #L20e214.  v2:= v6.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e218.  if v0 >= v2 then goto L20e2f4;
  #L20e21c.  v2:= v6.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e220.  v2:= v2[v0];
  #L20e224.  v3:= v2 ^>> 3;
  #L20e228.  v2:= v2 ^& 7;
  #L20e22c.  if v2 == 0 then goto L20e2d0;
  #L20e230.  v4:= 1I;
  #L20e232.  if v2 == v4 then goto L20e2b2;
  #L20e236.  v5:= 2I;
  #L20e238.  if v2 == v5 then goto L20e29c;
  #L20e23c.  v5:= 3I;
  #L20e23e.  if v2 == v5 then goto L20e27a;
  #L20e242.  v4:= 5I;
  #L20e244.  if v2 != v4 then goto L20e266;
  #L20e248.  v2:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e24c.  v2:= v2[v0] @kind object;
  #L20e250.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L20e254.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20e25a.  v2:= temp;
  #L20e25c.  call temp:= `i`(v3, v2) @signature `Le/e/a/b/f/b/m0;.i:(II)I` @kind static;
  #L20e262.  v2:= temp;
  #L20e264.  goto L20e2ec;
  #L20e266.  v0:= new `java.lang.IllegalStateException`;
  #L20e26a.  call temp:= `c`() @signature `Le/e/a/b/f/b/l1;.c:()Le/e/a/b/f/b/m1;` @kind static;
  #L20e270.  v1:= temp @kind object;
  #L20e272.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L20e278.  throw v0;
  #L20e27a.  call temp:= `e`(v3) @signature `Le/e/a/b/f/b/m0;.e:(I)I` @kind static;
  #L20e280.  v2:= temp;
  #L20e282.  v2:= v2 ^< v4 @kind int;
  #L20e284.  v3:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e288.  v3:= v3[v0] @kind object;
  #L20e28c.  v3:= (`e.e.a.b.f.b.u3`) v3 @kind object;
  #L20e290.  call temp:= `a`(v3) @signature `Le/e/a/b/f/b/u3;.a:()I` @kind virtual;
  #L20e296.  v3:= temp;
  #L20e298.  v2:= v2 + v3 @kind int;
  #L20e29a.  goto L20e2ec;
  #L20e29c.  v2:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e2a0.  v2:= v2[v0] @kind object;
  #L20e2a4.  v2:= (`e.e.a.b.f.b.a0`) v2 @kind object;
  #L20e2a8.  call temp:= `c`(v3, v2) @signature `Le/e/a/b/f/b/m0;.c:(ILe/e/a/b/f/b/a0;)I` @kind static;
  #L20e2ae.  v2:= temp;
  #L20e2b0.  goto L20e2ec;
  #L20e2b2.  v2:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e2b6.  v2:= v2[v0] @kind object;
  #L20e2ba.  v2:= (`java.lang.Long`) v2 @kind object;
  #L20e2be.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20e2c4.  v4:= temp @kind wide;
  #L20e2c6.  call temp:= `g`(v3, v4) @signature `Le/e/a/b/f/b/m0;.g:(IJ)I` @kind static;
  #L20e2cc.  v2:= temp;
  #L20e2ce.  goto L20e2ec;
  #L20e2d0.  v2:= v6.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e2d4.  v2:= v2[v0] @kind object;
  #L20e2d8.  v2:= (`java.lang.Long`) v2 @kind object;
  #L20e2dc.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L20e2e2.  v4:= temp @kind wide;
  #L20e2e4.  call temp:= `e`(v3, v4) @signature `Le/e/a/b/f/b/m0;.e:(IJ)I` @kind static;
  #L20e2ea.  v2:= temp;
  #L20e2ec.  v1:= v1 + v2 @kind int;
  #L20e2ee.  v0:= v0 + 1;
  #L20e2f2.  goto L20e214;
  #L20e2f4.  v6.`e.e.a.b.f.b.u3.d` @type ^`int` := v1;
  #L20e2f8.  return v1;
}
procedure `void` `a`(`e.e.a.b.f.b.u3` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/b/u3;.a:(ILjava/lang/Object;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L20e524.  v0:= v2.`e.e.a.b.f.b.u3.e` @type ^`boolean` @kind boolean;
  #L20e528.  if v0 == 0 then goto L20e58e;
  #L20e52c.  v0:= v2.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e530.  v1:= v2.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e534.  v1:= length @variable v1;
  #L20e536.  if v0 != v1 then goto L20e570;
  #L20e53a.  v1:= 4I;
  #L20e53c.  if v0 >= v1 then goto L20e546;
  #L20e540.  v0:= 8I;
  #L20e544.  goto L20e54a;
  #L20e546.  v0:= v0 ^> 1;
  #L20e54a.  v1:= v2.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e54e.  v1:= v1 + v0 @kind int;
  #L20e550.  v0:= v2.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e554.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L20e55a.  v0:= temp @kind object;
  #L20e55c.  v2.`e.e.a.b.f.b.u3.b` @type ^`int`[] := v0 @kind object;
  #L20e560.  v0:= v2.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e564.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L20e56a.  v0:= temp @kind object;
  #L20e56c.  v2.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L20e570.  v0:= v2.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e574.  v1:= v2.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e578.  v0[v1]:= v3;
  #L20e57c.  v3:= v2.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e580.  v3[v1]:= v4 @kind object;
  #L20e584.  v1:= v1 + 1;
  #L20e588.  v2.`e.e.a.b.f.b.u3.a` @type ^`int` := v1;
  #L20e58c.  return @kind void;
  #L20e58e.  v3:= new `java.lang.UnsupportedOperationException`;
  #L20e592.  call `<init>`(v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L20e598.  throw v3;
}
procedure `void` `a`(`e.e.a.b.f.b.u3` v3 @kind this, `e.e.a.b.f.b.o4` v4 @kind object) @signature `Le/e/a/b/f/b/u3;.a:(Le/e/a/b/f/b/o4;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20e3e8.  call temp:= `a`(v4) @signature `Le/e/a/b/f/b/o4;.a:()I` @kind interface;
  #L20e3ee.  v0:= temp;
  #L20e3f0.  v1:= `@@e.e.a.b.f.b.f1$e.l` @type ^`int`;
  #L20e3f4.  if v0 != v1 then goto L20e426;
  #L20e3f8.  v0:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e3fc.  v0:= v0 + -1;
  #L20e400.  if v0 < 0 then goto L20e424;
  #L20e404.  v1:= v3.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e408.  v1:= v1[v0];
  #L20e40c.  v1:= v1 ^>> 3;
  #L20e410.  v2:= v3.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e414.  v2:= v2[v0] @kind object;
  #L20e418.  call `a`(v4, v1, v2) @signature `Le/e/a/b/f/b/o4;.a:(ILjava/lang/Object;)V` @kind interface;
  #L20e41e.  v0:= v0 + -1;
  #L20e422.  goto L20e400;
  #L20e424.  return @kind void;
  #L20e426.  v0:= 0I;
  #L20e428.  v1:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e42c.  if v0 >= v1 then goto L20e450;
  #L20e430.  v1:= v3.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e434.  v1:= v1[v0];
  #L20e438.  v1:= v1 ^>> 3;
  #L20e43c.  v2:= v3.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e440.  v2:= v2[v0] @kind object;
  #L20e444.  call `a`(v4, v1, v2) @signature `Le/e/a/b/f/b/o4;.a:(ILjava/lang/Object;)V` @kind interface;
  #L20e44a.  v0:= v0 + 1;
  #L20e44e.  goto L20e428;
  #L20e450.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.u3` v3 @kind this, `java.lang.StringBuilder` v4 @kind object, `int` v5 ) @signature `Le/e/a/b/f/b/u3;.a:(Ljava/lang/StringBuilder;I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20e464.  v0:= 0I;
  #L20e466.  v1:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e46a.  if v0 >= v1 then goto L20e496;
  #L20e46e.  v1:= v3.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e472.  v1:= v1[v0];
  #L20e476.  v1:= v1 ^>> 3;
  #L20e47a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L20e480.  v1:= temp @kind object;
  #L20e482.  v2:= v3.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e486.  v2:= v2[v0] @kind object;
  #L20e48a.  call `a`(v4, v5, v1, v2) @signature `Le/e/a/b/f/b/n2;.a:(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L20e490.  v0:= v0 + 1;
  #L20e494.  goto L20e466;
  #L20e496.  return @kind void;
}
procedure `int` `b`(`e.e.a.b.f.b.u3` v4 @kind this) @signature `Le/e/a/b/f/b/u3;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e30c.  v0:= v4.`e.e.a.b.f.b.u3.d` @type ^`int`;
  #L20e310.  v1:= -1I;
  #L20e312.  if v0 == v1 then goto L20e318;
  #L20e316.  return v0;
  #L20e318.  v0:= 0I;
  #L20e31a.  v1:= 0I;
  #L20e31c.  v2:= v4.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e320.  if v0 >= v2 then goto L20e34c;
  #L20e324.  v2:= v4.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e328.  v2:= v2[v0];
  #L20e32c.  v2:= v2 ^>> 3;
  #L20e330.  v3:= v4.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e334.  v3:= v3[v0] @kind object;
  #L20e338.  v3:= (`e.e.a.b.f.b.a0`) v3 @kind object;
  #L20e33c.  call temp:= `d`(v2, v3) @signature `Le/e/a/b/f/b/m0;.d:(ILe/e/a/b/f/b/a0;)I` @kind static;
  #L20e342.  v2:= temp;
  #L20e344.  v1:= v1 + v2 @kind int;
  #L20e346.  v0:= v0 + 1;
  #L20e34a.  goto L20e31c;
  #L20e34c.  v4.`e.e.a.b.f.b.u3.d` @type ^`int` := v1;
  #L20e350.  return v1;
}
procedure `void` `b`(`e.e.a.b.f.b.u3` v3 @kind this, `e.e.a.b.f.b.o4` v4 @kind object) @signature `Le/e/a/b/f/b/u3;.b:(Le/e/a/b/f/b/o4;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L20e4a8.  v0:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e4ac.  if v0 != 0 then goto L20e4b2;
  #L20e4b0.  return @kind void;
  #L20e4b2.  call temp:= `a`(v4) @signature `Le/e/a/b/f/b/o4;.a:()I` @kind interface;
  #L20e4b8.  v0:= temp;
  #L20e4ba.  v1:= `@@e.e.a.b.f.b.f1$e.k` @type ^`int`;
  #L20e4be.  if v0 != v1 then goto L20e4ea;
  #L20e4c2.  v0:= 0I;
  #L20e4c4.  v1:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e4c8.  if v0 >= v1 then goto L20e4e8;
  #L20e4cc.  v1:= v3.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e4d0.  v1:= v1[v0];
  #L20e4d4.  v2:= v3.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e4d8.  v2:= v2[v0] @kind object;
  #L20e4dc.  call `a`(v1, v2, v4) @signature `Le/e/a/b/f/b/u3;.a:(ILjava/lang/Object;Le/e/a/b/f/b/o4;)V` @kind static;
  #L20e4e2.  v0:= v0 + 1;
  #L20e4e6.  goto L20e4c4;
  #L20e4e8.  return @kind void;
  #L20e4ea.  v0:= v3.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e4ee.  v0:= v0 + -1;
  #L20e4f2.  if v0 < 0 then goto L20e512;
  #L20e4f6.  v1:= v3.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e4fa.  v1:= v1[v0];
  #L20e4fe.  v2:= v3.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e502.  v2:= v2[v0] @kind object;
  #L20e506.  call `a`(v1, v2, v4) @signature `Le/e/a/b/f/b/u3;.a:(ILjava/lang/Object;Le/e/a/b/f/b/o4;)V` @kind static;
  #L20e50c.  v0:= v0 + -1;
  #L20e510.  goto L20e4f2;
  #L20e512.  return @kind void;
}
procedure `void` `c`(`e.e.a.b.f.b.u3` v1 @kind this) @signature `Le/e/a/b/f/b/u3;.c:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L20e67c.  v0:= 0I;
  #L20e67e.  v1.`e.e.a.b.f.b.u3.e` @type ^`boolean` := v0 @kind boolean;
  #L20e682.  return @kind void;
}
procedure `boolean` `equals`(`e.e.a.b.f.b.u3` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Le/e/a/b/f/b/u3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20e058.  v0:= 1I;
  #L20e05a.  if v8 != v9 then goto L20e060;
  #L20e05e.  return v0;
  #L20e060.  v1:= 0I;
  #L20e062.  if v9 != 0 then goto L20e068;
  #L20e066.  return v1;
  #L20e068.  v2:= instanceof @variable v9 @type ^`e.e.a.b.f.b.u3` @kind boolean;
  #L20e06c.  if v2 != 0 then goto L20e072;
  #L20e070.  return v1;
  #L20e072.  v9:= (`e.e.a.b.f.b.u3`) v9 @kind object;
  #L20e076.  v2:= v8.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e07a.  v3:= v9.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e07e.  if v2 != v3 then goto L20e0e6;
  #L20e082.  v3:= v8.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e086.  v4:= v9.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e08a.  v5:= 0I;
  #L20e08c.  if v5 >= v2 then goto L20e0a6;
  #L20e090.  v6:= v3[v5];
  #L20e094.  v7:= v4[v5];
  #L20e098.  if v6 == v7 then goto L20e0a0;
  #L20e09c.  v2:= 0I;
  #L20e09e.  goto L20e0a8;
  #L20e0a0.  v5:= v5 + 1;
  #L20e0a4.  goto L20e08c;
  #L20e0a6.  v2:= 1I;
  #L20e0a8.  if v2 == 0 then goto L20e0e6;
  #L20e0ac.  v2:= v8.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e0b0.  v9:= v9.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e0b4.  v3:= v8.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e0b8.  v4:= 0I;
  #L20e0ba.  if v4 >= v3 then goto L20e0dc;
  #L20e0be.  v5:= v2[v4] @kind object;
  #L20e0c2.  v6:= v9[v4] @kind object;
  #L20e0c6.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20e0cc.  v5:= temp;
  #L20e0ce.  if v5 != 0 then goto L20e0d6;
  #L20e0d2.  v9:= 0I;
  #L20e0d4.  goto L20e0de;
  #L20e0d6.  v4:= v4 + 1;
  #L20e0da.  goto L20e0ba;
  #L20e0dc.  v9:= 1I;
  #L20e0de.  if v9 != 0 then goto L20e0e4;
  #L20e0e2.  goto L20e0e6;
  #L20e0e4.  return v0;
  #L20e0e6.  return v1;
}
procedure `int` `hashCode`(`e.e.a.b.f.b.u3` v8 @kind this) @signature `Le/e/a/b/f/b/u3;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20e194.  v0:= v8.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e198.  v1:= v0 + 527;
  #L20e19c.  v1:= v1 * 31;
  #L20e1a0.  v2:= v8.`e.e.a.b.f.b.u3.b` @type ^`int`[] @kind object;
  #L20e1a4.  v3:= 0I;
  #L20e1a6.  v4:= 17I;
  #L20e1aa.  v5:= 0I;
  #L20e1ac.  v6:= 17I;
  #L20e1b0.  if v5 >= v0 then goto L20e1c4;
  #L20e1b4.  v6:= v6 * 31;
  #L20e1b8.  v7:= v2[v5];
  #L20e1bc.  v6:= v6 + v7 @kind int;
  #L20e1be.  v5:= v5 + 1;
  #L20e1c2.  goto L20e1b0;
  #L20e1c4.  v1:= v1 + v6 @kind int;
  #L20e1c6.  v1:= v1 * 31;
  #L20e1ca.  v0:= v8.`e.e.a.b.f.b.u3.c` @type ^`java.lang.Object`[] @kind object;
  #L20e1ce.  v2:= v8.`e.e.a.b.f.b.u3.a` @type ^`int`;
  #L20e1d2.  if v3 >= v2 then goto L20e1ee;
  #L20e1d6.  v4:= v4 * 31;
  #L20e1da.  v5:= v0[v3] @kind object;
  #L20e1de.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L20e1e4.  v5:= temp;
  #L20e1e6.  v4:= v4 + v5 @kind int;
  #L20e1e8.  v3:= v3 + 1;
  #L20e1ec.  goto L20e1d2;
  #L20e1ee.  v1:= v1 + v4 @kind int;
  #L20e1f0.  return v1;
}
