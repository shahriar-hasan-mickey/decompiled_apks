record `e.e.a.b.f.o.na` @kind class @AccessFlag FINAL extends `e.e.a.b.f.o.y` @kind class {
  `e.e.a.b.f.o.ta` `e.e.a.b.f.o.na.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.o.na` v0 @kind this, `e.e.a.b.f.o.ta` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Le/e/a/b/f/o/na;.<init>:(Le/e/a/b/f/o/ta;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cf5cc.  v0.`e.e.a.b.f.o.na.c` @type ^`e.e.a.b.f.o.ta` := v1 @kind object;
  #L2cf5d0.  call `<init>`(v0, v2) @signature `Le/e/a/b/f/o/y;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2cf5d6.  return @kind void;
}
procedure `void` `clear`(`e.e.a.b.f.o.na` v1 @kind this) @signature `Le/e/a/b/f/o/na;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf5e8.  call temp:= `iterator`(v1) @signature `Le/e/a/b/f/o/na;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2cf5ee.  v0:= temp @kind object;
  #L2cf5f0.  call `a`(v0) @signature `Le/e/a/b/f/o/u;.a:(Ljava/util/Iterator;)V` @kind static;
  #L2cf5f6.  return @kind void;
}
procedure `boolean` `containsAll`(`e.e.a.b.f.o.na` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/e/a/b/f/o/na;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf4cc.  v0:= v1.`e.e.a.b.f.o.y.b` @type ^`java.util.Map` @kind object;
  #L2cf4d0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2cf4d6.  v0:= temp @kind object;
  #L2cf4d8.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2cf4de.  v2:= temp;
  #L2cf4e0.  return v2;
}
procedure `boolean` `equals`(`e.e.a.b.f.o.na` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/na;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf4f4.  if v1 == v2 then goto L2cf516;
  #L2cf4f8.  v0:= v1.`e.e.a.b.f.o.y.b` @type ^`java.util.Map` @kind object;
  #L2cf4fc.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2cf502.  v0:= temp @kind object;
  #L2cf504.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2cf50a.  v2:= temp;
  #L2cf50c.  if v2 == 0 then goto L2cf512;
  #L2cf510.  goto L2cf516;
  #L2cf512.  v2:= 0I;
  #L2cf514.  return v2;
  #L2cf516.  v2:= 1I;
  #L2cf518.  return v2;
}
procedure `int` `hashCode`(`e.e.a.b.f.o.na` v1 @kind this) @signature `Le/e/a/b/f/o/na;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf574.  v0:= v1.`e.e.a.b.f.o.y.b` @type ^`java.util.Map` @kind object;
  #L2cf578.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2cf57e.  v0:= temp @kind object;
  #L2cf580.  call temp:= `hashCode`(v0) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L2cf586.  v0:= temp;
  #L2cf588.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.o.na` v2 @kind this) @signature `Le/e/a/b/f/o/na;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cf59c.  v0:= v2.`e.e.a.b.f.o.y.b` @type ^`java.util.Map` @kind object;
  #L2cf5a0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2cf5a6.  v0:= temp @kind object;
  #L2cf5a8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2cf5ae.  v0:= temp @kind object;
  #L2cf5b0.  v1:= new `e.e.a.b.f.o.ma`;
  #L2cf5b4.  call `<init>`(v1, v2, v0) @signature `Le/e/a/b/f/o/ma;.<init>:(Le/e/a/b/f/o/na;Ljava/util/Iterator;)V` @kind direct;
  #L2cf5ba.  return v1 @kind object;
}
procedure `boolean` `remove`(`e.e.a.b.f.o.na` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/o/na;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf52c.  v0:= v1.`e.e.a.b.f.o.y.b` @type ^`java.util.Map` @kind object;
  #L2cf530.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2cf536.  v2:= temp @kind object;
  #L2cf538.  v2:= (`java.util.Collection`) v2 @kind object;
  #L2cf53c.  if v2 == 0 then goto L2cf560;
  #L2cf540.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2cf546.  v0:= temp;
  #L2cf548.  call `clear`(v2) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L2cf54e.  v2:= v1.`e.e.a.b.f.o.na.c` @type ^`e.e.a.b.f.o.ta` @kind object;
  #L2cf552.  call temp:= `b`(v2, v0) @signature `Le/e/a/b/f/o/ta;.b:(Le/e/a/b/f/o/ta;I)I` @kind static;
  #L2cf558.  if v0 <= 0 then goto L2cf560;
  #L2cf55c.  v2:= 1I;
  #L2cf55e.  return v2;
  #L2cf560.  v2:= 0I;
  #L2cf562.  return v2;
}
