record `e.e.a.b.f.n.b5` @kind class @AccessFlag FINAL extends `e.e.a.b.f.n.y4` @kind class {
}
procedure `void` `<init>`(`e.e.a.b.f.n.b5` v0 @kind this) @signature `Le/e/a/b/f/n/b5;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28dfc0.  call `<init>`(v0) @signature `Le/e/a/b/f/n/y4;.<init>:()V` @kind direct;
  #L28dfc6.  return @kind void;
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 , `long` v4 , `int` v6 ) @signature `Le/e/a/b/f/n/b5;.a:([BIJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L28dd24.  if v6 == 0 then goto L28dd72;
  #L28dd28.  v0:= 1I;
  #L28dd2a.  if v6 == v0 then goto L28dd60;
  #L28dd2e.  v0:= 2I;
  #L28dd30.  if v6 != v0 then goto L28dd54;
  #L28dd34.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dd3a.  v6:= temp;
  #L28dd3c.  v0:= 1L;
  #L28dd40.  v4:= v4 + v0 @kind long;
  #L28dd42.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dd48.  v2:= temp;
  #L28dd4a.  call temp:= `a`(v3, v6, v2) @signature `Le/e/a/b/f/n/c5;.a:(III)I` @kind static;
  #L28dd50.  v2:= temp;
  #L28dd52.  return v2;
  #L28dd54.  v2:= new `java.lang.AssertionError`;
  #L28dd58.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L28dd5e.  throw v2;
  #L28dd60.  call temp:= `a`(v2, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dd66.  v2:= temp;
  #L28dd68.  call temp:= `a`(v3, v2) @signature `Le/e/a/b/f/n/c5;.a:(II)I` @kind static;
  #L28dd6e.  v2:= temp;
  #L28dd70.  return v2;
  #L28dd72.  call temp:= `a`(v3) @signature `Le/e/a/b/f/n/c5;.a:(I)I` @kind static;
  #L28dd78.  v2:= temp;
  #L28dd7a.  return v2;
}
procedure `int` `a`(`e.e.a.b.f.n.b5` v23 @kind this, `int` v24 , `byte`[] v25 @kind object, `int` v26 , `int` v27 ) @signature `Le/e/a/b/f/n/b5;.a:(I[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L28d75c.  v0:= v24;
  #L28d760.  v1:= v25 @kind object;
  #L28d764.  v2:= v26;
  #L28d768.  v3:= v27;
  #L28d76c.  v4:= length @variable v1;
  #L28d76e.  v5:= v2 ^| v3 @kind int;
  #L28d772.  v6:= v4 - v3 @kind int;
  #L28d776.  v5:= v5 ^| v6 @kind int;
  #L28d778.  v6:= 2I;
  #L28d77a.  if v5 < 0 then goto L28d9ec;
  #L28d77e.  v4:= (`long`) v2 @kind i2l;
  #L28d780.  v2:= (`long`) v3 @kind i2l;
  #L28d782.  v9:= -19I;
  #L28d786.  v10:= -62I;
  #L28d78a.  v11:= -16I;
  #L28d78e.  v12:= 16I;
  #L28d792.  v13:= -96I;
  #L28d796.  v14:= -32I;
  #L28d79a.  v15:= -65I;
  #L28d79e.  v16:= 1L;
  #L28d7a2.  v18:= -1I;
  #L28d7a6.  if v0 == 0 then goto L28d8be;
  #L28d7aa.  v19:= lcmp(v4, v2);
  #L28d7ae.  if v19 < 0 then goto L28d7b4;
  #L28d7b2.  return v0;
  #L28d7b4.  v8:= (`byte`) v0 @kind i2b;
  #L28d7b6.  if v8 >= v14 then goto L28d7d8;
  #L28d7ba.  if v8 < v10 then goto L28d7d6;
  #L28d7be.  v20:= v4 + v16 @kind long;
  #L28d7c2.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d7c8.  v0:= temp;
  #L28d7ca.  if v0 > v15 then goto L28d7d6;
  #L28d7ce.  v4:= v20 @kind wide;
  #L28d7d2.  goto L28d8be;
  #L28d7d6.  return v18;
  #L28d7d8.  if v8 >= v11 then goto L28d832;
  #L28d7dc.  v0:= v0 ^> 8;
  #L28d7e0.  v0:= ~v0 @kind int;
  #L28d7e2.  v0:= (`byte`) v0 @kind i2b;
  #L28d7e4.  if v0 != 0 then goto L28d80c;
  #L28d7e8.  v20:= v4 + v16 @kind long;
  #L28d7ec.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d7f2.  v0:= temp;
  #L28d7f4.  v4:= lcmp(v20, v2);
  #L28d7f8.  if v4 >= 0 then goto L28d802;
  #L28d7fc.  v4:= v20 @kind wide;
  #L28d800.  goto L28d80c;
  #L28d802.  call temp:= `a`(v8, v0) @signature `Le/e/a/b/f/n/c5;.a:(II)I` @kind static;
  #L28d808.  v0:= temp;
  #L28d80a.  return v0;
  #L28d80c.  if v0 > v15 then goto L28d830;
  #L28d810.  if v8 != v14 then goto L28d818;
  #L28d814.  if v0 < v13 then goto L28d830;
  #L28d818.  if v8 != v9 then goto L28d820;
  #L28d81c.  if v0 >= v13 then goto L28d830;
  #L28d820.  v20:= v4 + v16 @kind long;
  #L28d824.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d82a.  v0:= temp;
  #L28d82c.  if v0 <= v15 then goto L28d7ce;
  #L28d830.  return v18;
  #L28d832.  v7:= v0 ^> 8;
  #L28d836.  v7:= ~v7 @kind int;
  #L28d838.  v7:= (`byte`) v7 @kind i2b;
  #L28d83a.  if v7 != 0 then goto L28d864;
  #L28d83e.  v21:= v4 + v16 @kind long;
  #L28d842.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d848.  v7:= temp;
  #L28d84a.  v0:= lcmp(v21, v2);
  #L28d84e.  if v0 >= 0 then goto L28d85a;
  #L28d852.  v4:= v21 @kind wide;
  #L28d856.  v0:= 0I;
  #L28d858.  goto L28d866;
  #L28d85a.  call temp:= `a`(v8, v7) @signature `Le/e/a/b/f/n/c5;.a:(II)I` @kind static;
  #L28d860.  v0:= temp;
  #L28d862.  return v0;
  #L28d864.  v0:= v0 ^> v12 @kind int;
  #L28d866.  if v0 != 0 then goto L28d88e;
  #L28d86a.  v21:= v4 + v16 @kind long;
  #L28d86e.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d874.  v0:= temp;
  #L28d876.  v4:= lcmp(v21, v2);
  #L28d87a.  if v4 >= 0 then goto L28d884;
  #L28d87e.  v4:= v21 @kind wide;
  #L28d882.  goto L28d88e;
  #L28d884.  call temp:= `a`(v8, v7, v0) @signature `Le/e/a/b/f/n/c5;.a:(III)I` @kind static;
  #L28d88a.  v0:= temp;
  #L28d88c.  return v0;
  #L28d88e.  if v7 > v15 then goto L28d8bc;
  #L28d892.  v8:= v8 ^< 28;
  #L28d896.  v7:= v7 + 112;
  #L28d89a.  v8:= v8 + v7 @kind int;
  #L28d89c.  v7:= v8 ^> 30;
  #L28d8a0.  if v7 != 0 then goto L28d8bc;
  #L28d8a4.  if v0 > v15 then goto L28d8bc;
  #L28d8a8.  v7:= v4 + v16 @kind long;
  #L28d8ac.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d8b2.  v0:= temp;
  #L28d8b4.  if v0 > v15 then goto L28d8bc;
  #L28d8b8.  v4:= v7 @kind wide;
  #L28d8ba.  goto L28d8be;
  #L28d8bc.  return v18;
  #L28d8be.  v2:= v2 - v4 @kind long;
  #L28d8c0.  v8:= (`int`) v2 @kind l2i;
  #L28d8c2.  if v8 >= v12 then goto L28d8ca;
  #L28d8c6.  v0:= 0I;
  #L28d8c8.  goto L28d8ee;
  #L28d8ca.  v2:= v4 @kind wide;
  #L28d8cc.  v0:= 0I;
  #L28d8ce.  if v0 >= v8 then goto L28d8ec;
  #L28d8d2.  v21:= v2 + v16 @kind long;
  #L28d8d6.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d8dc.  v2:= temp;
  #L28d8de.  if v2 < 0 then goto L28d8ee;
  #L28d8e2.  v0:= v0 + 1;
  #L28d8e6.  v2:= v21 @kind wide;
  #L28d8ea.  goto L28d8ce;
  #L28d8ec.  v0:= v8;
  #L28d8ee.  v8:= v8 - v0 @kind int;
  #L28d8f0.  v2:= (`long`) v0 @kind i2l;
  #L28d8f2.  v4:= v4 + v2 @kind long;
  #L28d8f4.  v0:= 0I;
  #L28d8f6.  if v8 <= 0 then goto L28d912;
  #L28d8fa.  v2:= v4 + v16 @kind long;
  #L28d8fe.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d904.  v0:= temp;
  #L28d906.  if v0 < 0 then goto L28d914;
  #L28d90a.  v8:= v8 + -1;
  #L28d90e.  v4:= v2 @kind wide;
  #L28d910.  goto L28d8f6;
  #L28d912.  v2:= v4 @kind wide;
  #L28d914.  if v8 != 0 then goto L28d920;
  #L28d918.  v18:= 0I;
  #L28d91c.  goto L28d9ea;
  #L28d920.  v8:= v8 + -1;
  #L28d924.  if v0 >= v14 then goto L28d94c;
  #L28d928.  if v8 == 0 then goto L28d946;
  #L28d92c.  v8:= v8 + -1;
  #L28d930.  if v0 < v10 then goto L28d9ea;
  #L28d934.  v4:= v2 + v16 @kind long;
  #L28d938.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d93e.  v0:= temp;
  #L28d940.  if v0 <= v15 then goto L28d8f4;
  #L28d944.  goto L28d9ea;
  #L28d946.  v18:= v0;
  #L28d94a.  goto L28d9ea;
  #L28d94c.  if v0 >= v11 then goto L28d990;
  #L28d950.  if v8 >= v6 then goto L28d956;
  #L28d954.  goto L28d996;
  #L28d956.  v8:= v8 + -2;
  #L28d95a.  v4:= v2 + v16 @kind long;
  #L28d95e.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d964.  v2:= temp;
  #L28d966.  if v2 > v15 then goto L28d9ea;
  #L28d96a.  if v0 != v14 then goto L28d972;
  #L28d96e.  if v2 < v13 then goto L28d9ea;
  #L28d972.  if v0 != v9 then goto L28d97a;
  #L28d976.  if v2 >= v13 then goto L28d9ea;
  #L28d97a.  v2:= v4 + v16 @kind long;
  #L28d97e.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d984.  v0:= temp;
  #L28d986.  if v0 <= v15 then goto L28d98c;
  #L28d98a.  goto L28d9ea;
  #L28d98c.  v4:= v2 @kind wide;
  #L28d98e.  goto L28d8f4;
  #L28d990.  v4:= 3I;
  #L28d992.  if v8 >= v4 then goto L28d9a4;
  #L28d996.  call temp:= `a`(v1, v0, v2, v8) @signature `Le/e/a/b/f/n/b5;.a:([BIJI)I` @kind static;
  #L28d99c.  v8:= temp;
  #L28d99e.  v18:= v8;
  #L28d9a2.  goto L28d9ea;
  #L28d9a4.  v8:= v8 + -3;
  #L28d9a8.  v4:= v2 + v16 @kind long;
  #L28d9ac.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d9b2.  v2:= temp;
  #L28d9b4.  if v2 > v15 then goto L28d9ea;
  #L28d9b8.  v0:= v0 ^< 28;
  #L28d9bc.  v2:= v2 + 112;
  #L28d9c0.  v0:= v0 + v2 @kind int;
  #L28d9c2.  v0:= v0 ^> 30;
  #L28d9c6.  if v0 != 0 then goto L28d9ea;
  #L28d9ca.  v2:= v4 + v16 @kind long;
  #L28d9ce.  call temp:= `a`(v1, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d9d4.  v0:= temp;
  #L28d9d6.  if v0 > v15 then goto L28d9ea;
  #L28d9da.  v4:= v2 + v16 @kind long;
  #L28d9de.  call temp:= `a`(v1, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28d9e4.  v0:= temp;
  #L28d9e6.  if v0 <= v15 then goto L28d8f4;
  #L28d9ea.  return v18;
  #L28d9ec.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L28d9f0.  v1:= 3I;
  #L28d9f2.  v1:= new `java.lang.Object`[v1];
  #L28d9f6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28d9fc.  v4:= temp @kind object;
  #L28d9fe.  v5:= 0I;
  #L28da00.  v1[v5]:= v4 @kind object;
  #L28da04.  call temp:= `valueOf`(v26) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28da0a.  v2:= temp @kind object;
  #L28da0c.  v4:= 1I;
  #L28da0e.  v1[v4]:= v2 @kind object;
  #L28da12.  call temp:= `valueOf`(v27) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28da18.  v2:= temp @kind object;
  #L28da1a.  v1[v6]:= v2 @kind object;
  #L28da1e.  v2:= "Array length=%d, index=%d, limit=%d" @kind object;
  #L28da22.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L28da28.  v1:= temp @kind object;
  #L28da2a.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28da30.  throw v0;
}
procedure `int` `a`(`e.e.a.b.f.n.b5` v22 @kind this, `java.lang.CharSequence` v23 @kind object, `byte`[] v24 @kind object, `int` v25 , `int` v26 ) @signature `Le/e/a/b/f/n/b5;.a:(Ljava/lang/CharSequence;[BII)I` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L28da44.  v0:= v23 @kind object;
  #L28da48.  v1:= v24 @kind object;
  #L28da4c.  v2:= v25;
  #L28da50.  v3:= v26;
  #L28da54.  v4:= (`long`) v2 @kind i2l;
  #L28da56.  v6:= (`long`) v3 @kind i2l;
  #L28da58.  v6:= v6 + v4 @kind long;
  #L28da5a.  call temp:= `length`(v23) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L28da60.  v8:= temp;
  #L28da62.  v9:= " at index " @kind object;
  #L28da66.  v10:= "Failed writing " @kind object;
  #L28da6a.  if v8 > v3 then goto L28dcca;
  #L28da6e.  v11:= length @variable v1;
  #L28da70.  v11:= v11 - v3 @kind int;
  #L28da72.  if v11 < v2 then goto L28dcca;
  #L28da76.  v2:= 0I;
  #L28da78.  v3:= 128I;
  #L28da7c.  v11:= 1L;
  #L28da80.  if v2 >= v8 then goto L28daa2;
  #L28da84.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L28da8a.  v13:= temp;
  #L28da8c.  if v13 >= v3 then goto L28daa2;
  #L28da90.  v11:= v11 + v4 @kind long;
  #L28da92.  v3:= (`byte`) v13 @kind i2b;
  #L28da94.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28da9a.  v2:= v2 + 1;
  #L28da9e.  v4:= v11 @kind wide;
  #L28daa0.  goto L28da78;
  #L28daa2.  if v2 == v8 then goto L28dcc6;
  #L28daa6.  if v2 >= v8 then goto L28dcc2;
  #L28daaa.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L28dab0.  v13:= temp;
  #L28dab2.  if v13 >= v3 then goto L28dad6;
  #L28dab6.  v14:= lcmp(v4, v6);
  #L28daba.  if v14 >= 0 then goto L28dad6;
  #L28dabe.  v14:= v4 + v11 @kind long;
  #L28dac2.  v13:= (`byte`) v13 @kind i2b;
  #L28dac4.  call `a`(v1, v4, v13) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28daca.  v4:= v11 @kind wide;
  #L28dacc.  v12:= v14 @kind wide;
  #L28dace.  v11:= 128I;
  #L28dad2.  goto L28dc30;
  #L28dad6.  v14:= 2048I;
  #L28dada.  if v13 >= v14 then goto L28db28;
  #L28dade.  v14:= -2L;
  #L28dae2.  v14:= v14 + v6 @kind long;
  #L28dae4.  v16:= lcmp(v4, v14);
  #L28dae8.  if v16 > 0 then goto L28db28;
  #L28daec.  v14:= v4 + v11 @kind long;
  #L28daf0.  v3:= v13 ^>> 6;
  #L28daf4.  v3:= v3 ^| 960;
  #L28daf8.  v3:= (`byte`) v3 @kind i2b;
  #L28dafa.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28db00.  v3:= v14 + v11 @kind long;
  #L28db04.  v5:= v13 ^& 63;
  #L28db08.  v13:= 128I;
  #L28db0c.  v5:= v5 ^| v13 @kind int;
  #L28db0e.  v5:= (`byte`) v5 @kind i2b;
  #L28db10.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28db16.  v20:= v11 @kind wide;
  #L28db1a.  v11:= 128I;
  #L28db1e.  v12:= v3 @kind wide;
  #L28db20.  v4:= v20 @kind wide;
  #L28db24.  goto L28dc30;
  #L28db28.  v3:= 57343I;
  #L28db2e.  v14:= 55296I;
  #L28db34.  if v13 < v14 then goto L28db3c;
  #L28db38.  if v13 <= v3 then goto L28db98;
  #L28db3c.  v15:= -3L;
  #L28db40.  v15:= v15 + v6 @kind long;
  #L28db42.  v17:= lcmp(v4, v15);
  #L28db46.  if v17 > 0 then goto L28db98;
  #L28db4a.  v14:= v4 + v11 @kind long;
  #L28db4e.  v3:= v13 ^>> 12;
  #L28db52.  v3:= v3 ^| 480;
  #L28db56.  v3:= (`byte`) v3 @kind i2b;
  #L28db58.  call `a`(v1, v4, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28db5e.  v3:= v14 + v11 @kind long;
  #L28db62.  v5:= v13 ^>> 6;
  #L28db66.  v5:= v5 ^& 63;
  #L28db6a.  v11:= 128I;
  #L28db6e.  v5:= v5 ^| v11 @kind int;
  #L28db70.  v5:= (`byte`) v5 @kind i2b;
  #L28db72.  call `a`(v1, v14, v5) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28db78.  v14:= 1L;
  #L28db7c.  v18:= v3 + v14 @kind long;
  #L28db80.  v5:= v13 ^& 63;
  #L28db84.  v5:= v5 ^| v11 @kind int;
  #L28db86.  v5:= (`byte`) v5 @kind i2b;
  #L28db88.  call `a`(v1, v3, v5) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28db8e.  v12:= v18 @kind wide;
  #L28db92.  v4:= 1L;
  #L28db96.  goto L28dace;
  #L28db98.  v11:= -4L;
  #L28db9c.  v11:= v11 + v6 @kind long;
  #L28db9e.  v15:= lcmp(v4, v11);
  #L28dba2.  if v15 > 0 then goto L28dc58;
  #L28dba6.  v3:= v2 + 1;
  #L28dbaa.  if v3 == v8 then goto L28dc48;
  #L28dbae.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L28dbb4.  v2:= temp;
  #L28dbb6.  call temp:= `isSurrogatePair`(v13, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L28dbbc.  v11:= temp;
  #L28dbbe.  if v11 == 0 then goto L28dc46;
  #L28dbc2.  call temp:= `toCodePoint`(v13, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L28dbc8.  v2:= temp;
  #L28dbca.  v11:= 1L;
  #L28dbce.  v13:= v4 + v11 @kind long;
  #L28dbd2.  v15:= v2 ^>> 18;
  #L28dbd6.  v15:= v15 ^| 240;
  #L28dbda.  v15:= (`byte`) v15 @kind i2b;
  #L28dbdc.  call `a`(v1, v4, v15) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28dbe2.  v4:= v13 + v11 @kind long;
  #L28dbe6.  v15:= v2 ^>> 12;
  #L28dbea.  v15:= v15 ^& 63;
  #L28dbee.  v11:= 128I;
  #L28dbf2.  v12:= v15 ^| 128;
  #L28dbf6.  v12:= (`byte`) v12 @kind i2b;
  #L28dbf8.  call `a`(v1, v13, v12) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28dbfe.  v12:= 1L;
  #L28dc02.  v14:= v4 + v12 @kind long;
  #L28dc06.  v16:= v2 ^>> 6;
  #L28dc0a.  v12:= v16 ^& 63;
  #L28dc0e.  v12:= v12 ^| v11 @kind int;
  #L28dc10.  v12:= (`byte`) v12 @kind i2b;
  #L28dc12.  call `a`(v1, v4, v12) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28dc18.  v4:= 1L;
  #L28dc1c.  v12:= v14 + v4 @kind long;
  #L28dc20.  v2:= v2 ^& 63;
  #L28dc24.  v2:= v2 ^| v11 @kind int;
  #L28dc26.  v2:= (`byte`) v2 @kind i2b;
  #L28dc28.  call `a`(v1, v14, v2) @signature `Le/e/a/b/f/n/w4;.a:([BJB)V` @kind static;
  #L28dc2e.  v2:= v3;
  #L28dc30.  v2:= v2 + 1;
  #L28dc34.  v3:= 128I;
  #L28dc38.  v20:= v4 @kind wide;
  #L28dc3c.  v4:= v12 @kind wide;
  #L28dc3e.  v11:= v20 @kind wide;
  #L28dc42.  goto L28daa6;
  #L28dc46.  v2:= v3;
  #L28dc48.  v0:= new `e.e.a.b.f.n.a5`;
  #L28dc4c.  v2:= v2 + -1;
  #L28dc50.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/n/a5;.<init>:(II)V` @kind direct;
  #L28dc56.  throw v0;
  #L28dc58.  if v13 < v14 then goto L28dc88;
  #L28dc5c.  if v13 > v3 then goto L28dc88;
  #L28dc60.  v1:= v2 + 1;
  #L28dc64.  if v1 == v8 then goto L28dc7c;
  #L28dc68.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L28dc6e.  v0:= temp;
  #L28dc70.  call temp:= `isSurrogatePair`(v13, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L28dc76.  v0:= temp;
  #L28dc78.  if v0 != 0 then goto L28dc88;
  #L28dc7c.  v0:= new `e.e.a.b.f.n.a5`;
  #L28dc80.  call `<init>`(v0, v2, v8) @signature `Le/e/a/b/f/n/a5;.<init>:(II)V` @kind direct;
  #L28dc86.  throw v0;
  #L28dc88.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L28dc8c.  v1:= new `java.lang.StringBuilder`;
  #L28dc90.  v2:= 46I;
  #L28dc94.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L28dc9a.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dca0.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dca6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dcac.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dcb2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28dcb8.  v1:= temp @kind object;
  #L28dcba.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28dcc0.  throw v0;
  #L28dcc2.  v0:= (`int`) v4 @kind l2i;
  #L28dcc4.  return v0;
  #L28dcc6.  v0:= (`int`) v4 @kind l2i;
  #L28dcc8.  return v0;
  #L28dcca.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L28dcce.  v8:= v8 + -1;
  #L28dcd2.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L28dcd8.  v0:= temp;
  #L28dcda.  v4:= new `java.lang.StringBuilder`;
  #L28dcde.  v5:= 37I;
  #L28dce2.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L28dce8.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dcee.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dcf4.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dcfa.  v0:= v2 + v3 @kind int;
  #L28dcfe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28dd04.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28dd0a.  v0:= temp @kind object;
  #L28dd0c.  call `<init>`(v1, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28dd12.  throw v1;
}
procedure `java.lang.String` `b`(`e.e.a.b.f.n.b5` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Le/e/a/b/f/n/b5;.b:([BII)Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L28dd8c.  v0:= length @variable v11;
  #L28dd8e.  v1:= v12 ^| v13 @kind int;
  #L28dd92.  v2:= v0 - v12 @kind int;
  #L28dd96.  v2:= v2 - v13 @kind int;
  #L28dd98.  v1:= v1 ^| v2 @kind int;
  #L28dd9a.  v2:= 0I;
  #L28dd9c.  if v1 < 0 then goto L28df16;
  #L28dda0.  v0:= v12 + v13 @kind int;
  #L28dda4.  v13:= new `char`[v13];
  #L28dda8.  v1:= 0I;
  #L28ddaa.  if v12 >= v0 then goto L28ddd8;
  #L28ddae.  v3:= (`long`) v12 @kind i2l;
  #L28ddb0.  call temp:= `a`(v11, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28ddb6.  v3:= temp;
  #L28ddb8.  call temp:= `a`(v3) @signature `Le/e/a/b/f/n/x4;.a:(B)Z` @kind static;
  #L28ddbe.  v4:= temp;
  #L28ddc0.  if v4 != 0 then goto L28ddc6;
  #L28ddc4.  goto L28ddd8;
  #L28ddc6.  v12:= v12 + 1;
  #L28ddca.  v4:= v1 + 1;
  #L28ddce.  v3:= (`char`) v3 @kind i2c;
  #L28ddd0.  v13[v1]:= v3 @kind char;
  #L28ddd4.  v1:= v4;
  #L28ddd6.  goto L28ddaa;
  #L28ddd8.  if v12 >= v0 then goto L28df0a;
  #L28dddc.  v3:= v12 + 1;
  #L28dde0.  v4:= (`long`) v12 @kind i2l;
  #L28dde2.  call temp:= `a`(v11, v4) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dde8.  v12:= temp;
  #L28ddea.  call temp:= `a`(v12) @signature `Le/e/a/b/f/n/x4;.a:(B)Z` @kind static;
  #L28ddf0.  v4:= temp;
  #L28ddf2.  if v4 == 0 then goto L28de30;
  #L28ddf6.  v4:= v1 + 1;
  #L28ddfa.  v12:= (`char`) v12 @kind i2c;
  #L28ddfc.  v13[v1]:= v12 @kind char;
  #L28de00.  v12:= v3;
  #L28de02.  v1:= v4;
  #L28de04.  if v12 >= v0 then goto L28ddd8;
  #L28de08.  v3:= (`long`) v12 @kind i2l;
  #L28de0a.  call temp:= `a`(v11, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28de10.  v3:= temp;
  #L28de12.  call temp:= `a`(v3) @signature `Le/e/a/b/f/n/x4;.a:(B)Z` @kind static;
  #L28de18.  v4:= temp;
  #L28de1a.  if v4 != 0 then goto L28de20;
  #L28de1e.  goto L28ddd8;
  #L28de20.  v12:= v12 + 1;
  #L28de24.  v4:= v1 + 1;
  #L28de28.  v3:= (`char`) v3 @kind i2c;
  #L28de2a.  v13[v1]:= v3 @kind char;
  #L28de2e.  goto L28de02;
  #L28de30.  call temp:= `b`(v12) @signature `Le/e/a/b/f/n/x4;.b:(B)Z` @kind static;
  #L28de36.  v4:= temp;
  #L28de38.  if v4 == 0 then goto L28de68;
  #L28de3c.  if v3 >= v0 then goto L28de5e;
  #L28de40.  v4:= v3 + 1;
  #L28de44.  v5:= v1 + 1;
  #L28de48.  v6:= (`long`) v3 @kind i2l;
  #L28de4a.  call temp:= `a`(v11, v6) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28de50.  v3:= temp;
  #L28de52.  call `a`(v12, v3, v13, v1) @signature `Le/e/a/b/f/n/x4;.a:(BB[CI)V` @kind static;
  #L28de58.  v12:= v4;
  #L28de5a.  v1:= v5;
  #L28de5c.  goto L28ddd8;
  #L28de5e.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28de64.  v11:= temp @kind object;
  #L28de66.  throw v11;
  #L28de68.  call temp:= `c`(v12) @signature `Le/e/a/b/f/n/x4;.c:(B)Z` @kind static;
  #L28de6e.  v4:= temp;
  #L28de70.  if v4 == 0 then goto L28deb2;
  #L28de74.  v4:= v0 + -1;
  #L28de78.  if v3 >= v4 then goto L28dea8;
  #L28de7c.  v4:= v3 + 1;
  #L28de80.  v5:= v4 + 1;
  #L28de84.  v6:= v1 + 1;
  #L28de88.  v7:= (`long`) v3 @kind i2l;
  #L28de8a.  call temp:= `a`(v11, v7) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28de90.  v3:= temp;
  #L28de92.  v7:= (`long`) v4 @kind i2l;
  #L28de94.  call temp:= `a`(v11, v7) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28de9a.  v4:= temp;
  #L28de9c.  call `a`(v12, v3, v4, v13, v1) @signature `Le/e/a/b/f/n/x4;.a:(BBB[CI)V` @kind static;
  #L28dea2.  v12:= v5;
  #L28dea4.  v1:= v6;
  #L28dea6.  goto L28ddd8;
  #L28dea8.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28deae.  v11:= temp @kind object;
  #L28deb0.  throw v11;
  #L28deb2.  v4:= v0 + -2;
  #L28deb6.  if v3 >= v4 then goto L28df00;
  #L28deba.  v4:= v3 + 1;
  #L28debe.  v5:= v4 + 1;
  #L28dec2.  v9:= v5 + 1;
  #L28dec6.  v6:= (`long`) v3 @kind i2l;
  #L28dec8.  call temp:= `a`(v11, v6) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dece.  v6:= temp;
  #L28ded0.  v3:= (`long`) v4 @kind i2l;
  #L28ded2.  call temp:= `a`(v11, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28ded8.  v7:= temp;
  #L28deda.  v3:= (`long`) v5 @kind i2l;
  #L28dedc.  call temp:= `a`(v11, v3) @signature `Le/e/a/b/f/n/w4;.a:([BJ)B` @kind static;
  #L28dee2.  v8:= temp;
  #L28dee4.  v3:= v12;
  #L28dee6.  v4:= v6;
  #L28dee8.  v5:= v7;
  #L28deea.  v6:= v8;
  #L28deec.  v7:= v13 @kind object;
  #L28deee.  v8:= v1;
  #L28def0.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Le/e/a/b/f/n/x4;.a:(BBBB[CI)V` @kind static;
  #L28def6.  v1:= v1 + 2;
  #L28defa.  v12:= v9;
  #L28defc.  goto L28ddd8;
  #L28df00.  call temp:= `f`() @signature `Le/e/a/b/f/n/g2;.f:()Le/e/a/b/f/n/g2;` @kind static;
  #L28df06.  v11:= temp @kind object;
  #L28df08.  throw v11;
  #L28df0a.  v11:= new `java.lang.String`;
  #L28df0e.  call `<init>`(v11, v13, v2, v1) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L28df14.  return v11 @kind object;
  #L28df16.  v11:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L28df1a.  v1:= 3I;
  #L28df1c.  v1:= new `java.lang.Object`[v1];
  #L28df20.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28df26.  v0:= temp @kind object;
  #L28df28.  v1[v2]:= v0 @kind object;
  #L28df2c.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28df32.  v12:= temp @kind object;
  #L28df34.  v0:= 1I;
  #L28df36.  v1[v0]:= v12 @kind object;
  #L28df3a.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L28df40.  v12:= temp @kind object;
  #L28df42.  v13:= 2I;
  #L28df44.  v1[v13]:= v12 @kind object;
  #L28df48.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L28df4c.  call temp:= `format`(v12, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L28df52.  v12:= temp @kind object;
  #L28df54.  call `<init>`(v11, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28df5a.  throw v11;
}
