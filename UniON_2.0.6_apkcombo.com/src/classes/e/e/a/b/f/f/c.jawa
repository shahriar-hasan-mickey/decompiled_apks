record `e.e.a.b.f.f.c` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/f/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L218bc8.  v0:= constclass @type ^`e.e.a.b.f.f.c` @kind object;
  #L218bcc.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L218bd2.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.f.c` v0 @kind this) @signature `Le/e/a/b/f/f/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L218be4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L218bea.  return @kind void;
}
procedure `void` `a`(`android.os.Parcel` v0 @kind object, `boolean` v1 ) @signature `Le/e/a/b/f/f/c;.a:(Landroid/os/Parcel;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L218bfc.  call `writeInt`(v0, v1) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L218c02.  return @kind void;
}
procedure `boolean` `a`(`android.os.Parcel` v0 @kind object) @signature `Le/e/a/b/f/f/c;.a:(Landroid/os/Parcel;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L218ba4.  call temp:= `readInt`(v0) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L218baa.  v0:= temp;
  #L218bac.  if v0 == 0 then goto L218bb4;
  #L218bb0.  v0:= 1I;
  #L218bb2.  return v0;
  #L218bb4.  v0:= 0I;
  #L218bb6.  return v0;
}
