record `e.e.a.b.f.q.x4` @kind class @AccessFlag FINAL extends `e.e.a.b.f.q.kr` @kind class {
  `java.lang.Object` `e.e.a.b.f.q.x4.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.b.f.q.x4.c` @AccessFlag PRIVATE;
  `e.e.a.b.f.q.z4` `e.e.a.b.f.q.x4.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.f.q.x4` v0 @kind this, `e.e.a.b.f.q.z4` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/q/x4;.<init>:(Le/e/a/b/f/q/z4;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e1c94.  v0.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` := v1 @kind object;
  #L2e1c98.  call `<init>`(v0) @signature `Le/e/a/b/f/q/kr;.<init>:()V` @kind direct;
  #L2e1c9e.  v1:= v1.`e.e.a.b.f.q.z4.d` @type ^`java.lang.Object`[] @kind object;
  #L2e1ca2.  v1:= v1[v2] @kind object;
  #L2e1ca6.  v0.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2e1caa.  v0.`e.e.a.b.f.q.x4.c` @type ^`int` := v2;
  #L2e1cae.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.q.x4` v3 @kind this) @signature `Le/e/a/b/f/q/x4;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e1cc0.  v0:= v3.`e.e.a.b.f.q.x4.c` @type ^`int`;
  #L2e1cc4.  v1:= -1I;
  #L2e1cc6.  if v0 == v1 then goto L2e1cfe;
  #L2e1cca.  v1:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1cce.  call temp:= `size`(v1) @signature `Le/e/a/b/f/q/z4;.size:()I` @kind virtual;
  #L2e1cd4.  v1:= temp;
  #L2e1cd6.  if v0 >= v1 then goto L2e1cfe;
  #L2e1cda.  v0:= v3.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1cde.  v1:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1ce2.  v1:= v1.`e.e.a.b.f.q.z4.d` @type ^`java.lang.Object`[] @kind object;
  #L2e1ce6.  v2:= v3.`e.e.a.b.f.q.x4.c` @type ^`int`;
  #L2e1cea.  v1:= v1[v2] @kind object;
  #L2e1cee.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/f/q/r7;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e1cf4.  v0:= temp;
  #L2e1cf6.  if v0 != 0 then goto L2e1cfc;
  #L2e1cfa.  goto L2e1cfe;
  #L2e1cfc.  return @kind void;
  #L2e1cfe.  v0:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1d02.  v1:= v3.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1d06.  call temp:= `b`(v0, v1) @signature `Le/e/a/b/f/q/z4;.b:(Le/e/a/b/f/q/z4;Ljava/lang/Object;)I` @kind static;
  #L2e1d0c.  v0:= temp;
  #L2e1d0e.  v3.`e.e.a.b.f.q.x4.c` @type ^`int` := v0;
  #L2e1d12.  return @kind void;
}
procedure `java.lang.Object` `getKey`(`e.e.a.b.f.q.x4` v1 @kind this) @signature `Le/e/a/b/f/q/x4;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e1bc8.  v0:= v1.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1bcc.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.a.b.f.q.x4` v2 @kind this) @signature `Le/e/a/b/f/q/x4;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e1be0.  v0:= v2.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1be4.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:()Ljava/util/Map;` @kind virtual;
  #L2e1bea.  v0:= temp @kind object;
  #L2e1bec.  if v0 == 0 then goto L2e1bfe;
  #L2e1bf0.  v1:= v2.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1bf4.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e1bfa.  v0:= temp @kind object;
  #L2e1bfc.  return v0 @kind object;
  #L2e1bfe.  call `a`(v2) @signature `Le/e/a/b/f/q/x4;.a:()V` @kind direct;
  #L2e1c04.  v0:= v2.`e.e.a.b.f.q.x4.c` @type ^`int`;
  #L2e1c08.  v1:= -1I;
  #L2e1c0a.  if v0 != v1 then goto L2e1c12;
  #L2e1c0e.  v0:= 0I;
  #L2e1c10.  return v0 @kind object;
  #L2e1c12.  v1:= v2.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1c16.  v1:= v1.`e.e.a.b.f.q.z4.e` @type ^`java.lang.Object`[] @kind object;
  #L2e1c1a.  v0:= v1[v0] @kind object;
  #L2e1c1e.  return v0 @kind object;
}
procedure `java.lang.Object` `setValue`(`e.e.a.b.f.q.x4` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/q/x4;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e1c30.  v0:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1c34.  call temp:= `b`(v0) @signature `Le/e/a/b/f/q/z4;.b:()Ljava/util/Map;` @kind virtual;
  #L2e1c3a.  v0:= temp @kind object;
  #L2e1c3c.  if v0 == 0 then goto L2e1c4e;
  #L2e1c40.  v1:= v3.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1c44.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e1c4a.  v4:= temp @kind object;
  #L2e1c4c.  return v4 @kind object;
  #L2e1c4e.  call `a`(v3) @signature `Le/e/a/b/f/q/x4;.a:()V` @kind direct;
  #L2e1c54.  v0:= v3.`e.e.a.b.f.q.x4.c` @type ^`int`;
  #L2e1c58.  v1:= -1I;
  #L2e1c5a.  if v0 != v1 then goto L2e1c70;
  #L2e1c5e.  v0:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1c62.  v1:= v3.`e.e.a.b.f.q.x4.b` @type ^`java.lang.Object` @kind object;
  #L2e1c66.  call temp:= `put`(v0, v1, v4) @signature `Le/e/a/b/f/q/z4;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e1c6c.  v4:= 0I;
  #L2e1c6e.  return v4 @kind object;
  #L2e1c70.  v1:= v3.`e.e.a.b.f.q.x4.d` @type ^`e.e.a.b.f.q.z4` @kind object;
  #L2e1c74.  v1:= v1.`e.e.a.b.f.q.z4.e` @type ^`java.lang.Object`[] @kind object;
  #L2e1c78.  v2:= v1[v0] @kind object;
  #L2e1c7c.  v1[v0]:= v4 @kind object;
  #L2e1c80.  return v2 @kind object;
}
