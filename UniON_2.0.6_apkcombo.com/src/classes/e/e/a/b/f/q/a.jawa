record `e.e.a.b.f.q.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v4 @kind object) @signature `Le/e/a/b/f/q/a;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e1dbc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e1dc2.  v0:= temp;
  #L2e1dc4.  v1:= 0I;
  #L2e1dc6.  if v1 >= v0 then goto L2e1e1a;
  #L2e1dca.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2e1dd0.  v2:= temp;
  #L2e1dd2.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/a;.a:(C)Z` @kind static;
  #L2e1dd8.  v2:= temp;
  #L2e1dda.  if v2 == 0 then goto L2e1e14;
  #L2e1dde.  call temp:= `toCharArray`(v4) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L2e1de4.  v4:= temp @kind object;
  #L2e1de6.  if v1 >= v0 then goto L2e1e0a;
  #L2e1dea.  v2:= v4[v1] @kind char;
  #L2e1dee.  call temp:= `a`(v2) @signature `Le/e/a/b/f/q/a;.a:(C)Z` @kind static;
  #L2e1df4.  v3:= temp;
  #L2e1df6.  if v3 == 0 then goto L2e1e04;
  #L2e1dfa.  v2:= v2 ^~ 32;
  #L2e1dfe.  v2:= (`char`) v2 @kind i2c;
  #L2e1e00.  v4[v1]:= v2 @kind char;
  #L2e1e04.  v1:= v1 + 1;
  #L2e1e08.  goto L2e1de6;
  #L2e1e0a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:([C)Ljava/lang/String;` @kind static;
  #L2e1e10.  v4:= temp @kind object;
  #L2e1e12.  return v4 @kind object;
  #L2e1e14.  v1:= v1 + 1;
  #L2e1e18.  goto L2e1dc6;
  #L2e1e1a.  return v4 @kind object;
}
procedure `boolean` `a`(`char` v1 ) @signature `Le/e/a/b/f/q/a;.a:(C)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d553c.  v0:= 65I;
  #L2d5540.  if v1 < v0 then goto L2d5550;
  #L2d5544.  v0:= 90I;
  #L2d5548.  if v1 > v0 then goto L2d5550;
  #L2d554c.  v1:= 1I;
  #L2d554e.  return v1;
  #L2d5550.  v1:= 0I;
  #L2d5552.  return v1;
}
