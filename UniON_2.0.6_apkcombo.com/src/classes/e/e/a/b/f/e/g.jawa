record `e.e.a.b.f.e.g` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Le/e/a/b/f/e/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L218698.  v0:= new `e.e.a.b.f.e.e`;
  #L21869c.  call `<init>`(v0) @signature `Le/e/a/b/f/e/e;.<init>:()V` @kind direct;
  #L2186a2.  return @kind void;
}
procedure `java.io.InputStream` `a`(`java.io.InputStream` v2 @kind object, `long` v3 ) @signature `Le/e/a/b/f/e/g;.a:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L218674.  v3:= new `e.e.a.b.f.e.f`;
  #L218678.  v0:= 1048577L;
  #L21867e.  call `<init>`(v3, v2, v0) @signature `Le/e/a/b/f/e/f;.<init>:(Ljava/io/InputStream;J)V` @kind direct;
  #L218684.  return v3 @kind object;
}
procedure `byte`[] `a`(`java.io.InputStream` v8 @kind object) @signature `Le/e/a/b/f/e/g;.a:(Ljava/io/InputStream;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L218564.  v0:= new `java.util.ArrayDeque`;
  #L218568.  v1:= 20I;
  #L21856c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayDeque;.<init>:(I)V` @kind direct;
  #L218572.  v1:= 0I;
  #L218574.  v2:= 8192I;
  #L218578.  v2:= 0I;
  #L21857a.  v3:= 8192I;
  #L21857e.  v4:= -1I;
  #L218580.  v5:= 2147483639I;
  #L218586.  if v2 >= v5 then goto L2185fa;
  #L21858a.  v5:= v5 - v2 @kind int;
  #L21858c.  call temp:= `min`(v3, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L218592.  v5:= temp;
  #L218594.  v5:= new `byte`[v5];
  #L218598.  call temp:= `add`(v0, v5) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21859e.  v6:= v2;
  #L2185a0.  v2:= 0I;
  #L2185a2.  v7:= length @variable v5;
  #L2185a4.  if v2 >= v7 then goto L2185c6;
  #L2185a8.  v7:= v7 - v2 @kind int;
  #L2185aa.  call temp:= `read`(v8, v5, v2, v7) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2185b0.  v7:= temp;
  #L2185b2.  if v7 != v4 then goto L2185c0;
  #L2185b6.  call temp:= `a`(v0, v6) @signature `Le/e/a/b/f/e/g;.a:(Ljava/util/Queue;I)[B` @kind static;
  #L2185bc.  v8:= temp @kind object;
  #L2185be.  goto L21860e;
  #L2185c0.  v2:= v2 + v7 @kind int;
  #L2185c2.  v6:= v6 + v7 @kind int;
  #L2185c4.  goto L2185a2;
  #L2185c6.  v2:= (`long`) v3 @kind i2l;
  #L2185c8.  v2:= v2 + v2 @kind long;
  #L2185ca.  v4:= 2147483647L;
  #L2185d0.  v7:= lcmp(v2, v4);
  #L2185d4.  if v7 <= 0 then goto L2185e2;
  #L2185d8.  v3:= 2147483647I;
  #L2185de.  v2:= v6;
  #L2185e0.  goto L21857e;
  #L2185e2.  v4:= -2147483648L;
  #L2185e8.  v7:= lcmp(v2, v4);
  #L2185ec.  if v7 >= 0 then goto L2185f6;
  #L2185f0.  v3:= -2147483648I;
  #L2185f4.  goto L2185de;
  #L2185f6.  v3:= (`int`) v2 @kind l2i;
  #L2185f8.  goto L2185de;
  #L2185fa.  call temp:= `read`(v8) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L218600.  v8:= temp;
  #L218602.  if v8 != v4 then goto L218610;
  #L218606.  call temp:= `a`(v0, v5) @signature `Le/e/a/b/f/e/g;.a:(Ljava/util/Queue;I)[B` @kind static;
  #L21860c.  v8:= temp @kind object;
  #L21860e.  return v8 @kind object;
  #L218610.  v8:= new `java.lang.OutOfMemoryError`;
  #L218614.  v0:= "input is too large to fit in a byte array" @kind object;
  #L218618.  call `<init>`(v8, v0) @signature `Ljava/lang/OutOfMemoryError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21861e.  throw v8;
}
procedure `byte`[] `a`(`java.util.Queue` v6 @kind object, `int` v7 ) @signature `Le/e/a/b/f/e/g;.a:(Ljava/util/Queue;I)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L218630.  v0:= new `byte`[v7];
  #L218634.  v1:= v7;
  #L218636.  if v1 <= 0 then goto L218660;
  #L21863a.  call temp:= `remove`(v6) @signature `Ljava/util/Queue;.remove:()Ljava/lang/Object;` @kind interface;
  #L218640.  v2:= temp @kind object;
  #L218642.  v2:= (`byte`[]) v2 @kind object;
  #L218646.  v3:= length @variable v2;
  #L218648.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L21864e.  v3:= temp;
  #L218650.  v4:= 0I;
  #L218652.  v5:= v7 - v1 @kind int;
  #L218656.  call `arraycopy`(v2, v4, v0, v5, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L21865c.  v1:= v1 - v3 @kind int;
  #L21865e.  goto L218636;
  #L218660.  return v0 @kind object;
}
