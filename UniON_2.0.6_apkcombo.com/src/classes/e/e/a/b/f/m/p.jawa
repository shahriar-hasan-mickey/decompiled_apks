record `e.e.a.b.f.m.p` @kind class @AccessFlag ABSTRACT extends `e.e.a.b.f.m.r` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Map` `e.e.a.b.f.m.p.d` @AccessFlag PRIVATE_TRANSIENT;
  `int` `e.e.a.b.f.m.p.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.m.p` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Le/e/a/b/f/m/p;.<init>:(Ljava/util/Map;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L2651ac.  call `<init>`(v1) @signature `Le/e/a/b/f/m/r;.<init>:()V` @kind direct;
  #L2651b2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2651b8.  v0:= temp;
  #L2651ba.  if v0 == 0 then goto L2651c4;
  #L2651be.  v1.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` := v2 @kind object;
  #L2651c2.  return @kind void;
  #L2651c4.  v2:= new `java.lang.IllegalArgumentException`;
  #L2651c8.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2651ce.  throw v2;
}
procedure `int` `a`(`e.e.a.b.f.m.p` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2650b4.  v0:= v1.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L2650b8.  v0:= v0 + v2 @kind int;
  #L2650ba.  v1.`e.e.a.b.f.m.p.e` @type ^`int` := v0;
  #L2650be.  return v0;
}
procedure `java.util.Map` `a`(`e.e.a.b.f.m.p` v0 @kind object) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L265174.  v0:= v0.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L265178.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.m.p` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/a/b/f/m/p;.a:(Le/e/a/b/f/m/p;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L265238.  v0:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L26523c.  v1:= 0I;
  #L26523e.  if v0 == 0 then goto L265270;
  #L265242.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L265248.  v1:= temp @kind object;
  #L26524a.  goto L26524e;
  #L26524c.  
  #L26524e.  v1:= (`java.util.Collection`) v1 @kind object;
  #L265252.  if v1 == 0 then goto L26526e;
  #L265256.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L26525c.  v3:= temp;
  #L26525e.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L265264.  v0:= v2.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L265268.  v0:= v0 - v3 @kind int;
  #L26526a.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v0;
  #L26526e.  return @kind void;
  #L265270.  throw v1;
  catch `java.lang.ClassCastException` @[L265242..L26524a] goto L26524c;
  catch `java.lang.NullPointerException` @[L265242..L26524a] goto L26524c;
}
procedure `int` `b`(`e.e.a.b.f.m.p` v2 @kind object) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L265074.  v0:= v2.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L265078.  v1:= v0 + -1;
  #L26507c.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v1;
  #L265080.  return v0;
}
procedure `int` `b`(`e.e.a.b.f.m.p` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/m/p;.b:(Le/e/a/b/f/m/p;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2650d0.  v0:= v1.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L2650d4.  v0:= v0 - v2 @kind int;
  #L2650d6.  v1.`e.e.a.b.f.m.p.e` @type ^`int` := v0;
  #L2650da.  return v0;
}
procedure `int` `c`(`e.e.a.b.f.m.p` v2 @kind object) @signature `Le/e/a/b/f/m/p;.c:(Le/e/a/b/f/m/p;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L265094.  v0:= v2.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L265098.  v1:= v0 + 1;
  #L26509c.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v1;
  #L2650a0.  return v0;
}
procedure `java.util.Collection` `a`(`java.lang.Object` v0 @kind object, `java.util.Collection` v1 @kind object) @signature `Le/e/a/b/f/m/p;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.List` `a`(`e.e.a.b.f.m.p` v1 @kind this, `java.lang.Object` v2 @kind object, `java.util.List` v3 @kind object, `e.e.a.b.f.m.m` v4 @kind object) @signature `Le/e/a/b/f/m/p;.a:(Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/m/m;)Ljava/util/List;` @AccessFlag FINAL {
    temp;
    v0;

  #L265124.  v0:= instanceof @variable v3 @type ^`java.util.RandomAccess` @kind boolean;
  #L265128.  if v0 == 0 then goto L265138;
  #L26512c.  v0:= new `e.e.a.b.f.m.k`;
  #L265130.  call `<init>`(v0, v1, v2, v3, v4) @signature `Le/e/a/b/f/m/k;.<init>:(Le/e/a/b/f/m/p;Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/m/m;)V` @kind direct;
  #L265136.  goto L265142;
  #L265138.  v0:= new `e.e.a.b.f.m.o`;
  #L26513c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Le/e/a/b/f/m/o;.<init>:(Le/e/a/b/f/m/p;Ljava/lang/Object;Ljava/util/List;Le/e/a/b/f/m/m;)V` @kind direct;
  #L265142.  return v0 @kind object;
}
procedure `java.util.Set` `a`(`e.e.a.b.f.m.p` v2 @kind this) @signature `Le/e/a/b/f/m/p;.a:()Ljava/util/Set;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L26518c.  v0:= new `e.e.a.b.f.m.j`;
  #L265190.  v1:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L265194.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/m/j;.<init>:(Le/e/a/b/f/m/p;Ljava/util/Map;)V` @kind direct;
  #L26519a.  return v0 @kind object;
}
procedure `boolean` `a`(`e.e.a.b.f.m.p` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/m/p;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L264ff8.  v0:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L264ffc.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L265002.  v0:= temp @kind object;
  #L265004.  v0:= (`java.util.Collection`) v0 @kind object;
  #L265008.  v1:= 1I;
  #L26500a.  if v0 != 0 then goto L265048;
  #L26500e.  call temp:= `e`(v2) @signature `Le/e/a/b/f/m/p;.e:()Ljava/util/Collection;` @kind virtual;
  #L265014.  v0:= temp @kind object;
  #L265016.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26501c.  v4:= temp;
  #L26501e.  if v4 == 0 then goto L265038;
  #L265022.  v4:= v2.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L265026.  v4:= v4 + v1 @kind int;
  #L265028.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v4;
  #L26502c.  v4:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L265030.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L265036.  return v1;
  #L265038.  v3:= new `java.lang.AssertionError`;
  #L26503c.  v4:= "New Collection violated the Collection spec" @kind object;
  #L265040.  call `<init>`(v3, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L265046.  throw v3;
  #L265048.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26504e.  v3:= temp;
  #L265050.  if v3 == 0 then goto L265060;
  #L265054.  v3:= v2.`e.e.a.b.f.m.p.e` @type ^`int`;
  #L265058.  v3:= v3 + v1 @kind int;
  #L26505a.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v3;
  #L26505e.  return v1;
  #L265060.  v3:= 0I;
  #L265062.  return v3;
}
procedure `java.util.Collection` `b`(`e.e.a.b.f.m.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/m/p;.b:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2650ec.  v0:= v1.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L2650f0.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2650f6.  v0:= temp @kind object;
  #L2650f8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2650fc.  if v0 != 0 then goto L265108;
  #L265100.  call temp:= `e`(v1) @signature `Le/e/a/b/f/m/p;.e:()Ljava/util/Collection;` @kind virtual;
  #L265106.  v0:= temp @kind object;
  #L265108.  call temp:= `a`(v1, v2, v0) @signature `Le/e/a/b/f/m/p;.a:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L26510e.  v2:= temp @kind object;
  #L265110.  return v2 @kind object;
}
procedure `java.util.Map` `b`(`e.e.a.b.f.m.p` v2 @kind this) @signature `Le/e/a/b/f/m/p;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L265154.  v0:= new `e.e.a.b.f.m.h`;
  #L265158.  v1:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L26515c.  call `<init>`(v0, v2, v1) @signature `Le/e/a/b/f/m/h;.<init>:(Le/e/a/b/f/m/p;Ljava/util/Map;)V` @kind direct;
  #L265162.  return v0 @kind object;
}
procedure `java.util.Collection` `e`() @signature `Le/e/a/b/f/m/p;.e:()Ljava/util/Collection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `f`(`e.e.a.b.f.m.p` v2 @kind this) @signature `Le/e/a/b/f/m/p;.f:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2651e0.  v0:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L2651e4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2651ea.  v0:= temp @kind object;
  #L2651ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2651f2.  v0:= temp @kind object;
  #L2651f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2651fa.  v1:= temp;
  #L2651fc.  if v1 == 0 then goto L265214;
  #L265200.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L265206.  v1:= temp @kind object;
  #L265208.  v1:= (`java.util.Collection`) v1 @kind object;
  #L26520c.  call `clear`(v1) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L265212.  goto L2651f4;
  #L265214.  v0:= v2.`e.e.a.b.f.m.p.d` @type ^`java.util.Map` @kind object;
  #L265218.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L26521e.  v0:= 0I;
  #L265220.  v2.`e.e.a.b.f.m.p.e` @type ^`int` := v0;
  #L265224.  return @kind void;
}
