record `e.e.a.b.f.l.k7` @kind class @AccessFlag  extends `e.e.a.b.f.l.l7` @kind class {
  `java.lang.Object`[] `e.e.a.b.f.l.k7.a` @AccessFlag ;
  `int` `e.e.a.b.f.l.k7.b` @AccessFlag ;
  `boolean` `e.e.a.b.f.l.k7.c` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.a.b.f.l.k7` v0 @kind this, `int` v1 ) @signature `Le/e/a/b/f/l/k7;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2628c4.  call `<init>`(v0) @signature `Le/e/a/b/f/l/l7;.<init>:()V` @kind direct;
  #L2628ca.  v1:= 4I;
  #L2628cc.  v1:= new `java.lang.Object`[v1];
  #L2628d0.  v0.`e.e.a.b.f.l.k7.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2628d4.  v1:= 0I;
  #L2628d6.  v0.`e.e.a.b.f.l.k7.b` @type ^`int` := v1;
  #L2628da.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.l.k7` v4 @kind this, `int` v5 ) @signature `Le/e/a/b/f/l/k7;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2628ec.  v0:= v4.`e.e.a.b.f.l.k7.a` @type ^`java.lang.Object`[] @kind object;
  #L2628f0.  v1:= length @variable v0;
  #L2628f2.  v2:= 0I;
  #L2628f4.  if v1 >= v5 then goto L262932;
  #L2628f8.  v3:= v1 ^> 1;
  #L2628fc.  v1:= v1 + v3 @kind int;
  #L2628fe.  v1:= v1 + 1;
  #L262902.  if v1 >= v5 then goto L262916;
  #L262906.  v5:= v5 + -1;
  #L26290a.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L262910.  v5:= temp;
  #L262912.  v1:= v5 + v5 @kind int;
  #L262916.  if v1 >= 0 then goto L262920;
  #L26291a.  v1:= 2147483647I;
  #L262920.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L262926.  v5:= temp @kind object;
  #L262928.  v4.`e.e.a.b.f.l.k7.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L26292c.  v4.`e.e.a.b.f.l.k7.c` @type ^`boolean` := v2 @kind boolean;
  #L262930.  return @kind void;
  #L262932.  v5:= v4.`e.e.a.b.f.l.k7.c` @type ^`boolean` @kind boolean;
  #L262936.  if v5 == 0 then goto L26294c;
  #L26293a.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L262940.  v5:= temp @kind object;
  #L262942.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L262946.  v4.`e.e.a.b.f.l.k7.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L26294a.  goto L26292c;
  #L26294c.  return @kind void;
}
procedure `e.e.a.b.f.l.k7` `a`(`e.e.a.b.f.l.k7` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/b/f/l/k7;.a:(Ljava/lang/Object;)Le/e/a/b/f/l/k7;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L262888.  if v4 == 0 then goto L2628b0;
  #L26288c.  v0:= v3.`e.e.a.b.f.l.k7.b` @type ^`int`;
  #L262890.  v0:= v0 + 1;
  #L262894.  call `a`(v3, v0) @signature `Le/e/a/b/f/l/k7;.a:(I)V` @kind direct;
  #L26289a.  v0:= v3.`e.e.a.b.f.l.k7.a` @type ^`java.lang.Object`[] @kind object;
  #L26289e.  v1:= v3.`e.e.a.b.f.l.k7.b` @type ^`int`;
  #L2628a2.  v2:= v1 + 1;
  #L2628a6.  v3.`e.e.a.b.f.l.k7.b` @type ^`int` := v2;
  #L2628aa.  v0[v1]:= v4 @kind object;
  #L2628ae.  return v3 @kind object;
  #L2628b0.  v4:= 0I;
  #L2628b2.  throw v4;
}
