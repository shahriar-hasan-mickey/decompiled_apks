record `e.e.a.b.f.r.l1` @kind class @AccessFlag FINAL extends `e.e.a.b.f.r.o0` @kind class {
  `java.lang.Object` `e.e.a.b.f.r.l1.d` @AccessFlag FINAL_TRANSIENT;
  `int` `e.e.a.b.f.r.l1.e` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`e.e.a.b.f.r.l1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/e/a/b/f/r/l1;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30f140.  call `<init>`(v0) @signature `Le/e/a/b/f/r/o0;.<init>:()V` @kind direct;
  #L30f146.  if v1 == 0 then goto L30f150;
  #L30f14a.  v0.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` := v1 @kind object;
  #L30f14e.  return @kind void;
  #L30f150.  v1:= 0I;
  #L30f152.  throw v1;
}
procedure `void` `<init>`(`e.e.a.b.f.r.l1` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Le/e/a/b/f/r/l1;.<init>:(Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30f164.  call `<init>`(v0) @signature `Le/e/a/b/f/r/o0;.<init>:()V` @kind direct;
  #L30f16a.  v0.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` := v1 @kind object;
  #L30f16e.  v0.`e.e.a.b.f.r.l1.e` @type ^`int` := v2;
  #L30f172.  return @kind void;
}
procedure `int` `a`(`e.e.a.b.f.r.l1` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Le/e/a/b/f/r/l1;.a:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L30f0a0.  v3:= v1.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f0a4.  v0:= 0I;
  #L30f0a6.  v2[v0]:= v3 @kind object;
  #L30f0aa.  v2:= 1I;
  #L30f0ac.  return v2;
}
procedure `boolean` `contains`(`e.e.a.b.f.r.l1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/b/f/r/l1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30efe0.  v0:= v1.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30efe4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30efea.  v2:= temp;
  #L30efec.  return v2;
}
procedure `e.e.a.b.f.r.n0` `f`(`e.e.a.b.f.r.l1` v1 @kind this) @signature `Le/e/a/b/f/r/l1;.f:()Le/e/a/b/f/r/n0;` @AccessFlag FINAL {
    temp;
    v0;

  #L30f020.  v0:= v1.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f024.  call temp:= `a`(v0) @signature `Le/e/a/b/f/r/n0;.a:(Ljava/lang/Object;)Le/e/a/b/f/r/n0;` @kind static;
  #L30f02a.  v0:= temp @kind object;
  #L30f02c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.a.b.f.r.l1` v1 @kind this) @signature `Le/e/a/b/f/r/l1;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f060.  v0:= v1.`e.e.a.b.f.r.l1.e` @type ^`int`;
  #L30f064.  if v0 != 0 then goto L30f078;
  #L30f068.  v0:= v1.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f06c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30f072.  v0:= temp;
  #L30f074.  v1.`e.e.a.b.f.r.l1.e` @type ^`int` := v0;
  #L30f078.  return v0;
}
procedure `java.util.Iterator` `iterator`(`e.e.a.b.f.r.l1` v2 @kind this) @signature `Le/e/a/b/f/r/l1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L30f120.  v0:= v2.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f124.  v1:= new `e.e.a.b.f.r.p0`;
  #L30f128.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/r/p0;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L30f12e.  return v1 @kind object;
}
procedure `int` `size`(`e.e.a.b.f.r.l1` v1 @kind this) @signature `Le/e/a/b/f/r/l1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30f08c.  v0:= 1I;
  #L30f08e.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.b.f.r.l1` v3 @kind this) @signature `Le/e/a/b/f/r/l1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30f0c0.  v0:= v3.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f0c4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f0ca.  v0:= temp @kind object;
  #L30f0cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30f0d2.  v1:= temp @kind object;
  #L30f0d4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30f0da.  v1:= temp;
  #L30f0dc.  v2:= new `java.lang.StringBuilder`;
  #L30f0e0.  v1:= v1 + 2;
  #L30f0e4.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30f0ea.  v1:= 91I;
  #L30f0ee.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0f4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0fa.  v0:= 93I;
  #L30f0fe.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f104.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f10a.  v0:= temp @kind object;
  #L30f10c.  return v0 @kind object;
}
procedure `boolean` `v`(`e.e.a.b.f.r.l1` v1 @kind this) @signature `Le/e/a/b/f/r/l1;.v:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L30f000.  v0:= v1.`e.e.a.b.f.r.l1.e` @type ^`int`;
  #L30f004.  if v0 == 0 then goto L30f00c;
  #L30f008.  v0:= 1I;
  #L30f00a.  return v0;
  #L30f00c.  v0:= 0I;
  #L30f00e.  return v0;
}
procedure `e.e.a.b.f.r.o1` `zza`(`e.e.a.b.f.r.l1` v2 @kind this) @signature `Le/e/a/b/f/r/l1;.zza:()Le/e/a/b/f/r/o1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30f040.  v0:= v2.`e.e.a.b.f.r.l1.d` @type ^`java.lang.Object` @kind object;
  #L30f044.  v1:= new `e.e.a.b.f.r.p0`;
  #L30f048.  call `<init>`(v1, v0) @signature `Le/e/a/b/f/r/p0;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L30f04e.  return v1 @kind object;
}
