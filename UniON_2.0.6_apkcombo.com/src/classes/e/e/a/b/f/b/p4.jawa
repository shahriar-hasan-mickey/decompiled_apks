record `e.e.a.b.f.b.p4` @kind class @AccessFlag PUBLIC_FINAL {
  `java.nio.ByteBuffer` `e.e.a.b.f.b.p4.a` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.f.b.m0` `e.e.a.b.f.b.p4.b` @AccessFlag PRIVATE;
  `int` `e.e.a.b.f.b.p4.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.f.b.p4` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Le/e/a/b/f/b/p4;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L211c18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L211c1e.  v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L211c22.  v2:= v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211c26.  v0:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L211c2a.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L211c30.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.b.f.b.p4` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/p4;.<init>:([BII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L211bf8.  call temp:= `wrap`(v1, v2, v3) @signature `Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;` @kind static;
  #L211bfe.  v1:= temp @kind object;
  #L211c00.  call `<init>`(v0, v1) @signature `Le/e/a/b/f/b/p4;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L211c06.  return @kind void;
}
procedure `int` `a`(`java.lang.CharSequence` v8 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21186c.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L211872.  v0:= temp;
  #L211874.  v1:= 0I;
  #L211876.  v2:= 0I;
  #L211878.  if v2 >= v0 then goto L211892;
  #L21187c.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L211882.  v3:= temp;
  #L211884.  v4:= 128I;
  #L211888.  if v3 >= v4 then goto L211892;
  #L21188c.  v2:= v2 + 1;
  #L211890.  goto L211878;
  #L211892.  v3:= v0;
  #L211894.  if v2 >= v0 then goto L211944;
  #L211898.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L21189e.  v4:= temp;
  #L2118a0.  v5:= 2048I;
  #L2118a4.  if v4 >= v5 then goto L2118b8;
  #L2118a8.  v4:= v4 - 127;
  #L2118ac.  v4:= v4 ^>> 31;
  #L2118b0.  v3:= v3 + v4 @kind int;
  #L2118b2.  v2:= v2 + 1;
  #L2118b6.  goto L211894;
  #L2118b8.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2118be.  v4:= temp;
  #L2118c0.  if v2 >= v4 then goto L211942;
  #L2118c4.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2118ca.  v6:= temp;
  #L2118cc.  if v6 >= v5 then goto L2118dc;
  #L2118d0.  v6:= v6 - 127;
  #L2118d4.  v6:= v6 ^>> 31;
  #L2118d8.  v1:= v1 + v6 @kind int;
  #L2118da.  goto L21193c;
  #L2118dc.  v1:= v1 + 2;
  #L2118e0.  v7:= 55296I;
  #L2118e6.  if v7 > v6 then goto L21193c;
  #L2118ea.  v7:= 57343I;
  #L2118f0.  if v6 > v7 then goto L21193c;
  #L2118f4.  call temp:= `codePointAt`(v8, v2) @signature `Ljava/lang/Character;.codePointAt:(Ljava/lang/CharSequence;I)I` @kind static;
  #L2118fa.  v6:= temp;
  #L2118fc.  v7:= 65536I;
  #L211900.  if v6 < v7 then goto L21190a;
  #L211904.  v2:= v2 + 1;
  #L211908.  goto L21193c;
  #L21190a.  v8:= new `java.lang.IllegalArgumentException`;
  #L21190e.  v0:= 39I;
  #L211912.  v1:= new `java.lang.StringBuilder`;
  #L211916.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21191c.  v0:= "Unpaired surrogate at index " @kind object;
  #L211920.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L211926.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21192c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L211932.  v0:= temp @kind object;
  #L211934.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21193a.  throw v8;
  #L21193c.  v2:= v2 + 1;
  #L211940.  goto L2118c0;
  #L211942.  v3:= v3 + v1 @kind int;
  #L211944.  if v3 < v0 then goto L21194a;
  #L211948.  return v3;
  #L21194a.  v8:= new `java.lang.IllegalArgumentException`;
  #L21194e.  v0:= (`long`) v3 @kind i2l;
  #L211950.  v2:= 4294967296L;
  #L21195a.  v0:= v0 + v2 @kind long;
  #L21195c.  v2:= 54I;
  #L211960.  v3:= new `java.lang.StringBuilder`;
  #L211964.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21196a.  v2:= "UTF-8 length does not fit in int: " @kind object;
  #L21196e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L211974.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21197a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L211980.  v0:= temp @kind object;
  #L211982.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L211988.  throw v8;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L211a58.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L211a5e.  v1:= temp;
  #L211a60.  call temp:= `e`(v1) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211a66.  v0:= temp;
  #L211a68.  v0:= v0 + v1 @kind int;
  #L211a6a.  return v0;
}
procedure `e.e.a.b.f.b.p4` `a`(`byte`[] v2 @kind object) @signature `Le/e/a/b/f/b/p4;.a:([B)Le/e/a/b/f/b/p4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L21182c.  v0:= length @variable v2;
  #L21182e.  v1:= 0I;
  #L211830.  call temp:= `a`(v2, v1, v0) @signature `Le/e/a/b/f/b/p4;.a:([BII)Le/e/a/b/f/b/p4;` @kind static;
  #L211836.  v2:= temp @kind object;
  #L211838.  return v2 @kind object;
}
procedure `e.e.a.b.f.b.p4` `a`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/p4;.a:([BII)Le/e/a/b/f/b/p4;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L21184c.  v2:= new `e.e.a.b.f.b.p4`;
  #L211850.  v0:= 0I;
  #L211852.  call `<init>`(v2, v1, v0, v3) @signature `Le/e/a/b/f/b/p4;.<init>:([BII)V` @kind direct;
  #L211858.  return v2 @kind object;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v2 @kind this, `int` v3 ) @signature `Le/e/a/b/f/b/p4;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L211df4.  v3:= (`byte`) v3 @kind i2b;
  #L211df6.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211dfa.  call temp:= `hasRemaining`(v0) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L211e00.  v0:= temp;
  #L211e02.  if v0 == 0 then goto L211e12;
  #L211e06.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211e0a.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L211e10.  return @kind void;
  #L211e12.  v3:= new `e.e.a.b.f.b.q4`;
  #L211e16.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211e1a.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211e20.  v0:= temp;
  #L211e22.  v1:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211e26.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211e2c.  v1:= temp;
  #L211e2e.  call `<init>`(v3, v0, v1) @signature `Le/e/a/b/f/b/q4;.<init>:(II)V` @kind direct;
  #L211e34.  throw v3;
}
procedure `void` `a`(`java.lang.CharSequence` v14 @kind object, `java.nio.ByteBuffer` v15 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L211f2c.  call temp:= `isReadOnly`(v15) @signature `Ljava/nio/ByteBuffer;.isReadOnly:()Z` @kind virtual;
  #L211f32.  v0:= temp;
  #L211f34.  if v0 != 0 then goto L21228c;
  #L211f38.  call temp:= `hasArray`(v15) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L211f3e.  v0:= temp;
  #L211f40.  v1:= "Unpaired surrogate at index " @kind object;
  #L211f44.  v2:= 39I;
  #L211f48.  v3:= 57343I;
  #L211f4e.  v4:= 55296I;
  #L211f54.  v5:= 2048I;
  #L211f58.  v6:= 0I;
  #L211f5a.  v7:= 128I;
  #L211f5e.  if v0 == 0 then goto L21217a;
  #L211f62.  call temp:= `array`(v15) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L211f68.  v0:= temp @kind object;
  #L211f6a.  call temp:= `arrayOffset`(v15) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L211f70.  v8:= temp;
  #L211f72.  call temp:= `position`(v15) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211f78.  v9:= temp;
  #L211f7a.  v8:= v8 + v9 @kind int;
  #L211f7c.  call temp:= `remaining`(v15) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L211f82.  v9:= temp;
  #L211f84.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L211f8a.  v10:= temp;
  #L211f8c.  v9:= v9 + v8 @kind int;
  #L211f8e.  if v6 >= v10 then goto L211fb2;
  #L211f92.  v11:= v6 + v8 @kind int;
  #L211f96.  if v11 >= v9 then goto L211fb2;
  #L211f9a.  call temp:= `charAt`(v14, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L211fa0.  v12:= temp;
  #L211fa2.  if v12 >= v7 then goto L211fb2;
  #L211fa6.  v12:= (`byte`) v12 @kind i2b;
  #L211fa8.  v0[v11]:= v12 @kind byte;
  #L211fac.  v6:= v6 + 1;
  #L211fb0.  goto L211f8e;
  #L211fb2.  if v6 != v10 then goto L211fbc;
  #L211fb6.  v8:= v8 + v10 @kind int;
  #L211fb8.  goto L212154;
  #L211fbc.  v8:= v8 + v6 @kind int;
  #L211fbe.  if v6 >= v10 then goto L212154;
  #L211fc2.  call temp:= `charAt`(v14, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L211fc8.  v11:= temp;
  #L211fca.  if v11 >= v7 then goto L211fe2;
  #L211fce.  if v8 >= v9 then goto L211fe2;
  #L211fd2.  v12:= v8 + 1;
  #L211fd6.  v11:= (`byte`) v11 @kind i2b;
  #L211fd8.  v0[v8]:= v11 @kind byte;
  #L211fdc.  v8:= v12;
  #L211fde.  goto L2120da;
  #L211fe2.  if v11 >= v5 then goto L212012;
  #L211fe6.  v12:= v9 + -2;
  #L211fea.  if v8 > v12 then goto L212012;
  #L211fee.  v12:= v8 + 1;
  #L211ff2.  v13:= v11 ^>> 6;
  #L211ff6.  v13:= v13 ^| 960;
  #L211ffa.  v13:= (`byte`) v13 @kind i2b;
  #L211ffc.  v0[v8]:= v13 @kind byte;
  #L212000.  v8:= v12 + 1;
  #L212004.  v11:= v11 ^& 63;
  #L212008.  v11:= v11 ^| v7 @kind int;
  #L21200a.  v11:= (`byte`) v11 @kind i2b;
  #L21200c.  v0[v12]:= v11 @kind byte;
  #L212010.  goto L2120da;
  #L212012.  if v11 < v4 then goto L21201a;
  #L212016.  if v3 >= v11 then goto L21205a;
  #L21201a.  v12:= v9 + -3;
  #L21201e.  if v8 > v12 then goto L21205a;
  #L212022.  v12:= v8 + 1;
  #L212026.  v13:= v11 ^>> 12;
  #L21202a.  v13:= v13 ^| 480;
  #L21202e.  v13:= (`byte`) v13 @kind i2b;
  #L212030.  v0[v8]:= v13 @kind byte;
  #L212034.  v8:= v12 + 1;
  #L212038.  v13:= v11 ^>> 6;
  #L21203c.  v13:= v13 ^& 63;
  #L212040.  v13:= v13 ^| v7 @kind int;
  #L212042.  v13:= (`byte`) v13 @kind i2b;
  #L212044.  v0[v12]:= v13 @kind byte;
  #L212048.  v12:= v8 + 1;
  #L21204c.  v11:= v11 ^& 63;
  #L212050.  v11:= v11 ^| v7 @kind int;
  #L212052.  v11:= (`byte`) v11 @kind i2b;
  #L212054.  v0[v8]:= v11 @kind byte;
  #L212058.  goto L211fdc;
  #L21205a.  v12:= v9 + -4;
  #L21205e.  if v8 > v12 then goto L212112;
  #L212062.  v12:= v6 + 1;
  #L212066.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L21206c.  v13:= temp;
  #L21206e.  if v12 == v13 then goto L2120e4;
  #L212072.  call temp:= `charAt`(v14, v12) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L212078.  v6:= temp;
  #L21207a.  call temp:= `isSurrogatePair`(v11, v6) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L212080.  v13:= temp;
  #L212082.  if v13 == 0 then goto L2120e2;
  #L212086.  call temp:= `toCodePoint`(v11, v6) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L21208c.  v6:= temp;
  #L21208e.  v11:= v8 + 1;
  #L212092.  v13:= v6 ^>> 18;
  #L212096.  v13:= v13 ^| 240;
  #L21209a.  v13:= (`byte`) v13 @kind i2b;
  #L21209c.  v0[v8]:= v13 @kind byte;
  #L2120a0.  v8:= v11 + 1;
  #L2120a4.  v13:= v6 ^>> 12;
  #L2120a8.  v13:= v13 ^& 63;
  #L2120ac.  v13:= v13 ^| v7 @kind int;
  #L2120ae.  v13:= (`byte`) v13 @kind i2b;
  #L2120b0.  v0[v11]:= v13 @kind byte;
  #L2120b4.  v11:= v8 + 1;
  #L2120b8.  v13:= v6 ^>> 6;
  #L2120bc.  v13:= v13 ^& 63;
  #L2120c0.  v13:= v13 ^| v7 @kind int;
  #L2120c2.  v13:= (`byte`) v13 @kind i2b;
  #L2120c4.  v0[v8]:= v13 @kind byte;
  #L2120c8.  v8:= v11 + 1;
  #L2120cc.  v6:= v6 ^& 63;
  #L2120d0.  v6:= v6 ^| v7 @kind int;
  #L2120d2.  v6:= (`byte`) v6 @kind i2b;
  #L2120d4.  v0[v11]:= v6 @kind byte;
  #L2120d8.  v6:= v12;
  #L2120da.  v6:= v6 + 1;
  #L2120de.  goto L211fbe;
  #L2120e2.  v6:= v12;
  #L2120e4.  v14:= new `java.lang.IllegalArgumentException`;
  #L2120e8.  v6:= v6 + -1;
  #L2120ec.  v15:= new `java.lang.StringBuilder`;
  #L2120f0.  call `<init>`(v15, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2120f6.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2120fc.  call temp:= `append`(v15, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L212102.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L212108.  v15:= temp @kind object;
  #L21210a.  call `<init>`(v14, v15) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212110.  throw v14;
  #L212112.  v14:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L212116.  v15:= 37I;
  #L21211a.  v0:= new `java.lang.StringBuilder`;
  #L21211e.  call `<init>`(v0, v15) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L212124.  v15:= "Failed writing " @kind object;
  #L212128.  call temp:= `append`(v0, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21212e.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L212134.  v15:= " at index " @kind object;
  #L212138.  call temp:= `append`(v0, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21213e.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L212144.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21214a.  v15:= temp @kind object;
  #L21214c.  call `<init>`(v14, v15) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212152.  throw v14;
  #L212154.  call temp:= `arrayOffset`(v15) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L21215a.  v14:= temp;
  #L21215c.  v8:= v8 - v14 @kind int;
  #L21215e.  call temp:= `position`(v15, v8) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L212164.  return @kind void;
  #L212166.  v14:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L212168.  v15:= new `java.nio.BufferOverflowException`;
  #L21216c.  call `<init>`(v15) @signature `Ljava/nio/BufferOverflowException;.<init>:()V` @kind direct;
  #L212172.  call temp:= `initCause`(v15, v14) @signature `Ljava/nio/BufferOverflowException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L212178.  throw v15;
  #L21217a.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L212180.  v0:= temp;
  #L212182.  if v6 >= v0 then goto L21228a;
  #L212186.  call temp:= `charAt`(v14, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L21218c.  v8:= temp;
  #L21218e.  if v8 >= v7 then goto L21219e;
  #L212192.  v8:= (`byte`) v8 @kind i2b;
  #L212194.  call temp:= `put`(v15, v8) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L21219a.  goto L212282;
  #L21219e.  if v8 >= v5 then goto L2121ba;
  #L2121a2.  v9:= v8 ^>> 6;
  #L2121a6.  v9:= v9 ^| 960;
  #L2121aa.  v9:= (`byte`) v9 @kind i2b;
  #L2121ac.  call temp:= `put`(v15, v9) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2121b2.  v8:= v8 ^& 63;
  #L2121b6.  v8:= v8 ^| v7 @kind int;
  #L2121b8.  goto L212192;
  #L2121ba.  if v8 < v4 then goto L212266;
  #L2121be.  if v3 >= v8 then goto L2121c4;
  #L2121c2.  goto L212266;
  #L2121c4.  v9:= v6 + 1;
  #L2121c8.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2121ce.  v10:= temp;
  #L2121d0.  if v9 == v10 then goto L212238;
  #L2121d4.  call temp:= `charAt`(v14, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2121da.  v6:= temp;
  #L2121dc.  call temp:= `isSurrogatePair`(v8, v6) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2121e2.  v10:= temp;
  #L2121e4.  if v10 == 0 then goto L212236;
  #L2121e8.  call temp:= `toCodePoint`(v8, v6) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L2121ee.  v6:= temp;
  #L2121f0.  v8:= v6 ^>> 18;
  #L2121f4.  v8:= v8 ^| 240;
  #L2121f8.  v8:= (`byte`) v8 @kind i2b;
  #L2121fa.  call temp:= `put`(v15, v8) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212200.  v8:= v6 ^>> 12;
  #L212204.  v8:= v8 ^& 63;
  #L212208.  v8:= v8 ^| v7 @kind int;
  #L21220a.  v8:= (`byte`) v8 @kind i2b;
  #L21220c.  call temp:= `put`(v15, v8) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212212.  v8:= v6 ^>> 6;
  #L212216.  v8:= v8 ^& 63;
  #L21221a.  v8:= v8 ^| v7 @kind int;
  #L21221c.  v8:= (`byte`) v8 @kind i2b;
  #L21221e.  call temp:= `put`(v15, v8) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212224.  v6:= v6 ^& 63;
  #L212228.  v6:= v6 ^| v7 @kind int;
  #L21222a.  v6:= (`byte`) v6 @kind i2b;
  #L21222c.  call temp:= `put`(v15, v6) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212232.  v6:= v9;
  #L212234.  goto L212282;
  #L212236.  v6:= v9;
  #L212238.  v14:= new `java.lang.IllegalArgumentException`;
  #L21223c.  v6:= v6 + -1;
  #L212240.  v15:= new `java.lang.StringBuilder`;
  #L212244.  call `<init>`(v15, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L21224a.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L212250.  call temp:= `append`(v15, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L212256.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21225c.  v15:= temp @kind object;
  #L21225e.  call `<init>`(v14, v15) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L212264.  throw v14;
  #L212266.  v9:= v8 ^>> 12;
  #L21226a.  v9:= v9 ^| 480;
  #L21226e.  v9:= (`byte`) v9 @kind i2b;
  #L212270.  call temp:= `put`(v15, v9) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212276.  v9:= v8 ^>> 6;
  #L21227a.  v9:= v9 ^& 63;
  #L21227e.  v9:= v9 ^| v7 @kind int;
  #L212280.  goto L2121aa;
  #L212282.  v6:= v6 + 1;
  #L212286.  goto L212182;
  #L21228a.  return @kind void;
  #L21228c.  v14:= new `java.nio.ReadOnlyBufferException`;
  #L212290.  call `<init>`(v14) @signature `Ljava/nio/ReadOnlyBufferException;.<init>:()V` @kind direct;
  #L212296.  throw v14;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L211f62..L212164] goto L212166;
}
procedure `int` `b`(`int` v0 , `long` v1 ) @signature `Le/e/a/b/f/b/p4;.b:(IJ)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L211a14.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/p4;.c:(I)I` @kind static;
  #L211a1a.  v0:= temp;
  #L211a1c.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/p4;.c:(J)I` @kind static;
  #L211a22.  v1:= temp;
  #L211a24.  v0:= v0 + v1 @kind int;
  #L211a26.  return v0;
}
procedure `int` `b`(`int` v1 , `e.e.a.b.f.b.w4` v2 @kind object) @signature `Le/e/a/b/f/b/p4;.b:(ILe/e/a/b/f/b/w4;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2119c0.  call temp:= `c`(v1) @signature `Le/e/a/b/f/b/p4;.c:(I)I` @kind static;
  #L2119c6.  v1:= temp;
  #L2119c8.  call temp:= `c`(v2) @signature `Le/e/a/b/f/b/w4;.c:()I` @kind virtual;
  #L2119ce.  v2:= temp;
  #L2119d0.  call temp:= `e`(v2) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L2119d6.  v0:= temp;
  #L2119d8.  v0:= v0 + v2 @kind int;
  #L2119da.  v1:= v1 + v0 @kind int;
  #L2119dc.  return v1;
}
procedure `int` `b`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Le/e/a/b/f/b/p4;.b:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2119f0.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/p4;.c:(I)I` @kind static;
  #L2119f6.  v0:= temp;
  #L2119f8.  call temp:= `a`(v1) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/String;)I` @kind static;
  #L2119fe.  v1:= temp;
  #L211a00.  v0:= v0 + v1 @kind int;
  #L211a02.  return v0;
}
procedure `int` `b`(`int` v0 , `byte`[] v1 @kind object) @signature `Le/e/a/b/f/b/p4;.b:(I[B)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L21199c.  call temp:= `c`(v0) @signature `Le/e/a/b/f/b/p4;.c:(I)I` @kind static;
  #L2119a2.  v0:= temp;
  #L2119a4.  call temp:= `b`(v1) @signature `Le/e/a/b/f/b/p4;.b:([B)I` @kind static;
  #L2119aa.  v1:= temp;
  #L2119ac.  v0:= v0 + v1 @kind int;
  #L2119ae.  return v0;
}
procedure `int` `b`(`byte`[] v1 @kind object) @signature `Le/e/a/b/f/b/p4;.b:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L211a38.  v0:= length @variable v1;
  #L211a3a.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211a40.  v0:= temp;
  #L211a42.  v1:= length @variable v1;
  #L211a44.  v0:= v0 + v1 @kind int;
  #L211a46.  return v0;
}
procedure `long` `b`(`long` v3 ) @signature `Le/e/a/b/f/b/p4;.b:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L211bd8.  v0:= 1I;
  #L211bda.  v0:= v3 ^< v0 @kind long;
  #L211bde.  v2:= 63I;
  #L211be2.  v3:= v3 ^> v2 @kind long;
  #L211be4.  v3:= v3 ^~ v0 @kind long;
  #L211be6.  return v3 @kind wide;
}
procedure `void` `b`(`e.e.a.b.f.b.p4` v1 @kind this, `int` v2 ) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L211e48.  v0:= v2 ^& -128;
  #L211e4c.  if v0 != 0 then goto L211e58;
  #L211e50.  call `a`(v1, v2) @signature `Le/e/a/b/f/b/p4;.a:(I)V` @kind direct;
  #L211e56.  return @kind void;
  #L211e58.  v0:= v2 ^& 127;
  #L211e5c.  v0:= v0 ^| 128;
  #L211e60.  call `a`(v1, v0) @signature `Le/e/a/b/f/b/p4;.a:(I)V` @kind direct;
  #L211e66.  v2:= v2 ^>> 7;
  #L211e6a.  goto L211e48;
}
procedure `int` `c`(`int` v0 ) @signature `Le/e/a/b/f/b/p4;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L211b4c.  v0:= v0 ^< 3;
  #L211b50.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211b56.  v0:= temp;
  #L211b58.  return v0;
}
procedure `int` `c`(`long` v5 ) @signature `Le/e/a/b/f/b/p4;.c:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L211a7c.  v0:= -128L;
  #L211a80.  v0:= v0 ^& v5 @kind long;
  #L211a82.  v2:= 0L;
  #L211a86.  v4:= lcmp(v0, v2);
  #L211a8a.  if v4 != 0 then goto L211a92;
  #L211a8e.  v5:= 1I;
  #L211a90.  return v5;
  #L211a92.  v0:= -16384L;
  #L211a96.  v0:= v0 ^& v5 @kind long;
  #L211a98.  v4:= lcmp(v0, v2);
  #L211a9c.  if v4 != 0 then goto L211aa4;
  #L211aa0.  v5:= 2I;
  #L211aa2.  return v5;
  #L211aa4.  v0:= -2097152L;
  #L211aaa.  v0:= v0 ^& v5 @kind long;
  #L211aac.  v4:= lcmp(v0, v2);
  #L211ab0.  if v4 != 0 then goto L211ab8;
  #L211ab4.  v5:= 3I;
  #L211ab6.  return v5;
  #L211ab8.  v0:= -268435456L;
  #L211abe.  v0:= v0 ^& v5 @kind long;
  #L211ac0.  v4:= lcmp(v0, v2);
  #L211ac4.  if v4 != 0 then goto L211acc;
  #L211ac8.  v5:= 4I;
  #L211aca.  return v5;
  #L211acc.  v0:= -34359738368L;
  #L211ad6.  v0:= v0 ^& v5 @kind long;
  #L211ad8.  v4:= lcmp(v0, v2);
  #L211adc.  if v4 != 0 then goto L211ae4;
  #L211ae0.  v5:= 5I;
  #L211ae2.  return v5;
  #L211ae4.  v0:= -4398046511104L;
  #L211aee.  v0:= v0 ^& v5 @kind long;
  #L211af0.  v4:= lcmp(v0, v2);
  #L211af4.  if v4 != 0 then goto L211afc;
  #L211af8.  v5:= 6I;
  #L211afa.  return v5;
  #L211afc.  v0:= -562949953421312L;
  #L211b00.  v0:= v0 ^& v5 @kind long;
  #L211b02.  v4:= lcmp(v0, v2);
  #L211b06.  if v4 != 0 then goto L211b0e;
  #L211b0a.  v5:= 7I;
  #L211b0c.  return v5;
  #L211b0e.  v0:= -72057594037927936L;
  #L211b12.  v0:= v0 ^& v5 @kind long;
  #L211b14.  v4:= lcmp(v0, v2);
  #L211b18.  if v4 != 0 then goto L211b22;
  #L211b1c.  v5:= 8I;
  #L211b20.  return v5;
  #L211b22.  v0:= -9223372036854775808L;
  #L211b26.  v5:= v5 ^& v0 @kind long;
  #L211b28.  v0:= lcmp(v5, v2);
  #L211b2c.  if v0 != 0 then goto L211b36;
  #L211b30.  v5:= 9I;
  #L211b34.  return v5;
  #L211b36.  v5:= 10I;
  #L211b3a.  return v5;
}
procedure `int` `d`(`int` v0 ) @signature `Le/e/a/b/f/b/p4;.d:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L211b6c.  if v0 < 0 then goto L211b7a;
  #L211b70.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211b76.  v0:= temp;
  #L211b78.  return v0;
  #L211b7a.  v0:= 10I;
  #L211b7e.  return v0;
}
procedure `int` `e`(`int` v1 ) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L211b90.  v0:= v1 ^& -128;
  #L211b94.  if v0 != 0 then goto L211b9c;
  #L211b98.  v1:= 1I;
  #L211b9a.  return v1;
  #L211b9c.  v0:= v1 ^& -16384;
  #L211ba0.  if v0 != 0 then goto L211ba8;
  #L211ba4.  v1:= 2I;
  #L211ba6.  return v1;
  #L211ba8.  v0:= -2097152I;
  #L211bac.  v0:= v0 ^& v1 @kind int;
  #L211bae.  if v0 != 0 then goto L211bb6;
  #L211bb2.  v1:= 3I;
  #L211bb4.  return v1;
  #L211bb6.  v0:= -268435456I;
  #L211bba.  v1:= v1 ^& v0 @kind int;
  #L211bbc.  if v1 != 0 then goto L211bc4;
  #L211bc0.  v1:= 4I;
  #L211bc2.  return v1;
  #L211bc4.  v1:= 5I;
  #L211bc6.  return v1;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v4 @kind this) @signature `Le/e/a/b/f/b/p4;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L212358.  v0:= v4.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L21235c.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L212362.  v0:= temp;
  #L212364.  if v0 != 0 then goto L21236a;
  #L212368.  return @kind void;
  #L21236a.  v0:= new `java.lang.IllegalStateException`;
  #L21236e.  v1:= 1I;
  #L212370.  v1:= new `java.lang.Object`[v1];
  #L212374.  v2:= 0I;
  #L212376.  v3:= v4.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L21237a.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L212380.  v3:= temp;
  #L212382.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L212388.  v3:= temp @kind object;
  #L21238a.  v1[v2]:= v3 @kind object;
  #L21238e.  v2:= "Did not write as much data as expected, %s bytes remaining." @kind object;
  #L212392.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L212398.  v1:= temp @kind object;
  #L21239a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2123a0.  throw v0;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v0 @kind this, `int` v1 , `int` v2 ) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L211edc.  v1:= v1 ^< 3;
  #L211ee0.  v1:= v1 ^| v2 @kind int;
  #L211ee2.  call `b`(v0, v1) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211ee8.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v1 @kind this, `int` v2 , `long` v3 ) @signature `Le/e/a/b/f/b/p4;.a:(IJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2123b4.  v0:= 0I;
  #L2123b6.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L2123bc.  call `a`(v1, v3) @signature `Le/e/a/b/f/b/p4;.a:(J)V` @kind virtual;
  #L2123c2.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v5 @kind this, `int` v6 , `e.e.a.b.f.b.k2` v7 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(ILe/e/a/b/f/b/k2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2122b8.  v0:= v5.`e.e.a.b.f.b.p4.b` @type ^`e.e.a.b.f.b.m0` @kind object;
  #L2122bc.  if v0 != 0 then goto L2122e2;
  #L2122c0.  v0:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2122c4.  call temp:= `a`(v0) @signature `Le/e/a/b/f/b/m0;.a:(Ljava/nio/ByteBuffer;)Le/e/a/b/f/b/m0;` @kind static;
  #L2122ca.  v0:= temp @kind object;
  #L2122cc.  v5.`e.e.a.b.f.b.p4.b` @type ^`e.e.a.b.f.b.m0` := v0 @kind object;
  #L2122d0.  v0:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2122d4.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2122da.  v0:= temp;
  #L2122dc.  v5.`e.e.a.b.f.b.p4.c` @type ^`int` := v0;
  #L2122e0.  goto L212324;
  #L2122e2.  v0:= v5.`e.e.a.b.f.b.p4.c` @type ^`int`;
  #L2122e6.  v1:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2122ea.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L2122f0.  v1:= temp;
  #L2122f2.  if v0 == v1 then goto L212324;
  #L2122f6.  v0:= v5.`e.e.a.b.f.b.p4.b` @type ^`e.e.a.b.f.b.m0` @kind object;
  #L2122fa.  v1:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2122fe.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L212304.  v1:= temp @kind object;
  #L212306.  v2:= v5.`e.e.a.b.f.b.p4.c` @type ^`int`;
  #L21230a.  v3:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L21230e.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L212314.  v3:= temp;
  #L212316.  v4:= v5.`e.e.a.b.f.b.p4.c` @type ^`int`;
  #L21231a.  v3:= v3 - v4 @kind int;
  #L21231c.  call `b`(v0, v1, v2, v3) @signature `Le/e/a/b/f/b/m0;.b:([BII)V` @kind virtual;
  #L212322.  goto L2122d0;
  #L212324.  v0:= v5.`e.e.a.b.f.b.p4.b` @type ^`e.e.a.b.f.b.m0` @kind object;
  #L212328.  call `a`(v0, v6, v7) @signature `Le/e/a/b/f/b/m0;.a:(ILe/e/a/b/f/b/k2;)V` @kind virtual;
  #L21232e.  call `a`(v0) @signature `Le/e/a/b/f/b/m0;.a:()V` @kind virtual;
  #L212334.  v6:= v5.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L212338.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L21233e.  v6:= temp;
  #L212340.  v5.`e.e.a.b.f.b.p4.c` @type ^`int` := v6;
  #L212344.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v1 @kind this, `int` v2 , `e.e.a.b.f.b.w4` v3 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(ILe/e/a/b/f/b/w4;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L211ca8.  v0:= 2I;
  #L211caa.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L211cb0.  v2:= v3.`e.e.a.b.f.b.w4.b` @type ^`int`;
  #L211cb4.  if v2 >= 0 then goto L211cbe;
  #L211cb8.  call temp:= `c`(v3) @signature `Le/e/a/b/f/b/w4;.c:()I` @kind virtual;
  #L211cbe.  v2:= v3.`e.e.a.b.f.b.w4.b` @type ^`int`;
  #L211cc2.  call `b`(v1, v2) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211cc8.  call `a`(v3, v1) @signature `Le/e/a/b/f/b/w4;.a:(Le/e/a/b/f/b/p4;)V` @kind virtual;
  #L211cce.  return @kind void;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v3 @kind this, `int` v4 , `java.lang.String` v5 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(ILjava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L211ce0.  v0:= 2I;
  #L211ce2.  call `a`(v3, v4, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L211ce8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L211cee.  v4:= temp;
  #L211cf0.  call temp:= `e`(v4) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211cf6.  v4:= temp;
  #L211cf8.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L211cfe.  v0:= temp;
  #L211d00.  v0:= v0 * 3;
  #L211d04.  call temp:= `e`(v0) @signature `Le/e/a/b/f/b/p4;.e:(I)I` @kind static;
  #L211d0a.  v0:= temp;
  #L211d0c.  if v4 != v0 then goto L211d8c;
  #L211d10.  v0:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d14.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211d1a.  v0:= temp;
  #L211d1c.  v1:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d20.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L211d26.  v1:= temp;
  #L211d28.  if v1 < v4 then goto L211d72;
  #L211d2c.  v1:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d30.  v2:= v0 + v4 @kind int;
  #L211d34.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L211d3a.  v1:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d3e.  call `a`(v5, v1) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L211d44.  v5:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d48.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211d4e.  v5:= temp;
  #L211d50.  v1:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d54.  call temp:= `position`(v1, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L211d5a.  v0:= v5 - v0 @kind int;
  #L211d5e.  v0:= v0 - v4 @kind int;
  #L211d60.  call `b`(v3, v0) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211d66.  v4:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d6a.  call temp:= `position`(v4, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L211d70.  return @kind void;
  #L211d72.  v5:= new `e.e.a.b.f.b.q4`;
  #L211d76.  v0:= v0 + v4 @kind int;
  #L211d78.  v4:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d7c.  call temp:= `limit`(v4) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211d82.  v4:= temp;
  #L211d84.  call `<init>`(v5, v0, v4) @signature `Le/e/a/b/f/b/q4;.<init>:(II)V` @kind direct;
  #L211d8a.  throw v5;
  #L211d8c.  call temp:= `a`(v5) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;)I` @kind static;
  #L211d92.  v4:= temp;
  #L211d94.  call `b`(v3, v4) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211d9a.  v4:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211d9e.  call `a`(v5, v4) @signature `Le/e/a/b/f/b/p4;.a:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V` @kind static;
  #L211da4.  return @kind void;
  #L211da6.  v4:= Exception @type ^`java.nio.BufferOverflowException` @kind object;
  #L211da8.  v5:= new `e.e.a.b.f.b.q4`;
  #L211dac.  v0:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211db0.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211db6.  v0:= temp;
  #L211db8.  v1:= v3.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211dbc.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211dc2.  v1:= temp;
  #L211dc4.  call `<init>`(v5, v0, v1) @signature `Le/e/a/b/f/b/q4;.<init>:(II)V` @kind direct;
  #L211dca.  call temp:= `initCause`(v5, v4) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L211dd0.  throw v5;
  catch `java.nio.BufferOverflowException` @[L211ce8..L211da4] goto L211da6;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Le/e/a/b/f/b/p4;.a:(IZ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L211e7c.  v2:= 25I;
  #L211e80.  v0:= 0I;
  #L211e82.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L211e88.  v2:= (`byte`) v3 @kind i2b;
  #L211e8a.  v3:= v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211e8e.  call temp:= `hasRemaining`(v3) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L211e94.  v3:= temp;
  #L211e96.  if v3 == 0 then goto L211ea6;
  #L211e9a.  v3:= v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211e9e.  call temp:= `put`(v3, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L211ea4.  return @kind void;
  #L211ea6.  v2:= new `e.e.a.b.f.b.q4`;
  #L211eaa.  v3:= v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211eae.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211eb4.  v3:= temp;
  #L211eb6.  v0:= v1.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211eba.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211ec0.  v0:= temp;
  #L211ec2.  call `<init>`(v2, v3, v0) @signature `Le/e/a/b/f/b/q4;.<init>:(II)V` @kind direct;
  #L211ec8.  throw v2;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v2 @kind this, `int` v3 , `byte`[] v4 @kind object) @signature `Le/e/a/b/f/b/p4;.a:(I[B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L211c44.  v0:= 2I;
  #L211c46.  call `a`(v2, v3, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L211c4c.  v3:= length @variable v4;
  #L211c4e.  call `b`(v2, v3) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211c54.  v3:= length @variable v4;
  #L211c56.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211c5a.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L211c60.  v0:= temp;
  #L211c62.  if v0 < v3 then goto L211c74;
  #L211c66.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211c6a.  v1:= 0I;
  #L211c6c.  call temp:= `put`(v0, v4, v1, v3) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L211c72.  return @kind void;
  #L211c74.  v3:= new `e.e.a.b.f.b.q4`;
  #L211c78.  v4:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211c7c.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L211c82.  v4:= temp;
  #L211c84.  v0:= v2.`e.e.a.b.f.b.p4.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L211c88.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L211c8e.  v0:= temp;
  #L211c90.  call `<init>`(v3, v4, v0) @signature `Le/e/a/b/f/b/q4;.<init>:(II)V` @kind direct;
  #L211c96.  throw v3;
}
procedure `void` `a`(`e.e.a.b.f.b.p4` v5 @kind this, `long` v6 ) @signature `Le/e/a/b/f/b/p4;.a:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2123d4.  v0:= -128L;
  #L2123d8.  v0:= v0 ^& v6 @kind long;
  #L2123da.  v2:= 0L;
  #L2123de.  v4:= lcmp(v0, v2);
  #L2123e2.  if v4 != 0 then goto L2123f0;
  #L2123e6.  v7:= (`int`) v6 @kind l2i;
  #L2123e8.  call `a`(v5, v7) @signature `Le/e/a/b/f/b/p4;.a:(I)V` @kind direct;
  #L2123ee.  return @kind void;
  #L2123f0.  v0:= (`int`) v6 @kind l2i;
  #L2123f2.  v0:= v0 ^& 127;
  #L2123f6.  v0:= v0 ^| 128;
  #L2123fa.  call `a`(v5, v0) @signature `Le/e/a/b/f/b/p4;.a:(I)V` @kind direct;
  #L212400.  v0:= 7I;
  #L212402.  v6:= v6 ^>> v0 @kind long;
  #L212404.  goto L2123d4;
}
procedure `void` `b`(`e.e.a.b.f.b.p4` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/e/a/b/f/b/p4;.b:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L211efc.  v0:= 0I;
  #L211efe.  call `a`(v1, v2, v0) @signature `Le/e/a/b/f/b/p4;.a:(II)V` @kind virtual;
  #L211f04.  if v3 < 0 then goto L211f10;
  #L211f08.  call `b`(v1, v3) @signature `Le/e/a/b/f/b/p4;.b:(I)V` @kind direct;
  #L211f0e.  return @kind void;
  #L211f10.  v2:= (`long`) v3 @kind i2l;
  #L211f12.  call `a`(v1, v2) @signature `Le/e/a/b/f/b/p4;.a:(J)V` @kind virtual;
  #L211f18.  return @kind void;
}
