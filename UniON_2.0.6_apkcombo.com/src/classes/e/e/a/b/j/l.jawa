record `e.e.a.b.j.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`e.e.a.b.j.l` v0 @kind this) @signature `Le/e/a/b/j/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34c734.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34c73a.  return @kind void;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v1 @kind this, `e.e.a.b.j.c` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Le/e/a/b/j/c;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c490.  v2:= new `java.lang.UnsupportedOperationException`;
  #L34c494.  v0:= "continueWith is not implemented" @kind object;
  #L34c498.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c49e.  throw v2;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v1 @kind this, `e.e.a.b.j.f` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Le/e/a/b/j/f;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c450.  v2:= new `java.lang.UnsupportedOperationException`;
  #L34c454.  v0:= "addOnCompleteListener is not implemented" @kind object;
  #L34c458.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c45e.  throw v2;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.g` v0 @kind object) @signature `Le/e/a/b/j/l;.a:(Le/e/a/b/j/g;)Le/e/a/b/j/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.h` v0 @kind object) @signature `Le/e/a/b/j/l;.a:(Le/e/a/b/j/h;)Le/e/a/b/j/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v1 @kind this, `e.e.a.b.j.k` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Le/e/a/b/j/k;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c4f0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L34c4f4.  v0:= "onSuccessTask is not implemented" @kind object;
  #L34c4f8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c4fe.  throw v2;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `e.e.a.b.j.c` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/c;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;

  #L34c4b0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L34c4b4.  v2:= "continueWith is not implemented" @kind object;
  #L34c4b8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c4be.  throw v1;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `e.e.a.b.j.e` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/e;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;

  #L34c430.  v1:= new `java.lang.UnsupportedOperationException`;
  #L34c434.  v2:= "addOnCanceledListener is not implemented" @kind object;
  #L34c438.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c43e.  throw v1;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `e.e.a.b.j.f` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/f;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;

  #L34c470.  v1:= new `java.lang.UnsupportedOperationException`;
  #L34c474.  v2:= "addOnCompleteListener is not implemented" @kind object;
  #L34c478.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c47e.  throw v1;
}
procedure `e.e.a.b.j.l` `a`(`java.util.concurrent.Executor` v0 @kind object, `e.e.a.b.j.g` v1 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/g;)Le/e/a/b/j/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.j.l` `a`(`java.util.concurrent.Executor` v0 @kind object, `e.e.a.b.j.h` v1 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/h;)Le/e/a/b/j/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.j.l` `a`(`e.e.a.b.j.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `e.e.a.b.j.k` v2 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/util/concurrent/Executor;Le/e/a/b/j/k;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;

  #L34c510.  v1:= new `java.lang.UnsupportedOperationException`;
  #L34c514.  v2:= "onSuccessTask is not implemented" @kind object;
  #L34c518.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c51e.  throw v1;
}
procedure `java.lang.Exception` `a`() @signature `Le/e/a/b/j/l;.a:()Ljava/lang/Exception;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `a`(`java.lang.Class` v0 @kind object) @signature `Le/e/a/b/j/l;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.j.l` `b`(`e.e.a.b.j.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `e.e.a.b.j.c` v2 @kind object) @signature `Le/e/a/b/j/l;.b:(Ljava/util/concurrent/Executor;Le/e/a/b/j/c;)Le/e/a/b/j/l;` @AccessFlag PUBLIC {
    temp;

  #L34c4d0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L34c4d4.  v2:= "continueWithTask is not implemented" @kind object;
  #L34c4d8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c4de.  throw v1;
}
procedure `java.lang.Object` `b`() @signature `Le/e/a/b/j/l;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`() @signature `Le/e/a/b/j/l;.c:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `d`() @signature `Le/e/a/b/j/l;.d:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`() @signature `Le/e/a/b/j/l;.e:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
