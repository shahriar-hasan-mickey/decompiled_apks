record `e.e.a.b.j.x` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `e.e.a.b.j.y` `e.e.a.b.j.x.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.a.b.j.x` v0 @kind this, `e.e.a.b.j.y` v1 @kind object) @signature `Le/e/a/b/j/x;.<init>:(Le/e/a/b/j/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L34cc10.  v0.`e.e.a.b.j.x.b` @type ^`e.e.a.b.j.y` := v1 @kind object;
  #L34cc14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34cc1a.  return @kind void;
}
procedure `void` `run`(`e.e.a.b.j.x` v2 @kind this) @signature `Le/e/a/b/j/x;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L34cc2c.  v0:= v2.`e.e.a.b.j.x.b` @type ^`e.e.a.b.j.y` @kind object;
  #L34cc30.  call temp:= `a`(v0) @signature `Le/e/a/b/j/y;.a:(Le/e/a/b/j/y;)Ljava/lang/Object;` @kind static;
  #L34cc36.  v0:= temp @kind object;
  #L34cc38.  @monitorenter v0
  #L34cc3a.  v1:= v2.`e.e.a.b.j.x.b` @type ^`e.e.a.b.j.y` @kind object;
  #L34cc3e.  call temp:= `b`(v1) @signature `Le/e/a/b/j/y;.b:(Le/e/a/b/j/y;)Le/e/a/b/j/e;` @kind static;
  #L34cc44.  v1:= temp @kind object;
  #L34cc46.  if v1 == 0 then goto L34cc5c;
  #L34cc4a.  v1:= v2.`e.e.a.b.j.x.b` @type ^`e.e.a.b.j.y` @kind object;
  #L34cc4e.  call temp:= `b`(v1) @signature `Le/e/a/b/j/y;.b:(Le/e/a/b/j/y;)Le/e/a/b/j/e;` @kind static;
  #L34cc54.  v1:= temp @kind object;
  #L34cc56.  call `a`(v1) @signature `Le/e/a/b/j/e;.a:()V` @kind interface;
  #L34cc5c.  @monitorexit v0
  #L34cc5e.  return @kind void;
  #L34cc60.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L34cc62.  @monitorexit v0
  #L34cc64.  throw v1;
  catch `java.lang.Throwable` @[L34cc3a..L34cc64] goto L34cc60;
}
