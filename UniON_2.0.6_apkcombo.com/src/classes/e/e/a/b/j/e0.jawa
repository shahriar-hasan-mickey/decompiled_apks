record `e.e.a.b.j.e0` @kind class @AccessFlag FINAL extends `e.e.a.b.j.h0` @kind interface {
  `java.util.concurrent.Executor` `e.e.a.b.j.e0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.b.j.e0.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.j.h` `e.e.a.b.j.e0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.b.j.e0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `e.e.a.b.j.h` v3 @kind object) @signature `Le/e/a/b/j/e0;.<init>:(Ljava/util/concurrent/Executor;Le/e/a/b/j/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L34d088.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34d08e.  v0:= new `java.lang.Object`;
  #L34d092.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34d098.  v1.`e.e.a.b.j.e0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L34d09c.  v1.`e.e.a.b.j.e0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L34d0a0.  v1.`e.e.a.b.j.e0.c` @type ^`e.e.a.b.j.h` := v3 @kind object;
  #L34d0a4.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.a.b.j.e0` v0 @kind object) @signature `Le/e/a/b/j/e0;.a:(Le/e/a/b/j/e0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L34d070.  v0:= v0.`e.e.a.b.j.e0.b` @type ^`java.lang.Object` @kind object;
  #L34d074.  return v0 @kind object;
}
procedure `e.e.a.b.j.h` `b`(`e.e.a.b.j.e0` v0 @kind object) @signature `Le/e/a/b/j/e0;.b:(Le/e/a/b/j/e0;)Le/e/a/b/j/h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L34d058.  v0:= v0.`e.e.a.b.j.e0.c` @type ^`e.e.a.b.j.h` @kind object;
  #L34d05c.  return v0 @kind object;
}
procedure `void` `a`(`e.e.a.b.j.e0` v2 @kind this, `e.e.a.b.j.l` v3 @kind object) @signature `Le/e/a/b/j/e0;.a:(Le/e/a/b/j/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L34d0b8.  call temp:= `e`(v3) @signature `Le/e/a/b/j/l;.e:()Z` @kind virtual;
  #L34d0be.  v0:= temp;
  #L34d0c0.  if v0 == 0 then goto L34d0f4;
  #L34d0c4.  v0:= v2.`e.e.a.b.j.e0.b` @type ^`java.lang.Object` @kind object;
  #L34d0c8.  @monitorenter v0
  #L34d0ca.  v1:= v2.`e.e.a.b.j.e0.c` @type ^`e.e.a.b.j.h` @kind object;
  #L34d0ce.  if v1 != 0 then goto L34d0d6;
  #L34d0d2.  @monitorexit v0
  #L34d0d4.  return @kind void;
  #L34d0d6.  @monitorexit v0
  #L34d0d8.  v0:= v2.`e.e.a.b.j.e0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L34d0dc.  v1:= new `e.e.a.b.j.d0`;
  #L34d0e0.  call `<init>`(v1, v2, v3) @signature `Le/e/a/b/j/d0;.<init>:(Le/e/a/b/j/e0;Le/e/a/b/j/l;)V` @kind direct;
  #L34d0e6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L34d0ec.  return @kind void;
  #L34d0ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L34d0f0.  @monitorexit v0
  #L34d0f2.  throw v3;
  #L34d0f4.  return @kind void;
  catch `java.lang.Throwable` @[L34d0ca..L34d0d8] goto L34d0ee;
  catch `java.lang.Throwable` @[L34d0f0..L34d0f2] goto L34d0ee;
}
