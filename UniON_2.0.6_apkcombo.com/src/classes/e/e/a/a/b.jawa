record `e.e.a.a.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `e.e.a.a.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/a/a/b;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1d6518.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d651e.  if v2 == 0 then goto L1d6528;
  #L1d6522.  v1.`e.e.a.a.b.a` @type ^`java.lang.String` := v2 @kind object;
  #L1d6526.  return @kind void;
  #L1d6528.  v2:= new `java.lang.NullPointerException`;
  #L1d652c.  v0:= "name is null" @kind object;
  #L1d6530.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6536.  throw v2;
}
procedure `e.e.a.a.b` `a`(`java.lang.String` v1 @kind object) @signature `Le/e/a/a/b;.a:(Ljava/lang/String;)Le/e/a/a/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6478.  v0:= new `e.e.a.a.b`;
  #L1d647c.  call `<init>`(v0, v1) @signature `Le/e/a/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6482.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`e.e.a.a.b` v1 @kind this) @signature `Le/e/a/a/b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d64bc.  v0:= v1.`e.e.a.a.b.a` @type ^`java.lang.String` @kind object;
  #L1d64c0.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.a.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/a/a/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d643c.  if v1 != v2 then goto L1d6444;
  #L1d6440.  v2:= 1I;
  #L1d6442.  return v2;
  #L1d6444.  v0:= instanceof @variable v2 @type ^`e.e.a.a.b` @kind boolean;
  #L1d6448.  if v0 != 0 then goto L1d6450;
  #L1d644c.  v2:= 0I;
  #L1d644e.  return v2;
  #L1d6450.  v0:= v1.`e.e.a.a.b.a` @type ^`java.lang.String` @kind object;
  #L1d6454.  v2:= (`e.e.a.a.b`) v2 @kind object;
  #L1d6458.  v2:= v2.`e.e.a.a.b.a` @type ^`java.lang.String` @kind object;
  #L1d645c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d6462.  v2:= temp;
  #L1d6464.  return v2;
}
procedure `int` `hashCode`(`e.e.a.a.b` v2 @kind this) @signature `Le/e/a/a/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d6494.  v0:= v2.`e.e.a.a.b.a` @type ^`java.lang.String` @kind object;
  #L1d6498.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1d649e.  v0:= temp;
  #L1d64a0.  v1:= 1000003I;
  #L1d64a6.  v0:= v0 ^~ v1 @kind int;
  #L1d64a8.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.a.b` v2 @kind this) @signature `Le/e/a/a/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d64d4.  v0:= new `java.lang.StringBuilder`;
  #L1d64d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d64de.  v1:= "Encoding{name=\"" @kind object;
  #L1d64e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d64e8.  v1:= v2.`e.e.a.a.b.a` @type ^`java.lang.String` @kind object;
  #L1d64ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d64f2.  v1:= "\"}" @kind object;
  #L1d64f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d64fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d6502.  v0:= temp @kind object;
  #L1d6504.  return v0 @kind object;
}
