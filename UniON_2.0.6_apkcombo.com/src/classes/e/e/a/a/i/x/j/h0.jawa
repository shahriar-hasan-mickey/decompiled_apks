record `e.e.a.a.i.x.j.h0` @kind class @AccessFlag FINAL extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `int` `e.e.a.a.i.x.j.h0.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.e.a.a.i.x.j.h0.c` @AccessFlag PRIVATE;
}
global `int` `@@e.e.a.a.i.x.j.h0.d` @AccessFlag STATIC;
global `e.e.a.a.i.x.j.h0$a` `@@e.e.a.a.i.x.j.h0.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.a.i.x.j.h0$a` `@@e.e.a.a.i.x.j.h0.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.a.i.x.j.h0$a` `@@e.e.a.a.i.x.j.h0.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.a.a.i.x.j.h0$a` `@@e.e.a.a.i.x.j.h0.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@e.e.a.a.i.x.j.h0.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/a/a/i/x/j/h0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1e15c4.  call temp:= `a`() @signature `Le/e/a/a/i/x/j/d0;.a:()Le/e/a/a/i/x/j/h0$a;` @kind static;
  #L1e15ca.  v0:= temp @kind object;
  #L1e15cc.  `@@e.e.a.a.i.x.j.h0.e` @type ^`e.e.a.a.i.x.j.h0$a` := v0 @kind object;
  #L1e15d0.  call temp:= `a`() @signature `Le/e/a/a/i/x/j/e0;.a:()Le/e/a/a/i/x/j/h0$a;` @kind static;
  #L1e15d6.  v0:= temp @kind object;
  #L1e15d8.  `@@e.e.a.a.i.x.j.h0.f` @type ^`e.e.a.a.i.x.j.h0$a` := v0 @kind object;
  #L1e15dc.  call temp:= `a`() @signature `Le/e/a/a/i/x/j/f0;.a:()Le/e/a/a/i/x/j/h0$a;` @kind static;
  #L1e15e2.  v0:= temp @kind object;
  #L1e15e4.  `@@e.e.a.a.i.x.j.h0.g` @type ^`e.e.a.a.i.x.j.h0$a` := v0 @kind object;
  #L1e15e8.  call temp:= `a`() @signature `Le/e/a/a/i/x/j/g0;.a:()Le/e/a/a/i/x/j/h0$a;` @kind static;
  #L1e15ee.  v0:= temp @kind object;
  #L1e15f0.  `@@e.e.a.a.i.x.j.h0.h` @type ^`e.e.a.a.i.x.j.h0$a` := v0 @kind object;
  #L1e15f4.  v0:= 4I;
  #L1e15f6.  v0:= new `e.e.a.a.i.x.j.h0$a`[v0];
  #L1e15fa.  v1:= `@@e.e.a.a.i.x.j.h0.e` @type ^`e.e.a.a.i.x.j.h0$a` @kind object;
  #L1e15fe.  v2:= 0I;
  #L1e1600.  v0[v2]:= v1 @kind object;
  #L1e1604.  v1:= `@@e.e.a.a.i.x.j.h0.f` @type ^`e.e.a.a.i.x.j.h0$a` @kind object;
  #L1e1608.  v2:= 1I;
  #L1e160a.  v0[v2]:= v1 @kind object;
  #L1e160e.  v1:= `@@e.e.a.a.i.x.j.h0.g` @type ^`e.e.a.a.i.x.j.h0$a` @kind object;
  #L1e1612.  v2:= 2I;
  #L1e1614.  v0[v2]:= v1 @kind object;
  #L1e1618.  v1:= `@@e.e.a.a.i.x.j.h0.h` @type ^`e.e.a.a.i.x.j.h0$a` @kind object;
  #L1e161c.  v2:= 3I;
  #L1e161e.  v0[v2]:= v1 @kind object;
  #L1e1622.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1e1628.  v0:= temp @kind object;
  #L1e162a.  `@@e.e.a.a.i.x.j.h0.i` @type ^`java.util.List` := v0 @kind object;
  #L1e162e.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.a.i.x.j.h0` v1 @kind this, `android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Le/e/a/a/i/x/j/h0;.<init>:(Landroid/content/Context;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1e1640.  v0:= 0I;
  #L1e1642.  call `<init>`(v1, v2, v3, v0, v4) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L1e1648.  v2:= 0I;
  #L1e164a.  v1.`e.e.a.a.i.x.j.h0.c` @type ^`boolean` := v2 @kind boolean;
  #L1e164e.  v1.`e.e.a.a.i.x.j.h0.b` @type ^`int` := v4;
  #L1e1652.  return @kind void;
}
procedure `void` `a`(`e.e.a.a.i.x.j.h0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e1664.  v0:= v1.`e.e.a.a.i.x.j.h0.c` @type ^`boolean` @kind boolean;
  #L1e1668.  if v0 != 0 then goto L1e1672;
  #L1e166c.  call `onConfigure`(v1, v2) @signature `Le/e/a/a/i/x/j/h0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind virtual;
  #L1e1672.  return @kind void;
}
procedure `void` `a`(`e.e.a.a.i.x.j.h0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 ) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1e17a4.  call `a`(v1, v2) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L1e17aa.  v0:= 0I;
  #L1e17ac.  call `a`(v1, v2, v0, v3) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L1e17b2.  return @kind void;
}
procedure `void` `a`(`e.e.a.a.i.x.j.h0` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object, `int` v4 , `int` v5 ) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1e183c.  v0:= `@@e.e.a.a.i.x.j.h0.i` @type ^`java.util.List` @kind object;
  #L1e1840.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1e1846.  v0:= temp;
  #L1e1848.  if v5 > v0 then goto L1e186e;
  #L1e184c.  if v4 >= v5 then goto L1e186c;
  #L1e1850.  v0:= `@@e.e.a.a.i.x.j.h0.i` @type ^`java.util.List` @kind object;
  #L1e1854.  call temp:= `get`(v0, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1e185a.  v0:= temp @kind object;
  #L1e185c.  v0:= (`e.e.a.a.i.x.j.h0$a`) v0 @kind object;
  #L1e1860.  call `a`(v0, v3) @signature `Le/e/a/a/i/x/j/h0$a;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind interface;
  #L1e1866.  v4:= v4 + 1;
  #L1e186a.  goto L1e184c;
  #L1e186c.  return @kind void;
  #L1e186e.  v3:= new `java.lang.IllegalArgumentException`;
  #L1e1872.  v0:= new `java.lang.StringBuilder`;
  #L1e1876.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e187c.  v1:= "Migration from " @kind object;
  #L1e1880.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1886.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e188c.  v4:= " to " @kind object;
  #L1e1890.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1896.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e189c.  v4:= " was requested, but cannot be performed. Only " @kind object;
  #L1e18a0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e18a6.  v4:= `@@e.e.a.a.i.x.j.h0.i` @type ^`java.util.List` @kind object;
  #L1e18aa.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1e18b0.  v4:= temp;
  #L1e18b2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e18b8.  v4:= " migrations are provided" @kind object;
  #L1e18bc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e18c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e18c8.  v4:= temp @kind object;
  #L1e18ca.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e18d0.  throw v3;
}
procedure `void` `b`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/e/a/a/i/x/j/h0;.b:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1e1684.  v0:= "CREATE TABLE events (_id INTEGER PRIMARY KEY, context_id INTEGER NOT NULL, transport_name TEXT NOT NULL, timestamp_ms INTEGER NOT NULL, uptime_ms INTEGER NOT NULL, payload BLOB NOT NULL, code INTEGER, num_attempts INTEGER NOT NULL,FOREIGN KEY (context_id) REFERENCES transport_contexts(_id) ON DELETE CASCADE)" @kind object;
  #L1e1688.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e168e.  v0:= "CREATE TABLE event_metadata (_id INTEGER PRIMARY KEY, event_id INTEGER NOT NULL, name TEXT NOT NULL, value TEXT NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE)" @kind object;
  #L1e1692.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e1698.  v0:= "CREATE TABLE transport_contexts (_id INTEGER PRIMARY KEY, backend_name TEXT NOT NULL, priority INTEGER NOT NULL, next_request_ms INTEGER NOT NULL)" @kind object;
  #L1e169c.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16a2.  v0:= "CREATE INDEX events_backend_id on events(context_id)" @kind object;
  #L1e16a6.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16ac.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority on transport_contexts(backend_name, priority)" @kind object;
  #L1e16b0.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16b6.  return @kind void;
}
procedure `void` `c`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/e/a/a/i/x/j/h0;.c:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1e16c8.  v0:= "ALTER TABLE transport_contexts ADD COLUMN extras BLOB" @kind object;
  #L1e16cc.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16d2.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority_extras on transport_contexts(backend_name, priority, extras)" @kind object;
  #L1e16d6.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16dc.  v0:= "DROP INDEX contexts_backend_priority" @kind object;
  #L1e16e0.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e16e6.  return @kind void;
}
procedure `void` `d`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/e/a/a/i/x/j/h0;.d:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1e16f8.  v0:= "ALTER TABLE events ADD COLUMN payload_encoding TEXT" @kind object;
  #L1e16fc.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e1702.  return @kind void;
}
procedure `void` `e`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/e/a/a/i/x/j/h0;.e:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1e1714.  v0:= "ALTER TABLE events ADD COLUMN inline BOOLEAN NOT NULL DEFAULT 1" @kind object;
  #L1e1718.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e171e.  v0:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L1e1722.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e1728.  v0:= "CREATE TABLE event_payloads (sequence_num INTEGER NOT NULL, event_id INTEGER NOT NULL, bytes BLOB NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE,PRIMARY KEY (sequence_num, event_id))" @kind object;
  #L1e172c.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e1732.  return @kind void;
}
procedure `void` `onConfigure`(`e.e.a.a.i.x.j.h0` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Le/e/a/a/i/x/j/h0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e1744.  v0:= 1I;
  #L1e1746.  v3.`e.e.a.a.i.x.j.h0.c` @type ^`boolean` := v0 @kind boolean;
  #L1e174a.  v1:= 0I;
  #L1e174c.  v1:= new `java.lang.String`[v1];
  #L1e1750.  v2:= "PRAGMA busy_timeout=0;" @kind object;
  #L1e1754.  call temp:= `rawQuery`(v4, v2, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L1e175a.  v1:= temp @kind object;
  #L1e175c.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1e1762.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1e1766.  v2:= 16I;
  #L1e176a.  if v1 < v2 then goto L1e1774;
  #L1e176e.  call `setForeignKeyConstraintsEnabled`(v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setForeignKeyConstraintsEnabled:(Z)V` @kind virtual;
  #L1e1774.  return @kind void;
}
procedure `void` `onCreate`(`e.e.a.a.i.x.j.h0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/e/a/a/i/x/j/h0;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e1788.  v0:= v1.`e.e.a.a.i.x.j.h0.b` @type ^`int`;
  #L1e178c.  call `a`(v1, v2, v0) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L1e1792.  return @kind void;
}
procedure `void` `onDowngrade`(`e.e.a.a.i.x.j.h0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/a/i/x/j/h0;.onDowngrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L1e17c4.  v2:= "DROP TABLE events" @kind object;
  #L1e17c8.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e17ce.  v2:= "DROP TABLE event_metadata" @kind object;
  #L1e17d2.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e17d8.  v2:= "DROP TABLE transport_contexts" @kind object;
  #L1e17dc.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e17e2.  v2:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L1e17e6.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1e17ec.  call `a`(v0, v1, v3) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L1e17f2.  return @kind void;
}
procedure `void` `onOpen`(`e.e.a.a.i.x.j.h0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/e/a/a/i/x/j/h0;.onOpen:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;

  #L1e1804.  call `a`(v0, v1) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L1e180a.  return @kind void;
}
procedure `void` `onUpgrade`(`e.e.a.a.i.x.j.h0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/a/a/i/x/j/h0;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L1e181c.  call `a`(v0, v1) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L1e1822.  call `a`(v0, v1, v2, v3) @signature `Le/e/a/a/i/x/j/h0;.a:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L1e1828.  return @kind void;
}
