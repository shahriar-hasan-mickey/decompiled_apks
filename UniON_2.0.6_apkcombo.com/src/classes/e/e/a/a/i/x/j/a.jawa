record `e.e.a.a.i.x.j.a` @kind class @AccessFlag FINAL extends `e.e.a.a.i.x.j.d` @kind class {
  `long` `e.e.a.a.i.x.j.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.a.i.x.j.a.c` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.a.i.x.j.a.d` @AccessFlag PRIVATE_FINAL;
  `long` `e.e.a.a.i.x.j.a.e` @AccessFlag PRIVATE_FINAL;
  `int` `e.e.a.a.i.x.j.a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.i.x.j.a` v0 @kind this, `long` v1 , `int` v3 , `int` v4 , `long` v5 , `int` v7 ) @signature `Le/e/a/a/i/x/j/a;.<init>:(JIIJI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1df3ac.  call `<init>`(v0) @signature `Le/e/a/a/i/x/j/d;.<init>:()V` @kind direct;
  #L1df3b2.  v0.`e.e.a.a.i.x.j.a.b` @type ^`long` := v1 @kind wide;
  #L1df3b6.  v0.`e.e.a.a.i.x.j.a.c` @type ^`int` := v3;
  #L1df3ba.  v0.`e.e.a.a.i.x.j.a.d` @type ^`int` := v4;
  #L1df3be.  v0.`e.e.a.a.i.x.j.a.e` @type ^`long` := v5 @kind wide;
  #L1df3c2.  v0.`e.e.a.a.i.x.j.a.f` @type ^`int` := v7;
  #L1df3c6.  return @kind void;
}
procedure `void` `<init>`(`e.e.a.a.i.x.j.a` v0 @kind this, `long` v1 , `int` v3 , `int` v4 , `long` v5 , `int` v7 , `e.e.a.a.i.x.j.a$a` v8 @kind object) @signature `Le/e/a/a/i/x/j/a;.<init>:(JIIJILe/e/a/a/i/x/j/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1df3d8.  call `<init>`(v0, v1, v3, v4, v5, v7) @signature `Le/e/a/a/i/x/j/a;.<init>:(JIIJI)V` @kind direct;
  #L1df3de.  return @kind void;
}
procedure `int` `a`(`e.e.a.a.i.x.j.a` v1 @kind this) @signature `Le/e/a/a/i/x/j/a;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L1df244.  v0:= v1.`e.e.a.a.i.x.j.a.d` @type ^`int`;
  #L1df248.  return v0;
}
procedure `long` `b`(`e.e.a.a.i.x.j.a` v2 @kind this) @signature `Le/e/a/a/i/x/j/a;.b:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1df37c.  v0:= v2.`e.e.a.a.i.x.j.a.e` @type ^`long` @kind wide;
  #L1df380.  return v0 @kind wide;
}
procedure `int` `c`(`e.e.a.a.i.x.j.a` v1 @kind this) @signature `Le/e/a/a/i/x/j/a;.c:()I` @AccessFlag  {
    temp;
    v0;

  #L1df25c.  v0:= v1.`e.e.a.a.i.x.j.a.c` @type ^`int`;
  #L1df260.  return v0;
}
procedure `int` `d`(`e.e.a.a.i.x.j.a` v1 @kind this) @signature `Le/e/a/a/i/x/j/a;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L1df274.  v0:= v1.`e.e.a.a.i.x.j.a.f` @type ^`int`;
  #L1df278.  return v0;
}
procedure `long` `e`(`e.e.a.a.i.x.j.a` v2 @kind this) @signature `Le/e/a/a/i/x/j/a;.e:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1df394.  v0:= v2.`e.e.a.a.i.x.j.a.b` @type ^`long` @kind wide;
  #L1df398.  return v0 @kind wide;
}
procedure `boolean` `equals`(`e.e.a.a.i.x.j.a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Le/e/a/a/i/x/j/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1df1bc.  v0:= 1I;
  #L1df1be.  if v8 != v7 then goto L1df1c4;
  #L1df1c2.  return v0;
  #L1df1c4.  v1:= instanceof @variable v8 @type ^`e.e.a.a.i.x.j.d` @kind boolean;
  #L1df1c8.  v2:= 0I;
  #L1df1ca.  if v1 == 0 then goto L1df230;
  #L1df1ce.  v8:= (`e.e.a.a.i.x.j.d`) v8 @kind object;
  #L1df1d2.  v3:= v7.`e.e.a.a.i.x.j.a.b` @type ^`long` @kind wide;
  #L1df1d6.  call temp:= `e`(v8) @signature `Le/e/a/a/i/x/j/d;.e:()J` @kind virtual;
  #L1df1dc.  v5:= temp @kind wide;
  #L1df1de.  v1:= lcmp(v3, v5);
  #L1df1e2.  if v1 != 0 then goto L1df22c;
  #L1df1e6.  v1:= v7.`e.e.a.a.i.x.j.a.c` @type ^`int`;
  #L1df1ea.  call temp:= `c`(v8) @signature `Le/e/a/a/i/x/j/d;.c:()I` @kind virtual;
  #L1df1f0.  v3:= temp;
  #L1df1f2.  if v1 != v3 then goto L1df22c;
  #L1df1f6.  v1:= v7.`e.e.a.a.i.x.j.a.d` @type ^`int`;
  #L1df1fa.  call temp:= `a`(v8) @signature `Le/e/a/a/i/x/j/d;.a:()I` @kind virtual;
  #L1df200.  v3:= temp;
  #L1df202.  if v1 != v3 then goto L1df22c;
  #L1df206.  v3:= v7.`e.e.a.a.i.x.j.a.e` @type ^`long` @kind wide;
  #L1df20a.  call temp:= `b`(v8) @signature `Le/e/a/a/i/x/j/d;.b:()J` @kind virtual;
  #L1df210.  v5:= temp @kind wide;
  #L1df212.  v1:= lcmp(v3, v5);
  #L1df216.  if v1 != 0 then goto L1df22c;
  #L1df21a.  v1:= v7.`e.e.a.a.i.x.j.a.f` @type ^`int`;
  #L1df21e.  call temp:= `d`(v8) @signature `Le/e/a/a/i/x/j/d;.d:()I` @kind virtual;
  #L1df224.  v8:= temp;
  #L1df226.  if v1 != v8 then goto L1df22c;
  #L1df22a.  goto L1df22e;
  #L1df22c.  v0:= 0I;
  #L1df22e.  return v0;
  #L1df230.  return v2;
}
procedure `int` `hashCode`(`e.e.a.a.i.x.j.a` v7 @kind this) @signature `Le/e/a/a/i/x/j/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1df28c.  v0:= v7.`e.e.a.a.i.x.j.a.b` @type ^`long` @kind wide;
  #L1df290.  v2:= 32I;
  #L1df294.  v3:= v0 ^>> v2 @kind long;
  #L1df298.  v0:= v0 ^~ v3 @kind long;
  #L1df29a.  v1:= (`int`) v0 @kind l2i;
  #L1df29c.  v0:= 1000003I;
  #L1df2a2.  v1:= v1 ^~ v0 @kind int;
  #L1df2a4.  v1:= v1 * v0 @kind int;
  #L1df2a8.  v3:= v7.`e.e.a.a.i.x.j.a.c` @type ^`int`;
  #L1df2ac.  v1:= v1 ^~ v3 @kind int;
  #L1df2ae.  v1:= v1 * v0 @kind int;
  #L1df2b2.  v3:= v7.`e.e.a.a.i.x.j.a.d` @type ^`int`;
  #L1df2b6.  v1:= v1 ^~ v3 @kind int;
  #L1df2b8.  v1:= v1 * v0 @kind int;
  #L1df2bc.  v3:= v7.`e.e.a.a.i.x.j.a.e` @type ^`long` @kind wide;
  #L1df2c0.  v5:= v3 ^>> v2 @kind long;
  #L1df2c4.  v2:= v5 ^~ v3 @kind long;
  #L1df2c8.  v3:= (`int`) v2 @kind l2i;
  #L1df2ca.  v1:= v1 ^~ v3 @kind int;
  #L1df2cc.  v1:= v1 * v0 @kind int;
  #L1df2d0.  v0:= v7.`e.e.a.a.i.x.j.a.f` @type ^`int`;
  #L1df2d4.  v0:= v0 ^~ v1 @kind int;
  #L1df2d6.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.a.i.x.j.a` v3 @kind this) @signature `Le/e/a/a/i/x/j/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1df2e8.  v0:= new `java.lang.StringBuilder`;
  #L1df2ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df2f2.  v1:= "EventStoreConfig{maxStorageSizeInBytes=" @kind object;
  #L1df2f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df2fc.  v1:= v3.`e.e.a.a.i.x.j.a.b` @type ^`long` @kind wide;
  #L1df300.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df306.  v1:= ", loadBatchSize=" @kind object;
  #L1df30a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df310.  v1:= v3.`e.e.a.a.i.x.j.a.c` @type ^`int`;
  #L1df314.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df31a.  v1:= ", criticalSectionEnterTimeoutMs=" @kind object;
  #L1df31e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df324.  v1:= v3.`e.e.a.a.i.x.j.a.d` @type ^`int`;
  #L1df328.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df32e.  v1:= ", eventCleanUpAge=" @kind object;
  #L1df332.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df338.  v1:= v3.`e.e.a.a.i.x.j.a.e` @type ^`long` @kind wide;
  #L1df33c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df342.  v1:= ", maxBlobByteSizePerRow=" @kind object;
  #L1df346.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df34c.  v1:= v3.`e.e.a.a.i.x.j.a.f` @type ^`int`;
  #L1df350.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df356.  v1:= "}" @kind object;
  #L1df35a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df360.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df366.  v0:= temp @kind object;
  #L1df368.  return v0 @kind object;
}
