record `e.e.a.a.i.a0.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `android.util.SparseArray` `@@e.e.a.a.i.a0.a.a` @AccessFlag PRIVATE_STATIC;
global `java.util.EnumMap` `@@e.e.a.a.i.a0.a.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/e/a/a/i/a0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e1be4.  v0:= new `android.util.SparseArray`;
  #L1e1be8.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L1e1bee.  `@@e.e.a.a.i.a0.a.a` @type ^`android.util.SparseArray` := v0 @kind object;
  #L1e1bf2.  v0:= new `java.util.EnumMap`;
  #L1e1bf6.  v1:= constclass @type ^`e.e.a.a.d` @kind object;
  #L1e1bfa.  call `<init>`(v0, v1) @signature `Ljava/util/EnumMap;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1e1c00.  `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` := v0 @kind object;
  #L1e1c04.  v0:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1c08.  v1:= `@@e.e.a.a.d.b` @type ^`e.e.a.a.d` @kind object;
  #L1e1c0c.  v2:= 0I;
  #L1e1c0e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1e1c14.  v2:= temp @kind object;
  #L1e1c16.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/EnumMap;.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e1c1c.  v0:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1c20.  v1:= `@@e.e.a.a.d.c` @type ^`e.e.a.a.d` @kind object;
  #L1e1c24.  v2:= 1I;
  #L1e1c26.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1e1c2c.  v2:= temp @kind object;
  #L1e1c2e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/EnumMap;.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e1c34.  v0:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1c38.  v1:= `@@e.e.a.a.d.d` @type ^`e.e.a.a.d` @kind object;
  #L1e1c3c.  v2:= 2I;
  #L1e1c3e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1e1c44.  v2:= temp @kind object;
  #L1e1c46.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/EnumMap;.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e1c4c.  v0:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1c50.  call temp:= `keySet`(v0) @signature `Ljava/util/EnumMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1e1c56.  v0:= temp @kind object;
  #L1e1c58.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e1c5e.  v0:= temp @kind object;
  #L1e1c60.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e1c66.  v1:= temp;
  #L1e1c68.  if v1 == 0 then goto L1e1c9c;
  #L1e1c6c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e1c72.  v1:= temp @kind object;
  #L1e1c74.  v1:= (`e.e.a.a.d`) v1 @kind object;
  #L1e1c78.  v2:= `@@e.e.a.a.i.a0.a.a` @type ^`android.util.SparseArray` @kind object;
  #L1e1c7c.  v3:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1c80.  call temp:= `get`(v3, v1) @signature `Ljava/util/EnumMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e1c86.  v3:= temp @kind object;
  #L1e1c88.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L1e1c8c.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1e1c92.  v3:= temp;
  #L1e1c94.  call `append`(v2, v3, v1) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L1e1c9a.  goto L1e1c60;
  #L1e1c9c.  return @kind void;
}
procedure `int` `a`(`e.e.a.a.d` v3 @kind object) @signature `Le/e/a/a/i/a0/a;.a:(Le/e/a/a/d;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1e1b88.  v0:= `@@e.e.a.a.i.a0.a.b` @type ^`java.util.EnumMap` @kind object;
  #L1e1b8c.  call temp:= `get`(v0, v3) @signature `Ljava/util/EnumMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e1b92.  v0:= temp @kind object;
  #L1e1b94.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1e1b98.  if v0 == 0 then goto L1e1ba6;
  #L1e1b9c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1e1ba2.  v3:= temp;
  #L1e1ba4.  return v3;
  #L1e1ba6.  v0:= new `java.lang.IllegalStateException`;
  #L1e1baa.  v1:= new `java.lang.StringBuilder`;
  #L1e1bae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e1bb4.  v2:= "PriorityMapping is missing known Priority value " @kind object;
  #L1e1bb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1bbe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1bc4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e1bca.  v3:= temp @kind object;
  #L1e1bcc.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e1bd2.  throw v0;
}
procedure `e.e.a.a.d` `a`(`int` v3 ) @signature `Le/e/a/a/i/a0/a;.a:(I)Le/e/a/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1e1b34.  v0:= `@@e.e.a.a.i.a0.a.a` @type ^`android.util.SparseArray` @kind object;
  #L1e1b38.  call temp:= `get`(v0, v3) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1e1b3e.  v0:= temp @kind object;
  #L1e1b40.  v0:= (`e.e.a.a.d`) v0 @kind object;
  #L1e1b44.  if v0 == 0 then goto L1e1b4a;
  #L1e1b48.  return v0 @kind object;
  #L1e1b4a.  v0:= new `java.lang.IllegalArgumentException`;
  #L1e1b4e.  v1:= new `java.lang.StringBuilder`;
  #L1e1b52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e1b58.  v2:= "Unknown Priority for value " @kind object;
  #L1e1b5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1b62.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1b68.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e1b6e.  v3:= temp @kind object;
  #L1e1b70.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e1b76.  throw v0;
}
