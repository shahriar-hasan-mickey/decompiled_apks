record `e.e.a.a.i.n` @kind class @AccessFlag FINAL extends `e.e.a.a.g` @kind interface {
  `java.util.Set` `e.e.a.a.i.n.a` @AccessFlag PRIVATE_FINAL;
  `e.e.a.a.i.m` `e.e.a.a.i.n.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.a.i.q` `e.e.a.a.i.n.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.i.n` v0 @kind this, `java.util.Set` v1 @kind object, `e.e.a.a.i.m` v2 @kind object, `e.e.a.a.i.q` v3 @kind object) @signature `Le/e/a/a/i/n;.<init>:(Ljava/util/Set;Le/e/a/a/i/m;Le/e/a/a/i/q;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dbbb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dbbba.  v0.`e.e.a.a.i.n.a` @type ^`java.util.Set` := v1 @kind object;
  #L1dbbbe.  v0.`e.e.a.a.i.n.b` @type ^`e.e.a.a.i.m` := v2 @kind object;
  #L1dbbc2.  v0.`e.e.a.a.i.n.c` @type ^`e.e.a.a.i.q` := v3 @kind object;
  #L1dbbc6.  return @kind void;
}
procedure `e.e.a.a.f` `a`(`e.e.a.a.i.n` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Class` v8 @kind object, `e.e.a.a.b` v9 @kind object, `e.e.a.a.e` v10 @kind object) @signature `Le/e/a/a/i/n;.a:(Ljava/lang/String;Ljava/lang/Class;Le/e/a/a/b;Le/e/a/a/e;)Le/e/a/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dbb48.  v8:= v6.`e.e.a.a.i.n.a` @type ^`java.util.Set` @kind object;
  #L1dbb4c.  call temp:= `contains`(v8, v9) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1dbb52.  v8:= temp;
  #L1dbb54.  if v8 == 0 then goto L1dbb74;
  #L1dbb58.  v8:= new `e.e.a.a.i.p`;
  #L1dbb5c.  v1:= v6.`e.e.a.a.i.n.b` @type ^`e.e.a.a.i.m` @kind object;
  #L1dbb60.  v5:= v6.`e.e.a.a.i.n.c` @type ^`e.e.a.a.i.q` @kind object;
  #L1dbb64.  v0:= v8 @kind object;
  #L1dbb66.  v2:= v7 @kind object;
  #L1dbb68.  v3:= v9 @kind object;
  #L1dbb6a.  v4:= v10 @kind object;
  #L1dbb6c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Le/e/a/a/i/p;.<init>:(Le/e/a/a/i/m;Ljava/lang/String;Le/e/a/a/b;Le/e/a/a/e;Le/e/a/a/i/q;)V` @kind direct;
  #L1dbb72.  return v8 @kind object;
  #L1dbb74.  v7:= new `java.lang.IllegalArgumentException`;
  #L1dbb78.  v8:= 2I;
  #L1dbb7a.  v8:= new `java.lang.Object`[v8];
  #L1dbb7e.  v10:= 0I;
  #L1dbb80.  v8[v10]:= v9 @kind object;
  #L1dbb84.  v9:= 1I;
  #L1dbb86.  v10:= v6.`e.e.a.a.i.n.a` @type ^`java.util.Set` @kind object;
  #L1dbb8a.  v8[v9]:= v10 @kind object;
  #L1dbb8e.  v9:= "%s is not supported byt this factory. Supported encodings are: %s." @kind object;
  #L1dbb92.  call temp:= `format`(v9, v8) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dbb98.  v8:= temp @kind object;
  #L1dbb9a.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dbba0.  throw v7;
}
