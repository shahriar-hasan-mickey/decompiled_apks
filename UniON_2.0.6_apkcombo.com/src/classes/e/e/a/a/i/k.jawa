record `e.e.a.a.i.k` @kind class @AccessFlag  extends `java.util.concurrent.Executor` @kind interface {
  `java.util.concurrent.Executor` `e.e.a.a.i.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.i.k` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Le/e/a/a/i/k;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1db97c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1db982.  v0.`e.e.a.a.i.k.b` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L1db986.  return @kind void;
}
procedure `void` `execute`(`e.e.a.a.i.k` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Le/e/a/a/i/k;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1db998.  v0:= v2.`e.e.a.a.i.k.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L1db99c.  v1:= new `e.e.a.a.i.k$a`;
  #L1db9a0.  call `<init>`(v1, v3) @signature `Le/e/a/a/i/k$a;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L1db9a6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1db9ac.  return @kind void;
}
