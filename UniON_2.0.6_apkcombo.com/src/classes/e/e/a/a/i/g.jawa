record `e.e.a.a.i.g` @kind class @AccessFlag PUBLIC_FINAL {
  `e.e.a.a.b` `e.e.a.a.i.g.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `e.e.a.a.i.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.i.g` v0 @kind this, `e.e.a.a.b` v1 @kind object, `byte`[] v2 @kind object) @signature `Le/e/a/a/i/g;.<init>:(Le/e/a/a/b;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1db5cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1db5d2.  if v1 == 0 then goto L1db5f4;
  #L1db5d6.  if v2 == 0 then goto L1db5e4;
  #L1db5da.  v0.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` := v1 @kind object;
  #L1db5de.  v0.`e.e.a.a.i.g.b` @type ^`byte`[] := v2 @kind object;
  #L1db5e2.  return @kind void;
  #L1db5e4.  v1:= new `java.lang.NullPointerException`;
  #L1db5e8.  v2:= "bytes is null" @kind object;
  #L1db5ec.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1db5f2.  throw v1;
  #L1db5f4.  v1:= new `java.lang.NullPointerException`;
  #L1db5f8.  v2:= "encoding is null" @kind object;
  #L1db5fc.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1db602.  throw v1;
}
procedure `byte`[] `a`(`e.e.a.a.i.g` v1 @kind this) @signature `Le/e/a/a/i/g;.a:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db520.  v0:= v1.`e.e.a.a.i.g.b` @type ^`byte`[] @kind object;
  #L1db524.  return v0 @kind object;
}
procedure `e.e.a.a.b` `b`(`e.e.a.a.i.g` v1 @kind this) @signature `Le/e/a/a/i/g;.b:()Le/e/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db538.  v0:= v1.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` @kind object;
  #L1db53c.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.a.i.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/a/a/i/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1db4d0.  if v3 != v4 then goto L1db4d8;
  #L1db4d4.  v4:= 1I;
  #L1db4d6.  return v4;
  #L1db4d8.  v0:= instanceof @variable v4 @type ^`e.e.a.a.i.g` @kind boolean;
  #L1db4dc.  v1:= 0I;
  #L1db4de.  if v0 != 0 then goto L1db4e4;
  #L1db4e2.  return v1;
  #L1db4e4.  v4:= (`e.e.a.a.i.g`) v4 @kind object;
  #L1db4e8.  v0:= v3.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` @kind object;
  #L1db4ec.  v2:= v4.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` @kind object;
  #L1db4f0.  call temp:= `equals`(v0, v2) @signature `Le/e/a/a/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1db4f6.  v0:= temp;
  #L1db4f8.  if v0 != 0 then goto L1db4fe;
  #L1db4fc.  return v1;
  #L1db4fe.  v0:= v3.`e.e.a.a.i.g.b` @type ^`byte`[] @kind object;
  #L1db502.  v4:= v4.`e.e.a.a.i.g.b` @type ^`byte`[] @kind object;
  #L1db506.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L1db50c.  v4:= temp;
  #L1db50e.  return v4;
}
procedure `int` `hashCode`(`e.e.a.a.i.g` v2 @kind this) @signature `Le/e/a/a/i/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1db550.  v0:= v2.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` @kind object;
  #L1db554.  call temp:= `hashCode`(v0) @signature `Le/e/a/a/b;.hashCode:()I` @kind virtual;
  #L1db55a.  v0:= temp;
  #L1db55c.  v1:= 1000003I;
  #L1db562.  v0:= v0 ^~ v1 @kind int;
  #L1db564.  v0:= v0 * v1 @kind int;
  #L1db568.  v1:= v2.`e.e.a.a.i.g.b` @type ^`byte`[] @kind object;
  #L1db56c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L1db572.  v1:= temp;
  #L1db574.  v0:= v0 ^~ v1 @kind int;
  #L1db576.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.a.i.g` v2 @kind this) @signature `Le/e/a/a/i/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1db588.  v0:= new `java.lang.StringBuilder`;
  #L1db58c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1db592.  v1:= "EncodedPayload{encoding=" @kind object;
  #L1db596.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db59c.  v1:= v2.`e.e.a.a.i.g.a` @type ^`e.e.a.a.b` @kind object;
  #L1db5a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db5a6.  v1:= ", bytes=[...]}" @kind object;
  #L1db5aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db5b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1db5b6.  v0:= temp @kind object;
  #L1db5b8.  return v0 @kind object;
}
