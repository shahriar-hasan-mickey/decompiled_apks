record `e.e.a.a.i.x.j.a$b` @kind class @AccessFlag FINAL extends `e.e.a.a.i.x.j.d$a` @kind class {
  `java.lang.Long` `e.e.a.a.i.x.j.a$b.a` @AccessFlag PRIVATE;
  `java.lang.Integer` `e.e.a.a.i.x.j.a$b.b` @AccessFlag PRIVATE;
  `java.lang.Integer` `e.e.a.a.i.x.j.a$b.c` @AccessFlag PRIVATE;
  `java.lang.Long` `e.e.a.a.i.x.j.a$b.d` @AccessFlag PRIVATE;
  `java.lang.Integer` `e.e.a.a.i.x.j.a$b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.a.i.x.j.a$b` v0 @kind this) @signature `Le/e/a/a/i/x/j/a$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1df1a4.  call `<init>`(v0) @signature `Le/e/a/a/i/x/j/d$a;.<init>:()V` @kind direct;
  #L1df1aa.  return @kind void;
}
procedure `e.e.a.a.i.x.j.d$a` `a`(`e.e.a.a.i.x.j.a$b` v0 @kind this, `int` v1 ) @signature `Le/e/a/a/i/x/j/a$b;.a:(I)Le/e/a/a/i/x/j/d$a;` @AccessFlag  {
    temp;

  #L1df104.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1df10a.  v1:= temp @kind object;
  #L1df10c.  v0.`e.e.a.a.i.x.j.a$b.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L1df110.  return v0 @kind object;
}
procedure `e.e.a.a.i.x.j.d$a` `a`(`e.e.a.a.i.x.j.a$b` v0 @kind this, `long` v1 ) @signature `Le/e/a/a/i/x/j/a$b;.a:(J)Le/e/a/a/i/x/j/d$a;` @AccessFlag  {
    temp;

  #L1df124.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1df12a.  v1:= temp @kind object;
  #L1df12c.  v0.`e.e.a.a.i.x.j.a$b.d` @type ^`java.lang.Long` := v1 @kind object;
  #L1df130.  return v0 @kind object;
}
procedure `e.e.a.a.i.x.j.d` `a`(`e.e.a.a.i.x.j.a$b` v11 @kind this) @signature `Le/e/a/a/i/x/j/a$b;.a:()Le/e/a/a/i/x/j/d;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1def98.  v0:= v11.`e.e.a.a.i.x.j.a$b.a` @type ^`java.lang.Long` @kind object;
  #L1def9c.  v1:= "" @kind object;
  #L1defa0.  if v0 != 0 then goto L1defc6;
  #L1defa4.  v0:= new `java.lang.StringBuilder`;
  #L1defa8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1defae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1defb4.  v1:= " maxStorageSizeInBytes" @kind object;
  #L1defb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1defbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1defc4.  v1:= temp @kind object;
  #L1defc6.  v0:= v11.`e.e.a.a.i.x.j.a$b.b` @type ^`java.lang.Integer` @kind object;
  #L1defca.  if v0 != 0 then goto L1deff0;
  #L1defce.  v0:= new `java.lang.StringBuilder`;
  #L1defd2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1defd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1defde.  v1:= " loadBatchSize" @kind object;
  #L1defe2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1defe8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1defee.  v1:= temp @kind object;
  #L1deff0.  v0:= v11.`e.e.a.a.i.x.j.a$b.c` @type ^`java.lang.Integer` @kind object;
  #L1deff4.  if v0 != 0 then goto L1df01a;
  #L1deff8.  v0:= new `java.lang.StringBuilder`;
  #L1deffc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df002.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df008.  v1:= " criticalSectionEnterTimeoutMs" @kind object;
  #L1df00c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df012.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df018.  v1:= temp @kind object;
  #L1df01a.  v0:= v11.`e.e.a.a.i.x.j.a$b.d` @type ^`java.lang.Long` @kind object;
  #L1df01e.  if v0 != 0 then goto L1df044;
  #L1df022.  v0:= new `java.lang.StringBuilder`;
  #L1df026.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df02c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df032.  v1:= " eventCleanUpAge" @kind object;
  #L1df036.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df03c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df042.  v1:= temp @kind object;
  #L1df044.  v0:= v11.`e.e.a.a.i.x.j.a$b.e` @type ^`java.lang.Integer` @kind object;
  #L1df048.  if v0 != 0 then goto L1df06e;
  #L1df04c.  v0:= new `java.lang.StringBuilder`;
  #L1df050.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df056.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df05c.  v1:= " maxBlobByteSizePerRow" @kind object;
  #L1df060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df066.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df06c.  v1:= temp @kind object;
  #L1df06e.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1df074.  v0:= temp;
  #L1df076.  if v0 == 0 then goto L1df0c6;
  #L1df07a.  v0:= new `e.e.a.a.i.x.j.a`;
  #L1df07e.  v1:= v11.`e.e.a.a.i.x.j.a$b.a` @type ^`java.lang.Long` @kind object;
  #L1df082.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1df088.  v3:= temp @kind wide;
  #L1df08a.  v1:= v11.`e.e.a.a.i.x.j.a$b.b` @type ^`java.lang.Integer` @kind object;
  #L1df08e.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1df094.  v5:= temp;
  #L1df096.  v1:= v11.`e.e.a.a.i.x.j.a$b.c` @type ^`java.lang.Integer` @kind object;
  #L1df09a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1df0a0.  v6:= temp;
  #L1df0a2.  v1:= v11.`e.e.a.a.i.x.j.a$b.d` @type ^`java.lang.Long` @kind object;
  #L1df0a6.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1df0ac.  v7:= temp @kind wide;
  #L1df0ae.  v1:= v11.`e.e.a.a.i.x.j.a$b.e` @type ^`java.lang.Integer` @kind object;
  #L1df0b2.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1df0b8.  v9:= temp;
  #L1df0ba.  v10:= 0I;
  #L1df0bc.  v2:= v0 @kind object;
  #L1df0be.  call `<init>`(v2, v3, v5, v6, v7, v9, v10) @signature `Le/e/a/a/i/x/j/a;.<init>:(JIIJILe/e/a/a/i/x/j/a$a;)V` @kind direct;
  #L1df0c4.  return v0 @kind object;
  #L1df0c6.  v0:= new `java.lang.IllegalStateException`;
  #L1df0ca.  v2:= new `java.lang.StringBuilder`;
  #L1df0ce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df0d4.  v3:= "Missing required properties:" @kind object;
  #L1df0d8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df0de.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df0e4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df0ea.  v1:= temp @kind object;
  #L1df0ec.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1df0f2.  throw v0;
}
procedure `e.e.a.a.i.x.j.d$a` `b`(`e.e.a.a.i.x.j.a$b` v0 @kind this, `int` v1 ) @signature `Le/e/a/a/i/x/j/a$b;.b:(I)Le/e/a/a/i/x/j/d$a;` @AccessFlag  {
    temp;

  #L1df144.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1df14a.  v1:= temp @kind object;
  #L1df14c.  v0.`e.e.a.a.i.x.j.a$b.b` @type ^`java.lang.Integer` := v1 @kind object;
  #L1df150.  return v0 @kind object;
}
procedure `e.e.a.a.i.x.j.d$a` `b`(`e.e.a.a.i.x.j.a$b` v0 @kind this, `long` v1 ) @signature `Le/e/a/a/i/x/j/a$b;.b:(J)Le/e/a/a/i/x/j/d$a;` @AccessFlag  {
    temp;

  #L1df184.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1df18a.  v1:= temp @kind object;
  #L1df18c.  v0.`e.e.a.a.i.x.j.a$b.a` @type ^`java.lang.Long` := v1 @kind object;
  #L1df190.  return v0 @kind object;
}
procedure `e.e.a.a.i.x.j.d$a` `c`(`e.e.a.a.i.x.j.a$b` v0 @kind this, `int` v1 ) @signature `Le/e/a/a/i/x/j/a$b;.c:(I)Le/e/a/a/i/x/j/d$a;` @AccessFlag  {
    temp;

  #L1df164.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1df16a.  v1:= temp @kind object;
  #L1df16c.  v0.`e.e.a.a.i.x.j.a$b.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L1df170.  return v0 @kind object;
}
