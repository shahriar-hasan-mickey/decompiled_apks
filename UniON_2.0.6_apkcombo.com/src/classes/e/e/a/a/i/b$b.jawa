record `e.e.a.a.i.b$b` @kind class @AccessFlag FINAL extends `e.e.a.a.i.l$a` @kind class {
  `e.e.a.a.i.m` `e.e.a.a.i.b$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.a.a.i.b$b.b` @AccessFlag PRIVATE;
  `e.e.a.a.c` `e.e.a.a.i.b$b.c` @AccessFlag PRIVATE;
  `e.e.a.a.e` `e.e.a.a.i.b$b.d` @AccessFlag PRIVATE;
  `e.e.a.a.b` `e.e.a.a.i.b$b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.a.a.i.b$b` v0 @kind this) @signature `Le/e/a/a/i/b$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dacf8.  call `<init>`(v0) @signature `Le/e/a/a/i/l$a;.<init>:()V` @kind direct;
  #L1dacfe.  return @kind void;
}
procedure `e.e.a.a.i.l$a` `a`(`e.e.a.a.i.b$b` v1 @kind this, `e.e.a.a.b` v2 @kind object) @signature `Le/e/a/a/i/b$b;.a:(Le/e/a/a/b;)Le/e/a/a/i/l$a;` @AccessFlag  {
    temp;
    v0;

  #L1dac1c.  if v2 == 0 then goto L1dac26;
  #L1dac20.  v1.`e.e.a.a.i.b$b.e` @type ^`e.e.a.a.b` := v2 @kind object;
  #L1dac24.  return v1 @kind object;
  #L1dac26.  v2:= new `java.lang.NullPointerException`;
  #L1dac2a.  v0:= "Null encoding" @kind object;
  #L1dac2e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dac34.  throw v2;
}
procedure `e.e.a.a.i.l$a` `a`(`e.e.a.a.i.b$b` v1 @kind this, `e.e.a.a.c` v2 @kind object) @signature `Le/e/a/a/i/b$b;.a:(Le/e/a/a/c;)Le/e/a/a/i/l$a;` @AccessFlag  {
    temp;
    v0;

  #L1dac48.  if v2 == 0 then goto L1dac52;
  #L1dac4c.  v1.`e.e.a.a.i.b$b.c` @type ^`e.e.a.a.c` := v2 @kind object;
  #L1dac50.  return v1 @kind object;
  #L1dac52.  v2:= new `java.lang.NullPointerException`;
  #L1dac56.  v0:= "Null event" @kind object;
  #L1dac5a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dac60.  throw v2;
}
procedure `e.e.a.a.i.l$a` `a`(`e.e.a.a.i.b$b` v1 @kind this, `e.e.a.a.e` v2 @kind object) @signature `Le/e/a/a/i/b$b;.a:(Le/e/a/a/e;)Le/e/a/a/i/l$a;` @AccessFlag  {
    temp;
    v0;

  #L1dac74.  if v2 == 0 then goto L1dac7e;
  #L1dac78.  v1.`e.e.a.a.i.b$b.d` @type ^`e.e.a.a.e` := v2 @kind object;
  #L1dac7c.  return v1 @kind object;
  #L1dac7e.  v2:= new `java.lang.NullPointerException`;
  #L1dac82.  v0:= "Null transformer" @kind object;
  #L1dac86.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dac8c.  throw v2;
}
procedure `e.e.a.a.i.l$a` `a`(`e.e.a.a.i.b$b` v1 @kind this, `e.e.a.a.i.m` v2 @kind object) @signature `Le/e/a/a/i/b$b;.a:(Le/e/a/a/i/m;)Le/e/a/a/i/l$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1daca0.  if v2 == 0 then goto L1dacaa;
  #L1daca4.  v1.`e.e.a.a.i.b$b.a` @type ^`e.e.a.a.i.m` := v2 @kind object;
  #L1daca8.  return v1 @kind object;
  #L1dacaa.  v2:= new `java.lang.NullPointerException`;
  #L1dacae.  v0:= "Null transportContext" @kind object;
  #L1dacb2.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dacb8.  throw v2;
}
procedure `e.e.a.a.i.l$a` `a`(`e.e.a.a.i.b$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/a/a/i/b$b;.a:(Ljava/lang/String;)Le/e/a/a/i/l$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1daccc.  if v2 == 0 then goto L1dacd6;
  #L1dacd0.  v1.`e.e.a.a.i.b$b.b` @type ^`java.lang.String` := v2 @kind object;
  #L1dacd4.  return v1 @kind object;
  #L1dacd6.  v2:= new `java.lang.NullPointerException`;
  #L1dacda.  v0:= "Null transportName" @kind object;
  #L1dacde.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dace4.  throw v2;
}
procedure `e.e.a.a.i.l` `a`(`e.e.a.a.i.b$b` v9 @kind this) @signature `Le/e/a/a/i/b$b;.a:()Le/e/a/a/i/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1daad8.  v0:= v9.`e.e.a.a.i.b$b.a` @type ^`e.e.a.a.i.m` @kind object;
  #L1daadc.  v1:= "" @kind object;
  #L1daae0.  if v0 != 0 then goto L1dab06;
  #L1daae4.  v0:= new `java.lang.StringBuilder`;
  #L1daae8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1daaee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1daaf4.  v1:= " transportContext" @kind object;
  #L1daaf8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1daafe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dab04.  v1:= temp @kind object;
  #L1dab06.  v0:= v9.`e.e.a.a.i.b$b.b` @type ^`java.lang.String` @kind object;
  #L1dab0a.  if v0 != 0 then goto L1dab30;
  #L1dab0e.  v0:= new `java.lang.StringBuilder`;
  #L1dab12.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dab18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab1e.  v1:= " transportName" @kind object;
  #L1dab22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dab2e.  v1:= temp @kind object;
  #L1dab30.  v0:= v9.`e.e.a.a.i.b$b.c` @type ^`e.e.a.a.c` @kind object;
  #L1dab34.  if v0 != 0 then goto L1dab5a;
  #L1dab38.  v0:= new `java.lang.StringBuilder`;
  #L1dab3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dab42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab48.  v1:= " event" @kind object;
  #L1dab4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dab58.  v1:= temp @kind object;
  #L1dab5a.  v0:= v9.`e.e.a.a.i.b$b.d` @type ^`e.e.a.a.e` @kind object;
  #L1dab5e.  if v0 != 0 then goto L1dab84;
  #L1dab62.  v0:= new `java.lang.StringBuilder`;
  #L1dab66.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dab6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab72.  v1:= " transformer" @kind object;
  #L1dab76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dab82.  v1:= temp @kind object;
  #L1dab84.  v0:= v9.`e.e.a.a.i.b$b.e` @type ^`e.e.a.a.b` @kind object;
  #L1dab88.  if v0 != 0 then goto L1dabae;
  #L1dab8c.  v0:= new `java.lang.StringBuilder`;
  #L1dab90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dab96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dab9c.  v1:= " encoding" @kind object;
  #L1daba0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1daba6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dabac.  v1:= temp @kind object;
  #L1dabae.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1dabb4.  v0:= temp;
  #L1dabb6.  if v0 == 0 then goto L1dabde;
  #L1dabba.  v0:= new `e.e.a.a.i.b`;
  #L1dabbe.  v3:= v9.`e.e.a.a.i.b$b.a` @type ^`e.e.a.a.i.m` @kind object;
  #L1dabc2.  v4:= v9.`e.e.a.a.i.b$b.b` @type ^`java.lang.String` @kind object;
  #L1dabc6.  v5:= v9.`e.e.a.a.i.b$b.c` @type ^`e.e.a.a.c` @kind object;
  #L1dabca.  v6:= v9.`e.e.a.a.i.b$b.d` @type ^`e.e.a.a.e` @kind object;
  #L1dabce.  v7:= v9.`e.e.a.a.i.b$b.e` @type ^`e.e.a.a.b` @kind object;
  #L1dabd2.  v8:= 0I;
  #L1dabd4.  v2:= v0 @kind object;
  #L1dabd6.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Le/e/a/a/i/b;.<init>:(Le/e/a/a/i/m;Ljava/lang/String;Le/e/a/a/c;Le/e/a/a/e;Le/e/a/a/b;Le/e/a/a/i/b$a;)V` @kind direct;
  #L1dabdc.  return v0 @kind object;
  #L1dabde.  v0:= new `java.lang.IllegalStateException`;
  #L1dabe2.  v2:= new `java.lang.StringBuilder`;
  #L1dabe6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dabec.  v3:= "Missing required properties:" @kind object;
  #L1dabf0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dabf6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dabfc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dac02.  v1:= temp @kind object;
  #L1dac04.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dac0a.  throw v0;
}
