record `e.e.a.a.a` @kind class @AccessFlag FINAL extends `e.e.a.a.c` @kind class {
  `java.lang.Integer` `e.e.a.a.a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `e.e.a.a.a.b` @AccessFlag PRIVATE_FINAL;
  `e.e.a.a.d` `e.e.a.a.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.a.a.a` v0 @kind this, `java.lang.Integer` v1 @kind object, `java.lang.Object` v2 @kind object, `e.e.a.a.d` v3 @kind object) @signature `Le/e/a/a/a;.<init>:(Ljava/lang/Integer;Ljava/lang/Object;Le/e/a/a/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d63f0.  call `<init>`(v0) @signature `Le/e/a/a/c;.<init>:()V` @kind direct;
  #L1d63f6.  v0.`e.e.a.a.a.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L1d63fa.  if v2 == 0 then goto L1d641c;
  #L1d63fe.  v0.`e.e.a.a.a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L1d6402.  if v3 == 0 then goto L1d640c;
  #L1d6406.  v0.`e.e.a.a.a.c` @type ^`e.e.a.a.d` := v3 @kind object;
  #L1d640a.  return @kind void;
  #L1d640c.  v1:= new `java.lang.NullPointerException`;
  #L1d6410.  v2:= "Null priority" @kind object;
  #L1d6414.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d641a.  throw v1;
  #L1d641c.  v1:= new `java.lang.NullPointerException`;
  #L1d6420.  v2:= "Null payload" @kind object;
  #L1d6424.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d642a.  throw v1;
}
procedure `java.lang.Integer` `a`(`e.e.a.a.a` v1 @kind this) @signature `Le/e/a/a/a;.a:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d6354.  v0:= v1.`e.e.a.a.a.a` @type ^`java.lang.Integer` @kind object;
  #L1d6358.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`e.e.a.a.a` v1 @kind this) @signature `Le/e/a/a/a;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d636c.  v0:= v1.`e.e.a.a.a.b` @type ^`java.lang.Object` @kind object;
  #L1d6370.  return v0 @kind object;
}
procedure `e.e.a.a.d` `c`(`e.e.a.a.a` v1 @kind this) @signature `Le/e/a/a/a;.c:()Le/e/a/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d62e8.  v0:= v1.`e.e.a.a.a.c` @type ^`e.e.a.a.d` @kind object;
  #L1d62ec.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.a.a.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/e/a/a/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d6260.  v0:= 1I;
  #L1d6262.  if v5 != v4 then goto L1d6268;
  #L1d6266.  return v0;
  #L1d6268.  v1:= instanceof @variable v5 @type ^`e.e.a.a.c` @kind boolean;
  #L1d626c.  v2:= 0I;
  #L1d626e.  if v1 == 0 then goto L1d62d6;
  #L1d6272.  v5:= (`e.e.a.a.c`) v5 @kind object;
  #L1d6276.  v1:= v4.`e.e.a.a.a.a` @type ^`java.lang.Integer` @kind object;
  #L1d627a.  if v1 != 0 then goto L1d628c;
  #L1d627e.  call temp:= `a`(v5) @signature `Le/e/a/a/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L1d6284.  v1:= temp @kind object;
  #L1d6286.  if v1 != 0 then goto L1d62d2;
  #L1d628a.  goto L1d62a0;
  #L1d628c.  call temp:= `a`(v5) @signature `Le/e/a/a/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L1d6292.  v3:= temp @kind object;
  #L1d6294.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d629a.  v1:= temp;
  #L1d629c.  if v1 == 0 then goto L1d62d2;
  #L1d62a0.  v1:= v4.`e.e.a.a.a.b` @type ^`java.lang.Object` @kind object;
  #L1d62a4.  call temp:= `b`(v5) @signature `Le/e/a/a/c;.b:()Ljava/lang/Object;` @kind virtual;
  #L1d62aa.  v3:= temp @kind object;
  #L1d62ac.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d62b2.  v1:= temp;
  #L1d62b4.  if v1 == 0 then goto L1d62d2;
  #L1d62b8.  v1:= v4.`e.e.a.a.a.c` @type ^`e.e.a.a.d` @kind object;
  #L1d62bc.  call temp:= `c`(v5) @signature `Le/e/a/a/c;.c:()Le/e/a/a/d;` @kind virtual;
  #L1d62c2.  v5:= temp @kind object;
  #L1d62c4.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d62ca.  v5:= temp;
  #L1d62cc.  if v5 == 0 then goto L1d62d2;
  #L1d62d0.  goto L1d62d4;
  #L1d62d2.  v0:= 0I;
  #L1d62d4.  return v0;
  #L1d62d6.  return v2;
}
procedure `int` `hashCode`(`e.e.a.a.a` v3 @kind this) @signature `Le/e/a/a/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d6300.  v0:= v3.`e.e.a.a.a.a` @type ^`java.lang.Integer` @kind object;
  #L1d6304.  if v0 != 0 then goto L1d630c;
  #L1d6308.  v0:= 0I;
  #L1d630a.  goto L1d6314;
  #L1d630c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L1d6312.  v0:= temp;
  #L1d6314.  v1:= 1000003I;
  #L1d631a.  v0:= v0 ^~ v1 @kind int;
  #L1d631c.  v0:= v0 * v1 @kind int;
  #L1d6320.  v2:= v3.`e.e.a.a.a.b` @type ^`java.lang.Object` @kind object;
  #L1d6324.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1d632a.  v2:= temp;
  #L1d632c.  v0:= v0 ^~ v2 @kind int;
  #L1d632e.  v0:= v0 * v1 @kind int;
  #L1d6332.  v1:= v3.`e.e.a.a.a.c` @type ^`e.e.a.a.d` @kind object;
  #L1d6336.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L1d633c.  v1:= temp;
  #L1d633e.  v0:= v0 ^~ v1 @kind int;
  #L1d6340.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.a.a.a` v2 @kind this) @signature `Le/e/a/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d6384.  v0:= new `java.lang.StringBuilder`;
  #L1d6388.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d638e.  v1:= "Event{code=" @kind object;
  #L1d6392.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d6398.  v1:= v2.`e.e.a.a.a.a` @type ^`java.lang.Integer` @kind object;
  #L1d639c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63a2.  v1:= ", payload=" @kind object;
  #L1d63a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63ac.  v1:= v2.`e.e.a.a.a.b` @type ^`java.lang.Object` @kind object;
  #L1d63b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63b6.  v1:= ", priority=" @kind object;
  #L1d63ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63c0.  v1:= v2.`e.e.a.a.a.c` @type ^`e.e.a.a.d` @kind object;
  #L1d63c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63ca.  v1:= "}" @kind object;
  #L1d63ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d63d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d63da.  v0:= temp @kind object;
  #L1d63dc.  return v0 @kind object;
}
