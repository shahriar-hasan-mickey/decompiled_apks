record `e.b.a.a.a.d$b` @kind class @AccessFlag  extends `e.e.a.b.j.h` @kind interface {
  `h.a.c.a.j$d` `e.b.a.a.a.d$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.b.a.a.a.d$b` v0 @kind this, `e.b.a.a.a.d` v1 @kind object, `h.a.c.a.j$d` v2 @kind object) @signature `Le/b/a/a/a/d$b;.<init>:(Le/b/a/a/a/d;Lh/a/c/a/j$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ce9c0.  v0.`e.b.a.a.a.d$b.a` @type ^`h.a.c.a.j$d` := v2 @kind object;
  #L1ce9c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ce9ca.  return @kind void;
}
procedure `void` `a`(`e.b.a.a.a.d$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Le/b/a/a/a/d$b;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1ce9dc.  v1:= (`java.util.List`) v1 @kind object;
  #L1ce9e0.  call `a`(v0, v1) @signature `Le/b/a/a/a/d$b;.a:(Ljava/util/List;)V` @kind virtual;
  #L1ce9e6.  return @kind void;
}
procedure `void` `a`(`e.b.a.a.a.d$b` v5 @kind this, `java.util.List` v6 @kind object) @signature `Le/b/a/a/a/d$b;.a:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ce9f8.  v0:= new `java.util.ArrayList`;
  #L1ce9fc.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1cea02.  v1:= temp;
  #L1cea04.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1cea0a.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1cea10.  v6:= temp @kind object;
  #L1cea12.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1cea18.  v1:= temp;
  #L1cea1a.  if v1 == 0 then goto L1cea84;
  #L1cea1e.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1cea24.  v1:= temp @kind object;
  #L1cea26.  v1:= (`e.e.e.b.d.a`) v1 @kind object;
  #L1cea2a.  v2:= new `java.util.HashMap`;
  #L1cea2e.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1cea34.  call temp:= `a`(v1) @signature `Le/e/e/b/d/a;.a:()F` @kind virtual;
  #L1cea3a.  v3:= temp;
  #L1cea3c.  v3:= (`double`) v3 @kind f2d;
  #L1cea3e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L1cea44.  v3:= temp @kind object;
  #L1cea46.  v4:= "confidence" @kind object;
  #L1cea4a.  call temp:= `put`(v2, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cea50.  call temp:= `b`(v1) @signature `Le/e/e/b/d/a;.b:()I` @kind virtual;
  #L1cea56.  v3:= temp;
  #L1cea58.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L1cea5e.  v3:= temp @kind object;
  #L1cea60.  v4:= "entityId" @kind object;
  #L1cea64.  call temp:= `put`(v2, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cea6a.  call temp:= `c`(v1) @signature `Le/e/e/b/d/a;.c:()Ljava/lang/String;` @kind virtual;
  #L1cea70.  v1:= temp @kind object;
  #L1cea72.  v3:= "text" @kind object;
  #L1cea76.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cea7c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1cea82.  goto L1cea12;
  #L1cea84.  v6:= v5.`e.b.a.a.a.d$b.a` @type ^`h.a.c.a.j$d` @kind object;
  #L1cea88.  call `a`(v6, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cea8e.  return @kind void;
}
