record `e.a.a.m.i` @kind class @AccessFlag PUBLIC extends `e.a.a.m.r` @kind interface {
  `h.a.c.a.j$d` `e.a.a.m.i.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.a.a.m.i` v0 @kind this, `h.a.c.a.j$d` v1 @kind object) @signature `Le/a/a/m/i;.<init>:(Lh/a/c/a/j$d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c97e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c97e6.  v0.`e.a.a.m.i.a` @type ^`h.a.c.a.j$d` := v1 @kind object;
  #L1c97ea.  return @kind void;
}
procedure `void` `a`(`e.a.a.m.i` v3 @kind this, `e.a.a.l.b` v4 @kind object) @signature `Le/a/a/m/i;.a:(Le/a/a/l/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c97fc.  v0:= v3.`e.a.a.m.i.a` @type ^`h.a.c.a.j$d` @kind object;
  #L1c9800.  call temp:= `toString`(v4) @signature `Le/a/a/l/b;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9806.  v1:= temp @kind object;
  #L1c9808.  call temp:= `b`(v4) @signature `Le/a/a/l/b;.b:()Ljava/lang/String;` @kind virtual;
  #L1c980e.  v4:= temp @kind object;
  #L1c9810.  v2:= 0I;
  #L1c9812.  call `a`(v0, v1, v4, v2) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1c9818.  return @kind void;
}
procedure `void` `a`(`e.a.a.m.i` v1 @kind this, `boolean` v2 ) @signature `Le/a/a/m/i;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c982c.  v0:= v1.`e.a.a.m.i.a` @type ^`h.a.c.a.j$d` @kind object;
  #L1c9830.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1c9836.  v2:= temp @kind object;
  #L1c9838.  call `a`(v0, v2) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1c983e.  return @kind void;
}
