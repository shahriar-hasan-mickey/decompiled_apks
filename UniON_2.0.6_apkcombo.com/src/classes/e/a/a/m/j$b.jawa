record `e.a.a.m.j$b` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@e.a.a.m.j$b.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/a/a/m/j$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c9998.  call temp:= `values`() @signature `Le/a/a/m/l;.values:()[Le/a/a/m/l;` @kind static;
  #L1c999e.  v0:= temp @kind object;
  #L1c99a0.  v0:= length @variable v0;
  #L1c99a2.  v0:= new `int`[v0];
  #L1c99a6.  `@@e.a.a.m.j$b.a` @type ^`int`[] := v0 @kind object;
  #L1c99aa.  v0:= `@@e.a.a.m.j$b.a` @type ^`int`[] @kind object;
  #L1c99ae.  v1:= `@@e.a.a.m.l.b` @type ^`e.a.a.m.l` @kind object;
  #L1c99b2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c99b8.  v1:= temp;
  #L1c99ba.  v2:= 1I;
  #L1c99bc.  v0[v1]:= v2;
  #L1c99c0.  v0:= `@@e.a.a.m.j$b.a` @type ^`int`[] @kind object;
  #L1c99c4.  v1:= `@@e.a.a.m.l.c` @type ^`e.a.a.m.l` @kind object;
  #L1c99c8.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c99ce.  v1:= temp;
  #L1c99d0.  v2:= 2I;
  #L1c99d2.  v0[v1]:= v2;
  #L1c99d6.  v0:= `@@e.a.a.m.j$b.a` @type ^`int`[] @kind object;
  #L1c99da.  v1:= `@@e.a.a.m.l.d` @type ^`e.a.a.m.l` @kind object;
  #L1c99de.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c99e4.  v1:= temp;
  #L1c99e6.  v2:= 3I;
  #L1c99e8.  v0[v1]:= v2;
  #L1c99ec.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L1c99aa..L1c99c0] goto L1c99c0;
  catch `java.lang.NoSuchFieldError` @[L1c99c0..L1c99d6] goto L1c99d6;
  catch `java.lang.NoSuchFieldError` @[L1c99d6..L1c99ec] goto L1c99ec;
}
