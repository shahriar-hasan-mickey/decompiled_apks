record `e.a.a.m.q` @kind class @AccessFlag PUBLIC {
  `e.a.a.m.l` `e.a.a.m.q.a` @AccessFlag PRIVATE;
  `long` `e.a.a.m.q.b` @AccessFlag PRIVATE;
  `long` `e.a.a.m.q.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.a.a.m.q` v0 @kind this, `e.a.a.m.l` v1 @kind object, `long` v2 , `long` v4 ) @signature `Le/a/a/m/q;.<init>:(Le/a/a/m/l;JJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1cab38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cab3e.  v0.`e.a.a.m.q.a` @type ^`e.a.a.m.l` := v1 @kind object;
  #L1cab42.  v0.`e.a.a.m.q.b` @type ^`long` := v2 @kind wide;
  #L1cab46.  v0.`e.a.a.m.q.c` @type ^`long` := v4 @kind wide;
  #L1cab4a.  return @kind void;
}
procedure `e.a.a.m.q` `a`(`java.util.Map` v8 @kind object) @signature `Le/a/a/m/q;.a:(Ljava/util/Map;)Le/a/a/m/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1caa5c.  v0:= "accuracy" @kind object;
  #L1caa60.  call temp:= `get`(v8, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1caa66.  v0:= temp @kind object;
  #L1caa68.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1caa6c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1caa72.  v0:= temp;
  #L1caa74.  v1:= "distanceFilter" @kind object;
  #L1caa78.  call temp:= `get`(v8, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1caa7e.  v1:= temp @kind object;
  #L1caa80.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L1caa84.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1caa8a.  v1:= temp;
  #L1caa8c.  v4:= (`long`) v1 @kind i2l;
  #L1caa8e.  v1:= "timeInterval" @kind object;
  #L1caa92.  call temp:= `get`(v8, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1caa98.  v8:= temp @kind object;
  #L1caa9a.  v8:= (`java.lang.Integer`) v8 @kind object;
  #L1caa9e.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1caaa4.  v8:= temp;
  #L1caaa6.  v6:= (`long`) v8 @kind i2l;
  #L1caaa8.  v8:= `@@e.a.a.m.l.f` @type ^`e.a.a.m.l` @kind object;
  #L1caaac.  if v0 == 0 then goto L1caae4;
  #L1caab0.  v1:= 1I;
  #L1caab2.  if v0 == v1 then goto L1caade;
  #L1caab6.  v1:= 2I;
  #L1caab8.  if v0 == v1 then goto L1caad8;
  #L1caabc.  v1:= 3I;
  #L1caabe.  if v0 == v1 then goto L1caad2;
  #L1caac2.  v1:= 5I;
  #L1caac4.  if v0 == v1 then goto L1caacc;
  #L1caac8.  v3:= v8 @kind object;
  #L1caaca.  goto L1caaea;
  #L1caacc.  v8:= `@@e.a.a.m.l.g` @type ^`e.a.a.m.l` @kind object;
  #L1caad0.  goto L1caac8;
  #L1caad2.  v8:= `@@e.a.a.m.l.e` @type ^`e.a.a.m.l` @kind object;
  #L1caad6.  goto L1caac8;
  #L1caad8.  v8:= `@@e.a.a.m.l.d` @type ^`e.a.a.m.l` @kind object;
  #L1caadc.  goto L1caac8;
  #L1caade.  v8:= `@@e.a.a.m.l.c` @type ^`e.a.a.m.l` @kind object;
  #L1caae2.  goto L1caac8;
  #L1caae4.  v8:= `@@e.a.a.m.l.b` @type ^`e.a.a.m.l` @kind object;
  #L1caae8.  goto L1caac8;
  #L1caaea.  v8:= new `e.a.a.m.q`;
  #L1caaee.  v2:= v8 @kind object;
  #L1caaf0.  call `<init>`(v2, v3, v4, v6) @signature `Le/a/a/m/q;.<init>:(Le/a/a/m/l;JJ)V` @kind direct;
  #L1caaf6.  return v8 @kind object;
}
procedure `e.a.a.m.l` `a`(`e.a.a.m.q` v1 @kind this) @signature `Le/a/a/m/q;.a:()Le/a/a/m/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1caa44.  v0:= v1.`e.a.a.m.q.a` @type ^`e.a.a.m.l` @kind object;
  #L1caa48.  return v0 @kind object;
}
procedure `long` `b`(`e.a.a.m.q` v2 @kind this) @signature `Le/a/a/m/q;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cab08.  v0:= v2.`e.a.a.m.q.b` @type ^`long` @kind wide;
  #L1cab0c.  return v0 @kind wide;
}
procedure `long` `c`(`e.a.a.m.q` v2 @kind this) @signature `Le/a/a/m/q;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cab20.  v0:= v2.`e.a.a.m.q.c` @type ^`long` @kind wide;
  #L1cab24.  return v0 @kind wide;
}
