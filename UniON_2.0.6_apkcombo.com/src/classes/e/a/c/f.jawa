record `e.a.c.f` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `e.a.c.r$f` @kind interface {
  `e.a.c.r` `e.a.c.f.a` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `e.a.c.r$f` `e.a.c.f.b` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.a.c.f` v0 @kind this, `e.a.c.r` v1 @kind object, `e.a.c.r$f` v2 @kind object) @signature `Le/a/c/f;.<init>:(Le/a/c/r;Le/a/c/r$f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1cbdcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cbdd2.  v0.`e.a.c.f.a` @type ^`e.a.c.r` := v1 @kind object;
  #L1cbdd6.  v0.`e.a.c.f.b` @type ^`e.a.c.r$f` := v2 @kind object;
  #L1cbdda.  return @kind void;
}
procedure `void` `a`(`e.a.c.f` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Le/a/c/f;.a:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1cbdec.  v0:= v2.`e.a.c.f.a` @type ^`e.a.c.r` @kind object;
  #L1cbdf0.  v1:= v2.`e.a.c.f.b` @type ^`e.a.c.r$f` @kind object;
  #L1cbdf4.  call `a`(v0, v1, v3) @signature `Le/a/c/r;.a:(Le/a/c/r$f;Ljava/util/Map;)V` @kind virtual;
  #L1cbdfa.  return @kind void;
}
