record `e.h.a.f.h` @kind class @AccessFlag PUBLIC {
}
procedure `java.util.Map` `a`(`e.h.a.f.f` v3 @kind object) @signature `Le/h/a/f/h;.a:(Le/h/a/f/f;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39c484.  call temp:= `a`(v3) @signature `Le/h/a/f/f;.a:()Le/h/a/d;` @kind interface;
  #L39c48a.  v3:= temp @kind object;
  #L39c48c.  if v3 == 0 then goto L39c4c0;
  #L39c490.  v0:= new `java.util.HashMap`;
  #L39c494.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39c49a.  call temp:= `c`(v3) @signature `Le/h/a/d;.c:()Ljava/lang/String;` @kind virtual;
  #L39c4a0.  v1:= temp @kind object;
  #L39c4a2.  v2:= "sql" @kind object;
  #L39c4a6.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c4ac.  call temp:= `b`(v3) @signature `Le/h/a/d;.b:()Ljava/util/List;` @kind virtual;
  #L39c4b2.  v3:= temp @kind object;
  #L39c4b4.  v1:= "arguments" @kind object;
  #L39c4b8.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39c4be.  goto L39c4c2;
  #L39c4c0.  v0:= 0I;
  #L39c4c2.  return v0 @kind object;
}
