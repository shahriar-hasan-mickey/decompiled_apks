record `e.h.a.b` @kind class @AccessFlag PUBLIC {
}
procedure `java.lang.Integer` `a`(`h.a.c.a.i` v1 @kind object) @signature `Le/h/a/b;.a:(Lh/a/c/a/i;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L399450.  v0:= "logLevel" @kind object;
  #L399454.  call temp:= `a`(v1, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L39945a.  v1:= temp @kind object;
  #L39945c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L399460.  return v1 @kind object;
}
procedure `boolean` `a`(`int` v1 ) @signature `Le/h/a/b;.a:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L399414.  v0:= 1I;
  #L399416.  if v1 < v0 then goto L39941c;
  #L39941a.  goto L39941e;
  #L39941c.  v0:= 0I;
  #L39941e.  return v0;
}
procedure `boolean` `b`(`int` v1 ) @signature `Le/h/a/b;.b:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L399430.  v0:= 2I;
  #L399432.  if v1 < v0 then goto L39943a;
  #L399436.  v1:= 1I;
  #L399438.  goto L39943c;
  #L39943a.  v1:= 0I;
  #L39943c.  return v1;
}
