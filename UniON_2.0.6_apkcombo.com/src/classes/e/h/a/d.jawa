record `e.h.a.d` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `e.h.a.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.h.a.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.h.a.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object) @signature `Le/h/a/d;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39bf64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39bf6a.  v0.`e.h.a.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L39bf6e.  if v2 != 0 then goto L39bf7c;
  #L39bf72.  v2:= new `java.util.ArrayList`;
  #L39bf76.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39bf7c.  v0.`e.h.a.d.b` @type ^`java.util.List` := v2 @kind object;
  #L39bf80.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.Object` v4 @kind object) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39bdb0.  if v4 != 0 then goto L39bdb8;
  #L39bdb4.  v4:= 0I;
  #L39bdb6.  return v4 @kind object;
  #L39bdb8.  v0:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L39bdbc.  if v0 == 0 then goto L39bdf8;
  #L39bdc0.  v0:= new `java.util.ArrayList`;
  #L39bdc4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39bdca.  v4:= (`byte`[]) v4 @kind object;
  #L39bdce.  v1:= length @variable v4;
  #L39bdd0.  v2:= 0I;
  #L39bdd2.  if v2 >= v1 then goto L39bdee;
  #L39bdd6.  v3:= v4[v2] @kind byte;
  #L39bdda.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39bde0.  v3:= temp @kind object;
  #L39bde2.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39bde8.  v2:= v2 + 1;
  #L39bdec.  goto L39bdd2;
  #L39bdee.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bdf4.  v4:= temp @kind object;
  #L39bdf6.  return v4 @kind object;
  #L39bdf8.  v0:= instanceof @variable v4 @type ^`java.util.Map` @kind boolean;
  #L39bdfc.  if v0 == 0 then goto L39be16;
  #L39be00.  v4:= (`java.util.Map`) v4 @kind object;
  #L39be04.  call temp:= `a`(v4) @signature `Le/h/a/d;.a:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L39be0a.  v4:= temp @kind object;
  #L39be0c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L39be12.  v4:= temp @kind object;
  #L39be14.  return v4 @kind object;
  #L39be16.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L39be1c.  v4:= temp @kind object;
  #L39be1e.  return v4 @kind object;
}
procedure `java.util.Map` `a`(`java.util.Map` v4 @kind object) @signature `Le/h/a/d;.a:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39bee0.  v0:= new `java.util.HashMap`;
  #L39bee4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L39beea.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L39bef0.  v4:= temp @kind object;
  #L39bef2.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L39bef8.  v4:= temp @kind object;
  #L39befa.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39bf00.  v1:= temp;
  #L39bf02.  if v1 == 0 then goto L39bf50;
  #L39bf06.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39bf0c.  v1:= temp @kind object;
  #L39bf0e.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L39bf12.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L39bf18.  v2:= temp @kind object;
  #L39bf1a.  v3:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L39bf1e.  if v3 == 0 then goto L39bf30;
  #L39bf22.  v2:= (`java.util.Map`) v2 @kind object;
  #L39bf26.  call temp:= `a`(v2) @signature `Le/h/a/d;.a:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L39bf2c.  v2:= temp @kind object;
  #L39bf2e.  goto L39bf38;
  #L39bf30.  call temp:= `a`(v2) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39bf36.  v2:= temp @kind object;
  #L39bf38.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L39bf3e.  v1:= temp @kind object;
  #L39bf40.  call temp:= `a`(v1) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39bf46.  v1:= temp @kind object;
  #L39bf48.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L39bf4e.  goto L39befa;
  #L39bf50.  return v0 @kind object;
}
procedure `java.lang.String`[] `a`(`e.h.a.d` v1 @kind this, `java.util.List` v2 @kind object) @signature `Le/h/a/d;.a:(Ljava/util/List;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39be50.  call temp:= `c`(v1, v2) @signature `Le/h/a/d;.c:(Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L39be56.  v2:= temp @kind object;
  #L39be58.  v0:= 0I;
  #L39be5a.  v0:= new `java.lang.String`[v0];
  #L39be5e.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L39be64.  v2:= temp @kind object;
  #L39be66.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L39be6a.  return v2 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v6 @kind object) @signature `Le/h/a/d;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39bb8c.  if v6 != 0 then goto L39bb94;
  #L39bb90.  v6:= 0I;
  #L39bb92.  return v6 @kind object;
  #L39bb94.  v0:= `@@e.h.a.e.a.c` @type ^`boolean` @kind boolean;
  #L39bb98.  v1:= " " @kind object;
  #L39bb9c.  v2:= "arg " @kind object;
  #L39bba0.  v3:= "Sqflite" @kind object;
  #L39bba4.  if v0 == 0 then goto L39bbf0;
  #L39bba8.  v0:= new `java.lang.StringBuilder`;
  #L39bbac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39bbb2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bbb8.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L39bbbe.  v4:= temp @kind object;
  #L39bbc0.  call temp:= `getCanonicalName`(v4) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L39bbc6.  v4:= temp @kind object;
  #L39bbc8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bbce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bbd4.  call temp:= `a`(v6) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39bbda.  v4:= temp @kind object;
  #L39bbdc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bbe2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bbe8.  v0:= temp @kind object;
  #L39bbea.  call temp:= `d`(v3, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L39bbf0.  v0:= instanceof @variable v6 @type ^`java.util.List` @kind boolean;
  #L39bbf4.  if v0 == 0 then goto L39bc38;
  #L39bbf8.  v6:= (`java.util.List`) v6 @kind object;
  #L39bbfc.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39bc02.  v0:= temp;
  #L39bc04.  v0:= new `byte`[v0];
  #L39bc08.  v4:= 0I;
  #L39bc0a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39bc10.  v5:= temp;
  #L39bc12.  if v4 >= v5 then goto L39bc36;
  #L39bc16.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39bc1c.  v5:= temp @kind object;
  #L39bc1e.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L39bc22.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L39bc28.  v5:= temp;
  #L39bc2a.  v5:= (`byte`) v5 @kind i2b;
  #L39bc2c.  v0[v4]:= v5 @kind byte;
  #L39bc30.  v4:= v4 + 1;
  #L39bc34.  goto L39bc0a;
  #L39bc36.  v6:= v0 @kind object;
  #L39bc38.  v0:= `@@e.h.a.e.a.c` @type ^`boolean` @kind boolean;
  #L39bc3c.  if v0 == 0 then goto L39bc88;
  #L39bc40.  v0:= new `java.lang.StringBuilder`;
  #L39bc44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39bc4a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bc50.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L39bc56.  v2:= temp @kind object;
  #L39bc58.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L39bc5e.  v2:= temp @kind object;
  #L39bc60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bc66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bc6c.  call temp:= `a`(v6) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39bc72.  v1:= temp @kind object;
  #L39bc74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bc7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bc80.  v0:= temp @kind object;
  #L39bc82.  call temp:= `d`(v3, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L39bc88.  return v6 @kind object;
}
procedure `java.lang.Object`[] `b`(`e.h.a.d` v2 @kind this, `java.util.List` v3 @kind object) @signature `Le/h/a/d;.b:(Ljava/util/List;)[Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39bcbc.  v0:= new `java.util.ArrayList`;
  #L39bcc0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39bcc6.  if v3 == 0 then goto L39bcf6;
  #L39bcca.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L39bcd0.  v3:= temp @kind object;
  #L39bcd2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39bcd8.  v1:= temp;
  #L39bcda.  if v1 == 0 then goto L39bcf6;
  #L39bcde.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39bce4.  v1:= temp @kind object;
  #L39bce6.  call temp:= `b`(v1) @signature `Le/h/a/d;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39bcec.  v1:= temp @kind object;
  #L39bcee.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39bcf4.  goto L39bcd2;
  #L39bcf6.  v3:= 0I;
  #L39bcf8.  v3:= new `java.lang.Object`[v3];
  #L39bcfc.  call temp:= `toArray`(v0, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L39bd02.  v3:= temp @kind object;
  #L39bd04.  return v3 @kind object;
}
procedure `java.util.List` `c`(`e.h.a.d` v2 @kind this, `java.util.List` v3 @kind object) @signature `Le/h/a/d;.c:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39be94.  v0:= new `java.util.ArrayList`;
  #L39be98.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39be9e.  if v3 == 0 then goto L39bece;
  #L39bea2.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L39bea8.  v3:= temp @kind object;
  #L39beaa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L39beb0.  v1:= temp;
  #L39beb2.  if v1 == 0 then goto L39bece;
  #L39beb6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L39bebc.  v1:= temp @kind object;
  #L39bebe.  call temp:= `a`(v1) @signature `Le/h/a/d;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L39bec4.  v1:= temp @kind object;
  #L39bec6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39becc.  goto L39beaa;
  #L39bece.  return v0 @kind object;
}
procedure `java.lang.String`[] `a`(`e.h.a.d` v1 @kind this) @signature `Le/h/a/d;.a:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39be30.  v0:= v1.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39be34.  call temp:= `a`(v1, v0) @signature `Le/h/a/d;.a:(Ljava/util/List;)[Ljava/lang/String;` @kind direct;
  #L39be3a.  v0:= temp @kind object;
  #L39be3c.  return v0 @kind object;
}
procedure `java.util.List` `b`(`e.h.a.d` v1 @kind this) @signature `Le/h/a/d;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39be7c.  v0:= v1.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39be80.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`e.h.a.d` v1 @kind this) @signature `Le/h/a/d;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39bd18.  v0:= v1.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39bd1c.  return v0 @kind object;
}
procedure `java.lang.Object`[] `d`(`e.h.a.d` v1 @kind this) @signature `Le/h/a/d;.d:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39bc9c.  v0:= v1.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bca0.  call temp:= `b`(v1, v0) @signature `Le/h/a/d;.b:(Ljava/util/List;)[Ljava/lang/Object;` @kind direct;
  #L39bca6.  v0:= temp @kind object;
  #L39bca8.  return v0 @kind object;
}
procedure `e.h.a.d` `e`(`e.h.a.d` v9 @kind this) @signature `Le/h/a/d;.e:()Le/h/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39ba5c.  v0:= v9.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39ba60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39ba66.  v0:= temp;
  #L39ba68.  if v0 != 0 then goto L39ba6e;
  #L39ba6c.  return v9 @kind object;
  #L39ba6e.  v0:= new `java.lang.StringBuilder`;
  #L39ba72.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ba78.  v1:= new `java.util.ArrayList`;
  #L39ba7c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39ba82.  v2:= v9.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39ba86.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L39ba8c.  v2:= temp;
  #L39ba8e.  v3:= 0I;
  #L39ba90.  v4:= 0I;
  #L39ba92.  v5:= 0I;
  #L39ba94.  if v3 >= v2 then goto L39bb2e;
  #L39ba98.  v6:= v9.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39ba9c.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39baa2.  v6:= temp;
  #L39baa4.  v7:= 63I;
  #L39baa8.  if v6 != v7 then goto L39bb22;
  #L39baac.  v7:= v3 + 1;
  #L39bab0.  if v7 >= v2 then goto L39bace;
  #L39bab4.  v8:= v9.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39bab8.  call temp:= `charAt`(v8, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39babe.  v7:= temp;
  #L39bac0.  call temp:= `isDigit`(v7) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L39bac6.  v7:= temp;
  #L39bac8.  if v7 == 0 then goto L39bace;
  #L39bacc.  return v9 @kind object;
  #L39bace.  v4:= v4 + 1;
  #L39bad2.  v7:= v9.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bad6.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39badc.  v7:= temp;
  #L39bade.  if v5 < v7 then goto L39bae4;
  #L39bae2.  return v9 @kind object;
  #L39bae4.  v7:= v9.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bae8.  v8:= v5 + 1;
  #L39baec.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39baf2.  v5:= temp @kind object;
  #L39baf4.  v7:= instanceof @variable v5 @type ^`java.lang.Integer` @kind boolean;
  #L39baf8.  if v7 != 0 then goto L39bb10;
  #L39bafc.  v7:= instanceof @variable v5 @type ^`java.lang.Long` @kind boolean;
  #L39bb00.  if v7 == 0 then goto L39bb06;
  #L39bb04.  goto L39bb10;
  #L39bb06.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39bb0c.  v5:= v8;
  #L39bb0e.  goto L39bb22;
  #L39bb10.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bb16.  v5:= temp @kind object;
  #L39bb18.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bb1e.  v5:= v8;
  #L39bb20.  goto L39bb28;
  #L39bb22.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bb28.  v3:= v3 + 1;
  #L39bb2c.  goto L39ba94;
  #L39bb2e.  v2:= v9.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bb32.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39bb38.  v2:= temp;
  #L39bb3a.  if v4 == v2 then goto L39bb40;
  #L39bb3e.  return v9 @kind object;
  #L39bb40.  v2:= new `e.h.a.d`;
  #L39bb44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bb4a.  v0:= temp @kind object;
  #L39bb4c.  call `<init>`(v2, v0, v1) @signature `Le/h/a/d;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L39bb52.  return v2 @kind object;
}
procedure `boolean` `equals`(`e.h.a.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/h/a/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39b960.  v0:= instanceof @variable v5 @type ^`e.h.a.d` @kind boolean;
  #L39b964.  v1:= 0I;
  #L39b966.  if v0 == 0 then goto L39ba48;
  #L39b96a.  v5:= (`e.h.a.d`) v5 @kind object;
  #L39b96e.  v0:= v4.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39b972.  if v0 == 0 then goto L39b988;
  #L39b976.  v2:= v5.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39b97a.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39b980.  v0:= temp;
  #L39b982.  if v0 != 0 then goto L39b992;
  #L39b986.  return v1;
  #L39b988.  v0:= v5.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39b98c.  if v0 == 0 then goto L39b992;
  #L39b990.  return v1;
  #L39b992.  v0:= v4.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b996.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39b99c.  v0:= temp;
  #L39b99e.  v2:= v5.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9a2.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39b9a8.  v2:= temp;
  #L39b9aa.  if v0 == v2 then goto L39b9b0;
  #L39b9ae.  return v1;
  #L39b9b0.  v0:= 0I;
  #L39b9b2.  v2:= v4.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9b6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39b9bc.  v2:= temp;
  #L39b9be.  if v0 >= v2 then goto L39ba44;
  #L39b9c2.  v2:= v4.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9c6.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b9cc.  v2:= temp @kind object;
  #L39b9ce.  v2:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L39b9d2.  if v2 == 0 then goto L39ba18;
  #L39b9d6.  v2:= v5.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9da.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b9e0.  v2:= temp @kind object;
  #L39b9e2.  v2:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L39b9e6.  if v2 == 0 then goto L39ba18;
  #L39b9ea.  v2:= v4.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9ee.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b9f4.  v2:= temp @kind object;
  #L39b9f6.  v2:= (`byte`[]) v2 @kind object;
  #L39b9fa.  v3:= v5.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39b9fe.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39ba04.  v3:= temp @kind object;
  #L39ba06.  v3:= (`byte`[]) v3 @kind object;
  #L39ba0a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L39ba10.  v2:= temp;
  #L39ba12.  if v2 != 0 then goto L39ba3e;
  #L39ba16.  return v1;
  #L39ba18.  v2:= v4.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39ba1c.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39ba22.  v2:= temp @kind object;
  #L39ba24.  v3:= v5.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39ba28.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39ba2e.  v3:= temp @kind object;
  #L39ba30.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39ba36.  v2:= temp;
  #L39ba38.  if v2 != 0 then goto L39ba3e;
  #L39ba3c.  return v1;
  #L39ba3e.  v0:= v0 + 1;
  #L39ba42.  goto L39b9b2;
  #L39ba44.  v5:= 1I;
  #L39ba46.  return v5;
  #L39ba48.  return v1;
}
procedure `int` `hashCode`(`e.h.a.d` v1 @kind this) @signature `Le/h/a/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39bb64.  v0:= v1.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39bb68.  if v0 == 0 then goto L39bb76;
  #L39bb6c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L39bb72.  v0:= temp;
  #L39bb74.  goto L39bb78;
  #L39bb76.  v0:= 0I;
  #L39bb78.  return v0;
}
procedure `java.lang.String` `toString`(`e.h.a.d` v3 @kind this) @signature `Le/h/a/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39bd30.  v0:= new `java.lang.StringBuilder`;
  #L39bd34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39bd3a.  v1:= v3.`e.h.a.d.a` @type ^`java.lang.String` @kind object;
  #L39bd3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bd44.  v1:= v3.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bd48.  if v1 == 0 then goto L39bd8a;
  #L39bd4c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L39bd52.  v1:= temp;
  #L39bd54.  if v1 == 0 then goto L39bd5a;
  #L39bd58.  goto L39bd8a;
  #L39bd5a.  v1:= new `java.lang.StringBuilder`;
  #L39bd5e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39bd64.  v2:= " " @kind object;
  #L39bd68.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bd6e.  v2:= v3.`e.h.a.d.b` @type ^`java.util.List` @kind object;
  #L39bd72.  call temp:= `c`(v3, v2) @signature `Le/h/a/d;.c:(Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L39bd78.  v2:= temp @kind object;
  #L39bd7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bd80.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bd86.  v1:= temp @kind object;
  #L39bd88.  goto L39bd8e;
  #L39bd8a.  v1:= "" @kind object;
  #L39bd8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39bd94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39bd9a.  v0:= temp @kind object;
  #L39bd9c.  return v0 @kind object;
}
