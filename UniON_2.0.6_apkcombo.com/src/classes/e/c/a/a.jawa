record `e.c.a.a` @kind class @AccessFlag PUBLIC extends `h.a.c.a.j$c` @kind interface {
}
global `e.e.d.a.j` `@@e.c.a.a.b` @AccessFlag PRIVATE_STATIC;
global `e.e.d.a.i` `@@e.c.a.a.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/c/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1cf7ac.  call temp:= `a`() @signature `Le/e/d/a/j;.a:()Le/e/d/a/j;` @kind static;
  #L1cf7b2.  v0:= temp @kind object;
  #L1cf7b4.  `@@e.c.a.a.b` @type ^`e.e.d.a.j` := v0 @kind object;
  #L1cf7b8.  call temp:= `a`() @signature `Le/e/d/a/i;.a:()Le/e/d/a/i;` @kind static;
  #L1cf7be.  v0:= temp @kind object;
  #L1cf7c0.  `@@e.c.a.a.c` @type ^`e.e.d.a.i` := v0 @kind object;
  #L1cf7c4.  return @kind void;
}
procedure `void` `<init>`(`e.c.a.a` v0 @kind this) @signature `Le/c/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1cf7d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cf7de.  return @kind void;
}
procedure `void` `a`(`e.c.a.a` v4 @kind this, `h.a.c.a.i` v5 @kind object, `h.a.c.a.j$d` v6 @kind object) @signature `Le/c/a/a;.a:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cf7f0.  v0:= "phone_number" @kind object;
  #L1cf7f4.  call temp:= `a`(v5, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf7fa.  v0:= temp @kind object;
  #L1cf7fc.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cf800.  v1:= "iso_code" @kind object;
  #L1cf804.  call temp:= `a`(v5, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf80a.  v5:= temp @kind object;
  #L1cf80c.  v5:= (`java.lang.String`) v5 @kind object;
  #L1cf810.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cf814.  call temp:= `toUpperCase`(v5) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cf81a.  v5:= temp @kind object;
  #L1cf81c.  call temp:= `a`(v1, v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/String;)Le/e/d/a/b;` @kind virtual;
  #L1cf822.  v5:= temp @kind object;
  #L1cf824.  v1:= 0I;
  #L1cf826.  v2:= 0I;
  #L1cf828.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1cf82e.  v3:= temp;
  #L1cf830.  if v2 >= v3 then goto L1cf84a;
  #L1cf834.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1cf83a.  v1:= temp;
  #L1cf83c.  call temp:= `a`(v5, v1) @signature `Le/e/d/a/b;.a:(C)Ljava/lang/String;` @kind virtual;
  #L1cf842.  v1:= temp @kind object;
  #L1cf844.  v2:= v2 + 1;
  #L1cf848.  goto L1cf828;
  #L1cf84a.  call `a`(v6, v1) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cf850.  return @kind void;
}
procedure `void` `a`(`h.a.c.a.l$d` v2 @kind object) @signature `Le/c/a/a;.a:(Lh/a/c/a/l$d;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1cfd50.  v0:= new `h.a.c.a.j`;
  #L1cfd54.  call temp:= `d`(v2) @signature `Lh/a/c/a/l$d;.d:()Lh/a/c/a/b;` @kind interface;
  #L1cfd5a.  v2:= temp @kind object;
  #L1cfd5c.  v1:= "codeheadlabs.com/libphonenumber" @kind object;
  #L1cfd60.  call `<init>`(v0, v2, v1) @signature `Lh/a/c/a/j;.<init>:(Lh/a/c/a/b;Ljava/lang/String;)V` @kind direct;
  #L1cfd66.  v2:= new `e.c.a.a`;
  #L1cfd6a.  call `<init>`(v2) @signature `Le/c/a/a;.<init>:()V` @kind direct;
  #L1cfd70.  call `a`(v0, v2) @signature `Lh/a/c/a/j;.a:(Lh/a/c/a/j$c;)V` @kind virtual;
  #L1cfd76.  return @kind void;
}
procedure `void` `b`(`e.c.a.a` v2 @kind this, `h.a.c.a.i` v3 @kind object, `h.a.c.a.j$d` v4 @kind object) @signature `Le/c/a/a;.b:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cf864.  v0:= "phone_number" @kind object;
  #L1cf868.  call temp:= `a`(v3, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf86e.  v0:= temp @kind object;
  #L1cf870.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cf874.  v1:= "iso_code" @kind object;
  #L1cf878.  call temp:= `a`(v3, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf87e.  v3:= temp @kind object;
  #L1cf880.  v3:= (`java.lang.String`) v3 @kind object;
  #L1cf884.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cf888.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cf88e.  v3:= temp @kind object;
  #L1cf890.  call temp:= `a`(v1, v0, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L1cf896.  v3:= temp @kind object;
  #L1cf898.  v0:= `@@e.c.a.a.c` @type ^`e.e.d.a.i` @kind object;
  #L1cf89c.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L1cf8a2.  v1:= temp @kind object;
  #L1cf8a4.  call temp:= `a`(v0, v3, v1) @signature `Le/e/d/a/i;.a:(Le/e/d/a/o;Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1cf8aa.  v3:= temp @kind object;
  #L1cf8ac.  call `a`(v4, v3) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cf8b2.  goto L1cf8ca;
  #L1cf8b4.  v3:= Exception @type ^`e.e.d.a.h` @kind object;
  #L1cf8b6.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cf8bc.  v3:= temp @kind object;
  #L1cf8be.  v0:= 0I;
  #L1cf8c0.  v1:= "NumberParseException" @kind object;
  #L1cf8c4.  call `a`(v4, v1, v3, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1cf8ca.  return @kind void;
  catch `e.e.d.a.h` @[L1cf884..L1cf8b2] goto L1cf8b4;
}
procedure `void` `c`(`e.c.a.a` v2 @kind this, `h.a.c.a.i` v3 @kind object, `h.a.c.a.j$d` v4 @kind object) @signature `Le/c/a/a;.c:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cf8ec.  v0:= "phone_number" @kind object;
  #L1cf8f0.  call temp:= `a`(v3, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf8f6.  v0:= temp @kind object;
  #L1cf8f8.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cf8fc.  v1:= "iso_code" @kind object;
  #L1cf900.  call temp:= `a`(v3, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cf906.  v3:= temp @kind object;
  #L1cf908.  v3:= (`java.lang.String`) v3 @kind object;
  #L1cf90c.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cf910.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cf916.  v3:= temp @kind object;
  #L1cf918.  call temp:= `a`(v1, v0, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L1cf91e.  v3:= temp @kind object;
  #L1cf920.  v0:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cf924.  call temp:= `b`(v0, v3) @signature `Le/e/d/a/j;.b:(Le/e/d/a/o;)Le/e/d/a/j$c;` @kind virtual;
  #L1cf92a.  v3:= temp @kind object;
  #L1cf92c.  v0:= `@@e.c.a.a$a.a` @type ^`int`[] @kind object;
  #L1cf930.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1cf936.  v3:= temp;
  #L1cf938.  v3:= v0[v3];
  #L1cf93c.  goto L1cf9f8;
  #L1cf942.  goto L1cf9f6;
  #L1cf944.  v3:= -1I;
  #L1cf946.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf94c.  v3:= temp @kind object;
  #L1cf94e.  call `a`(v4, v3) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cf954.  goto L1cf9f6;
  #L1cf956.  v3:= 10I;
  #L1cf95a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf960.  v3:= temp @kind object;
  #L1cf962.  goto L1cf94e;
  #L1cf964.  v3:= 9I;
  #L1cf968.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf96e.  v3:= temp @kind object;
  #L1cf970.  goto L1cf94e;
  #L1cf972.  v3:= 8I;
  #L1cf976.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf97c.  v3:= temp @kind object;
  #L1cf97e.  goto L1cf94e;
  #L1cf980.  v3:= 7I;
  #L1cf982.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf988.  v3:= temp @kind object;
  #L1cf98a.  goto L1cf94e;
  #L1cf98c.  v3:= 6I;
  #L1cf98e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf994.  v3:= temp @kind object;
  #L1cf996.  goto L1cf94e;
  #L1cf998.  v3:= 5I;
  #L1cf99a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9a0.  v3:= temp @kind object;
  #L1cf9a2.  goto L1cf94e;
  #L1cf9a4.  v3:= 4I;
  #L1cf9a6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9ac.  v3:= temp @kind object;
  #L1cf9ae.  goto L1cf94e;
  #L1cf9b0.  v3:= 3I;
  #L1cf9b2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9b8.  v3:= temp @kind object;
  #L1cf9ba.  goto L1cf94e;
  #L1cf9bc.  v3:= 2I;
  #L1cf9be.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9c4.  v3:= temp @kind object;
  #L1cf9c6.  goto L1cf94e;
  #L1cf9c8.  v3:= 1I;
  #L1cf9ca.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9d0.  v3:= temp @kind object;
  #L1cf9d2.  goto L1cf94e;
  #L1cf9d4.  v3:= 0I;
  #L1cf9d6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1cf9dc.  v3:= temp @kind object;
  #L1cf9de.  goto L1cf94e;
  #L1cf9e0.  v3:= Exception @type ^`e.e.d.a.h` @kind object;
  #L1cf9e2.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cf9e8.  v3:= temp @kind object;
  #L1cf9ea.  v0:= 0I;
  #L1cf9ec.  v1:= "NumberParseException" @kind object;
  #L1cf9f0.  call `a`(v4, v1, v3, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1cf9f6.  return @kind void;
  #L1cf9f8.  switch v3
                  | 1 => goto L1cf9d4
                  | 2 => goto L1cf9c8
                  | 3 => goto L1cf9bc
                  | 4 => goto L1cf9b0
                  | 5 => goto L1cf9a4
                  | 6 => goto L1cf998
                  | 7 => goto L1cf98c
                  | 8 => goto L1cf980
                  | 9 => goto L1cf972
                  | 10 => goto L1cf964
                  | 11 => goto L1cf956
                  | 12 => goto L1cf944
                  | else => goto L1cf942;
  catch `e.e.d.a.h` @[L1cf90c..L1cf9de] goto L1cf9e0;
}
procedure `void` `d`(`e.c.a.a` v4 @kind this, `h.a.c.a.i` v5 @kind object, `h.a.c.a.j$d` v6 @kind object) @signature `Le/c/a/a;.d:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cfa50.  v0:= "phone_number" @kind object;
  #L1cfa54.  call temp:= `a`(v5, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfa5a.  v0:= temp @kind object;
  #L1cfa5c.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cfa60.  v1:= "iso_code" @kind object;
  #L1cfa64.  call temp:= `a`(v5, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfa6a.  v5:= temp @kind object;
  #L1cfa6c.  v5:= (`java.lang.String`) v5 @kind object;
  #L1cfa70.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfa74.  call temp:= `toUpperCase`(v5) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cfa7a.  v5:= temp @kind object;
  #L1cfa7c.  call temp:= `a`(v1, v0, v5) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L1cfa82.  v5:= temp @kind object;
  #L1cfa84.  v0:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfa88.  call temp:= `c`(v0, v5) @signature `Le/e/d/a/j;.c:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L1cfa8e.  v0:= temp @kind object;
  #L1cfa90.  call temp:= `b`(v5) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L1cfa96.  v1:= temp;
  #L1cfa98.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L1cfa9e.  v1:= temp @kind object;
  #L1cfaa0.  v2:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfaa4.  v3:= `@@e.e.d.a.j$b.d` @type ^`e.e.d.a.j$b` @kind object;
  #L1cfaa8.  call temp:= `a`(v2, v5, v3) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/j$b;)Ljava/lang/String;` @kind virtual;
  #L1cfaae.  v5:= temp @kind object;
  #L1cfab0.  v2:= new `java.util.HashMap`;
  #L1cfab4.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1cfaba.  v3:= "isoCode" @kind object;
  #L1cfabe.  call temp:= `put`(v2, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cfac4.  v0:= "regionCode" @kind object;
  #L1cfac8.  call temp:= `put`(v2, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cface.  v0:= "formattedPhoneNumber" @kind object;
  #L1cfad2.  call temp:= `put`(v2, v0, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1cfad8.  call `a`(v6, v2) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cfade.  goto L1cfaf6;
  #L1cfae0.  v5:= Exception @type ^`e.e.d.a.h` @kind object;
  #L1cfae2.  call temp:= `getMessage`(v5) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cfae8.  v5:= temp @kind object;
  #L1cfaea.  v0:= 0I;
  #L1cfaec.  v1:= "NumberParseException" @kind object;
  #L1cfaf0.  call `a`(v6, v1, v5, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1cfaf6.  return @kind void;
  catch `e.e.d.a.h` @[L1cfa70..L1cfade] goto L1cfae0;
}
procedure `void` `e`(`e.c.a.a` v2 @kind this, `h.a.c.a.i` v3 @kind object, `h.a.c.a.j$d` v4 @kind object) @signature `Le/c/a/a;.e:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cfb18.  v0:= "phone_number" @kind object;
  #L1cfb1c.  call temp:= `a`(v3, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfb22.  v0:= temp @kind object;
  #L1cfb24.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cfb28.  v1:= "iso_code" @kind object;
  #L1cfb2c.  call temp:= `a`(v3, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfb32.  v3:= temp @kind object;
  #L1cfb34.  v3:= (`java.lang.String`) v3 @kind object;
  #L1cfb38.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfb3c.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cfb42.  v3:= temp @kind object;
  #L1cfb44.  call temp:= `a`(v1, v0, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L1cfb4a.  v3:= temp @kind object;
  #L1cfb4c.  v0:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfb50.  call temp:= `d`(v0, v3) @signature `Le/e/d/a/j;.d:(Le/e/d/a/o;)Z` @kind virtual;
  #L1cfb56.  v3:= temp;
  #L1cfb58.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1cfb5e.  v3:= temp @kind object;
  #L1cfb60.  call `a`(v4, v3) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cfb66.  goto L1cfb7e;
  #L1cfb68.  v3:= Exception @type ^`e.e.d.a.h` @kind object;
  #L1cfb6a.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cfb70.  v3:= temp @kind object;
  #L1cfb72.  v0:= 0I;
  #L1cfb74.  v1:= "NumberParseException" @kind object;
  #L1cfb78.  call `a`(v4, v1, v3, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1cfb7e.  return @kind void;
  catch `e.e.d.a.h` @[L1cfb38..L1cfb66] goto L1cfb68;
}
procedure `void` `f`(`e.c.a.a` v2 @kind this, `h.a.c.a.i` v3 @kind object, `h.a.c.a.j$d` v4 @kind object) @signature `Le/c/a/a;.f:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cfba0.  v0:= "phone_number" @kind object;
  #L1cfba4.  call temp:= `a`(v3, v0) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfbaa.  v0:= temp @kind object;
  #L1cfbac.  v0:= (`java.lang.String`) v0 @kind object;
  #L1cfbb0.  v1:= "iso_code" @kind object;
  #L1cfbb4.  call temp:= `a`(v3, v1) @signature `Lh/a/c/a/i;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1cfbba.  v3:= temp @kind object;
  #L1cfbbc.  v3:= (`java.lang.String`) v3 @kind object;
  #L1cfbc0.  v1:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfbc4.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L1cfbca.  v3:= temp @kind object;
  #L1cfbcc.  call temp:= `a`(v1, v0, v3) @signature `Le/e/d/a/j;.a:(Ljava/lang/CharSequence;Ljava/lang/String;)Le/e/d/a/o;` @kind virtual;
  #L1cfbd2.  v3:= temp @kind object;
  #L1cfbd4.  v0:= `@@e.c.a.a.b` @type ^`e.e.d.a.j` @kind object;
  #L1cfbd8.  v1:= `@@e.e.d.a.j$b.b` @type ^`e.e.d.a.j$b` @kind object;
  #L1cfbdc.  call temp:= `a`(v0, v3, v1) @signature `Le/e/d/a/j;.a:(Le/e/d/a/o;Le/e/d/a/j$b;)Ljava/lang/String;` @kind virtual;
  #L1cfbe2.  v3:= temp @kind object;
  #L1cfbe4.  call `a`(v4, v3) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L1cfbea.  goto L1cfc02;
  #L1cfbec.  v3:= Exception @type ^`e.e.d.a.h` @kind object;
  #L1cfbee.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1cfbf4.  v3:= temp @kind object;
  #L1cfbf6.  v0:= 0I;
  #L1cfbf8.  v1:= "NumberParseException" @kind object;
  #L1cfbfc.  call `a`(v4, v1, v3, v0) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L1cfc02.  return @kind void;
  catch `e.e.d.a.h` @[L1cfbc0..L1cfbea] goto L1cfbec;
}
procedure `void` `onMethodCall`(`e.c.a.a` v7 @kind this, `h.a.c.a.i` v8 @kind object, `h.a.c.a.j$d` v9 @kind object) @signature `Le/c/a/a;.onMethodCall:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1cfc24.  v0:= v8.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L1cfc28.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1cfc2e.  v1:= temp;
  #L1cfc30.  v2:= 5I;
  #L1cfc32.  v3:= 4I;
  #L1cfc34.  v4:= 3I;
  #L1cfc36.  v5:= 2I;
  #L1cfc38.  v6:= 1I;
  #L1cfc3a.  goto L1cfd0c;
  #L1cfc40.  goto L1cfcba;
  #L1cfc42.  v1:= "getRegionInfo" @kind object;
  #L1cfc46.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfc4c.  v0:= temp;
  #L1cfc4e.  if v0 == 0 then goto L1cfcba;
  #L1cfc52.  v0:= 2I;
  #L1cfc54.  goto L1cfcbc;
  #L1cfc56.  v1:= "normalizePhoneNumber" @kind object;
  #L1cfc5a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfc60.  v0:= temp;
  #L1cfc62.  if v0 == 0 then goto L1cfcba;
  #L1cfc66.  v0:= 1I;
  #L1cfc68.  goto L1cfcbc;
  #L1cfc6a.  v1:= "isValidPhoneNumber" @kind object;
  #L1cfc6e.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfc74.  v0:= temp;
  #L1cfc76.  if v0 == 0 then goto L1cfcba;
  #L1cfc7a.  v0:= 0I;
  #L1cfc7c.  goto L1cfcbc;
  #L1cfc7e.  v1:= "getNumberType" @kind object;
  #L1cfc82.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfc88.  v0:= temp;
  #L1cfc8a.  if v0 == 0 then goto L1cfcba;
  #L1cfc8e.  v0:= 3I;
  #L1cfc90.  goto L1cfcbc;
  #L1cfc92.  v1:= "formatAsYouType" @kind object;
  #L1cfc96.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfc9c.  v0:= temp;
  #L1cfc9e.  if v0 == 0 then goto L1cfcba;
  #L1cfca2.  v0:= 4I;
  #L1cfca4.  goto L1cfcbc;
  #L1cfca6.  v1:= "getNameForNumber" @kind object;
  #L1cfcaa.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cfcb0.  v0:= temp;
  #L1cfcb2.  if v0 == 0 then goto L1cfcba;
  #L1cfcb6.  v0:= 5I;
  #L1cfcb8.  goto L1cfcbc;
  #L1cfcba.  v0:= -1I;
  #L1cfcbc.  if v0 == 0 then goto L1cfd04;
  #L1cfcc0.  if v0 == v6 then goto L1cfcfc;
  #L1cfcc4.  if v0 == v5 then goto L1cfcf4;
  #L1cfcc8.  if v0 == v4 then goto L1cfcec;
  #L1cfccc.  if v0 == v3 then goto L1cfce4;
  #L1cfcd0.  if v0 == v2 then goto L1cfcdc;
  #L1cfcd4.  call `a`(v9) @signature `Lh/a/c/a/j$d;.a:()V` @kind interface;
  #L1cfcda.  goto L1cfd0a;
  #L1cfcdc.  call `b`(v7, v8, v9) @signature `Le/c/a/a;.b:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfce2.  goto L1cfd0a;
  #L1cfce4.  call `a`(v7, v8, v9) @signature `Le/c/a/a;.a:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfcea.  goto L1cfd0a;
  #L1cfcec.  call `c`(v7, v8, v9) @signature `Le/c/a/a;.c:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfcf2.  goto L1cfd0a;
  #L1cfcf4.  call `d`(v7, v8, v9) @signature `Le/c/a/a;.d:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfcfa.  goto L1cfd0a;
  #L1cfcfc.  call `f`(v7, v8, v9) @signature `Le/c/a/a;.f:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfd02.  goto L1cfd0a;
  #L1cfd04.  call `e`(v7, v8, v9) @signature `Le/c/a/a;.e:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @kind direct;
  #L1cfd0a.  return @kind void;
  #L1cfd0c.  switch v1
                  | -1712134287 => goto L1cfca6
                  | -854151888 => goto L1cfc92
                  | -689911271 => goto L1cfc7e
                  | -364250619 => goto L1cfc6a
                  | 1784154378 => goto L1cfc56
                  | 2006392248 => goto L1cfc42
                  | else => goto L1cfc40;
}
