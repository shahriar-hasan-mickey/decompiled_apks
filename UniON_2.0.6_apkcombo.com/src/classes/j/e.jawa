record `j.e` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `int` `j.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `j.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `j.e.d` @AccessFlag PRIVATE_FINAL;
  `int` `j.e.e` @AccessFlag PRIVATE_FINAL;
}
global `j.e` `@@j.e.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d3768.  v0:= new `j.e$a`;
  #L3d376c.  v1:= 0I;
  #L3d376e.  call `<init>`(v0, v1) @signature `Lj/e$a;.<init>:(Lj/o/b/b;)V` @kind direct;
  #L3d3774.  v0:= new `j.e`;
  #L3d3778.  v1:= 1I;
  #L3d377a.  v2:= 3I;
  #L3d377c.  v3:= 50I;
  #L3d3780.  call `<init>`(v0, v1, v2, v3) @signature `Lj/e;.<init>:(III)V` @kind direct;
  #L3d3786.  `@@j.e.f` @type ^`j.e` := v0 @kind object;
  #L3d378a.  return @kind void;
}
procedure `void` `<init>`(`j.e` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lj/e;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d379c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d37a2.  v0.`j.e.c` @type ^`int` := v1;
  #L3d37a6.  v0.`j.e.d` @type ^`int` := v2;
  #L3d37aa.  v0.`j.e.e` @type ^`int` := v3;
  #L3d37ae.  v1:= v0.`j.e.c` @type ^`int`;
  #L3d37b2.  v2:= v0.`j.e.d` @type ^`int`;
  #L3d37b6.  v3:= v0.`j.e.e` @type ^`int`;
  #L3d37ba.  call temp:= `a`(v0, v1, v2, v3) @signature `Lj/e;.a:(III)I` @kind direct;
  #L3d37c0.  v1:= temp;
  #L3d37c2.  v0.`j.e.b` @type ^`int` := v1;
  #L3d37c6.  return @kind void;
}
procedure `int` `a`(`j.e` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lj/e;.a:(III)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L3d3678.  if v3 >= 0 then goto L3d367e;
  #L3d367c.  goto L3d369e;
  #L3d367e.  v0:= 255I;
  #L3d3682.  if v0 < v3 then goto L3d369e;
  #L3d3686.  if v4 >= 0 then goto L3d368c;
  #L3d368a.  goto L3d369e;
  #L3d368c.  if v0 < v4 then goto L3d369e;
  #L3d3690.  if v5 >= 0 then goto L3d3696;
  #L3d3694.  goto L3d369e;
  #L3d3696.  if v0 < v5 then goto L3d369e;
  #L3d369a.  v0:= 1I;
  #L3d369c.  goto L3d36a0;
  #L3d369e.  v0:= 0I;
  #L3d36a0.  if v0 == 0 then goto L3d36b2;
  #L3d36a4.  v3:= v3 ^< 16;
  #L3d36a8.  v4:= v4 ^< 8;
  #L3d36ac.  v3:= v3 + v4 @kind int;
  #L3d36ae.  v3:= v3 + v5 @kind int;
  #L3d36b0.  return v3;
  #L3d36b2.  v0:= new `java.lang.StringBuilder`;
  #L3d36b6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d36bc.  v1:= "Version components are out of range: " @kind object;
  #L3d36c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36c6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36cc.  v3:= 46I;
  #L3d36d0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36d6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36dc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36e2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d36e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d36ee.  v3:= temp @kind object;
  #L3d36f0.  v4:= new `java.lang.IllegalArgumentException`;
  #L3d36f4.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d36fa.  v3:= temp @kind object;
  #L3d36fc.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d3702.  throw v4;
}
procedure `int` `a`(`j.e` v1 @kind this, `j.e` v2 @kind object) @signature `Lj/e;.a:(Lj/e;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3638.  v0:= "other" @kind object;
  #L3d363c.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d3642.  v0:= v1.`j.e.b` @type ^`int`;
  #L3d3646.  v2:= v2.`j.e.b` @type ^`int`;
  #L3d364a.  v0:= v0 - v2 @kind int;
  #L3d364c.  return v0;
}
procedure `int` `compareTo`(`j.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lj/e;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d3618.  v1:= (`j.e`) v1 @kind object;
  #L3d361c.  call temp:= `a`(v0, v1) @signature `Lj/e;.a:(Lj/e;)I` @kind virtual;
  #L3d3622.  v1:= temp;
  #L3d3624.  return v1;
}
procedure `boolean` `equals`(`j.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lj/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d35d8.  v0:= 1I;
  #L3d35da.  if v3 != v4 then goto L3d35e0;
  #L3d35de.  return v0;
  #L3d35e0.  v1:= instanceof @variable v4 @type ^`j.e` @kind boolean;
  #L3d35e4.  if v1 != 0 then goto L3d35ea;
  #L3d35e8.  v4:= 0I;
  #L3d35ea.  v4:= (`j.e`) v4 @kind object;
  #L3d35ee.  v1:= 0I;
  #L3d35f0.  if v4 == 0 then goto L3d3606;
  #L3d35f4.  v2:= v3.`j.e.b` @type ^`int`;
  #L3d35f8.  v4:= v4.`j.e.b` @type ^`int`;
  #L3d35fc.  if v2 != v4 then goto L3d3602;
  #L3d3600.  goto L3d3604;
  #L3d3602.  v0:= 0I;
  #L3d3604.  return v0;
  #L3d3606.  return v1;
}
procedure `int` `hashCode`(`j.e` v1 @kind this) @signature `Lj/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3660.  v0:= v1.`j.e.b` @type ^`int`;
  #L3d3664.  return v0;
}
procedure `java.lang.String` `toString`(`j.e` v3 @kind this) @signature `Lj/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d3714.  v0:= new `java.lang.StringBuilder`;
  #L3d3718.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d371e.  v1:= v3.`j.e.c` @type ^`int`;
  #L3d3722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d3728.  v1:= 46I;
  #L3d372c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d3732.  v2:= v3.`j.e.d` @type ^`int`;
  #L3d3736.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d373c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d3742.  v1:= v3.`j.e.e` @type ^`int`;
  #L3d3746.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d374c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d3752.  v0:= temp @kind object;
  #L3d3754.  return v0 @kind object;
}
