record `j.r.b` @kind class @AccessFlag  extends `j.r.a` @kind class {
}
procedure `boolean` `a`(`char` v3 , `char` v4 , `boolean` v5 ) @signature `Lj/r/b;.a:(CCZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3d6c84.  v0:= 1I;
  #L3d6c86.  if v3 != v4 then goto L3d6c8c;
  #L3d6c8a.  return v0;
  #L3d6c8c.  v1:= 0I;
  #L3d6c8e.  if v5 != 0 then goto L3d6c94;
  #L3d6c92.  return v1;
  #L3d6c94.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3d6c9a.  v5:= temp;
  #L3d6c9c.  call temp:= `toUpperCase`(v4) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3d6ca2.  v2:= temp;
  #L3d6ca4.  if v5 != v2 then goto L3d6caa;
  #L3d6ca8.  return v0;
  #L3d6caa.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3d6cb0.  v3:= temp;
  #L3d6cb2.  call temp:= `toLowerCase`(v4) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3d6cb8.  v4:= temp;
  #L3d6cba.  if v3 != v4 then goto L3d6cc0;
  #L3d6cbe.  return v0;
  #L3d6cc0.  return v1;
}
