record `j.r.m` @kind class @AccessFlag  extends `j.r.l` @kind class {
}
procedure `int` `a`(`java.lang.CharSequence` v2 @kind object, `char` v3 , `int` v4 , `boolean` v5 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;CIZ)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3d7438.  v0:= "$this$indexOf" @kind object;
  #L3d743c.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7442.  if v5 != 0 then goto L3d745e;
  #L3d7446.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L3d744a.  if v0 != 0 then goto L3d7450;
  #L3d744e.  goto L3d745e;
  #L3d7450.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d7454.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3d745a.  v2:= temp;
  #L3d745c.  goto L3d7472;
  #L3d745e.  v0:= 1I;
  #L3d7460.  v0:= new `char`[v0];
  #L3d7464.  v1:= 0I;
  #L3d7466.  v0[v1]:= v3 @kind char;
  #L3d746a.  call temp:= `a`(v2, v0, v4, v5) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[CIZ)I` @kind static;
  #L3d7470.  v2:= temp;
  #L3d7472.  return v2;
}
procedure `int` `a`(`java.lang.CharSequence` v1 @kind object, `char` v2 , `int` v3 , `boolean` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L3d73d8.  v6:= v5 ^& 2;
  #L3d73dc.  v0:= 0I;
  #L3d73de.  if v6 == 0 then goto L3d73e4;
  #L3d73e2.  v3:= 0I;
  #L3d73e4.  v5:= v5 ^& 4;
  #L3d73e8.  if v5 == 0 then goto L3d73ee;
  #L3d73ec.  v4:= 0I;
  #L3d73ee.  call temp:= `a`(v1, v2, v3, v4) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;CIZ)I` @kind static;
  #L3d73f4.  v1:= temp;
  #L3d73f6.  return v1;
}
procedure `int` `a`(`java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IIZZ)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d72c4.  v0:= 0I;
  #L3d72c6.  if v11 != 0 then goto L3d72ee;
  #L3d72ca.  call temp:= `a`(v8, v0) @signature `Lj/p/e;.a:(II)I` @kind static;
  #L3d72d0.  v8:= temp;
  #L3d72d2.  v11:= new `j.p.d`;
  #L3d72d6.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d72dc.  v0:= temp;
  #L3d72de.  call temp:= `b`(v9, v0) @signature `Lj/p/e;.b:(II)I` @kind static;
  #L3d72e4.  v9:= temp;
  #L3d72e6.  call `<init>`(v11, v8, v9) @signature `Lj/p/d;.<init>:(II)V` @kind direct;
  #L3d72ec.  goto L3d730e;
  #L3d72ee.  call temp:= `c`(v6) @signature `Lj/r/m;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L3d72f4.  v11:= temp;
  #L3d72f6.  call temp:= `b`(v8, v11) @signature `Lj/p/e;.b:(II)I` @kind static;
  #L3d72fc.  v8:= temp;
  #L3d72fe.  call temp:= `a`(v9, v0) @signature `Lj/p/e;.a:(II)I` @kind static;
  #L3d7304.  v9:= temp;
  #L3d7306.  call temp:= `c`(v8, v9) @signature `Lj/p/e;.c:(II)Lj/p/b;` @kind static;
  #L3d730c.  v11:= temp @kind object;
  #L3d730e.  v8:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L3d7312.  if v8 == 0 then goto L3d7374;
  #L3d7316.  v8:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L3d731a.  if v8 == 0 then goto L3d7374;
  #L3d731e.  call temp:= `d`(v11) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d7324.  v8:= temp;
  #L3d7326.  call temp:= `f`(v11) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d732c.  v9:= temp;
  #L3d732e.  call temp:= `g`(v11) @signature `Lj/p/b;.g:()I` @kind virtual;
  #L3d7334.  v11:= temp;
  #L3d7336.  if v11 < 0 then goto L3d7340;
  #L3d733a.  if v8 > v9 then goto L3d73c2;
  #L3d733e.  goto L3d7344;
  #L3d7340.  if v8 < v9 then goto L3d73c2;
  #L3d7344.  v0:= v7 @kind object;
  #L3d7346.  v0:= (`java.lang.String`) v0 @kind object;
  #L3d734a.  v1:= 0I;
  #L3d734c.  v2:= v6 @kind object;
  #L3d734e.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d7352.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7358.  v4:= temp;
  #L3d735a.  v3:= v8;
  #L3d735c.  v5:= v10;
  #L3d735e.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lj/r/l;.a:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L3d7364.  v0:= temp;
  #L3d7366.  if v0 == 0 then goto L3d736c;
  #L3d736a.  return v8;
  #L3d736c.  if v8 == v9 then goto L3d73c2;
  #L3d7370.  v8:= v8 + v11 @kind int;
  #L3d7372.  goto L3d7344;
  #L3d7374.  call temp:= `d`(v11) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d737a.  v8:= temp;
  #L3d737c.  call temp:= `f`(v11) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d7382.  v9:= temp;
  #L3d7384.  call temp:= `g`(v11) @signature `Lj/p/b;.g:()I` @kind virtual;
  #L3d738a.  v11:= temp;
  #L3d738c.  if v11 < 0 then goto L3d7396;
  #L3d7390.  if v8 > v9 then goto L3d73c2;
  #L3d7394.  goto L3d739a;
  #L3d7396.  if v8 < v9 then goto L3d73c2;
  #L3d739a.  v1:= 0I;
  #L3d739c.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d73a2.  v4:= temp;
  #L3d73a4.  v0:= v7 @kind object;
  #L3d73a6.  v2:= v6 @kind object;
  #L3d73a8.  v3:= v8;
  #L3d73aa.  v5:= v10;
  #L3d73ac.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @kind static;
  #L3d73b2.  v0:= temp;
  #L3d73b4.  if v0 == 0 then goto L3d73ba;
  #L3d73b8.  return v8;
  #L3d73ba.  if v8 == v9 then goto L3d73c2;
  #L3d73be.  v8:= v8 + v11 @kind int;
  #L3d73c0.  goto L3d739a;
  #L3d73c2.  v6:= -1I;
  #L3d73c4.  return v6;
}
procedure `int` `a`(`java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `int` v12 , `java.lang.Object` v13 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IIZZILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d7290.  v12:= v12 ^& 16;
  #L3d7294.  if v12 == 0 then goto L3d729e;
  #L3d7298.  v11:= 0I;
  #L3d729a.  v5:= 0I;
  #L3d729c.  goto L3d72a0;
  #L3d729e.  v5:= v11;
  #L3d72a0.  v0:= v6 @kind object;
  #L3d72a2.  v1:= v7 @kind object;
  #L3d72a4.  v2:= v8;
  #L3d72a6.  v3:= v9;
  #L3d72a8.  v4:= v10;
  #L3d72aa.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IIZZ)I` @kind static;
  #L3d72b0.  v6:= temp;
  #L3d72b2.  return v6;
}
procedure `int` `a`(`java.lang.CharSequence` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d7484.  v0:= "$this$indexOf" @kind object;
  #L3d7488.  call `b`(v8, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d748e.  v0:= "string" @kind object;
  #L3d7492.  call `b`(v9, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7498.  if v11 != 0 then goto L3d74b4;
  #L3d749c.  v0:= instanceof @variable v8 @type ^`java.lang.String` @kind boolean;
  #L3d74a0.  if v0 != 0 then goto L3d74a6;
  #L3d74a4.  goto L3d74b4;
  #L3d74a6.  v8:= (`java.lang.String`) v8 @kind object;
  #L3d74aa.  call temp:= `indexOf`(v8, v9, v10) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L3d74b0.  v8:= temp;
  #L3d74b2.  goto L3d74d4;
  #L3d74b4.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d74ba.  v3:= temp;
  #L3d74bc.  v5:= 0I;
  #L3d74be.  v6:= 16I;
  #L3d74c2.  v7:= 0I;
  #L3d74c4.  v0:= v8 @kind object;
  #L3d74c6.  v1:= v9 @kind object;
  #L3d74c8.  v2:= v10;
  #L3d74ca.  v4:= v11;
  #L3d74cc.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IIZZILjava/lang/Object;)I` @kind static;
  #L3d74d2.  v8:= temp;
  #L3d74d4.  return v8;
}
procedure `int` `a`(`java.lang.CharSequence` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `boolean` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L3d7408.  v6:= v5 ^& 2;
  #L3d740c.  v0:= 0I;
  #L3d740e.  if v6 == 0 then goto L3d7414;
  #L3d7412.  v3:= 0I;
  #L3d7414.  v5:= v5 ^& 4;
  #L3d7418.  if v5 == 0 then goto L3d741e;
  #L3d741c.  v4:= 0I;
  #L3d741e.  call temp:= `a`(v1, v2, v3, v4) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L3d7424.  v1:= temp;
  #L3d7426.  return v1;
}
procedure `int` `a`(`java.lang.CharSequence` v7 @kind object, `char`[] v8 @kind object, `int` v9 , `boolean` v10 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[CIZ)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d74e8.  v0:= "$this$indexOfAny" @kind object;
  #L3d74ec.  call `b`(v7, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d74f2.  v0:= "chars" @kind object;
  #L3d74f6.  call `b`(v8, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d74fc.  v0:= 1I;
  #L3d74fe.  if v10 != 0 then goto L3d7526;
  #L3d7502.  v1:= length @variable v8;
  #L3d7504.  if v1 != v0 then goto L3d7526;
  #L3d7508.  v1:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L3d750c.  if v1 == 0 then goto L3d7526;
  #L3d7510.  call temp:= `a`(v8) @signature `Lj/l/a;.a:([C)C` @kind static;
  #L3d7516.  v8:= temp;
  #L3d7518.  v7:= (`java.lang.String`) v7 @kind object;
  #L3d751c.  call temp:= `indexOf`(v7, v8, v9) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3d7522.  v7:= temp;
  #L3d7524.  return v7;
  #L3d7526.  v1:= 0I;
  #L3d7528.  call temp:= `a`(v9, v1) @signature `Lj/p/e;.a:(II)I` @kind static;
  #L3d752e.  v9:= temp;
  #L3d7530.  call temp:= `c`(v7) @signature `Lj/r/m;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L3d7536.  v2:= temp;
  #L3d7538.  if v9 > v2 then goto L3d7578;
  #L3d753c.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3d7542.  v3:= temp;
  #L3d7544.  v4:= length @variable v8;
  #L3d7546.  v5:= 0I;
  #L3d7548.  if v5 >= v4 then goto L3d7566;
  #L3d754c.  v6:= v8[v5] @kind char;
  #L3d7550.  call temp:= `a`(v6, v3, v10) @signature `Lj/r/b;.a:(CCZ)Z` @kind static;
  #L3d7556.  v6:= temp;
  #L3d7558.  if v6 == 0 then goto L3d7560;
  #L3d755c.  v3:= 1I;
  #L3d755e.  goto L3d7568;
  #L3d7560.  v5:= v5 + 1;
  #L3d7564.  goto L3d7548;
  #L3d7566.  v3:= 0I;
  #L3d7568.  if v3 == 0 then goto L3d756e;
  #L3d756c.  return v9;
  #L3d756e.  if v9 == v2 then goto L3d7578;
  #L3d7572.  v9:= v9 + 1;
  #L3d7576.  goto L3d753c;
  #L3d7578.  v7:= -1I;
  #L3d757a.  return v7;
}
procedure `j.g` `a`(`java.lang.CharSequence` v0 @kind object, `java.util.Collection` v1 @kind object, `int` v2 , `boolean` v3 , `boolean` v4 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lj/g;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3d7a1c.  call temp:= `b`(v0, v1, v2, v3, v4) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lj/g;` @kind static;
  #L3d7a22.  v0:= temp @kind object;
  #L3d7a24.  return v0 @kind object;
}
procedure `j.q.a` `a`(`java.lang.CharSequence` v2 @kind object, `java.lang.String`[] v3 @kind object, `int` v4 , `boolean` v5 , `int` v6 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;IZI)Lj/q/a;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3d7c60.  if v6 < 0 then goto L3d7c68;
  #L3d7c64.  v0:= 1I;
  #L3d7c66.  goto L3d7c6a;
  #L3d7c68.  v0:= 0I;
  #L3d7c6a.  if v0 == 0 then goto L3d7c8c;
  #L3d7c6e.  call temp:= `a`(v3) @signature `Lj/l/a;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3d7c74.  v3:= temp @kind object;
  #L3d7c76.  v0:= new `j.r.c`;
  #L3d7c7a.  v1:= new `j.r.m$a`;
  #L3d7c7e.  call `<init>`(v1, v3, v5) @signature `Lj/r/m$a;.<init>:(Ljava/util/List;Z)V` @kind direct;
  #L3d7c84.  call `<init>`(v0, v2, v4, v6, v1) @signature `Lj/r/c;.<init>:(Ljava/lang/CharSequence;IILj/o/a/c;)V` @kind direct;
  #L3d7c8a.  return v0 @kind object;
  #L3d7c8c.  v2:= new `java.lang.StringBuilder`;
  #L3d7c90.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d7c96.  v3:= "Limit must be non-negative, but was " @kind object;
  #L3d7c9a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7ca0.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7ca6.  v3:= 46I;
  #L3d7caa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7cb0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d7cb6.  v2:= temp @kind object;
  #L3d7cb8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3d7cbc.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d7cc2.  v2:= temp @kind object;
  #L3d7cc4.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d7cca.  throw v3;
}
procedure `j.q.a` `a`(`java.lang.CharSequence` v1 @kind object, `java.lang.String`[] v2 @kind object, `int` v3 , `boolean` v4 , `int` v5 , `int` v6 , `java.lang.Object` v7 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;IZIILjava/lang/Object;)Lj/q/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3d7c24.  v7:= v6 ^& 2;
  #L3d7c28.  v0:= 0I;
  #L3d7c2a.  if v7 == 0 then goto L3d7c30;
  #L3d7c2e.  v3:= 0I;
  #L3d7c30.  v7:= v6 ^& 4;
  #L3d7c34.  if v7 == 0 then goto L3d7c3a;
  #L3d7c38.  v4:= 0I;
  #L3d7c3a.  v6:= v6 ^& 8;
  #L3d7c3e.  if v6 == 0 then goto L3d7c44;
  #L3d7c42.  v5:= 0I;
  #L3d7c44.  call temp:= `a`(v1, v2, v3, v4, v5) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;IZI)Lj/q/a;` @kind static;
  #L3d7c4a.  v1:= temp @kind object;
  #L3d7c4c.  return v1 @kind object;
}
procedure `java.lang.CharSequence` `a`(`java.lang.CharSequence` v2 @kind object, `int` v3 , `char` v4 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;IC)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3d7618.  v0:= "$this$padStart" @kind object;
  #L3d761c.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7622.  if v3 < 0 then goto L3d7678;
  #L3d7626.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d762c.  v0:= temp;
  #L3d762e.  if v3 > v0 then goto L3d7646;
  #L3d7632.  v3:= 0I;
  #L3d7634.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d763a.  v4:= temp;
  #L3d763c.  call temp:= `subSequence`(v2, v3, v4) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d7642.  v2:= temp @kind object;
  #L3d7644.  return v2 @kind object;
  #L3d7646.  v0:= new `java.lang.StringBuilder`;
  #L3d764a.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3d7650.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7656.  v1:= temp;
  #L3d7658.  v3:= v3 - v1 @kind int;
  #L3d765a.  v1:= 1I;
  #L3d765c.  if v1 > v3 then goto L3d7670;
  #L3d7660.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7666.  if v1 == v3 then goto L3d7670;
  #L3d766a.  v1:= v1 + 1;
  #L3d766e.  goto L3d7660;
  #L3d7670.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7676.  return v0 @kind object;
  #L3d7678.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d767c.  v4:= new `java.lang.StringBuilder`;
  #L3d7680.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d7686.  v0:= "Desired length " @kind object;
  #L3d768a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7690.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7696.  v3:= " is less than zero." @kind object;
  #L3d769a.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d76a0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d76a6.  v3:= temp @kind object;
  #L3d76a8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d76ae.  throw v2;
}
procedure `java.lang.String` `a`(`java.lang.CharSequence` v1 @kind object, `j.p.d` v2 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Lj/p/d;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3d7760.  v0:= "$this$substring" @kind object;
  #L3d7764.  call `b`(v1, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d776a.  v0:= "range" @kind object;
  #L3d776e.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7774.  call temp:= `j`(v2) @signature `Lj/p/d;.j:()Ljava/lang/Integer;` @kind virtual;
  #L3d777a.  v0:= temp @kind object;
  #L3d777c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d7782.  v0:= temp;
  #L3d7784.  call temp:= `i`(v2) @signature `Lj/p/d;.i:()Ljava/lang/Integer;` @kind virtual;
  #L3d778a.  v2:= temp @kind object;
  #L3d778c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d7792.  v2:= temp;
  #L3d7794.  v2:= v2 + 1;
  #L3d7798.  call temp:= `subSequence`(v1, v0, v2) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d779e.  v1:= temp @kind object;
  #L3d77a0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d77a6.  v1:= temp @kind object;
  #L3d77a8.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lj/r/m;.a:(Ljava/lang/String;IC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d7734.  v0:= "$this$padStart" @kind object;
  #L3d7738.  call `b`(v1, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d773e.  call temp:= `a`(v1, v2, v3) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;IC)Ljava/lang/CharSequence;` @kind static;
  #L3d7744.  v1:= temp @kind object;
  #L3d7746.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d774c.  v1:= temp @kind object;
  #L3d774e.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `char`[] v4 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/String;[C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d77bc.  v0:= "$this$trimStart" @kind object;
  #L3d77c0.  call `b`(v3, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d77c6.  v0:= "chars" @kind object;
  #L3d77ca.  call `b`(v4, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d77d0.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d77d6.  v0:= temp;
  #L3d77d8.  v1:= 0I;
  #L3d77da.  if v1 >= v0 then goto L3d780a;
  #L3d77de.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3d77e4.  v2:= temp;
  #L3d77e6.  call temp:= `a`(v4, v2) @signature `Lj/l/a;.a:([CC)Z` @kind static;
  #L3d77ec.  v2:= temp;
  #L3d77ee.  if v2 != 0 then goto L3d7804;
  #L3d77f2.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d77f8.  v4:= temp;
  #L3d77fa.  call temp:= `subSequence`(v3, v1, v4) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d7800.  v3:= temp @kind object;
  #L3d7802.  goto L3d780e;
  #L3d7804.  v1:= v1 + 1;
  #L3d7808.  goto L3d77da;
  #L3d780a.  v3:= "" @kind object;
  #L3d780e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d7814.  v3:= temp @kind object;
  #L3d7816.  return v3 @kind object;
}
procedure `java.util.List` `a`(`java.lang.CharSequence` v7 @kind object, `java.lang.String` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;ZI)Ljava/util/List;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d7828.  v0:= 0I;
  #L3d782a.  v1:= 1I;
  #L3d782c.  if v10 < 0 then goto L3d7834;
  #L3d7830.  v2:= 1I;
  #L3d7832.  goto L3d7836;
  #L3d7834.  v2:= 0I;
  #L3d7836.  if v2 == 0 then goto L3d78e6;
  #L3d783a.  call temp:= `a`(v7, v8, v0, v9) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L3d7840.  v2:= temp;
  #L3d7842.  v3:= -1I;
  #L3d7844.  if v2 == v3 then goto L3d78d4;
  #L3d7848.  if v10 != v1 then goto L3d784e;
  #L3d784c.  goto L3d78d4;
  #L3d784e.  if v10 <= 0 then goto L3d7856;
  #L3d7852.  v4:= 1I;
  #L3d7854.  goto L3d7858;
  #L3d7856.  v4:= 0I;
  #L3d7858.  v5:= new `java.util.ArrayList`;
  #L3d785c.  v6:= 10I;
  #L3d7860.  if v4 == 0 then goto L3d786c;
  #L3d7864.  call temp:= `b`(v10, v6) @signature `Lj/p/e;.b:(II)I` @kind static;
  #L3d786a.  v6:= temp;
  #L3d786c.  call `<init>`(v5, v6) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3d7872.  call temp:= `subSequence`(v7, v0, v2) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d7878.  v0:= temp @kind object;
  #L3d787a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d7880.  v0:= temp @kind object;
  #L3d7882.  call temp:= `add`(v5, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d7888.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d788e.  v0:= temp;
  #L3d7890.  v0:= v0 + v2 @kind int;
  #L3d7892.  if v4 == 0 then goto L3d78a8;
  #L3d7896.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3d789c.  v2:= temp;
  #L3d789e.  v6:= v10 + -1;
  #L3d78a2.  if v2 != v6 then goto L3d78a8;
  #L3d78a6.  goto L3d78b4;
  #L3d78a8.  call temp:= `a`(v7, v8, v0, v9) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L3d78ae.  v2:= temp;
  #L3d78b0.  if v2 != v3 then goto L3d7872;
  #L3d78b4.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d78ba.  v8:= temp;
  #L3d78bc.  call temp:= `subSequence`(v7, v0, v8) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d78c2.  v7:= temp @kind object;
  #L3d78c4.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d78ca.  v7:= temp @kind object;
  #L3d78cc.  call temp:= `add`(v5, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d78d2.  return v5 @kind object;
  #L3d78d4.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d78da.  v7:= temp @kind object;
  #L3d78dc.  call temp:= `a`(v7) @signature `Lj/l/g;.a:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3d78e2.  v7:= temp @kind object;
  #L3d78e4.  return v7 @kind object;
  #L3d78e6.  v7:= new `java.lang.StringBuilder`;
  #L3d78ea.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d78f0.  v8:= "Limit must be non-negative, but was " @kind object;
  #L3d78f4.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d78fa.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7900.  v8:= 46I;
  #L3d7904.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d790a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d7910.  v7:= temp @kind object;
  #L3d7912.  v8:= new `java.lang.IllegalArgumentException`;
  #L3d7916.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d791c.  v7:= temp @kind object;
  #L3d791e.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d7924.  throw v8;
}
procedure `java.util.List` `a`(`java.lang.CharSequence` v7 @kind object, `java.lang.String`[] v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;ZI)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d7968.  v0:= "$this$split" @kind object;
  #L3d796c.  call `b`(v7, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7972.  v0:= "delimiters" @kind object;
  #L3d7976.  call `b`(v8, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d797c.  v0:= length @variable v8;
  #L3d797e.  v1:= 1I;
  #L3d7980.  if v0 != v1 then goto L3d79a6;
  #L3d7984.  v0:= 0I;
  #L3d7986.  v2:= v8[v0] @kind object;
  #L3d798a.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7990.  v3:= temp;
  #L3d7992.  if v3 != 0 then goto L3d7998;
  #L3d7996.  v0:= 1I;
  #L3d7998.  if v0 != 0 then goto L3d79a6;
  #L3d799c.  call temp:= `a`(v7, v2, v9, v10) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;ZI)Ljava/util/List;` @kind static;
  #L3d79a2.  v7:= temp @kind object;
  #L3d79a4.  return v7 @kind object;
  #L3d79a6.  v2:= 0I;
  #L3d79a8.  v5:= 2I;
  #L3d79aa.  v6:= 0I;
  #L3d79ac.  v0:= v7 @kind object;
  #L3d79ae.  v1:= v8 @kind object;
  #L3d79b0.  v3:= v9;
  #L3d79b2.  v4:= v10;
  #L3d79b4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;IZIILjava/lang/Object;)Lj/q/a;` @kind static;
  #L3d79ba.  v8:= temp @kind object;
  #L3d79bc.  call temp:= `a`(v8) @signature `Lj/q/b;.a:(Lj/q/a;)Ljava/lang/Iterable;` @kind static;
  #L3d79c2.  v8:= temp @kind object;
  #L3d79c4.  v9:= new `java.util.ArrayList`;
  #L3d79c8.  v10:= 10I;
  #L3d79cc.  call temp:= `a`(v8, v10) @signature `Lj/l/g;.a:(Ljava/lang/Iterable;I)I` @kind static;
  #L3d79d2.  v10:= temp;
  #L3d79d4.  call `<init>`(v9, v10) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3d79da.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d79e0.  v8:= temp @kind object;
  #L3d79e2.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d79e8.  v10:= temp;
  #L3d79ea.  if v10 == 0 then goto L3d7a0a;
  #L3d79ee.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d79f4.  v10:= temp @kind object;
  #L3d79f6.  v10:= (`j.p.d`) v10 @kind object;
  #L3d79fa.  call temp:= `a`(v7, v10) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Lj/p/d;)Ljava/lang/String;` @kind static;
  #L3d7a00.  v10:= temp @kind object;
  #L3d7a02.  call temp:= `add`(v9, v10) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d7a08.  goto L3d79e2;
  #L3d7a0a.  return v9 @kind object;
}
procedure `java.util.List` `a`(`java.lang.CharSequence` v1 @kind object, `java.lang.String`[] v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;ZIILjava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L3d7938.  v6:= v5 ^& 2;
  #L3d793c.  v0:= 0I;
  #L3d793e.  if v6 == 0 then goto L3d7944;
  #L3d7942.  v3:= 0I;
  #L3d7944.  v5:= v5 ^& 4;
  #L3d7948.  if v5 == 0 then goto L3d794e;
  #L3d794c.  v4:= 0I;
  #L3d794e.  call temp:= `a`(v1, v2, v3, v4) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;[Ljava/lang/String;ZI)Ljava/util/List;` @kind static;
  #L3d7954.  v1:= temp @kind object;
  #L3d7956.  return v1 @kind object;
}
procedure `boolean` `a`(`java.lang.CharSequence` v4 @kind object, `int` v5 , `java.lang.CharSequence` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d71e4.  v0:= "$this$regionMatchesImpl" @kind object;
  #L3d71e8.  call `b`(v4, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d71ee.  v0:= "other" @kind object;
  #L3d71f2.  call `b`(v6, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d71f8.  v0:= 0I;
  #L3d71fa.  if v7 < 0 then goto L3d7256;
  #L3d71fe.  if v5 < 0 then goto L3d7256;
  #L3d7202.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7208.  v1:= temp;
  #L3d720a.  v1:= v1 - v8 @kind int;
  #L3d720c.  if v5 > v1 then goto L3d7256;
  #L3d7210.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7216.  v1:= temp;
  #L3d7218.  v1:= v1 - v8 @kind int;
  #L3d721a.  if v7 <= v1 then goto L3d7220;
  #L3d721e.  goto L3d7256;
  #L3d7220.  v1:= 0I;
  #L3d7222.  if v1 >= v8 then goto L3d7252;
  #L3d7226.  v2:= v5 + v1 @kind int;
  #L3d722a.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3d7230.  v2:= temp;
  #L3d7232.  v3:= v7 + v1 @kind int;
  #L3d7236.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3d723c.  v3:= temp;
  #L3d723e.  call temp:= `a`(v2, v3, v9) @signature `Lj/r/b;.a:(CCZ)Z` @kind static;
  #L3d7244.  v2:= temp;
  #L3d7246.  if v2 != 0 then goto L3d724c;
  #L3d724a.  return v0;
  #L3d724c.  v1:= v1 + 1;
  #L3d7250.  goto L3d7222;
  #L3d7252.  v4:= 1I;
  #L3d7254.  return v4;
  #L3d7256.  return v0;
}
procedure `int` `b`(`java.lang.CharSequence` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d75c0.  v0:= "$this$lastIndexOf" @kind object;
  #L3d75c4.  call `b`(v6, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d75ca.  v0:= "string" @kind object;
  #L3d75ce.  call `b`(v7, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d75d4.  if v9 != 0 then goto L3d75f0;
  #L3d75d8.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L3d75dc.  if v0 != 0 then goto L3d75e2;
  #L3d75e0.  goto L3d75f0;
  #L3d75e2.  v6:= (`java.lang.String`) v6 @kind object;
  #L3d75e6.  call temp:= `lastIndexOf`(v6, v7, v8) @signature `Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L3d75ec.  v6:= temp;
  #L3d75ee.  goto L3d7604;
  #L3d75f0.  v3:= 0I;
  #L3d75f2.  v5:= 1I;
  #L3d75f4.  v0:= v6 @kind object;
  #L3d75f6.  v1:= v7 @kind object;
  #L3d75f8.  v2:= v8;
  #L3d75fa.  v4:= v9;
  #L3d75fc.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;IIZZ)I` @kind static;
  #L3d7602.  v6:= temp;
  #L3d7604.  return v6;
}
procedure `int` `b`(`java.lang.CharSequence` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3d758c.  v5:= v4 ^& 2;
  #L3d7590.  if v5 == 0 then goto L3d759c;
  #L3d7594.  call temp:= `c`(v0) @signature `Lj/r/m;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L3d759a.  v2:= temp;
  #L3d759c.  v4:= v4 ^& 4;
  #L3d75a0.  if v4 == 0 then goto L3d75a6;
  #L3d75a4.  v3:= 0I;
  #L3d75a6.  call temp:= `b`(v0, v1, v2, v3) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/lang/String;IZ)I` @kind static;
  #L3d75ac.  v0:= temp;
  #L3d75ae.  return v0;
}
procedure `j.g` `b`(`java.lang.CharSequence` v10 @kind object, `java.util.Collection` v11 @kind object, `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lj/g;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3d7a38.  v0:= 0I;
  #L3d7a3a.  if v13 != 0 then goto L3d7a92;
  #L3d7a3e.  call temp:= `size`(v11) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3d7a44.  v1:= temp;
  #L3d7a46.  v2:= 1I;
  #L3d7a48.  if v1 != v2 then goto L3d7a92;
  #L3d7a4c.  call temp:= `c`(v11) @signature `Lj/l/g;.c:(Ljava/lang/Iterable;)Ljava/lang/Object;` @kind static;
  #L3d7a52.  v11:= temp @kind object;
  #L3d7a54.  v11:= (`java.lang.String`) v11 @kind object;
  #L3d7a58.  v4:= 0I;
  #L3d7a5a.  v5:= 4I;
  #L3d7a5c.  v6:= 0I;
  #L3d7a5e.  v1:= v10 @kind object;
  #L3d7a60.  v2:= v11 @kind object;
  #L3d7a62.  v3:= v12;
  #L3d7a64.  if v14 != 0 then goto L3d7a72;
  #L3d7a68.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L3d7a6e.  v10:= temp;
  #L3d7a70.  goto L3d7a7a;
  #L3d7a72.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L3d7a78.  v10:= temp;
  #L3d7a7a.  if v10 >= 0 then goto L3d7a80;
  #L3d7a7e.  goto L3d7a90;
  #L3d7a80.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d7a86.  v10:= temp @kind object;
  #L3d7a88.  call temp:= `a`(v10, v11) @signature `Lj/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lj/g;` @kind static;
  #L3d7a8e.  v0:= temp @kind object;
  #L3d7a90.  return v0 @kind object;
  #L3d7a92.  v1:= 0I;
  #L3d7a94.  if v14 != 0 then goto L3d7ab4;
  #L3d7a98.  call temp:= `a`(v12, v1) @signature `Lj/p/e;.a:(II)I` @kind static;
  #L3d7a9e.  v12:= temp;
  #L3d7aa0.  v14:= new `j.p.d`;
  #L3d7aa4.  call temp:= `length`(v10) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7aaa.  v1:= temp;
  #L3d7aac.  call `<init>`(v14, v12, v1) @signature `Lj/p/d;.<init>:(II)V` @kind direct;
  #L3d7ab2.  goto L3d7acc;
  #L3d7ab4.  call temp:= `c`(v10) @signature `Lj/r/m;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L3d7aba.  v14:= temp;
  #L3d7abc.  call temp:= `b`(v12, v14) @signature `Lj/p/e;.b:(II)I` @kind static;
  #L3d7ac2.  v12:= temp;
  #L3d7ac4.  call temp:= `c`(v12, v1) @signature `Lj/p/e;.c:(II)Lj/p/b;` @kind static;
  #L3d7aca.  v14:= temp @kind object;
  #L3d7acc.  v12:= instanceof @variable v10 @type ^`java.lang.String` @kind boolean;
  #L3d7ad0.  if v12 == 0 then goto L3d7b62;
  #L3d7ad4.  call temp:= `d`(v14) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d7ada.  v12:= temp;
  #L3d7adc.  call temp:= `f`(v14) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d7ae2.  v1:= temp;
  #L3d7ae4.  call temp:= `g`(v14) @signature `Lj/p/b;.g:()I` @kind virtual;
  #L3d7aea.  v14:= temp;
  #L3d7aec.  if v14 < 0 then goto L3d7af6;
  #L3d7af0.  if v12 > v1 then goto L3d7bdc;
  #L3d7af4.  goto L3d7afa;
  #L3d7af6.  if v12 < v1 then goto L3d7bdc;
  #L3d7afa.  call temp:= `iterator`(v11) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d7b00.  v8:= temp @kind object;
  #L3d7b02.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d7b08.  v2:= temp;
  #L3d7b0a.  if v2 == 0 then goto L3d7b3e;
  #L3d7b0e.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d7b14.  v9:= temp @kind object;
  #L3d7b16.  v2:= v9 @kind object;
  #L3d7b18.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d7b1c.  v3:= 0I;
  #L3d7b1e.  v4:= v10 @kind object;
  #L3d7b20.  v4:= (`java.lang.String`) v4 @kind object;
  #L3d7b24.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d7b2a.  v6:= temp;
  #L3d7b2c.  v5:= v12;
  #L3d7b2e.  v7:= v13;
  #L3d7b30.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lj/r/l;.a:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L3d7b36.  v2:= temp;
  #L3d7b38.  if v2 == 0 then goto L3d7b02;
  #L3d7b3c.  goto L3d7b40;
  #L3d7b3e.  v9:= v0 @kind object;
  #L3d7b40.  v9:= (`java.lang.String`) v9 @kind object;
  #L3d7b44.  if v9 == 0 then goto L3d7b5a;
  #L3d7b48.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d7b4e.  v10:= temp @kind object;
  #L3d7b50.  call temp:= `a`(v10, v9) @signature `Lj/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lj/g;` @kind static;
  #L3d7b56.  v10:= temp @kind object;
  #L3d7b58.  return v10 @kind object;
  #L3d7b5a.  if v12 == v1 then goto L3d7bdc;
  #L3d7b5e.  v12:= v12 + v14 @kind int;
  #L3d7b60.  goto L3d7afa;
  #L3d7b62.  call temp:= `d`(v14) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d7b68.  v12:= temp;
  #L3d7b6a.  call temp:= `f`(v14) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d7b70.  v1:= temp;
  #L3d7b72.  call temp:= `g`(v14) @signature `Lj/p/b;.g:()I` @kind virtual;
  #L3d7b78.  v14:= temp;
  #L3d7b7a.  if v14 < 0 then goto L3d7b84;
  #L3d7b7e.  if v12 > v1 then goto L3d7bdc;
  #L3d7b82.  goto L3d7b88;
  #L3d7b84.  if v12 < v1 then goto L3d7bdc;
  #L3d7b88.  call temp:= `iterator`(v11) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d7b8e.  v8:= temp @kind object;
  #L3d7b90.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d7b96.  v2:= temp;
  #L3d7b98.  if v2 == 0 then goto L3d7bc8;
  #L3d7b9c.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d7ba2.  v9:= temp @kind object;
  #L3d7ba4.  v2:= v9 @kind object;
  #L3d7ba6.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d7baa.  v3:= 0I;
  #L3d7bac.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d7bb2.  v6:= temp;
  #L3d7bb4.  v4:= v10 @kind object;
  #L3d7bb6.  v5:= v12;
  #L3d7bb8.  v7:= v13;
  #L3d7bba.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lj/r/m;.a:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;IIZ)Z` @kind static;
  #L3d7bc0.  v2:= temp;
  #L3d7bc2.  if v2 == 0 then goto L3d7b90;
  #L3d7bc6.  goto L3d7bca;
  #L3d7bc8.  v9:= v0 @kind object;
  #L3d7bca.  v9:= (`java.lang.String`) v9 @kind object;
  #L3d7bce.  if v9 == 0 then goto L3d7bd4;
  #L3d7bd2.  goto L3d7b48;
  #L3d7bd4.  if v12 == v1 then goto L3d7bdc;
  #L3d7bd8.  v12:= v12 + v14 @kind int;
  #L3d7bda.  goto L3d7b88;
  #L3d7bdc.  return v0 @kind object;
}
procedure `j.p.d` `b`(`java.lang.CharSequence` v2 @kind object) @signature `Lj/r/m;.b:(Ljava/lang/CharSequence;)Lj/p/d;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3d7bf0.  v0:= "$this$indices" @kind object;
  #L3d7bf4.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7bfa.  v0:= new `j.p.d`;
  #L3d7bfe.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7c04.  v2:= temp;
  #L3d7c06.  v2:= v2 + -1;
  #L3d7c0a.  v1:= 0I;
  #L3d7c0c.  call `<init>`(v0, v1, v2) @signature `Lj/p/d;.<init>:(II)V` @kind direct;
  #L3d7c12.  return v0 @kind object;
}
procedure `int` `c`(`java.lang.CharSequence` v1 @kind object) @signature `Lj/r/m;.c:(Ljava/lang/CharSequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3d7268.  v0:= "$this$lastIndex" @kind object;
  #L3d726c.  call `b`(v1, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d7272.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d7278.  v1:= temp;
  #L3d727a.  v1:= v1 + -1;
  #L3d727e.  return v1;
}
procedure `java.lang.CharSequence` `d`(`java.lang.CharSequence` v5 @kind object) @signature `Lj/r/m;.d:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d76c0.  v0:= "$this$trim" @kind object;
  #L3d76c4.  call `b`(v5, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d76ca.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3d76d0.  v0:= temp;
  #L3d76d2.  v1:= 1I;
  #L3d76d4.  v0:= v0 - v1 @kind int;
  #L3d76d6.  v2:= 0I;
  #L3d76d8.  v3:= 0I;
  #L3d76da.  if v2 > v0 then goto L3d7716;
  #L3d76de.  if v3 != 0 then goto L3d76e6;
  #L3d76e2.  v4:= v2;
  #L3d76e4.  goto L3d76e8;
  #L3d76e6.  v4:= v0;
  #L3d76e8.  call temp:= `charAt`(v5, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3d76ee.  v4:= temp;
  #L3d76f0.  call temp:= `a`(v4) @signature `Lj/r/a;.a:(C)Z` @kind static;
  #L3d76f6.  v4:= temp;
  #L3d76f8.  if v3 != 0 then goto L3d770a;
  #L3d76fc.  if v4 != 0 then goto L3d7704;
  #L3d7700.  v3:= 1I;
  #L3d7702.  goto L3d76da;
  #L3d7704.  v2:= v2 + 1;
  #L3d7708.  goto L3d76da;
  #L3d770a.  if v4 != 0 then goto L3d7710;
  #L3d770e.  goto L3d7716;
  #L3d7710.  v0:= v0 + -1;
  #L3d7714.  goto L3d76da;
  #L3d7716.  v0:= v0 + v1 @kind int;
  #L3d7718.  call temp:= `subSequence`(v5, v2, v0) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3d771e.  v5:= temp @kind object;
  #L3d7720.  return v5 @kind object;
}
