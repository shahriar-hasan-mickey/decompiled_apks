record `j.p.d` @kind class @AccessFlag PUBLIC_FINAL extends `j.p.b` @kind class, `j.p.a` @kind interface {
}
global `j.p.d` `@@j.p.d.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `j.p.d$a` `@@j.p.d.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj/p/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d6a00.  v0:= new `j.p.d$a`;
  #L3d6a04.  v1:= 0I;
  #L3d6a06.  call `<init>`(v0, v1) @signature `Lj/p/d$a;.<init>:(Lj/o/b/b;)V` @kind direct;
  #L3d6a0c.  `@@j.p.d.g` @type ^`j.p.d$a` := v0 @kind object;
  #L3d6a10.  v0:= new `j.p.d`;
  #L3d6a14.  v1:= 1I;
  #L3d6a16.  v2:= 0I;
  #L3d6a18.  call `<init>`(v0, v1, v2) @signature `Lj/p/d;.<init>:(II)V` @kind direct;
  #L3d6a1e.  `@@j.p.d.f` @type ^`j.p.d` := v0 @kind object;
  #L3d6a22.  return @kind void;
}
procedure `void` `<init>`(`j.p.d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lj/p/d;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d6a34.  v0:= 1I;
  #L3d6a36.  call `<init>`(v1, v2, v3, v0) @signature `Lj/p/b;.<init>:(III)V` @kind direct;
  #L3d6a3c.  return @kind void;
}
procedure `j.p.d` `k`() @signature `Lj/p/d;.k:()Lj/p/d;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L3d69e8.  v0:= `@@j.p.d.f` @type ^`j.p.d` @kind object;
  #L3d69ec.  return v0 @kind object;
}
procedure `boolean` `equals`(`j.p.d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lj/p/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6884.  v0:= instanceof @variable v3 @type ^`j.p.d` @kind boolean;
  #L3d6888.  if v0 == 0 then goto L3d68da;
  #L3d688c.  call temp:= `isEmpty`(v2) @signature `Lj/p/d;.isEmpty:()Z` @kind virtual;
  #L3d6892.  v0:= temp;
  #L3d6894.  if v0 == 0 then goto L3d68aa;
  #L3d6898.  v0:= v3 @kind object;
  #L3d689a.  v0:= (`j.p.d`) v0 @kind object;
  #L3d689e.  call temp:= `isEmpty`(v0) @signature `Lj/p/d;.isEmpty:()Z` @kind virtual;
  #L3d68a4.  v0:= temp;
  #L3d68a6.  if v0 != 0 then goto L3d68d6;
  #L3d68aa.  call temp:= `d`(v2) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d68b0.  v0:= temp;
  #L3d68b2.  v3:= (`j.p.d`) v3 @kind object;
  #L3d68b6.  call temp:= `d`(v3) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d68bc.  v1:= temp;
  #L3d68be.  if v0 != v1 then goto L3d68da;
  #L3d68c2.  call temp:= `f`(v2) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d68c8.  v0:= temp;
  #L3d68ca.  call temp:= `f`(v3) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d68d0.  v3:= temp;
  #L3d68d2.  if v0 != v3 then goto L3d68da;
  #L3d68d6.  v3:= 1I;
  #L3d68d8.  goto L3d68dc;
  #L3d68da.  v3:= 0I;
  #L3d68dc.  return v3;
}
procedure `int` `hashCode`(`j.p.d` v2 @kind this) @signature `Lj/p/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d691c.  call temp:= `isEmpty`(v2) @signature `Lj/p/d;.isEmpty:()Z` @kind virtual;
  #L3d6922.  v0:= temp;
  #L3d6924.  if v0 == 0 then goto L3d692c;
  #L3d6928.  v0:= -1I;
  #L3d692a.  goto L3d6942;
  #L3d692c.  call temp:= `d`(v2) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d6932.  v0:= temp;
  #L3d6934.  v0:= v0 * 31;
  #L3d6938.  call temp:= `f`(v2) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d693e.  v1:= temp;
  #L3d6940.  v0:= v0 + v1 @kind int;
  #L3d6942.  return v0;
}
procedure `java.lang.Integer` `i`(`j.p.d` v1 @kind this) @signature `Lj/p/d;.i:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6954.  call temp:= `f`(v1) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d695a.  v0:= temp;
  #L3d695c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d6962.  v0:= temp @kind object;
  #L3d6964.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`j.p.d` v2 @kind this) @signature `Lj/p/d;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d68f0.  call temp:= `d`(v2) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d68f6.  v0:= temp;
  #L3d68f8.  call temp:= `f`(v2) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d68fe.  v1:= temp;
  #L3d6900.  if v0 <= v1 then goto L3d6908;
  #L3d6904.  v0:= 1I;
  #L3d6906.  goto L3d690a;
  #L3d6908.  v0:= 0I;
  #L3d690a.  return v0;
}
procedure `java.lang.Integer` `j`(`j.p.d` v1 @kind this) @signature `Lj/p/d;.j:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6978.  call temp:= `d`(v1) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d697e.  v0:= temp;
  #L3d6980.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d6986.  v0:= temp @kind object;
  #L3d6988.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`j.p.d` v2 @kind this) @signature `Lj/p/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d699c.  v0:= new `java.lang.StringBuilder`;
  #L3d69a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d69a6.  call temp:= `d`(v2) @signature `Lj/p/b;.d:()I` @kind virtual;
  #L3d69ac.  v1:= temp;
  #L3d69ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d69b4.  v1:= ".." @kind object;
  #L3d69b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d69be.  call temp:= `f`(v2) @signature `Lj/p/b;.f:()I` @kind virtual;
  #L3d69c4.  v1:= temp;
  #L3d69c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d69cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d69d2.  v0:= temp @kind object;
  #L3d69d4.  return v0 @kind object;
}
