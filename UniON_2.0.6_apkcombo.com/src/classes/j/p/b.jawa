record `j.p.b` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `j.o.b.h.a` @kind interface {
  `int` `j.p.b.b` @AccessFlag PRIVATE_FINAL;
  `int` `j.p.b.c` @AccessFlag PRIVATE_FINAL;
  `int` `j.p.b.d` @AccessFlag PRIVATE_FINAL;
}
global `j.p.b$a` `@@j.p.b.e` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj/p/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d67bc.  v0:= new `j.p.b$a`;
  #L3d67c0.  v1:= 0I;
  #L3d67c2.  call `<init>`(v0, v1) @signature `Lj/p/b$a;.<init>:(Lj/o/b/b;)V` @kind direct;
  #L3d67c8.  `@@j.p.b.e` @type ^`j.p.b$a` := v0 @kind object;
  #L3d67cc.  return @kind void;
}
procedure `void` `<init>`(`j.p.b` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lj/p/b;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d67e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d67e6.  if v4 == 0 then goto L3d6818;
  #L3d67ea.  v0:= -2147483648I;
  #L3d67ee.  if v4 == v0 then goto L3d6808;
  #L3d67f2.  v1.`j.p.b.b` @type ^`int` := v2;
  #L3d67f6.  call temp:= `b`(v2, v3, v4) @signature `Lj/m/c;.b:(III)I` @kind static;
  #L3d67fc.  v2:= temp;
  #L3d67fe.  v1.`j.p.b.c` @type ^`int` := v2;
  #L3d6802.  v1.`j.p.b.d` @type ^`int` := v4;
  #L3d6806.  return @kind void;
  #L3d6808.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d680c.  v3:= "Step must be greater than Int.MIN_VALUE to avoid overflow on negation." @kind object;
  #L3d6810.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d6816.  throw v2;
  #L3d6818.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d681c.  v3:= "Step must be non-zero." @kind object;
  #L3d6820.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d6826.  throw v2;
}
procedure `int` `d`(`j.p.b` v1 @kind this) @signature `Lj/p/b;.d:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d6660.  v0:= v1.`j.p.b.b` @type ^`int`;
  #L3d6664.  return v0;
}
procedure `boolean` `equals`(`j.p.b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lj/p/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d65bc.  v0:= instanceof @variable v3 @type ^`j.p.b` @kind boolean;
  #L3d65c0.  if v0 == 0 then goto L3d660e;
  #L3d65c4.  call temp:= `isEmpty`(v2) @signature `Lj/p/b;.isEmpty:()Z` @kind virtual;
  #L3d65ca.  v0:= temp;
  #L3d65cc.  if v0 == 0 then goto L3d65e2;
  #L3d65d0.  v0:= v3 @kind object;
  #L3d65d2.  v0:= (`j.p.b`) v0 @kind object;
  #L3d65d6.  call temp:= `isEmpty`(v0) @signature `Lj/p/b;.isEmpty:()Z` @kind virtual;
  #L3d65dc.  v0:= temp;
  #L3d65de.  if v0 != 0 then goto L3d660a;
  #L3d65e2.  v0:= v2.`j.p.b.b` @type ^`int`;
  #L3d65e6.  v3:= (`j.p.b`) v3 @kind object;
  #L3d65ea.  v1:= v3.`j.p.b.b` @type ^`int`;
  #L3d65ee.  if v0 != v1 then goto L3d660e;
  #L3d65f2.  v0:= v2.`j.p.b.c` @type ^`int`;
  #L3d65f6.  v1:= v3.`j.p.b.c` @type ^`int`;
  #L3d65fa.  if v0 != v1 then goto L3d660e;
  #L3d65fe.  v0:= v2.`j.p.b.d` @type ^`int`;
  #L3d6602.  v3:= v3.`j.p.b.d` @type ^`int`;
  #L3d6606.  if v0 != v3 then goto L3d660e;
  #L3d660a.  v3:= 1I;
  #L3d660c.  goto L3d6610;
  #L3d660e.  v3:= 0I;
  #L3d6610.  return v3;
}
procedure `int` `f`(`j.p.b` v1 @kind this) @signature `Lj/p/b;.f:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d6678.  v0:= v1.`j.p.b.c` @type ^`int`;
  #L3d667c.  return v0;
}
procedure `int` `g`(`j.p.b` v1 @kind this) @signature `Lj/p/b;.g:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3d6690.  v0:= v1.`j.p.b.d` @type ^`int`;
  #L3d6694.  return v0;
}
procedure `int` `hashCode`(`j.p.b` v2 @kind this) @signature `Lj/p/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d66a8.  call temp:= `isEmpty`(v2) @signature `Lj/p/b;.isEmpty:()Z` @kind virtual;
  #L3d66ae.  v0:= temp;
  #L3d66b0.  if v0 == 0 then goto L3d66b8;
  #L3d66b4.  v0:= -1I;
  #L3d66b6.  goto L3d66d0;
  #L3d66b8.  v0:= v2.`j.p.b.b` @type ^`int`;
  #L3d66bc.  v0:= v0 * 31;
  #L3d66c0.  v1:= v2.`j.p.b.c` @type ^`int`;
  #L3d66c4.  v0:= v0 + v1 @kind int;
  #L3d66c6.  v0:= v0 * 31;
  #L3d66ca.  v1:= v2.`j.p.b.d` @type ^`int`;
  #L3d66ce.  v0:= v0 + v1 @kind int;
  #L3d66d0.  return v0;
}
procedure `boolean` `isEmpty`(`j.p.b` v4 @kind this) @signature `Lj/p/b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d6624.  v0:= v4.`j.p.b.d` @type ^`int`;
  #L3d6628.  v1:= 1I;
  #L3d662a.  v2:= 0I;
  #L3d662c.  if v0 <= 0 then goto L3d663e;
  #L3d6630.  v0:= v4.`j.p.b.b` @type ^`int`;
  #L3d6634.  v3:= v4.`j.p.b.c` @type ^`int`;
  #L3d6638.  if v0 <= v3 then goto L3d664c;
  #L3d663c.  goto L3d664e;
  #L3d663e.  v0:= v4.`j.p.b.b` @type ^`int`;
  #L3d6642.  v3:= v4.`j.p.b.c` @type ^`int`;
  #L3d6646.  if v0 >= v3 then goto L3d664c;
  #L3d664a.  goto L3d664e;
  #L3d664c.  v1:= 0I;
  #L3d664e.  return v1;
}
procedure `j.l.v` `iterator`(`j.p.b` v4 @kind this) @signature `Lj/p/b;.iterator:()Lj/l/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d6794.  v0:= new `j.p.c`;
  #L3d6798.  v1:= v4.`j.p.b.b` @type ^`int`;
  #L3d679c.  v2:= v4.`j.p.b.c` @type ^`int`;
  #L3d67a0.  v3:= v4.`j.p.b.d` @type ^`int`;
  #L3d67a4.  call `<init>`(v0, v1, v2, v3) @signature `Lj/p/c;.<init>:(III)V` @kind direct;
  #L3d67aa.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`j.p.b` v1 @kind this) @signature `Lj/p/b;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d6778.  call temp:= `iterator`(v1) @signature `Lj/p/b;.iterator:()Lj/l/v;` @kind virtual;
  #L3d677e.  v0:= temp @kind object;
  #L3d6780.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`j.p.b` v3 @kind this) @signature `Lj/p/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d66e4.  v0:= v3.`j.p.b.d` @type ^`int`;
  #L3d66e8.  v1:= " step " @kind object;
  #L3d66ec.  if v0 <= 0 then goto L3d6724;
  #L3d66f0.  v0:= new `java.lang.StringBuilder`;
  #L3d66f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d66fa.  v2:= v3.`j.p.b.b` @type ^`int`;
  #L3d66fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6704.  v2:= ".." @kind object;
  #L3d6708.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d670e.  v2:= v3.`j.p.b.c` @type ^`int`;
  #L3d6712.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6718.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d671e.  v1:= v3.`j.p.b.d` @type ^`int`;
  #L3d6722.  goto L3d6758;
  #L3d6724.  v0:= new `java.lang.StringBuilder`;
  #L3d6728.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d672e.  v2:= v3.`j.p.b.b` @type ^`int`;
  #L3d6732.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6738.  v2:= " downTo " @kind object;
  #L3d673c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6742.  v2:= v3.`j.p.b.c` @type ^`int`;
  #L3d6746.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d674c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6752.  v1:= v3.`j.p.b.d` @type ^`int`;
  #L3d6756.  v1:= -v1 @kind int;
  #L3d6758.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d675e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6764.  v0:= temp @kind object;
  #L3d6766.  return v0 @kind object;
}
