record `j.l.r` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.ListIterator` @kind interface, `j.o.b.h.a` @kind interface {
}
global `j.l.r` `@@j.l.r.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj/l/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d47b8.  v0:= new `j.l.r`;
  #L3d47bc.  call `<init>`(v0) @signature `Lj/l/r;.<init>:()V` @kind direct;
  #L3d47c2.  `@@j.l.r.b` @type ^`j.l.r` := v0 @kind object;
  #L3d47c6.  return @kind void;
}
procedure `void` `<init>`(`j.l.r` v0 @kind this) @signature `Lj/l/r;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d47d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d47de.  return @kind void;
}
procedure `void` `add`(`j.l.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lj/l/r;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d47f0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d47f4.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L3d47f8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d47fe.  throw v2;
}
procedure `boolean` `hasNext`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d46f8.  v0:= 0I;
  #L3d46fa.  return v0;
}
procedure `boolean` `hasPrevious`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d470c.  v0:= 0I;
  #L3d470e.  return v0;
}
procedure `java.lang.Object` `next`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d4748.  call temp:= `next`(v1) @signature `Lj/l/r;.next:()Ljava/lang/Void;` @kind virtual;
  #L3d474e.  v0:= 0I;
  #L3d4750.  throw v0;
}
procedure `java.lang.Void` `next`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.next:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4780.  v0:= new `java.util.NoSuchElementException`;
  #L3d4784.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3d478a.  throw v0;
}
procedure `int` `nextIndex`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4720.  v0:= 0I;
  #L3d4722.  return v0;
}
procedure `java.lang.Object` `previous`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d4764.  call temp:= `previous`(v1) @signature `Lj/l/r;.previous:()Ljava/lang/Void;` @kind virtual;
  #L3d476a.  v0:= 0I;
  #L3d476c.  throw v0;
}
procedure `java.lang.Void` `previous`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.previous:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d479c.  v0:= new `java.util.NoSuchElementException`;
  #L3d47a0.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3d47a6.  throw v0;
}
procedure `int` `previousIndex`(`j.l.r` v1 @kind this) @signature `Lj/l/r;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4734.  v0:= -1I;
  #L3d4736.  return v0;
}
procedure `void` `remove`(`j.l.r` v2 @kind this) @signature `Lj/l/r;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4810.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3d4814.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L3d4818.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d481e.  throw v0;
}
procedure `void` `set`(`j.l.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lj/l/r;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d4830.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3d4834.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L3d4838.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d483e.  throw v2;
}
