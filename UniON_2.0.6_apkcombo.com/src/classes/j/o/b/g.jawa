record `j.o.b.g` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`j.o.b.g` v0 @kind this) @signature `Lj/o/b/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d642c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d6432.  return @kind void;
}
procedure `java.lang.String` `a`(`j.o.b.g` v1 @kind this, `j.o.b.c` v2 @kind object) @signature `Lj/o/b/g;.a:(Lj/o/b/c;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d63c4.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d63ca.  v2:= temp @kind object;
  #L3d63cc.  call temp:= `getGenericInterfaces`(v2) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L3d63d2.  v2:= temp @kind object;
  #L3d63d4.  v0:= 0I;
  #L3d63d6.  v2:= v2[v0] @kind object;
  #L3d63da.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d63e0.  v2:= temp @kind object;
  #L3d63e2.  v0:= "kotlin.jvm.functions." @kind object;
  #L3d63e6.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3d63ec.  v0:= temp;
  #L3d63ee.  if v0 == 0 then goto L3d63fe;
  #L3d63f2.  v0:= 21I;
  #L3d63f6.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3d63fc.  v2:= temp @kind object;
  #L3d63fe.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`j.o.b.g` v0 @kind this, `j.o.b.e` v1 @kind object) @signature `Lj/o/b/g;.a:(Lj/o/b/e;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3d6410.  call temp:= `a`(v0, v1) @signature `Lj/o/b/g;.a:(Lj/o/b/c;)Ljava/lang/String;` @kind virtual;
  #L3d6416.  v1:= temp @kind object;
  #L3d6418.  return v1 @kind object;
}
