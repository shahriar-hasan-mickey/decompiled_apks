record `j.o.b.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object`[] `@@j.o.b.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj/o/b/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d60e0.  v0:= 0I;
  #L3d60e2.  v0:= new `java.lang.Object`[v0];
  #L3d60e6.  `@@j.o.b.a.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L3d60ea.  return @kind void;
}
procedure `java.lang.Object`[] `a`(`java.util.Collection` v4 @kind object) @signature `Lj/o/b/a;.a:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d5ed0.  v0:= "collection" @kind object;
  #L3d5ed4.  call `b`(v4, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5eda.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3d5ee0.  v0:= temp;
  #L3d5ee2.  if v0 != 0 then goto L3d5eec;
  #L3d5ee6.  v4:= `@@j.o.b.a.a` @type ^`java.lang.Object`[] @kind object;
  #L3d5eea.  goto L3d5f8e;
  #L3d5eec.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d5ef2.  v4:= temp @kind object;
  #L3d5ef4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d5efa.  v1:= temp;
  #L3d5efc.  if v1 != 0 then goto L3d5f02;
  #L3d5f00.  goto L3d5ee6;
  #L3d5f02.  v0:= new `java.lang.Object`[v0];
  #L3d5f06.  v1:= 0I;
  #L3d5f08.  v2:= v1 + 1;
  #L3d5f0c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d5f12.  v3:= temp @kind object;
  #L3d5f14.  v0[v1]:= v3 @kind object;
  #L3d5f18.  v1:= length @variable v0;
  #L3d5f1a.  if v2 < v1 then goto L3d5f70;
  #L3d5f1e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d5f24.  v1:= temp;
  #L3d5f26.  if v1 != 0 then goto L3d5f2e;
  #L3d5f2a.  v4:= v0 @kind object;
  #L3d5f2c.  goto L3d5f8e;
  #L3d5f2e.  v1:= v2 * 3;
  #L3d5f32.  v1:= v1 + 1;
  #L3d5f36.  v1:= v1 ^>> 1;
  #L3d5f3a.  v3:= 2147483645I;
  #L3d5f40.  if v1 > v2 then goto L3d5f5c;
  #L3d5f44.  if v2 >= v3 then goto L3d5f50;
  #L3d5f48.  v1:= 2147483645I;
  #L3d5f4e.  goto L3d5f5c;
  #L3d5f50.  v4:= new `java.lang.OutOfMemoryError`;
  #L3d5f54.  call `<init>`(v4) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L3d5f5a.  throw v4;
  #L3d5f5c.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3d5f62.  v0:= temp @kind object;
  #L3d5f64.  v1:= "Arrays.copyOf(result, newSize)" @kind object;
  #L3d5f68.  call `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5f6e.  goto L3d5f90;
  #L3d5f70.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d5f76.  v1:= temp;
  #L3d5f78.  if v1 != 0 then goto L3d5f90;
  #L3d5f7c.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3d5f82.  v4:= temp @kind object;
  #L3d5f84.  v0:= "Arrays.copyOf(result, size)" @kind object;
  #L3d5f88.  call `a`(v4, v0) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5f8e.  return v4 @kind object;
  #L3d5f90.  v1:= v2;
  #L3d5f92.  goto L3d5f08;
}
procedure `java.lang.Object`[] `a`(`java.util.Collection` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lj/o/b/a;.a:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d5fa4.  v0:= "collection" @kind object;
  #L3d5fa8.  call `b`(v5, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5fae.  if v6 == 0 then goto L3d60c2;
  #L3d5fb2.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3d5fb8.  v0:= temp;
  #L3d5fba.  v1:= 0I;
  #L3d5fbc.  v2:= 0I;
  #L3d5fbe.  if v0 != 0 then goto L3d5fd0;
  #L3d5fc2.  v5:= length @variable v6;
  #L3d5fc4.  if v5 <= 0 then goto L3d60ac;
  #L3d5fc8.  v6[v2]:= v1 @kind object;
  #L3d5fcc.  goto L3d60ac;
  #L3d5fd0.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d5fd6.  v5:= temp @kind object;
  #L3d5fd8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d5fde.  v3:= temp;
  #L3d5fe0.  if v3 != 0 then goto L3d5ff0;
  #L3d5fe4.  v5:= length @variable v6;
  #L3d5fe6.  if v5 <= 0 then goto L3d60ac;
  #L3d5fea.  v6[v2]:= v1 @kind object;
  #L3d5fee.  goto L3d60ac;
  #L3d5ff0.  v3:= length @variable v6;
  #L3d5ff2.  if v0 > v3 then goto L3d5ffa;
  #L3d5ff6.  v0:= v6 @kind object;
  #L3d5ff8.  goto L3d601a;
  #L3d5ffa.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d6000.  v3:= temp @kind object;
  #L3d6002.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3d6008.  v3:= temp @kind object;
  #L3d600a.  call temp:= `newInstance`(v3, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L3d6010.  v0:= temp @kind object;
  #L3d6012.  if v0 == 0 then goto L3d60b2;
  #L3d6016.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3d601a.  v3:= v2 + 1;
  #L3d601e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d6024.  v4:= temp @kind object;
  #L3d6026.  v0[v2]:= v4 @kind object;
  #L3d602a.  v2:= length @variable v0;
  #L3d602c.  if v3 < v2 then goto L3d6082;
  #L3d6030.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d6036.  v2:= temp;
  #L3d6038.  if v2 != 0 then goto L3d6040;
  #L3d603c.  v6:= v0 @kind object;
  #L3d603e.  goto L3d60ac;
  #L3d6040.  v2:= v3 * 3;
  #L3d6044.  v2:= v2 + 1;
  #L3d6048.  v2:= v2 ^>> 1;
  #L3d604c.  v4:= 2147483645I;
  #L3d6052.  if v2 > v3 then goto L3d606e;
  #L3d6056.  if v3 >= v4 then goto L3d6062;
  #L3d605a.  v2:= 2147483645I;
  #L3d6060.  goto L3d606e;
  #L3d6062.  v5:= new `java.lang.OutOfMemoryError`;
  #L3d6066.  call `<init>`(v5) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L3d606c.  throw v5;
  #L3d606e.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3d6074.  v0:= temp @kind object;
  #L3d6076.  v2:= "Arrays.copyOf(result, newSize)" @kind object;
  #L3d607a.  call `a`(v0, v2) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d6080.  goto L3d60ae;
  #L3d6082.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d6088.  v2:= temp;
  #L3d608a.  if v2 != 0 then goto L3d60ae;
  #L3d608e.  if v0 != v6 then goto L3d6098;
  #L3d6092.  v6[v3]:= v1 @kind object;
  #L3d6096.  goto L3d60ac;
  #L3d6098.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3d609e.  v5:= temp @kind object;
  #L3d60a0.  v6:= "Arrays.copyOf(result, size)" @kind object;
  #L3d60a4.  call `a`(v5, v6) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d60aa.  v6:= v5 @kind object;
  #L3d60ac.  return v6 @kind object;
  #L3d60ae.  v2:= v3;
  #L3d60b0.  goto L3d601a;
  #L3d60b2.  v5:= new `j.i`;
  #L3d60b6.  v6:= "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>" @kind object;
  #L3d60ba.  call `<init>`(v5, v6) @signature `Lj/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d60c0.  throw v5;
  #L3d60c2.  v5:= new `java.lang.NullPointerException`;
  #L3d60c6.  call `<init>`(v5) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L3d60cc.  throw v5;
}
