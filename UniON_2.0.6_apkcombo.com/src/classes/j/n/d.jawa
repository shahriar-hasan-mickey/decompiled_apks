record `j.n.d` @kind class @AccessFlag  extends `j.n.c` @kind class {
}
procedure `byte`[] `a`(`java.io.File` v7 @kind object) @signature `Lj/n/d;.a:(Ljava/io/File;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d5dc0.  v0:= "$this$readBytes" @kind object;
  #L3d5dc4.  call `b`(v7, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5dca.  v0:= new `java.io.FileInputStream`;
  #L3d5dce.  call `<init>`(v0, v7) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3d5dd4.  v1:= 0I;
  #L3d5dd6.  call temp:= `length`(v7) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L3d5ddc.  v2:= temp @kind wide;
  #L3d5dde.  v4:= 2147483647I;
  #L3d5de4.  v4:= (`long`) v4 @kind i2l;
  #L3d5de6.  v6:= lcmp(v2, v4);
  #L3d5dea.  if v6 > 0 then goto L3d5e2e;
  #L3d5dee.  v7:= (`int`) v2 @kind l2i;
  #L3d5df0.  v2:= new `byte`[v7];
  #L3d5df4.  if v7 <= 0 then goto L3d5e0c;
  #L3d5df8.  call temp:= `read`(v0, v2, v1, v7) @signature `Ljava/io/FileInputStream;.read:([BII)I` @kind virtual;
  #L3d5dfe.  v3:= temp;
  #L3d5e00.  if v3 >= 0 then goto L3d5e06;
  #L3d5e04.  goto L3d5e0c;
  #L3d5e06.  v7:= v7 - v3 @kind int;
  #L3d5e08.  v1:= v1 + v3 @kind int;
  #L3d5e0a.  goto L3d5df4;
  #L3d5e0c.  if v7 != 0 then goto L3d5e12;
  #L3d5e10.  goto L3d5e24;
  #L3d5e12.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3d5e18.  v2:= temp @kind object;
  #L3d5e1a.  v7:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L3d5e1e.  call `a`(v2, v7) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3d5e24.  v7:= 0I;
  #L3d5e26.  call `a`(v0, v7) @signature `Lj/n/a;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L3d5e2c.  return v2 @kind object;
  #L3d5e2e.  v1:= new `java.lang.OutOfMemoryError`;
  #L3d5e32.  v4:= new `java.lang.StringBuilder`;
  #L3d5e36.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5e3c.  v5:= "File " @kind object;
  #L3d5e40.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e46.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e4c.  v7:= " is too big (" @kind object;
  #L3d5e50.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e56.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e5c.  v7:= " bytes) to fit in memory." @kind object;
  #L3d5e60.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e66.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5e6c.  v7:= temp @kind object;
  #L3d5e6e.  call `<init>`(v1, v7) @signature `Ljava/lang/OutOfMemoryError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d5e74.  throw v1;
  #L3d5e76.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d5e78.  throw v7;
  #L3d5e7a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d5e7c.  call `a`(v0, v7) @signature `Lj/n/a;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L3d5e82.  throw v1;
  catch `java.lang.Throwable` @[L3d5dd6..L3d5e24] goto L3d5e76;
  catch `java.lang.Throwable` @[L3d5e2e..L3d5e76] goto L3d5e76;
  catch `java.lang.Throwable` @[L3d5e78..L3d5e7a] goto L3d5e7a;
}
