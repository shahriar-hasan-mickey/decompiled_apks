record `m.i` @kind class @AccessFlag PUBLIC extends `m.t` @kind class {
  `m.t` `m.i.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m.i` v1 @kind this, `m.t` v2 @kind object) @signature `Lm/i;.<init>:(Lm/t;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f3ff0.  call `<init>`(v1) @signature `Lm/t;.<init>:()V` @kind direct;
  #L3f3ff6.  if v2 == 0 then goto L3f4000;
  #L3f3ffa.  v1.`m.i.e` @type ^`m.t` := v2 @kind object;
  #L3f3ffe.  return @kind void;
  #L3f4000.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f4004.  v0:= "delegate == null" @kind object;
  #L3f4008.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f400e.  throw v2;
}
procedure `m.i` `a`(`m.i` v1 @kind this, `m.t` v2 @kind object) @signature `Lm/i;.a:(Lm/t;)Lm/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f3f2c.  if v2 == 0 then goto L3f3f36;
  #L3f3f30.  v1.`m.i.e` @type ^`m.t` := v2 @kind object;
  #L3f3f34.  return v1 @kind object;
  #L3f3f36.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f3f3a.  v0:= "delegate == null" @kind object;
  #L3f3f3e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f3f44.  throw v2;
}
procedure `m.t` `a`(`m.i` v1 @kind this) @signature `Lm/i;.a:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3f58.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3f5c.  call temp:= `a`(v0) @signature `Lm/t;.a:()Lm/t;` @kind virtual;
  #L3f3f62.  v0:= temp @kind object;
  #L3f3f64.  return v0 @kind object;
}
procedure `m.t` `a`(`m.i` v1 @kind this, `long` v2 ) @signature `Lm/i;.a:(J)Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3f98.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3f9c.  call temp:= `a`(v0, v2) @signature `Lm/t;.a:(J)Lm/t;` @kind virtual;
  #L3f3fa2.  v2:= temp @kind object;
  #L3f3fa4.  return v2 @kind object;
}
procedure `m.t` `a`(`m.i` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lm/i;.a:(JLjava/util/concurrent/TimeUnit;)Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3fd0.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3fd4.  call temp:= `a`(v0, v2, v4) @signature `Lm/t;.a:(JLjava/util/concurrent/TimeUnit;)Lm/t;` @kind virtual;
  #L3f3fda.  v2:= temp @kind object;
  #L3f3fdc.  return v2 @kind object;
}
procedure `m.t` `b`(`m.i` v1 @kind this) @signature `Lm/i;.b:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3f78.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3f7c.  call temp:= `b`(v0) @signature `Lm/t;.b:()Lm/t;` @kind virtual;
  #L3f3f82.  v0:= temp @kind object;
  #L3f3f84.  return v0 @kind object;
}
procedure `long` `c`(`m.i` v2 @kind this) @signature `Lm/i;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f3f0c.  v0:= v2.`m.i.e` @type ^`m.t` @kind object;
  #L3f3f10.  call temp:= `c`(v0) @signature `Lm/t;.c:()J` @kind virtual;
  #L3f3f16.  v0:= temp @kind wide;
  #L3f3f18.  return v0 @kind wide;
}
procedure `boolean` `d`(`m.i` v1 @kind this) @signature `Lm/i;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3eec.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3ef0.  call temp:= `d`(v0) @signature `Lm/t;.d:()Z` @kind virtual;
  #L3f3ef6.  v0:= temp;
  #L3f3ef8.  return v0;
}
procedure `void` `e`(`m.i` v1 @kind this) @signature `Lm/i;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4020.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f4024.  call `e`(v0) @signature `Lm/t;.e:()V` @kind virtual;
  #L3f402a.  return @kind void;
}
procedure `m.t` `g`(`m.i` v1 @kind this) @signature `Lm/i;.g:()Lm/t;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f3fb8.  v0:= v1.`m.i.e` @type ^`m.t` @kind object;
  #L3f3fbc.  return v0 @kind object;
}
