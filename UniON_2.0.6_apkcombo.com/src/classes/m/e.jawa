record `m.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `m.s` @kind interface, `java.nio.channels.ReadableByteChannel` @kind interface {
}
procedure `long` `a`(`byte` v0 ) @signature `Lm/e;.a:(B)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `a`(`m.r` v0 @kind object) @signature `Lm/e;.a:(Lm/r;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `a`(`java.nio.charset.Charset` v0 @kind object) @signature `Lm/e;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m.f` `a`(`long` v0 ) @signature `Lm/e;.a:(J)Lm/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`long` v0 , `m.f` v2 @kind object) @signature `Lm/e;.a:(JLm/f;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `b`(`long` v0 ) @signature `Lm/e;.b:(J)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `c`(`long` v0 ) @signature `Lm/e;.c:(J)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m.c` `c`() @signature `Lm/e;.c:()Lm/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`long` v0 ) @signature `Lm/e;.d:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `e`() @signature `Lm/e;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `f`() @signature `Lm/e;.f:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `g`() @signature `Lm/e;.g:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `h`() @signature `Lm/e;.h:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `i`() @signature `Lm/e;.i:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `readByte`() @signature `Lm/e;.readByte:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readFully`(`byte`[] v0 @kind object) @signature `Lm/e;.readFully:([B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readInt`() @signature `Lm/e;.readInt:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `readShort`() @signature `Lm/e;.readShort:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skip`(`long` v0 ) @signature `Lm/e;.skip:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
