record `m.a$b` @kind class @AccessFlag  extends `m.s` @kind interface {
  `m.s` `m.a$b.b` @AccessFlag FINAL_SYNTHETIC;
  `m.a` `m.a$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m.a$b` v0 @kind this, `m.a` v1 @kind object, `m.s` v2 @kind object) @signature `Lm/a$b;.<init>:(Lm/a;Lm/s;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f1090.  v0.`m.a$b.c` @type ^`m.a` := v1 @kind object;
  #L3f1094.  v0.`m.a$b.b` @type ^`m.s` := v2 @kind object;
  #L3f1098.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f109e.  return @kind void;
}
procedure `long` `a`(`m.a$b` v1 @kind this, `m.c` v2 @kind object, `long` v3 ) @signature `Lm/a$b;.a:(Lm/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1008.  v0:= v1.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f100c.  call `g`(v0) @signature `Lm/a;.g:()V` @kind virtual;
  #L3f1012.  v0:= v1.`m.a$b.b` @type ^`m.s` @kind object;
  #L3f1016.  call temp:= `a`(v0, v2, v3) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3f101c.  v2:= temp @kind wide;
  #L3f101e.  v4:= 1I;
  #L3f1020.  v0:= v1.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f1024.  call `a`(v0, v4) @signature `Lm/a;.a:(Z)V` @kind virtual;
  #L3f102a.  return v2 @kind wide;
  #L3f102c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f102e.  goto L3f1040;
  #L3f1030.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3f1032.  v3:= v1.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f1036.  call temp:= `a`(v3, v2) @signature `Lm/a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3f103c.  v2:= temp @kind object;
  #L3f103e.  throw v2;
  #L3f1040.  v3:= v1.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f1044.  v4:= 0I;
  #L3f1046.  call `a`(v3, v4) @signature `Lm/a;.a:(Z)V` @kind virtual;
  #L3f104c.  throw v2;
  catch `java.io.IOException` @[L3f1012..L3f101e] goto L3f1030;
  catch `java.lang.Throwable` @[L3f1012..L3f101e] goto L3f102c;
  catch `java.lang.Throwable` @[L3f1032..L3f1040] goto L3f102c;
}
procedure `void` `close`(`m.a$b` v3 @kind this) @signature `Lm/a$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f10b0.  v0:= v3.`m.a$b.b` @type ^`m.s` @kind object;
  #L3f10b4.  call `close`(v0) @signature `Lm/s;.close:()V` @kind interface;
  #L3f10ba.  v0:= 1I;
  #L3f10bc.  v1:= v3.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f10c0.  call `a`(v1, v0) @signature `Lm/a;.a:(Z)V` @kind virtual;
  #L3f10c6.  return @kind void;
  #L3f10c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f10ca.  goto L3f10dc;
  #L3f10cc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3f10ce.  v1:= v3.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f10d2.  call temp:= `a`(v1, v0) @signature `Lm/a;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3f10d8.  v0:= temp @kind object;
  #L3f10da.  throw v0;
  #L3f10dc.  v1:= v3.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f10e0.  v2:= 0I;
  #L3f10e2.  call `a`(v1, v2) @signature `Lm/a;.a:(Z)V` @kind virtual;
  #L3f10e8.  throw v0;
  catch `java.io.IOException` @[L3f10b0..L3f10ba] goto L3f10cc;
  catch `java.lang.Throwable` @[L3f10b0..L3f10ba] goto L3f10c8;
  catch `java.lang.Throwable` @[L3f10ce..L3f10dc] goto L3f10c8;
}
procedure `m.t` `d`(`m.a$b` v1 @kind this) @signature `Lm/a$b;.d:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1078.  v0:= v1.`m.a$b.c` @type ^`m.a` @kind object;
  #L3f107c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`m.a$b` v2 @kind this) @signature `Lm/a$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0fc4.  v0:= new `java.lang.StringBuilder`;
  #L3f0fc8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f0fce.  v1:= "AsyncTimeout.source(" @kind object;
  #L3f0fd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0fd8.  v1:= v2.`m.a$b.b` @type ^`m.s` @kind object;
  #L3f0fdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0fe2.  v1:= ")" @kind object;
  #L3f0fe6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0fec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0ff2.  v0:= temp @kind object;
  #L3f0ff4.  return v0 @kind object;
}
