record `f.a.a.a` @kind class @AccessFlag PUBLIC_FINAL extends `h.a.c.a.j$c` @kind interface {
}
global `f.a.a.a$a` `@@f.a.a.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a44f4.  v0:= new `f.a.a.a$a`;
  #L3a44f8.  v1:= 0I;
  #L3a44fa.  call `<init>`(v0, v1) @signature `Lf/a/a/a$a;.<init>:(Lj/o/b/b;)V` @kind direct;
  #L3a4500.  `@@f.a.a.a.b` @type ^`f.a.a.a$a` := v0 @kind object;
  #L3a4504.  return @kind void;
}
procedure `void` `<init>`(`f.a.a.a` v0 @kind this) @signature `Lf/a/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a4518.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a451e.  return @kind void;
}
procedure `void` `a`(`h.a.c.a.l$d` v1 @kind object) @signature `Lf/a/a/a;.a:(Lh/a/c/a/l$d;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3a459c.  v0:= `@@f.a.a.a.b` @type ^`f.a.a.a$a` @kind object;
  #L3a45a0.  call `a`(v0, v1) @signature `Lf/a/a/a$a;.a:(Lh/a/c/a/l$d;)V` @kind virtual;
  #L3a45a6.  return @kind void;
}
procedure `java.lang.String` `a`(`f.a.a.a` v11 @kind this, `boolean` v12 ) @signature `Lf/a/a/a;.a:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a43ac.  call temp:= `getNetworkInterfaces`() @signature `Ljava/net/NetworkInterface;.getNetworkInterfaces:()Ljava/util/Enumeration;` @kind static;
  #L3a43b2.  v0:= temp @kind object;
  #L3a43b4.  call temp:= `list`(v0) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3a43ba.  v0:= temp @kind object;
  #L3a43bc.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3a43c2.  v0:= temp @kind object;
  #L3a43c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a43ca.  v1:= temp;
  #L3a43cc.  if v1 == 0 then goto L3a44c6;
  #L3a43d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a43d6.  v1:= temp @kind object;
  #L3a43d8.  v1:= (`java.net.NetworkInterface`) v1 @kind object;
  #L3a43dc.  call temp:= `getInetAddresses`(v1) @signature `Ljava/net/NetworkInterface;.getInetAddresses:()Ljava/util/Enumeration;` @kind virtual;
  #L3a43e2.  v1:= temp @kind object;
  #L3a43e4.  call temp:= `list`(v1) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3a43ea.  v1:= temp @kind object;
  #L3a43ec.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3a43f2.  v1:= temp @kind object;
  #L3a43f4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a43fa.  v2:= temp;
  #L3a43fc.  if v2 == 0 then goto L3a43c4;
  #L3a4400.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a4406.  v2:= temp @kind object;
  #L3a4408.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L3a440c.  call temp:= `isLoopbackAddress`(v2) @signature `Ljava/net/InetAddress;.isLoopbackAddress:()Z` @kind virtual;
  #L3a4412.  v3:= temp;
  #L3a4414.  if v3 != 0 then goto L3a43f4;
  #L3a4418.  call temp:= `getHostAddress`(v2) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L3a441e.  v2:= temp @kind object;
  #L3a4420.  v3:= "sAddr" @kind object;
  #L3a4424.  call `a`(v2, v3) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a442a.  v5:= 58I;
  #L3a442e.  v6:= 0I;
  #L3a4430.  v7:= 0I;
  #L3a4432.  v8:= 6I;
  #L3a4434.  v9:= 0I;
  #L3a4436.  v4:= v2 @kind object;
  #L3a4438.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lj/r/d;.a:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L3a443e.  v3:= temp;
  #L3a4440.  v10:= 0I;
  #L3a4442.  if v3 >= 0 then goto L3a444a;
  #L3a4446.  v3:= 1I;
  #L3a4448.  goto L3a444c;
  #L3a444a.  v3:= 0I;
  #L3a444c.  if v12 == 0 then goto L3a4456;
  #L3a4450.  if v3 == 0 then goto L3a43f4;
  #L3a4454.  return v2 @kind object;
  #L3a4456.  if v3 != 0 then goto L3a43f4;
  #L3a445a.  v5:= 37I;
  #L3a445e.  v6:= 0I;
  #L3a4460.  v7:= 0I;
  #L3a4462.  v8:= 6I;
  #L3a4464.  v9:= 0I;
  #L3a4466.  v4:= v2 @kind object;
  #L3a4468.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lj/r/d;.a:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L3a446e.  v12:= temp;
  #L3a4470.  v0:= "(this as java.lang.String).toUpperCase()" @kind object;
  #L3a4474.  if v12 >= 0 then goto L3a4488;
  #L3a4478.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3a447e.  v12:= temp @kind object;
  #L3a4480.  call `a`(v12, v0) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a4486.  goto L3a44a8;
  #L3a4488.  call temp:= `substring`(v2, v10, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3a448e.  v12:= temp @kind object;
  #L3a4490.  v1:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L3a4494.  call `a`(v12, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a449a.  if v12 == 0 then goto L3a44aa;
  #L3a449e.  call temp:= `toUpperCase`(v12) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3a44a4.  v12:= temp @kind object;
  #L3a44a6.  goto L3a4480;
  #L3a44a8.  return v12 @kind object;
  #L3a44aa.  v12:= new `j.i`;
  #L3a44ae.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L3a44b2.  call `<init>`(v12, v0) @signature `Lj/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a44b8.  throw v12;
  #L3a44ba.  v12:= Exception @type ^`java.lang.Exception` @kind object;
  #L3a44bc.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3a44c0.  call `print`(v0, v12) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/Object;)V` @kind virtual;
  #L3a44c6.  v12:= "" @kind object;
  #L3a44ca.  return v12 @kind object;
  catch `java.lang.Exception` @[L3a43ac..L3a4470] goto L3a44ba;
  catch `java.lang.Exception` @[L3a4478..L3a44ba] goto L3a44ba;
}
procedure `void` `onMethodCall`(`f.a.a.a` v2 @kind this, `h.a.c.a.i` v3 @kind object, `h.a.c.a.j$d` v4 @kind object) @signature `Lf/a/a/a;.onMethodCall:(Lh/a/c/a/i;Lh/a/c/a/j$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4530.  v0:= "call" @kind object;
  #L3a4534.  call `b`(v3, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a453a.  v0:= "result" @kind object;
  #L3a453e.  call `b`(v4, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a4544.  v0:= v3.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L3a4548.  v1:= "getIpAdress" @kind object;
  #L3a454c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4552.  v0:= temp;
  #L3a4554.  if v0 == 0 then goto L3a456a;
  #L3a4558.  v3:= 1I;
  #L3a455a.  call temp:= `a`(v2, v3) @signature `Lf/a/a/a;.a:(Z)Ljava/lang/String;` @kind virtual;
  #L3a4560.  v3:= temp @kind object;
  #L3a4562.  call `a`(v4, v3) @signature `Lh/a/c/a/j$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L3a4568.  goto L3a4588;
  #L3a456a.  v3:= v3.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L3a456e.  v0:= "getIpV6Adress" @kind object;
  #L3a4572.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a4578.  v3:= temp;
  #L3a457a.  if v3 == 0 then goto L3a4582;
  #L3a457e.  v3:= 0I;
  #L3a4580.  goto L3a455a;
  #L3a4582.  call `a`(v4) @signature `Lh/a/c/a/j$d;.a:()V` @kind interface;
  #L3a4588.  return @kind void;
}
