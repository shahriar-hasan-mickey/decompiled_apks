record `d.b.a.a` @kind class @AccessFlag PUBLIC_FINAL extends `d.b.a.h0` @kind class {
}
procedure `void` `<init>`(`d.b.a.a` v4 @kind this) @signature `Ld/b/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bff00.  v0:= 0I;
  #L1bff02.  v1:= "data3" @kind object;
  #L1bff06.  v2:= "data2" @kind object;
  #L1bff0a.  v3:= 0I;
  #L1bff0c.  call `<init>`(v4, v0, v1, v2, v3) @signature `Ld/b/a/h0;.<init>:(ILjava/lang/String;Ljava/lang/String;Lj/o/b/b;)V` @kind direct;
  #L1bff12.  return @kind void;
}
procedure `int` `a`(`d.b.a.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Ld/b/a/a;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bfe44.  if v3 == 0 then goto L1bfe70;
  #L1bfe48.  if v3 == 0 then goto L1bfe60;
  #L1bfe4c.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L1bfe52.  v3:= temp @kind object;
  #L1bfe54.  v0:= "(this as java.lang.String).toLowerCase()" @kind object;
  #L1bfe58.  call `a`(v3, v0) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bfe5e.  goto L1bfe72;
  #L1bfe60.  v3:= new `j.i`;
  #L1bfe64.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1bfe68.  call `<init>`(v3, v0) @signature `Lj/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bfe6e.  throw v3;
  #L1bfe70.  v3:= 0I;
  #L1bfe72.  if v3 != 0 then goto L1bfe78;
  #L1bfe76.  goto L1bfebe;
  #L1bfe78.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1bfe7e.  v0:= temp;
  #L1bfe80.  v1:= 3208415I;
  #L1bfe86.  if v0 == v1 then goto L1bfeaa;
  #L1bfe8a.  v1:= 3655441I;
  #L1bfe90.  if v0 == v1 then goto L1bfe96;
  #L1bfe94.  goto L1bfebe;
  #L1bfe96.  v0:= "work" @kind object;
  #L1bfe9a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bfea0.  v3:= temp;
  #L1bfea2.  if v3 == 0 then goto L1bfebe;
  #L1bfea6.  v3:= 2I;
  #L1bfea8.  goto L1bfec0;
  #L1bfeaa.  v0:= "home" @kind object;
  #L1bfeae.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bfeb4.  v3:= temp;
  #L1bfeb6.  if v3 == 0 then goto L1bfebe;
  #L1bfeba.  v3:= 1I;
  #L1bfebc.  goto L1bfec0;
  #L1bfebe.  v3:= 0I;
  #L1bfec0.  return v3;
}
procedure `java.lang.String` `a`(`d.b.a.a` v1 @kind this, `int` v2 ) @signature `Ld/b/a/a;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bfed4.  v0:= 1I;
  #L1bfed6.  if v2 == v0 then goto L1bfeea;
  #L1bfeda.  v0:= 2I;
  #L1bfedc.  if v2 == v0 then goto L1bfee4;
  #L1bfee0.  v2:= 0I;
  #L1bfee2.  goto L1bfeee;
  #L1bfee4.  v2:= "work" @kind object;
  #L1bfee8.  goto L1bfeee;
  #L1bfeea.  v2:= "home" @kind object;
  #L1bfeee.  return v2 @kind object;
}
