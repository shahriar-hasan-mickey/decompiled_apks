record `d.b.a.d0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `d.b.a.d0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `d.b.a.d0.b` @AccessFlag PRIVATE;
  `java.lang.String` `d.b.a.d0.c` @AccessFlag PRIVATE;
  `java.util.Set` `d.b.a.d0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d.b.a.d0` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.Set` v5 @kind object) @signature `Ld/b/a/d0;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c71a0.  v0:= "identifier" @kind object;
  #L1c71a4.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c71aa.  v0:= "contacts" @kind object;
  #L1c71ae.  call `b`(v5, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c71b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c71ba.  v1.`d.b.a.d0.a` @type ^`java.lang.String` := v2 @kind object;
  #L1c71be.  v1.`d.b.a.d0.b` @type ^`java.lang.String` := v3 @kind object;
  #L1c71c2.  v1.`d.b.a.d0.c` @type ^`java.lang.String` := v4 @kind object;
  #L1c71c6.  v1.`d.b.a.d0.d` @type ^`java.util.Set` := v5 @kind object;
  #L1c71ca.  return @kind void;
}
procedure `void` `<init>`(`d.b.a.d0` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.Set` v5 @kind object, `int` v6 , `j.o.b.b` v7 @kind object) @signature `Ld/b/a/d0;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;ILj/o/b/b;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c71dc.  v7:= v6 ^& 2;
  #L1c71e0.  v0:= 0I;
  #L1c71e2.  if v7 == 0 then goto L1c71e8;
  #L1c71e6.  v3:= v0 @kind object;
  #L1c71e8.  v7:= v6 ^& 4;
  #L1c71ec.  if v7 == 0 then goto L1c71f2;
  #L1c71f0.  v4:= v0 @kind object;
  #L1c71f2.  v6:= v6 ^& 8;
  #L1c71f6.  if v6 == 0 then goto L1c7204;
  #L1c71fa.  v5:= new `java.util.LinkedHashSet`;
  #L1c71fe.  call `<init>`(v5) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1c7204.  call `<init>`(v1, v2, v3, v4, v5) @signature `Ld/b/a/d0;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V` @kind direct;
  #L1c720a.  return @kind void;
}
procedure `java.util.Set` `a`(`d.b.a.d0` v1 @kind this) @signature `Ld/b/a/d0;.a:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7188.  v0:= v1.`d.b.a.d0.d` @type ^`java.util.Set` @kind object;
  #L1c718c.  return v0 @kind object;
}
procedure `void` `a`(`d.b.a.d0` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ld/b/a/d0;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1c721c.  v0.`d.b.a.d0.b` @type ^`java.lang.String` := v1 @kind object;
  #L1c7220.  return @kind void;
}
procedure `java.lang.String` `b`(`d.b.a.d0` v1 @kind this) @signature `Ld/b/a/d0;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c70c0.  v0:= v1.`d.b.a.d0.c` @type ^`java.lang.String` @kind object;
  #L1c70c4.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`d.b.a.d0` v1 @kind this) @signature `Ld/b/a/d0;.c:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c70d8.  v0:= v1.`d.b.a.d0.a` @type ^`java.lang.String` @kind object;
  #L1c70dc.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`d.b.a.d0` v1 @kind this) @signature `Ld/b/a/d0;.d:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c70f0.  v0:= v1.`d.b.a.d0.b` @type ^`java.lang.String` @kind object;
  #L1c70f4.  return v0 @kind object;
}
procedure `boolean` `equals`(`d.b.a.d0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ld/b/a/d0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c6fd0.  if v2 == v3 then goto L1c7036;
  #L1c6fd4.  v0:= instanceof @variable v3 @type ^`d.b.a.d0` @kind boolean;
  #L1c6fd8.  if v0 == 0 then goto L1c7032;
  #L1c6fdc.  v3:= (`d.b.a.d0`) v3 @kind object;
  #L1c6fe0.  v0:= v2.`d.b.a.d0.a` @type ^`java.lang.String` @kind object;
  #L1c6fe4.  v1:= v3.`d.b.a.d0.a` @type ^`java.lang.String` @kind object;
  #L1c6fe8.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c6fee.  v0:= temp;
  #L1c6ff0.  if v0 == 0 then goto L1c7032;
  #L1c6ff4.  v0:= v2.`d.b.a.d0.b` @type ^`java.lang.String` @kind object;
  #L1c6ff8.  v1:= v3.`d.b.a.d0.b` @type ^`java.lang.String` @kind object;
  #L1c6ffc.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c7002.  v0:= temp;
  #L1c7004.  if v0 == 0 then goto L1c7032;
  #L1c7008.  v0:= v2.`d.b.a.d0.c` @type ^`java.lang.String` @kind object;
  #L1c700c.  v1:= v3.`d.b.a.d0.c` @type ^`java.lang.String` @kind object;
  #L1c7010.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c7016.  v0:= temp;
  #L1c7018.  if v0 == 0 then goto L1c7032;
  #L1c701c.  v0:= v2.`d.b.a.d0.d` @type ^`java.util.Set` @kind object;
  #L1c7020.  v3:= v3.`d.b.a.d0.d` @type ^`java.util.Set` @kind object;
  #L1c7024.  call temp:= `a`(v0, v3) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c702a.  v3:= temp;
  #L1c702c.  if v3 == 0 then goto L1c7032;
  #L1c7030.  goto L1c7036;
  #L1c7032.  v3:= 0I;
  #L1c7034.  return v3;
  #L1c7036.  v3:= 1I;
  #L1c7038.  return v3;
}
procedure `int` `hashCode`(`d.b.a.d0` v3 @kind this) @signature `Ld/b/a/d0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c704c.  v0:= v3.`d.b.a.d0.a` @type ^`java.lang.String` @kind object;
  #L1c7050.  v1:= 0I;
  #L1c7052.  if v0 == 0 then goto L1c7060;
  #L1c7056.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c705c.  v0:= temp;
  #L1c705e.  goto L1c7062;
  #L1c7060.  v0:= 0I;
  #L1c7062.  v0:= v0 * 31;
  #L1c7066.  v2:= v3.`d.b.a.d0.b` @type ^`java.lang.String` @kind object;
  #L1c706a.  if v2 == 0 then goto L1c7078;
  #L1c706e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c7074.  v2:= temp;
  #L1c7076.  goto L1c707a;
  #L1c7078.  v2:= 0I;
  #L1c707a.  v0:= v0 + v2 @kind int;
  #L1c707c.  v0:= v0 * 31;
  #L1c7080.  v2:= v3.`d.b.a.d0.c` @type ^`java.lang.String` @kind object;
  #L1c7084.  if v2 == 0 then goto L1c7092;
  #L1c7088.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c708e.  v2:= temp;
  #L1c7090.  goto L1c7094;
  #L1c7092.  v2:= 0I;
  #L1c7094.  v0:= v0 + v2 @kind int;
  #L1c7096.  v0:= v0 * 31;
  #L1c709a.  v2:= v3.`d.b.a.d0.d` @type ^`java.util.Set` @kind object;
  #L1c709e.  if v2 == 0 then goto L1c70aa;
  #L1c70a2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c70a8.  v1:= temp;
  #L1c70aa.  v0:= v0 + v1 @kind int;
  #L1c70ac.  return v0;
}
procedure `java.lang.String` `toString`(`d.b.a.d0` v2 @kind this) @signature `Ld/b/a/d0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7108.  v0:= new `java.lang.StringBuilder`;
  #L1c710c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c7112.  v1:= "Group(identifier=" @kind object;
  #L1c7116.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c711c.  v1:= v2.`d.b.a.d0.a` @type ^`java.lang.String` @kind object;
  #L1c7120.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7126.  v1:= ", name=" @kind object;
  #L1c712a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7130.  v1:= v2.`d.b.a.d0.b` @type ^`java.lang.String` @kind object;
  #L1c7134.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c713a.  v1:= ", description=" @kind object;
  #L1c713e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7144.  v1:= v2.`d.b.a.d0.c` @type ^`java.lang.String` @kind object;
  #L1c7148.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c714e.  v1:= ", contacts=" @kind object;
  #L1c7152.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7158.  v1:= v2.`d.b.a.d0.d` @type ^`java.util.Set` @kind object;
  #L1c715c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7162.  v1:= ")" @kind object;
  #L1c7166.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c716c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c7172.  v0:= temp @kind object;
  #L1c7174.  return v0 @kind object;
}
