record `d.b.a.m0$a` @kind class @AccessFlag PUBLIC_FINAL extends `android.os.AsyncTask` @kind class {
  `j.o.a.a` `d.b.a.m0$a.a` @AccessFlag FINAL_SYNTHETIC;
  `h.a.c.a.j$d` `d.b.a.m0$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.b.a.m0$a` v0 @kind this, `j.o.a.a` v1 @kind object, `h.a.c.a.j$d` v2 @kind object) @signature `Ld/b/a/m0$a;.<init>:(Lj/o/a/a;Lh/a/c/a/j$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c7dc4.  v0.`d.b.a.m0$a.a` @type ^`j.o.a.a` := v1 @kind object;
  #L1c7dc8.  v0.`d.b.a.m0$a.b` @type ^`h.a.c.a.j$d` := v2 @kind object;
  #L1c7dcc.  call `<init>`(v0) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L1c7dd2.  return @kind void;
}
procedure `void` `a`(`d.b.a.m0$a` v1 @kind this, `d.b.a.j0` v2 @kind object) @signature `Ld/b/a/m0$a;.a:(Ld/b/a/j0;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c7de4.  v0:= "result" @kind object;
  #L1c7de8.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7dee.  v0:= v1.`d.b.a.m0$a.b` @type ^`h.a.c.a.j$d` @kind object;
  #L1c7df2.  call `a`(v0, v2) @signature `Ld/b/a/m0;.a:(Lh/a/c/a/j$d;Ld/b/a/j0;)V` @kind static;
  #L1c7df8.  return @kind void;
}
procedure `d.b.a.j0` `doInBackground`(`d.b.a.m0$a` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Ld/b/a/m0$a;.doInBackground:([Ljava/lang/Object;)Ld/b/a/j0;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1c7d2c.  v0:= "params" @kind object;
  #L1c7d30.  call `b`(v4, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7d36.  v4:= new `d.b.a.j0`;
  #L1c7d3a.  v0:= v3.`d.b.a.m0$a.a` @type ^`j.o.a.a` @kind object;
  #L1c7d3e.  call temp:= `a`(v0) @signature `Lj/o/a/a;.a:()Ljava/lang/Object;` @kind interface;
  #L1c7d44.  v0:= temp @kind object;
  #L1c7d46.  call `<init>`(v4, v0) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c7d4c.  v0:= v4 @kind object;
  #L1c7d4e.  goto L1c7d86;
  #L1c7d50.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c7d52.  v0:= new `d.b.a.j0`;
  #L1c7d56.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1c7d5c.  v1:= temp @kind object;
  #L1c7d5e.  v2:= "unknown" @kind object;
  #L1c7d62.  call `<init>`(v0, v2, v4, v1) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L1c7d68.  goto L1c7d86;
  #L1c7d6a.  v4:= Exception @type ^`d.b.a.i0` @kind object;
  #L1c7d6c.  v0:= new `d.b.a.j0`;
  #L1c7d70.  call temp:= `a`(v4) @signature `Ld/b/a/l0;.a:()Ljava/lang/String;` @kind virtual;
  #L1c7d76.  v1:= temp @kind object;
  #L1c7d78.  call temp:= `b`(v4) @signature `Ld/b/a/l0;.b:()Ljava/lang/String;` @kind virtual;
  #L1c7d7e.  v2:= temp @kind object;
  #L1c7d80.  call `<init>`(v0, v1, v4, v2) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L1c7d86.  return v0 @kind object;
  catch `d.b.a.i0` @[L1c7d36..L1c7d4c] goto L1c7d6a;
  catch `java.lang.Exception` @[L1c7d36..L1c7d4c] goto L1c7d50;
}
procedure `java.lang.Object` `doInBackground`(`d.b.a.m0$a` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Ld/b/a/m0$a;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c7da8.  call temp:= `doInBackground`(v0, v1) @signature `Ld/b/a/m0$a;.doInBackground:([Ljava/lang/Object;)Ld/b/a/j0;` @kind virtual;
  #L1c7dae.  v1:= temp @kind object;
  #L1c7db0.  return v1 @kind object;
}
procedure `void` `onPostExecute`(`d.b.a.m0$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ld/b/a/m0$a;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c7e0c.  v1:= (`d.b.a.j0`) v1 @kind object;
  #L1c7e10.  call `a`(v0, v1) @signature `Ld/b/a/m0$a;.a:(Ld/b/a/j0;)V` @kind virtual;
  #L1c7e16.  return @kind void;
}
