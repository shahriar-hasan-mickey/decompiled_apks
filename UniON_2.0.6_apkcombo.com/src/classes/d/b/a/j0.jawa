record `d.b.a.j0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `d.b.a.j0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `d.b.a.j0.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `d.b.a.j0.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Throwable` `d.b.a.j0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d.b.a.j0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c7a48.  v0:= 0I;
  #L1c7a4a.  call `<init>`(v1, v2, v0, v0, v0) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c7a50.  return @kind void;
}
procedure `void` `<init>`(`d.b.a.j0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c7a64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c7a6a.  v0.`d.b.a.j0.a` @type ^`java.lang.Object` := v1 @kind object;
  #L1c7a6e.  v0.`d.b.a.j0.b` @type ^`java.lang.String` := v2 @kind object;
  #L1c7a72.  v0.`d.b.a.j0.c` @type ^`java.lang.String` := v3 @kind object;
  #L1c7a76.  v0.`d.b.a.j0.d` @type ^`java.lang.Throwable` := v4 @kind object;
  #L1c7a7a.  return @kind void;
}
procedure `void` `<init>`(`d.b.a.j0` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c7a8c.  v0:= "errorCode" @kind object;
  #L1c7a90.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7a96.  v0:= "exception" @kind object;
  #L1c7a9a.  call `b`(v3, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7aa0.  v0:= 0I;
  #L1c7aa2.  call `<init>`(v1, v0, v2, v4, v3) @signature `Ld/b/a/j0;.<init>:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c7aa8.  return @kind void;
}
procedure `java.lang.String` `a`(`d.b.a.j0` v1 @kind this) @signature `Ld/b/a/j0;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7980.  v0:= v1.`d.b.a.j0.b` @type ^`java.lang.String` @kind object;
  #L1c7984.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`d.b.a.j0` v1 @kind this) @signature `Ld/b/a/j0;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7998.  v0:= v1.`d.b.a.j0.c` @type ^`java.lang.String` @kind object;
  #L1c799c.  return v0 @kind object;
}
procedure `java.lang.Throwable` `c`(`d.b.a.j0` v1 @kind this) @signature `Ld/b/a/j0;.c:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7a30.  v0:= v1.`d.b.a.j0.d` @type ^`java.lang.Throwable` @kind object;
  #L1c7a34.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`d.b.a.j0` v1 @kind this) @signature `Ld/b/a/j0;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7968.  v0:= v1.`d.b.a.j0.a` @type ^`java.lang.Object` @kind object;
  #L1c796c.  return v0 @kind object;
}
procedure `boolean` `equals`(`d.b.a.j0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ld/b/a/j0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7878.  if v2 == v3 then goto L1c78de;
  #L1c787c.  v0:= instanceof @variable v3 @type ^`d.b.a.j0` @kind boolean;
  #L1c7880.  if v0 == 0 then goto L1c78da;
  #L1c7884.  v3:= (`d.b.a.j0`) v3 @kind object;
  #L1c7888.  v0:= v2.`d.b.a.j0.a` @type ^`java.lang.Object` @kind object;
  #L1c788c.  v1:= v3.`d.b.a.j0.a` @type ^`java.lang.Object` @kind object;
  #L1c7890.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c7896.  v0:= temp;
  #L1c7898.  if v0 == 0 then goto L1c78da;
  #L1c789c.  v0:= v2.`d.b.a.j0.b` @type ^`java.lang.String` @kind object;
  #L1c78a0.  v1:= v3.`d.b.a.j0.b` @type ^`java.lang.String` @kind object;
  #L1c78a4.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c78aa.  v0:= temp;
  #L1c78ac.  if v0 == 0 then goto L1c78da;
  #L1c78b0.  v0:= v2.`d.b.a.j0.c` @type ^`java.lang.String` @kind object;
  #L1c78b4.  v1:= v3.`d.b.a.j0.c` @type ^`java.lang.String` @kind object;
  #L1c78b8.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c78be.  v0:= temp;
  #L1c78c0.  if v0 == 0 then goto L1c78da;
  #L1c78c4.  v0:= v2.`d.b.a.j0.d` @type ^`java.lang.Throwable` @kind object;
  #L1c78c8.  v3:= v3.`d.b.a.j0.d` @type ^`java.lang.Throwable` @kind object;
  #L1c78cc.  call temp:= `a`(v0, v3) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c78d2.  v3:= temp;
  #L1c78d4.  if v3 == 0 then goto L1c78da;
  #L1c78d8.  goto L1c78de;
  #L1c78da.  v3:= 0I;
  #L1c78dc.  return v3;
  #L1c78de.  v3:= 1I;
  #L1c78e0.  return v3;
}
procedure `int` `hashCode`(`d.b.a.j0` v3 @kind this) @signature `Ld/b/a/j0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c78f4.  v0:= v3.`d.b.a.j0.a` @type ^`java.lang.Object` @kind object;
  #L1c78f8.  v1:= 0I;
  #L1c78fa.  if v0 == 0 then goto L1c7908;
  #L1c78fe.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c7904.  v0:= temp;
  #L1c7906.  goto L1c790a;
  #L1c7908.  v0:= 0I;
  #L1c790a.  v0:= v0 * 31;
  #L1c790e.  v2:= v3.`d.b.a.j0.b` @type ^`java.lang.String` @kind object;
  #L1c7912.  if v2 == 0 then goto L1c7920;
  #L1c7916.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c791c.  v2:= temp;
  #L1c791e.  goto L1c7922;
  #L1c7920.  v2:= 0I;
  #L1c7922.  v0:= v0 + v2 @kind int;
  #L1c7924.  v0:= v0 * 31;
  #L1c7928.  v2:= v3.`d.b.a.j0.c` @type ^`java.lang.String` @kind object;
  #L1c792c.  if v2 == 0 then goto L1c793a;
  #L1c7930.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c7936.  v2:= temp;
  #L1c7938.  goto L1c793c;
  #L1c793a.  v2:= 0I;
  #L1c793c.  v0:= v0 + v2 @kind int;
  #L1c793e.  v0:= v0 * 31;
  #L1c7942.  v2:= v3.`d.b.a.j0.d` @type ^`java.lang.Throwable` @kind object;
  #L1c7946.  if v2 == 0 then goto L1c7952;
  #L1c794a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c7950.  v1:= temp;
  #L1c7952.  v0:= v0 + v1 @kind int;
  #L1c7954.  return v0;
}
procedure `java.lang.String` `toString`(`d.b.a.j0` v2 @kind this) @signature `Ld/b/a/j0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c79b0.  v0:= new `java.lang.StringBuilder`;
  #L1c79b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c79ba.  v1:= "MethodResult(value=" @kind object;
  #L1c79be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79c4.  v1:= v2.`d.b.a.j0.a` @type ^`java.lang.Object` @kind object;
  #L1c79c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79ce.  v1:= ", errorCode=" @kind object;
  #L1c79d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79d8.  v1:= v2.`d.b.a.j0.b` @type ^`java.lang.String` @kind object;
  #L1c79dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79e2.  v1:= ", errorMessage=" @kind object;
  #L1c79e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79ec.  v1:= v2.`d.b.a.j0.c` @type ^`java.lang.String` @kind object;
  #L1c79f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c79f6.  v1:= ", exception=" @kind object;
  #L1c79fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a00.  v1:= v2.`d.b.a.j0.d` @type ^`java.lang.Throwable` @kind object;
  #L1c7a04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a0a.  v1:= ")" @kind object;
  #L1c7a0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a14.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c7a1a.  v0:= temp @kind object;
  #L1c7a1c.  return v0 @kind object;
}
