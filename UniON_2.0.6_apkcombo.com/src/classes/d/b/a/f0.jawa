record `d.b.a.f0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `d.b.a.f0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `d.b.a.f0.b` @AccessFlag PRIVATE_FINAL;
}
global `d.b.a.f0$a` `@@d.b.a.f0.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld/b/a/f0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c77b0.  v0:= new `d.b.a.f0$a`;
  #L1c77b4.  v1:= 0I;
  #L1c77b6.  call `<init>`(v0, v1) @signature `Ld/b/a/f0$a;.<init>:(Lj/o/b/b;)V` @kind direct;
  #L1c77bc.  `@@d.b.a.f0.c` @type ^`d.b.a.f0$a` := v0 @kind object;
  #L1c77c0.  return @kind void;
}
procedure `void` `<init>`(`d.b.a.f0` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ld/b/a/f0;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c77d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c77da.  v0.`d.b.a.f0.a` @type ^`java.lang.String` := v1 @kind object;
  #L1c77de.  v0.`d.b.a.f0.b` @type ^`java.lang.String` := v2 @kind object;
  #L1c77e2.  return @kind void;
}
procedure `java.lang.String` `a`(`d.b.a.f0` v1 @kind this) @signature `Ld/b/a/f0;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7728.  v0:= v1.`d.b.a.f0.a` @type ^`java.lang.String` @kind object;
  #L1c772c.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`d.b.a.f0` v1 @kind this) @signature `Ld/b/a/f0;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7740.  v0:= v1.`d.b.a.f0.b` @type ^`java.lang.String` @kind object;
  #L1c7744.  return v0 @kind object;
}
procedure `boolean` `equals`(`d.b.a.f0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ld/b/a/f0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7694.  if v2 == v3 then goto L1c76d2;
  #L1c7698.  v0:= instanceof @variable v3 @type ^`d.b.a.f0` @kind boolean;
  #L1c769c.  if v0 == 0 then goto L1c76ce;
  #L1c76a0.  v3:= (`d.b.a.f0`) v3 @kind object;
  #L1c76a4.  v0:= v2.`d.b.a.f0.a` @type ^`java.lang.String` @kind object;
  #L1c76a8.  v1:= v3.`d.b.a.f0.a` @type ^`java.lang.String` @kind object;
  #L1c76ac.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c76b2.  v0:= temp;
  #L1c76b4.  if v0 == 0 then goto L1c76ce;
  #L1c76b8.  v0:= v2.`d.b.a.f0.b` @type ^`java.lang.String` @kind object;
  #L1c76bc.  v3:= v3.`d.b.a.f0.b` @type ^`java.lang.String` @kind object;
  #L1c76c0.  call temp:= `a`(v0, v3) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c76c6.  v3:= temp;
  #L1c76c8.  if v3 == 0 then goto L1c76ce;
  #L1c76cc.  goto L1c76d2;
  #L1c76ce.  v3:= 0I;
  #L1c76d0.  return v3;
  #L1c76d2.  v3:= 1I;
  #L1c76d4.  return v3;
}
procedure `int` `hashCode`(`d.b.a.f0` v3 @kind this) @signature `Ld/b/a/f0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c76e8.  v0:= v3.`d.b.a.f0.a` @type ^`java.lang.String` @kind object;
  #L1c76ec.  v1:= 0I;
  #L1c76ee.  if v0 == 0 then goto L1c76fc;
  #L1c76f2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c76f8.  v0:= temp;
  #L1c76fa.  goto L1c76fe;
  #L1c76fc.  v0:= 0I;
  #L1c76fe.  v0:= v0 * 31;
  #L1c7702.  v2:= v3.`d.b.a.f0.b` @type ^`java.lang.String` @kind object;
  #L1c7706.  if v2 == 0 then goto L1c7712;
  #L1c770a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c7710.  v1:= temp;
  #L1c7712.  v0:= v0 + v1 @kind int;
  #L1c7714.  return v0;
}
procedure `java.lang.String` `toString`(`d.b.a.f0` v2 @kind this) @signature `Ld/b/a/f0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7758.  v0:= new `java.lang.StringBuilder`;
  #L1c775c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c7762.  v1:= "Item(label=" @kind object;
  #L1c7766.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c776c.  v1:= v2.`d.b.a.f0.a` @type ^`java.lang.String` @kind object;
  #L1c7770.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7776.  v1:= ", value=" @kind object;
  #L1c777a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7780.  v1:= v2.`d.b.a.f0.b` @type ^`java.lang.String` @kind object;
  #L1c7784.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c778a.  v1:= ")" @kind object;
  #L1c778e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7794.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c779a.  v0:= temp @kind object;
  #L1c779c.  return v0 @kind object;
}
