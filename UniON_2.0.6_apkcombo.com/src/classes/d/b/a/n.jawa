record `d.b.a.n` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `d.b.a.n.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `d.b.a.n.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d.b.a.n` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ld/b/a/n;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c1fe4.  v0:= "name" @kind object;
  #L1c1fe8.  call `b`(v2, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1fee.  v0:= "expression" @kind object;
  #L1c1ff2.  call `b`(v3, v0) @signature `Lj/o/b/d;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1ff8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1ffe.  v1.`d.b.a.n.a` @type ^`java.lang.String` := v2 @kind object;
  #L1c2002.  v1.`d.b.a.n.b` @type ^`java.lang.String` := v3 @kind object;
  #L1c2006.  return @kind void;
}
procedure `java.lang.String` `a`(`d.b.a.n` v1 @kind this) @signature `Ld/b/a/n;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c1fb4.  v0:= v1.`d.b.a.n.a` @type ^`java.lang.String` @kind object;
  #L1c1fb8.  return v0 @kind object;
}
procedure `boolean` `equals`(`d.b.a.n` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ld/b/a/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1f20.  if v2 == v3 then goto L1c1f5e;
  #L1c1f24.  v0:= instanceof @variable v3 @type ^`d.b.a.n` @kind boolean;
  #L1c1f28.  if v0 == 0 then goto L1c1f5a;
  #L1c1f2c.  v3:= (`d.b.a.n`) v3 @kind object;
  #L1c1f30.  v0:= v2.`d.b.a.n.a` @type ^`java.lang.String` @kind object;
  #L1c1f34.  v1:= v3.`d.b.a.n.a` @type ^`java.lang.String` @kind object;
  #L1c1f38.  call temp:= `a`(v0, v1) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c1f3e.  v0:= temp;
  #L1c1f40.  if v0 == 0 then goto L1c1f5a;
  #L1c1f44.  v0:= v2.`d.b.a.n.b` @type ^`java.lang.String` @kind object;
  #L1c1f48.  v3:= v3.`d.b.a.n.b` @type ^`java.lang.String` @kind object;
  #L1c1f4c.  call temp:= `a`(v0, v3) @signature `Lj/o/b/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c1f52.  v3:= temp;
  #L1c1f54.  if v3 == 0 then goto L1c1f5a;
  #L1c1f58.  goto L1c1f5e;
  #L1c1f5a.  v3:= 0I;
  #L1c1f5c.  return v3;
  #L1c1f5e.  v3:= 1I;
  #L1c1f60.  return v3;
}
procedure `int` `hashCode`(`d.b.a.n` v3 @kind this) @signature `Ld/b/a/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1f74.  v0:= v3.`d.b.a.n.a` @type ^`java.lang.String` @kind object;
  #L1c1f78.  v1:= 0I;
  #L1c1f7a.  if v0 == 0 then goto L1c1f88;
  #L1c1f7e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c1f84.  v0:= temp;
  #L1c1f86.  goto L1c1f8a;
  #L1c1f88.  v0:= 0I;
  #L1c1f8a.  v0:= v0 * 31;
  #L1c1f8e.  v2:= v3.`d.b.a.n.b` @type ^`java.lang.String` @kind object;
  #L1c1f92.  if v2 == 0 then goto L1c1f9e;
  #L1c1f96.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c1f9c.  v1:= temp;
  #L1c1f9e.  v0:= v0 + v1 @kind int;
  #L1c1fa0.  return v0;
}
procedure `java.lang.String` `toString`(`d.b.a.n` v1 @kind this) @signature `Ld/b/a/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1fcc.  v0:= v1.`d.b.a.n.b` @type ^`java.lang.String` @kind object;
  #L1c1fd0.  return v0 @kind object;
}
