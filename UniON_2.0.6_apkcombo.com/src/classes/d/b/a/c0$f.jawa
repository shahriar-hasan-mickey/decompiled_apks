record `d.b.a.c0$f` @kind class @AccessFlag FINAL extends `j.o.b.e` @kind class, `j.o.a.a` @kind interface {
  `d.b.a.c0` `d.b.a.c0$f.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.b.a.c0$f` v0 @kind this, `d.b.a.c0` v1 @kind object) @signature `Ld/b/a/c0$f;.<init>:(Ld/b/a/c0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c6a0c.  v0.`d.b.a.c0$f.b` @type ^`d.b.a.c0` := v1 @kind object;
  #L1c6a10.  v1:= 0I;
  #L1c6a12.  call `<init>`(v0, v1) @signature `Lj/o/b/e;.<init>:(I)V` @kind direct;
  #L1c6a18.  return @kind void;
}
procedure `java.lang.Object` `a`(`d.b.a.c0$f` v1 @kind this) @signature `Ld/b/a/c0$f;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c691c.  call temp:= `a`(v1) @signature `Ld/b/a/c0$f;.a:()Ljava/util/List;` @kind virtual;
  #L1c6922.  v0:= temp @kind object;
  #L1c6924.  return v0 @kind object;
}
procedure `java.util.List` `a`(`d.b.a.c0$f` v4 @kind this) @signature `Ld/b/a/c0$f;.a:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6938.  v0:= v4.`d.b.a.c0$f.b` @type ^`d.b.a.c0` @kind object;
  #L1c693c.  call temp:= `a`(v0) @signature `Ld/b/a/b0;.a:()Landroid/content/ContentResolver;` @kind virtual;
  #L1c6942.  v0:= temp @kind object;
  #L1c6944.  call temp:= `a`(v0) @signature `Ld/b/a/q0;.a:(Landroid/content/ContentResolver;)Landroid/database/Cursor;` @kind static;
  #L1c694a.  v0:= temp @kind object;
  #L1c694c.  if v0 == 0 then goto L1c69f2;
  #L1c6950.  v1:= v4.`d.b.a.c0$f.b` @type ^`d.b.a.c0` @kind object;
  #L1c6954.  call temp:= `a`(v1, v0) @signature `Ld/b/a/b0;.a:(Landroid/database/Cursor;)Ljava/util/List;` @kind virtual;
  #L1c695a.  v0:= temp @kind object;
  #L1c695c.  if v0 == 0 then goto L1c69f2;
  #L1c6960.  v1:= new `java.util.ArrayList`;
  #L1c6964.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c696a.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c6970.  v0:= temp @kind object;
  #L1c6972.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c6978.  v2:= temp;
  #L1c697a.  if v2 == 0 then goto L1c69ac;
  #L1c697e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c6984.  v2:= temp @kind object;
  #L1c6986.  v3:= v2 @kind object;
  #L1c6988.  v3:= (`d.b.a.d0`) v3 @kind object;
  #L1c698c.  call temp:= `a`(v3) @signature `Ld/b/a/d0;.a:()Ljava/util/Set;` @kind virtual;
  #L1c6992.  v3:= temp @kind object;
  #L1c6994.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1c699a.  v3:= temp;
  #L1c699c.  v3:= v3 ^~ 1;
  #L1c69a0.  if v3 == 0 then goto L1c6972;
  #L1c69a4.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c69aa.  goto L1c6972;
  #L1c69ac.  v0:= new `java.util.ArrayList`;
  #L1c69b0.  v2:= 10I;
  #L1c69b4.  call temp:= `a`(v1, v2) @signature `Lj/l/g;.a:(Ljava/lang/Iterable;I)I` @kind static;
  #L1c69ba.  v2:= temp;
  #L1c69bc.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1c69c2.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c69c8.  v1:= temp @kind object;
  #L1c69ca.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c69d0.  v2:= temp;
  #L1c69d2.  if v2 == 0 then goto L1c69fa;
  #L1c69d6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c69dc.  v2:= temp @kind object;
  #L1c69de.  v2:= (`d.b.a.d0`) v2 @kind object;
  #L1c69e2.  call temp:= `a`(v2) @signature `Ld/b/a/e0;.a:(Ld/b/a/d0;)Ljava/util/Map;` @kind static;
  #L1c69e8.  v2:= temp @kind object;
  #L1c69ea.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c69f0.  goto L1c69ca;
  #L1c69f2.  call temp:= `a`() @signature `Lj/l/g;.a:()Ljava/util/List;` @kind static;
  #L1c69f8.  v0:= temp @kind object;
  #L1c69fa.  return v0 @kind object;
}
