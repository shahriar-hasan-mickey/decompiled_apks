record `h.a.c.a.c$c` @kind class @AccessFlag FINAL extends `h.a.c.a.b$a` @kind interface {
  `h.a.c.a.c$d` `h.a.c.a.c$c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `h.a.c.a.c$c.b` @AccessFlag PRIVATE_FINAL;
  `h.a.c.a.c` `h.a.c.a.c$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.a.c.a.c$c` v1 @kind this, `h.a.c.a.c` v2 @kind object, `h.a.c.a.c$d` v3 @kind object) @signature `Lh/a/c/a/c$c;.<init>:(Lh/a/c/a/c;Lh/a/c/a/c$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b2d1c.  v1.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` := v2 @kind object;
  #L3b2d20.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b2d26.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L3b2d2a.  v0:= 0I;
  #L3b2d2c.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3b2d32.  v1.`h.a.c.a.c$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L3b2d36.  v1.`h.a.c.a.c$c.a` @type ^`h.a.c.a.c$d` := v3 @kind object;
  #L3b2d3a.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicReference` `a`(`h.a.c.a.c$c` v0 @kind object) @signature `Lh/a/c/a/c$c;.a:(Lh/a/c/a/c$c;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3b2d04.  v0:= v0.`h.a.c.a.c$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3b2d08.  return v0 @kind object;
}
procedure `void` `a`(`h.a.c.a.c$c` v4 @kind this, `java.lang.Object` v5 @kind object, `h.a.c.a.b$b` v6 @kind object) @signature `Lh/a/c/a/c$c;.a:(Ljava/lang/Object;Lh/a/c/a/b$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b2d4c.  v0:= v4.`h.a.c.a.c$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3b2d50.  v1:= 0I;
  #L3b2d52.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b2d58.  v0:= temp @kind object;
  #L3b2d5a.  v0:= (`h.a.c.a.c$b`) v0 @kind object;
  #L3b2d5e.  v2:= "error" @kind object;
  #L3b2d62.  if v0 == 0 then goto L3b2de4;
  #L3b2d66.  v0:= v4.`h.a.c.a.c$c.a` @type ^`h.a.c.a.c$d` @kind object;
  #L3b2d6a.  call `a`(v0, v5) @signature `Lh/a/c/a/c$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L3b2d70.  v5:= v4.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2d74.  call temp:= `a`(v5) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2d7a.  v5:= temp @kind object;
  #L3b2d7c.  call temp:= `a`(v5, v1) @signature `Lh/a/c/a/k;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L3b2d82.  v5:= temp @kind object;
  #L3b2d84.  call `a`(v6, v5) @signature `Lh/a/c/a/b$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L3b2d8a.  goto L3b2e02;
  #L3b2d8c.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3b2d8e.  v0:= new `java.lang.StringBuilder`;
  #L3b2d92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b2d98.  v3:= "EventChannel#" @kind object;
  #L3b2d9c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2da2.  v3:= v4.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2da6.  call temp:= `b`(v3) @signature `Lh/a/c/a/c;.b:(Lh/a/c/a/c;)Ljava/lang/String;` @kind static;
  #L3b2dac.  v3:= temp @kind object;
  #L3b2dae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2db4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b2dba.  v0:= temp @kind object;
  #L3b2dbc.  v3:= "Failed to close event stream" @kind object;
  #L3b2dc0.  call temp:= `e`(v0, v3, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3b2dc6.  v0:= v4.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2dca.  call temp:= `a`(v0) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2dd0.  v0:= temp @kind object;
  #L3b2dd2.  call temp:= `getMessage`(v5) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2dd8.  v5:= temp @kind object;
  #L3b2dda.  call temp:= `a`(v0, v2, v5, v1) @signature `Lh/a/c/a/k;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L3b2de0.  v5:= temp @kind object;
  #L3b2de2.  goto L3b2dfc;
  #L3b2de4.  v5:= v4.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2de8.  call temp:= `a`(v5) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2dee.  v5:= temp @kind object;
  #L3b2df0.  v0:= "No active stream to cancel" @kind object;
  #L3b2df4.  call temp:= `a`(v5, v2, v0, v1) @signature `Lh/a/c/a/k;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L3b2dfa.  v5:= temp @kind object;
  #L3b2dfc.  call `a`(v6, v5) @signature `Lh/a/c/a/b$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L3b2e02.  return @kind void;
  catch `java.lang.RuntimeException` @[L3b2d66..L3b2d8a] goto L3b2d8c;
}
procedure `void` `b`(`h.a.c.a.c$c` v6 @kind this, `java.lang.Object` v7 @kind object, `h.a.c.a.b$b` v8 @kind object) @signature `Lh/a/c/a/c$c;.b:(Ljava/lang/Object;Lh/a/c/a/b$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b2e24.  v0:= new `h.a.c.a.c$c$a`;
  #L3b2e28.  v1:= 0I;
  #L3b2e2a.  call `<init>`(v0, v6, v1) @signature `Lh/a/c/a/c$c$a;.<init>:(Lh/a/c/a/c$c;Lh/a/c/a/c$a;)V` @kind direct;
  #L3b2e30.  v2:= v6.`h.a.c.a.c$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3b2e34.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b2e3a.  v2:= temp @kind object;
  #L3b2e3c.  v2:= (`h.a.c.a.c$b`) v2 @kind object;
  #L3b2e40.  v3:= "EventChannel#" @kind object;
  #L3b2e44.  if v2 == 0 then goto L3b2e8a;
  #L3b2e48.  v2:= v6.`h.a.c.a.c$c.a` @type ^`h.a.c.a.c$d` @kind object;
  #L3b2e4c.  call `a`(v2, v1) @signature `Lh/a/c/a/c$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L3b2e52.  goto L3b2e8a;
  #L3b2e54.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3b2e56.  v4:= new `java.lang.StringBuilder`;
  #L3b2e5a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b2e60.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2e66.  v5:= v6.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2e6a.  call temp:= `b`(v5) @signature `Lh/a/c/a/c;.b:(Lh/a/c/a/c;)Ljava/lang/String;` @kind static;
  #L3b2e70.  v5:= temp @kind object;
  #L3b2e72.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2e78.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b2e7e.  v4:= temp @kind object;
  #L3b2e80.  v5:= "Failed to close existing event stream" @kind object;
  #L3b2e84.  call temp:= `e`(v4, v5, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3b2e8a.  v2:= v6.`h.a.c.a.c$c.a` @type ^`h.a.c.a.c$d` @kind object;
  #L3b2e8e.  call `a`(v2, v7, v0) @signature `Lh/a/c/a/c$d;.a:(Ljava/lang/Object;Lh/a/c/a/c$b;)V` @kind interface;
  #L3b2e94.  v7:= v6.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2e98.  call temp:= `a`(v7) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2e9e.  v7:= temp @kind object;
  #L3b2ea0.  call temp:= `a`(v7, v1) @signature `Lh/a/c/a/k;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L3b2ea6.  v7:= temp @kind object;
  #L3b2ea8.  call `a`(v8, v7) @signature `Lh/a/c/a/b$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L3b2eae.  goto L3b2f16;
  #L3b2eb0.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3b2eb2.  v0:= v6.`h.a.c.a.c$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3b2eb6.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L3b2ebc.  v0:= new `java.lang.StringBuilder`;
  #L3b2ec0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b2ec6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2ecc.  v2:= v6.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2ed0.  call temp:= `b`(v2) @signature `Lh/a/c/a/c;.b:(Lh/a/c/a/c;)Ljava/lang/String;` @kind static;
  #L3b2ed6.  v2:= temp @kind object;
  #L3b2ed8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b2ede.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b2ee4.  v0:= temp @kind object;
  #L3b2ee6.  v2:= "Failed to open event stream" @kind object;
  #L3b2eea.  call temp:= `e`(v0, v2, v7) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3b2ef0.  v0:= v6.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2ef4.  call temp:= `a`(v0) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2efa.  v0:= temp @kind object;
  #L3b2efc.  call temp:= `getMessage`(v7) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3b2f02.  v7:= temp @kind object;
  #L3b2f04.  v2:= "error" @kind object;
  #L3b2f08.  call temp:= `a`(v0, v2, v7, v1) @signature `Lh/a/c/a/k;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L3b2f0e.  v7:= temp @kind object;
  #L3b2f10.  call `a`(v8, v7) @signature `Lh/a/c/a/b$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L3b2f16.  return @kind void;
  catch `java.lang.RuntimeException` @[L3b2e48..L3b2e52] goto L3b2e54;
  catch `java.lang.RuntimeException` @[L3b2e8a..L3b2eae] goto L3b2eb0;
}
procedure `void` `a`(`h.a.c.a.c$c` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `h.a.c.a.b$b` v4 @kind object) @signature `Lh/a/c/a/c$c;.a:(Ljava/nio/ByteBuffer;Lh/a/c/a/b$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2f44.  v0:= v2.`h.a.c.a.c$c.c` @type ^`h.a.c.a.c` @kind object;
  #L3b2f48.  call temp:= `a`(v0) @signature `Lh/a/c/a/c;.a:(Lh/a/c/a/c;)Lh/a/c/a/k;` @kind static;
  #L3b2f4e.  v0:= temp @kind object;
  #L3b2f50.  call temp:= `a`(v0, v3) @signature `Lh/a/c/a/k;.a:(Ljava/nio/ByteBuffer;)Lh/a/c/a/i;` @kind interface;
  #L3b2f56.  v3:= temp @kind object;
  #L3b2f58.  v0:= v3.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L3b2f5c.  v1:= "listen" @kind object;
  #L3b2f60.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b2f66.  v0:= temp;
  #L3b2f68.  if v0 == 0 then goto L3b2f78;
  #L3b2f6c.  v3:= v3.`h.a.c.a.i.b` @type ^`java.lang.Object` @kind object;
  #L3b2f70.  call `b`(v2, v3, v4) @signature `Lh/a/c/a/c$c;.b:(Ljava/lang/Object;Lh/a/c/a/b$b;)V` @kind direct;
  #L3b2f76.  goto L3b2fa0;
  #L3b2f78.  v0:= v3.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L3b2f7c.  v1:= "cancel" @kind object;
  #L3b2f80.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b2f86.  v0:= temp;
  #L3b2f88.  if v0 == 0 then goto L3b2f98;
  #L3b2f8c.  v3:= v3.`h.a.c.a.i.b` @type ^`java.lang.Object` @kind object;
  #L3b2f90.  call `a`(v2, v3, v4) @signature `Lh/a/c/a/c$c;.a:(Ljava/lang/Object;Lh/a/c/a/b$b;)V` @kind direct;
  #L3b2f96.  goto L3b2fa0;
  #L3b2f98.  v3:= 0I;
  #L3b2f9a.  call `a`(v4, v3) @signature `Lh/a/c/a/b$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L3b2fa0.  return @kind void;
}
