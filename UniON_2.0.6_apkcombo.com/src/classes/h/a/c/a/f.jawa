record `h.a.c.a.f` @kind class @AccessFlag PUBLIC_FINAL extends `h.a.c.a.k` @kind interface {
}
global `h.a.c.a.f` `@@h.a.c.a.f.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/a/c/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b34b0.  v0:= new `h.a.c.a.f`;
  #L3b34b4.  call `<init>`(v0) @signature `Lh/a/c/a/f;.<init>:()V` @kind direct;
  #L3b34ba.  `@@h.a.c.a.f.a` @type ^`h.a.c.a.f` := v0 @kind object;
  #L3b34be.  return @kind void;
}
procedure `void` `<init>`(`h.a.c.a.f` v0 @kind this) @signature `Lh/a/c/a/f;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b34d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b34d6.  return @kind void;
}
procedure `h.a.c.a.i` `a`(`h.a.c.a.f` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lh/a/c/a/f;.a:(Ljava/nio/ByteBuffer;)Lh/a/c/a/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b318c.  v0:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b3190.  call temp:= `a`(v0, v4) @signature `Lh/a/c/a/e;.a:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3196.  v4:= temp @kind object;
  #L3b3198.  v0:= instanceof @variable v4 @type ^`org.json.JSONObject` @kind boolean;
  #L3b319c.  if v0 == 0 then goto L3b31de;
  #L3b31a0.  v0:= v4 @kind object;
  #L3b31a2.  v0:= (`org.json.JSONObject`) v0 @kind object;
  #L3b31a6.  v1:= "method" @kind object;
  #L3b31aa.  call temp:= `get`(v0, v1) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3b31b0.  v1:= temp @kind object;
  #L3b31b2.  v2:= "args" @kind object;
  #L3b31b6.  call temp:= `opt`(v0, v2) @signature `Lorg/json/JSONObject;.opt:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3b31bc.  v0:= temp @kind object;
  #L3b31be.  call temp:= `b`(v3, v0) @signature `Lh/a/c/a/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b31c4.  v0:= temp @kind object;
  #L3b31c6.  v2:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L3b31ca.  if v2 == 0 then goto L3b31de;
  #L3b31ce.  v4:= new `h.a.c.a.i`;
  #L3b31d2.  v1:= (`java.lang.String`) v1 @kind object;
  #L3b31d6.  call `<init>`(v4, v1, v0) @signature `Lh/a/c/a/i;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L3b31dc.  return v4 @kind object;
  #L3b31de.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b31e2.  v1:= new `java.lang.StringBuilder`;
  #L3b31e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b31ec.  v2:= "Invalid method call: " @kind object;
  #L3b31f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b31f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b31fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b3202.  v4:= temp @kind object;
  #L3b3204.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b320a.  throw v0;
  #L3b320c.  v4:= Exception @type ^`org.json.JSONException` @kind object;
  #L3b320e.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b3212.  v1:= "Invalid JSON" @kind object;
  #L3b3216.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3b321c.  throw v0;
  catch `org.json.JSONException` @[L3b318c..L3b320c] goto L3b320c;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.f` v3 @kind this, `h.a.c.a.i` v4 @kind object) @signature `Lh/a/c/a/f;.a:(Lh/a/c/a/i;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b3408.  v0:= new `org.json.JSONObject`;
  #L3b340c.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L3b3412.  v1:= "method" @kind object;
  #L3b3416.  v2:= v4.`h.a.c.a.i.a` @type ^`java.lang.String` @kind object;
  #L3b341a.  call temp:= `put`(v0, v1, v2) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L3b3420.  v1:= "args" @kind object;
  #L3b3424.  v4:= v4.`h.a.c.a.i.b` @type ^`java.lang.Object` @kind object;
  #L3b3428.  call temp:= `a`(v4) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b342e.  v4:= temp @kind object;
  #L3b3430.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L3b3436.  v4:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b343a.  call temp:= `a`(v4, v0) @signature `Lh/a/c/a/e;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3440.  v4:= temp @kind object;
  #L3b3442.  return v4 @kind object;
  #L3b3444.  v4:= Exception @type ^`org.json.JSONException` @kind object;
  #L3b3446.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b344a.  v1:= "Invalid JSON" @kind object;
  #L3b344e.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3b3454.  throw v0;
  catch `org.json.JSONException` @[L3b3408..L3b3442] goto L3b3444;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.f` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lh/a/c/a/f;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3478.  v0:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b347c.  v1:= new `org.json.JSONArray`;
  #L3b3480.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3b3486.  call temp:= `a`(v3) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b348c.  v3:= temp @kind object;
  #L3b348e.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b3494.  v3:= temp @kind object;
  #L3b3496.  call temp:= `a`(v0, v3) @signature `Lh/a/c/a/e;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b349c.  v3:= temp @kind object;
  #L3b349e.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lh/a/c/a/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3358.  v0:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b335c.  v1:= new `org.json.JSONArray`;
  #L3b3360.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3b3366.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b336c.  v3:= temp @kind object;
  #L3b336e.  call temp:= `a`(v4) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b3374.  v4:= temp @kind object;
  #L3b3376.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b337c.  v3:= temp @kind object;
  #L3b337e.  call temp:= `a`(v5) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b3384.  v4:= temp @kind object;
  #L3b3386.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b338c.  v3:= temp @kind object;
  #L3b338e.  call temp:= `a`(v0, v3) @signature `Lh/a/c/a/e;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3394.  v3:= temp @kind object;
  #L3b3396.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lh/a/c/a/f;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b33a8.  v0:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b33ac.  v1:= new `org.json.JSONArray`;
  #L3b33b0.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3b33b6.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b33bc.  v3:= temp @kind object;
  #L3b33be.  call temp:= `a`(v4) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b33c4.  v4:= temp @kind object;
  #L3b33c6.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b33cc.  v3:= temp @kind object;
  #L3b33ce.  call temp:= `a`(v5) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b33d4.  v4:= temp @kind object;
  #L3b33d6.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b33dc.  v3:= temp @kind object;
  #L3b33de.  call temp:= `a`(v6) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b33e4.  v4:= temp @kind object;
  #L3b33e6.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3b33ec.  v3:= temp @kind object;
  #L3b33ee.  call temp:= `a`(v0, v3) @signature `Lh/a/c/a/e;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b33f4.  v3:= temp @kind object;
  #L3b33f6.  return v3 @kind object;
}
procedure `java.lang.Object` `b`(`h.a.c.a.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lh/a/c/a/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L3b333c.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L3b3340.  if v2 != v0 then goto L3b3346;
  #L3b3344.  v2:= 0I;
  #L3b3346.  return v2 @kind object;
}
procedure `java.lang.Object` `b`(`h.a.c.a.f` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lh/a/c/a/f;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b3240.  v0:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b3244.  call temp:= `a`(v0, v6) @signature `Lh/a/c/a/e;.a:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b324a.  v6:= temp @kind object;
  #L3b324c.  v0:= instanceof @variable v6 @type ^`org.json.JSONArray` @kind boolean;
  #L3b3250.  if v0 == 0 then goto L3b32dc;
  #L3b3254.  v0:= v6 @kind object;
  #L3b3256.  v0:= (`org.json.JSONArray`) v0 @kind object;
  #L3b325a.  call temp:= `length`(v0) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L3b3260.  v1:= temp;
  #L3b3262.  v2:= 0I;
  #L3b3264.  v3:= 1I;
  #L3b3266.  if v1 != v3 then goto L3b327c;
  #L3b326a.  call temp:= `opt`(v0, v2) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3b3270.  v6:= temp @kind object;
  #L3b3272.  call temp:= `b`(v5, v6) @signature `Lh/a/c/a/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b3278.  v6:= temp @kind object;
  #L3b327a.  return v6 @kind object;
  #L3b327c.  call temp:= `length`(v0) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L3b3282.  v1:= temp;
  #L3b3284.  v4:= 3I;
  #L3b3286.  if v1 != v4 then goto L3b32dc;
  #L3b328a.  call temp:= `get`(v0, v2) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3b3290.  v1:= temp @kind object;
  #L3b3292.  call temp:= `opt`(v0, v3) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3b3298.  v2:= temp @kind object;
  #L3b329a.  call temp:= `b`(v5, v2) @signature `Lh/a/c/a/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b32a0.  v2:= temp @kind object;
  #L3b32a2.  v3:= 2I;
  #L3b32a4.  call temp:= `opt`(v0, v3) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3b32aa.  v0:= temp @kind object;
  #L3b32ac.  call temp:= `b`(v5, v0) @signature `Lh/a/c/a/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b32b2.  v0:= temp @kind object;
  #L3b32b4.  v3:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L3b32b8.  if v3 == 0 then goto L3b32dc;
  #L3b32bc.  if v2 == 0 then goto L3b32c8;
  #L3b32c0.  v3:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L3b32c4.  if v3 == 0 then goto L3b32dc;
  #L3b32c8.  v6:= new `h.a.c.a.d`;
  #L3b32cc.  v1:= (`java.lang.String`) v1 @kind object;
  #L3b32d0.  v2:= (`java.lang.String`) v2 @kind object;
  #L3b32d4.  call `<init>`(v6, v1, v2, v0) @signature `Lh/a/c/a/d;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L3b32da.  throw v6;
  #L3b32dc.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b32e0.  v1:= new `java.lang.StringBuilder`;
  #L3b32e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b32ea.  v2:= "Invalid envelope: " @kind object;
  #L3b32ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b32f4.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b32fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b3300.  v6:= temp @kind object;
  #L3b3302.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b3308.  throw v0;
  #L3b330a.  v6:= Exception @type ^`org.json.JSONException` @kind object;
  #L3b330c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b3310.  v1:= "Invalid JSON" @kind object;
  #L3b3314.  call `<init>`(v0, v1, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3b331a.  throw v0;
  catch `org.json.JSONException` @[L3b3240..L3b330a] goto L3b330a;
}
