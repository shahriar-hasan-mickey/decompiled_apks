record `h.a.c.a.e` @kind class @AccessFlag PUBLIC_FINAL extends `h.a.c.a.h` @kind interface {
}
global `h.a.c.a.e` `@@h.a.c.a.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/a/c/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b3154.  v0:= new `h.a.c.a.e`;
  #L3b3158.  call `<init>`(v0) @signature `Lh/a/c/a/e;.<init>:()V` @kind direct;
  #L3b315e.  `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` := v0 @kind object;
  #L3b3162.  return @kind void;
}
procedure `void` `<init>`(`h.a.c.a.e` v0 @kind this) @signature `Lh/a/c/a/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b3174.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b317a.  return @kind void;
}
procedure `java.lang.Object` `a`(`h.a.c.a.e` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object) @signature `Lh/a/c/a/e;.a:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b3090.  v0:= "Invalid JSON" @kind object;
  #L3b3094.  if v3 != 0 then goto L3b309c;
  #L3b3098.  v3:= 0I;
  #L3b309a.  return v3 @kind object;
  #L3b309c.  v1:= `@@h.a.c.a.o.b` @type ^`h.a.c.a.o` @kind object;
  #L3b30a0.  call temp:= `a`(v1, v3) @signature `Lh/a/c/a/o;.a:(Ljava/nio/ByteBuffer;)Ljava/lang/String;` @kind virtual;
  #L3b30a6.  v3:= temp @kind object;
  #L3b30a8.  v1:= new `org.json.JSONTokener`;
  #L3b30ac.  call `<init>`(v1, v3) @signature `Lorg/json/JSONTokener;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b30b2.  call temp:= `nextValue`(v1) @signature `Lorg/json/JSONTokener;.nextValue:()Ljava/lang/Object;` @kind virtual;
  #L3b30b8.  v3:= temp @kind object;
  #L3b30ba.  call temp:= `more`(v1) @signature `Lorg/json/JSONTokener;.more:()Z` @kind virtual;
  #L3b30c0.  v1:= temp;
  #L3b30c2.  if v1 != 0 then goto L3b30c8;
  #L3b30c6.  return v3 @kind object;
  #L3b30c8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3b30cc.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b30d2.  throw v3;
  #L3b30d4.  v3:= Exception @type ^`org.json.JSONException` @kind object;
  #L3b30d6.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b30da.  call `<init>`(v1, v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3b30e0.  throw v1;
  catch `org.json.JSONException` @[L3b309c..L3b30d4] goto L3b30d4;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lh/a/c/a/e;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b3104.  if v2 != 0 then goto L3b310c;
  #L3b3108.  v2:= 0I;
  #L3b310a.  return v2 @kind object;
  #L3b310c.  call temp:= `a`(v2) @signature `Lh/a/c/a/g;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b3112.  v2:= temp @kind object;
  #L3b3114.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L3b3118.  if v0 == 0 then goto L3b3136;
  #L3b311c.  v0:= `@@h.a.c.a.o.b` @type ^`h.a.c.a.o` @kind object;
  #L3b3120.  v2:= (`java.lang.String`) v2 @kind object;
  #L3b3124.  call temp:= `quote`(v2) @signature `Lorg/json/JSONObject;.quote:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3b312a.  v2:= temp @kind object;
  #L3b312c.  call temp:= `a`(v0, v2) @signature `Lh/a/c/a/o;.a:(Ljava/lang/String;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3132.  v2:= temp @kind object;
  #L3b3134.  return v2 @kind object;
  #L3b3136.  v0:= `@@h.a.c.a.o.b` @type ^`h.a.c.a.o` @kind object;
  #L3b313a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b3140.  v2:= temp @kind object;
  #L3b3142.  goto L3b312c;
}
