record `h.a.c.a.m` @kind class @AccessFlag PUBLIC extends `h.a.c.a.h` @kind interface {
}
global `h.a.c.a.m` `@@h.a.c.a.m.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@h.a.c.a.m.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@h.a.c.a.m.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/a/c/a/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b3e5c.  v0:= new `h.a.c.a.m`;
  #L3b3e60.  call `<init>`(v0) @signature `Lh/a/c/a/m;.<init>:()V` @kind direct;
  #L3b3e66.  `@@h.a.c.a.m.a` @type ^`h.a.c.a.m` := v0 @kind object;
  #L3b3e6a.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L3b3e70.  v0:= temp @kind object;
  #L3b3e72.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3b3e76.  if v0 != v1 then goto L3b3e7e;
  #L3b3e7a.  v0:= 1I;
  #L3b3e7c.  goto L3b3e80;
  #L3b3e7e.  v0:= 0I;
  #L3b3e80.  `@@h.a.c.a.m.b` @type ^`boolean` := v0 @kind boolean;
  #L3b3e84.  v0:= "UTF8" @kind object;
  #L3b3e88.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3b3e8e.  v0:= temp @kind object;
  #L3b3e90.  `@@h.a.c.a.m.c` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L3b3e94.  return @kind void;
}
procedure `void` `<init>`(`h.a.c.a.m` v0 @kind this) @signature `Lh/a/c/a/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b3ea8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b3eae.  return @kind void;
}
procedure `void` `a`(`java.io.ByteArrayOutputStream` v0 @kind object, `double` v1 ) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;D)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;

  #L3b3f88.  call temp:= `doubleToLongBits`(v1) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3b3f8e.  v1:= temp @kind wide;
  #L3b3f90.  call `a`(v0, v1) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L3b3f96.  return @kind void;
}
procedure `void` `a`(`java.io.ByteArrayOutputStream` v4 @kind object, `int` v5 ) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b3ef4.  call temp:= `size`(v4) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3b3efa.  v0:= temp;
  #L3b3efc.  v0:= v0 %% v5 @kind int;
  #L3b3efe.  if v0 == 0 then goto L3b3f1a;
  #L3b3f02.  v1:= 0I;
  #L3b3f04.  v2:= 0I;
  #L3b3f06.  v3:= v5 - v0 @kind int;
  #L3b3f0a.  if v2 >= v3 then goto L3b3f1a;
  #L3b3f0e.  call `write`(v4, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3f14.  v2:= v2 + 1;
  #L3b3f18.  goto L3b3f06;
  #L3b3f1a.  return @kind void;
}
procedure `void` `a`(`java.io.ByteArrayOutputStream` v9 @kind object, `long` v10 ) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;J)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3b4008.  v0:= `@@h.a.c.a.m.b` @type ^`boolean` @kind boolean;
  #L3b400c.  v1:= 8I;
  #L3b4010.  v2:= 16I;
  #L3b4014.  v3:= 24I;
  #L3b4018.  v4:= 32I;
  #L3b401c.  v5:= 40I;
  #L3b4020.  v6:= 48I;
  #L3b4024.  v7:= 56I;
  #L3b4028.  if v0 == 0 then goto L3b408e;
  #L3b402c.  v0:= (`int`) v10 @kind l2i;
  #L3b402e.  v0:= (`byte`) v0 @kind i2b;
  #L3b4030.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4036.  v0:= v10 ^>> v1 @kind long;
  #L3b403a.  v1:= (`int`) v0 @kind l2i;
  #L3b403c.  v0:= (`byte`) v1 @kind i2b;
  #L3b403e.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4044.  v0:= v10 ^>> v2 @kind long;
  #L3b4048.  v1:= (`int`) v0 @kind l2i;
  #L3b404a.  v0:= (`byte`) v1 @kind i2b;
  #L3b404c.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4052.  v0:= v10 ^>> v3 @kind long;
  #L3b4056.  v1:= (`int`) v0 @kind l2i;
  #L3b4058.  v0:= (`byte`) v1 @kind i2b;
  #L3b405a.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4060.  v0:= v10 ^>> v4 @kind long;
  #L3b4064.  v1:= (`int`) v0 @kind l2i;
  #L3b4066.  v0:= (`byte`) v1 @kind i2b;
  #L3b4068.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b406e.  v0:= v10 ^>> v5 @kind long;
  #L3b4072.  v1:= (`int`) v0 @kind l2i;
  #L3b4074.  v0:= (`byte`) v1 @kind i2b;
  #L3b4076.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b407c.  v0:= v10 ^>> v6 @kind long;
  #L3b4080.  v1:= (`int`) v0 @kind l2i;
  #L3b4082.  v0:= (`byte`) v1 @kind i2b;
  #L3b4084.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b408a.  v10:= v10 ^>> v7 @kind long;
  #L3b408c.  goto L3b40f0;
  #L3b408e.  v7:= v10 ^>> v7 @kind long;
  #L3b4092.  v0:= (`int`) v7 @kind l2i;
  #L3b4094.  v0:= (`byte`) v0 @kind i2b;
  #L3b4096.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b409c.  v6:= v10 ^>> v6 @kind long;
  #L3b40a0.  v0:= (`int`) v6 @kind l2i;
  #L3b40a2.  v0:= (`byte`) v0 @kind i2b;
  #L3b40a4.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40aa.  v5:= v10 ^>> v5 @kind long;
  #L3b40ae.  v0:= (`int`) v5 @kind l2i;
  #L3b40b0.  v0:= (`byte`) v0 @kind i2b;
  #L3b40b2.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40b8.  v4:= v10 ^>> v4 @kind long;
  #L3b40bc.  v0:= (`int`) v4 @kind l2i;
  #L3b40be.  v0:= (`byte`) v0 @kind i2b;
  #L3b40c0.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40c6.  v3:= v10 ^>> v3 @kind long;
  #L3b40ca.  v0:= (`int`) v3 @kind l2i;
  #L3b40cc.  v0:= (`byte`) v0 @kind i2b;
  #L3b40ce.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40d4.  v2:= v10 ^>> v2 @kind long;
  #L3b40d8.  v0:= (`int`) v2 @kind l2i;
  #L3b40da.  v0:= (`byte`) v0 @kind i2b;
  #L3b40dc.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40e2.  v0:= v10 ^>> v1 @kind long;
  #L3b40e6.  v1:= (`int`) v0 @kind l2i;
  #L3b40e8.  v0:= (`byte`) v1 @kind i2b;
  #L3b40ea.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40f0.  v11:= (`int`) v10 @kind l2i;
  #L3b40f2.  v10:= (`byte`) v11 @kind i2b;
  #L3b40f4.  call `write`(v9, v10) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b40fa.  return @kind void;
}
procedure `void` `a`(`java.io.ByteArrayOutputStream` v2 @kind object, `byte`[] v3 @kind object) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;[B)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b3f2c.  v0:= length @variable v3;
  #L3b3f2e.  call `d`(v2, v0) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b3f34.  v0:= length @variable v3;
  #L3b3f36.  v1:= 0I;
  #L3b3f38.  call `write`(v2, v3, v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3b3f3e.  return @kind void;
}
procedure `void` `a`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 ) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b3ec0.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3b3ec6.  v0:= temp;
  #L3b3ec8.  v0:= v0 %% v3 @kind int;
  #L3b3eca.  if v0 == 0 then goto L3b3ee0;
  #L3b3ece.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3b3ed4.  v1:= temp;
  #L3b3ed6.  v1:= v1 + v3 @kind int;
  #L3b3ed8.  v1:= v1 - v0 @kind int;
  #L3b3eda.  call temp:= `position`(v2, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3b3ee0.  return @kind void;
}
procedure `void` `b`(`java.io.ByteArrayOutputStream` v1 @kind object, `int` v2 ) @signature `Lh/a/c/a/m;.b:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L3b3f50.  v0:= `@@h.a.c.a.m.b` @type ^`boolean` @kind boolean;
  #L3b3f54.  if v0 == 0 then goto L3b3f64;
  #L3b3f58.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3f5e.  v2:= v2 ^>> 8;
  #L3b3f62.  goto L3b3f6e;
  #L3b3f64.  v0:= v2 ^>> 8;
  #L3b3f68.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3f6e.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3f74.  return @kind void;
}
procedure `void` `c`(`java.io.ByteArrayOutputStream` v1 @kind object, `int` v2 ) @signature `Lh/a/c/a/m;.c:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L3b3fa8.  v0:= `@@h.a.c.a.m.b` @type ^`boolean` @kind boolean;
  #L3b3fac.  if v0 == 0 then goto L3b3fd0;
  #L3b3fb0.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fb6.  v0:= v2 ^>> 8;
  #L3b3fba.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fc0.  v0:= v2 ^>> 16;
  #L3b3fc4.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fca.  v2:= v2 ^>> 24;
  #L3b3fce.  goto L3b3fee;
  #L3b3fd0.  v0:= v2 ^>> 24;
  #L3b3fd4.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fda.  v0:= v2 ^>> 16;
  #L3b3fde.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fe4.  v0:= v2 ^>> 8;
  #L3b3fe8.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3fee.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b3ff4.  return @kind void;
}
procedure `byte`[] `c`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lh/a/c/a/m;.c:(Ljava/nio/ByteBuffer;)[B` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L3b3b04.  call temp:= `d`(v1) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3b0a.  v0:= temp;
  #L3b3b0c.  v0:= new `byte`[v0];
  #L3b3b10.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3b16.  return v0 @kind object;
}
procedure `int` `d`(`java.nio.ByteBuffer` v2 @kind object) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b3b28.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L3b3b2e.  v0:= temp;
  #L3b3b30.  if v0 == 0 then goto L3b3b62;
  #L3b3b34.  call temp:= `get`(v2) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L3b3b3a.  v0:= temp;
  #L3b3b3c.  v0:= v0 ^& 255;
  #L3b3b40.  v1:= 254I;
  #L3b3b44.  if v0 >= v1 then goto L3b3b4a;
  #L3b3b48.  return v0;
  #L3b3b4a.  if v0 != v1 then goto L3b3b58;
  #L3b3b4e.  call temp:= `getChar`(v2) @signature `Ljava/nio/ByteBuffer;.getChar:()C` @kind virtual;
  #L3b3b54.  v2:= temp;
  #L3b3b56.  return v2;
  #L3b3b58.  call temp:= `getInt`(v2) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3b3b5e.  v2:= temp;
  #L3b3b60.  return v2;
  #L3b3b62.  v2:= new `java.lang.IllegalArgumentException`;
  #L3b3b66.  v0:= "Message corrupted" @kind object;
  #L3b3b6a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b3b70.  throw v2;
}
procedure `void` `d`(`java.io.ByteArrayOutputStream` v2 @kind object, `int` v3 ) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b410c.  v0:= 254I;
  #L3b4110.  if v3 >= v0 then goto L3b411c;
  #L3b4114.  call `write`(v2, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b411a.  goto L3b4144;
  #L3b411c.  v1:= 65535I;
  #L3b4122.  if v3 > v1 then goto L3b4134;
  #L3b4126.  call `write`(v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b412c.  call `b`(v2, v3) @signature `Lh/a/c/a/m;.b:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4132.  goto L3b4144;
  #L3b4134.  v0:= 255I;
  #L3b4138.  call `write`(v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b413e.  call `c`(v2, v3) @signature `Lh/a/c/a/m;.c:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4144.  return @kind void;
}
procedure `java.lang.Object` `a`(`h.a.c.a.m` v4 @kind this, `byte` v5 , `java.nio.ByteBuffer` v6 @kind object) @signature `Lh/a/c/a/m;.a:(BLjava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b3c10.  v0:= 0I;
  #L3b3c12.  v1:= 8I;
  #L3b3c16.  goto L3b3db8;
  #L3b3c1c.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b3c20.  v6:= "Message corrupted" @kind object;
  #L3b3c24.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b3c2a.  throw v5;
  #L3b3c2c.  call temp:= `d`(v6) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3c32.  v5:= temp;
  #L3b3c34.  v1:= new `java.util.HashMap`;
  #L3b3c38.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3b3c3e.  if v0 >= v5 then goto L3b3db6;
  #L3b3c42.  call temp:= `b`(v4, v6) @signature `Lh/a/c/a/m;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3c48.  v2:= temp @kind object;
  #L3b3c4a.  call temp:= `b`(v4, v6) @signature `Lh/a/c/a/m;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3c50.  v3:= temp @kind object;
  #L3b3c52.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b3c58.  v0:= v0 + 1;
  #L3b3c5c.  goto L3b3c3e;
  #L3b3c5e.  call temp:= `d`(v6) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3c64.  v5:= temp;
  #L3b3c66.  v1:= new `java.util.ArrayList`;
  #L3b3c6a.  call `<init>`(v1, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3b3c70.  if v0 >= v5 then goto L3b3db6;
  #L3b3c74.  call temp:= `b`(v4, v6) @signature `Lh/a/c/a/m;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3c7a.  v2:= temp @kind object;
  #L3b3c7c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b3c82.  v0:= v0 + 1;
  #L3b3c86.  goto L3b3c70;
  #L3b3c88.  call temp:= `d`(v6) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3c8e.  v5:= temp;
  #L3b3c90.  v0:= new `double`[v5];
  #L3b3c94.  call `a`(v6, v1) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L3b3c9a.  call temp:= `asDoubleBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asDoubleBuffer:()Ljava/nio/DoubleBuffer;` @kind virtual;
  #L3b3ca0.  v2:= temp @kind object;
  #L3b3ca2.  call temp:= `get`(v2, v0) @signature `Ljava/nio/DoubleBuffer;.get:([D)Ljava/nio/DoubleBuffer;` @kind virtual;
  #L3b3ca8.  goto L3b3cca;
  #L3b3caa.  call temp:= `d`(v6) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3cb0.  v5:= temp;
  #L3b3cb2.  v0:= new `long`[v5];
  #L3b3cb6.  call `a`(v6, v1) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L3b3cbc.  call temp:= `asLongBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asLongBuffer:()Ljava/nio/LongBuffer;` @kind virtual;
  #L3b3cc2.  v2:= temp @kind object;
  #L3b3cc4.  call temp:= `get`(v2, v0) @signature `Ljava/nio/LongBuffer;.get:([J)Ljava/nio/LongBuffer;` @kind virtual;
  #L3b3cca.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3b3cd0.  v2:= temp;
  #L3b3cd2.  v5:= v5 * 8;
  #L3b3cd6.  v2:= v2 + v5 @kind int;
  #L3b3cd8.  call temp:= `position`(v6, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3b3cde.  v1:= v0 @kind object;
  #L3b3ce0.  goto L3b3db6;
  #L3b3ce2.  call temp:= `d`(v6) @signature `Lh/a/c/a/m;.d:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L3b3ce8.  v5:= temp;
  #L3b3cea.  v1:= new `int`[v5];
  #L3b3cee.  v0:= 4I;
  #L3b3cf0.  call `a`(v6, v0) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L3b3cf6.  call temp:= `asIntBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asIntBuffer:()Ljava/nio/IntBuffer;` @kind virtual;
  #L3b3cfc.  v2:= temp @kind object;
  #L3b3cfe.  call temp:= `get`(v2, v1) @signature `Ljava/nio/IntBuffer;.get:([I)Ljava/nio/IntBuffer;` @kind virtual;
  #L3b3d04.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3b3d0a.  v2:= temp;
  #L3b3d0c.  v5:= v5 * 4;
  #L3b3d10.  v2:= v2 + v5 @kind int;
  #L3b3d12.  call temp:= `position`(v6, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3b3d18.  goto L3b3db6;
  #L3b3d1a.  call temp:= `c`(v6) @signature `Lh/a/c/a/m;.c:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L3b3d20.  v1:= temp @kind object;
  #L3b3d22.  goto L3b3db6;
  #L3b3d24.  call temp:= `c`(v6) @signature `Lh/a/c/a/m;.c:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L3b3d2a.  v5:= temp @kind object;
  #L3b3d2c.  v1:= new `java.lang.String`;
  #L3b3d30.  v6:= `@@h.a.c.a.m.c` @type ^`java.nio.charset.Charset` @kind object;
  #L3b3d34.  call `<init>`(v1, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3b3d3a.  goto L3b3db6;
  #L3b3d3c.  call `a`(v6, v1) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L3b3d42.  call temp:= `getDouble`(v6) @signature `Ljava/nio/ByteBuffer;.getDouble:()D` @kind virtual;
  #L3b3d48.  v5:= temp @kind wide;
  #L3b3d4a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L3b3d50.  v1:= temp @kind object;
  #L3b3d52.  goto L3b3db6;
  #L3b3d54.  call temp:= `c`(v6) @signature `Lh/a/c/a/m;.c:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L3b3d5a.  v5:= temp @kind object;
  #L3b3d5c.  v1:= new `java.math.BigInteger`;
  #L3b3d60.  v6:= new `java.lang.String`;
  #L3b3d64.  v0:= `@@h.a.c.a.m.c` @type ^`java.nio.charset.Charset` @kind object;
  #L3b3d68.  call `<init>`(v6, v5, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3b3d6e.  v5:= 16I;
  #L3b3d72.  call `<init>`(v1, v6, v5) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3b3d78.  goto L3b3db6;
  #L3b3d7a.  call temp:= `getLong`(v6) @signature `Ljava/nio/ByteBuffer;.getLong:()J` @kind virtual;
  #L3b3d80.  v5:= temp @kind wide;
  #L3b3d82.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3b3d88.  v1:= temp @kind object;
  #L3b3d8a.  goto L3b3db6;
  #L3b3d8c.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3b3d92.  v5:= temp;
  #L3b3d94.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b3d9a.  v1:= temp @kind object;
  #L3b3d9c.  goto L3b3db6;
  #L3b3d9e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3b3da4.  v1:= temp @kind object;
  #L3b3da6.  goto L3b3db6;
  #L3b3da8.  v5:= 1I;
  #L3b3daa.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3b3db0.  v1:= temp @kind object;
  #L3b3db2.  goto L3b3db6;
  #L3b3db4.  v1:= 0I;
  #L3b3db6.  return v1 @kind object;
  #L3b3db8.  switch v5
                  | 0 => goto L3b3db4
                  | 1 => goto L3b3da8
                  | 2 => goto L3b3d9e
                  | 3 => goto L3b3d8c
                  | 4 => goto L3b3d7a
                  | 5 => goto L3b3d54
                  | 6 => goto L3b3d3c
                  | 7 => goto L3b3d24
                  | 8 => goto L3b3d1a
                  | 9 => goto L3b3ce2
                  | 10 => goto L3b3caa
                  | 11 => goto L3b3c88
                  | 12 => goto L3b3c5e
                  | 13 => goto L3b3c2c
                  | else => goto L3b3c1c;
}
procedure `java.lang.Object` `a`(`h.a.c.a.m` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lh/a/c/a/m;.a:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b3b84.  if v2 != 0 then goto L3b3b8c;
  #L3b3b88.  v2:= 0I;
  #L3b3b8a.  return v2 @kind object;
  #L3b3b8c.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L3b3b92.  v0:= temp @kind object;
  #L3b3b94.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3b9a.  call temp:= `b`(v1, v2) @signature `Lh/a/c/a/m;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3ba0.  v0:= temp @kind object;
  #L3b3ba2.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L3b3ba8.  v2:= temp;
  #L3b3baa.  if v2 != 0 then goto L3b3bb0;
  #L3b3bae.  return v0 @kind object;
  #L3b3bb0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3b3bb4.  v0:= "Message corrupted" @kind object;
  #L3b3bb8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b3bbe.  throw v2;
}
procedure `java.nio.ByteBuffer` `a`(`h.a.c.a.m` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lh/a/c/a/m;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b3e08.  if v4 != 0 then goto L3b3e10;
  #L3b3e0c.  v4:= 0I;
  #L3b3e0e.  return v4 @kind object;
  #L3b3e10.  v0:= new `h.a.c.a.m$a`;
  #L3b3e14.  call `<init>`(v0) @signature `Lh/a/c/a/m$a;.<init>:()V` @kind direct;
  #L3b3e1a.  call `a`(v3, v0, v4) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3b3e20.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3b3e26.  v4:= temp;
  #L3b3e28.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3b3e2e.  v4:= temp @kind object;
  #L3b3e30.  call temp:= `c`(v0) @signature `Lh/a/c/a/m$a;.c:()[B` @kind virtual;
  #L3b3e36.  v1:= temp @kind object;
  #L3b3e38.  v2:= 0I;
  #L3b3e3a.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3b3e40.  v0:= temp;
  #L3b3e42.  call temp:= `put`(v4, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3b3e48.  return v4 @kind object;
}
procedure `void` `a`(`h.a.c.a.m` v4 @kind this, `java.io.ByteArrayOutputStream` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b4158.  v0:= 0I;
  #L3b415a.  if v6 == 0 then goto L3b4470;
  #L3b415e.  v1:= 0I;
  #L3b4160.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b4166.  v1:= temp;
  #L3b4168.  if v1 == 0 then goto L3b4170;
  #L3b416c.  goto L3b4470;
  #L3b4170.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3b4174.  if v6 != v1 then goto L3b4184;
  #L3b4178.  v6:= 1I;
  #L3b417a.  call `write`(v5, v6) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4180.  goto L3b4476;
  #L3b4184.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3b4188.  if v6 != v1 then goto L3b4190;
  #L3b418c.  v6:= 2I;
  #L3b418e.  goto L3b417a;
  #L3b4190.  v1:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L3b4194.  v2:= 4I;
  #L3b4196.  v3:= 8I;
  #L3b419a.  if v1 == 0 then goto L3b429c;
  #L3b419e.  v0:= instanceof @variable v6 @type ^`java.lang.Integer` @kind boolean;
  #L3b41a2.  if v0 != 0 then goto L3b427e;
  #L3b41a6.  v0:= instanceof @variable v6 @type ^`java.lang.Short` @kind boolean;
  #L3b41aa.  if v0 != 0 then goto L3b427e;
  #L3b41ae.  v0:= instanceof @variable v6 @type ^`java.lang.Byte` @kind boolean;
  #L3b41b2.  if v0 == 0 then goto L3b41b8;
  #L3b41b6.  goto L3b427e;
  #L3b41b8.  v0:= instanceof @variable v6 @type ^`java.lang.Long` @kind boolean;
  #L3b41bc.  if v0 == 0 then goto L3b41dc;
  #L3b41c0.  call `write`(v5, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b41c6.  v6:= (`java.lang.Long`) v6 @kind object;
  #L3b41ca.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3b41d0.  v0:= temp @kind wide;
  #L3b41d2.  call `a`(v5, v0) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L3b41d8.  goto L3b4476;
  #L3b41dc.  v0:= instanceof @variable v6 @type ^`java.lang.Float` @kind boolean;
  #L3b41e0.  if v0 != 0 then goto L3b425a;
  #L3b41e4.  v0:= instanceof @variable v6 @type ^`java.lang.Double` @kind boolean;
  #L3b41e8.  if v0 == 0 then goto L3b41ee;
  #L3b41ec.  goto L3b425a;
  #L3b41ee.  v0:= instanceof @variable v6 @type ^`java.math.BigInteger` @kind boolean;
  #L3b41f2.  if v0 == 0 then goto L3b4224;
  #L3b41f6.  v0:= 5I;
  #L3b41f8.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b41fe.  v6:= (`java.math.BigInteger`) v6 @kind object;
  #L3b4202.  v0:= 16I;
  #L3b4206.  call temp:= `toString`(v6, v0) @signature `Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L3b420c.  v6:= temp @kind object;
  #L3b420e.  v0:= `@@h.a.c.a.m.c` @type ^`java.nio.charset.Charset` @kind object;
  #L3b4212.  call temp:= `getBytes`(v6, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3b4218.  v6:= temp @kind object;
  #L3b421a.  call `a`(v5, v6) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L3b4220.  goto L3b4476;
  #L3b4224.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b4228.  v0:= new `java.lang.StringBuilder`;
  #L3b422c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4232.  v1:= "Unsupported Number type: " @kind object;
  #L3b4236.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b423c.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3b4242.  v6:= temp @kind object;
  #L3b4244.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b424a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4250.  v6:= temp @kind object;
  #L3b4252.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4258.  throw v5;
  #L3b425a.  v0:= 6I;
  #L3b425c.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4262.  call `a`(v5, v3) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4268.  v6:= (`java.lang.Number`) v6 @kind object;
  #L3b426c.  call temp:= `doubleValue`(v6) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L3b4272.  v0:= temp @kind wide;
  #L3b4274.  call `a`(v5, v0) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;D)V` @kind static;
  #L3b427a.  goto L3b4476;
  #L3b427e.  v0:= 3I;
  #L3b4280.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4286.  v6:= (`java.lang.Number`) v6 @kind object;
  #L3b428a.  call temp:= `intValue`(v6) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b4290.  v6:= temp;
  #L3b4292.  call `c`(v5, v6) @signature `Lh/a/c/a/m;.c:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4298.  goto L3b4476;
  #L3b429c.  v1:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L3b42a0.  if v1 == 0 then goto L3b42c6;
  #L3b42a4.  v0:= 7I;
  #L3b42a6.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b42ac.  v6:= (`java.lang.String`) v6 @kind object;
  #L3b42b0.  v0:= `@@h.a.c.a.m.c` @type ^`java.nio.charset.Charset` @kind object;
  #L3b42b4.  call temp:= `getBytes`(v6, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3b42ba.  v6:= temp @kind object;
  #L3b42bc.  call `a`(v5, v6) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L3b42c2.  goto L3b4476;
  #L3b42c6.  v1:= instanceof @variable v6 @type ^`byte`[] @kind boolean;
  #L3b42ca.  if v1 == 0 then goto L3b42e2;
  #L3b42ce.  call `write`(v5, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b42d4.  v6:= (`byte`[]) v6 @kind object;
  #L3b42d8.  call `a`(v5, v6) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L3b42de.  goto L3b4476;
  #L3b42e2.  v1:= instanceof @variable v6 @type ^`int`[] @kind boolean;
  #L3b42e6.  if v1 == 0 then goto L3b431c;
  #L3b42ea.  v1:= 9I;
  #L3b42ee.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b42f4.  v6:= (`int`[]) v6 @kind object;
  #L3b42f8.  v1:= length @variable v6;
  #L3b42fa.  call `d`(v5, v1) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4300.  call `a`(v5, v2) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4306.  v1:= length @variable v6;
  #L3b4308.  if v0 >= v1 then goto L3b4476;
  #L3b430c.  v2:= v6[v0];
  #L3b4310.  call `c`(v5, v2) @signature `Lh/a/c/a/m;.c:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4316.  v0:= v0 + 1;
  #L3b431a.  goto L3b4308;
  #L3b431c.  v1:= instanceof @variable v6 @type ^`long`[] @kind boolean;
  #L3b4320.  if v1 == 0 then goto L3b4356;
  #L3b4324.  v1:= 10I;
  #L3b4328.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b432e.  v6:= (`long`[]) v6 @kind object;
  #L3b4332.  v1:= length @variable v6;
  #L3b4334.  call `d`(v5, v1) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b433a.  call `a`(v5, v3) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4340.  v1:= length @variable v6;
  #L3b4342.  if v0 >= v1 then goto L3b4476;
  #L3b4346.  v2:= v6[v0] @kind wide;
  #L3b434a.  call `a`(v5, v2) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L3b4350.  v0:= v0 + 1;
  #L3b4354.  goto L3b4342;
  #L3b4356.  v1:= instanceof @variable v6 @type ^`double`[] @kind boolean;
  #L3b435a.  if v1 == 0 then goto L3b4390;
  #L3b435e.  v1:= 11I;
  #L3b4362.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4368.  v6:= (`double`[]) v6 @kind object;
  #L3b436c.  v1:= length @variable v6;
  #L3b436e.  call `d`(v5, v1) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b4374.  call `a`(v5, v3) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b437a.  v1:= length @variable v6;
  #L3b437c.  if v0 >= v1 then goto L3b4476;
  #L3b4380.  v2:= v6[v0] @kind wide;
  #L3b4384.  call `a`(v5, v2) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;D)V` @kind static;
  #L3b438a.  v0:= v0 + 1;
  #L3b438e.  goto L3b437c;
  #L3b4390.  v0:= instanceof @variable v6 @type ^`java.util.List` @kind boolean;
  #L3b4394.  if v0 == 0 then goto L3b43d8;
  #L3b4398.  v0:= 12I;
  #L3b439c.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b43a2.  v6:= (`java.util.List`) v6 @kind object;
  #L3b43a6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3b43ac.  v0:= temp;
  #L3b43ae.  call `d`(v5, v0) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b43b4.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b43ba.  v6:= temp @kind object;
  #L3b43bc.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b43c2.  v0:= temp;
  #L3b43c4.  if v0 == 0 then goto L3b4476;
  #L3b43c8.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b43ce.  v0:= temp @kind object;
  #L3b43d0.  call `a`(v4, v5, v0) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3b43d6.  goto L3b43bc;
  #L3b43d8.  v0:= instanceof @variable v6 @type ^`java.util.Map` @kind boolean;
  #L3b43dc.  if v0 == 0 then goto L3b4442;
  #L3b43e0.  v0:= 13I;
  #L3b43e4.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b43ea.  v6:= (`java.util.Map`) v6 @kind object;
  #L3b43ee.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3b43f4.  v0:= temp;
  #L3b43f6.  call `d`(v5, v0) @signature `Lh/a/c/a/m;.d:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3b43fc.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3b4402.  v6:= temp @kind object;
  #L3b4404.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b440a.  v6:= temp @kind object;
  #L3b440c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b4412.  v0:= temp;
  #L3b4414.  if v0 == 0 then goto L3b4476;
  #L3b4418.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b441e.  v0:= temp @kind object;
  #L3b4420.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L3b4424.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3b442a.  v1:= temp @kind object;
  #L3b442c.  call `a`(v4, v5, v1) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3b4432.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3b4438.  v0:= temp @kind object;
  #L3b443a.  call `a`(v4, v5, v0) @signature `Lh/a/c/a/m;.a:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3b4440.  goto L3b440c;
  #L3b4442.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b4446.  v0:= new `java.lang.StringBuilder`;
  #L3b444a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4450.  v1:= "Unsupported value: " @kind object;
  #L3b4454.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b445a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4460.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4466.  v6:= temp @kind object;
  #L3b4468.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b446e.  throw v5;
  #L3b4470.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3b4476.  return @kind void;
}
procedure `java.lang.Object` `b`(`h.a.c.a.m` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lh/a/c/a/m;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3b3bd0.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L3b3bd6.  v0:= temp;
  #L3b3bd8.  if v0 == 0 then goto L3b3bee;
  #L3b3bdc.  call temp:= `get`(v2) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L3b3be2.  v0:= temp;
  #L3b3be4.  call temp:= `a`(v1, v0, v2) @signature `Lh/a/c/a/m;.a:(BLjava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3b3bea.  v2:= temp @kind object;
  #L3b3bec.  return v2 @kind object;
  #L3b3bee.  v2:= new `java.lang.IllegalArgumentException`;
  #L3b3bf2.  v0:= "Message corrupted" @kind object;
  #L3b3bf6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b3bfc.  throw v2;
}
