record `com.yalantis.ucrop.m.f$c` @kind class @AccessFlag  extends `com.yalantis.ucrop.m.f$b` @kind interface {
  `java.io.InputStream` `com.yalantis.ucrop.m.f$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.yalantis.ucrop.m.f$c` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/yalantis/ucrop/m/f$c;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a08b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a08ba.  v0.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L3a08be.  return @kind void;
}
procedure `int` `a`(`com.yalantis.ucrop.m.f$c` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/yalantis/ucrop/m/f$c;.a:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a07fc.  v0:= v5;
  #L3a07fe.  if v0 <= 0 then goto L3a081c;
  #L3a0802.  v1:= v3.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a0806.  v2:= v5 - v0 @kind int;
  #L3a080a.  call temp:= `read`(v1, v4, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3a0810.  v1:= temp;
  #L3a0812.  v2:= -1I;
  #L3a0814.  if v1 == v2 then goto L3a081c;
  #L3a0818.  v0:= v0 - v1 @kind int;
  #L3a081a.  goto L3a07fe;
  #L3a081c.  v5:= v5 - v0 @kind int;
  #L3a081e.  return v5;
}
procedure `short` `a`(`com.yalantis.ucrop.m.f$c` v1 @kind this) @signature `Lcom/yalantis/ucrop/m/f$c;.a:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a0890.  v0:= v1.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a0894.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3a089a.  v0:= temp;
  #L3a089c.  v0:= v0 ^& 255;
  #L3a08a0.  v0:= (`short`) v0 @kind i2s;
  #L3a08a2.  return v0;
}
procedure `int` `b`(`com.yalantis.ucrop.m.f$c` v2 @kind this) @signature `Lcom/yalantis/ucrop/m/f$c;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a07c0.  v0:= v2.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a07c4.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3a07ca.  v0:= temp;
  #L3a07cc.  v0:= v0 ^< 8;
  #L3a07d0.  v1:= 65280I;
  #L3a07d6.  v0:= v0 ^& v1 @kind int;
  #L3a07d8.  v1:= v2.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a07dc.  call temp:= `read`(v1) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3a07e2.  v1:= temp;
  #L3a07e4.  v1:= v1 ^& 255;
  #L3a07e8.  v0:= v0 ^| v1 @kind int;
  #L3a07ea.  return v0;
}
procedure `long` `skip`(`com.yalantis.ucrop.m.f$c` v7 @kind this, `long` v8 ) @signature `Lcom/yalantis/ucrop/m/f$c;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a0830.  v0:= 0L;
  #L3a0834.  v2:= lcmp(v8, v0);
  #L3a0838.  if v2 >= 0 then goto L3a083e;
  #L3a083c.  return v0 @kind wide;
  #L3a083e.  v2:= v8 @kind wide;
  #L3a0840.  v4:= lcmp(v2, v0);
  #L3a0844.  if v4 <= 0 then goto L3a087a;
  #L3a0848.  v4:= v7.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a084c.  call temp:= `skip`(v4, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L3a0852.  v4:= temp @kind wide;
  #L3a0854.  v6:= lcmp(v4, v0);
  #L3a0858.  if v6 <= 0 then goto L3a0860;
  #L3a085c.  v2:= v2 - v4 @kind long;
  #L3a085e.  goto L3a0840;
  #L3a0860.  v4:= v7.`com.yalantis.ucrop.m.f$c.a` @type ^`java.io.InputStream` @kind object;
  #L3a0864.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3a086a.  v4:= temp;
  #L3a086c.  v5:= -1I;
  #L3a086e.  if v4 != v5 then goto L3a0874;
  #L3a0872.  goto L3a087a;
  #L3a0874.  v4:= 1L;
  #L3a0878.  goto L3a085c;
  #L3a087a.  v8:= v8 - v2 @kind long;
  #L3a087c.  return v8 @kind wide;
}
