record `com.yalantis.ucrop.m.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `float` `a`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/yalantis/ucrop/m/b;.a:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0160.  v0:= 2.0F;
  #L3a0164.  v4:= v4 / v0 @kind float;
  #L3a0166.  v1:= v1 / v4 @kind float;
  #L3a0168.  v4:= 1.0F;
  #L3a016c.  v4:= fcmpg(v1, v4);
  #L3a0170.  v3:= v3 / v0 @kind float;
  #L3a0172.  if v4 >= 0 then goto L3a0184;
  #L3a0176.  v3:= v3 * v1 @kind float;
  #L3a017a.  v3:= v3 * v1 @kind float;
  #L3a017e.  v3:= v3 * v1 @kind float;
  #L3a0182.  goto L3a0194;
  #L3a0184.  v1:= v1 - v0 @kind float;
  #L3a0186.  v4:= v1 * v1 @kind float;
  #L3a018a.  v4:= v4 * v1 @kind float;
  #L3a018e.  v4:= v4 + v0 @kind float;
  #L3a0190.  v3:= v3 * v4 @kind float;
  #L3a0194.  v3:= v3 + v2 @kind float;
  #L3a0196.  return v3;
}
procedure `float` `b`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/yalantis/ucrop/m/b;.b:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a01a8.  v1:= v1 / v4 @kind float;
  #L3a01aa.  v4:= 1.0F;
  #L3a01ae.  v1:= v1 - v4 @kind float;
  #L3a01b0.  v0:= v1 * v1 @kind float;
  #L3a01b4.  v0:= v0 * v1 @kind float;
  #L3a01b8.  v0:= v0 + v4 @kind float;
  #L3a01ba.  v3:= v3 * v0 @kind float;
  #L3a01be.  v3:= v3 + v2 @kind float;
  #L3a01c0.  return v3;
}
