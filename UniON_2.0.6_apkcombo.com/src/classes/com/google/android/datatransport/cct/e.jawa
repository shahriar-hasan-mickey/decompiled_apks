record `com.google.android.datatransport.cct.e` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/datatransport/cct/e;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d76d4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d76da.  v0:= temp;
  #L1d76dc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d76e2.  v1:= temp;
  #L1d76e4.  v0:= v0 - v1 @kind int;
  #L1d76e6.  if v0 < 0 then goto L1d7752;
  #L1d76ea.  v1:= 1I;
  #L1d76ec.  if v0 > v1 then goto L1d7752;
  #L1d76f0.  v0:= new `java.lang.StringBuilder`;
  #L1d76f4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d76fa.  v1:= temp;
  #L1d76fc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d7702.  v2:= temp;
  #L1d7704.  v1:= v1 + v2 @kind int;
  #L1d7706.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1d770c.  v1:= 0I;
  #L1d770e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d7714.  v2:= temp;
  #L1d7716.  if v1 >= v2 then goto L1d7748;
  #L1d771a.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d7720.  v2:= temp;
  #L1d7722.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d7728.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d772e.  v2:= temp;
  #L1d7730.  if v2 <= v1 then goto L1d7742;
  #L1d7734.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d773a.  v2:= temp;
  #L1d773c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d7742.  v1:= v1 + 1;
  #L1d7746.  goto L1d770e;
  #L1d7748.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d774e.  v3:= temp @kind object;
  #L1d7750.  return v3 @kind object;
  #L1d7752.  v3:= new `java.lang.IllegalArgumentException`;
  #L1d7756.  v4:= "Invalid input received" @kind object;
  #L1d775a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d7760.  throw v3;
}
