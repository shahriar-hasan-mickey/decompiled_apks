record `com.google.mlkit.nl.languageid.LanguageIdentifierImpl` @kind class @AccessFlag PUBLIC extends `com.google.mlkit.nl.languageid.a` @kind interface {
  `java.util.concurrent.Executor` `com.google.mlkit.nl.languageid.LanguageIdentifierImpl.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `com.google.mlkit.nl.languageid.LanguageIdentifierImpl.c` @AccessFlag PRIVATE_FINAL;
  `e.e.a.b.j.b` `com.google.mlkit.nl.languageid.LanguageIdentifierImpl.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `close`(`com.google.mlkit.nl.languageid.LanguageIdentifierImpl` v2 @kind this) @signature `Lcom/google/mlkit/nl/languageid/LanguageIdentifierImpl;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38b67c.  v0:= v2.`com.google.mlkit.nl.languageid.LanguageIdentifierImpl.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L38b680.  v1:= 0I;
  #L38b682.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38b688.  v0:= temp @kind object;
  #L38b68a.  v0:= (`com.google.mlkit.nl.languageid.internal.LanguageIdentificationJni`) v0 @kind object;
  #L38b68e.  if v0 != 0 then goto L38b694;
  #L38b692.  return @kind void;
  #L38b694.  v1:= v2.`com.google.mlkit.nl.languageid.LanguageIdentifierImpl.d` @type ^`e.e.a.b.j.b` @kind object;
  #L38b698.  call `a`(v1) @signature `Le/e/a/b/j/b;.a:()V` @kind virtual;
  #L38b69e.  v1:= v2.`com.google.mlkit.nl.languageid.LanguageIdentifierImpl.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L38b6a2.  call `a`(v0, v1) @signature `Le/e/e/a/c/k;.a:(Ljava/util/concurrent/Executor;)V` @kind virtual;
  #L38b6a8.  return @kind void;
}
