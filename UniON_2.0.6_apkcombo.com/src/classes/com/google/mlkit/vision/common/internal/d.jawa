record `com.google.mlkit.vision.common.internal.d` @kind class @AccessFlag PUBLIC {
}
global `com.google.mlkit.vision.common.internal.d` `@@com.google.mlkit.vision.common.internal.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/mlkit/vision/common/internal/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L38f6ac.  v0:= new `com.google.mlkit.vision.common.internal.d`;
  #L38f6b0.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/common/internal/d;.<init>:()V` @kind direct;
  #L38f6b6.  `@@com.google.mlkit.vision.common.internal.d.a` @type ^`com.google.mlkit.vision.common.internal.d` := v0 @kind object;
  #L38f6ba.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.internal.d` v0 @kind this) @signature `Lcom/google/mlkit/vision/common/internal/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38f6cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38f6d2.  return @kind void;
}
procedure `android.graphics.Bitmap` `a`(`android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 , `int` v10 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38f120.  if v8 != 0 then goto L38f130;
  #L38f124.  v8:= 0I;
  #L38f126.  call temp:= `createBitmap`(v7, v8, v8, v9, v10) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L38f12c.  v7:= temp @kind object;
  #L38f12e.  return v7 @kind object;
  #L38f130.  v5:= new `android.graphics.Matrix`;
  #L38f134.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L38f13a.  v8:= (`float`) v8 @kind i2f;
  #L38f13c.  call temp:= `postRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L38f142.  v1:= 0I;
  #L38f144.  v2:= 0I;
  #L38f146.  v6:= 1I;
  #L38f148.  v0:= v7 @kind object;
  #L38f14a.  v3:= v9;
  #L38f14c.  v4:= v10;
  #L38f14e.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L38f154.  v7:= temp @kind object;
  #L38f156.  return v7 @kind object;
}
procedure `android.graphics.Bitmap` `a`(`com.google.mlkit.vision.common.internal.d` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_FINAL {
    temp;

  #L38f0d8.  call temp:= `a`(v0, v1) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;)[B` @kind virtual;
  #L38f0de.  v1:= temp @kind object;
  #L38f0e0.  call temp:= `a`(v1, v2, v3) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([BII)[B` @kind static;
  #L38f0e6.  v1:= temp @kind object;
  #L38f0e8.  v2:= length @variable v1;
  #L38f0ea.  v3:= 0I;
  #L38f0ec.  call temp:= `decodeByteArray`(v1, v3, v2) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L38f0f2.  v1:= temp @kind object;
  #L38f0f4.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L38f0fa.  v2:= temp;
  #L38f0fc.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L38f102.  v3:= temp;
  #L38f104.  call temp:= `a`(v1, v4, v2, v3) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L38f10a.  v1:= temp @kind object;
  #L38f10c.  return v1 @kind object;
}
procedure `com.google.mlkit.vision.common.internal.d` `a`() @signature `Lcom/google/mlkit/vision/common/internal/d;.a:()Lcom/google/mlkit/vision/common/internal/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38f27c.  v0:= `@@com.google.mlkit.vision.common.internal.d.a` @type ^`com.google.mlkit.vision.common.internal.d` @kind object;
  #L38f280.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`java.nio.ByteBuffer` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38f504.  call temp:= `rewind`(v6) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L38f50a.  call temp:= `limit`(v6) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L38f510.  v0:= temp;
  #L38f512.  v1:= v0 / 6;
  #L38f516.  if v7 == 0 then goto L38f524;
  #L38f51a.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L38f520.  v7:= temp @kind object;
  #L38f522.  goto L38f52c;
  #L38f524.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L38f52a.  v7:= temp @kind object;
  #L38f52c.  v0:= 0I;
  #L38f52e.  v2:= 0I;
  #L38f530.  v3:= v1 * 4;
  #L38f534.  if v2 >= v3 then goto L38f54c;
  #L38f538.  call temp:= `get`(v6, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L38f53e.  v3:= temp;
  #L38f540.  call temp:= `put`(v7, v2, v3) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f546.  v2:= v2 + 1;
  #L38f54a.  goto L38f530;
  #L38f54c.  v2:= v1 + v1 @kind int;
  #L38f550.  if v0 >= v2 then goto L38f57c;
  #L38f554.  v2:= v3 + v0 @kind int;
  #L38f558.  v4:= v0 %% 2;
  #L38f55c.  v4:= v4 * v1 @kind int;
  #L38f560.  v4:= v4 + v3 @kind int;
  #L38f562.  v5:= v0 / 2;
  #L38f566.  v4:= v4 + v5 @kind int;
  #L38f568.  call temp:= `get`(v6, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L38f56e.  v4:= temp;
  #L38f570.  call temp:= `put`(v7, v2, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f576.  v0:= v0 + 1;
  #L38f57a.  goto L38f54c;
  #L38f57c.  return v7 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`android.media.Image$Plane`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @AccessFlag STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L38f590.  v4:= v13 * v14 @kind int;
  #L38f594.  v0:= v4 / 4;
  #L38f598.  v0:= v0 + v0 @kind int;
  #L38f59a.  v0:= v0 + v4 @kind int;
  #L38f59c.  v11:= new `byte`[v0];
  #L38f5a0.  v0:= 1I;
  #L38f5a2.  v1:= v12[v0] @kind object;
  #L38f5a6.  call temp:= `getBuffer`(v1) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f5ac.  v1:= temp @kind object;
  #L38f5ae.  v2:= 2I;
  #L38f5b0.  v3:= v12[v2] @kind object;
  #L38f5b4.  call temp:= `getBuffer`(v3) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f5ba.  v3:= temp @kind object;
  #L38f5bc.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L38f5c2.  v5:= temp;
  #L38f5c4.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L38f5ca.  v6:= temp;
  #L38f5cc.  v7:= v5 + 1;
  #L38f5d0.  call temp:= `position`(v3, v7) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L38f5d6.  v7:= v6 + -1;
  #L38f5da.  call temp:= `limit`(v1, v7) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L38f5e0.  v7:= v4 + v4 @kind int;
  #L38f5e4.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L38f5ea.  v8:= temp;
  #L38f5ec.  v7:= v7 / 4;
  #L38f5f0.  v9:= v7 + -2;
  #L38f5f4.  v10:= 0I;
  #L38f5f6.  if v8 != v9 then goto L38f60a;
  #L38f5fa.  call temp:= `compareTo`(v3, v1) @signature `Ljava/nio/ByteBuffer;.compareTo:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L38f600.  v8:= temp;
  #L38f602.  if v8 != 0 then goto L38f60a;
  #L38f606.  v8:= 1I;
  #L38f608.  goto L38f60c;
  #L38f60a.  v8:= 0I;
  #L38f60c.  call temp:= `position`(v3, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L38f612.  call temp:= `limit`(v1, v6) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L38f618.  if v8 == 0 then goto L38f65a;
  #L38f61c.  v13:= v12[v10] @kind object;
  #L38f620.  call temp:= `getBuffer`(v13) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f626.  v13:= temp @kind object;
  #L38f628.  call temp:= `get`(v13, v11, v10, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f62e.  v13:= v12[v0] @kind object;
  #L38f632.  call temp:= `getBuffer`(v13) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f638.  v13:= temp @kind object;
  #L38f63a.  v12:= v12[v2] @kind object;
  #L38f63e.  call temp:= `getBuffer`(v12) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f644.  v12:= temp @kind object;
  #L38f646.  call temp:= `get`(v12, v11, v4, v0) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f64c.  v4:= v4 + v0 @kind int;
  #L38f64e.  v7:= v7 + -1;
  #L38f652.  call temp:= `get`(v13, v11, v4, v7) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f658.  goto L38f690;
  #L38f65a.  v5:= v12[v10] @kind object;
  #L38f65e.  v9:= 0I;
  #L38f660.  v10:= 1I;
  #L38f662.  v6:= v13;
  #L38f664.  v7:= v14;
  #L38f666.  v8:= v11 @kind object;
  #L38f668.  call `a`(v5, v6, v7, v8, v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L38f66e.  v5:= v12[v0] @kind object;
  #L38f672.  v9:= v4 + 1;
  #L38f676.  v10:= 2I;
  #L38f678.  call `a`(v5, v6, v7, v8, v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L38f67e.  v0:= v12[v2] @kind object;
  #L38f682.  v5:= 2I;
  #L38f684.  v1:= v13;
  #L38f686.  v2:= v14;
  #L38f688.  v3:= v11 @kind object;
  #L38f68a.  call `a`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L38f690.  call temp:= `wrap`(v11) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L38f696.  v12:= temp @kind object;
  #L38f698.  return v12 @kind object;
}
procedure `void` `a`(`android.media.Image$Plane` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/media/Image$Plane;II[BII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38f6e4.  call temp:= `getBuffer`(v7) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f6ea.  v0:= temp @kind object;
  #L38f6ec.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L38f6f2.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L38f6f8.  v1:= temp;
  #L38f6fa.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L38f700.  v2:= temp;
  #L38f702.  v1:= v1 + v2 @kind int;
  #L38f704.  v1:= v1 + -1;
  #L38f708.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L38f70e.  v2:= temp;
  #L38f710.  v1:= v1 / v2 @kind int;
  #L38f712.  if v1 != 0 then goto L38f718;
  #L38f716.  return @kind void;
  #L38f718.  v9:= v9 / v1 @kind int;
  #L38f71a.  v8:= v8 / v9 @kind int;
  #L38f71c.  v9:= 0I;
  #L38f71e.  v3:= v11;
  #L38f720.  v11:= 0I;
  #L38f722.  v2:= 0I;
  #L38f724.  if v11 >= v1 then goto L38f762;
  #L38f728.  v5:= v2;
  #L38f72a.  v4:= v3;
  #L38f72c.  v3:= 0I;
  #L38f72e.  if v3 >= v8 then goto L38f750;
  #L38f732.  call temp:= `get`(v0, v5) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L38f738.  v6:= temp;
  #L38f73a.  v10[v4]:= v6 @kind byte;
  #L38f73e.  v4:= v4 + v12 @kind int;
  #L38f740.  call temp:= `getPixelStride`(v7) @signature `Landroid/media/Image$Plane;.getPixelStride:()I` @kind virtual;
  #L38f746.  v6:= temp;
  #L38f748.  v5:= v5 + v6 @kind int;
  #L38f74a.  v3:= v3 + 1;
  #L38f74e.  goto L38f72e;
  #L38f750.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L38f756.  v3:= temp;
  #L38f758.  v2:= v2 + v3 @kind int;
  #L38f75a.  v11:= v11 + 1;
  #L38f75e.  v3:= v4;
  #L38f760.  goto L38f724;
  #L38f762.  return @kind void;
}
procedure `byte`[] `a`(`byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([BII)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38f1b8.  v6:= new `android.graphics.YuvImage`;
  #L38f1bc.  v2:= 17I;
  #L38f1c0.  v5:= 0I;
  #L38f1c2.  v0:= v6 @kind object;
  #L38f1c4.  v1:= v7 @kind object;
  #L38f1c6.  v3:= v8;
  #L38f1c8.  v4:= v9;
  #L38f1ca.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/YuvImage;.<init>:([BIII[I)V` @kind direct;
  #L38f1d0.  v7:= new `java.io.ByteArrayOutputStream`;
  #L38f1d4.  call `<init>`(v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L38f1da.  v0:= new `android.graphics.Rect`;
  #L38f1de.  v1:= 0I;
  #L38f1e0.  call `<init>`(v0, v1, v1, v8, v9) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L38f1e6.  v8:= 100I;
  #L38f1ea.  call temp:= `compressToJpeg`(v6, v0, v8, v7) @signature `Landroid/graphics/YuvImage;.compressToJpeg:(Landroid/graphics/Rect;ILjava/io/OutputStream;)Z` @kind virtual;
  #L38f1f0.  call temp:= `toByteArray`(v7) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L38f1f6.  v8:= temp @kind object;
  #L38f1f8.  call `close`(v7) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L38f1fe.  return v8 @kind object;
  #L38f200.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38f202.  call `close`(v7) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L38f208.  goto L38f212;
  #L38f20a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38f20c.  call `a`(v8, v7) @signature `Le/e/a/b/f/l/f;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L38f212.  throw v8;
  #L38f214.  v7:= "ImageConvertUtils" @kind object;
  #L38f218.  v8:= "Error closing ByteArrayOutputStream" @kind object;
  #L38f21c.  call temp:= `w`(v7, v8) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L38f222.  v7:= new `e.e.e.a.a`;
  #L38f226.  v8:= 13I;
  #L38f22a.  v9:= "Image conversion error from NV21 format" @kind object;
  #L38f22e.  call `<init>`(v7, v9, v8) @signature `Le/e/e/a/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38f234.  throw v7;
  catch `java.io.IOException` @[L38f1d0..L38f1da] goto L38f214;
  catch `java.lang.Throwable` @[L38f1da..L38f1f8] goto L38f200;
  catch `java.io.IOException` @[L38f1f8..L38f1fe] goto L38f214;
  catch `java.lang.Throwable` @[L38f202..L38f208] goto L38f20a;
  catch `java.io.IOException` @[L38f20c..L38f214] goto L38f214;
}
procedure `android.graphics.Bitmap` `a`(`com.google.mlkit.vision.common.internal.d` v4 @kind this, `e.e.e.b.b.a` v5 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Le/e/e/b/b/a;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38ef54.  call temp:= `c`(v5) @signature `Le/e/e/b/b/a;.c:()I` @kind virtual;
  #L38ef5a.  v0:= temp;
  #L38ef5c.  v1:= -1I;
  #L38ef5e.  if v0 == v1 then goto L38f092;
  #L38ef62.  v1:= 17I;
  #L38ef66.  if v0 == v1 then goto L38f05e;
  #L38ef6a.  v1:= 35I;
  #L38ef6e.  v2:= 13I;
  #L38ef72.  v3:= "Unsupported image format" @kind object;
  #L38ef76.  if v0 == v1 then goto L38effa;
  #L38ef7a.  v1:= 842094169I;
  #L38ef80.  if v0 != v1 then goto L38efee;
  #L38ef84.  call temp:= `b`(v5) @signature `Le/e/e/b/b/a;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38ef8a.  v0:= temp @kind object;
  #L38ef8c.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38ef92.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L38ef96.  call temp:= `h`(v5) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38ef9c.  v1:= temp;
  #L38ef9e.  call temp:= `d`(v5) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38efa4.  v2:= temp;
  #L38efa6.  call temp:= `g`(v5) @signature `Le/e/e/b/b/a;.g:()I` @kind virtual;
  #L38efac.  v5:= temp;
  #L38efae.  v3:= 1I;
  #L38efb0.  call temp:= `a`(v0, v3) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @kind static;
  #L38efb6.  v0:= temp @kind object;
  #L38efb8.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L38efbe.  v0:= temp @kind object;
  #L38efc0.  call temp:= `a`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([BII)[B` @kind static;
  #L38efc6.  v0:= temp @kind object;
  #L38efc8.  v1:= 0I;
  #L38efca.  v2:= length @variable v0;
  #L38efcc.  call temp:= `decodeByteArray`(v0, v1, v2) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L38efd2.  v0:= temp @kind object;
  #L38efd4.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L38efda.  v1:= temp;
  #L38efdc.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L38efe2.  v2:= temp;
  #L38efe4.  call temp:= `a`(v0, v5, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L38efea.  v5:= temp @kind object;
  #L38efec.  return v5 @kind object;
  #L38efee.  v5:= new `e.e.e.a.a`;
  #L38eff2.  call `<init>`(v5, v3, v2) @signature `Le/e/e/a/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38eff8.  throw v5;
  #L38effa.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L38effe.  v1:= 19I;
  #L38f002.  if v0 < v1 then goto L38f052;
  #L38f006.  call temp:= `f`(v5) @signature `Le/e/e/b/b/a;.f:()[Landroid/media/Image$Plane;` @kind virtual;
  #L38f00c.  v0:= temp @kind object;
  #L38f00e.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f014.  v0:= (`android.media.Image$Plane`[]) v0 @kind object;
  #L38f018.  call temp:= `h`(v5) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38f01e.  v1:= temp;
  #L38f020.  call temp:= `d`(v5) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38f026.  v2:= temp;
  #L38f028.  call temp:= `a`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @kind static;
  #L38f02e.  v0:= temp @kind object;
  #L38f030.  call temp:= `h`(v5) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38f036.  v1:= temp;
  #L38f038.  call temp:= `d`(v5) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38f03e.  v2:= temp;
  #L38f040.  call temp:= `g`(v5) @signature `Le/e/e/b/b/a;.g:()I` @kind virtual;
  #L38f046.  v5:= temp;
  #L38f048.  call temp:= `a`(v4, v0, v1, v2, v5) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @kind direct;
  #L38f04e.  v5:= temp @kind object;
  #L38f050.  return v5 @kind object;
  #L38f052.  v5:= new `e.e.e.a.a`;
  #L38f056.  call `<init>`(v5, v3, v2) @signature `Le/e/e/a/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38f05c.  throw v5;
  #L38f05e.  call temp:= `b`(v5) @signature `Le/e/e/b/b/a;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f064.  v0:= temp @kind object;
  #L38f066.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f06c.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L38f070.  call temp:= `h`(v5) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38f076.  v1:= temp;
  #L38f078.  call temp:= `d`(v5) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38f07e.  v2:= temp;
  #L38f080.  call temp:= `g`(v5) @signature `Le/e/e/b/b/a;.g:()I` @kind virtual;
  #L38f086.  v5:= temp;
  #L38f088.  call temp:= `a`(v4, v0, v1, v2, v5) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @kind direct;
  #L38f08e.  v5:= temp @kind object;
  #L38f090.  return v5 @kind object;
  #L38f092.  call temp:= `a`(v5) @signature `Le/e/e/b/b/a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L38f098.  v0:= temp @kind object;
  #L38f09a.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f0a0.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L38f0a4.  call temp:= `g`(v5) @signature `Le/e/e/b/b/a;.g:()I` @kind virtual;
  #L38f0aa.  v1:= temp;
  #L38f0ac.  call temp:= `h`(v5) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38f0b2.  v2:= temp;
  #L38f0b4.  call temp:= `d`(v5) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38f0ba.  v5:= temp;
  #L38f0bc.  call temp:= `a`(v0, v1, v2, v5) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L38f0c2.  v5:= temp @kind object;
  #L38f0c4.  return v5 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`com.google.mlkit.vision.common.internal.d` v17 @kind this, `e.e.e.b.b.a` v18 @kind object, `boolean` v19 ) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Le/e/e/b/b/a;Z)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L38f294.  v0:= v19;
  #L38f298.  call temp:= `c`(v18) @signature `Le/e/e/b/b/a;.c:()I` @kind virtual;
  #L38f29e.  v1:= temp;
  #L38f2a0.  v2:= -1I;
  #L38f2a2.  if v1 == v2 then goto L38f38c;
  #L38f2a6.  v2:= 17I;
  #L38f2aa.  if v1 == v2 then goto L38f334;
  #L38f2ae.  v2:= 35I;
  #L38f2b2.  v3:= 13I;
  #L38f2b6.  v4:= "Unsupported image format" @kind object;
  #L38f2ba.  if v1 == v2 then goto L38f2f0;
  #L38f2be.  v2:= 842094169I;
  #L38f2c4.  if v1 != v2 then goto L38f2e4;
  #L38f2c8.  call temp:= `b`(v18) @signature `Le/e/e/b/b/a;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f2ce.  v1:= temp @kind object;
  #L38f2d0.  call temp:= `a`(v1) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f2d6.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L38f2da.  call temp:= `a`(v1, v0) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @kind static;
  #L38f2e0.  v0:= temp @kind object;
  #L38f2e2.  return v0 @kind object;
  #L38f2e4.  v0:= new `e.e.e.a.a`;
  #L38f2e8.  call `<init>`(v0, v4, v3) @signature `Le/e/e/a/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38f2ee.  throw v0;
  #L38f2f0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L38f2f4.  v1:= 19I;
  #L38f2f8.  if v0 < v1 then goto L38f328;
  #L38f2fc.  call temp:= `f`(v18) @signature `Le/e/e/b/b/a;.f:()[Landroid/media/Image$Plane;` @kind virtual;
  #L38f302.  v0:= temp @kind object;
  #L38f304.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f30a.  v0:= (`android.media.Image$Plane`[]) v0 @kind object;
  #L38f30e.  call temp:= `h`(v18) @signature `Le/e/e/b/b/a;.h:()I` @kind virtual;
  #L38f314.  v1:= temp;
  #L38f316.  call temp:= `d`(v18) @signature `Le/e/e/b/b/a;.d:()I` @kind virtual;
  #L38f31c.  v2:= temp;
  #L38f31e.  call temp:= `a`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @kind static;
  #L38f324.  v0:= temp @kind object;
  #L38f326.  return v0 @kind object;
  #L38f328.  v0:= new `e.e.e.a.a`;
  #L38f32c.  call `<init>`(v0, v4, v3) @signature `Le/e/e/a/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38f332.  throw v0;
  #L38f334.  if v0 == 0 then goto L38f378;
  #L38f338.  call temp:= `b`(v18) @signature `Le/e/e/b/b/a;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f33e.  v0:= temp @kind object;
  #L38f340.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f346.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L38f34a.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L38f350.  v1:= temp;
  #L38f352.  if v1 != 0 then goto L38f38a;
  #L38f356.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L38f35c.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L38f362.  v1:= temp;
  #L38f364.  v1:= new `byte`[v1];
  #L38f368.  call temp:= `get`(v0, v1) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f36e.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L38f374.  v0:= temp @kind object;
  #L38f376.  goto L38f38a;
  #L38f378.  call temp:= `b`(v18) @signature `Le/e/e/b/b/a;.b:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f37e.  v0:= temp @kind object;
  #L38f380.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f386.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L38f38a.  return v0 @kind object;
  #L38f38c.  call temp:= `a`(v18) @signature `Le/e/e/b/b/a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L38f392.  v1:= temp @kind object;
  #L38f394.  call temp:= `a`(v1) @signature `Lcom/google/android/gms/common/internal/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L38f39a.  v2:= v1 @kind object;
  #L38f39c.  v2:= (`android.graphics.Bitmap`) v2 @kind object;
  #L38f3a0.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L38f3a6.  v1:= temp;
  #L38f3a8.  call temp:= `getHeight`(v2) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L38f3ae.  v10:= temp;
  #L38f3b0.  v11:= v1 * v10 @kind int;
  #L38f3b4.  v12:= new `int`[v11];
  #L38f3b8.  v4:= 0I;
  #L38f3ba.  v6:= 0I;
  #L38f3bc.  v7:= 0I;
  #L38f3be.  v3:= v12 @kind object;
  #L38f3c0.  v5:= v1;
  #L38f3c2.  v8:= v1;
  #L38f3c4.  v9:= v10;
  #L38f3c6.  call `getPixels`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L38f3cc.  v2:= (`double`) v10 @kind i2d;
  #L38f3ce.  v4:= 2.0D;
  #L38f3d2.  v2:= v2 / v4 @kind double;
  #L38f3d4.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L38f3da.  v2:= temp @kind wide;
  #L38f3dc.  v2:= (`int`) v2 @kind d2i;
  #L38f3de.  v2:= v2 + v2 @kind int;
  #L38f3e0.  v6:= (`double`) v1 @kind i2d;
  #L38f3e2.  v6:= v6 / v4 @kind double;
  #L38f3e4.  call temp:= `ceil`(v6) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L38f3ea.  v3:= temp @kind wide;
  #L38f3ec.  v3:= (`int`) v3 @kind d2i;
  #L38f3ee.  v2:= v2 * v3 @kind int;
  #L38f3f2.  v2:= v2 + v11 @kind int;
  #L38f3f4.  if v0 == 0 then goto L38f402;
  #L38f3f8.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L38f3fe.  v0:= temp @kind object;
  #L38f400.  goto L38f40a;
  #L38f402.  call temp:= `allocateDirect`(v2) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L38f408.  v0:= temp @kind object;
  #L38f40a.  v2:= 0I;
  #L38f40c.  v3:= 0I;
  #L38f40e.  v4:= 0I;
  #L38f410.  v5:= 0I;
  #L38f412.  if v3 >= v10 then goto L38f4f2;
  #L38f416.  v6:= v5;
  #L38f418.  v5:= v4;
  #L38f41a.  v4:= 0I;
  #L38f41c.  if v4 >= v1 then goto L38f4e8;
  #L38f420.  v7:= v12[v5];
  #L38f424.  v8:= v7 ^> 16;
  #L38f428.  v9:= 255I;
  #L38f42c.  v8:= v8 ^& v9 @kind int;
  #L38f42e.  v13:= v7 ^> 8;
  #L38f432.  v13:= v13 ^& v9 @kind int;
  #L38f434.  v7:= v7 ^& v9 @kind int;
  #L38f436.  v14:= v8 * -38;
  #L38f43a.  v15:= v13 * 74;
  #L38f43e.  v14:= v14 - v15 @kind int;
  #L38f440.  v15:= v7 * 112;
  #L38f444.  v14:= v14 + v15 @kind int;
  #L38f446.  v14:= v14 + 128;
  #L38f44a.  v14:= v14 ^> 8;
  #L38f44e.  v14:= v14 + 128;
  #L38f452.  v15:= v8 * 112;
  #L38f456.  v16:= v13 * 94;
  #L38f45a.  v15:= v15 - v16 @kind int;
  #L38f45e.  v16:= v7 * 18;
  #L38f462.  v15:= v15 - v16 @kind int;
  #L38f466.  v15:= v15 + 128;
  #L38f46a.  v15:= v15 ^> 8;
  #L38f46e.  v15:= v15 + 128;
  #L38f472.  v16:= v6 + 1;
  #L38f476.  v8:= v8 * 66;
  #L38f47a.  v13:= v13 * 129;
  #L38f47e.  v8:= v8 + v13 @kind int;
  #L38f480.  v7:= v7 * 25;
  #L38f484.  v8:= v8 + v7 @kind int;
  #L38f486.  v8:= v8 + 128;
  #L38f48a.  v7:= v8 ^> 8;
  #L38f48e.  v7:= v7 + 16;
  #L38f492.  call temp:= `min`(v9, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L38f498.  v7:= temp;
  #L38f49a.  v7:= (`byte`) v7 @kind i2b;
  #L38f49c.  call temp:= `put`(v0, v6, v7) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f4a2.  v6:= v3 %% 2;
  #L38f4a6.  if v6 != 0 then goto L38f4da;
  #L38f4aa.  v6:= v5 %% 2;
  #L38f4ae.  if v6 != 0 then goto L38f4da;
  #L38f4b2.  v6:= v11 + 1;
  #L38f4b6.  call temp:= `min`(v9, v15) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L38f4bc.  v7:= temp;
  #L38f4be.  v7:= (`byte`) v7 @kind i2b;
  #L38f4c0.  call temp:= `put`(v0, v11, v7) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f4c6.  v11:= v6 + 1;
  #L38f4ca.  call temp:= `min`(v9, v14) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L38f4d0.  v7:= temp;
  #L38f4d2.  v7:= (`byte`) v7 @kind i2b;
  #L38f4d4.  call temp:= `put`(v0, v6, v7) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f4da.  v5:= v5 + 1;
  #L38f4de.  v4:= v4 + 1;
  #L38f4e2.  v6:= v16;
  #L38f4e6.  goto L38f41c;
  #L38f4e8.  v3:= v3 + 1;
  #L38f4ec.  v4:= v5;
  #L38f4ee.  v5:= v6;
  #L38f4f0.  goto L38f412;
  #L38f4f2.  return v0 @kind object;
}
procedure `byte`[] `a`(`com.google.mlkit.vision.common.internal.d` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/d;.a:(Ljava/nio/ByteBuffer;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38f168.  call temp:= `hasArray`(v4) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L38f16e.  v0:= temp;
  #L38f170.  if v0 == 0 then goto L38f18a;
  #L38f174.  call temp:= `arrayOffset`(v4) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L38f17a.  v0:= temp;
  #L38f17c.  if v0 != 0 then goto L38f18a;
  #L38f180.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L38f186.  v4:= temp @kind object;
  #L38f188.  return v4 @kind object;
  #L38f18a.  call temp:= `rewind`(v4) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L38f190.  call temp:= `limit`(v4) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L38f196.  v0:= temp;
  #L38f198.  v0:= new `byte`[v0];
  #L38f19c.  v1:= 0I;
  #L38f19e.  v2:= length @variable v0;
  #L38f1a0.  call temp:= `get`(v4, v0, v1, v2) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L38f1a6.  return v0 @kind object;
}
