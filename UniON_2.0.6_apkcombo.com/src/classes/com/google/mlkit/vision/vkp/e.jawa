record `com.google.mlkit.vision.vkp.e` @kind class @AccessFlag FINAL extends `com.google.mlkit.vision.vkp.l$a` @kind class {
  `int` `com.google.mlkit.vision.vkp.e.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.vkp.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.vkp.e` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/mlkit/vision/vkp/e;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L397364.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/vkp/l$a;.<init>:()V` @kind direct;
  #L39736a.  v0.`com.google.mlkit.vision.vkp.e.a` @type ^`int` := v1;
  #L39736e.  v0.`com.google.mlkit.vision.vkp.e.b` @type ^`int` := v2;
  #L397372.  return @kind void;
}
procedure `int` `a`(`com.google.mlkit.vision.vkp.e` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/e;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3972b0.  v0:= v1.`com.google.mlkit.vision.vkp.e.b` @type ^`int`;
  #L3972b4.  return v0;
}
procedure `int` `b`(`com.google.mlkit.vision.vkp.e` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/e;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3972c8.  v0:= v1.`com.google.mlkit.vision.vkp.e.a` @type ^`int`;
  #L3972cc.  return v0;
}
procedure `boolean` `equals`(`com.google.mlkit.vision.vkp.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/mlkit/vision/vkp/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L397264.  v0:= 1I;
  #L397266.  if v5 != v4 then goto L39726c;
  #L39726a.  return v0;
  #L39726c.  v1:= instanceof @variable v5 @type ^`com.google.mlkit.vision.vkp.l$a` @kind boolean;
  #L397270.  v2:= 0I;
  #L397272.  if v1 == 0 then goto L39729c;
  #L397276.  v5:= (`com.google.mlkit.vision.vkp.l$a`) v5 @kind object;
  #L39727a.  v1:= v4.`com.google.mlkit.vision.vkp.e.a` @type ^`int`;
  #L39727e.  call temp:= `b`(v5) @signature `Lcom/google/mlkit/vision/vkp/l$a;.b:()I` @kind virtual;
  #L397284.  v3:= temp;
  #L397286.  if v1 != v3 then goto L39729c;
  #L39728a.  v1:= v4.`com.google.mlkit.vision.vkp.e.b` @type ^`int`;
  #L39728e.  call temp:= `a`(v5) @signature `Lcom/google/mlkit/vision/vkp/l$a;.a:()I` @kind virtual;
  #L397294.  v5:= temp;
  #L397296.  if v1 != v5 then goto L39729c;
  #L39729a.  return v0;
  #L39729c.  return v2;
}
procedure `int` `hashCode`(`com.google.mlkit.vision.vkp.e` v2 @kind this) @signature `Lcom/google/mlkit/vision/vkp/e;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3972e0.  v0:= v2.`com.google.mlkit.vision.vkp.e.a` @type ^`int`;
  #L3972e4.  v1:= 1000003I;
  #L3972ea.  v0:= v0 ^~ v1 @kind int;
  #L3972ec.  v0:= v0 * v1 @kind int;
  #L3972f0.  v1:= v2.`com.google.mlkit.vision.vkp.e.b` @type ^`int`;
  #L3972f4.  v0:= v0 ^~ v1 @kind int;
  #L3972f6.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.mlkit.vision.vkp.e` v4 @kind this) @signature `Lcom/google/mlkit/vision/vkp/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L397308.  v0:= v4.`com.google.mlkit.vision.vkp.e.a` @type ^`int`;
  #L39730c.  v1:= v4.`com.google.mlkit.vision.vkp.e.b` @type ^`int`;
  #L397310.  v2:= new `java.lang.StringBuilder`;
  #L397314.  v3:= 61I;
  #L397318.  call `<init>`(v2, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L39731e.  v3:= "VkpError{errorSpaceNumber=" @kind object;
  #L397322.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397328.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39732e.  v0:= ", errorCode=" @kind object;
  #L397332.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397338.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39733e.  v0:= "}" @kind object;
  #L397342.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397348.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39734e.  v0:= temp @kind object;
  #L397350.  return v0 @kind object;
}
