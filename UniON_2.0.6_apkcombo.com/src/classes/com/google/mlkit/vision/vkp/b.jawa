record `com.google.mlkit.vision.vkp.b` @kind class @AccessFlag FINAL extends `com.google.mlkit.vision.vkp.h` @kind class {
  `java.lang.String` `com.google.mlkit.vision.vkp.b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.mlkit.vision.vkp.b.b` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.mlkit.vision.vkp.b.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.vkp.b.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.vkp.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `float` v3 , `int` v4 ) @signature `Lcom/google/mlkit/vision/vkp/b;.<init>:(Ljava/lang/String;Ljava/lang/String;FI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L396f10.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/vkp/h;.<init>:()V` @kind direct;
  #L396f16.  if v1 == 0 then goto L396f40;
  #L396f1a.  v0.`com.google.mlkit.vision.vkp.b.a` @type ^`java.lang.String` := v1 @kind object;
  #L396f1e.  if v2 == 0 then goto L396f30;
  #L396f22.  v0.`com.google.mlkit.vision.vkp.b.b` @type ^`java.lang.String` := v2 @kind object;
  #L396f26.  v0.`com.google.mlkit.vision.vkp.b.c` @type ^`float` := v3;
  #L396f2a.  v0.`com.google.mlkit.vision.vkp.b.d` @type ^`int` := v4;
  #L396f2e.  return @kind void;
  #L396f30.  v1:= new `java.lang.NullPointerException`;
  #L396f34.  v2:= "Null text" @kind object;
  #L396f38.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L396f3e.  throw v1;
  #L396f40.  v1:= new `java.lang.NullPointerException`;
  #L396f44.  v2:= "Null className" @kind object;
  #L396f48.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L396f4e.  throw v1;
}
procedure `java.lang.String` `a`(`com.google.mlkit.vision.vkp.b` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396e4c.  v0:= v1.`com.google.mlkit.vision.vkp.b.a` @type ^`java.lang.String` @kind object;
  #L396e50.  return v0 @kind object;
}
procedure `int` `b`(`com.google.mlkit.vision.vkp.b` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396de0.  v0:= v1.`com.google.mlkit.vision.vkp.b.d` @type ^`int`;
  #L396de4.  return v0;
}
procedure `float` `c`(`com.google.mlkit.vision.vkp.b` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.c:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396dc8.  v0:= v1.`com.google.mlkit.vision.vkp.b.c` @type ^`float`;
  #L396dcc.  return v0;
}
procedure `java.lang.String` `d`(`com.google.mlkit.vision.vkp.b` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L396e64.  v0:= v1.`com.google.mlkit.vision.vkp.b.b` @type ^`java.lang.String` @kind object;
  #L396e68.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.google.mlkit.vision.vkp.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/mlkit/vision/vkp/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L396d3c.  v0:= 1I;
  #L396d3e.  if v5 != v4 then goto L396d44;
  #L396d42.  return v0;
  #L396d44.  v1:= instanceof @variable v5 @type ^`com.google.mlkit.vision.vkp.h` @kind boolean;
  #L396d48.  v2:= 0I;
  #L396d4a.  if v1 == 0 then goto L396db4;
  #L396d4e.  v5:= (`com.google.mlkit.vision.vkp.h`) v5 @kind object;
  #L396d52.  v1:= v4.`com.google.mlkit.vision.vkp.b.a` @type ^`java.lang.String` @kind object;
  #L396d56.  call temp:= `a`(v5) @signature `Lcom/google/mlkit/vision/vkp/h;.a:()Ljava/lang/String;` @kind virtual;
  #L396d5c.  v3:= temp @kind object;
  #L396d5e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L396d64.  v1:= temp;
  #L396d66.  if v1 == 0 then goto L396db4;
  #L396d6a.  v1:= v4.`com.google.mlkit.vision.vkp.b.b` @type ^`java.lang.String` @kind object;
  #L396d6e.  call temp:= `d`(v5) @signature `Lcom/google/mlkit/vision/vkp/h;.d:()Ljava/lang/String;` @kind virtual;
  #L396d74.  v3:= temp @kind object;
  #L396d76.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L396d7c.  v1:= temp;
  #L396d7e.  if v1 == 0 then goto L396db4;
  #L396d82.  v1:= v4.`com.google.mlkit.vision.vkp.b.c` @type ^`float`;
  #L396d86.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L396d8c.  v1:= temp;
  #L396d8e.  call temp:= `c`(v5) @signature `Lcom/google/mlkit/vision/vkp/h;.c:()F` @kind virtual;
  #L396d94.  v3:= temp;
  #L396d96.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L396d9c.  v3:= temp;
  #L396d9e.  if v1 != v3 then goto L396db4;
  #L396da2.  v1:= v4.`com.google.mlkit.vision.vkp.b.d` @type ^`int`;
  #L396da6.  call temp:= `b`(v5) @signature `Lcom/google/mlkit/vision/vkp/h;.b:()I` @kind virtual;
  #L396dac.  v5:= temp;
  #L396dae.  if v1 != v5 then goto L396db4;
  #L396db2.  return v0;
  #L396db4.  return v2;
}
procedure `int` `hashCode`(`com.google.mlkit.vision.vkp.b` v3 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L396df8.  v0:= v3.`com.google.mlkit.vision.vkp.b.a` @type ^`java.lang.String` @kind object;
  #L396dfc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L396e02.  v0:= temp;
  #L396e04.  v1:= 1000003I;
  #L396e0a.  v0:= v0 ^~ v1 @kind int;
  #L396e0c.  v0:= v0 * v1 @kind int;
  #L396e10.  v2:= v3.`com.google.mlkit.vision.vkp.b.b` @type ^`java.lang.String` @kind object;
  #L396e14.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L396e1a.  v2:= temp;
  #L396e1c.  v0:= v0 ^~ v2 @kind int;
  #L396e1e.  v0:= v0 * v1 @kind int;
  #L396e22.  v2:= v3.`com.google.mlkit.vision.vkp.b.c` @type ^`float`;
  #L396e26.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L396e2c.  v2:= temp;
  #L396e2e.  v0:= v0 ^~ v2 @kind int;
  #L396e30.  v0:= v0 * v1 @kind int;
  #L396e34.  v1:= v3.`com.google.mlkit.vision.vkp.b.d` @type ^`int`;
  #L396e38.  v0:= v0 ^~ v1 @kind int;
  #L396e3a.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.mlkit.vision.vkp.b` v7 @kind this) @signature `Lcom/google/mlkit/vision/vkp/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L396e7c.  v0:= v7.`com.google.mlkit.vision.vkp.b.a` @type ^`java.lang.String` @kind object;
  #L396e80.  v1:= v7.`com.google.mlkit.vision.vkp.b.b` @type ^`java.lang.String` @kind object;
  #L396e84.  v2:= v7.`com.google.mlkit.vision.vkp.b.c` @type ^`float`;
  #L396e88.  v3:= v7.`com.google.mlkit.vision.vkp.b.d` @type ^`int`;
  #L396e8c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L396e92.  v4:= temp;
  #L396e94.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L396e9a.  v5:= temp;
  #L396e9c.  v6:= new `java.lang.StringBuilder`;
  #L396ea0.  v4:= v4 + 74;
  #L396ea4.  v4:= v4 + v5 @kind int;
  #L396ea6.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L396eac.  v4:= "VkpImageLabel{className=" @kind object;
  #L396eb0.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396eb6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ebc.  v0:= ", text=" @kind object;
  #L396ec0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ec6.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ecc.  v0:= ", score=" @kind object;
  #L396ed0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ed6.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L396edc.  v0:= ", index=" @kind object;
  #L396ee0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ee6.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L396eec.  v0:= "}" @kind object;
  #L396ef0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L396ef6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L396efc.  v0:= temp @kind object;
  #L396efe.  return v0 @kind object;
}
