record `com.google.mlkit.vision.vkp.n` @kind class @AccessFlag FINAL extends `com.google.mlkit.vision.vkp.j` @kind class {
  `boolean` `com.google.mlkit.vision.vkp.n.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.mlkit.vision.vkp.n.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.mlkit.vision.vkp.n.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.mlkit.vision.vkp.n.d` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.mlkit.vision.vkp.n.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.vkp.n.f` @AccessFlag PRIVATE_FINAL;
  `e.e.e.a.b.b` `com.google.mlkit.vision.vkp.n.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.vkp.n` v0 @kind this, `boolean` v1 , `boolean` v2 , `boolean` v3 , `boolean` v4 , `float` v5 , `int` v6 , `e.e.e.a.b.b` v7 @kind object) @signature `Lcom/google/mlkit/vision/vkp/n;.<init>:(ZZZZFILe/e/e/a/b/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L398740.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/vkp/j;.<init>:()V` @kind direct;
  #L398746.  v0.`com.google.mlkit.vision.vkp.n.a` @type ^`boolean` := v1 @kind boolean;
  #L39874a.  v0.`com.google.mlkit.vision.vkp.n.b` @type ^`boolean` := v2 @kind boolean;
  #L39874e.  v0.`com.google.mlkit.vision.vkp.n.c` @type ^`boolean` := v3 @kind boolean;
  #L398752.  v0.`com.google.mlkit.vision.vkp.n.d` @type ^`boolean` := v4 @kind boolean;
  #L398756.  v0.`com.google.mlkit.vision.vkp.n.e` @type ^`float` := v5;
  #L39875a.  v0.`com.google.mlkit.vision.vkp.n.f` @type ^`int` := v6;
  #L39875e.  v0.`com.google.mlkit.vision.vkp.n.g` @type ^`e.e.e.a.b.b` := v7 @kind object;
  #L398762.  return @kind void;
}
procedure `boolean` `a`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L398520.  v0:= v1.`com.google.mlkit.vision.vkp.n.a` @type ^`boolean` @kind boolean;
  #L398524.  return v0;
}
procedure `boolean` `b`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.b:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L398538.  v0:= v1.`com.google.mlkit.vision.vkp.n.b` @type ^`boolean` @kind boolean;
  #L39853c.  return v0;
}
procedure `boolean` `c`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.c:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L398550.  v0:= v1.`com.google.mlkit.vision.vkp.n.c` @type ^`boolean` @kind boolean;
  #L398554.  return v0;
}
procedure `boolean` `d`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.d:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L398568.  v0:= v1.`com.google.mlkit.vision.vkp.n.d` @type ^`boolean` @kind boolean;
  #L39856c.  return v0;
}
procedure `float` `e`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.e:()F` @AccessFlag FINAL {
    temp;
    v0;

  #L398598.  v0:= v1.`com.google.mlkit.vision.vkp.n.e` @type ^`float`;
  #L39859c.  return v0;
}
procedure `boolean` `equals`(`com.google.mlkit.vision.vkp.n` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/mlkit/vision/vkp/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L398468.  v0:= 1I;
  #L39846a.  if v5 != v4 then goto L398470;
  #L39846e.  return v0;
  #L398470.  v1:= instanceof @variable v5 @type ^`com.google.mlkit.vision.vkp.j` @kind boolean;
  #L398474.  v2:= 0I;
  #L398476.  if v1 == 0 then goto L39850e;
  #L39847a.  v5:= (`com.google.mlkit.vision.vkp.j`) v5 @kind object;
  #L39847e.  v1:= v4.`com.google.mlkit.vision.vkp.n.a` @type ^`boolean` @kind boolean;
  #L398482.  call temp:= `a`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.a:()Z` @kind virtual;
  #L398488.  v3:= temp;
  #L39848a.  if v1 != v3 then goto L39850e;
  #L39848e.  v1:= v4.`com.google.mlkit.vision.vkp.n.b` @type ^`boolean` @kind boolean;
  #L398492.  call temp:= `b`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.b:()Z` @kind virtual;
  #L398498.  v3:= temp;
  #L39849a.  if v1 != v3 then goto L39850e;
  #L39849e.  v1:= v4.`com.google.mlkit.vision.vkp.n.c` @type ^`boolean` @kind boolean;
  #L3984a2.  call temp:= `c`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.c:()Z` @kind virtual;
  #L3984a8.  v3:= temp;
  #L3984aa.  if v1 != v3 then goto L39850e;
  #L3984ae.  v1:= v4.`com.google.mlkit.vision.vkp.n.d` @type ^`boolean` @kind boolean;
  #L3984b2.  call temp:= `d`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.d:()Z` @kind virtual;
  #L3984b8.  v3:= temp;
  #L3984ba.  if v1 != v3 then goto L39850e;
  #L3984be.  v1:= v4.`com.google.mlkit.vision.vkp.n.e` @type ^`float`;
  #L3984c2.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3984c8.  v1:= temp;
  #L3984ca.  call temp:= `e`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.e:()F` @kind virtual;
  #L3984d0.  v3:= temp;
  #L3984d2.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3984d8.  v3:= temp;
  #L3984da.  if v1 != v3 then goto L39850e;
  #L3984de.  v1:= v4.`com.google.mlkit.vision.vkp.n.f` @type ^`int`;
  #L3984e2.  call temp:= `f`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.f:()I` @kind virtual;
  #L3984e8.  v3:= temp;
  #L3984ea.  if v1 != v3 then goto L39850e;
  #L3984ee.  v1:= v4.`com.google.mlkit.vision.vkp.n.g` @type ^`e.e.e.a.b.b` @kind object;
  #L3984f2.  call temp:= `g`(v5) @signature `Lcom/google/mlkit/vision/vkp/j;.g:()Le/e/e/a/b/b;` @kind virtual;
  #L3984f8.  v5:= temp @kind object;
  #L3984fa.  if v1 != 0 then goto L398504;
  #L3984fe.  if v5 != 0 then goto L39850e;
  #L398502.  return v0;
  #L398504.  call temp:= `equals`(v1, v5) @signature `Le/e/e/a/b/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39850a.  v5:= 0I;
  #L39850c.  throw v5;
  #L39850e.  return v2;
}
procedure `int` `f`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.f:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L398660.  v0:= v1.`com.google.mlkit.vision.vkp.n.f` @type ^`int`;
  #L398664.  return v0;
}
procedure `e.e.e.a.b.b` `g`(`com.google.mlkit.vision.vkp.n` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.g:()Le/e/e/a/b/b;` @AccessFlag FINAL {
    temp;
    v0;

  #L398580.  v0:= v1.`com.google.mlkit.vision.vkp.n.g` @type ^`e.e.e.a.b.b` @kind object;
  #L398584.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.google.mlkit.vision.vkp.n` v6 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3985b0.  v0:= v6.`com.google.mlkit.vision.vkp.n.a` @type ^`boolean` @kind boolean;
  #L3985b4.  v1:= 1237I;
  #L3985b8.  v2:= 1231I;
  #L3985bc.  v3:= 1I;
  #L3985be.  if v3 == v0 then goto L3985c8;
  #L3985c2.  v0:= 1237I;
  #L3985c6.  goto L3985cc;
  #L3985c8.  v0:= 1231I;
  #L3985cc.  v4:= 1000003I;
  #L3985d2.  v0:= v0 ^~ v4 @kind int;
  #L3985d4.  v0:= v0 * v4 @kind int;
  #L3985d8.  v5:= v6.`com.google.mlkit.vision.vkp.n.b` @type ^`boolean` @kind boolean;
  #L3985dc.  if v3 == v5 then goto L3985e6;
  #L3985e0.  v5:= 1237I;
  #L3985e4.  goto L3985ea;
  #L3985e6.  v5:= 1231I;
  #L3985ea.  v0:= v0 ^~ v5 @kind int;
  #L3985ec.  v0:= v0 * v4 @kind int;
  #L3985f0.  v5:= v6.`com.google.mlkit.vision.vkp.n.c` @type ^`boolean` @kind boolean;
  #L3985f4.  if v3 == v5 then goto L3985fe;
  #L3985f8.  v5:= 1237I;
  #L3985fc.  goto L398602;
  #L3985fe.  v5:= 1231I;
  #L398602.  v0:= v0 ^~ v5 @kind int;
  #L398604.  v0:= v0 * v4 @kind int;
  #L398608.  v5:= v6.`com.google.mlkit.vision.vkp.n.d` @type ^`boolean` @kind boolean;
  #L39860c.  if v3 == v5 then goto L398612;
  #L398610.  goto L398616;
  #L398612.  v1:= 1231I;
  #L398616.  v0:= v0 ^~ v1 @kind int;
  #L398618.  v0:= v0 * v4 @kind int;
  #L39861c.  v1:= v6.`com.google.mlkit.vision.vkp.n.e` @type ^`float`;
  #L398620.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L398626.  v1:= temp;
  #L398628.  v0:= v0 ^~ v1 @kind int;
  #L39862a.  v0:= v0 * v4 @kind int;
  #L39862e.  v1:= v6.`com.google.mlkit.vision.vkp.n.f` @type ^`int`;
  #L398632.  v0:= v0 ^~ v1 @kind int;
  #L398634.  v0:= v0 * v4 @kind int;
  #L398638.  v1:= v6.`com.google.mlkit.vision.vkp.n.g` @type ^`e.e.e.a.b.b` @kind object;
  #L39863c.  if v1 != 0 then goto L398646;
  #L398640.  v0:= v0 ^~ 0;
  #L398644.  return v0;
  #L398646.  call temp:= `hashCode`(v1) @signature `Le/e/e/a/b/b;.hashCode:()I` @kind virtual;
  #L39864c.  v0:= 0I;
  #L39864e.  throw v0;
}
procedure `java.lang.String` `toString`(`com.google.mlkit.vision.vkp.n` v9 @kind this) @signature `Lcom/google/mlkit/vision/vkp/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L398678.  v0:= v9.`com.google.mlkit.vision.vkp.n.a` @type ^`boolean` @kind boolean;
  #L39867c.  v1:= v9.`com.google.mlkit.vision.vkp.n.b` @type ^`boolean` @kind boolean;
  #L398680.  v2:= v9.`com.google.mlkit.vision.vkp.n.c` @type ^`boolean` @kind boolean;
  #L398684.  v3:= v9.`com.google.mlkit.vision.vkp.n.d` @type ^`boolean` @kind boolean;
  #L398688.  v4:= v9.`com.google.mlkit.vision.vkp.n.e` @type ^`float`;
  #L39868c.  v5:= v9.`com.google.mlkit.vision.vkp.n.f` @type ^`int`;
  #L398690.  v6:= "null" @kind object;
  #L398694.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L39869a.  v7:= temp;
  #L39869c.  v8:= new `java.lang.StringBuilder`;
  #L3986a0.  v7:= v7 + 247;
  #L3986a4.  call `<init>`(v8, v7) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3986aa.  v7:= "VkpObjectDetectorOptions{streamingMode=" @kind object;
  #L3986ae.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986b4.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986ba.  v0:= ", multipleObjectsEnabled=" @kind object;
  #L3986be.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986c4.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986ca.  v0:= ", classificationEnabled=" @kind object;
  #L3986ce.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986d4.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986da.  v0:= ", accelerationEnabled=" @kind object;
  #L3986de.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986e4.  call temp:= `append`(v8, v3) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986ea.  v0:= ", classificationConfidenceThreshold=" @kind object;
  #L3986ee.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986f4.  call temp:= `append`(v8, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3986fa.  v0:= ", maxPerObjectLabelCount=" @kind object;
  #L3986fe.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398704.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39870a.  v0:= ", customClassifierLocalModel=" @kind object;
  #L39870e.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398714.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39871a.  v0:= "}" @kind object;
  #L39871e.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398724.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39872a.  v0:= temp @kind object;
  #L39872c.  return v0 @kind object;
}
