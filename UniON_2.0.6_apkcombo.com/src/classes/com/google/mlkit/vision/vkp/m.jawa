record `com.google.mlkit.vision.vkp.m` @kind class @AccessFlag FINAL extends `com.google.mlkit.vision.vkp.i` @kind class {
  `float` `com.google.mlkit.vision.vkp.m.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.vkp.m.b` @AccessFlag PRIVATE_FINAL;
  `e.e.e.a.b.b` `com.google.mlkit.vision.vkp.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.vkp.m` v0 @kind this, `float` v1 , `int` v2 , `e.e.e.a.b.b` v3 @kind object) @signature `Lcom/google/mlkit/vision/vkp/m;.<init>:(FILe/e/e/a/b/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L398444.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/vkp/i;.<init>:()V` @kind direct;
  #L39844a.  v0.`com.google.mlkit.vision.vkp.m.a` @type ^`float` := v1;
  #L39844e.  v0.`com.google.mlkit.vision.vkp.m.b` @type ^`int` := v2;
  #L398452.  v0.`com.google.mlkit.vision.vkp.m.c` @type ^`e.e.e.a.b.b` := v3 @kind object;
  #L398456.  return @kind void;
}
procedure `float` `a`(`com.google.mlkit.vision.vkp.m` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/m;.a:()F` @AccessFlag FINAL {
    temp;
    v0;

  #L398350.  v0:= v1.`com.google.mlkit.vision.vkp.m.a` @type ^`float`;
  #L398354.  return v0;
}
procedure `int` `b`(`com.google.mlkit.vision.vkp.m` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/m;.b:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L3983b4.  v0:= v1.`com.google.mlkit.vision.vkp.m.b` @type ^`int`;
  #L3983b8.  return v0;
}
procedure `e.e.e.a.b.b` `c`(`com.google.mlkit.vision.vkp.m` v1 @kind this) @signature `Lcom/google/mlkit/vision/vkp/m;.c:()Le/e/e/a/b/b;` @AccessFlag FINAL {
    temp;
    v0;

  #L398338.  v0:= v1.`com.google.mlkit.vision.vkp.m.c` @type ^`e.e.e.a.b.b` @kind object;
  #L39833c.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.google.mlkit.vision.vkp.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/mlkit/vision/vkp/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3982c0.  v0:= 1I;
  #L3982c2.  if v5 != v4 then goto L3982c8;
  #L3982c6.  return v0;
  #L3982c8.  v1:= instanceof @variable v5 @type ^`com.google.mlkit.vision.vkp.i` @kind boolean;
  #L3982cc.  v2:= 0I;
  #L3982ce.  if v1 == 0 then goto L398326;
  #L3982d2.  v5:= (`com.google.mlkit.vision.vkp.i`) v5 @kind object;
  #L3982d6.  v1:= v4.`com.google.mlkit.vision.vkp.m.a` @type ^`float`;
  #L3982da.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3982e0.  v1:= temp;
  #L3982e2.  call temp:= `a`(v5) @signature `Lcom/google/mlkit/vision/vkp/i;.a:()F` @kind virtual;
  #L3982e8.  v3:= temp;
  #L3982ea.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3982f0.  v3:= temp;
  #L3982f2.  if v1 != v3 then goto L398326;
  #L3982f6.  v1:= v4.`com.google.mlkit.vision.vkp.m.b` @type ^`int`;
  #L3982fa.  call temp:= `b`(v5) @signature `Lcom/google/mlkit/vision/vkp/i;.b:()I` @kind virtual;
  #L398300.  v3:= temp;
  #L398302.  if v1 != v3 then goto L398326;
  #L398306.  v1:= v4.`com.google.mlkit.vision.vkp.m.c` @type ^`e.e.e.a.b.b` @kind object;
  #L39830a.  call temp:= `c`(v5) @signature `Lcom/google/mlkit/vision/vkp/i;.c:()Le/e/e/a/b/b;` @kind virtual;
  #L398310.  v5:= temp @kind object;
  #L398312.  if v1 != 0 then goto L39831c;
  #L398316.  if v5 != 0 then goto L398326;
  #L39831a.  return v0;
  #L39831c.  call temp:= `equals`(v1, v5) @signature `Le/e/e/a/b/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L398322.  v5:= 0I;
  #L398324.  throw v5;
  #L398326.  return v2;
}
procedure `int` `hashCode`(`com.google.mlkit.vision.vkp.m` v3 @kind this) @signature `Lcom/google/mlkit/vision/vkp/m;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L398368.  v0:= v3.`com.google.mlkit.vision.vkp.m.a` @type ^`float`;
  #L39836c.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L398372.  v0:= temp;
  #L398374.  v1:= 1000003I;
  #L39837a.  v0:= v0 ^~ v1 @kind int;
  #L39837c.  v0:= v0 * v1 @kind int;
  #L398380.  v2:= v3.`com.google.mlkit.vision.vkp.m.b` @type ^`int`;
  #L398384.  v0:= v0 ^~ v2 @kind int;
  #L398386.  v0:= v0 * v1 @kind int;
  #L39838a.  v1:= v3.`com.google.mlkit.vision.vkp.m.c` @type ^`e.e.e.a.b.b` @kind object;
  #L39838e.  if v1 != 0 then goto L398398;
  #L398392.  v0:= v0 ^~ 0;
  #L398396.  return v0;
  #L398398.  call temp:= `hashCode`(v1) @signature `Le/e/e/a/b/b;.hashCode:()I` @kind virtual;
  #L39839e.  v0:= 0I;
  #L3983a0.  throw v0;
}
procedure `java.lang.String` `toString`(`com.google.mlkit.vision.vkp.m` v5 @kind this) @signature `Lcom/google/mlkit/vision/vkp/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3983cc.  v0:= v5.`com.google.mlkit.vision.vkp.m.a` @type ^`float`;
  #L3983d0.  v1:= v5.`com.google.mlkit.vision.vkp.m.b` @type ^`int`;
  #L3983d4.  v2:= "null" @kind object;
  #L3983d8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3983de.  v3:= temp;
  #L3983e0.  v4:= new `java.lang.StringBuilder`;
  #L3983e4.  v3:= v3 + 116;
  #L3983e8.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3983ee.  v3:= "VkpImageLabelerOptions{confidenceThreshold=" @kind object;
  #L3983f2.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3983f8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3983fe.  v0:= ", maxResultCount=" @kind object;
  #L398402.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398408.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39840e.  v0:= ", customClassifierLocalModel=" @kind object;
  #L398412.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398418.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39841e.  v0:= "}" @kind object;
  #L398422.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L398428.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39842e.  v0:= temp @kind object;
  #L398430.  return v0 @kind object;
}
