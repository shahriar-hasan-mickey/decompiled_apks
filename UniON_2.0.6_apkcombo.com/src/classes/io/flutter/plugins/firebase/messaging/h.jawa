record `io.flutter.plugins.firebase.messaging.h` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `io.flutter.plugins.firebase.messaging.r` `io.flutter.plugins.firebase.messaging.h.a` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.h` v0 @kind this, `io.flutter.plugins.firebase.messaging.r` v1 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/h;.<init>:(Lio/flutter/plugins/firebase/messaging/r;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c0cec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c0cf2.  v0.`io.flutter.plugins.firebase.messaging.h.a` @type ^`io.flutter.plugins.firebase.messaging.r` := v1 @kind object;
  #L3c0cf6.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.flutter.plugins.firebase.messaging.h` v1 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/h;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c0ccc.  v0:= v1.`io.flutter.plugins.firebase.messaging.h.a` @type ^`io.flutter.plugins.firebase.messaging.r` @kind object;
  #L3c0cd0.  call temp:= `a`(v0) @signature `Lio/flutter/plugins/firebase/messaging/r;.a:()Ljava/util/Map;` @kind virtual;
  #L3c0cd6.  v0:= temp @kind object;
  #L3c0cd8.  return v0 @kind object;
}
