record `io.flutter.plugins.firebase.messaging.p` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `java.lang.String` `io.flutter.plugins.firebase.messaging.p.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.p` v0 @kind this, `io.flutter.plugins.firebase.messaging.r` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/p;.<init>:(Lio/flutter/plugins/firebase/messaging/r;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c17b8.  v0.`io.flutter.plugins.firebase.messaging.p.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c17bc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3c17c2.  v1:= v0.`io.flutter.plugins.firebase.messaging.p.b` @type ^`java.lang.String` @kind object;
  #L3c17c6.  v2:= "token" @kind object;
  #L3c17ca.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3c17d0.  return @kind void;
}
