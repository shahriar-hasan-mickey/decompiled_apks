record `io.flutter.plugins.firebase.messaging.k` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `io.flutter.plugins.firebase.messaging.r` `io.flutter.plugins.firebase.messaging.k.a` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `java.util.Map` `io.flutter.plugins.firebase.messaging.k.b` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.k` v0 @kind this, `io.flutter.plugins.firebase.messaging.r` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/k;.<init>:(Lio/flutter/plugins/firebase/messaging/r;Ljava/util/Map;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c0dbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c0dc2.  v0.`io.flutter.plugins.firebase.messaging.k.a` @type ^`io.flutter.plugins.firebase.messaging.r` := v1 @kind object;
  #L3c0dc6.  v0.`io.flutter.plugins.firebase.messaging.k.b` @type ^`java.util.Map` := v2 @kind object;
  #L3c0dca.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.flutter.plugins.firebase.messaging.k` v2 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/k;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3c0d98.  v0:= v2.`io.flutter.plugins.firebase.messaging.k.a` @type ^`io.flutter.plugins.firebase.messaging.r` @kind object;
  #L3c0d9c.  v1:= v2.`io.flutter.plugins.firebase.messaging.k.b` @type ^`java.util.Map` @kind object;
  #L3c0da0.  call temp:= `b`(v0, v1) @signature `Lio/flutter/plugins/firebase/messaging/r;.b:(Ljava/util/Map;)Ljava/util/Map;` @kind virtual;
  #L3c0da6.  v0:= temp @kind object;
  #L3c0da8.  return v0 @kind object;
}
