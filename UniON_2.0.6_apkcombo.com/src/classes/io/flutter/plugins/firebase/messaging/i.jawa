record `io.flutter.plugins.firebase.messaging.i` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `java.util.Map` `io.flutter.plugins.firebase.messaging.i.a` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.i` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/i;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c0d28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c0d2e.  v0.`io.flutter.plugins.firebase.messaging.i.a` @type ^`java.util.Map` := v1 @kind object;
  #L3c0d32.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.flutter.plugins.firebase.messaging.i` v1 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/i;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c0d08.  v0:= v1.`io.flutter.plugins.firebase.messaging.i.a` @type ^`java.util.Map` @kind object;
  #L3c0d0c.  call temp:= `h`(v0) @signature `Lio/flutter/plugins/firebase/messaging/r;.h:(Ljava/util/Map;)Ljava/lang/Void;` @kind static;
  #L3c0d12.  v0:= temp @kind object;
  #L3c0d14.  return v0 @kind object;
}
