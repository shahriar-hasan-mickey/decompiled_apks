record `io.flutter.plugins.firebase.messaging.o$b` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `java.util.Map` `io.flutter.plugins.firebase.messaging.o$b.b` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugins.firebase.messaging.o` `io.flutter.plugins.firebase.messaging.o$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.o$b` v0 @kind this, `io.flutter.plugins.firebase.messaging.o` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/o$b;.<init>:(Lio/flutter/plugins/firebase/messaging/o;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c0f64.  v0.`io.flutter.plugins.firebase.messaging.o$b.c` @type ^`io.flutter.plugins.firebase.messaging.o` := v1 @kind object;
  #L3c0f68.  v0.`io.flutter.plugins.firebase.messaging.o$b.b` @type ^`java.util.Map` := v2 @kind object;
  #L3c0f6c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3c0f72.  v1:= v0.`io.flutter.plugins.firebase.messaging.o$b.c` @type ^`io.flutter.plugins.firebase.messaging.o` @kind object;
  #L3c0f76.  call temp:= `a`(v1) @signature `Lio/flutter/plugins/firebase/messaging/o;.a:(Lio/flutter/plugins/firebase/messaging/o;)J` @kind static;
  #L3c0f7c.  v1:= temp @kind wide;
  #L3c0f7e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c0f84.  v1:= temp @kind object;
  #L3c0f86.  v2:= "userCallbackHandle" @kind object;
  #L3c0f8a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3c0f90.  v1:= v0.`io.flutter.plugins.firebase.messaging.o$b.b` @type ^`java.util.Map` @kind object;
  #L3c0f94.  v2:= "message" @kind object;
  #L3c0f98.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3c0f9e.  return @kind void;
}
