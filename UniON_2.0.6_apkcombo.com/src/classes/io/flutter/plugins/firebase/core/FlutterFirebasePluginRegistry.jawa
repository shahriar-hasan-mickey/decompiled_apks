record `io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry` @kind class @AccessFlag PUBLIC {
}
global `java.util.Map` `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c0a8c.  v0:= new `java.util.WeakHashMap`;
  #L3c0a90.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3c0a96.  `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` := v0 @kind object;
  #L3c0a9a.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry` v0 @kind this) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c0aac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c0ab2.  return @kind void;
}
procedure `java.lang.Void` `a`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.a:()Ljava/lang/Void;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3c09ac.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L3c09b0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3c09b6.  v0:= temp @kind object;
  #L3c09b8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c09be.  v0:= temp @kind object;
  #L3c09c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c09c6.  v1:= temp;
  #L3c09c8.  if v1 == 0 then goto L3c09f4;
  #L3c09cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c09d2.  v1:= temp @kind object;
  #L3c09d4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3c09d8.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3c09de.  v1:= temp @kind object;
  #L3c09e0.  v1:= (`io.flutter.plugins.firebase.core.FlutterFirebasePlugin`) v1 @kind object;
  #L3c09e4.  call temp:= `didReinitializeFirebaseCore`(v1) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;.didReinitializeFirebaseCore:()Le/e/a/b/j/l;` @kind interface;
  #L3c09ea.  v1:= temp @kind object;
  #L3c09ec.  call temp:= `a`(v1) @signature `Le/e/a/b/j/o;.a:(Le/e/a/b/j/l;)Ljava/lang/Object;` @kind static;
  #L3c09f2.  goto L3c09c0;
  #L3c09f4.  v0:= 0I;
  #L3c09f6.  return v0 @kind object;
}
procedure `java.util.Map` `a`(`com.google.firebase.c` v4 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.a:(Lcom/google/firebase/c;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c0a08.  v0:= new `java.util.HashMap`;
  #L3c0a0c.  v1:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L3c0a10.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3c0a16.  v1:= temp;
  #L3c0a18.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3c0a1e.  v1:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L3c0a22.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3c0a28.  v1:= temp @kind object;
  #L3c0a2a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c0a30.  v1:= temp @kind object;
  #L3c0a32.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c0a38.  v2:= temp;
  #L3c0a3a.  if v2 == 0 then goto L3c0a7a;
  #L3c0a3e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c0a44.  v2:= temp @kind object;
  #L3c0a46.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3c0a4a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3c0a50.  v3:= temp @kind object;
  #L3c0a52.  v3:= (`java.lang.String`) v3 @kind object;
  #L3c0a56.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3c0a5c.  v2:= temp @kind object;
  #L3c0a5e.  v2:= (`io.flutter.plugins.firebase.core.FlutterFirebasePlugin`) v2 @kind object;
  #L3c0a62.  call temp:= `getPluginConstantsForFirebaseApp`(v2, v4) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;.getPluginConstantsForFirebaseApp:(Lcom/google/firebase/c;)Le/e/a/b/j/l;` @kind interface;
  #L3c0a68.  v2:= temp @kind object;
  #L3c0a6a.  call temp:= `a`(v2) @signature `Le/e/a/b/j/o;.a:(Le/e/a/b/j/l;)Ljava/lang/Object;` @kind static;
  #L3c0a70.  v2:= temp @kind object;
  #L3c0a72.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c0a78.  goto L3c0a32;
  #L3c0a7a.  return v0 @kind object;
}
procedure `e.e.a.b.j.l` `didReinitializeFirebaseCore`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.didReinitializeFirebaseCore:()Le/e/a/b/j/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3c0960.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePlugin.cachedThreadPool` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3c0964.  v1:= `@@io.flutter.plugins.firebase.core.i.a` @type ^`io.flutter.plugins.firebase.core.i` @kind object;
  #L3c0968.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/j/o;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Le/e/a/b/j/l;` @kind static;
  #L3c096e.  v0:= temp @kind object;
  #L3c0970.  return v0 @kind object;
}
procedure `e.e.a.b.j.l` `getPluginConstantsForFirebaseApp`(`com.google.firebase.c` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.getPluginConstantsForFirebaseApp:(Lcom/google/firebase/c;)Le/e/a/b/j/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3c0984.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePlugin.cachedThreadPool` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3c0988.  v1:= new `io.flutter.plugins.firebase.core.h`;
  #L3c098c.  call `<init>`(v1, v2) @signature `Lio/flutter/plugins/firebase/core/h;.<init>:(Lcom/google/firebase/c;)V` @kind direct;
  #L3c0992.  call temp:= `a`(v0, v1) @signature `Le/e/a/b/j/o;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Le/e/a/b/j/l;` @kind static;
  #L3c0998.  v2:= temp @kind object;
  #L3c099a.  return v2 @kind object;
}
procedure `void` `registerPlugin`(`java.lang.String` v1 @kind object, `io.flutter.plugins.firebase.core.FlutterFirebasePlugin` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.registerPlugin:(Ljava/lang/String;Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c0ac4.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L3c0ac8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c0ace.  return @kind void;
}
