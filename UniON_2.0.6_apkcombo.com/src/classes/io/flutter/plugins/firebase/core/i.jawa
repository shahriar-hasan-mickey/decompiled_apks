record `io.flutter.plugins.firebase.core.i` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
}
global `io.flutter.plugins.firebase.core.i` `@@io.flutter.plugins.firebase.core.i.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/flutter/plugins/firebase/core/i;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c01dc.  v0:= new `io.flutter.plugins.firebase.core.i`;
  #L3c01e0.  call `<init>`(v0) @signature `Lio/flutter/plugins/firebase/core/i;.<init>:()V` @kind direct;
  #L3c01e6.  `@@io.flutter.plugins.firebase.core.i.a` @type ^`io.flutter.plugins.firebase.core.i` := v0 @kind object;
  #L3c01ea.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.i` v0 @kind this) @signature `Lio/flutter/plugins/firebase/core/i;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c01fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c0202.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.flutter.plugins.firebase.core.i` v1 @kind this) @signature `Lio/flutter/plugins/firebase/core/i;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c01c0.  call temp:= `a`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.a:()Ljava/lang/Void;` @kind static;
  #L3c01c6.  v0:= temp @kind object;
  #L3c01c8.  return v0 @kind object;
}
