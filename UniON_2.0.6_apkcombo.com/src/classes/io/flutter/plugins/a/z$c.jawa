record `io.flutter.plugins.a.z$c` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `java.lang.String` `io.flutter.plugins.a.z$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.a.z$c` v0 @kind this, `io.flutter.plugins.a.z` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/a/z$c;.<init>:(Lio/flutter/plugins/a/z;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3bdcc4.  v0.`io.flutter.plugins.a.z$c.b` @type ^`java.lang.String` := v2 @kind object;
  #L3bdcc8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3bdcce.  v1:= v0.`io.flutter.plugins.a.z$c.b` @type ^`java.lang.String` @kind object;
  #L3bdcd2.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3bdcd8.  v1:= temp;
  #L3bdcda.  if v1 != 0 then goto L3bdcec;
  #L3bdcde.  v1:= v0.`io.flutter.plugins.a.z$c.b` @type ^`java.lang.String` @kind object;
  #L3bdce2.  v2:= "description" @kind object;
  #L3bdce6.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3bdcec.  return @kind void;
}
