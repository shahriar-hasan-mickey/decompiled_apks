record `io.flutter.plugins.f.f` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `e.e.b.b.a.f` `io.flutter.plugins.f.f.b` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `java.util.concurrent.Callable` `io.flutter.plugins.f.f.c` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.f.f` v0 @kind this, `e.e.b.b.a.f` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/flutter/plugins/f/f;.<init>:(Le/e/b/b/a/f;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3cab4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cab52.  v0.`io.flutter.plugins.f.f.b` @type ^`e.e.b.b.a.f` := v1 @kind object;
  #L3cab56.  v0.`io.flutter.plugins.f.f.c` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L3cab5a.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugins.f.f` v2 @kind this) @signature `Lio/flutter/plugins/f/f;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3cab6c.  v0:= v2.`io.flutter.plugins.f.f.b` @type ^`e.e.b.b.a.f` @kind object;
  #L3cab70.  v1:= v2.`io.flutter.plugins.f.f.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L3cab74.  call `a`(v0, v1) @signature `Lio/flutter/plugins/f/h;.a:(Le/e/b/b/a/f;Ljava/util/concurrent/Callable;)V` @kind static;
  #L3cab7a.  return @kind void;
}
