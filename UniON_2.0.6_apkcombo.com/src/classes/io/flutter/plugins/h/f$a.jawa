record `io.flutter.plugins.h.f$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `io.flutter.plugins.h.f$a.b` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugins.h.f` `io.flutter.plugins.h.f$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.h.f$a` v0 @kind this, `io.flutter.plugins.h.f` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/h/f$a;.<init>:(Lio/flutter/plugins/h/f;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cdfc4.  v0.`io.flutter.plugins.h.f$a.c` @type ^`io.flutter.plugins.h.f` := v1 @kind object;
  #L3cdfc8.  v0.`io.flutter.plugins.h.f$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L3cdfcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cdfd2.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugins.h.f$a` v3 @kind this) @signature `Lio/flutter/plugins/h/f$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cdfe4.  v0:= new `java.util.HashMap`;
  #L3cdfe8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3cdfee.  v1:= v3.`io.flutter.plugins.h.f$a.c` @type ^`io.flutter.plugins.h.f` @kind object;
  #L3cdff2.  call temp:= `a`(v1) @signature `Lio/flutter/plugins/h/f;.a:(Lio/flutter/plugins/h/f;)Ljava/lang/String;` @kind static;
  #L3cdff8.  v1:= temp @kind object;
  #L3cdffa.  v2:= "channel" @kind object;
  #L3cdffe.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ce004.  v1:= v3.`io.flutter.plugins.h.f$a.b` @type ^`java.lang.String` @kind object;
  #L3ce008.  v2:= "message" @kind object;
  #L3ce00c.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ce012.  v1:= v3.`io.flutter.plugins.h.f$a.c` @type ^`io.flutter.plugins.h.f` @kind object;
  #L3ce016.  call temp:= `b`(v1) @signature `Lio/flutter/plugins/h/f;.b:(Lio/flutter/plugins/h/f;)Lh/a/c/a/j;` @kind static;
  #L3ce01c.  v1:= temp @kind object;
  #L3ce01e.  v2:= "javascriptChannelMessage" @kind object;
  #L3ce022.  call `a`(v1, v2, v0) @signature `Lh/a/c/a/j;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L3ce028.  return @kind void;
}
