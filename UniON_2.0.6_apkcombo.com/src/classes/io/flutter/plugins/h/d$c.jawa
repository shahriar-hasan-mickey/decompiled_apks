record `io.flutter.plugins.h.d$c` @kind class @AccessFlag  extends `h.a.c.a.j$d` @kind interface {
  `java.lang.String` `io.flutter.plugins.h.d$c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `io.flutter.plugins.h.d$c.b` @AccessFlag PRIVATE_FINAL;
  `android.webkit.WebView` `io.flutter.plugins.h.d$c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.flutter.plugins.h.d$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object, `android.webkit.WebView` v3 @kind object) @signature `Lio/flutter/plugins/h/d$c;.<init>:(Ljava/lang/String;Ljava/util/Map;Landroid/webkit/WebView;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ccc48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ccc4e.  v0.`io.flutter.plugins.h.d$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L3ccc52.  v0.`io.flutter.plugins.h.d$c.b` @type ^`java.util.Map` := v2 @kind object;
  #L3ccc56.  v0.`io.flutter.plugins.h.d$c.c` @type ^`android.webkit.WebView` := v3 @kind object;
  #L3ccc5a.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.h.d$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object, `android.webkit.WebView` v3 @kind object, `io.flutter.plugins.h.d$a` v4 @kind object) @signature `Lio/flutter/plugins/h/d$c;.<init>:(Ljava/lang/String;Ljava/util/Map;Landroid/webkit/WebView;Lio/flutter/plugins/h/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3ccc6c.  call `<init>`(v0, v1, v2, v3) @signature `Lio/flutter/plugins/h/d$c;.<init>:(Ljava/lang/String;Ljava/util/Map;Landroid/webkit/WebView;)V` @kind direct;
  #L3ccc72.  return @kind void;
}
procedure `void` `b`(`io.flutter.plugins.h.d$c` v3 @kind this) @signature `Lio/flutter/plugins/h/d$c;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ccca4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ccca8.  v1:= 21I;
  #L3cccac.  if v0 < v1 then goto L3cccc4;
  #L3cccb0.  v0:= v3.`io.flutter.plugins.h.d$c.c` @type ^`android.webkit.WebView` @kind object;
  #L3cccb4.  v1:= v3.`io.flutter.plugins.h.d$c.a` @type ^`java.lang.String` @kind object;
  #L3cccb8.  v2:= v3.`io.flutter.plugins.h.d$c.b` @type ^`java.util.Map` @kind object;
  #L3cccbc.  call `loadUrl`(v0, v1, v2) @signature `Landroid/webkit/WebView;.loadUrl:(Ljava/lang/String;Ljava/util/Map;)V` @kind virtual;
  #L3cccc2.  goto L3cccd2;
  #L3cccc4.  v0:= v3.`io.flutter.plugins.h.d$c.c` @type ^`android.webkit.WebView` @kind object;
  #L3cccc8.  v1:= v3.`io.flutter.plugins.h.d$c.a` @type ^`java.lang.String` @kind object;
  #L3ccccc.  call `loadUrl`(v0, v1) @signature `Landroid/webkit/WebView;.loadUrl:(Ljava/lang/String;)V` @kind virtual;
  #L3cccd2.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugins.h.d$c` v2 @kind this) @signature `Lio/flutter/plugins/h/d$c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ccce4.  v0:= new `java.lang.IllegalStateException`;
  #L3ccce8.  v1:= "navigationRequest must be implemented by the webview method channel" @kind object;
  #L3cccec.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cccf2.  throw v0;
}
procedure `void` `a`(`io.flutter.plugins.h.d$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/flutter/plugins/h/d$c;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3ccd04.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L3ccd08.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3ccd0e.  v1:= temp;
  #L3ccd10.  if v1 == 0 then goto L3ccd1a;
  #L3ccd14.  call `b`(v0) @signature `Lio/flutter/plugins/h/d$c;.b:()V` @kind direct;
  #L3ccd1a.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugins.h.d$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/flutter/plugins/h/d$c;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3ccc84.  v1:= new `java.lang.IllegalStateException`;
  #L3ccc88.  v2:= "navigationRequest calls must succeed" @kind object;
  #L3ccc8c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ccc92.  throw v1;
}
