record `io.flutter.plugins.h.g` @kind class @AccessFlag FINAL extends `android.view.View` @kind class {
  `android.os.Handler` `io.flutter.plugins.h.g.b` @AccessFlag FINAL;
  `android.os.IBinder` `io.flutter.plugins.h.g.c` @AccessFlag FINAL;
  `android.view.View` `io.flutter.plugins.h.g.d` @AccessFlag FINAL;
  `android.view.View` `io.flutter.plugins.h.g.e` @AccessFlag FINAL;
  `boolean` `io.flutter.plugins.h.g.f` @AccessFlag PRIVATE;
  `android.view.inputmethod.InputConnection` `io.flutter.plugins.h.g.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.plugins.h.g` v1 @kind this, `android.view.View` v2 @kind object, `android.view.View` v3 @kind object, `android.os.Handler` v4 @kind object) @signature `Lio/flutter/plugins/h/g;.<init>:(Landroid/view/View;Landroid/view/View;Landroid/os/Handler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ce1a0.  call temp:= `getContext`(v2) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3ce1a6.  v0:= temp @kind object;
  #L3ce1a8.  call `<init>`(v1, v0) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3ce1ae.  v0:= 0I;
  #L3ce1b0.  v1.`io.flutter.plugins.h.g.f` @type ^`boolean` := v0 @kind boolean;
  #L3ce1b4.  v1.`io.flutter.plugins.h.g.b` @type ^`android.os.Handler` := v4 @kind object;
  #L3ce1b8.  v1.`io.flutter.plugins.h.g.e` @type ^`android.view.View` := v3 @kind object;
  #L3ce1bc.  call temp:= `getWindowToken`(v2) @signature `Landroid/view/View;.getWindowToken:()Landroid/os/IBinder;` @kind virtual;
  #L3ce1c2.  v3:= temp @kind object;
  #L3ce1c4.  v1.`io.flutter.plugins.h.g.c` @type ^`android.os.IBinder` := v3 @kind object;
  #L3ce1c8.  call temp:= `getRootView`(v2) @signature `Landroid/view/View;.getRootView:()Landroid/view/View;` @kind virtual;
  #L3ce1ce.  v2:= temp @kind object;
  #L3ce1d0.  v1.`io.flutter.plugins.h.g.d` @type ^`android.view.View` := v2 @kind object;
  #L3ce1d4.  v2:= 1I;
  #L3ce1d6.  call `setFocusable`(v1, v2) @signature `Landroid/view/View;.setFocusable:(Z)V` @kind virtual;
  #L3ce1dc.  call `setFocusableInTouchMode`(v1, v2) @signature `Landroid/view/View;.setFocusableInTouchMode:(Z)V` @kind virtual;
  #L3ce1e2.  call `setVisibility`(v1, v0) @signature `Landroid/view/View;.setVisibility:(I)V` @kind virtual;
  #L3ce1e8.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugins.h.g` v0 @kind this, `boolean` v1 ) @signature `Lio/flutter/plugins/h/g;.a:(Z)V` @AccessFlag  {
    temp;

  #L3ce1fc.  v0.`io.flutter.plugins.h.g.f` @type ^`boolean` := v1 @kind boolean;
  #L3ce200.  return @kind void;
}
procedure `boolean` `checkInputConnectionProxy`(`io.flutter.plugins.h.g` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lio/flutter/plugins/h/g;.checkInputConnectionProxy:(Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;

  #L3ce150.  v1:= 1I;
  #L3ce152.  return v1;
}
procedure `android.os.Handler` `getHandler`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.getHandler:()Landroid/os/Handler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce0d8.  v0:= v1.`io.flutter.plugins.h.g.b` @type ^`android.os.Handler` @kind object;
  #L3ce0dc.  return v0 @kind object;
}
procedure `android.view.View` `getRootView`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.getRootView:()Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce108.  v0:= v1.`io.flutter.plugins.h.g.d` @type ^`android.view.View` @kind object;
  #L3ce10c.  return v0 @kind object;
}
procedure `android.os.IBinder` `getWindowToken`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.getWindowToken:()Landroid/os/IBinder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce0f0.  v0:= v1.`io.flutter.plugins.h.g.c` @type ^`android.os.IBinder` @kind object;
  #L3ce0f4.  return v0 @kind object;
}
procedure `boolean` `hasWindowFocus`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.hasWindowFocus:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce164.  v0:= 1I;
  #L3ce166.  return v0;
}
procedure `boolean` `isFocused`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.isFocused:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce178.  v0:= 1I;
  #L3ce17a.  return v0;
}
procedure `boolean` `onCheckIsTextEditor`(`io.flutter.plugins.h.g` v1 @kind this) @signature `Lio/flutter/plugins/h/g;.onCheckIsTextEditor:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce18c.  v0:= 1I;
  #L3ce18e.  return v0;
}
procedure `android.view.inputmethod.InputConnection` `onCreateInputConnection`(`io.flutter.plugins.h.g` v1 @kind this, `android.view.inputmethod.EditorInfo` v2 @kind object) @signature `Lio/flutter/plugins/h/g;.onCreateInputConnection:(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ce120.  v0:= v1.`io.flutter.plugins.h.g.f` @type ^`boolean` @kind boolean;
  #L3ce124.  if v0 == 0 then goto L3ce12e;
  #L3ce128.  v2:= v1.`io.flutter.plugins.h.g.g` @type ^`android.view.inputmethod.InputConnection` @kind object;
  #L3ce12c.  goto L3ce13a;
  #L3ce12e.  v0:= v1.`io.flutter.plugins.h.g.e` @type ^`android.view.View` @kind object;
  #L3ce132.  call temp:= `onCreateInputConnection`(v0, v2) @signature `Landroid/view/View;.onCreateInputConnection:(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;` @kind virtual;
  #L3ce138.  v2:= temp @kind object;
  #L3ce13a.  v1.`io.flutter.plugins.h.g.g` @type ^`android.view.inputmethod.InputConnection` := v2 @kind object;
  #L3ce13e.  return v2 @kind object;
}
