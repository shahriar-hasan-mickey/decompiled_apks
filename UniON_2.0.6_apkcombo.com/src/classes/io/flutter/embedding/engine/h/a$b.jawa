record `io.flutter.embedding.engine.h.a$b` @kind class @AccessFlag FINAL extends `io.flutter.view.f$a` @kind interface {
  `long` `io.flutter.embedding.engine.h.a$b.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.SurfaceTexture` `io.flutter.embedding.engine.h.a$b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.flutter.embedding.engine.h.a$b.c` @AccessFlag PRIVATE;
  `android.graphics.SurfaceTexture$OnFrameAvailableListener` `io.flutter.embedding.engine.h.a$b.d` @AccessFlag PRIVATE;
  `io.flutter.embedding.engine.h.a` `io.flutter.embedding.engine.h.a$b.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.h.a$b` v0 @kind this, `io.flutter.embedding.engine.h.a` v1 @kind object, `long` v2 , `android.graphics.SurfaceTexture` v4 @kind object) @signature `Lio/flutter/embedding/engine/h/a$b;.<init>:(Lio/flutter/embedding/engine/h/a;JLandroid/graphics/SurfaceTexture;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3add14.  v0.`io.flutter.embedding.engine.h.a$b.e` @type ^`io.flutter.embedding.engine.h.a` := v1 @kind object;
  #L3add18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3add1e.  v1:= new `io.flutter.embedding.engine.h.a$b$a`;
  #L3add22.  call `<init>`(v1, v0) @signature `Lio/flutter/embedding/engine/h/a$b$a;.<init>:(Lio/flutter/embedding/engine/h/a$b;)V` @kind direct;
  #L3add28.  v0.`io.flutter.embedding.engine.h.a$b.d` @type ^`android.graphics.SurfaceTexture$OnFrameAvailableListener` := v1 @kind object;
  #L3add2c.  v0.`io.flutter.embedding.engine.h.a$b.a` @type ^`long` := v2 @kind wide;
  #L3add30.  v0.`io.flutter.embedding.engine.h.a$b.b` @type ^`android.graphics.SurfaceTexture` := v4 @kind object;
  #L3add34.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3add38.  v2:= 21I;
  #L3add3c.  if v1 < v2 then goto L3add5a;
  #L3add40.  v1:= v0.`io.flutter.embedding.engine.h.a$b.b` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L3add44.  v2:= v0.`io.flutter.embedding.engine.h.a$b.d` @type ^`android.graphics.SurfaceTexture$OnFrameAvailableListener` @kind object;
  #L3add48.  v3:= new `android.os.Handler`;
  #L3add4c.  call `<init>`(v3) @signature `Landroid/os/Handler;.<init>:()V` @kind direct;
  #L3add52.  call `setOnFrameAvailableListener`(v1, v2, v3) @signature `Landroid/graphics/SurfaceTexture;.setOnFrameAvailableListener:(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;Landroid/os/Handler;)V` @kind virtual;
  #L3add58.  goto L3add68;
  #L3add5a.  v1:= v0.`io.flutter.embedding.engine.h.a$b.b` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L3add5e.  v2:= v0.`io.flutter.embedding.engine.h.a$b.d` @type ^`android.graphics.SurfaceTexture$OnFrameAvailableListener` @kind object;
  #L3add62.  call `setOnFrameAvailableListener`(v1, v2) @signature `Landroid/graphics/SurfaceTexture;.setOnFrameAvailableListener:(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;)V` @kind virtual;
  #L3add68.  return @kind void;
}
procedure `boolean` `a`(`io.flutter.embedding.engine.h.a$b` v0 @kind object) @signature `Lio/flutter/embedding/engine/h/a$b;.a:(Lio/flutter/embedding/engine/h/a$b;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3adccc.  v0:= v0.`io.flutter.embedding.engine.h.a$b.c` @type ^`boolean` @kind boolean;
  #L3adcd0.  return v0;
}
procedure `long` `b`(`io.flutter.embedding.engine.h.a$b` v2 @kind object) @signature `Lio/flutter/embedding/engine/h/a$b;.b:(Lio/flutter/embedding/engine/h/a$b;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3adce4.  v0:= v2.`io.flutter.embedding.engine.h.a$b.a` @type ^`long` @kind wide;
  #L3adce8.  return v0 @kind wide;
}
procedure `void` `a`(`io.flutter.embedding.engine.h.a$b` v3 @kind this) @signature `Lio/flutter/embedding/engine/h/a$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3add7c.  v0:= v3.`io.flutter.embedding.engine.h.a$b.c` @type ^`boolean` @kind boolean;
  #L3add80.  if v0 == 0 then goto L3add86;
  #L3add84.  return @kind void;
  #L3add86.  v0:= new `java.lang.StringBuilder`;
  #L3add8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3add90.  v1:= "Releasing a SurfaceTexture (" @kind object;
  #L3add94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3add9a.  v1:= v3.`io.flutter.embedding.engine.h.a$b.a` @type ^`long` @kind wide;
  #L3add9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3adda4.  v1:= ")." @kind object;
  #L3adda8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3addae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3addb4.  v0:= temp @kind object;
  #L3addb6.  v1:= "FlutterRenderer" @kind object;
  #L3addba.  call `c`(v1, v0) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3addc0.  v0:= v3.`io.flutter.embedding.engine.h.a$b.b` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L3addc4.  call `release`(v0) @signature `Landroid/graphics/SurfaceTexture;.release:()V` @kind virtual;
  #L3addca.  v0:= v3.`io.flutter.embedding.engine.h.a$b.e` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3addce.  v1:= v3.`io.flutter.embedding.engine.h.a$b.a` @type ^`long` @kind wide;
  #L3addd2.  call `b`(v0, v1) @signature `Lio/flutter/embedding/engine/h/a;.b:(Lio/flutter/embedding/engine/h/a;J)V` @kind static;
  #L3addd8.  v0:= 1I;
  #L3addda.  v3.`io.flutter.embedding.engine.h.a$b.c` @type ^`boolean` := v0 @kind boolean;
  #L3addde.  return @kind void;
}
procedure `android.graphics.SurfaceTexture` `b`(`io.flutter.embedding.engine.h.a$b` v1 @kind this) @signature `Lio/flutter/embedding/engine/h/a$b;.b:()Landroid/graphics/SurfaceTexture;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3adcb4.  v0:= v1.`io.flutter.embedding.engine.h.a$b.b` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L3adcb8.  return v0 @kind object;
}
procedure `long` `c`(`io.flutter.embedding.engine.h.a$b` v2 @kind this) @signature `Lio/flutter/embedding/engine/h/a$b;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3adcfc.  v0:= v2.`io.flutter.embedding.engine.h.a$b.a` @type ^`long` @kind wide;
  #L3add00.  return v0 @kind wide;
}
