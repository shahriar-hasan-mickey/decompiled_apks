record `io.flutter.embedding.engine.e.b$a` @kind class @AccessFlag  extends `h.a.c.a.b$b` @kind interface {
  `io.flutter.embedding.engine.FlutterJNI` `io.flutter.embedding.engine.e.b$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.flutter.embedding.engine.e.b$a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.flutter.embedding.engine.e.b$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.e.b$a` v2 @kind this, `io.flutter.embedding.engine.FlutterJNI` v3 @kind object, `int` v4 ) @signature `Lio/flutter/embedding/engine/e/b$a;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3abf7c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3abf82.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3abf86.  v1:= 0I;
  #L3abf88.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L3abf8e.  v2.`io.flutter.embedding.engine.e.b$a.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L3abf92.  v2.`io.flutter.embedding.engine.e.b$a.a` @type ^`io.flutter.embedding.engine.FlutterJNI` := v3 @kind object;
  #L3abf96.  v2.`io.flutter.embedding.engine.e.b$a.b` @type ^`int` := v4;
  #L3abf9a.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.engine.e.b$a` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lio/flutter/embedding/engine/e/b$a;.a:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3abfac.  v0:= v3.`io.flutter.embedding.engine.e.b$a.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3abfb0.  v1:= 1I;
  #L3abfb2.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.getAndSet:(Z)Z` @kind virtual;
  #L3abfb8.  v0:= temp;
  #L3abfba.  if v0 != 0 then goto L3abfea;
  #L3abfbe.  if v4 != 0 then goto L3abfd2;
  #L3abfc2.  v4:= v3.`io.flutter.embedding.engine.e.b$a.a` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3abfc6.  v0:= v3.`io.flutter.embedding.engine.e.b$a.b` @type ^`int`;
  #L3abfca.  call `invokePlatformMessageEmptyResponseCallback`(v4, v0) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageEmptyResponseCallback:(I)V` @kind virtual;
  #L3abfd0.  goto L3abfe8;
  #L3abfd2.  v0:= v3.`io.flutter.embedding.engine.e.b$a.a` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3abfd6.  v1:= v3.`io.flutter.embedding.engine.e.b$a.b` @type ^`int`;
  #L3abfda.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3abfe0.  v2:= temp;
  #L3abfe2.  call `invokePlatformMessageResponseCallback`(v0, v1, v4, v2) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageResponseCallback:(ILjava/nio/ByteBuffer;I)V` @kind virtual;
  #L3abfe8.  return @kind void;
  #L3abfea.  v4:= new `java.lang.IllegalStateException`;
  #L3abfee.  v0:= "Reply already submitted" @kind object;
  #L3abff2.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3abff8.  throw v4;
}
