record `io.flutter.embedding.engine.i.m$e` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `io.flutter.embedding.engine.i.m$e.a` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.i.m$e.b` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.i.m$e.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.i.m$e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/flutter/embedding/engine/i/m$e;.<init>:(Ljava/lang/String;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b1f88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b1f8e.  v0.`io.flutter.embedding.engine.i.m$e.a` @type ^`java.lang.String` := v1 @kind object;
  #L3b1f92.  v0.`io.flutter.embedding.engine.i.m$e.b` @type ^`int` := v2;
  #L3b1f96.  v0.`io.flutter.embedding.engine.i.m$e.c` @type ^`int` := v3;
  #L3b1f9a.  return @kind void;
}
procedure `io.flutter.embedding.engine.i.m$e` `a`(`org.json.JSONObject` v4 @kind object) @signature `Lio/flutter/embedding/engine/i/m$e;.a:(Lorg/json/JSONObject;)Lio/flutter/embedding/engine/i/m$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b1f48.  v0:= new `io.flutter.embedding.engine.i.m$e`;
  #L3b1f4c.  v1:= "text" @kind object;
  #L3b1f50.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3b1f56.  v1:= temp @kind object;
  #L3b1f58.  v2:= "selectionBase" @kind object;
  #L3b1f5c.  call temp:= `getInt`(v4, v2) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L3b1f62.  v2:= temp;
  #L3b1f64.  v3:= "selectionExtent" @kind object;
  #L3b1f68.  call temp:= `getInt`(v4, v3) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L3b1f6e.  v4:= temp;
  #L3b1f70.  call `<init>`(v0, v1, v2, v4) @signature `Lio/flutter/embedding/engine/i/m$e;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L3b1f76.  return v0 @kind object;
}
