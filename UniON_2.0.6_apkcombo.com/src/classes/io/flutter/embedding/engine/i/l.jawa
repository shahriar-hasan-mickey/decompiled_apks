record `io.flutter.embedding.engine.i.l` @kind class @AccessFlag PUBLIC {
  `h.a.c.a.a` `io.flutter.embedding.engine.i.l.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.i.l` v3 @kind this, `io.flutter.embedding.engine.e.a` v4 @kind object) @signature `Lio/flutter/embedding/engine/i/l;.<init>:(Lio/flutter/embedding/engine/e/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3b0f7c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b0f82.  v0:= new `h.a.c.a.a`;
  #L3b0f86.  v1:= `@@h.a.c.a.e.a` @type ^`h.a.c.a.e` @kind object;
  #L3b0f8a.  v2:= "flutter/system" @kind object;
  #L3b0f8e.  call `<init>`(v0, v4, v2, v1) @signature `Lh/a/c/a/a;.<init>:(Lh/a/c/a/b;Ljava/lang/String;Lh/a/c/a/h;)V` @kind direct;
  #L3b0f94.  v3.`io.flutter.embedding.engine.i.l.a` @type ^`h.a.c.a.a` := v0 @kind object;
  #L3b0f98.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.engine.i.l` v3 @kind this) @signature `Lio/flutter/embedding/engine/i/l;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b0fac.  v0:= "SystemChannel" @kind object;
  #L3b0fb0.  v1:= "Sending memory pressure warning to Flutter." @kind object;
  #L3b0fb4.  call `c`(v0, v1) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3b0fba.  v0:= new `java.util.HashMap`;
  #L3b0fbe.  v1:= 1I;
  #L3b0fc0.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3b0fc6.  v1:= "type" @kind object;
  #L3b0fca.  v2:= "memoryPressure" @kind object;
  #L3b0fce.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b0fd4.  v1:= v3.`io.flutter.embedding.engine.i.l.a` @type ^`h.a.c.a.a` @kind object;
  #L3b0fd8.  call `a`(v1, v0) @signature `Lh/a/c/a/a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3b0fde.  return @kind void;
}
