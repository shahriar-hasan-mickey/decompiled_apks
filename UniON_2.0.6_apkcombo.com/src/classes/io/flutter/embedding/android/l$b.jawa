record `io.flutter.embedding.android.l$b` @kind class @AccessFlag  extends `io.flutter.embedding.engine.h.b` @kind interface {
  `io.flutter.embedding.android.l` `io.flutter.embedding.android.l$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.embedding.android.l$b` v0 @kind this, `io.flutter.embedding.android.l` v1 @kind object) @signature `Lio/flutter/embedding/android/l$b;.<init>:(Lio/flutter/embedding/android/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a7e50.  v0.`io.flutter.embedding.android.l$b.a` @type ^`io.flutter.embedding.android.l` := v1 @kind object;
  #L3a7e54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a7e5a.  return @kind void;
}
procedure `void` `b`(`io.flutter.embedding.android.l$b` v2 @kind this) @signature `Lio/flutter/embedding/android/l$b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7ec0.  v0:= v2.`io.flutter.embedding.android.l$b.a` @type ^`io.flutter.embedding.android.l` @kind object;
  #L3a7ec4.  v1:= 0I;
  #L3a7ec6.  call temp:= `a`(v0, v1) @signature `Lio/flutter/embedding/android/l;.a:(Lio/flutter/embedding/android/l;Z)Z` @kind static;
  #L3a7ecc.  v0:= v2.`io.flutter.embedding.android.l$b.a` @type ^`io.flutter.embedding.android.l` @kind object;
  #L3a7ed0.  call temp:= `a`(v0) @signature `Lio/flutter/embedding/android/l;.a:(Lio/flutter/embedding/android/l;)Ljava/util/Set;` @kind static;
  #L3a7ed6.  v0:= temp @kind object;
  #L3a7ed8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a7ede.  v0:= temp @kind object;
  #L3a7ee0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a7ee6.  v1:= temp;
  #L3a7ee8.  if v1 == 0 then goto L3a7f00;
  #L3a7eec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a7ef2.  v1:= temp @kind object;
  #L3a7ef4.  v1:= (`io.flutter.embedding.engine.h.b`) v1 @kind object;
  #L3a7ef8.  call `b`(v1) @signature `Lio/flutter/embedding/engine/h/b;.b:()V` @kind interface;
  #L3a7efe.  goto L3a7ee0;
  #L3a7f00.  return @kind void;
}
procedure `void` `c`(`io.flutter.embedding.android.l$b` v2 @kind this) @signature `Lio/flutter/embedding/android/l$b;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7e6c.  v0:= v2.`io.flutter.embedding.android.l$b.a` @type ^`io.flutter.embedding.android.l` @kind object;
  #L3a7e70.  v1:= 1I;
  #L3a7e72.  call temp:= `a`(v0, v1) @signature `Lio/flutter/embedding/android/l;.a:(Lio/flutter/embedding/android/l;Z)Z` @kind static;
  #L3a7e78.  v0:= v2.`io.flutter.embedding.android.l$b.a` @type ^`io.flutter.embedding.android.l` @kind object;
  #L3a7e7c.  call temp:= `a`(v0) @signature `Lio/flutter/embedding/android/l;.a:(Lio/flutter/embedding/android/l;)Ljava/util/Set;` @kind static;
  #L3a7e82.  v0:= temp @kind object;
  #L3a7e84.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a7e8a.  v0:= temp @kind object;
  #L3a7e8c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a7e92.  v1:= temp;
  #L3a7e94.  if v1 == 0 then goto L3a7eac;
  #L3a7e98.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a7e9e.  v1:= temp @kind object;
  #L3a7ea0.  v1:= (`io.flutter.embedding.engine.h.b`) v1 @kind object;
  #L3a7ea4.  call `c`(v1) @signature `Lio/flutter/embedding/engine/h/b;.c:()V` @kind interface;
  #L3a7eaa.  goto L3a7e8c;
  #L3a7eac.  return @kind void;
}
