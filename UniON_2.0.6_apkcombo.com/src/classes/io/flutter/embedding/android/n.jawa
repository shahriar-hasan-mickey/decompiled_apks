record `io.flutter.embedding.android.n` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.flutter.embedding.android.n` `@@io.flutter.embedding.android.n.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.embedding.android.n` `@@io.flutter.embedding.android.n.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.embedding.android.n` `@@io.flutter.embedding.android.n.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.embedding.android.n`[] `@@io.flutter.embedding.android.n.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/flutter/embedding/android/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a94d0.  v0:= new `io.flutter.embedding.android.n`;
  #L3a94d4.  v1:= 0I;
  #L3a94d6.  v2:= "surface" @kind object;
  #L3a94da.  call `<init>`(v0, v2, v1) @signature `Lio/flutter/embedding/android/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3a94e0.  `@@io.flutter.embedding.android.n.b` @type ^`io.flutter.embedding.android.n` := v0 @kind object;
  #L3a94e4.  v0:= new `io.flutter.embedding.android.n`;
  #L3a94e8.  v2:= 1I;
  #L3a94ea.  v3:= "texture" @kind object;
  #L3a94ee.  call `<init>`(v0, v3, v2) @signature `Lio/flutter/embedding/android/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3a94f4.  `@@io.flutter.embedding.android.n.c` @type ^`io.flutter.embedding.android.n` := v0 @kind object;
  #L3a94f8.  v0:= new `io.flutter.embedding.android.n`;
  #L3a94fc.  v3:= 2I;
  #L3a94fe.  v4:= "image" @kind object;
  #L3a9502.  call `<init>`(v0, v4, v3) @signature `Lio/flutter/embedding/android/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3a9508.  `@@io.flutter.embedding.android.n.d` @type ^`io.flutter.embedding.android.n` := v0 @kind object;
  #L3a950c.  v0:= 3I;
  #L3a950e.  v0:= new `io.flutter.embedding.android.n`[v0];
  #L3a9512.  v4:= `@@io.flutter.embedding.android.n.b` @type ^`io.flutter.embedding.android.n` @kind object;
  #L3a9516.  v0[v1]:= v4 @kind object;
  #L3a951a.  v1:= `@@io.flutter.embedding.android.n.c` @type ^`io.flutter.embedding.android.n` @kind object;
  #L3a951e.  v0[v2]:= v1 @kind object;
  #L3a9522.  v1:= `@@io.flutter.embedding.android.n.d` @type ^`io.flutter.embedding.android.n` @kind object;
  #L3a9526.  v0[v3]:= v1 @kind object;
  #L3a952a.  `@@io.flutter.embedding.android.n.e` @type ^`io.flutter.embedding.android.n`[] := v0 @kind object;
  #L3a952e.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.android.n` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/flutter/embedding/android/n;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a9540.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3a9546.  return @kind void;
}
procedure `io.flutter.embedding.android.n` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/flutter/embedding/android/n;.valueOf:(Ljava/lang/String;)Lio/flutter/embedding/android/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a9488.  v0:= constclass @type ^`io.flutter.embedding.android.n` @kind object;
  #L3a948c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3a9492.  v1:= temp @kind object;
  #L3a9494.  v1:= (`io.flutter.embedding.android.n`) v1 @kind object;
  #L3a9498.  return v1 @kind object;
}
procedure `io.flutter.embedding.android.n`[] `values`() @signature `Lio/flutter/embedding/android/n;.values:()[Lio/flutter/embedding/android/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a94ac.  v0:= `@@io.flutter.embedding.android.n.e` @type ^`io.flutter.embedding.android.n`[] @kind object;
  #L3a94b0.  call temp:= `clone`(v0) @signature `[Lio/flutter/embedding/android/n;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3a94b6.  v0:= temp @kind object;
  #L3a94b8.  v0:= (`io.flutter.embedding.android.n`[]) v0 @kind object;
  #L3a94bc.  return v0 @kind object;
}
