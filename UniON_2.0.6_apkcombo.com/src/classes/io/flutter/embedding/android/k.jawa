record `io.flutter.embedding.android.k` @kind class @AccessFlag PUBLIC extends `android.view.TextureView` @kind class, `io.flutter.embedding.engine.h.c` @kind interface {
  `boolean` `io.flutter.embedding.android.k.b` @AccessFlag PRIVATE;
  `boolean` `io.flutter.embedding.android.k.c` @AccessFlag PRIVATE;
  `io.flutter.embedding.engine.h.a` `io.flutter.embedding.android.k.d` @AccessFlag PRIVATE;
  `android.view.Surface` `io.flutter.embedding.android.k.e` @AccessFlag PRIVATE;
  `android.view.TextureView$SurfaceTextureListener` `io.flutter.embedding.android.k.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.android.k` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lio/flutter/embedding/android/k;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a7b64.  v0:= 0I;
  #L3a7b66.  call `<init>`(v1, v2, v0) @signature `Lio/flutter/embedding/android/k;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3a7b6c.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.android.k` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lio/flutter/embedding/android/k;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a7b80.  call `<init>`(v0, v1, v2) @signature `Landroid/view/TextureView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L3a7b86.  v1:= 0I;
  #L3a7b88.  v0.`io.flutter.embedding.android.k.b` @type ^`boolean` := v1 @kind boolean;
  #L3a7b8c.  v0.`io.flutter.embedding.android.k.c` @type ^`boolean` := v1 @kind boolean;
  #L3a7b90.  v1:= new `io.flutter.embedding.android.k$a`;
  #L3a7b94.  call `<init>`(v1, v0) @signature `Lio/flutter/embedding/android/k$a;.<init>:(Lio/flutter/embedding/android/k;)V` @kind direct;
  #L3a7b9a.  v0.`io.flutter.embedding.android.k.f` @type ^`android.view.TextureView$SurfaceTextureListener` := v1 @kind object;
  #L3a7b9e.  call `e`(v0) @signature `Lio/flutter/embedding/android/k;.e:()V` @kind direct;
  #L3a7ba4.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.android.k` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lio/flutter/embedding/android/k;.a:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a7c60.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7c64.  if v0 == 0 then goto L3a7cb0;
  #L3a7c68.  v0:= new `java.lang.StringBuilder`;
  #L3a7c6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a7c72.  v1:= "Notifying FlutterRenderer that Android surface size has changed to " @kind object;
  #L3a7c76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7c7c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7c82.  v1:= " x " @kind object;
  #L3a7c86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7c8c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7c92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a7c98.  v0:= temp @kind object;
  #L3a7c9a.  v1:= "FlutterTextureView" @kind object;
  #L3a7c9e.  call `c`(v1, v0) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7ca4.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7ca8.  call `a`(v0, v3, v4) @signature `Lio/flutter/embedding/engine/h/a;.a:(II)V` @kind virtual;
  #L3a7cae.  return @kind void;
  #L3a7cb0.  v3:= new `java.lang.IllegalStateException`;
  #L3a7cb4.  v4:= "changeSurfaceSize() should only be called when flutterRenderer is non-null." @kind object;
  #L3a7cb8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7cbe.  throw v3;
}
procedure `void` `a`(`io.flutter.embedding.android.k` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lio/flutter/embedding/android/k;.a:(Lio/flutter/embedding/android/k;II)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a7bd0.  call `a`(v0, v1, v2) @signature `Lio/flutter/embedding/android/k;.a:(II)V` @kind direct;
  #L3a7bd6.  return @kind void;
}
procedure `boolean` `a`(`io.flutter.embedding.android.k` v0 @kind object) @signature `Lio/flutter/embedding/android/k;.a:(Lio/flutter/embedding/android/k;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a7b34.  v0:= v0.`io.flutter.embedding.android.k.c` @type ^`boolean` @kind boolean;
  #L3a7b38.  return v0;
}
procedure `boolean` `a`(`io.flutter.embedding.android.k` v0 @kind object, `boolean` v1 ) @signature `Lio/flutter/embedding/android/k;.a:(Lio/flutter/embedding/android/k;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a7b1c.  v0.`io.flutter.embedding.android.k.b` @type ^`boolean` := v1 @kind boolean;
  #L3a7b20.  return v1;
}
procedure `void` `b`(`io.flutter.embedding.android.k` v0 @kind object) @signature `Lio/flutter/embedding/android/k;.b:(Lio/flutter/embedding/android/k;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a7bb8.  call `c`(v0) @signature `Lio/flutter/embedding/android/k;.c:()V` @kind direct;
  #L3a7bbe.  return @kind void;
}
procedure `void` `c`(`io.flutter.embedding.android.k` v2 @kind this) @signature `Lio/flutter/embedding/android/k;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a7cd0.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7cd4.  if v0 == 0 then goto L3a7d0a;
  #L3a7cd8.  call temp:= `getSurfaceTexture`(v2) @signature `Landroid/view/TextureView;.getSurfaceTexture:()Landroid/graphics/SurfaceTexture;` @kind virtual;
  #L3a7cde.  v0:= temp @kind object;
  #L3a7ce0.  if v0 == 0 then goto L3a7d0a;
  #L3a7ce4.  v0:= new `android.view.Surface`;
  #L3a7ce8.  call temp:= `getSurfaceTexture`(v2) @signature `Landroid/view/TextureView;.getSurfaceTexture:()Landroid/graphics/SurfaceTexture;` @kind virtual;
  #L3a7cee.  v1:= temp @kind object;
  #L3a7cf0.  call `<init>`(v0, v1) @signature `Landroid/view/Surface;.<init>:(Landroid/graphics/SurfaceTexture;)V` @kind direct;
  #L3a7cf6.  v2.`io.flutter.embedding.android.k.e` @type ^`android.view.Surface` := v0 @kind object;
  #L3a7cfa.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7cfe.  v1:= v2.`io.flutter.embedding.android.k.e` @type ^`android.view.Surface` @kind object;
  #L3a7d02.  call `a`(v0, v1) @signature `Lio/flutter/embedding/engine/h/a;.a:(Landroid/view/Surface;)V` @kind virtual;
  #L3a7d08.  return @kind void;
  #L3a7d0a.  v0:= new `java.lang.IllegalStateException`;
  #L3a7d0e.  v1:= "connectSurfaceToRenderer() should only be called when flutterRenderer and getSurfaceTexture() are non-null." @kind object;
  #L3a7d12.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7d18.  throw v0;
}
procedure `void` `c`(`io.flutter.embedding.android.k` v0 @kind object) @signature `Lio/flutter/embedding/android/k;.c:(Lio/flutter/embedding/android/k;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3a7be8.  call `d`(v0) @signature `Lio/flutter/embedding/android/k;.d:()V` @kind direct;
  #L3a7bee.  return @kind void;
}
procedure `void` `d`(`io.flutter.embedding.android.k` v2 @kind this) @signature `Lio/flutter/embedding/android/k;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a7d80.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7d84.  if v0 == 0 then goto L3a7da4;
  #L3a7d88.  call `d`(v0) @signature `Lio/flutter/embedding/engine/h/a;.d:()V` @kind virtual;
  #L3a7d8e.  v0:= v2.`io.flutter.embedding.android.k.e` @type ^`android.view.Surface` @kind object;
  #L3a7d92.  if v0 == 0 then goto L3a7da2;
  #L3a7d96.  call `release`(v0) @signature `Landroid/view/Surface;.release:()V` @kind virtual;
  #L3a7d9c.  v0:= 0I;
  #L3a7d9e.  v2.`io.flutter.embedding.android.k.e` @type ^`android.view.Surface` := v0 @kind object;
  #L3a7da2.  return @kind void;
  #L3a7da4.  v0:= new `java.lang.IllegalStateException`;
  #L3a7da8.  v1:= "disconnectSurfaceFromRenderer() should only be called when flutterRenderer is non-null." @kind object;
  #L3a7dac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7db2.  throw v0;
}
procedure `void` `e`(`io.flutter.embedding.android.k` v1 @kind this) @signature `Lio/flutter/embedding/android/k;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a7dc4.  v0:= v1.`io.flutter.embedding.android.k.f` @type ^`android.view.TextureView$SurfaceTextureListener` @kind object;
  #L3a7dc8.  call `setSurfaceTextureListener`(v1, v0) @signature `Landroid/view/TextureView;.setSurfaceTextureListener:(Landroid/view/TextureView$SurfaceTextureListener;)V` @kind virtual;
  #L3a7dce.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.android.k` v2 @kind this) @signature `Lio/flutter/embedding/android/k;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7d2c.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7d30.  v1:= "FlutterTextureView" @kind object;
  #L3a7d34.  if v0 == 0 then goto L3a7d62;
  #L3a7d38.  call temp:= `getWindowToken`(v2) @signature `Landroid/view/TextureView;.getWindowToken:()Landroid/os/IBinder;` @kind virtual;
  #L3a7d3e.  v0:= temp @kind object;
  #L3a7d40.  if v0 == 0 then goto L3a7d54;
  #L3a7d44.  v0:= "Disconnecting FlutterRenderer from Android surface." @kind object;
  #L3a7d48.  call `c`(v1, v0) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7d4e.  call `d`(v2) @signature `Lio/flutter/embedding/android/k;.d:()V` @kind direct;
  #L3a7d54.  v0:= 0I;
  #L3a7d56.  v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` := v0 @kind object;
  #L3a7d5a.  v0:= 0I;
  #L3a7d5c.  v2.`io.flutter.embedding.android.k.c` @type ^`boolean` := v0 @kind boolean;
  #L3a7d60.  goto L3a7d6c;
  #L3a7d62.  v0:= "detachFromRenderer() invoked when no FlutterRenderer was attached." @kind object;
  #L3a7d66.  call `d`(v1, v0) @signature `Lh/a/b;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7d6c.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.android.k` v2 @kind this, `io.flutter.embedding.engine.h.a` v3 @kind object) @signature `Lio/flutter/embedding/android/k;.a:(Lio/flutter/embedding/engine/h/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7c00.  v0:= "FlutterTextureView" @kind object;
  #L3a7c04.  v1:= "Attaching to FlutterRenderer." @kind object;
  #L3a7c08.  call `c`(v0, v1) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7c0e.  v1:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7c12.  if v1 == 0 then goto L3a7c2a;
  #L3a7c16.  v1:= "Already connected to a FlutterRenderer. Detaching from old one and attaching to new one." @kind object;
  #L3a7c1a.  call `c`(v0, v1) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7c20.  v1:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7c24.  call `d`(v1) @signature `Lio/flutter/embedding/engine/h/a;.d:()V` @kind virtual;
  #L3a7c2a.  v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` := v3 @kind object;
  #L3a7c2e.  v3:= 1I;
  #L3a7c30.  v2.`io.flutter.embedding.android.k.c` @type ^`boolean` := v3 @kind boolean;
  #L3a7c34.  v3:= v2.`io.flutter.embedding.android.k.b` @type ^`boolean` @kind boolean;
  #L3a7c38.  if v3 == 0 then goto L3a7c4c;
  #L3a7c3c.  v3:= "Surface is available for rendering. Connecting FlutterRenderer to Android surface." @kind object;
  #L3a7c40.  call `c`(v0, v3) @signature `Lh/a/b;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7c46.  call `c`(v2) @signature `Lio/flutter/embedding/android/k;.c:()V` @kind direct;
  #L3a7c4c.  return @kind void;
}
procedure `void` `b`(`io.flutter.embedding.android.k` v2 @kind this) @signature `Lio/flutter/embedding/android/k;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7de0.  v0:= v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7de4.  if v0 == 0 then goto L3a7df6;
  #L3a7de8.  v0:= 0I;
  #L3a7dea.  v2.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` := v0 @kind object;
  #L3a7dee.  v0:= 0I;
  #L3a7df0.  v2.`io.flutter.embedding.android.k.c` @type ^`boolean` := v0 @kind boolean;
  #L3a7df4.  goto L3a7e04;
  #L3a7df6.  v0:= "FlutterTextureView" @kind object;
  #L3a7dfa.  v1:= "pause() invoked when no FlutterRenderer was attached." @kind object;
  #L3a7dfe.  call `d`(v0, v1) @signature `Lh/a/b;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a7e04.  return @kind void;
}
procedure `io.flutter.embedding.engine.h.a` `getAttachedRenderer`(`io.flutter.embedding.android.k` v1 @kind this) @signature `Lio/flutter/embedding/android/k;.getAttachedRenderer:()Lio/flutter/embedding/engine/h/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7b4c.  v0:= v1.`io.flutter.embedding.android.k.d` @type ^`io.flutter.embedding.engine.h.a` @kind object;
  #L3a7b50.  return v0 @kind object;
}
