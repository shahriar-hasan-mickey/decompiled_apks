record `io.flutter.view.c$k` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.flutter.view.c$k` `@@io.flutter.view.c$k.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.view.c$k` `@@io.flutter.view.c$k.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.view.c$k` `@@io.flutter.view.c$k.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.view.c$k`[] `@@io.flutter.view.c$k.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/flutter/view/c$k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cff7c.  v0:= new `io.flutter.view.c$k`;
  #L3cff80.  v1:= 0I;
  #L3cff82.  v2:= "UNKNOWN" @kind object;
  #L3cff86.  call `<init>`(v0, v2, v1) @signature `Lio/flutter/view/c$k;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3cff8c.  `@@io.flutter.view.c$k.b` @type ^`io.flutter.view.c$k` := v0 @kind object;
  #L3cff90.  v0:= new `io.flutter.view.c$k`;
  #L3cff94.  v2:= 1I;
  #L3cff96.  v3:= "LTR" @kind object;
  #L3cff9a.  call `<init>`(v0, v3, v2) @signature `Lio/flutter/view/c$k;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3cffa0.  `@@io.flutter.view.c$k.c` @type ^`io.flutter.view.c$k` := v0 @kind object;
  #L3cffa4.  v0:= new `io.flutter.view.c$k`;
  #L3cffa8.  v3:= 2I;
  #L3cffaa.  v4:= "RTL" @kind object;
  #L3cffae.  call `<init>`(v0, v4, v3) @signature `Lio/flutter/view/c$k;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3cffb4.  `@@io.flutter.view.c$k.d` @type ^`io.flutter.view.c$k` := v0 @kind object;
  #L3cffb8.  v0:= 3I;
  #L3cffba.  v0:= new `io.flutter.view.c$k`[v0];
  #L3cffbe.  v4:= `@@io.flutter.view.c$k.b` @type ^`io.flutter.view.c$k` @kind object;
  #L3cffc2.  v0[v1]:= v4 @kind object;
  #L3cffc6.  v1:= `@@io.flutter.view.c$k.c` @type ^`io.flutter.view.c$k` @kind object;
  #L3cffca.  v0[v2]:= v1 @kind object;
  #L3cffce.  v1:= `@@io.flutter.view.c$k.d` @type ^`io.flutter.view.c$k` @kind object;
  #L3cffd2.  v0[v3]:= v1 @kind object;
  #L3cffd6.  `@@io.flutter.view.c$k.e` @type ^`io.flutter.view.c$k`[] := v0 @kind object;
  #L3cffda.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.view.c$k` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/flutter/view/c$k;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3cffec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3cfff2.  return @kind void;
}
procedure `io.flutter.view.c$k` `a`(`int` v1 ) @signature `Lio/flutter/view/c$k;.a:(I)Lio/flutter/view/c$k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cff04.  v0:= 1I;
  #L3cff06.  if v1 == v0 then goto L3cff1c;
  #L3cff0a.  v0:= 2I;
  #L3cff0c.  if v1 == v0 then goto L3cff16;
  #L3cff10.  v1:= `@@io.flutter.view.c$k.b` @type ^`io.flutter.view.c$k` @kind object;
  #L3cff14.  return v1 @kind object;
  #L3cff16.  v1:= `@@io.flutter.view.c$k.c` @type ^`io.flutter.view.c$k` @kind object;
  #L3cff1a.  return v1 @kind object;
  #L3cff1c.  v1:= `@@io.flutter.view.c$k.d` @type ^`io.flutter.view.c$k` @kind object;
  #L3cff20.  return v1 @kind object;
}
procedure `io.flutter.view.c$k` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/flutter/view/c$k;.valueOf:(Ljava/lang/String;)Lio/flutter/view/c$k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cff34.  v0:= constclass @type ^`io.flutter.view.c$k` @kind object;
  #L3cff38.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3cff3e.  v1:= temp @kind object;
  #L3cff40.  v1:= (`io.flutter.view.c$k`) v1 @kind object;
  #L3cff44.  return v1 @kind object;
}
procedure `io.flutter.view.c$k`[] `values`() @signature `Lio/flutter/view/c$k;.values:()[Lio/flutter/view/c$k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cff58.  v0:= `@@io.flutter.view.c$k.e` @type ^`io.flutter.view.c$k`[] @kind object;
  #L3cff5c.  call temp:= `clone`(v0) @signature `[Lio/flutter/view/c$k;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3cff62.  v0:= temp @kind object;
  #L3cff64.  v0:= (`io.flutter.view.c$k`[]) v0 @kind object;
  #L3cff68.  return v0 @kind object;
}
