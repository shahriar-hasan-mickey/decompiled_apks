record `io.flutter.view.c$j` @kind class @AccessFlag  {
  `java.lang.String` `io.flutter.view.c$j.A` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.B` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.C` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.D` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.E` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$j.F` @AccessFlag PRIVATE;
  `io.flutter.view.c$j` `io.flutter.view.c$j.G` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$j.H` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$j.I` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$j.J` @AccessFlag PRIVATE;
  `io.flutter.view.c$g` `io.flutter.view.c$j.K` @AccessFlag PRIVATE;
  `io.flutter.view.c$g` `io.flutter.view.c$j.L` @AccessFlag PRIVATE;
  `boolean` `io.flutter.view.c$j.M` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$j.N` @AccessFlag PRIVATE;
  `boolean` `io.flutter.view.c$j.O` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$j.P` @AccessFlag PRIVATE;
  `android.graphics.Rect` `io.flutter.view.c$j.Q` @AccessFlag PRIVATE;
  `io.flutter.view.c` `io.flutter.view.c$j.a` @AccessFlag FINAL;
  `int` `io.flutter.view.c$j.b` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.c` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.d` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.e` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.f` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.g` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.h` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.i` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.j` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.k` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.l` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.m` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.n` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.o` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.p` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.q` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.r` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.s` @AccessFlag PRIVATE;
  `boolean` `io.flutter.view.c$j.t` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.u` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.v` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.w` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$j.x` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$j.y` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$j.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.view.c$j` v1 @kind this, `io.flutter.view.c` v2 @kind object) @signature `Lio/flutter/view/c$j;.<init>:(Lio/flutter/view/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cf8d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cf8d6.  v0:= -1I;
  #L3cf8d8.  v1.`io.flutter.view.c$j.b` @type ^`int` := v0;
  #L3cf8dc.  v0:= 0I;
  #L3cf8de.  v1.`io.flutter.view.c$j.t` @type ^`boolean` := v0 @kind boolean;
  #L3cf8e2.  v0:= new `java.util.ArrayList`;
  #L3cf8e6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3cf8ec.  v1.`io.flutter.view.c$j.H` @type ^`java.util.List` := v0 @kind object;
  #L3cf8f0.  v0:= new `java.util.ArrayList`;
  #L3cf8f4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3cf8fa.  v1.`io.flutter.view.c$j.I` @type ^`java.util.List` := v0 @kind object;
  #L3cf8fe.  v0:= 1I;
  #L3cf900.  v1.`io.flutter.view.c$j.M` @type ^`boolean` := v0 @kind boolean;
  #L3cf904.  v1.`io.flutter.view.c$j.O` @type ^`boolean` := v0 @kind boolean;
  #L3cf908.  v1.`io.flutter.view.c$j.a` @type ^`io.flutter.view.c` := v2 @kind object;
  #L3cf90c.  return @kind void;
}
procedure `java.lang.String` `A`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.A:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf72c.  v0:= v0.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf730.  return v0 @kind object;
}
procedure `java.lang.String` `B`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.B:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf744.  v0:= v0.`io.flutter.view.c$j.z` @type ^`java.lang.String` @kind object;
  #L3cf748.  return v0 @kind object;
}
procedure `int` `C`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.C:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf510.  v0:= v0.`io.flutter.view.c$j.w` @type ^`int`;
  #L3cf514.  return v0;
}
procedure `int` `D`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.D:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf528.  v0:= v0.`io.flutter.view.c$j.x` @type ^`int`;
  #L3cf52c.  return v0;
}
procedure `java.lang.String` `E`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.E:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf75c.  call temp:= `e`(v0) @signature `Lio/flutter/view/c$j;.e:()Ljava/lang/String;` @kind direct;
  #L3cf762.  v0:= temp @kind object;
  #L3cf764.  return v0 @kind object;
}
procedure `float` `a`(`io.flutter.view.c$j` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lio/flutter/view/c$j;.a:(FFFF)F` @AccessFlag PRIVATE {
    temp;

  #L3cf3e0.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3cf3e6.  v3:= temp;
  #L3cf3e8.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3cf3ee.  v2:= temp;
  #L3cf3f0.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3cf3f6.  v1:= temp;
  #L3cf3f8.  return v1;
}
procedure `int` `a`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf438.  v0:= v0.`io.flutter.view.c$j.j` @type ^`int`;
  #L3cf43c.  return v0;
}
procedure `int` `a`(`io.flutter.view.c$j` v0 @kind object, `int` v1 ) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf480.  v0.`io.flutter.view.c$j.b` @type ^`int` := v1;
  #L3cf484.  return v1;
}
procedure `io.flutter.view.c$j` `a`(`io.flutter.view.c$j` v2 @kind this, `h.a.d.b` v3 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lh/a/d/b;)Lio/flutter/view/c$j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf5bc.  v0:= v2.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` @kind object;
  #L3cf5c0.  if v0 == 0 then goto L3cf5d8;
  #L3cf5c4.  call temp:= `a`(v3, v0) @signature `Lh/a/d/b;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L3cf5ca.  v1:= temp;
  #L3cf5cc.  if v1 == 0 then goto L3cf5d2;
  #L3cf5d0.  return v0 @kind object;
  #L3cf5d2.  v0:= v0.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` @kind object;
  #L3cf5d6.  goto L3cf5c0;
  #L3cf5d8.  v3:= 0I;
  #L3cf5da.  return v3 @kind object;
}
procedure `io.flutter.view.c$j` `a`(`io.flutter.view.c$j` v0 @kind object, `io.flutter.view.c$j` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Lio/flutter/view/c$j;)Lio/flutter/view/c$j;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf588.  v0.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` := v1 @kind object;
  #L3cf58c.  return v1 @kind object;
}
procedure `io.flutter.view.c$j` `a`(`io.flutter.view.c$j` v0 @kind object, `float`[] v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;[F)Lio/flutter/view/c$j;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf5a0.  call temp:= `a`(v0, v1) @signature `Lio/flutter/view/c$j;.a:([F)Lio/flutter/view/c$j;` @kind direct;
  #L3cf5a6.  v0:= temp @kind object;
  #L3cf5a8.  return v0 @kind object;
}
procedure `io.flutter.view.c$j` `a`(`io.flutter.view.c$j` v9 @kind this, `float`[] v10 @kind object) @signature `Lio/flutter/view/c$j;.a:([F)Lio/flutter/view/c$j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3cf5ec.  v0:= 3I;
  #L3cf5ee.  v0:= v10[v0];
  #L3cf5f2.  v1:= 0I;
  #L3cf5f4.  v1:= v10[v1];
  #L3cf5f8.  v1:= v1 / v0 @kind float;
  #L3cf5fa.  v2:= 1I;
  #L3cf5fc.  v2:= v10[v2];
  #L3cf600.  v2:= v2 / v0 @kind float;
  #L3cf602.  v0:= v9.`io.flutter.view.c$j.B` @type ^`float`;
  #L3cf606.  v0:= fcmpg(v1, v0);
  #L3cf60a.  if v0 < 0 then goto L3cf69c;
  #L3cf60e.  v0:= v9.`io.flutter.view.c$j.D` @type ^`float`;
  #L3cf612.  v0:= fcmpl(v1, v0);
  #L3cf616.  if v0 >= 0 then goto L3cf69c;
  #L3cf61a.  v0:= v9.`io.flutter.view.c$j.C` @type ^`float`;
  #L3cf61e.  v0:= fcmpg(v2, v0);
  #L3cf622.  if v0 < 0 then goto L3cf69c;
  #L3cf626.  v0:= v9.`io.flutter.view.c$j.E` @type ^`float`;
  #L3cf62a.  v0:= fcmpl(v2, v0);
  #L3cf62e.  if v0 < 0 then goto L3cf634;
  #L3cf632.  goto L3cf69c;
  #L3cf634.  v0:= 4I;
  #L3cf636.  v0:= new `float`[v0];
  #L3cf63a.  v1:= v9.`io.flutter.view.c$j.I` @type ^`java.util.List` @kind object;
  #L3cf63e.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cf644.  v7:= temp @kind object;
  #L3cf646.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cf64c.  v1:= temp;
  #L3cf64e.  if v1 == 0 then goto L3cf69a;
  #L3cf652.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cf658.  v1:= temp @kind object;
  #L3cf65a.  v8:= v1 @kind object;
  #L3cf65c.  v8:= (`io.flutter.view.c$j`) v8 @kind object;
  #L3cf660.  v1:= `@@io.flutter.view.c$h.p` @type ^`io.flutter.view.c$h` @kind object;
  #L3cf664.  call temp:= `b`(v8, v1) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf66a.  v1:= temp;
  #L3cf66c.  if v1 == 0 then goto L3cf672;
  #L3cf670.  goto L3cf646;
  #L3cf672.  call `c`(v8) @signature `Lio/flutter/view/c$j;.c:()V` @kind direct;
  #L3cf678.  v2:= 0I;
  #L3cf67a.  v3:= v8.`io.flutter.view.c$j.N` @type ^`float`[] @kind object;
  #L3cf67e.  v4:= 0I;
  #L3cf680.  v6:= 0I;
  #L3cf682.  v1:= v0 @kind object;
  #L3cf684.  v5:= v10 @kind object;
  #L3cf686.  call `multiplyMV`(v1, v2, v3, v4, v5, v6) @signature `Landroid/opengl/Matrix;.multiplyMV:([FI[FI[FI)V` @kind static;
  #L3cf68c.  call temp:= `a`(v8, v0) @signature `Lio/flutter/view/c$j;.a:([F)Lio/flutter/view/c$j;` @kind direct;
  #L3cf692.  v1:= temp @kind object;
  #L3cf694.  if v1 == 0 then goto L3cf646;
  #L3cf698.  return v1 @kind object;
  #L3cf69a.  return v9 @kind object;
  #L3cf69c.  v10:= 0I;
  #L3cf69e.  return v10 @kind object;
}
procedure `java.lang.String` `a`(`io.flutter.view.c$j` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf6c8.  v0.`io.flutter.view.c$j.p` @type ^`java.lang.String` := v1 @kind object;
  #L3cf6cc.  return v1 @kind object;
}
procedure `void` `a`(`io.flutter.view.c$j` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Ljava/nio/ByteBuffer;[Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf920.  call `a`(v0, v1, v2) @signature `Lio/flutter/view/c$j;.a:(Ljava/nio/ByteBuffer;[Ljava/lang/String;)V` @kind direct;
  #L3cf926.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Ljava/util/List;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf950.  call `a`(v0, v1) @signature `Lio/flutter/view/c$j;.a:(Ljava/util/List;)V` @kind direct;
  #L3cf956.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v0 @kind object, `float`[] v1 @kind object, `java.util.Set` v2 @kind object, `boolean` v3 ) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;[FLjava/util/Set;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf938.  call `a`(v0, v1, v2, v3) @signature `Lio/flutter/view/c$j;.a:([FLjava/util/Set;Z)V` @kind direct;
  #L3cf93e.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object, `java.lang.String`[] v8 @kind object) @signature `Lio/flutter/view/c$j;.a:(Ljava/nio/ByteBuffer;[Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3cfc20.  v0:= 1I;
  #L3cfc22.  v6.`io.flutter.view.c$j.t` @type ^`boolean` := v0 @kind boolean;
  #L3cfc26.  v1:= v6.`io.flutter.view.c$j.p` @type ^`java.lang.String` @kind object;
  #L3cfc2a.  v6.`io.flutter.view.c$j.z` @type ^`java.lang.String` := v1 @kind object;
  #L3cfc2e.  v1:= v6.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cfc32.  v6.`io.flutter.view.c$j.A` @type ^`java.lang.String` := v1 @kind object;
  #L3cfc36.  v1:= v6.`io.flutter.view.c$j.c` @type ^`int`;
  #L3cfc3a.  v6.`io.flutter.view.c$j.u` @type ^`int` := v1;
  #L3cfc3e.  v1:= v6.`io.flutter.view.c$j.d` @type ^`int`;
  #L3cfc42.  v6.`io.flutter.view.c$j.v` @type ^`int` := v1;
  #L3cfc46.  v1:= v6.`io.flutter.view.c$j.g` @type ^`int`;
  #L3cfc4a.  v6.`io.flutter.view.c$j.w` @type ^`int` := v1;
  #L3cfc4e.  v1:= v6.`io.flutter.view.c$j.h` @type ^`int`;
  #L3cfc52.  v6.`io.flutter.view.c$j.x` @type ^`int` := v1;
  #L3cfc56.  v1:= v6.`io.flutter.view.c$j.l` @type ^`float`;
  #L3cfc5a.  v6.`io.flutter.view.c$j.y` @type ^`float` := v1;
  #L3cfc5e.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfc64.  v1:= temp;
  #L3cfc66.  v6.`io.flutter.view.c$j.c` @type ^`int` := v1;
  #L3cfc6a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfc70.  v1:= temp;
  #L3cfc72.  v6.`io.flutter.view.c$j.d` @type ^`int` := v1;
  #L3cfc76.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfc7c.  v1:= temp;
  #L3cfc7e.  v6.`io.flutter.view.c$j.e` @type ^`int` := v1;
  #L3cfc82.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfc88.  v1:= temp;
  #L3cfc8a.  v6.`io.flutter.view.c$j.f` @type ^`int` := v1;
  #L3cfc8e.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfc94.  v1:= temp;
  #L3cfc96.  v6.`io.flutter.view.c$j.g` @type ^`int` := v1;
  #L3cfc9a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfca0.  v1:= temp;
  #L3cfca2.  v6.`io.flutter.view.c$j.h` @type ^`int` := v1;
  #L3cfca6.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfcac.  v1:= temp;
  #L3cfcae.  v6.`io.flutter.view.c$j.i` @type ^`int` := v1;
  #L3cfcb2.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfcb8.  v1:= temp;
  #L3cfcba.  v6.`io.flutter.view.c$j.j` @type ^`int` := v1;
  #L3cfcbe.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfcc4.  v1:= temp;
  #L3cfcc6.  v6.`io.flutter.view.c$j.k` @type ^`int` := v1;
  #L3cfcca.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfcd0.  v1:= temp;
  #L3cfcd2.  v6.`io.flutter.view.c$j.l` @type ^`float` := v1;
  #L3cfcd6.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfcdc.  v1:= temp;
  #L3cfcde.  v6.`io.flutter.view.c$j.m` @type ^`float` := v1;
  #L3cfce2.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfce8.  v1:= temp;
  #L3cfcea.  v6.`io.flutter.view.c$j.n` @type ^`float` := v1;
  #L3cfcee.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfcf4.  v1:= temp;
  #L3cfcf6.  v2:= -1I;
  #L3cfcf8.  v3:= 0I;
  #L3cfcfa.  if v1 != v2 then goto L3cfd02;
  #L3cfcfe.  v1:= v3 @kind object;
  #L3cfd00.  goto L3cfd06;
  #L3cfd02.  v1:= v8[v1] @kind object;
  #L3cfd06.  v6.`io.flutter.view.c$j.o` @type ^`java.lang.String` := v1 @kind object;
  #L3cfd0a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfd10.  v1:= temp;
  #L3cfd12.  if v1 != v2 then goto L3cfd1a;
  #L3cfd16.  v1:= v3 @kind object;
  #L3cfd18.  goto L3cfd1e;
  #L3cfd1a.  v1:= v8[v1] @kind object;
  #L3cfd1e.  v6.`io.flutter.view.c$j.p` @type ^`java.lang.String` := v1 @kind object;
  #L3cfd22.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfd28.  v1:= temp;
  #L3cfd2a.  if v1 != v2 then goto L3cfd32;
  #L3cfd2e.  v1:= v3 @kind object;
  #L3cfd30.  goto L3cfd36;
  #L3cfd32.  v1:= v8[v1] @kind object;
  #L3cfd36.  v6.`io.flutter.view.c$j.q` @type ^`java.lang.String` := v1 @kind object;
  #L3cfd3a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfd40.  v1:= temp;
  #L3cfd42.  if v1 != v2 then goto L3cfd4a;
  #L3cfd46.  v1:= v3 @kind object;
  #L3cfd48.  goto L3cfd4e;
  #L3cfd4a.  v1:= v8[v1] @kind object;
  #L3cfd4e.  v6.`io.flutter.view.c$j.r` @type ^`java.lang.String` := v1 @kind object;
  #L3cfd52.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfd58.  v1:= temp;
  #L3cfd5a.  if v1 != v2 then goto L3cfd62;
  #L3cfd5e.  v8:= v3 @kind object;
  #L3cfd60.  goto L3cfd66;
  #L3cfd62.  v8:= v8[v1] @kind object;
  #L3cfd66.  v6.`io.flutter.view.c$j.s` @type ^`java.lang.String` := v8 @kind object;
  #L3cfd6a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfd70.  v8:= temp;
  #L3cfd72.  call temp:= `a`(v8) @signature `Lio/flutter/view/c$k;.a:(I)Lio/flutter/view/c$k;` @kind static;
  #L3cfd78.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfd7e.  v8:= temp;
  #L3cfd80.  v6.`io.flutter.view.c$j.B` @type ^`float` := v8;
  #L3cfd84.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfd8a.  v8:= temp;
  #L3cfd8c.  v6.`io.flutter.view.c$j.C` @type ^`float` := v8;
  #L3cfd90.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfd96.  v8:= temp;
  #L3cfd98.  v6.`io.flutter.view.c$j.D` @type ^`float` := v8;
  #L3cfd9c.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfda2.  v8:= temp;
  #L3cfda4.  v6.`io.flutter.view.c$j.E` @type ^`float` := v8;
  #L3cfda8.  v8:= v6.`io.flutter.view.c$j.F` @type ^`float`[] @kind object;
  #L3cfdac.  v1:= 16I;
  #L3cfdb0.  if v8 != 0 then goto L3cfdbc;
  #L3cfdb4.  v8:= new `float`[v1];
  #L3cfdb8.  v6.`io.flutter.view.c$j.F` @type ^`float`[] := v8 @kind object;
  #L3cfdbc.  v8:= 0I;
  #L3cfdbe.  v2:= 0I;
  #L3cfdc0.  if v2 >= v1 then goto L3cfdda;
  #L3cfdc4.  v4:= v6.`io.flutter.view.c$j.F` @type ^`float`[] @kind object;
  #L3cfdc8.  call temp:= `getFloat`(v7) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L3cfdce.  v5:= temp;
  #L3cfdd0.  v4[v2]:= v5;
  #L3cfdd4.  v2:= v2 + 1;
  #L3cfdd8.  goto L3cfdc0;
  #L3cfdda.  v6.`io.flutter.view.c$j.M` @type ^`boolean` := v0 @kind boolean;
  #L3cfdde.  v6.`io.flutter.view.c$j.O` @type ^`boolean` := v0 @kind boolean;
  #L3cfde2.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfde8.  v0:= temp;
  #L3cfdea.  v1:= v6.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cfdee.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3cfdf4.  v1:= v6.`io.flutter.view.c$j.I` @type ^`java.util.List` @kind object;
  #L3cfdf8.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3cfdfe.  v1:= 0I;
  #L3cfe00.  if v1 >= v0 then goto L3cfe2c;
  #L3cfe04.  v2:= v6.`io.flutter.view.c$j.a` @type ^`io.flutter.view.c` @kind object;
  #L3cfe08.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfe0e.  v4:= temp;
  #L3cfe10.  call temp:= `b`(v2, v4) @signature `Lio/flutter/view/c;.b:(Lio/flutter/view/c;I)Lio/flutter/view/c$j;` @kind static;
  #L3cfe16.  v2:= temp @kind object;
  #L3cfe18.  v2.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` := v6 @kind object;
  #L3cfe1c.  v4:= v6.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cfe20.  call temp:= `add`(v4, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfe26.  v1:= v1 + 1;
  #L3cfe2a.  goto L3cfe00;
  #L3cfe2c.  v1:= 0I;
  #L3cfe2e.  if v1 >= v0 then goto L3cfe5a;
  #L3cfe32.  v2:= v6.`io.flutter.view.c$j.a` @type ^`io.flutter.view.c` @kind object;
  #L3cfe36.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfe3c.  v4:= temp;
  #L3cfe3e.  call temp:= `b`(v2, v4) @signature `Lio/flutter/view/c;.b:(Lio/flutter/view/c;I)Lio/flutter/view/c$j;` @kind static;
  #L3cfe44.  v2:= temp @kind object;
  #L3cfe46.  v2.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` := v6 @kind object;
  #L3cfe4a.  v4:= v6.`io.flutter.view.c$j.I` @type ^`java.util.List` @kind object;
  #L3cfe4e.  call temp:= `add`(v4, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfe54.  v1:= v1 + 1;
  #L3cfe58.  goto L3cfe2e;
  #L3cfe5a.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfe60.  v0:= temp;
  #L3cfe62.  if v0 != 0 then goto L3cfe6c;
  #L3cfe66.  v6.`io.flutter.view.c$j.J` @type ^`java.util.List` := v3 @kind object;
  #L3cfe6a.  goto L3cfef0;
  #L3cfe6c.  v1:= v6.`io.flutter.view.c$j.J` @type ^`java.util.List` @kind object;
  #L3cfe70.  if v1 != 0 then goto L3cfe84;
  #L3cfe74.  v1:= new `java.util.ArrayList`;
  #L3cfe78.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3cfe7e.  v6.`io.flutter.view.c$j.J` @type ^`java.util.List` := v1 @kind object;
  #L3cfe82.  goto L3cfe8a;
  #L3cfe84.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3cfe8a.  if v8 >= v0 then goto L3cfef0;
  #L3cfe8e.  v1:= v6.`io.flutter.view.c$j.a` @type ^`io.flutter.view.c` @kind object;
  #L3cfe92.  call temp:= `getInt`(v7) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L3cfe98.  v2:= temp;
  #L3cfe9a.  call temp:= `c`(v1, v2) @signature `Lio/flutter/view/c;.c:(Lio/flutter/view/c;I)Lio/flutter/view/c$g;` @kind static;
  #L3cfea0.  v1:= temp @kind object;
  #L3cfea2.  call temp:= `e`(v1) @signature `Lio/flutter/view/c$g;.e:(Lio/flutter/view/c$g;)I` @kind static;
  #L3cfea8.  v2:= temp;
  #L3cfeaa.  v3:= `@@io.flutter.view.c$f.c` @type ^`io.flutter.view.c$f` @kind object;
  #L3cfeae.  v3:= v3.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cfeb2.  if v2 != v3 then goto L3cfebc;
  #L3cfeb6.  v6.`io.flutter.view.c$j.K` @type ^`io.flutter.view.c$g` := v1 @kind object;
  #L3cfeba.  goto L3cfee0;
  #L3cfebc.  call temp:= `e`(v1) @signature `Lio/flutter/view/c$g;.e:(Lio/flutter/view/c$g;)I` @kind static;
  #L3cfec2.  v2:= temp;
  #L3cfec4.  v3:= `@@io.flutter.view.c$f.d` @type ^`io.flutter.view.c$f` @kind object;
  #L3cfec8.  v3:= v3.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cfecc.  if v2 != v3 then goto L3cfed6;
  #L3cfed0.  v6.`io.flutter.view.c$j.L` @type ^`io.flutter.view.c$g` := v1 @kind object;
  #L3cfed4.  goto L3cfee0;
  #L3cfed6.  v2:= v6.`io.flutter.view.c$j.J` @type ^`java.util.List` @kind object;
  #L3cfeda.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfee0.  v2:= v6.`io.flutter.view.c$j.J` @type ^`java.util.List` @kind object;
  #L3cfee4.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfeea.  v8:= v8 + 1;
  #L3cfeee.  goto L3cfe8a;
  #L3cfef0.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/flutter/view/c$j;.a:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf968.  v0:= `@@io.flutter.view.c$h.n` @type ^`io.flutter.view.c$h` @kind object;
  #L3cf96c.  call temp:= `b`(v2, v0) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf972.  v0:= temp;
  #L3cf974.  if v0 == 0 then goto L3cf97e;
  #L3cf978.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cf97e.  v0:= v2.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cf982.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cf988.  v0:= temp @kind object;
  #L3cf98a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cf990.  v1:= temp;
  #L3cf992.  if v1 == 0 then goto L3cf9aa;
  #L3cf996.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cf99c.  v1:= temp @kind object;
  #L3cf99e.  v1:= (`io.flutter.view.c$j`) v1 @kind object;
  #L3cf9a2.  call `a`(v1, v3) @signature `Lio/flutter/view/c$j;.a:(Ljava/util/List;)V` @kind direct;
  #L3cf9a8.  goto L3cf98a;
  #L3cf9aa.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v12 @kind this, `float`[] v13 @kind object, `java.util.Set` v14 @kind object, `boolean` v15 ) @signature `Lio/flutter/view/c$j;.a:([FLjava/util/Set;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3cfa68.  call temp:= `add`(v14, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfa6e.  v0:= v12.`io.flutter.view.c$j.O` @type ^`boolean` @kind boolean;
  #L3cfa72.  v1:= 1I;
  #L3cfa74.  if v0 == 0 then goto L3cfa7a;
  #L3cfa78.  v15:= 1I;
  #L3cfa7a.  if v15 == 0 then goto L3cfbde;
  #L3cfa7e.  v0:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfa82.  if v0 != 0 then goto L3cfa92;
  #L3cfa86.  v0:= 16I;
  #L3cfa8a.  v0:= new `float`[v0];
  #L3cfa8e.  v12.`io.flutter.view.c$j.P` @type ^`float`[] := v0 @kind object;
  #L3cfa92.  v2:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfa96.  v3:= 0I;
  #L3cfa98.  v5:= 0I;
  #L3cfa9a.  v6:= v12.`io.flutter.view.c$j.F` @type ^`float`[] @kind object;
  #L3cfa9e.  v7:= 0I;
  #L3cfaa0.  v4:= v13 @kind object;
  #L3cfaa2.  call `multiplyMM`(v2, v3, v4, v5, v6, v7) @signature `Landroid/opengl/Matrix;.multiplyMM:([FI[FI[FI)V` @kind static;
  #L3cfaa8.  v13:= 4I;
  #L3cfaaa.  v0:= new `float`[v13];
  #L3cfaae.  v2:= 2I;
  #L3cfab0.  v3:= 0I;
  #L3cfab2.  v0[v2]:= v3;
  #L3cfab6.  v2:= 3I;
  #L3cfab8.  v3:= 1.0F;
  #L3cfabc.  v0[v2]:= v3;
  #L3cfac0.  v2:= new `float`[v13];
  #L3cfac4.  v3:= new `float`[v13];
  #L3cfac8.  v4:= new `float`[v13];
  #L3cfacc.  v13:= new `float`[v13];
  #L3cfad0.  v5:= v12.`io.flutter.view.c$j.B` @type ^`float`;
  #L3cfad4.  v6:= 0I;
  #L3cfad6.  v0[v6]:= v5;
  #L3cfada.  v5:= v12.`io.flutter.view.c$j.C` @type ^`float`;
  #L3cfade.  v0[v1]:= v5;
  #L3cfae2.  v5:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfae6.  call `a`(v12, v2, v5, v0) @signature `Lio/flutter/view/c$j;.a:([F[F[F)V` @kind direct;
  #L3cfaec.  v5:= v12.`io.flutter.view.c$j.D` @type ^`float`;
  #L3cfaf0.  v0[v6]:= v5;
  #L3cfaf4.  v5:= v12.`io.flutter.view.c$j.C` @type ^`float`;
  #L3cfaf8.  v0[v1]:= v5;
  #L3cfafc.  v5:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfb00.  call `a`(v12, v3, v5, v0) @signature `Lio/flutter/view/c$j;.a:([F[F[F)V` @kind direct;
  #L3cfb06.  v5:= v12.`io.flutter.view.c$j.D` @type ^`float`;
  #L3cfb0a.  v0[v6]:= v5;
  #L3cfb0e.  v5:= v12.`io.flutter.view.c$j.E` @type ^`float`;
  #L3cfb12.  v0[v1]:= v5;
  #L3cfb16.  v5:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfb1a.  call `a`(v12, v4, v5, v0) @signature `Lio/flutter/view/c$j;.a:([F[F[F)V` @kind direct;
  #L3cfb20.  v5:= v12.`io.flutter.view.c$j.B` @type ^`float`;
  #L3cfb24.  v0[v6]:= v5;
  #L3cfb28.  v5:= v12.`io.flutter.view.c$j.E` @type ^`float`;
  #L3cfb2c.  v0[v1]:= v5;
  #L3cfb30.  v5:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfb34.  call `a`(v12, v13, v5, v0) @signature `Lio/flutter/view/c$j;.a:([F[F[F)V` @kind direct;
  #L3cfb3a.  v0:= v12.`io.flutter.view.c$j.Q` @type ^`android.graphics.Rect` @kind object;
  #L3cfb3e.  if v0 != 0 then goto L3cfb50;
  #L3cfb42.  v0:= new `android.graphics.Rect`;
  #L3cfb46.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3cfb4c.  v12.`io.flutter.view.c$j.Q` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3cfb50.  v0:= v12.`io.flutter.view.c$j.Q` @type ^`android.graphics.Rect` @kind object;
  #L3cfb54.  v5:= v2[v6];
  #L3cfb58.  v7:= v3[v6];
  #L3cfb5c.  v8:= v4[v6];
  #L3cfb60.  v9:= v13[v6];
  #L3cfb64.  call temp:= `b`(v12, v5, v7, v8, v9) @signature `Lio/flutter/view/c$j;.b:(FFFF)F` @kind direct;
  #L3cfb6a.  v5:= temp;
  #L3cfb6c.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3cfb72.  v5:= temp;
  #L3cfb74.  v7:= v2[v1];
  #L3cfb78.  v8:= v3[v1];
  #L3cfb7c.  v9:= v4[v1];
  #L3cfb80.  v10:= v13[v1];
  #L3cfb84.  call temp:= `b`(v12, v7, v8, v9, v10) @signature `Lio/flutter/view/c$j;.b:(FFFF)F` @kind direct;
  #L3cfb8a.  v7:= temp;
  #L3cfb8c.  call temp:= `round`(v7) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3cfb92.  v7:= temp;
  #L3cfb94.  v8:= v2[v6];
  #L3cfb98.  v9:= v3[v6];
  #L3cfb9c.  v10:= v4[v6];
  #L3cfba0.  v11:= v13[v6];
  #L3cfba4.  call temp:= `a`(v12, v8, v9, v10, v11) @signature `Lio/flutter/view/c$j;.a:(FFFF)F` @kind direct;
  #L3cfbaa.  v8:= temp;
  #L3cfbac.  call temp:= `round`(v8) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3cfbb2.  v8:= temp;
  #L3cfbb4.  v2:= v2[v1];
  #L3cfbb8.  v3:= v3[v1];
  #L3cfbbc.  v4:= v4[v1];
  #L3cfbc0.  v13:= v13[v1];
  #L3cfbc4.  call temp:= `a`(v12, v2, v3, v4, v13) @signature `Lio/flutter/view/c$j;.a:(FFFF)F` @kind direct;
  #L3cfbca.  v13:= temp;
  #L3cfbcc.  call temp:= `round`(v13) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3cfbd2.  v13:= temp;
  #L3cfbd4.  call `set`(v0, v5, v7, v8, v13) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3cfbda.  v12.`io.flutter.view.c$j.O` @type ^`boolean` := v6 @kind boolean;
  #L3cfbde.  v13:= v12.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cfbe2.  call temp:= `iterator`(v13) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cfbe8.  v13:= temp @kind object;
  #L3cfbea.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cfbf0.  v0:= temp;
  #L3cfbf2.  if v0 == 0 then goto L3cfc0e;
  #L3cfbf6.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cfbfc.  v0:= temp @kind object;
  #L3cfbfe.  v0:= (`io.flutter.view.c$j`) v0 @kind object;
  #L3cfc02.  v1:= v12.`io.flutter.view.c$j.P` @type ^`float`[] @kind object;
  #L3cfc06.  call `a`(v0, v1, v14, v15) @signature `Lio/flutter/view/c$j;.a:([FLjava/util/Set;Z)V` @kind direct;
  #L3cfc0c.  goto L3cfbea;
  #L3cfc0e.  return @kind void;
}
procedure `void` `a`(`io.flutter.view.c$j` v6 @kind this, `float`[] v7 @kind object, `float`[] v8 @kind object, `float`[] v9 @kind object) @signature `Lio/flutter/view/c$j;.a:([F[F[F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3cfa14.  v1:= 0I;
  #L3cfa16.  v3:= 0I;
  #L3cfa18.  v5:= 0I;
  #L3cfa1a.  v0:= v7 @kind object;
  #L3cfa1c.  v2:= v8 @kind object;
  #L3cfa1e.  v4:= v9 @kind object;
  #L3cfa20.  call `multiplyMV`(v0, v1, v2, v3, v4, v5) @signature `Landroid/opengl/Matrix;.multiplyMV:([FI[FI[FI)V` @kind static;
  #L3cfa26.  v8:= 3I;
  #L3cfa28.  v9:= v7[v8];
  #L3cfa2c.  v0:= 0I;
  #L3cfa2e.  v1:= v7[v0];
  #L3cfa32.  v1:= v1 / v9 @kind float;
  #L3cfa34.  v7[v0]:= v1;
  #L3cfa38.  v0:= 1I;
  #L3cfa3a.  v1:= v7[v0];
  #L3cfa3e.  v1:= v1 / v9 @kind float;
  #L3cfa40.  v7[v0]:= v1;
  #L3cfa44.  v0:= 2I;
  #L3cfa46.  v1:= v7[v0];
  #L3cfa4a.  v1:= v1 / v9 @kind float;
  #L3cfa4c.  v7[v0]:= v1;
  #L3cfa50.  v9:= 0I;
  #L3cfa52.  v7[v8]:= v9;
  #L3cfa56.  return @kind void;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v3 @kind this) @signature `Lio/flutter/view/c$j;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cf190.  v0:= v3.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf194.  v1:= 0I;
  #L3cf196.  if v0 != 0 then goto L3cf1a4;
  #L3cf19a.  v0:= v3.`io.flutter.view.c$j.A` @type ^`java.lang.String` @kind object;
  #L3cf19e.  if v0 != 0 then goto L3cf1a4;
  #L3cf1a2.  return v1;
  #L3cf1a4.  v0:= v3.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf1a8.  if v0 == 0 then goto L3cf1c0;
  #L3cf1ac.  v2:= v3.`io.flutter.view.c$j.A` @type ^`java.lang.String` @kind object;
  #L3cf1b0.  if v2 == 0 then goto L3cf1c0;
  #L3cf1b4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cf1ba.  v0:= temp;
  #L3cf1bc.  if v0 != 0 then goto L3cf1c2;
  #L3cf1c0.  v1:= 1I;
  #L3cf1c2.  return v1;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v1 @kind this, `io.flutter.view.c$f` v2 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$f;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf21c.  v0:= v1.`io.flutter.view.c$j.v` @type ^`int`;
  #L3cf220.  v2:= v2.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf224.  v2:= v2 ^& v0 @kind int;
  #L3cf226.  if v2 == 0 then goto L3cf22e;
  #L3cf22a.  v2:= 1I;
  #L3cf22c.  goto L3cf230;
  #L3cf22e.  v2:= 0I;
  #L3cf230.  return v2;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v1 @kind this, `io.flutter.view.c$h` v2 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$h;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf244.  v0:= v1.`io.flutter.view.c$j.u` @type ^`int`;
  #L3cf248.  v2:= v2.`io.flutter.view.c$h.b` @type ^`int`;
  #L3cf24c.  v2:= v2 ^& v0 @kind int;
  #L3cf24e.  if v2 == 0 then goto L3cf256;
  #L3cf252.  v2:= 1I;
  #L3cf254.  goto L3cf258;
  #L3cf256.  v2:= 0I;
  #L3cf258.  return v2;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v0 @kind object, `h.a.d.b` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Lh/a/d/b;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf068.  call temp:= `b`(v0, v1) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;Lh/a/d/b;)Z` @kind static;
  #L3cf06e.  v0:= temp;
  #L3cf070.  return v0;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v0 @kind object, `io.flutter.view.c$f` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Lio/flutter/view/c$f;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf0bc.  call temp:= `b`(v0, v1) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$f;)Z` @kind direct;
  #L3cf0c2.  v0:= temp;
  #L3cf0c4.  return v0;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v0 @kind object, `io.flutter.view.c$h` v1 @kind object) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Lio/flutter/view/c$h;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf0a0.  call temp:= `b`(v0, v1) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf0a6.  v0:= temp;
  #L3cf0a8.  return v0;
}
procedure `boolean` `a`(`io.flutter.view.c$j` v0 @kind object, `boolean` v1 ) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$j;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf0f0.  v0.`io.flutter.view.c$j.O` @type ^`boolean` := v1 @kind boolean;
  #L3cf0f4.  return v1;
}
procedure `float` `b`(`io.flutter.view.c$j` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lio/flutter/view/c$j;.b:(FFFF)F` @AccessFlag PRIVATE {
    temp;

  #L3cf40c.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3cf412.  v3:= temp;
  #L3cf414.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3cf41a.  v2:= temp;
  #L3cf41c.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3cf422.  v1:= temp;
  #L3cf424.  return v1;
}
procedure `int` `b`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf450.  v0:= v0.`io.flutter.view.c$j.i` @type ^`int`;
  #L3cf454.  return v0;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v2 @kind this) @signature `Lio/flutter/view/c$j;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf1d4.  v0:= v2.`io.flutter.view.c$j.l` @type ^`float`;
  #L3cf1d8.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L3cf1de.  v0:= temp;
  #L3cf1e0.  if v0 != 0 then goto L3cf208;
  #L3cf1e4.  v0:= v2.`io.flutter.view.c$j.y` @type ^`float`;
  #L3cf1e8.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L3cf1ee.  v0:= temp;
  #L3cf1f0.  if v0 != 0 then goto L3cf208;
  #L3cf1f4.  v0:= v2.`io.flutter.view.c$j.y` @type ^`float`;
  #L3cf1f8.  v1:= v2.`io.flutter.view.c$j.l` @type ^`float`;
  #L3cf1fc.  v0:= fcmpl(v0, v1);
  #L3cf200.  if v0 == 0 then goto L3cf208;
  #L3cf204.  v0:= 1I;
  #L3cf206.  goto L3cf20a;
  #L3cf208.  v0:= 0I;
  #L3cf20a.  return v0;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v1 @kind this, `io.flutter.view.c$f` v2 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$f;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf26c.  v0:= v1.`io.flutter.view.c$j.d` @type ^`int`;
  #L3cf270.  v2:= v2.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf274.  v2:= v2 ^& v0 @kind int;
  #L3cf276.  if v2 == 0 then goto L3cf27e;
  #L3cf27a.  v2:= 1I;
  #L3cf27c.  goto L3cf280;
  #L3cf27e.  v2:= 0I;
  #L3cf280.  return v2;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v1 @kind this, `io.flutter.view.c$h` v2 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf294.  v0:= v1.`io.flutter.view.c$j.c` @type ^`int`;
  #L3cf298.  v2:= v2.`io.flutter.view.c$h.b` @type ^`int`;
  #L3cf29c.  v2:= v2 ^& v0 @kind int;
  #L3cf29e.  if v2 == 0 then goto L3cf2a6;
  #L3cf2a2.  v2:= 1I;
  #L3cf2a4.  goto L3cf2a8;
  #L3cf2a6.  v2:= 0I;
  #L3cf2a8.  return v2;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v0 @kind object, `h.a.d.b` v1 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;Lh/a/d/b;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3cf370.  if v0 == 0 then goto L3cf384;
  #L3cf374.  call temp:= `a`(v0, v1) @signature `Lio/flutter/view/c$j;.a:(Lh/a/d/b;)Lio/flutter/view/c$j;` @kind direct;
  #L3cf37a.  v0:= temp @kind object;
  #L3cf37c.  if v0 == 0 then goto L3cf384;
  #L3cf380.  v0:= 1I;
  #L3cf382.  goto L3cf386;
  #L3cf384.  v0:= 0I;
  #L3cf386.  return v0;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v0 @kind object, `io.flutter.view.c$f` v1 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;Lio/flutter/view/c$f;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf13c.  call temp:= `a`(v0, v1) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$f;)Z` @kind direct;
  #L3cf142.  v0:= temp;
  #L3cf144.  return v0;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v0 @kind object, `io.flutter.view.c$h` v1 @kind object) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;Lio/flutter/view/c$h;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf174.  call temp:= `a`(v0, v1) @signature `Lio/flutter/view/c$j;.a:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf17a.  v0:= temp;
  #L3cf17c.  return v0;
}
procedure `boolean` `b`(`io.flutter.view.c$j` v0 @kind object, `boolean` v1 ) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$j;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf108.  v0.`io.flutter.view.c$j.M` @type ^`boolean` := v1 @kind boolean;
  #L3cf10c.  return v1;
}
procedure `android.graphics.Rect` `c`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.c:(Lio/flutter/view/c$j;)Landroid/graphics/Rect;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf034.  call temp:= `d`(v0) @signature `Lio/flutter/view/c$j;.d:()Landroid/graphics/Rect;` @kind direct;
  #L3cf03a.  v0:= temp @kind object;
  #L3cf03c.  return v0 @kind object;
}
procedure `void` `c`(`io.flutter.view.c$j` v3 @kind this) @signature `Lio/flutter/view/c$j;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cf9bc.  v0:= v3.`io.flutter.view.c$j.M` @type ^`boolean` @kind boolean;
  #L3cf9c0.  if v0 != 0 then goto L3cf9c6;
  #L3cf9c4.  return @kind void;
  #L3cf9c6.  v0:= 0I;
  #L3cf9c8.  v3.`io.flutter.view.c$j.M` @type ^`boolean` := v0 @kind boolean;
  #L3cf9cc.  v1:= v3.`io.flutter.view.c$j.N` @type ^`float`[] @kind object;
  #L3cf9d0.  if v1 != 0 then goto L3cf9e0;
  #L3cf9d4.  v1:= 16I;
  #L3cf9d8.  v1:= new `float`[v1];
  #L3cf9dc.  v3.`io.flutter.view.c$j.N` @type ^`float`[] := v1 @kind object;
  #L3cf9e0.  v1:= v3.`io.flutter.view.c$j.N` @type ^`float`[] @kind object;
  #L3cf9e4.  v2:= v3.`io.flutter.view.c$j.F` @type ^`float`[] @kind object;
  #L3cf9e8.  call temp:= `invertM`(v1, v0, v2, v0) @signature `Landroid/opengl/Matrix;.invertM:([FI[FI)Z` @kind static;
  #L3cf9ee.  v0:= temp;
  #L3cf9f0.  if v0 != 0 then goto L3cfa00;
  #L3cf9f4.  v0:= v3.`io.flutter.view.c$j.N` @type ^`float`[] @kind object;
  #L3cf9f8.  v1:= 0I;
  #L3cf9fa.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L3cfa00.  return @kind void;
}
procedure `int` `d`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.d:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf468.  v0:= v0.`io.flutter.view.c$j.b` @type ^`int`;
  #L3cf46c.  return v0;
}
procedure `android.graphics.Rect` `d`(`io.flutter.view.c$j` v1 @kind this) @signature `Lio/flutter/view/c$j;.d:()Landroid/graphics/Rect;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cf050.  v0:= v1.`io.flutter.view.c$j.Q` @type ^`android.graphics.Rect` @kind object;
  #L3cf054.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`io.flutter.view.c$j` v3 @kind this) @signature `Lio/flutter/view/c$j;.e:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cf778.  v0:= `@@io.flutter.view.c$h.o` @type ^`io.flutter.view.c$h` @kind object;
  #L3cf77c.  call temp:= `b`(v3, v0) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf782.  v0:= temp;
  #L3cf784.  if v0 == 0 then goto L3cf7a2;
  #L3cf788.  v0:= v3.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf78c.  if v0 == 0 then goto L3cf7a2;
  #L3cf790.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cf796.  v0:= temp;
  #L3cf798.  if v0 != 0 then goto L3cf7a2;
  #L3cf79c.  v0:= v3.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf7a0.  return v0 @kind object;
  #L3cf7a2.  v0:= v3.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cf7a6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cf7ac.  v0:= temp @kind object;
  #L3cf7ae.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cf7b4.  v1:= temp;
  #L3cf7b6.  if v1 == 0 then goto L3cf7e0;
  #L3cf7ba.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cf7c0.  v1:= temp @kind object;
  #L3cf7c2.  v1:= (`io.flutter.view.c$j`) v1 @kind object;
  #L3cf7c6.  call temp:= `e`(v1) @signature `Lio/flutter/view/c$j;.e:()Ljava/lang/String;` @kind direct;
  #L3cf7cc.  v1:= temp @kind object;
  #L3cf7ce.  if v1 == 0 then goto L3cf7ae;
  #L3cf7d2.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cf7d8.  v2:= temp;
  #L3cf7da.  if v2 != 0 then goto L3cf7ae;
  #L3cf7de.  return v1 @kind object;
  #L3cf7e0.  v0:= 0I;
  #L3cf7e2.  return v0 @kind object;
}
procedure `boolean` `e`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.e:(Lio/flutter/view/c$j;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf084.  call temp:= `g`(v0) @signature `Lio/flutter/view/c$j;.g:()Z` @kind direct;
  #L3cf08a.  v0:= temp;
  #L3cf08c.  return v0;
}
procedure `int` `f`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.f:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf498.  v0:= v0.`io.flutter.view.c$j.g` @type ^`int`;
  #L3cf49c.  return v0;
}
procedure `java.lang.String` `f`(`io.flutter.view.c$j` v6 @kind this) @signature `Lio/flutter/view/c$j;.f:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3cf7f4.  v0:= new `java.lang.StringBuilder`;
  #L3cf7f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cf7fe.  v1:= 3I;
  #L3cf800.  v1:= new `java.lang.String`[v1];
  #L3cf804.  v2:= v6.`io.flutter.view.c$j.p` @type ^`java.lang.String` @kind object;
  #L3cf808.  v3:= 0I;
  #L3cf80a.  v1[v3]:= v2 @kind object;
  #L3cf80e.  v2:= v6.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf812.  v4:= 1I;
  #L3cf814.  v1[v4]:= v2 @kind object;
  #L3cf818.  v2:= v6.`io.flutter.view.c$j.s` @type ^`java.lang.String` @kind object;
  #L3cf81c.  v4:= 2I;
  #L3cf81e.  v1[v4]:= v2 @kind object;
  #L3cf822.  v2:= length @variable v1;
  #L3cf824.  if v3 >= v2 then goto L3cf85e;
  #L3cf828.  v4:= v1[v3] @kind object;
  #L3cf82c.  if v4 == 0 then goto L3cf858;
  #L3cf830.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cf836.  v5:= temp;
  #L3cf838.  if v5 <= 0 then goto L3cf858;
  #L3cf83c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3cf842.  v5:= temp;
  #L3cf844.  if v5 <= 0 then goto L3cf852;
  #L3cf848.  v5:= ", " @kind object;
  #L3cf84c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf852.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf858.  v3:= v3 + 1;
  #L3cf85c.  goto L3cf824;
  #L3cf85e.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3cf864.  v1:= temp;
  #L3cf866.  if v1 <= 0 then goto L3cf874;
  #L3cf86a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf870.  v0:= temp @kind object;
  #L3cf872.  goto L3cf876;
  #L3cf874.  v0:= 0I;
  #L3cf876.  return v0 @kind object;
}
procedure `int` `g`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.g:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf4b0.  v0:= v0.`io.flutter.view.c$j.h` @type ^`int`;
  #L3cf4b4.  return v0;
}
procedure `boolean` `g`(`io.flutter.view.c$j` v4 @kind this) @signature `Lio/flutter/view/c$j;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cf2bc.  v0:= `@@io.flutter.view.c$h.n` @type ^`io.flutter.view.c$h` @kind object;
  #L3cf2c0.  call temp:= `b`(v4, v0) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf2c6.  v0:= temp;
  #L3cf2c8.  v1:= 0I;
  #L3cf2ca.  if v0 == 0 then goto L3cf2d0;
  #L3cf2ce.  return v1;
  #L3cf2d0.  v0:= `@@io.flutter.view.c$h.w` @type ^`io.flutter.view.c$h` @kind object;
  #L3cf2d4.  call temp:= `b`(v4, v0) @signature `Lio/flutter/view/c$j;.b:(Lio/flutter/view/c$h;)Z` @kind direct;
  #L3cf2da.  v0:= temp;
  #L3cf2dc.  v2:= 1I;
  #L3cf2de.  if v0 == 0 then goto L3cf2e4;
  #L3cf2e2.  return v2;
  #L3cf2e4.  v0:= `@@io.flutter.view.c$f.f` @type ^`io.flutter.view.c$f` @kind object;
  #L3cf2e8.  v0:= v0.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf2ec.  v3:= `@@io.flutter.view.c$f.e` @type ^`io.flutter.view.c$f` @kind object;
  #L3cf2f0.  v3:= v3.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf2f4.  v0:= v0 ^| v3 @kind int;
  #L3cf2f6.  v3:= `@@io.flutter.view.c$f.g` @type ^`io.flutter.view.c$f` @kind object;
  #L3cf2fa.  v3:= v3.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf2fe.  v0:= v0 ^| v3 @kind int;
  #L3cf300.  v3:= `@@io.flutter.view.c$f.h` @type ^`io.flutter.view.c$f` @kind object;
  #L3cf304.  v3:= v3.`io.flutter.view.c$f.b` @type ^`int`;
  #L3cf308.  v0:= v0 ^| v3 @kind int;
  #L3cf30a.  v3:= v4.`io.flutter.view.c$j.d` @type ^`int`;
  #L3cf30e.  v0:= ~v0 @kind int;
  #L3cf310.  v0:= v0 ^& v3 @kind int;
  #L3cf312.  if v0 != 0 then goto L3cf35a;
  #L3cf316.  v0:= v4.`io.flutter.view.c$j.c` @type ^`int`;
  #L3cf31a.  if v0 != 0 then goto L3cf35a;
  #L3cf31e.  v0:= v4.`io.flutter.view.c$j.o` @type ^`java.lang.String` @kind object;
  #L3cf322.  if v0 == 0 then goto L3cf332;
  #L3cf326.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cf32c.  v0:= temp;
  #L3cf32e.  if v0 == 0 then goto L3cf35a;
  #L3cf332.  v0:= v4.`io.flutter.view.c$j.p` @type ^`java.lang.String` @kind object;
  #L3cf336.  if v0 == 0 then goto L3cf346;
  #L3cf33a.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cf340.  v0:= temp;
  #L3cf342.  if v0 == 0 then goto L3cf35a;
  #L3cf346.  v0:= v4.`io.flutter.view.c$j.s` @type ^`java.lang.String` @kind object;
  #L3cf34a.  if v0 == 0 then goto L3cf35c;
  #L3cf34e.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cf354.  v0:= temp;
  #L3cf356.  if v0 != 0 then goto L3cf35c;
  #L3cf35a.  v1:= 1I;
  #L3cf35c.  return v1;
}
procedure `int` `h`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.h:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf4c8.  v0:= v0.`io.flutter.view.c$j.e` @type ^`int`;
  #L3cf4cc.  return v0;
}
procedure `java.lang.String` `i`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.i:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf6b0.  v0:= v0.`io.flutter.view.c$j.p` @type ^`java.lang.String` @kind object;
  #L3cf6b4.  return v0 @kind object;
}
procedure `int` `j`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.j:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf4e0.  v0:= v0.`io.flutter.view.c$j.f` @type ^`int`;
  #L3cf4e4.  return v0;
}
procedure `io.flutter.view.c$j` `k`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.k:(Lio/flutter/view/c$j;)Lio/flutter/view/c$j;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf570.  v0:= v0.`io.flutter.view.c$j.G` @type ^`io.flutter.view.c$j` @kind object;
  #L3cf574.  return v0 @kind object;
}
procedure `io.flutter.view.c$g` `l`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.l:(Lio/flutter/view/c$j;)Lio/flutter/view/c$g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf540.  v0:= v0.`io.flutter.view.c$j.K` @type ^`io.flutter.view.c$g` @kind object;
  #L3cf544.  return v0 @kind object;
}
procedure `io.flutter.view.c$g` `m`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.m:(Lio/flutter/view/c$j;)Lio/flutter/view/c$g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf558.  v0:= v0.`io.flutter.view.c$j.L` @type ^`io.flutter.view.c$g` @kind object;
  #L3cf55c.  return v0 @kind object;
}
procedure `java.lang.String` `n`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.n:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf6e0.  call temp:= `f`(v0) @signature `Lio/flutter/view/c$j;.f:()Ljava/lang/String;` @kind direct;
  #L3cf6e6.  v0:= temp @kind object;
  #L3cf6e8.  return v0 @kind object;
}
procedure `java.util.List` `o`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.o:(Lio/flutter/view/c$j;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf888.  v0:= v0.`io.flutter.view.c$j.J` @type ^`java.util.List` @kind object;
  #L3cf88c.  return v0 @kind object;
}
procedure `java.util.List` `p`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.p:(Lio/flutter/view/c$j;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf8a0.  v0:= v0.`io.flutter.view.c$j.H` @type ^`java.util.List` @kind object;
  #L3cf8a4.  return v0 @kind object;
}
procedure `java.lang.String` `q`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.q:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf6fc.  v0:= v0.`io.flutter.view.c$j.q` @type ^`java.lang.String` @kind object;
  #L3cf700.  return v0 @kind object;
}
procedure `java.lang.String` `r`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.r:(Lio/flutter/view/c$j;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf714.  v0:= v0.`io.flutter.view.c$j.r` @type ^`java.lang.String` @kind object;
  #L3cf718.  return v0 @kind object;
}
procedure `boolean` `s`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.s:(Lio/flutter/view/c$j;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf0d8.  v0:= v0.`io.flutter.view.c$j.t` @type ^`boolean` @kind boolean;
  #L3cf0dc.  return v0;
}
procedure `boolean` `t`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.t:(Lio/flutter/view/c$j;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf120.  call temp:= `b`(v0) @signature `Lio/flutter/view/c$j;.b:()Z` @kind direct;
  #L3cf126.  v0:= temp;
  #L3cf128.  return v0;
}
procedure `float` `u`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.u:(Lio/flutter/view/c$j;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf398.  v0:= v0.`io.flutter.view.c$j.l` @type ^`float`;
  #L3cf39c.  return v0;
}
procedure `float` `v`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.v:(Lio/flutter/view/c$j;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf3b0.  v0:= v0.`io.flutter.view.c$j.m` @type ^`float`;
  #L3cf3b4.  return v0;
}
procedure `float` `w`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.w:(Lio/flutter/view/c$j;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf3c8.  v0:= v0.`io.flutter.view.c$j.n` @type ^`float`;
  #L3cf3cc.  return v0;
}
procedure `int` `x`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.x:(Lio/flutter/view/c$j;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf4f8.  v0:= v0.`io.flutter.view.c$j.k` @type ^`int`;
  #L3cf4fc.  return v0;
}
procedure `java.util.List` `y`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.y:(Lio/flutter/view/c$j;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf8b8.  v0:= v0.`io.flutter.view.c$j.I` @type ^`java.util.List` @kind object;
  #L3cf8bc.  return v0 @kind object;
}
procedure `boolean` `z`(`io.flutter.view.c$j` v0 @kind object) @signature `Lio/flutter/view/c$j;.z:(Lio/flutter/view/c$j;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3cf158.  call temp:= `a`(v0) @signature `Lio/flutter/view/c$j;.a:()Z` @kind direct;
  #L3cf15e.  v0:= temp;
  #L3cf160.  return v0;
}
