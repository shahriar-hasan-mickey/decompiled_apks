record `io.flutter.plugin.editing.c$b` @kind class @AccessFlag  extends `io.flutter.plugin.editing.c$d` @kind interface {
  `boolean` `io.flutter.plugin.editing.c$b.a` @AccessFlag FINAL_SYNTHETIC;
  `double`[] `io.flutter.plugin.editing.c$b.b` @AccessFlag FINAL_SYNTHETIC;
  `double`[] `io.flutter.plugin.editing.c$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugin.editing.c$b` v0 @kind this, `io.flutter.plugin.editing.c` v1 @kind object, `boolean` v2 , `double`[] v3 @kind object, `double`[] v4 @kind object) @signature `Lio/flutter/plugin/editing/c$b;.<init>:(Lio/flutter/plugin/editing/c;Z[D[D)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b5f18.  v0.`io.flutter.plugin.editing.c$b.a` @type ^`boolean` := v2 @kind boolean;
  #L3b5f1c.  v0.`io.flutter.plugin.editing.c$b.b` @type ^`double`[] := v3 @kind object;
  #L3b5f20.  v0.`io.flutter.plugin.editing.c$b.c` @type ^`double`[] := v4 @kind object;
  #L3b5f24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b5f2a.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugin.editing.c$b` v10 @kind this, `double` v11 , `double` v13 ) @signature `Lio/flutter/plugin/editing/c$b;.a:(DD)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3b5f3c.  v0:= v10.`io.flutter.plugin.editing.c$b.a` @type ^`boolean` @kind boolean;
  #L3b5f40.  v1:= 1.0D;
  #L3b5f44.  v3:= 3I;
  #L3b5f46.  if v0 == 0 then goto L3b5f4c;
  #L3b5f4a.  goto L3b5f70;
  #L3b5f4c.  v0:= v10.`io.flutter.plugin.editing.c$b.b` @type ^`double`[] @kind object;
  #L3b5f50.  v4:= v0[v3] @kind wide;
  #L3b5f54.  v4:= v4 * v11 @kind double;
  #L3b5f58.  v6:= 7I;
  #L3b5f5a.  v6:= v0[v6] @kind wide;
  #L3b5f5e.  v6:= v6 * v13 @kind double;
  #L3b5f62.  v4:= v4 + v6 @kind double;
  #L3b5f64.  v6:= 15I;
  #L3b5f68.  v6:= v0[v6] @kind wide;
  #L3b5f6c.  v4:= v4 + v6 @kind double;
  #L3b5f6e.  v1:= v1 / v4 @kind double;
  #L3b5f70.  v0:= v10.`io.flutter.plugin.editing.c$b.b` @type ^`double`[] @kind object;
  #L3b5f74.  v4:= 0I;
  #L3b5f76.  v5:= v0[v4] @kind wide;
  #L3b5f7a.  v5:= v5 * v11 @kind double;
  #L3b5f7e.  v7:= 4I;
  #L3b5f80.  v7:= v0[v7] @kind wide;
  #L3b5f84.  v7:= v7 * v13 @kind double;
  #L3b5f88.  v5:= v5 + v7 @kind double;
  #L3b5f8a.  v7:= 12I;
  #L3b5f8e.  v7:= v0[v7] @kind wide;
  #L3b5f92.  v5:= v5 + v7 @kind double;
  #L3b5f94.  v5:= v5 * v1 @kind double;
  #L3b5f98.  v7:= 1I;
  #L3b5f9a.  v8:= v0[v7] @kind wide;
  #L3b5f9e.  v8:= v8 * v11 @kind double;
  #L3b5fa2.  v11:= 5I;
  #L3b5fa4.  v11:= v0[v11] @kind wide;
  #L3b5fa8.  v11:= v11 * v13 @kind double;
  #L3b5fac.  v8:= v8 + v11 @kind double;
  #L3b5fae.  v11:= 13I;
  #L3b5fb2.  v11:= v0[v11] @kind wide;
  #L3b5fb6.  v8:= v8 + v11 @kind double;
  #L3b5fb8.  v8:= v8 * v1 @kind double;
  #L3b5fbc.  v11:= v10.`io.flutter.plugin.editing.c$b.c` @type ^`double`[] @kind object;
  #L3b5fc0.  v12:= v11[v4] @kind wide;
  #L3b5fc4.  v14:= dcmpg(v5, v12);
  #L3b5fc8.  if v14 >= 0 then goto L3b5fd2;
  #L3b5fcc.  v11[v4]:= v5 @kind wide;
  #L3b5fd0.  goto L3b5fe2;
  #L3b5fd2.  v12:= v11[v7] @kind wide;
  #L3b5fd6.  v14:= dcmpl(v5, v12);
  #L3b5fda.  if v14 <= 0 then goto L3b5fe2;
  #L3b5fde.  v11[v7]:= v5 @kind wide;
  #L3b5fe2.  v11:= v10.`io.flutter.plugin.editing.c$b.c` @type ^`double`[] @kind object;
  #L3b5fe6.  v12:= 2I;
  #L3b5fe8.  v13:= v11[v12] @kind wide;
  #L3b5fec.  v0:= dcmpg(v8, v13);
  #L3b5ff0.  if v0 >= 0 then goto L3b5ffa;
  #L3b5ff4.  v11[v12]:= v8 @kind wide;
  #L3b5ff8.  goto L3b600a;
  #L3b5ffa.  v12:= v11[v3] @kind wide;
  #L3b5ffe.  v14:= dcmpl(v8, v12);
  #L3b6002.  if v14 <= 0 then goto L3b600a;
  #L3b6006.  v11[v3]:= v8 @kind wide;
  #L3b600a.  return @kind void;
}
