record `c.d.a.j.d` @kind class @AccessFlag PUBLIC {
  `c.d.a.j.f` `c.d.a.j.d.a` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.b` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.c` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.d` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.e` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.f` @AccessFlag PROTECTED;
  `c.d.a.j.f` `c.d.a.j.d.g` @AccessFlag PROTECTED;
  `java.util.ArrayList` `c.d.a.j.d.h` @AccessFlag PROTECTED;
  `int` `c.d.a.j.d.i` @AccessFlag PROTECTED;
  `int` `c.d.a.j.d.j` @AccessFlag PROTECTED;
  `float` `c.d.a.j.d.k` @AccessFlag PROTECTED;
  `int` `c.d.a.j.d.l` @AccessFlag PRIVATE;
  `boolean` `c.d.a.j.d.m` @AccessFlag PRIVATE;
  `boolean` `c.d.a.j.d.n` @AccessFlag PROTECTED;
  `boolean` `c.d.a.j.d.o` @AccessFlag PROTECTED;
  `boolean` `c.d.a.j.d.p` @AccessFlag PROTECTED;
  `boolean` `c.d.a.j.d.q` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.d.a.j.d` v1 @kind this, `c.d.a.j.f` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lc/d/a/j/d;.<init>:(Lc/d/a/j/f;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L163560.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L163566.  v0:= 0I;
  #L163568.  v1.`c.d.a.j.d.k` @type ^`float` := v0;
  #L16356c.  v0:= 0I;
  #L16356e.  v1.`c.d.a.j.d.m` @type ^`boolean` := v0 @kind boolean;
  #L163572.  v1.`c.d.a.j.d.a` @type ^`c.d.a.j.f` := v2 @kind object;
  #L163576.  v1.`c.d.a.j.d.l` @type ^`int` := v3;
  #L16357a.  v1.`c.d.a.j.d.m` @type ^`boolean` := v4 @kind boolean;
  #L16357e.  return @kind void;
}
procedure `boolean` `a`(`c.d.a.j.f` v2 @kind object, `int` v3 ) @signature `Lc/d/a/j/d;.a:(Lc/d/a/j/f;I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L163510.  call temp:= `r`(v2) @signature `Lc/d/a/j/f;.r:()I` @kind virtual;
  #L163516.  v0:= temp;
  #L163518.  v1:= 8I;
  #L16351c.  if v0 == v1 then goto L16354a;
  #L163520.  v0:= v2.`c.d.a.j.f.C` @type ^`c.d.a.j.f$b`[] @kind object;
  #L163524.  v0:= v0[v3] @kind object;
  #L163528.  v1:= `@@c.d.a.j.f$b.d` @type ^`c.d.a.j.f$b` @kind object;
  #L16352c.  if v0 != v1 then goto L16354a;
  #L163530.  v2:= v2.`c.d.a.j.f.g` @type ^`int`[] @kind object;
  #L163534.  v0:= v2[v3];
  #L163538.  if v0 == 0 then goto L163546;
  #L16353c.  v2:= v2[v3];
  #L163540.  v3:= 3I;
  #L163542.  if v2 != v3 then goto L16354a;
  #L163546.  v2:= 1I;
  #L163548.  goto L16354c;
  #L16354a.  v2:= 0I;
  #L16354c.  return v2;
}
procedure `void` `b`(`c.d.a.j.d` v13 @kind this) @signature `Lc/d/a/j/d;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1635b8.  v0:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L1635bc.  v1:= 2I;
  #L1635be.  v0:= v0 * 2;
  #L1635c2.  v2:= v13.`c.d.a.j.d.a` @type ^`c.d.a.j.f` @kind object;
  #L1635c6.  v3:= 0I;
  #L1635c8.  v4:= v2 @kind object;
  #L1635ca.  v5:= v4 @kind object;
  #L1635cc.  v2:= 0I;
  #L1635ce.  v6:= 1I;
  #L1635d0.  if v2 != 0 then goto L163738;
  #L1635d4.  v7:= v13.`c.d.a.j.d.i` @type ^`int`;
  #L1635d8.  v7:= v7 + v6 @kind int;
  #L1635da.  v13.`c.d.a.j.d.i` @type ^`int` := v7;
  #L1635de.  v7:= v4.`c.d.a.j.f.i0` @type ^`c.d.a.j.f`[] @kind object;
  #L1635e2.  v8:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L1635e6.  v9:= 0I;
  #L1635e8.  v7[v8]:= v9 @kind object;
  #L1635ec.  v7:= v4.`c.d.a.j.f.h0` @type ^`c.d.a.j.f`[] @kind object;
  #L1635f0.  v7[v8]:= v9 @kind object;
  #L1635f4.  call temp:= `r`(v4) @signature `Lc/d/a/j/f;.r:()I` @kind virtual;
  #L1635fa.  v7:= temp;
  #L1635fc.  v8:= 8I;
  #L163600.  if v7 == v8 then goto L1636da;
  #L163604.  v7:= v13.`c.d.a.j.d.b` @type ^`c.d.a.j.f` @kind object;
  #L163608.  if v7 != 0 then goto L163610;
  #L16360c.  v13.`c.d.a.j.d.b` @type ^`c.d.a.j.f` := v4 @kind object;
  #L163610.  v13.`c.d.a.j.d.d` @type ^`c.d.a.j.f` := v4 @kind object;
  #L163614.  v7:= v4.`c.d.a.j.f.C` @type ^`c.d.a.j.f$b`[] @kind object;
  #L163618.  v8:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L16361c.  v7:= v7[v8] @kind object;
  #L163620.  v10:= `@@c.d.a.j.f$b.d` @type ^`c.d.a.j.f$b` @kind object;
  #L163624.  if v7 != v10 then goto L1636da;
  #L163628.  v7:= v4.`c.d.a.j.f.g` @type ^`int`[] @kind object;
  #L16362c.  v10:= v7[v8];
  #L163630.  if v10 == 0 then goto L163646;
  #L163634.  v10:= v7[v8];
  #L163638.  v11:= 3I;
  #L16363a.  if v10 == v11 then goto L163646;
  #L16363e.  v7:= v7[v8];
  #L163642.  if v7 != v1 then goto L1636da;
  #L163646.  v7:= v13.`c.d.a.j.d.j` @type ^`int`;
  #L16364a.  v7:= v7 + v6 @kind int;
  #L16364c.  v13.`c.d.a.j.d.j` @type ^`int` := v7;
  #L163650.  v7:= v4.`c.d.a.j.f.g0` @type ^`float`[] @kind object;
  #L163654.  v8:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L163658.  v10:= v7[v8];
  #L16365c.  v11:= 0I;
  #L16365e.  v12:= fcmpl(v10, v11);
  #L163662.  if v12 <= 0 then goto L163674;
  #L163666.  v12:= v13.`c.d.a.j.d.k` @type ^`float`;
  #L16366a.  v7:= v7[v8];
  #L16366e.  v12:= v12 + v7 @kind float;
  #L163670.  v13.`c.d.a.j.d.k` @type ^`float` := v12;
  #L163674.  v7:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L163678.  call temp:= `a`(v4, v7) @signature `Lc/d/a/j/d;.a:(Lc/d/a/j/f;I)Z` @kind static;
  #L16367e.  v7:= temp;
  #L163680.  if v7 == 0 then goto L1636b6;
  #L163684.  v7:= fcmpg(v10, v11);
  #L163688.  if v7 >= 0 then goto L163692;
  #L16368c.  v13.`c.d.a.j.d.n` @type ^`boolean` := v6 @kind boolean;
  #L163690.  goto L163696;
  #L163692.  v13.`c.d.a.j.d.o` @type ^`boolean` := v6 @kind boolean;
  #L163696.  v7:= v13.`c.d.a.j.d.h` @type ^`java.util.ArrayList` @kind object;
  #L16369a.  if v7 != 0 then goto L1636ac;
  #L16369e.  v7:= new `java.util.ArrayList`;
  #L1636a2.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1636a8.  v13.`c.d.a.j.d.h` @type ^`java.util.ArrayList` := v7 @kind object;
  #L1636ac.  v7:= v13.`c.d.a.j.d.h` @type ^`java.util.ArrayList` @kind object;
  #L1636b0.  call temp:= `add`(v7, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1636b6.  v7:= v13.`c.d.a.j.d.f` @type ^`c.d.a.j.f` @kind object;
  #L1636ba.  if v7 != 0 then goto L1636c2;
  #L1636be.  v13.`c.d.a.j.d.f` @type ^`c.d.a.j.f` := v4 @kind object;
  #L1636c2.  v7:= v13.`c.d.a.j.d.g` @type ^`c.d.a.j.f` @kind object;
  #L1636c6.  if v7 == 0 then goto L1636d6;
  #L1636ca.  v7:= v7.`c.d.a.j.f.h0` @type ^`c.d.a.j.f`[] @kind object;
  #L1636ce.  v8:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L1636d2.  v7[v8]:= v4 @kind object;
  #L1636d6.  v13.`c.d.a.j.d.g` @type ^`c.d.a.j.f` := v4 @kind object;
  #L1636da.  if v5 == v4 then goto L1636ea;
  #L1636de.  v5:= v5.`c.d.a.j.f.i0` @type ^`c.d.a.j.f`[] @kind object;
  #L1636e2.  v7:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L1636e6.  v5[v7]:= v4 @kind object;
  #L1636ea.  v5:= v4.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L1636ee.  v7:= v0 + 1;
  #L1636f2.  v5:= v5[v7] @kind object;
  #L1636f6.  v5:= v5.`c.d.a.j.e.d` @type ^`c.d.a.j.e` @kind object;
  #L1636fa.  if v5 == 0 then goto L163726;
  #L1636fe.  v5:= v5.`c.d.a.j.e.b` @type ^`c.d.a.j.f` @kind object;
  #L163702.  v7:= v5.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L163706.  v8:= v7[v0] @kind object;
  #L16370a.  v8:= v8.`c.d.a.j.e.d` @type ^`c.d.a.j.e` @kind object;
  #L16370e.  if v8 == 0 then goto L163726;
  #L163712.  v7:= v7[v0] @kind object;
  #L163716.  v7:= v7.`c.d.a.j.e.d` @type ^`c.d.a.j.e` @kind object;
  #L16371a.  v7:= v7.`c.d.a.j.e.b` @type ^`c.d.a.j.f` @kind object;
  #L16371e.  if v7 == v4 then goto L163724;
  #L163722.  goto L163726;
  #L163724.  v9:= v5 @kind object;
  #L163726.  if v9 == 0 then goto L16372c;
  #L16372a.  goto L163730;
  #L16372c.  v9:= v4 @kind object;
  #L16372e.  v2:= 1I;
  #L163730.  v5:= v4 @kind object;
  #L163732.  v4:= v9 @kind object;
  #L163734.  goto L1635ce;
  #L163738.  v13.`c.d.a.j.d.c` @type ^`c.d.a.j.f` := v4 @kind object;
  #L16373c.  v0:= v13.`c.d.a.j.d.l` @type ^`int`;
  #L163740.  if v0 != 0 then goto L163752;
  #L163744.  v0:= v13.`c.d.a.j.d.m` @type ^`boolean` @kind boolean;
  #L163748.  if v0 == 0 then goto L163752;
  #L16374c.  v0:= v13.`c.d.a.j.d.c` @type ^`c.d.a.j.f` @kind object;
  #L163750.  goto L163756;
  #L163752.  v0:= v13.`c.d.a.j.d.a` @type ^`c.d.a.j.f` @kind object;
  #L163756.  v13.`c.d.a.j.d.e` @type ^`c.d.a.j.f` := v0 @kind object;
  #L16375a.  v0:= v13.`c.d.a.j.d.o` @type ^`boolean` @kind boolean;
  #L16375e.  if v0 == 0 then goto L16376c;
  #L163762.  v0:= v13.`c.d.a.j.d.n` @type ^`boolean` @kind boolean;
  #L163766.  if v0 == 0 then goto L16376c;
  #L16376a.  v3:= 1I;
  #L16376c.  v13.`c.d.a.j.d.p` @type ^`boolean` := v3 @kind boolean;
  #L163770.  return @kind void;
}
procedure `void` `a`(`c.d.a.j.d` v1 @kind this) @signature `Lc/d/a/j/d;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163590.  v0:= v1.`c.d.a.j.d.q` @type ^`boolean` @kind boolean;
  #L163594.  if v0 != 0 then goto L16359e;
  #L163598.  call `b`(v1) @signature `Lc/d/a/j/d;.b:()V` @kind direct;
  #L16359e.  v0:= 1I;
  #L1635a0.  v1.`c.d.a.j.d.q` @type ^`boolean` := v0 @kind boolean;
  #L1635a4.  return @kind void;
}
