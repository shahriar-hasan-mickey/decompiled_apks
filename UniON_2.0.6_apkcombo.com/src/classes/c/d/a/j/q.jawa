record `c.d.a.j.q` @kind class @AccessFlag PUBLIC extends `c.d.a.j.f` @kind class {
  `java.util.ArrayList` `c.d.a.j.q.k0` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`c.d.a.j.q` v1 @kind this) @signature `Lc/d/a/j/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16a5d8.  call `<init>`(v1) @signature `Lc/d/a/j/f;.<init>:()V` @kind direct;
  #L16a5de.  v0:= new `java.util.ArrayList`;
  #L16a5e2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a5e8.  v1.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` := v0 @kind object;
  #L16a5ec.  return @kind void;
}
procedure `void` `D`(`c.d.a.j.q` v1 @kind this) @signature `Lc/d/a/j/q;.D:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a6d8.  v0:= v1.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a6dc.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L16a6e2.  call `D`(v1) @signature `Lc/d/a/j/f;.D:()V` @kind super;
  #L16a6e8.  return @kind void;
}
procedure `void` `H`(`c.d.a.j.q` v5 @kind this) @signature `Lc/d/a/j/q;.H:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16a79c.  call `H`(v5) @signature `Lc/d/a/j/f;.H:()V` @kind super;
  #L16a7a2.  v0:= v5.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a7a6.  if v0 != 0 then goto L16a7ac;
  #L16a7aa.  return @kind void;
  #L16a7ac.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L16a7b2.  v0:= temp;
  #L16a7b4.  v1:= 0I;
  #L16a7b6.  if v1 >= v0 then goto L16a7f4;
  #L16a7ba.  v2:= v5.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a7be.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L16a7c4.  v2:= temp @kind object;
  #L16a7c6.  v2:= (`c.d.a.j.f`) v2 @kind object;
  #L16a7ca.  call temp:= `g`(v5) @signature `Lc/d/a/j/f;.g:()I` @kind virtual;
  #L16a7d0.  v3:= temp;
  #L16a7d2.  call temp:= `h`(v5) @signature `Lc/d/a/j/f;.h:()I` @kind virtual;
  #L16a7d8.  v4:= temp;
  #L16a7da.  call `b`(v2, v3, v4) @signature `Lc/d/a/j/f;.b:(II)V` @kind virtual;
  #L16a7e0.  v3:= instanceof @variable v2 @type ^`c.d.a.j.g` @kind boolean;
  #L16a7e4.  if v3 != 0 then goto L16a7ee;
  #L16a7e8.  call `H`(v2) @signature `Lc/d/a/j/f;.H:()V` @kind virtual;
  #L16a7ee.  v1:= v1 + 1;
  #L16a7f2.  goto L16a7b6;
  #L16a7f4.  return @kind void;
}
procedure `c.d.a.j.g` `J`(`c.d.a.j.q` v4 @kind this) @signature `Lc/d/a/j/q;.J:()Lc/d/a/j/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16a58c.  call temp:= `k`(v4) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16a592.  v0:= temp @kind object;
  #L16a594.  v1:= instanceof @variable v4 @type ^`c.d.a.j.g` @kind boolean;
  #L16a598.  if v1 == 0 then goto L16a5a4;
  #L16a59c.  v1:= v4 @kind object;
  #L16a59e.  v1:= (`c.d.a.j.g`) v1 @kind object;
  #L16a5a2.  goto L16a5a6;
  #L16a5a4.  v1:= 0I;
  #L16a5a6.  if v0 == 0 then goto L16a5c4;
  #L16a5aa.  call temp:= `k`(v0) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16a5b0.  v2:= temp @kind object;
  #L16a5b2.  v3:= instanceof @variable v0 @type ^`c.d.a.j.g` @kind boolean;
  #L16a5b6.  if v3 == 0 then goto L16a5c0;
  #L16a5ba.  v1:= v0 @kind object;
  #L16a5bc.  v1:= (`c.d.a.j.g`) v1 @kind object;
  #L16a5c0.  v0:= v2 @kind object;
  #L16a5c2.  goto L16a5a6;
  #L16a5c4.  return v1 @kind object;
}
procedure `void` `K`(`c.d.a.j.q` v4 @kind this) @signature `Lc/d/a/j/q;.K:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16a640.  call `H`(v4) @signature `Lc/d/a/j/q;.H:()V` @kind virtual;
  #L16a646.  v0:= v4.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a64a.  if v0 != 0 then goto L16a650;
  #L16a64e.  return @kind void;
  #L16a650.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L16a656.  v0:= temp;
  #L16a658.  v1:= 0I;
  #L16a65a.  if v1 >= v0 then goto L16a686;
  #L16a65e.  v2:= v4.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a662.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L16a668.  v2:= temp @kind object;
  #L16a66a.  v2:= (`c.d.a.j.f`) v2 @kind object;
  #L16a66e.  v3:= instanceof @variable v2 @type ^`c.d.a.j.q` @kind boolean;
  #L16a672.  if v3 == 0 then goto L16a680;
  #L16a676.  v2:= (`c.d.a.j.q`) v2 @kind object;
  #L16a67a.  call `K`(v2) @signature `Lc/d/a/j/q;.K:()V` @kind virtual;
  #L16a680.  v1:= v1 + 1;
  #L16a684.  goto L16a65a;
  #L16a686.  return @kind void;
}
procedure `void` `L`(`c.d.a.j.q` v1 @kind this) @signature `Lc/d/a/j/q;.L:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a6bc.  v0:= v1.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a6c0.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L16a6c6.  return @kind void;
}
procedure `void` `a`(`c.d.a.j.q` v3 @kind this, `c.d.a.c` v4 @kind object) @signature `Lc/d/a/j/q;.a:(Lc/d/a/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16a6fc.  call `a`(v3, v4) @signature `Lc/d/a/j/f;.a:(Lc/d/a/c;)V` @kind super;
  #L16a702.  v0:= v3.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a706.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L16a70c.  v0:= temp;
  #L16a70e.  v1:= 0I;
  #L16a710.  if v1 >= v0 then goto L16a730;
  #L16a714.  v2:= v3.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a718.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L16a71e.  v2:= temp @kind object;
  #L16a720.  v2:= (`c.d.a.j.f`) v2 @kind object;
  #L16a724.  call `a`(v2, v4) @signature `Lc/d/a/j/f;.a:(Lc/d/a/c;)V` @kind virtual;
  #L16a72a.  v1:= v1 + 1;
  #L16a72e.  goto L16a710;
  #L16a730.  return @kind void;
}
procedure `void` `b`(`c.d.a.j.q` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lc/d/a/j/q;.b:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16a744.  call `b`(v3, v4, v5) @signature `Lc/d/a/j/f;.b:(II)V` @kind super;
  #L16a74a.  v4:= v3.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a74e.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L16a754.  v4:= temp;
  #L16a756.  v5:= 0I;
  #L16a758.  if v5 >= v4 then goto L16a788;
  #L16a75c.  v0:= v3.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a760.  call temp:= `get`(v0, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L16a766.  v0:= temp @kind object;
  #L16a768.  v0:= (`c.d.a.j.f`) v0 @kind object;
  #L16a76c.  call temp:= `o`(v3) @signature `Lc/d/a/j/f;.o:()I` @kind virtual;
  #L16a772.  v1:= temp;
  #L16a774.  call temp:= `p`(v3) @signature `Lc/d/a/j/f;.p:()I` @kind virtual;
  #L16a77a.  v2:= temp;
  #L16a77c.  call `b`(v0, v1, v2) @signature `Lc/d/a/j/f;.b:(II)V` @kind virtual;
  #L16a782.  v5:= v5 + 1;
  #L16a786.  goto L16a758;
  #L16a788.  return @kind void;
}
procedure `void` `b`(`c.d.a.j.q` v1 @kind this, `c.d.a.j.f` v2 @kind object) @signature `Lc/d/a/j/q;.b:(Lc/d/a/j/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a600.  v0:= v1.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a604.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L16a60a.  call temp:= `k`(v2) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16a610.  v0:= temp @kind object;
  #L16a612.  if v0 == 0 then goto L16a628;
  #L16a616.  call temp:= `k`(v2) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16a61c.  v0:= temp @kind object;
  #L16a61e.  v0:= (`c.d.a.j.q`) v0 @kind object;
  #L16a622.  call `c`(v0, v2) @signature `Lc/d/a/j/q;.c:(Lc/d/a/j/f;)V` @kind virtual;
  #L16a628.  call `a`(v2, v1) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/f;)V` @kind virtual;
  #L16a62e.  return @kind void;
}
procedure `void` `c`(`c.d.a.j.q` v1 @kind this, `c.d.a.j.f` v2 @kind object) @signature `Lc/d/a/j/q;.c:(Lc/d/a/j/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a698.  v0:= v1.`c.d.a.j.q.k0` @type ^`java.util.ArrayList` @kind object;
  #L16a69c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L16a6a2.  v0:= 0I;
  #L16a6a4.  call `a`(v2, v0) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/f;)V` @kind virtual;
  #L16a6aa.  return @kind void;
}
