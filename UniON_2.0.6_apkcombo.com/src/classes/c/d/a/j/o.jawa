record `c.d.a.j.o` @kind class @AccessFlag PUBLIC {
  `java.util.HashSet` `c.d.a.j.o.a` @AccessFlag ;
  `int` `c.d.a.j.o.b` @AccessFlag ;
}
procedure `void` `<init>`(`c.d.a.j.o` v2 @kind this) @signature `Lc/d/a/j/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16a208.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16a20e.  v0:= new `java.util.HashSet`;
  #L16a212.  v1:= 2I;
  #L16a214.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L16a21a.  v2.`c.d.a.j.o.a` @type ^`java.util.HashSet` := v0 @kind object;
  #L16a21e.  v0:= 0I;
  #L16a220.  v2.`c.d.a.j.o.b` @type ^`int` := v0;
  #L16a224.  return @kind void;
}
procedure `void` `a`(`c.d.a.j.o` v2 @kind this) @signature `Lc/d/a/j/o;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16a254.  v0:= 1I;
  #L16a256.  v2.`c.d.a.j.o.b` @type ^`int` := v0;
  #L16a25a.  v0:= v2.`c.d.a.j.o.a` @type ^`java.util.HashSet` @kind object;
  #L16a25e.  call temp:= `iterator`(v0) @signature `Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L16a264.  v0:= temp @kind object;
  #L16a266.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a26c.  v1:= temp;
  #L16a26e.  if v1 == 0 then goto L16a286;
  #L16a272.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a278.  v1:= temp @kind object;
  #L16a27a.  v1:= (`c.d.a.j.o`) v1 @kind object;
  #L16a27e.  call `e`(v1) @signature `Lc/d/a/j/o;.e:()V` @kind virtual;
  #L16a284.  goto L16a266;
  #L16a286.  return @kind void;
}
procedure `void` `a`(`c.d.a.j.o` v1 @kind this, `c.d.a.j.o` v2 @kind object) @signature `Lc/d/a/j/o;.a:(Lc/d/a/j/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a238.  v0:= v1.`c.d.a.j.o.a` @type ^`java.util.HashSet` @kind object;
  #L16a23c.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L16a242.  return @kind void;
}
procedure `void` `b`(`c.d.a.j.o` v2 @kind this) @signature `Lc/d/a/j/o;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16a298.  v0:= 0I;
  #L16a29a.  v2.`c.d.a.j.o.b` @type ^`int` := v0;
  #L16a29e.  v0:= v2.`c.d.a.j.o.a` @type ^`java.util.HashSet` @kind object;
  #L16a2a2.  call temp:= `iterator`(v0) @signature `Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L16a2a8.  v0:= temp @kind object;
  #L16a2aa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a2b0.  v1:= temp;
  #L16a2b2.  if v1 == 0 then goto L16a2ca;
  #L16a2b6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a2bc.  v1:= temp @kind object;
  #L16a2be.  v1:= (`c.d.a.j.o`) v1 @kind object;
  #L16a2c2.  call `b`(v1) @signature `Lc/d/a/j/o;.b:()V` @kind virtual;
  #L16a2c8.  goto L16a2aa;
  #L16a2ca.  return @kind void;
}
procedure `boolean` `c`(`c.d.a.j.o` v2 @kind this) @signature `Lc/d/a/j/o;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16a1e8.  v0:= v2.`c.d.a.j.o.b` @type ^`int`;
  #L16a1ec.  v1:= 1I;
  #L16a1ee.  if v0 != v1 then goto L16a1f4;
  #L16a1f2.  goto L16a1f6;
  #L16a1f4.  v1:= 0I;
  #L16a1f6.  return v1;
}
procedure `void` `d`(`c.d.a.j.o` v1 @kind this) @signature `Lc/d/a/j/o;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a2dc.  v0:= 0I;
  #L16a2de.  v1.`c.d.a.j.o.b` @type ^`int` := v0;
  #L16a2e2.  v0:= v1.`c.d.a.j.o.a` @type ^`java.util.HashSet` @kind object;
  #L16a2e6.  call `clear`(v0) @signature `Ljava/util/HashSet;.clear:()V` @kind virtual;
  #L16a2ec.  return @kind void;
}
procedure `void` `e`(`c.d.a.j.o` v0 @kind this) @signature `Lc/d/a/j/o;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L16a300.  return @kind void;
}
