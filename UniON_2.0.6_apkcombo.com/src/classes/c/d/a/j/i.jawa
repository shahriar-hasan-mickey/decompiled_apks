record `c.d.a.j.i` @kind class @AccessFlag PUBLIC extends `c.d.a.j.f` @kind class {
  `float` `c.d.a.j.i.k0` @AccessFlag PROTECTED;
  `int` `c.d.a.j.i.l0` @AccessFlag PROTECTED;
  `int` `c.d.a.j.i.m0` @AccessFlag PROTECTED;
  `c.d.a.j.e` `c.d.a.j.i.n0` @AccessFlag PRIVATE;
  `int` `c.d.a.j.i.o0` @AccessFlag PRIVATE;
  `boolean` `c.d.a.j.i.p0` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.d.a.j.i` v4 @kind this) @signature `Lc/d/a/j/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L168398.  call `<init>`(v4) @signature `Lc/d/a/j/f;.<init>:()V` @kind direct;
  #L16839e.  v0:= -1.0F;
  #L1683a2.  v4.`c.d.a.j.i.k0` @type ^`float` := v0;
  #L1683a6.  v0:= -1I;
  #L1683a8.  v4.`c.d.a.j.i.l0` @type ^`int` := v0;
  #L1683ac.  v4.`c.d.a.j.i.m0` @type ^`int` := v0;
  #L1683b0.  v0:= v4.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1683b4.  v4.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` := v0 @kind object;
  #L1683b8.  v0:= 0I;
  #L1683ba.  v4.`c.d.a.j.i.o0` @type ^`int` := v0;
  #L1683be.  v4.`c.d.a.j.i.p0` @type ^`boolean` := v0 @kind boolean;
  #L1683c2.  v1:= new `c.d.a.j.l`;
  #L1683c6.  call `<init>`(v1) @signature `Lc/d/a/j/l;.<init>:()V` @kind direct;
  #L1683cc.  v1:= v4.`c.d.a.j.f.B` @type ^`java.util.ArrayList` @kind object;
  #L1683d0.  call `clear`(v1) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1683d6.  v1:= v4.`c.d.a.j.f.B` @type ^`java.util.ArrayList` @kind object;
  #L1683da.  v2:= v4.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1683de.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1683e4.  v1:= v4.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L1683e8.  v1:= length @variable v1;
  #L1683ea.  if v0 >= v1 then goto L168400;
  #L1683ee.  v2:= v4.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L1683f2.  v3:= v4.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1683f6.  v2[v0]:= v3 @kind object;
  #L1683fa.  v0:= v0 + 1;
  #L1683fe.  goto L1683ea;
  #L168400.  return @kind void;
}
procedure `int` `J`(`c.d.a.j.i` v1 @kind this) @signature `Lc/d/a/j/i;.J:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168368.  v0:= v1.`c.d.a.j.i.o0` @type ^`int`;
  #L16836c.  return v0;
}
procedure `c.d.a.j.e` `a`(`c.d.a.j.i` v2 @kind this, `c.d.a.j.e$d` v3 @kind object) @signature `Lc/d/a/j/i;.a:(Lc/d/a/j/e$d;)Lc/d/a/j/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1682c8.  v0:= `@@c.d.a.j.i$a.a` @type ^`int`[] @kind object;
  #L1682cc.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1682d2.  v1:= temp;
  #L1682d4.  v0:= v0[v1];
  #L1682d8.  goto L168318;
  #L1682de.  goto L168302;
  #L1682e0.  v3:= 0I;
  #L1682e2.  return v3 @kind object;
  #L1682e4.  v0:= v2.`c.d.a.j.i.o0` @type ^`int`;
  #L1682e8.  if v0 != 0 then goto L168302;
  #L1682ec.  v3:= v2.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1682f0.  return v3 @kind object;
  #L1682f2.  v0:= v2.`c.d.a.j.i.o0` @type ^`int`;
  #L1682f6.  v1:= 1I;
  #L1682f8.  if v0 != v1 then goto L168302;
  #L1682fc.  v3:= v2.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L168300.  return v3 @kind object;
  #L168302.  v0:= new `java.lang.AssertionError`;
  #L168306.  call temp:= `name`(v3) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L16830c.  v3:= temp @kind object;
  #L16830e.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L168314.  throw v0;
  #L168316.  
  #L168318.  switch v0
                  | 1 => goto L1682f2
                  | 2 => goto L1682f2
                  | 3 => goto L1682e4
                  | 4 => goto L1682e4
                  | 5 => goto L1682e0
                  | 6 => goto L1682e0
                  | 7 => goto L1682e0
                  | 8 => goto L1682e0
                  | 9 => goto L1682e0
                  | else => goto L1682de;
}
procedure `void` `a`(`c.d.a.j.i` v6 @kind this, `int` v7 ) @signature `Lc/d/a/j/i;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L168578.  call temp:= `k`(v6) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16857e.  v7:= temp @kind object;
  #L168580.  if v7 != 0 then goto L168586;
  #L168584.  return @kind void;
  #L168586.  call temp:= `J`(v6) @signature `Lc/d/a/j/i;.J:()I` @kind virtual;
  #L16858c.  v0:= temp;
  #L16858e.  v1:= -1.0F;
  #L168592.  v2:= -1I;
  #L168594.  v3:= 0I;
  #L168596.  v4:= 1I;
  #L168598.  if v0 != v4 then goto L1686b4;
  #L16859c.  v0:= v6.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1685a0.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685a6.  v0:= temp @kind object;
  #L1685a8.  v5:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1685ac.  call temp:= `d`(v5) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685b2.  v5:= temp @kind object;
  #L1685b4.  call `a`(v0, v4, v5, v3) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1685ba.  v0:= v6.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L1685be.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685c4.  v0:= temp @kind object;
  #L1685c6.  v5:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1685ca.  call temp:= `d`(v5) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685d0.  v5:= temp @kind object;
  #L1685d2.  call `a`(v0, v4, v5, v3) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1685d8.  v0:= v6.`c.d.a.j.i.l0` @type ^`int`;
  #L1685dc.  if v0 == v2 then goto L168616;
  #L1685e0.  v0:= v6.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1685e4.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685ea.  v0:= temp @kind object;
  #L1685ec.  v1:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1685f0.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1685f6.  v1:= temp @kind object;
  #L1685f8.  v2:= v6.`c.d.a.j.i.l0` @type ^`int`;
  #L1685fc.  call `a`(v0, v4, v1, v2) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L168602.  v0:= v6.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L168606.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L16860c.  v0:= temp @kind object;
  #L16860e.  v7:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L168612.  goto L16872a;
  #L168616.  v0:= v6.`c.d.a.j.i.m0` @type ^`int`;
  #L16861a.  if v0 == v2 then goto L168656;
  #L16861e.  v0:= v6.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L168622.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168628.  v0:= temp @kind object;
  #L16862a.  v1:= v7.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L16862e.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168634.  v1:= temp @kind object;
  #L168636.  v2:= v6.`c.d.a.j.i.m0` @type ^`int`;
  #L16863a.  v2:= -v2 @kind int;
  #L16863c.  call `a`(v0, v4, v1, v2) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L168642.  v0:= v6.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L168646.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L16864c.  v0:= temp @kind object;
  #L16864e.  v7:= v7.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L168652.  goto L16877a;
  #L168656.  v0:= v6.`c.d.a.j.i.k0` @type ^`float`;
  #L16865a.  v0:= fcmpl(v0, v1);
  #L16865e.  if v0 == 0 then goto L1687f2;
  #L168662.  call temp:= `j`(v7) @signature `Lc/d/a/j/f;.j:()Lc/d/a/j/f$b;` @kind virtual;
  #L168668.  v0:= temp @kind object;
  #L16866a.  v1:= `@@c.d.a.j.f$b.b` @type ^`c.d.a.j.f$b` @kind object;
  #L16866e.  if v0 != v1 then goto L1687f2;
  #L168672.  v0:= v7.`c.d.a.j.f.E` @type ^`int`;
  #L168676.  v0:= (`float`) v0 @kind i2f;
  #L168678.  v1:= v6.`c.d.a.j.i.k0` @type ^`float`;
  #L16867c.  v0:= v0 * v1 @kind float;
  #L168680.  v0:= (`int`) v0 @kind f2i;
  #L168682.  v1:= v6.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L168686.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L16868c.  v1:= temp @kind object;
  #L16868e.  v2:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L168692.  call temp:= `d`(v2) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168698.  v2:= temp @kind object;
  #L16869a.  call `a`(v1, v4, v2, v0) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1686a0.  v1:= v6.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L1686a4.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1686aa.  v1:= temp @kind object;
  #L1686ac.  v7:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1686b0.  goto L1687e4;
  #L1686b4.  v0:= v6.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1686b8.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1686be.  v0:= temp @kind object;
  #L1686c0.  v5:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1686c4.  call temp:= `d`(v5) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1686ca.  v5:= temp @kind object;
  #L1686cc.  call `a`(v0, v4, v5, v3) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1686d2.  v0:= v6.`c.d.a.j.f.u` @type ^`c.d.a.j.e` @kind object;
  #L1686d6.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1686dc.  v0:= temp @kind object;
  #L1686de.  v5:= v7.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1686e2.  call temp:= `d`(v5) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1686e8.  v5:= temp @kind object;
  #L1686ea.  call `a`(v0, v4, v5, v3) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1686f0.  v0:= v6.`c.d.a.j.i.l0` @type ^`int`;
  #L1686f4.  if v0 == v2 then goto L16873e;
  #L1686f8.  v0:= v6.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1686fc.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168702.  v0:= temp @kind object;
  #L168704.  v1:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L168708.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L16870e.  v1:= temp @kind object;
  #L168710.  v2:= v6.`c.d.a.j.i.l0` @type ^`int`;
  #L168714.  call `a`(v0, v4, v1, v2) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L16871a.  v0:= v6.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L16871e.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168724.  v0:= temp @kind object;
  #L168726.  v7:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L16872a.  call temp:= `d`(v7) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168730.  v7:= temp @kind object;
  #L168732.  v1:= v6.`c.d.a.j.i.l0` @type ^`int`;
  #L168736.  call `a`(v0, v4, v7, v1) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L16873c.  goto L1687f2;
  #L16873e.  v0:= v6.`c.d.a.j.i.m0` @type ^`int`;
  #L168742.  if v0 == v2 then goto L16878a;
  #L168746.  v0:= v6.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L16874a.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168750.  v0:= temp @kind object;
  #L168752.  v1:= v7.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L168756.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L16875c.  v1:= temp @kind object;
  #L16875e.  v2:= v6.`c.d.a.j.i.m0` @type ^`int`;
  #L168762.  v2:= -v2 @kind int;
  #L168764.  call `a`(v0, v4, v1, v2) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L16876a.  v0:= v6.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L16876e.  call temp:= `d`(v0) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168774.  v0:= temp @kind object;
  #L168776.  v7:= v7.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L16877a.  call temp:= `d`(v7) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L168780.  v7:= temp @kind object;
  #L168782.  v1:= v6.`c.d.a.j.i.m0` @type ^`int`;
  #L168786.  v1:= -v1 @kind int;
  #L168788.  goto L168736;
  #L16878a.  v0:= v6.`c.d.a.j.i.k0` @type ^`float`;
  #L16878e.  v0:= fcmpl(v0, v1);
  #L168792.  if v0 == 0 then goto L1687f2;
  #L168796.  call temp:= `q`(v7) @signature `Lc/d/a/j/f;.q:()Lc/d/a/j/f$b;` @kind virtual;
  #L16879c.  v0:= temp @kind object;
  #L16879e.  v1:= `@@c.d.a.j.f$b.b` @type ^`c.d.a.j.f$b` @kind object;
  #L1687a2.  if v0 != v1 then goto L1687f2;
  #L1687a6.  v0:= v7.`c.d.a.j.f.F` @type ^`int`;
  #L1687aa.  v0:= (`float`) v0 @kind i2f;
  #L1687ac.  v1:= v6.`c.d.a.j.i.k0` @type ^`float`;
  #L1687b0.  v0:= v0 * v1 @kind float;
  #L1687b4.  v0:= (`int`) v0 @kind f2i;
  #L1687b6.  v1:= v6.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1687ba.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1687c0.  v1:= temp @kind object;
  #L1687c2.  v2:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1687c6.  call temp:= `d`(v2) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1687cc.  v2:= temp @kind object;
  #L1687ce.  call `a`(v1, v4, v2, v0) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1687d4.  v1:= v6.`c.d.a.j.f.v` @type ^`c.d.a.j.e` @kind object;
  #L1687d8.  call temp:= `d`(v1) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1687de.  v1:= temp @kind object;
  #L1687e0.  v7:= v7.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1687e4.  call temp:= `d`(v7) @signature `Lc/d/a/j/e;.d:()Lc/d/a/j/m;` @kind virtual;
  #L1687ea.  v7:= temp @kind object;
  #L1687ec.  call `a`(v1, v4, v7, v0) @signature `Lc/d/a/j/m;.a:(ILc/d/a/j/m;I)V` @kind virtual;
  #L1687f2.  return @kind void;
}
procedure `void` `a`(`c.d.a.j.i` v9 @kind this, `c.d.a.e` v10 @kind object) @signature `Lc/d/a/j/i;.a:(Lc/d/a/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L168414.  call temp:= `k`(v9) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L16841a.  v0:= temp @kind object;
  #L16841c.  v0:= (`c.d.a.j.g`) v0 @kind object;
  #L168420.  if v0 != 0 then goto L168426;
  #L168424.  return @kind void;
  #L168426.  v1:= `@@c.d.a.j.e$d.c` @type ^`c.d.a.j.e$d` @kind object;
  #L16842a.  call temp:= `a`(v0, v1) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/e$d;)Lc/d/a/j/e;` @kind virtual;
  #L168430.  v1:= temp @kind object;
  #L168432.  v2:= `@@c.d.a.j.e$d.e` @type ^`c.d.a.j.e$d` @kind object;
  #L168436.  call temp:= `a`(v0, v2) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/e$d;)Lc/d/a/j/e;` @kind virtual;
  #L16843c.  v2:= temp @kind object;
  #L16843e.  v3:= v9.`c.d.a.j.f.D` @type ^`c.d.a.j.f` @kind object;
  #L168442.  v4:= 1I;
  #L168444.  v5:= 0I;
  #L168446.  if v3 == 0 then goto L16845e;
  #L16844a.  v3:= v3.`c.d.a.j.f.C` @type ^`c.d.a.j.f$b`[] @kind object;
  #L16844e.  v3:= v3[v5] @kind object;
  #L168452.  v6:= `@@c.d.a.j.f$b.c` @type ^`c.d.a.j.f$b` @kind object;
  #L168456.  if v3 != v6 then goto L16845e;
  #L16845a.  v3:= 1I;
  #L16845c.  goto L168460;
  #L16845e.  v3:= 0I;
  #L168460.  v6:= v9.`c.d.a.j.i.o0` @type ^`int`;
  #L168464.  if v6 != 0 then goto L16849e;
  #L168468.  v1:= `@@c.d.a.j.e$d.d` @type ^`c.d.a.j.e$d` @kind object;
  #L16846c.  call temp:= `a`(v0, v1) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/e$d;)Lc/d/a/j/e;` @kind virtual;
  #L168472.  v1:= temp @kind object;
  #L168474.  v2:= `@@c.d.a.j.e$d.f` @type ^`c.d.a.j.e$d` @kind object;
  #L168478.  call temp:= `a`(v0, v2) @signature `Lc/d/a/j/f;.a:(Lc/d/a/j/e$d;)Lc/d/a/j/e;` @kind virtual;
  #L16847e.  v2:= temp @kind object;
  #L168480.  v0:= v9.`c.d.a.j.f.D` @type ^`c.d.a.j.f` @kind object;
  #L168484.  if v0 == 0 then goto L16849c;
  #L168488.  v0:= v0.`c.d.a.j.f.C` @type ^`c.d.a.j.f$b`[] @kind object;
  #L16848c.  v0:= v0[v4] @kind object;
  #L168490.  v3:= `@@c.d.a.j.f$b.c` @type ^`c.d.a.j.f$b` @kind object;
  #L168494.  if v0 != v3 then goto L16849c;
  #L168498.  v3:= 1I;
  #L16849a.  goto L16849e;
  #L16849c.  v3:= 0I;
  #L16849e.  v0:= v9.`c.d.a.j.i.l0` @type ^`int`;
  #L1684a2.  v4:= 6I;
  #L1684a4.  v6:= -1I;
  #L1684a6.  v7:= 5I;
  #L1684a8.  if v0 == v6 then goto L1684de;
  #L1684ac.  v0:= v9.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1684b0.  call temp:= `a`(v10, v0) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L1684b6.  v0:= temp @kind object;
  #L1684b8.  call temp:= `a`(v10, v1) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L1684be.  v1:= temp @kind object;
  #L1684c0.  v6:= v9.`c.d.a.j.i.l0` @type ^`int`;
  #L1684c4.  call temp:= `a`(v10, v0, v1, v6, v4) @signature `Lc/d/a/e;.a:(Lc/d/a/i;Lc/d/a/i;II)Lc/d/a/b;` @kind virtual;
  #L1684ca.  if v3 == 0 then goto L168564;
  #L1684ce.  call temp:= `a`(v10, v2) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L1684d4.  v1:= temp @kind object;
  #L1684d6.  call `b`(v10, v1, v0, v5, v7) @signature `Lc/d/a/e;.b:(Lc/d/a/i;Lc/d/a/i;II)V` @kind virtual;
  #L1684dc.  goto L168564;
  #L1684de.  v0:= v9.`c.d.a.j.i.m0` @type ^`int`;
  #L1684e2.  if v0 == v6 then goto L168520;
  #L1684e6.  v0:= v9.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1684ea.  call temp:= `a`(v10, v0) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L1684f0.  v0:= temp @kind object;
  #L1684f2.  call temp:= `a`(v10, v2) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L1684f8.  v2:= temp @kind object;
  #L1684fa.  v6:= v9.`c.d.a.j.i.m0` @type ^`int`;
  #L1684fe.  v6:= -v6 @kind int;
  #L168500.  call temp:= `a`(v10, v0, v2, v6, v4) @signature `Lc/d/a/e;.a:(Lc/d/a/i;Lc/d/a/i;II)Lc/d/a/b;` @kind virtual;
  #L168506.  if v3 == 0 then goto L168564;
  #L16850a.  call temp:= `a`(v10, v1) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L168510.  v1:= temp @kind object;
  #L168512.  call `b`(v10, v0, v1, v5, v7) @signature `Lc/d/a/e;.b:(Lc/d/a/i;Lc/d/a/i;II)V` @kind virtual;
  #L168518.  call `b`(v10, v2, v0, v5, v7) @signature `Lc/d/a/e;.b:(Lc/d/a/i;Lc/d/a/i;II)V` @kind virtual;
  #L16851e.  goto L168564;
  #L168520.  v0:= v9.`c.d.a.j.i.k0` @type ^`float`;
  #L168524.  v3:= -1.0F;
  #L168528.  v0:= fcmpl(v0, v3);
  #L16852c.  if v0 == 0 then goto L168564;
  #L168530.  v0:= v9.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L168534.  call temp:= `a`(v10, v0) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L16853a.  v4:= temp @kind object;
  #L16853c.  call temp:= `a`(v10, v1) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L168542.  v5:= temp @kind object;
  #L168544.  call temp:= `a`(v10, v2) @signature `Lc/d/a/e;.a:(Ljava/lang/Object;)Lc/d/a/i;` @kind virtual;
  #L16854a.  v6:= temp @kind object;
  #L16854c.  v7:= v9.`c.d.a.j.i.k0` @type ^`float`;
  #L168550.  v8:= v9.`c.d.a.j.i.p0` @type ^`boolean` @kind boolean;
  #L168554.  v3:= v10 @kind object;
  #L168556.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/d/a/e;.a:(Lc/d/a/e;Lc/d/a/i;Lc/d/a/i;Lc/d/a/i;FZ)Lc/d/a/b;` @kind static;
  #L16855c.  v0:= temp @kind object;
  #L16855e.  call `a`(v10, v0) @signature `Lc/d/a/e;.a:(Lc/d/a/b;)V` @kind virtual;
  #L168564.  return @kind void;
}
procedure `boolean` `a`(`c.d.a.j.i` v1 @kind this) @signature `Lc/d/a/j/i;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168354.  v0:= 1I;
  #L168356.  return v0;
}
procedure `java.util.ArrayList` `b`(`c.d.a.j.i` v1 @kind this) @signature `Lc/d/a/j/i;.b:()Ljava/util/ArrayList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168380.  v0:= v1.`c.d.a.j.f.B` @type ^`java.util.ArrayList` @kind object;
  #L168384.  return v0 @kind object;
}
procedure `void` `c`(`c.d.a.j.i` v3 @kind this, `c.d.a.e` v4 @kind object) @signature `Lc/d/a/j/i;.c:(Lc/d/a/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1688f0.  call temp:= `k`(v3) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L1688f6.  v0:= temp @kind object;
  #L1688f8.  if v0 != 0 then goto L1688fe;
  #L1688fc.  return @kind void;
  #L1688fe.  v0:= v3.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L168902.  call temp:= `b`(v4, v0) @signature `Lc/d/a/e;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L168908.  v4:= temp;
  #L16890a.  v0:= v3.`c.d.a.j.i.o0` @type ^`int`;
  #L16890e.  v1:= 1I;
  #L168910.  v2:= 0I;
  #L168912.  if v0 != v1 then goto L168940;
  #L168916.  call `r`(v3, v4) @signature `Lc/d/a/j/f;.r:(I)V` @kind virtual;
  #L16891c.  call `s`(v3, v2) @signature `Lc/d/a/j/f;.s:(I)V` @kind virtual;
  #L168922.  call temp:= `k`(v3) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L168928.  v4:= temp @kind object;
  #L16892a.  call temp:= `i`(v4) @signature `Lc/d/a/j/f;.i:()I` @kind virtual;
  #L168930.  v4:= temp;
  #L168932.  call `g`(v3, v4) @signature `Lc/d/a/j/f;.g:(I)V` @kind virtual;
  #L168938.  call `o`(v3, v2) @signature `Lc/d/a/j/f;.o:(I)V` @kind virtual;
  #L16893e.  goto L168968;
  #L168940.  call `r`(v3, v2) @signature `Lc/d/a/j/f;.r:(I)V` @kind virtual;
  #L168946.  call `s`(v3, v4) @signature `Lc/d/a/j/f;.s:(I)V` @kind virtual;
  #L16894c.  call temp:= `k`(v3) @signature `Lc/d/a/j/f;.k:()Lc/d/a/j/f;` @kind virtual;
  #L168952.  v4:= temp @kind object;
  #L168954.  call temp:= `s`(v4) @signature `Lc/d/a/j/f;.s:()I` @kind virtual;
  #L16895a.  v4:= temp;
  #L16895c.  call `o`(v3, v4) @signature `Lc/d/a/j/f;.o:(I)V` @kind virtual;
  #L168962.  call `g`(v3, v2) @signature `Lc/d/a/j/f;.g:(I)V` @kind virtual;
  #L168968.  return @kind void;
}
procedure `void` `e`(`c.d.a.j.i` v1 @kind this, `float` v2 ) @signature `Lc/d/a/j/i;.e:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168854.  v0:= -1.0F;
  #L168858.  v0:= fcmpl(v2, v0);
  #L16885c.  if v0 <= 0 then goto L16886e;
  #L168860.  v1.`c.d.a.j.i.k0` @type ^`float` := v2;
  #L168864.  v2:= -1I;
  #L168866.  v1.`c.d.a.j.i.l0` @type ^`int` := v2;
  #L16886a.  v1.`c.d.a.j.i.m0` @type ^`int` := v2;
  #L16886e.  return @kind void;
}
procedure `void` `t`(`c.d.a.j.i` v2 @kind this, `int` v3 ) @signature `Lc/d/a/j/i;.t:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168804.  v0:= -1I;
  #L168806.  if v3 <= v0 then goto L16881a;
  #L16880a.  v1:= -1.0F;
  #L16880e.  v2.`c.d.a.j.i.k0` @type ^`float` := v1;
  #L168812.  v2.`c.d.a.j.i.l0` @type ^`int` := v3;
  #L168816.  v2.`c.d.a.j.i.m0` @type ^`int` := v0;
  #L16881a.  return @kind void;
}
procedure `void` `u`(`c.d.a.j.i` v2 @kind this, `int` v3 ) @signature `Lc/d/a/j/i;.u:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16882c.  v0:= -1I;
  #L16882e.  if v3 <= v0 then goto L168842;
  #L168832.  v1:= -1.0F;
  #L168836.  v2.`c.d.a.j.i.k0` @type ^`float` := v1;
  #L16883a.  v2.`c.d.a.j.i.l0` @type ^`int` := v0;
  #L16883e.  v2.`c.d.a.j.i.m0` @type ^`int` := v3;
  #L168842.  return @kind void;
}
procedure `void` `v`(`c.d.a.j.i` v3 @kind this, `int` v4 ) @signature `Lc/d/a/j/i;.v:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L168880.  v0:= v3.`c.d.a.j.i.o0` @type ^`int`;
  #L168884.  if v0 != v4 then goto L16888a;
  #L168888.  return @kind void;
  #L16888a.  v3.`c.d.a.j.i.o0` @type ^`int` := v4;
  #L16888e.  v4:= v3.`c.d.a.j.f.B` @type ^`java.util.ArrayList` @kind object;
  #L168892.  call `clear`(v4) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L168898.  v4:= v3.`c.d.a.j.i.o0` @type ^`int`;
  #L16889c.  v0:= 1I;
  #L16889e.  if v4 != v0 then goto L1688a8;
  #L1688a2.  v4:= v3.`c.d.a.j.f.s` @type ^`c.d.a.j.e` @kind object;
  #L1688a6.  goto L1688ac;
  #L1688a8.  v4:= v3.`c.d.a.j.f.t` @type ^`c.d.a.j.e` @kind object;
  #L1688ac.  v3.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` := v4 @kind object;
  #L1688b0.  v4:= v3.`c.d.a.j.f.B` @type ^`java.util.ArrayList` @kind object;
  #L1688b4.  v0:= v3.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1688b8.  call temp:= `add`(v4, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1688be.  v4:= v3.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L1688c2.  v4:= length @variable v4;
  #L1688c4.  v0:= 0I;
  #L1688c6.  if v0 >= v4 then goto L1688dc;
  #L1688ca.  v1:= v3.`c.d.a.j.f.A` @type ^`c.d.a.j.e`[] @kind object;
  #L1688ce.  v2:= v3.`c.d.a.j.i.n0` @type ^`c.d.a.j.e` @kind object;
  #L1688d2.  v1[v0]:= v2 @kind object;
  #L1688d6.  v0:= v0 + 1;
  #L1688da.  goto L1688c6;
  #L1688dc.  return @kind void;
}
