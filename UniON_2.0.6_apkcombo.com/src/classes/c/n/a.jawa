record `c.n.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `long` `@@c.n.a.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@c.n.a.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `a`() @signature `Lc/n/a;.a:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b2768.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b276c.  v1:= 18I;
  #L1b2770.  if v0 < v1 then goto L1b277a;
  #L1b2774.  call `a`() @signature `Lc/n/b;.a:()V` @kind static;
  #L1b277a.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v2 @kind object) @signature `Lc/n/a;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1b2744.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b2748.  v1:= 18I;
  #L1b274c.  if v0 < v1 then goto L1b2756;
  #L1b2750.  call `a`(v2) @signature `Lc/n/b;.a:(Ljava/lang/String;)V` @kind static;
  #L1b2756.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v2 @kind object, `java.lang.Exception` v3 @kind object) @signature `Lc/n/a;.a:(Ljava/lang/String;Ljava/lang/Exception;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1b278c.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.InvocationTargetException` @kind boolean;
  #L1b2790.  if v0 == 0 then goto L1b27b6;
  #L1b2794.  call temp:= `getCause`(v3) @signature `Ljava/lang/Exception;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1b279a.  v2:= temp @kind object;
  #L1b279c.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L1b27a0.  if v3 == 0 then goto L1b27aa;
  #L1b27a4.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L1b27a8.  throw v2;
  #L1b27aa.  v3:= new `java.lang.RuntimeException`;
  #L1b27ae.  call `<init>`(v3, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1b27b4.  throw v3;
  #L1b27b6.  v0:= new `java.lang.StringBuilder`;
  #L1b27ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b27c0.  v1:= "Unable to call " @kind object;
  #L1b27c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b27ca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b27d0.  v2:= " via reflection" @kind object;
  #L1b27d4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b27da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b27e0.  v2:= temp @kind object;
  #L1b27e2.  v0:= "Trace" @kind object;
  #L1b27e6.  call temp:= `v`(v0, v2, v3) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1b27ec.  return @kind void;
}
procedure `boolean` `b`() @signature `Lc/n/a;.b:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b2658.  v0:= `@@c.n.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1b265c.  if v0 != 0 then goto L1b266a;
  #L1b2660.  call temp:= `isEnabled`() @signature `Landroid/os/Trace;.isEnabled:()Z` @kind static;
  #L1b2666.  v0:= temp;
  #L1b2668.  return v0;
  #L1b266a.  call temp:= `c`() @signature `Lc/n/a;.c:()Z` @kind static;
  #L1b2670.  v0:= temp;
  #L1b2672.  return v0;
  catch `java.lang.NoSuchMethodError` @[L1b2658..L1b2668] goto L1b266a;
  catch `java.lang.NoClassDefFoundError` @[L1b2658..L1b2668] goto L1b266a;
}
procedure `boolean` `c`() @signature `Lc/n/a;.c:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b2694.  v0:= "isTagEnabled" @kind object;
  #L1b2698.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1b269c.  v2:= 0I;
  #L1b269e.  v3:= 18I;
  #L1b26a2.  if v1 < v3 then goto L1b2720;
  #L1b26a6.  v1:= `@@c.n.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1b26aa.  v3:= 1I;
  #L1b26ac.  v4:= 0I;
  #L1b26ae.  if v1 != 0 then goto L1b26ea;
  #L1b26b2.  v1:= constclass @type ^`android.os.Trace` @kind object;
  #L1b26b6.  v5:= "TRACE_TAG_APP" @kind object;
  #L1b26ba.  call temp:= `getField`(v1, v5) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1b26c0.  v1:= temp @kind object;
  #L1b26c2.  call temp:= `getLong`(v1, v4) @signature `Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J` @kind virtual;
  #L1b26c8.  v5:= temp @kind wide;
  #L1b26ca.  `@@c.n.a.a` @type ^`long` := v5 @kind wide;
  #L1b26ce.  v1:= constclass @type ^`android.os.Trace` @kind object;
  #L1b26d2.  v5:= new `java.lang.Class`[v3];
  #L1b26d6.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b26da.  v5[v2]:= v6 @kind object;
  #L1b26de.  call temp:= `getMethod`(v1, v0, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1b26e4.  v1:= temp @kind object;
  #L1b26e6.  `@@c.n.a.b` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1b26ea.  v1:= `@@c.n.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1b26ee.  v3:= new `java.lang.Object`[v3];
  #L1b26f2.  v5:= `@@c.n.a.a` @type ^`long` @kind wide;
  #L1b26f6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1b26fc.  v5:= temp @kind object;
  #L1b26fe.  v3[v2]:= v5 @kind object;
  #L1b2702.  call temp:= `invoke`(v1, v4, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1b2708.  v1:= temp @kind object;
  #L1b270a.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L1b270e.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1b2714.  v0:= temp;
  #L1b2716.  return v0;
  #L1b2718.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L1b271a.  call `a`(v0, v1) @signature `Lc/n/a;.a:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind static;
  #L1b2720.  return v2;
  catch `java.lang.Exception` @[L1b26a6..L1b2716] goto L1b2718;
}
