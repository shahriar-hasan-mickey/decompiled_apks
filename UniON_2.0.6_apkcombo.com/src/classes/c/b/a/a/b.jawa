record `c.b.a.a.b` @kind class @AccessFlag PUBLIC extends `c.b.a.a.c` @kind class {
  `java.lang.Object` `c.b.a.a.b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `c.b.a.a.b.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `c.b.a.a.b.c` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`c.b.a.a.b` v2 @kind this) @signature `Lc/b/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b64c.  call `<init>`(v2) @signature `Lc/b/a/a/c;.<init>:()V` @kind direct;
  #L15b652.  v0:= new `java.lang.Object`;
  #L15b656.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b65c.  v2.`c.b.a.a.b.a` @type ^`java.lang.Object` := v0 @kind object;
  #L15b660.  v0:= new `c.b.a.a.b$a`;
  #L15b664.  call `<init>`(v0, v2) @signature `Lc/b/a/a/b$a;.<init>:(Lc/b/a/a/b;)V` @kind direct;
  #L15b66a.  v1:= 4I;
  #L15b66c.  call temp:= `newFixedThreadPool`(v1, v0) @signature `Ljava/util/concurrent/Executors;.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L15b672.  v0:= temp @kind object;
  #L15b674.  v2.`c.b.a.a.b.b` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L15b678.  return @kind void;
}
procedure `android.os.Handler` `a`(`android.os.Looper` v7 @kind object) @signature `Lc/b/a/a/b;.a:(Landroid/os/Looper;)Landroid/os/Handler;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15b560.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L15b564.  v1:= 28I;
  #L15b568.  if v0 < v1 then goto L15b576;
  #L15b56c.  call temp:= `createAsync`(v7) @signature `Landroid/os/Handler;.createAsync:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L15b572.  v7:= temp @kind object;
  #L15b574.  return v7 @kind object;
  #L15b576.  v1:= 16I;
  #L15b57a.  if v0 < v1 then goto L15b5e2;
  #L15b57e.  v0:= constclass @type ^`android.os.Handler` @kind object;
  #L15b582.  v1:= 3I;
  #L15b584.  v2:= new `java.lang.Class`[v1];
  #L15b588.  v3:= constclass @type ^`android.os.Looper` @kind object;
  #L15b58c.  v4:= 0I;
  #L15b58e.  v2[v4]:= v3 @kind object;
  #L15b592.  v3:= constclass @type ^`android.os.Handler$Callback` @kind object;
  #L15b596.  v5:= 1I;
  #L15b598.  v2[v5]:= v3 @kind object;
  #L15b59c.  v3:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L15b5a0.  v6:= 2I;
  #L15b5a2.  v2[v6]:= v3 @kind object;
  #L15b5a6.  call temp:= `getDeclaredConstructor`(v0, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L15b5ac.  v0:= temp @kind object;
  #L15b5ae.  v1:= new `java.lang.Object`[v1];
  #L15b5b2.  v1[v4]:= v7 @kind object;
  #L15b5b6.  v2:= 0I;
  #L15b5b8.  v1[v5]:= v2 @kind object;
  #L15b5bc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L15b5c2.  v2:= temp @kind object;
  #L15b5c4.  v1[v6]:= v2 @kind object;
  #L15b5c8.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15b5ce.  v0:= temp @kind object;
  #L15b5d0.  v0:= (`android.os.Handler`) v0 @kind object;
  #L15b5d4.  return v0 @kind object;
  #L15b5d6.  v0:= new `android.os.Handler`;
  #L15b5da.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L15b5e0.  return v0 @kind object;
  #L15b5e2.  v0:= new `android.os.Handler`;
  #L15b5e6.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L15b5ec.  return v0 @kind object;
  catch `java.lang.IllegalAccessException` @[L15b57e..L15b5d4] goto L15b5e2;
  catch `java.lang.InstantiationException` @[L15b57e..L15b5d4] goto L15b5e2;
  catch `java.lang.NoSuchMethodException` @[L15b57e..L15b5d4] goto L15b5e2;
  catch `java.lang.reflect.InvocationTargetException` @[L15b57e..L15b5d4] goto L15b5d6;
}
procedure `void` `a`(`c.b.a.a.b` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lc/b/a/a/b;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b68c.  v0:= v1.`c.b.a.a.b.b` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L15b690.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L15b696.  return @kind void;
}
procedure `boolean` `a`(`c.b.a.a.b` v2 @kind this) @signature `Lc/b/a/a/b;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b618.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L15b61e.  v0:= temp @kind object;
  #L15b620.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L15b626.  v0:= temp @kind object;
  #L15b628.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15b62e.  v1:= temp @kind object;
  #L15b630.  if v0 != v1 then goto L15b638;
  #L15b634.  v0:= 1I;
  #L15b636.  goto L15b63a;
  #L15b638.  v0:= 0I;
  #L15b63a.  return v0;
}
procedure `void` `b`(`c.b.a.a.b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lc/b/a/a/b;.b:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b6a8.  v0:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L15b6ac.  if v0 != 0 then goto L15b6dc;
  #L15b6b0.  v0:= v2.`c.b.a.a.b.a` @type ^`java.lang.Object` @kind object;
  #L15b6b4.  @monitorenter v0
  #L15b6b6.  v1:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L15b6ba.  if v1 != 0 then goto L15b6d2;
  #L15b6be.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L15b6c4.  v1:= temp @kind object;
  #L15b6c6.  call temp:= `a`(v1) @signature `Lc/b/a/a/b;.a:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L15b6cc.  v1:= temp @kind object;
  #L15b6ce.  v2.`c.b.a.a.b.c` @type ^`android.os.Handler` := v1 @kind object;
  #L15b6d2.  @monitorexit v0
  #L15b6d4.  goto L15b6dc;
  #L15b6d6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15b6d8.  @monitorexit v0
  #L15b6da.  throw v3;
  #L15b6dc.  v0:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L15b6e0.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L15b6e6.  return @kind void;
  catch `java.lang.Throwable` @[L15b6b6..L15b6da] goto L15b6d6;
}
