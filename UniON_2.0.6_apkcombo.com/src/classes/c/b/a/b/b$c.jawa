record `c.b.a.b.b$c` @kind class @AccessFlag  extends `java.util.Map$Entry` @kind interface {
  `java.lang.Object` `c.b.a.b.b$c.b` @AccessFlag FINAL;
  `java.lang.Object` `c.b.a.b.b$c.c` @AccessFlag FINAL;
  `c.b.a.b.b$c` `c.b.a.b.b$c.d` @AccessFlag ;
  `c.b.a.b.b$c` `c.b.a.b.b$c.e` @AccessFlag ;
}
procedure `void` `<init>`(`c.b.a.b.b$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/b$c;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15b9c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b9ca.  v0.`c.b.a.b.b$c.b` @type ^`java.lang.Object` := v1 @kind object;
  #L15b9ce.  v0.`c.b.a.b.b$c.c` @type ^`java.lang.Object` := v2 @kind object;
  #L15b9d2.  return @kind void;
}
procedure `boolean` `equals`(`c.b.a.b.b$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/b/a/b/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b8ac.  v0:= 1I;
  #L15b8ae.  if v5 != v4 then goto L15b8b4;
  #L15b8b2.  return v0;
  #L15b8b4.  v1:= instanceof @variable v5 @type ^`c.b.a.b.b$c` @kind boolean;
  #L15b8b8.  v2:= 0I;
  #L15b8ba.  if v1 != 0 then goto L15b8c0;
  #L15b8be.  return v2;
  #L15b8c0.  v5:= (`c.b.a.b.b$c`) v5 @kind object;
  #L15b8c4.  v1:= v4.`c.b.a.b.b$c.b` @type ^`java.lang.Object` @kind object;
  #L15b8c8.  v3:= v5.`c.b.a.b.b$c.b` @type ^`java.lang.Object` @kind object;
  #L15b8cc.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b8d2.  v1:= temp;
  #L15b8d4.  if v1 == 0 then goto L15b8ee;
  #L15b8d8.  v1:= v4.`c.b.a.b.b$c.c` @type ^`java.lang.Object` @kind object;
  #L15b8dc.  v5:= v5.`c.b.a.b.b$c.c` @type ^`java.lang.Object` @kind object;
  #L15b8e0.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b8e6.  v5:= temp;
  #L15b8e8.  if v5 == 0 then goto L15b8ee;
  #L15b8ec.  goto L15b8f0;
  #L15b8ee.  v0:= 0I;
  #L15b8f0.  return v0;
}
procedure `java.lang.Object` `getKey`(`c.b.a.b.b$c` v1 @kind this) @signature `Lc/b/a/b/b$c;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b930.  v0:= v1.`c.b.a.b.b$c.b` @type ^`java.lang.Object` @kind object;
  #L15b934.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`c.b.a.b.b$c` v1 @kind this) @signature `Lc/b/a/b/b$c;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b948.  v0:= v1.`c.b.a.b.b$c.c` @type ^`java.lang.Object` @kind object;
  #L15b94c.  return v0 @kind object;
}
procedure `int` `hashCode`(`c.b.a.b.b$c` v2 @kind this) @signature `Lc/b/a/b/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b904.  v0:= v2.`c.b.a.b.b$c.b` @type ^`java.lang.Object` @kind object;
  #L15b908.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15b90e.  v0:= temp;
  #L15b910.  v1:= v2.`c.b.a.b.b$c.c` @type ^`java.lang.Object` @kind object;
  #L15b914.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15b91a.  v1:= temp;
  #L15b91c.  v0:= v0 ^~ v1 @kind int;
  #L15b91e.  return v0;
}
procedure `java.lang.Object` `setValue`(`c.b.a.b.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/b$c;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b960.  v2:= new `java.lang.UnsupportedOperationException`;
  #L15b964.  v0:= "An entry modification is not supported" @kind object;
  #L15b968.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b96e.  throw v2;
}
procedure `java.lang.String` `toString`(`c.b.a.b.b$c` v2 @kind this) @signature `Lc/b/a/b/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b980.  v0:= new `java.lang.StringBuilder`;
  #L15b984.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b98a.  v1:= v2.`c.b.a.b.b$c.b` @type ^`java.lang.Object` @kind object;
  #L15b98e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b994.  v1:= "=" @kind object;
  #L15b998.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b99e.  v1:= v2.`c.b.a.b.b$c.c` @type ^`java.lang.Object` @kind object;
  #L15b9a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b9a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b9ae.  v0:= temp @kind object;
  #L15b9b0.  return v0 @kind object;
}
