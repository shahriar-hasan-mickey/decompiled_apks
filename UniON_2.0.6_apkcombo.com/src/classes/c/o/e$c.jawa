record `c.o.e$c` @kind class @AccessFlag  extends `c.o.n` @kind class {
  `java.lang.Object` `c.o.e$c.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.ArrayList` `c.o.e$c.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `c.o.e$c.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.ArrayList` `c.o.e$c.d` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `c.o.e$c.e` @AccessFlag FINAL_SYNTHETIC;
  `java.util.ArrayList` `c.o.e$c.f` @AccessFlag FINAL_SYNTHETIC;
  `c.o.e` `c.o.e$c.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.o.e$c` v0 @kind this, `c.o.e` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.ArrayList` v3 @kind object, `java.lang.Object` v4 @kind object, `java.util.ArrayList` v5 @kind object, `java.lang.Object` v6 @kind object, `java.util.ArrayList` v7 @kind object) @signature `Lc/o/e$c;.<init>:(Lc/o/e;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b3a58.  v0.`c.o.e$c.g` @type ^`c.o.e` := v1 @kind object;
  #L1b3a5c.  v0.`c.o.e$c.a` @type ^`java.lang.Object` := v2 @kind object;
  #L1b3a60.  v0.`c.o.e$c.b` @type ^`java.util.ArrayList` := v3 @kind object;
  #L1b3a64.  v0.`c.o.e$c.c` @type ^`java.lang.Object` := v4 @kind object;
  #L1b3a68.  v0.`c.o.e$c.d` @type ^`java.util.ArrayList` := v5 @kind object;
  #L1b3a6c.  v0.`c.o.e$c.e` @type ^`java.lang.Object` := v6 @kind object;
  #L1b3a70.  v0.`c.o.e$c.f` @type ^`java.util.ArrayList` := v7 @kind object;
  #L1b3a74.  call `<init>`(v0) @signature `Lc/o/n;.<init>:()V` @kind direct;
  #L1b3a7a.  return @kind void;
}
procedure `void` `a`(`c.o.e$c` v3 @kind this, `c.o.m` v4 @kind object) @signature `Lc/o/e$c;.a:(Lc/o/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b3aa4.  v4:= v3.`c.o.e$c.a` @type ^`java.lang.Object` @kind object;
  #L1b3aa8.  v0:= 0I;
  #L1b3aaa.  if v4 == 0 then goto L1b3abc;
  #L1b3aae.  v1:= v3.`c.o.e$c.g` @type ^`c.o.e` @kind object;
  #L1b3ab2.  v2:= v3.`c.o.e$c.b` @type ^`java.util.ArrayList` @kind object;
  #L1b3ab6.  call `a`(v1, v4, v2, v0) @signature `Lc/o/e;.a:(Ljava/lang/Object;Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @kind virtual;
  #L1b3abc.  v4:= v3.`c.o.e$c.c` @type ^`java.lang.Object` @kind object;
  #L1b3ac0.  if v4 == 0 then goto L1b3ad2;
  #L1b3ac4.  v1:= v3.`c.o.e$c.g` @type ^`c.o.e` @kind object;
  #L1b3ac8.  v2:= v3.`c.o.e$c.d` @type ^`java.util.ArrayList` @kind object;
  #L1b3acc.  call `a`(v1, v4, v2, v0) @signature `Lc/o/e;.a:(Ljava/lang/Object;Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @kind virtual;
  #L1b3ad2.  v4:= v3.`c.o.e$c.e` @type ^`java.lang.Object` @kind object;
  #L1b3ad6.  if v4 == 0 then goto L1b3ae8;
  #L1b3ada.  v1:= v3.`c.o.e$c.g` @type ^`c.o.e` @kind object;
  #L1b3ade.  v2:= v3.`c.o.e$c.f` @type ^`java.util.ArrayList` @kind object;
  #L1b3ae2.  call `a`(v1, v4, v2, v0) @signature `Lc/o/e;.a:(Ljava/lang/Object;Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @kind virtual;
  #L1b3ae8.  return @kind void;
}
procedure `void` `e`(`c.o.e$c` v0 @kind this, `c.o.m` v1 @kind object) @signature `Lc/o/e$c;.e:(Lc/o/m;)V` @AccessFlag PUBLIC {
    temp;

  #L1b3a8c.  call temp:= `b`(v1, v0) @signature `Lc/o/m;.b:(Lc/o/m$f;)Lc/o/m;` @kind virtual;
  #L1b3a92.  return @kind void;
}
