record `c.o.c$k` @kind class @AccessFlag  {
  `int` `c.o.c$k.a` @AccessFlag PRIVATE;
  `int` `c.o.c$k.b` @AccessFlag PRIVATE;
  `int` `c.o.c$k.c` @AccessFlag PRIVATE;
  `int` `c.o.c$k.d` @AccessFlag PRIVATE;
  `android.view.View` `c.o.c$k.e` @AccessFlag PRIVATE;
  `int` `c.o.c$k.f` @AccessFlag PRIVATE;
  `int` `c.o.c$k.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.o.c$k` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/o/c$k;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b2f14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b2f1a.  v0.`c.o.c$k.e` @type ^`android.view.View` := v1 @kind object;
  #L1b2f1e.  return @kind void;
}
procedure `void` `a`(`c.o.c$k` v5 @kind this) @signature `Lc/o/c$k;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b2f80.  v0:= v5.`c.o.c$k.e` @type ^`android.view.View` @kind object;
  #L1b2f84.  v1:= v5.`c.o.c$k.a` @type ^`int`;
  #L1b2f88.  v2:= v5.`c.o.c$k.b` @type ^`int`;
  #L1b2f8c.  v3:= v5.`c.o.c$k.c` @type ^`int`;
  #L1b2f90.  v4:= v5.`c.o.c$k.d` @type ^`int`;
  #L1b2f94.  call `a`(v0, v1, v2, v3, v4) @signature `Lc/o/c0;.a:(Landroid/view/View;IIII)V` @kind static;
  #L1b2f9a.  v0:= 0I;
  #L1b2f9c.  v5.`c.o.c$k.f` @type ^`int` := v0;
  #L1b2fa0.  v5.`c.o.c$k.g` @type ^`int` := v0;
  #L1b2fa4.  return @kind void;
}
procedure `void` `a`(`c.o.c$k` v1 @kind this, `android.graphics.PointF` v2 @kind object) @signature `Lc/o/c$k;.a:(Landroid/graphics/PointF;)V` @AccessFlag  {
    temp;
    v0;

  #L1b2f30.  v0:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L1b2f34.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1b2f3a.  v0:= temp;
  #L1b2f3c.  v1.`c.o.c$k.c` @type ^`int` := v0;
  #L1b2f40.  v2:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L1b2f44.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1b2f4a.  v2:= temp;
  #L1b2f4c.  v1.`c.o.c$k.d` @type ^`int` := v2;
  #L1b2f50.  v2:= v1.`c.o.c$k.g` @type ^`int`;
  #L1b2f54.  v2:= v2 + 1;
  #L1b2f58.  v1.`c.o.c$k.g` @type ^`int` := v2;
  #L1b2f5c.  v2:= v1.`c.o.c$k.f` @type ^`int`;
  #L1b2f60.  v0:= v1.`c.o.c$k.g` @type ^`int`;
  #L1b2f64.  if v2 != v0 then goto L1b2f6e;
  #L1b2f68.  call `a`(v1) @signature `Lc/o/c$k;.a:()V` @kind direct;
  #L1b2f6e.  return @kind void;
}
procedure `void` `b`(`c.o.c$k` v1 @kind this, `android.graphics.PointF` v2 @kind object) @signature `Lc/o/c$k;.b:(Landroid/graphics/PointF;)V` @AccessFlag  {
    temp;
    v0;

  #L1b2fb8.  v0:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L1b2fbc.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1b2fc2.  v0:= temp;
  #L1b2fc4.  v1.`c.o.c$k.a` @type ^`int` := v0;
  #L1b2fc8.  v2:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L1b2fcc.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1b2fd2.  v2:= temp;
  #L1b2fd4.  v1.`c.o.c$k.b` @type ^`int` := v2;
  #L1b2fd8.  v2:= v1.`c.o.c$k.f` @type ^`int`;
  #L1b2fdc.  v2:= v2 + 1;
  #L1b2fe0.  v1.`c.o.c$k.f` @type ^`int` := v2;
  #L1b2fe4.  v2:= v1.`c.o.c$k.f` @type ^`int`;
  #L1b2fe8.  v0:= v1.`c.o.c$k.g` @type ^`int`;
  #L1b2fec.  if v2 != v0 then goto L1b2ff6;
  #L1b2ff0.  call `a`(v1) @signature `Lc/o/c$k;.a:()V` @kind direct;
  #L1b2ff6.  return @kind void;
}
