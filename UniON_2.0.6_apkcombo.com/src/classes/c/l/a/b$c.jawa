record `c.l.a.b$c` @kind class @AccessFlag  extends `androidx.lifecycle.w` @kind class {
  `c.c.h` `c.l.a.b$c.b` @AccessFlag PRIVATE;
}
global `androidx.lifecycle.x$a` `@@c.l.a.b$c.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/l/a/b$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b06a8.  v0:= new `c.l.a.b$c$a`;
  #L1b06ac.  call `<init>`(v0) @signature `Lc/l/a/b$c$a;.<init>:()V` @kind direct;
  #L1b06b2.  `@@c.l.a.b$c.c` @type ^`androidx.lifecycle.x$a` := v0 @kind object;
  #L1b06b6.  return @kind void;
}
procedure `void` `<init>`(`c.l.a.b$c` v1 @kind this) @signature `Lc/l/a/b$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b06c8.  call `<init>`(v1) @signature `Landroidx/lifecycle/w;.<init>:()V` @kind direct;
  #L1b06ce.  v0:= new `c.c.h`;
  #L1b06d2.  call `<init>`(v0) @signature `Lc/c/h;.<init>:()V` @kind direct;
  #L1b06d8.  v1.`c.l.a.b$c.b` @type ^`c.c.h` := v0 @kind object;
  #L1b06dc.  return @kind void;
}
procedure `c.l.a.b$c` `a`(`androidx.lifecycle.y` v2 @kind object) @signature `Lc/l/a/b$c;.a:(Landroidx/lifecycle/y;)Lc/l/a/b$c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1b0678.  v0:= new `androidx.lifecycle.x`;
  #L1b067c.  v1:= `@@c.l.a.b$c.c` @type ^`androidx.lifecycle.x$a` @kind object;
  #L1b0680.  call `<init>`(v0, v2, v1) @signature `Landroidx/lifecycle/x;.<init>:(Landroidx/lifecycle/y;Landroidx/lifecycle/x$a;)V` @kind direct;
  #L1b0686.  v2:= constclass @type ^`c.l.a.b$c` @kind object;
  #L1b068a.  call temp:= `a`(v0, v2) @signature `Landroidx/lifecycle/x;.a:(Ljava/lang/Class;)Landroidx/lifecycle/w;` @kind virtual;
  #L1b0690.  v2:= temp @kind object;
  #L1b0692.  v2:= (`c.l.a.b$c`) v2 @kind object;
  #L1b0696.  return v2 @kind object;
}
procedure `void` `a`(`c.l.a.b$c` v3 @kind this, `java.lang.String` v4 @kind object, `java.io.FileDescriptor` v5 @kind object, `java.io.PrintWriter` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lc/l/a/b$c;.a:(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b06f0.  v0:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b06f4.  call temp:= `d`(v0) @signature `Lc/c/h;.d:()I` @kind virtual;
  #L1b06fa.  v0:= temp;
  #L1b06fc.  if v0 <= 0 then goto L1b079a;
  #L1b0700.  call `print`(v6, v4) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1b0706.  v0:= "Loaders:" @kind object;
  #L1b070a.  call `println`(v6, v0) @signature `Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V` @kind virtual;
  #L1b0710.  v0:= new `java.lang.StringBuilder`;
  #L1b0714.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b071a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0720.  v1:= "    " @kind object;
  #L1b0724.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b072a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0730.  v0:= temp @kind object;
  #L1b0732.  v1:= 0I;
  #L1b0734.  v2:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b0738.  call temp:= `d`(v2) @signature `Lc/c/h;.d:()I` @kind virtual;
  #L1b073e.  v2:= temp;
  #L1b0740.  if v2 > 0 then goto L1b0746;
  #L1b0744.  goto L1b079a;
  #L1b0746.  v2:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b074a.  call temp:= `c`(v2, v1) @signature `Lc/c/h;.c:(I)Ljava/lang/Object;` @kind virtual;
  #L1b0750.  v2:= temp @kind object;
  #L1b0752.  v2:= (`c.l.a.b$a`) v2 @kind object;
  #L1b0756.  call `print`(v6, v4) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1b075c.  v4:= "  #" @kind object;
  #L1b0760.  call `print`(v6, v4) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1b0766.  v4:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b076a.  call temp:= `b`(v4, v1) @signature `Lc/c/h;.b:(I)I` @kind virtual;
  #L1b0770.  v4:= temp;
  #L1b0772.  call `print`(v6, v4) @signature `Ljava/io/PrintWriter;.print:(I)V` @kind virtual;
  #L1b0778.  v4:= ": " @kind object;
  #L1b077c.  call `print`(v6, v4) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1b0782.  call temp:= `toString`(v2) @signature `Lc/l/a/b$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0788.  v4:= temp @kind object;
  #L1b078a.  call `println`(v6, v4) @signature `Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V` @kind virtual;
  #L1b0790.  call `a`(v2, v0, v5, v6, v7) @signature `Lc/l/a/b$a;.a:(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V` @kind virtual;
  #L1b0796.  v4:= 0I;
  #L1b0798.  throw v4;
  #L1b079a.  return @kind void;
}
procedure `void` `b`(`c.l.a.b$c` v2 @kind this) @signature `Lc/l/a/b$c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1b07ec.  call `b`(v2) @signature `Landroidx/lifecycle/w;.b:()V` @kind super;
  #L1b07f2.  v0:= v2.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b07f6.  call temp:= `d`(v0) @signature `Lc/c/h;.d:()I` @kind virtual;
  #L1b07fc.  v0:= temp;
  #L1b07fe.  if v0 > 0 then goto L1b080e;
  #L1b0802.  v0:= v2.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b0806.  call `c`(v0) @signature `Lc/c/h;.c:()V` @kind virtual;
  #L1b080c.  return @kind void;
  #L1b080e.  v0:= v2.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b0812.  v1:= 0I;
  #L1b0814.  call temp:= `c`(v0, v1) @signature `Lc/c/h;.c:(I)Ljava/lang/Object;` @kind virtual;
  #L1b081a.  v0:= temp @kind object;
  #L1b081c.  v0:= (`c.l.a.b$a`) v0 @kind object;
  #L1b0820.  v1:= 1I;
  #L1b0822.  call temp:= `a`(v0, v1) @signature `Lc/l/a/b$a;.a:(Z)Lc/l/b/a;` @kind virtual;
  #L1b0828.  v0:= 0I;
  #L1b082a.  throw v0;
}
procedure `void` `c`(`c.l.a.b$c` v3 @kind this) @signature `Lc/l/a/b$c;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1b07ac.  v0:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b07b0.  call temp:= `d`(v0) @signature `Lc/c/h;.d:()I` @kind virtual;
  #L1b07b6.  v0:= temp;
  #L1b07b8.  v1:= 0I;
  #L1b07ba.  if v1 >= v0 then goto L1b07da;
  #L1b07be.  v2:= v3.`c.l.a.b$c.b` @type ^`c.c.h` @kind object;
  #L1b07c2.  call temp:= `c`(v2, v1) @signature `Lc/c/h;.c:(I)Ljava/lang/Object;` @kind virtual;
  #L1b07c8.  v2:= temp @kind object;
  #L1b07ca.  v2:= (`c.l.a.b$a`) v2 @kind object;
  #L1b07ce.  call `c`(v2) @signature `Lc/l/a/b$a;.c:()V` @kind virtual;
  #L1b07d4.  v1:= v1 + 1;
  #L1b07d8.  goto L1b07ba;
  #L1b07da.  return @kind void;
}
