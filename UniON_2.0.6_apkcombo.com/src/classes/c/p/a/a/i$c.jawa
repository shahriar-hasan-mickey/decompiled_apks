record `c.p.a.a.i$c` @kind class @AccessFlag  extends `c.p.a.a.i$f` @kind class {
  `int`[] `c.p.a.a.i$c.e` @AccessFlag PRIVATE;
  `c.e.h.e.b` `c.p.a.a.i$c.f` @AccessFlag ;
  `float` `c.p.a.a.i$c.g` @AccessFlag ;
  `c.e.h.e.b` `c.p.a.a.i$c.h` @AccessFlag ;
  `float` `c.p.a.a.i$c.i` @AccessFlag ;
  `float` `c.p.a.a.i$c.j` @AccessFlag ;
  `float` `c.p.a.a.i$c.k` @AccessFlag ;
  `float` `c.p.a.a.i$c.l` @AccessFlag ;
  `float` `c.p.a.a.i$c.m` @AccessFlag ;
  `android.graphics.Paint$Cap` `c.p.a.a.i$c.n` @AccessFlag ;
  `android.graphics.Paint$Join` `c.p.a.a.i$c.o` @AccessFlag ;
  `float` `c.p.a.a.i$c.p` @AccessFlag ;
}
procedure `void` `<init>`(`c.p.a.a.i$c` v2 @kind this) @signature `Lc/p/a/a/i$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bbcb8.  call `<init>`(v2) @signature `Lc/p/a/a/i$f;.<init>:()V` @kind direct;
  #L1bbcbe.  v0:= 0I;
  #L1bbcc0.  v2.`c.p.a.a.i$c.g` @type ^`float` := v0;
  #L1bbcc4.  v1:= 1.0F;
  #L1bbcc8.  v2.`c.p.a.a.i$c.i` @type ^`float` := v1;
  #L1bbccc.  v2.`c.p.a.a.i$c.j` @type ^`float` := v1;
  #L1bbcd0.  v2.`c.p.a.a.i$c.k` @type ^`float` := v0;
  #L1bbcd4.  v2.`c.p.a.a.i$c.l` @type ^`float` := v1;
  #L1bbcd8.  v2.`c.p.a.a.i$c.m` @type ^`float` := v0;
  #L1bbcdc.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbce0.  v2.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L1bbce4.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbce8.  v2.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L1bbcec.  v0:= 4.0F;
  #L1bbcf0.  v2.`c.p.a.a.i$c.p` @type ^`float` := v0;
  #L1bbcf4.  return @kind void;
}
procedure `void` `<init>`(`c.p.a.a.i$c` v2 @kind this, `c.p.a.a.i$c` v3 @kind object) @signature `Lc/p/a/a/i$c;.<init>:(Lc/p/a/a/i$c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bbd08.  call `<init>`(v2, v3) @signature `Lc/p/a/a/i$f;.<init>:(Lc/p/a/a/i$f;)V` @kind direct;
  #L1bbd0e.  v0:= 0I;
  #L1bbd10.  v2.`c.p.a.a.i$c.g` @type ^`float` := v0;
  #L1bbd14.  v1:= 1.0F;
  #L1bbd18.  v2.`c.p.a.a.i$c.i` @type ^`float` := v1;
  #L1bbd1c.  v2.`c.p.a.a.i$c.j` @type ^`float` := v1;
  #L1bbd20.  v2.`c.p.a.a.i$c.k` @type ^`float` := v0;
  #L1bbd24.  v2.`c.p.a.a.i$c.l` @type ^`float` := v1;
  #L1bbd28.  v2.`c.p.a.a.i$c.m` @type ^`float` := v0;
  #L1bbd2c.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbd30.  v2.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L1bbd34.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbd38.  v2.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L1bbd3c.  v0:= 4.0F;
  #L1bbd40.  v2.`c.p.a.a.i$c.p` @type ^`float` := v0;
  #L1bbd44.  v0:= v3.`c.p.a.a.i$c.e` @type ^`int`[] @kind object;
  #L1bbd48.  v2.`c.p.a.a.i$c.e` @type ^`int`[] := v0 @kind object;
  #L1bbd4c.  v0:= v3.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` @kind object;
  #L1bbd50.  v2.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` := v0 @kind object;
  #L1bbd54.  v0:= v3.`c.p.a.a.i$c.g` @type ^`float`;
  #L1bbd58.  v2.`c.p.a.a.i$c.g` @type ^`float` := v0;
  #L1bbd5c.  v0:= v3.`c.p.a.a.i$c.i` @type ^`float`;
  #L1bbd60.  v2.`c.p.a.a.i$c.i` @type ^`float` := v0;
  #L1bbd64.  v0:= v3.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` @kind object;
  #L1bbd68.  v2.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` := v0 @kind object;
  #L1bbd6c.  v0:= v3.`c.p.a.a.i$f.c` @type ^`int`;
  #L1bbd70.  v2.`c.p.a.a.i$f.c` @type ^`int` := v0;
  #L1bbd74.  v0:= v3.`c.p.a.a.i$c.j` @type ^`float`;
  #L1bbd78.  v2.`c.p.a.a.i$c.j` @type ^`float` := v0;
  #L1bbd7c.  v0:= v3.`c.p.a.a.i$c.k` @type ^`float`;
  #L1bbd80.  v2.`c.p.a.a.i$c.k` @type ^`float` := v0;
  #L1bbd84.  v0:= v3.`c.p.a.a.i$c.l` @type ^`float`;
  #L1bbd88.  v2.`c.p.a.a.i$c.l` @type ^`float` := v0;
  #L1bbd8c.  v0:= v3.`c.p.a.a.i$c.m` @type ^`float`;
  #L1bbd90.  v2.`c.p.a.a.i$c.m` @type ^`float` := v0;
  #L1bbd94.  v0:= v3.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbd98.  v2.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L1bbd9c.  v0:= v3.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbda0.  v2.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L1bbda4.  v3:= v3.`c.p.a.a.i$c.p` @type ^`float`;
  #L1bbda8.  v2.`c.p.a.a.i$c.p` @type ^`float` := v3;
  #L1bbdac.  return @kind void;
}
procedure `android.graphics.Paint$Cap` `a`(`c.p.a.a.i$c` v1 @kind this, `int` v2 , `android.graphics.Paint$Cap` v3 @kind object) @signature `Lc/p/a/a/i$c;.a:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1bbb18.  if v2 == 0 then goto L1bbb36;
  #L1bbb1c.  v0:= 1I;
  #L1bbb1e.  if v2 == v0 then goto L1bbb30;
  #L1bbb22.  v0:= 2I;
  #L1bbb24.  if v2 == v0 then goto L1bbb2a;
  #L1bbb28.  return v3 @kind object;
  #L1bbb2a.  v2:= `@@android.graphics.Paint$Cap.SQUARE` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbb2e.  return v2 @kind object;
  #L1bbb30.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbb34.  return v2 @kind object;
  #L1bbb36.  v2:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbb3a.  return v2 @kind object;
}
procedure `android.graphics.Paint$Join` `a`(`c.p.a.a.i$c` v1 @kind this, `int` v2 , `android.graphics.Paint$Join` v3 @kind object) @signature `Lc/p/a/a/i$c;.a:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1bbb4c.  if v2 == 0 then goto L1bbb6a;
  #L1bbb50.  v0:= 1I;
  #L1bbb52.  if v2 == v0 then goto L1bbb64;
  #L1bbb56.  v0:= 2I;
  #L1bbb58.  if v2 == v0 then goto L1bbb5e;
  #L1bbb5c.  return v3 @kind object;
  #L1bbb5e.  v2:= `@@android.graphics.Paint$Join.BEVEL` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbb62.  return v2 @kind object;
  #L1bbb64.  v2:= `@@android.graphics.Paint$Join.ROUND` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbb68.  return v2 @kind object;
  #L1bbb6a.  v2:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbb6e.  return v2 @kind object;
}
procedure `void` `a`(`c.p.a.a.i$c` v7 @kind this, `android.content.res.TypedArray` v8 @kind object, `org.xmlpull.v1.XmlPullParser` v9 @kind object, `android.content.res.Resources$Theme` v10 @kind object) @signature `Lc/p/a/a/i$c;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bbeb4.  v0:= 0I;
  #L1bbeb6.  v7.`c.p.a.a.i$c.e` @type ^`int`[] := v0 @kind object;
  #L1bbeba.  v0:= "pathData" @kind object;
  #L1bbebe.  call temp:= `a`(v9, v0) @signature `Lc/e/h/e/g;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L1bbec4.  v0:= temp;
  #L1bbec6.  if v0 != 0 then goto L1bbecc;
  #L1bbeca.  return @kind void;
  #L1bbecc.  v0:= 0I;
  #L1bbece.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L1bbed4.  v0:= temp @kind object;
  #L1bbed6.  if v0 == 0 then goto L1bbede;
  #L1bbeda.  v7.`c.p.a.a.i$f.b` @type ^`java.lang.String` := v0 @kind object;
  #L1bbede.  v0:= 2I;
  #L1bbee0.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L1bbee6.  v0:= temp @kind object;
  #L1bbee8.  if v0 == 0 then goto L1bbef8;
  #L1bbeec.  call temp:= `a`(v0) @signature `Lc/e/i/c;.a:(Ljava/lang/String;)[Lc/e/i/c$b;` @kind static;
  #L1bbef2.  v0:= temp @kind object;
  #L1bbef4.  v7.`c.p.a.a.i$f.a` @type ^`c.e.i.c$b`[] := v0 @kind object;
  #L1bbef8.  v5:= 1I;
  #L1bbefa.  v6:= 0I;
  #L1bbefc.  v4:= "fillColor" @kind object;
  #L1bbf00.  v1:= v8 @kind object;
  #L1bbf02.  v2:= v9 @kind object;
  #L1bbf04.  v3:= v10 @kind object;
  #L1bbf06.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Lc/e/h/e/b;` @kind static;
  #L1bbf0c.  v0:= temp @kind object;
  #L1bbf0e.  v7.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` := v0 @kind object;
  #L1bbf12.  v0:= 12I;
  #L1bbf16.  v1:= v7.`c.p.a.a.i$c.j` @type ^`float`;
  #L1bbf1a.  v2:= "fillAlpha" @kind object;
  #L1bbf1e.  call temp:= `a`(v8, v9, v2, v0, v1) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbf24.  v0:= temp;
  #L1bbf26.  v7.`c.p.a.a.i$c.j` @type ^`float` := v0;
  #L1bbf2a.  v0:= 8I;
  #L1bbf2e.  v1:= -1I;
  #L1bbf30.  v2:= "strokeLineCap" @kind object;
  #L1bbf34.  call temp:= `b`(v8, v9, v2, v0, v1) @signature `Lc/e/h/e/g;.b:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L1bbf3a.  v0:= temp;
  #L1bbf3c.  v2:= v7.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L1bbf40.  call temp:= `a`(v7, v0, v2) @signature `Lc/p/a/a/i$c;.a:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @kind direct;
  #L1bbf46.  v0:= temp @kind object;
  #L1bbf48.  v7.`c.p.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L1bbf4c.  v0:= 9I;
  #L1bbf50.  v2:= "strokeLineJoin" @kind object;
  #L1bbf54.  call temp:= `b`(v8, v9, v2, v0, v1) @signature `Lc/e/h/e/g;.b:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L1bbf5a.  v0:= temp;
  #L1bbf5c.  v1:= v7.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L1bbf60.  call temp:= `a`(v7, v0, v1) @signature `Lc/p/a/a/i$c;.a:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @kind direct;
  #L1bbf66.  v0:= temp @kind object;
  #L1bbf68.  v7.`c.p.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L1bbf6c.  v0:= 10I;
  #L1bbf70.  v1:= v7.`c.p.a.a.i$c.p` @type ^`float`;
  #L1bbf74.  v2:= "strokeMiterLimit" @kind object;
  #L1bbf78.  call temp:= `a`(v8, v9, v2, v0, v1) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbf7e.  v0:= temp;
  #L1bbf80.  v7.`c.p.a.a.i$c.p` @type ^`float` := v0;
  #L1bbf84.  v5:= 3I;
  #L1bbf86.  v4:= "strokeColor" @kind object;
  #L1bbf8a.  v1:= v8 @kind object;
  #L1bbf8c.  v2:= v9 @kind object;
  #L1bbf8e.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Lc/e/h/e/b;` @kind static;
  #L1bbf94.  v10:= temp @kind object;
  #L1bbf96.  v7.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` := v10 @kind object;
  #L1bbf9a.  v10:= 11I;
  #L1bbf9e.  v0:= v7.`c.p.a.a.i$c.i` @type ^`float`;
  #L1bbfa2.  v1:= "strokeAlpha" @kind object;
  #L1bbfa6.  call temp:= `a`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbfac.  v10:= temp;
  #L1bbfae.  v7.`c.p.a.a.i$c.i` @type ^`float` := v10;
  #L1bbfb2.  v10:= 4I;
  #L1bbfb4.  v0:= v7.`c.p.a.a.i$c.g` @type ^`float`;
  #L1bbfb8.  v1:= "strokeWidth" @kind object;
  #L1bbfbc.  call temp:= `a`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbfc2.  v10:= temp;
  #L1bbfc4.  v7.`c.p.a.a.i$c.g` @type ^`float` := v10;
  #L1bbfc8.  v10:= 6I;
  #L1bbfca.  v0:= v7.`c.p.a.a.i$c.l` @type ^`float`;
  #L1bbfce.  v1:= "trimPathEnd" @kind object;
  #L1bbfd2.  call temp:= `a`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbfd8.  v10:= temp;
  #L1bbfda.  v7.`c.p.a.a.i$c.l` @type ^`float` := v10;
  #L1bbfde.  v10:= 7I;
  #L1bbfe0.  v0:= v7.`c.p.a.a.i$c.m` @type ^`float`;
  #L1bbfe4.  v1:= "trimPathOffset" @kind object;
  #L1bbfe8.  call temp:= `a`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bbfee.  v10:= temp;
  #L1bbff0.  v7.`c.p.a.a.i$c.m` @type ^`float` := v10;
  #L1bbff4.  v10:= 5I;
  #L1bbff6.  v0:= v7.`c.p.a.a.i$c.k` @type ^`float`;
  #L1bbffa.  v1:= "trimPathStart" @kind object;
  #L1bbffe.  call temp:= `a`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc004.  v10:= temp;
  #L1bc006.  v7.`c.p.a.a.i$c.k` @type ^`float` := v10;
  #L1bc00a.  v10:= 13I;
  #L1bc00e.  v0:= v7.`c.p.a.a.i$f.c` @type ^`int`;
  #L1bc012.  v1:= "fillType" @kind object;
  #L1bc016.  call temp:= `b`(v8, v9, v1, v10, v0) @signature `Lc/e/h/e/g;.b:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L1bc01c.  v8:= temp;
  #L1bc01e.  v7.`c.p.a.a.i$f.c` @type ^`int` := v8;
  #L1bc022.  return @kind void;
}
procedure `void` `a`(`c.p.a.a.i$c` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/p/a/a/i$c;.a:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bbdc0.  v0:= `@@c.p.a.a.a.c` @type ^`int`[] @kind object;
  #L1bbdc4.  call temp:= `a`(v2, v4, v3, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L1bbdca.  v2:= temp @kind object;
  #L1bbdcc.  call `a`(v1, v2, v5, v4) @signature `Lc/p/a/a/i$c;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @kind direct;
  #L1bbdd2.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1bbdd8.  return @kind void;
}
procedure `boolean` `a`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bbb80.  v0:= v1.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` @kind object;
  #L1bbb84.  call temp:= `d`(v0) @signature `Lc/e/h/e/b;.d:()Z` @kind virtual;
  #L1bbb8a.  v0:= temp;
  #L1bbb8c.  if v0 != 0 then goto L1bbba6;
  #L1bbb90.  v0:= v1.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` @kind object;
  #L1bbb94.  call temp:= `d`(v0) @signature `Lc/e/h/e/b;.d:()Z` @kind virtual;
  #L1bbb9a.  v0:= temp;
  #L1bbb9c.  if v0 == 0 then goto L1bbba2;
  #L1bbba0.  goto L1bbba6;
  #L1bbba2.  v0:= 0I;
  #L1bbba4.  goto L1bbba8;
  #L1bbba6.  v0:= 1I;
  #L1bbba8.  return v0;
}
procedure `boolean` `a`(`c.p.a.a.i$c` v2 @kind this, `int`[] v3 @kind object) @signature `Lc/p/a/a/i$c;.a:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1bbbbc.  v0:= v2.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` @kind object;
  #L1bbbc0.  call temp:= `a`(v0, v3) @signature `Lc/e/h/e/b;.a:([I)Z` @kind virtual;
  #L1bbbc6.  v0:= temp;
  #L1bbbc8.  v1:= v2.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` @kind object;
  #L1bbbcc.  call temp:= `a`(v1, v3) @signature `Lc/e/h/e/b;.a:([I)Z` @kind virtual;
  #L1bbbd2.  v3:= temp;
  #L1bbbd4.  v3:= v3 ^| v0 @kind int;
  #L1bbbd6.  return v3;
}
procedure `float` `getFillAlpha`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getFillAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbbe8.  v0:= v1.`c.p.a.a.i$c.j` @type ^`float`;
  #L1bbbec.  return v0;
}
procedure `int` `getFillColor`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getFillColor:()I` @AccessFlag  {
    temp;
    v0;

  #L1bbc78.  v0:= v1.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` @kind object;
  #L1bbc7c.  call temp:= `a`(v0) @signature `Lc/e/h/e/b;.a:()I` @kind virtual;
  #L1bbc82.  v0:= temp;
  #L1bbc84.  return v0;
}
procedure `float` `getStrokeAlpha`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getStrokeAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbc00.  v0:= v1.`c.p.a.a.i$c.i` @type ^`float`;
  #L1bbc04.  return v0;
}
procedure `int` `getStrokeColor`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getStrokeColor:()I` @AccessFlag  {
    temp;
    v0;

  #L1bbc98.  v0:= v1.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` @kind object;
  #L1bbc9c.  call temp:= `a`(v0) @signature `Lc/e/h/e/b;.a:()I` @kind virtual;
  #L1bbca2.  v0:= temp;
  #L1bbca4.  return v0;
}
procedure `float` `getStrokeWidth`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getStrokeWidth:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbc18.  v0:= v1.`c.p.a.a.i$c.g` @type ^`float`;
  #L1bbc1c.  return v0;
}
procedure `float` `getTrimPathEnd`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getTrimPathEnd:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbc30.  v0:= v1.`c.p.a.a.i$c.l` @type ^`float`;
  #L1bbc34.  return v0;
}
procedure `float` `getTrimPathOffset`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getTrimPathOffset:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbc48.  v0:= v1.`c.p.a.a.i$c.m` @type ^`float`;
  #L1bbc4c.  return v0;
}
procedure `float` `getTrimPathStart`(`c.p.a.a.i$c` v1 @kind this) @signature `Lc/p/a/a/i$c;.getTrimPathStart:()F` @AccessFlag  {
    temp;
    v0;

  #L1bbc60.  v0:= v1.`c.p.a.a.i$c.k` @type ^`float`;
  #L1bbc64.  return v0;
}
procedure `void` `setFillAlpha`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setFillAlpha:(F)V` @AccessFlag  {
    temp;

  #L1bbdec.  v0.`c.p.a.a.i$c.j` @type ^`float` := v1;
  #L1bbdf0.  return @kind void;
}
procedure `void` `setFillColor`(`c.p.a.a.i$c` v1 @kind this, `int` v2 ) @signature `Lc/p/a/a/i$c;.setFillColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1bbe04.  v0:= v1.`c.p.a.a.i$c.h` @type ^`c.e.h.e.b` @kind object;
  #L1bbe08.  call `a`(v0, v2) @signature `Lc/e/h/e/b;.a:(I)V` @kind virtual;
  #L1bbe0e.  return @kind void;
}
procedure `void` `setStrokeAlpha`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setStrokeAlpha:(F)V` @AccessFlag  {
    temp;

  #L1bbe20.  v0.`c.p.a.a.i$c.i` @type ^`float` := v1;
  #L1bbe24.  return @kind void;
}
procedure `void` `setStrokeColor`(`c.p.a.a.i$c` v1 @kind this, `int` v2 ) @signature `Lc/p/a/a/i$c;.setStrokeColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1bbe38.  v0:= v1.`c.p.a.a.i$c.f` @type ^`c.e.h.e.b` @kind object;
  #L1bbe3c.  call `a`(v0, v2) @signature `Lc/e/h/e/b;.a:(I)V` @kind virtual;
  #L1bbe42.  return @kind void;
}
procedure `void` `setStrokeWidth`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setStrokeWidth:(F)V` @AccessFlag  {
    temp;

  #L1bbe54.  v0.`c.p.a.a.i$c.g` @type ^`float` := v1;
  #L1bbe58.  return @kind void;
}
procedure `void` `setTrimPathEnd`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setTrimPathEnd:(F)V` @AccessFlag  {
    temp;

  #L1bbe6c.  v0.`c.p.a.a.i$c.l` @type ^`float` := v1;
  #L1bbe70.  return @kind void;
}
procedure `void` `setTrimPathOffset`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setTrimPathOffset:(F)V` @AccessFlag  {
    temp;

  #L1bbe84.  v0.`c.p.a.a.i$c.m` @type ^`float` := v1;
  #L1bbe88.  return @kind void;
}
procedure `void` `setTrimPathStart`(`c.p.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/p/a/a/i$c;.setTrimPathStart:(F)V` @AccessFlag  {
    temp;

  #L1bbe9c.  v0.`c.p.a.a.i$c.k` @type ^`float` := v1;
  #L1bbea0.  return @kind void;
}
