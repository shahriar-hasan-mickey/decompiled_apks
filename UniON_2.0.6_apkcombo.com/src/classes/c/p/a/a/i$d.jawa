record `c.p.a.a.i$d` @kind class @AccessFlag  extends `c.p.a.a.i$e` @kind class {
  `android.graphics.Matrix` `c.p.a.a.i$d.a` @AccessFlag FINAL;
  `java.util.ArrayList` `c.p.a.a.i$d.b` @AccessFlag FINAL;
  `float` `c.p.a.a.i$d.c` @AccessFlag ;
  `float` `c.p.a.a.i$d.d` @AccessFlag PRIVATE;
  `float` `c.p.a.a.i$d.e` @AccessFlag PRIVATE;
  `float` `c.p.a.a.i$d.f` @AccessFlag PRIVATE;
  `float` `c.p.a.a.i$d.g` @AccessFlag PRIVATE;
  `float` `c.p.a.a.i$d.h` @AccessFlag PRIVATE;
  `float` `c.p.a.a.i$d.i` @AccessFlag PRIVATE;
  `android.graphics.Matrix` `c.p.a.a.i$d.j` @AccessFlag FINAL;
  `int` `c.p.a.a.i$d.k` @AccessFlag ;
  `int`[] `c.p.a.a.i$d.l` @AccessFlag PRIVATE;
  `java.lang.String` `c.p.a.a.i$d.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.p.a.a.i$d` v3 @kind this) @signature `Lc/p/a/a/i$d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1bc1a0.  v0:= 0I;
  #L1bc1a2.  call `<init>`(v3, v0) @signature `Lc/p/a/a/i$e;.<init>:(Lc/p/a/a/i$a;)V` @kind direct;
  #L1bc1a8.  v1:= new `android.graphics.Matrix`;
  #L1bc1ac.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1bc1b2.  v3.`c.p.a.a.i$d.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L1bc1b6.  v1:= new `java.util.ArrayList`;
  #L1bc1ba.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1bc1c0.  v3.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L1bc1c4.  v1:= 0I;
  #L1bc1c6.  v3.`c.p.a.a.i$d.c` @type ^`float` := v1;
  #L1bc1ca.  v3.`c.p.a.a.i$d.d` @type ^`float` := v1;
  #L1bc1ce.  v3.`c.p.a.a.i$d.e` @type ^`float` := v1;
  #L1bc1d2.  v2:= 1.0F;
  #L1bc1d6.  v3.`c.p.a.a.i$d.f` @type ^`float` := v2;
  #L1bc1da.  v3.`c.p.a.a.i$d.g` @type ^`float` := v2;
  #L1bc1de.  v3.`c.p.a.a.i$d.h` @type ^`float` := v1;
  #L1bc1e2.  v3.`c.p.a.a.i$d.i` @type ^`float` := v1;
  #L1bc1e6.  v1:= new `android.graphics.Matrix`;
  #L1bc1ea.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1bc1f0.  v3.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L1bc1f4.  v3.`c.p.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L1bc1f8.  return @kind void;
}
procedure `void` `<init>`(`c.p.a.a.i$d` v4 @kind this, `c.p.a.a.i$d` v5 @kind object, `c.c.a` v6 @kind object) @signature `Lc/p/a/a/i$d;.<init>:(Lc/p/a/a/i$d;Lc/c/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bc20c.  v0:= 0I;
  #L1bc20e.  call `<init>`(v4, v0) @signature `Lc/p/a/a/i$e;.<init>:(Lc/p/a/a/i$a;)V` @kind direct;
  #L1bc214.  v1:= new `android.graphics.Matrix`;
  #L1bc218.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1bc21e.  v4.`c.p.a.a.i$d.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L1bc222.  v1:= new `java.util.ArrayList`;
  #L1bc226.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1bc22c.  v4.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L1bc230.  v1:= 0I;
  #L1bc232.  v4.`c.p.a.a.i$d.c` @type ^`float` := v1;
  #L1bc236.  v4.`c.p.a.a.i$d.d` @type ^`float` := v1;
  #L1bc23a.  v4.`c.p.a.a.i$d.e` @type ^`float` := v1;
  #L1bc23e.  v2:= 1.0F;
  #L1bc242.  v4.`c.p.a.a.i$d.f` @type ^`float` := v2;
  #L1bc246.  v4.`c.p.a.a.i$d.g` @type ^`float` := v2;
  #L1bc24a.  v4.`c.p.a.a.i$d.h` @type ^`float` := v1;
  #L1bc24e.  v4.`c.p.a.a.i$d.i` @type ^`float` := v1;
  #L1bc252.  v1:= new `android.graphics.Matrix`;
  #L1bc256.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1bc25c.  v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L1bc260.  v4.`c.p.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L1bc264.  v0:= v5.`c.p.a.a.i$d.c` @type ^`float`;
  #L1bc268.  v4.`c.p.a.a.i$d.c` @type ^`float` := v0;
  #L1bc26c.  v0:= v5.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc270.  v4.`c.p.a.a.i$d.d` @type ^`float` := v0;
  #L1bc274.  v0:= v5.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc278.  v4.`c.p.a.a.i$d.e` @type ^`float` := v0;
  #L1bc27c.  v0:= v5.`c.p.a.a.i$d.f` @type ^`float`;
  #L1bc280.  v4.`c.p.a.a.i$d.f` @type ^`float` := v0;
  #L1bc284.  v0:= v5.`c.p.a.a.i$d.g` @type ^`float`;
  #L1bc288.  v4.`c.p.a.a.i$d.g` @type ^`float` := v0;
  #L1bc28c.  v0:= v5.`c.p.a.a.i$d.h` @type ^`float`;
  #L1bc290.  v4.`c.p.a.a.i$d.h` @type ^`float` := v0;
  #L1bc294.  v0:= v5.`c.p.a.a.i$d.i` @type ^`float`;
  #L1bc298.  v4.`c.p.a.a.i$d.i` @type ^`float` := v0;
  #L1bc29c.  v0:= v5.`c.p.a.a.i$d.l` @type ^`int`[] @kind object;
  #L1bc2a0.  v4.`c.p.a.a.i$d.l` @type ^`int`[] := v0 @kind object;
  #L1bc2a4.  v0:= v5.`c.p.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L1bc2a8.  v4.`c.p.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L1bc2ac.  v0:= v5.`c.p.a.a.i$d.k` @type ^`int`;
  #L1bc2b0.  v4.`c.p.a.a.i$d.k` @type ^`int` := v0;
  #L1bc2b4.  v0:= v4.`c.p.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L1bc2b8.  if v0 == 0 then goto L1bc2c2;
  #L1bc2bc.  call temp:= `put`(v6, v0, v4) @signature `Lc/c/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bc2c2.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc2c6.  v1:= v5.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc2ca.  call `set`(v0, v1) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L1bc2d0.  v5:= v5.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc2d4.  v0:= 0I;
  #L1bc2d6.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1bc2dc.  v1:= temp;
  #L1bc2de.  if v0 >= v1 then goto L1bc368;
  #L1bc2e2.  call temp:= `get`(v5, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1bc2e8.  v1:= temp @kind object;
  #L1bc2ea.  v2:= instanceof @variable v1 @type ^`c.p.a.a.i$d` @kind boolean;
  #L1bc2ee.  if v2 == 0 then goto L1bc30c;
  #L1bc2f2.  v1:= (`c.p.a.a.i$d`) v1 @kind object;
  #L1bc2f6.  v2:= v4.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc2fa.  v3:= new `c.p.a.a.i$d`;
  #L1bc2fe.  call `<init>`(v3, v1, v6) @signature `Lc/p/a/a/i$d;.<init>:(Lc/p/a/a/i$d;Lc/c/a;)V` @kind direct;
  #L1bc304.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bc30a.  goto L1bc352;
  #L1bc30c.  v2:= instanceof @variable v1 @type ^`c.p.a.a.i$c` @kind boolean;
  #L1bc310.  if v2 == 0 then goto L1bc324;
  #L1bc314.  v2:= new `c.p.a.a.i$c`;
  #L1bc318.  v1:= (`c.p.a.a.i$c`) v1 @kind object;
  #L1bc31c.  call `<init>`(v2, v1) @signature `Lc/p/a/a/i$c;.<init>:(Lc/p/a/a/i$c;)V` @kind direct;
  #L1bc322.  goto L1bc33a;
  #L1bc324.  v2:= instanceof @variable v1 @type ^`c.p.a.a.i$b` @kind boolean;
  #L1bc328.  if v2 == 0 then goto L1bc358;
  #L1bc32c.  v2:= new `c.p.a.a.i$b`;
  #L1bc330.  v1:= (`c.p.a.a.i$b`) v1 @kind object;
  #L1bc334.  call `<init>`(v2, v1) @signature `Lc/p/a/a/i$b;.<init>:(Lc/p/a/a/i$b;)V` @kind direct;
  #L1bc33a.  v1:= v4.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc33e.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1bc344.  v1:= v2.`c.p.a.a.i$f.b` @type ^`java.lang.String` @kind object;
  #L1bc348.  if v1 == 0 then goto L1bc352;
  #L1bc34c.  call temp:= `put`(v6, v1, v2) @signature `Lc/c/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1bc352.  v0:= v0 + 1;
  #L1bc356.  goto L1bc2d6;
  #L1bc358.  v5:= new `java.lang.IllegalStateException`;
  #L1bc35c.  v6:= "Unknown object in the tree!" @kind object;
  #L1bc360.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bc366.  throw v5;
  #L1bc368.  return @kind void;
}
procedure `void` `a`(`c.p.a.a.i$d` v3 @kind this, `android.content.res.TypedArray` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/p/a/a/i$d;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1bc534.  v0:= 0I;
  #L1bc536.  v3.`c.p.a.a.i$d.l` @type ^`int`[] := v0 @kind object;
  #L1bc53a.  v0:= v3.`c.p.a.a.i$d.c` @type ^`float`;
  #L1bc53e.  v1:= "rotation" @kind object;
  #L1bc542.  v2:= 5I;
  #L1bc544.  call temp:= `a`(v4, v5, v1, v2, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc54a.  v0:= temp;
  #L1bc54c.  v3.`c.p.a.a.i$d.c` @type ^`float` := v0;
  #L1bc550.  v0:= v3.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc554.  v1:= 1I;
  #L1bc556.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L1bc55c.  v0:= temp;
  #L1bc55e.  v3.`c.p.a.a.i$d.d` @type ^`float` := v0;
  #L1bc562.  v0:= v3.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc566.  v1:= 2I;
  #L1bc568.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L1bc56e.  v0:= temp;
  #L1bc570.  v3.`c.p.a.a.i$d.e` @type ^`float` := v0;
  #L1bc574.  v0:= v3.`c.p.a.a.i$d.f` @type ^`float`;
  #L1bc578.  v1:= "scaleX" @kind object;
  #L1bc57c.  v2:= 3I;
  #L1bc57e.  call temp:= `a`(v4, v5, v1, v2, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc584.  v0:= temp;
  #L1bc586.  v3.`c.p.a.a.i$d.f` @type ^`float` := v0;
  #L1bc58a.  v0:= v3.`c.p.a.a.i$d.g` @type ^`float`;
  #L1bc58e.  v1:= "scaleY" @kind object;
  #L1bc592.  v2:= 4I;
  #L1bc594.  call temp:= `a`(v4, v5, v1, v2, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc59a.  v0:= temp;
  #L1bc59c.  v3.`c.p.a.a.i$d.g` @type ^`float` := v0;
  #L1bc5a0.  v0:= v3.`c.p.a.a.i$d.h` @type ^`float`;
  #L1bc5a4.  v1:= "translateX" @kind object;
  #L1bc5a8.  v2:= 6I;
  #L1bc5aa.  call temp:= `a`(v4, v5, v1, v2, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc5b0.  v0:= temp;
  #L1bc5b2.  v3.`c.p.a.a.i$d.h` @type ^`float` := v0;
  #L1bc5b6.  v0:= v3.`c.p.a.a.i$d.i` @type ^`float`;
  #L1bc5ba.  v1:= "translateY" @kind object;
  #L1bc5be.  v2:= 7I;
  #L1bc5c0.  call temp:= `a`(v4, v5, v1, v2, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L1bc5c6.  v5:= temp;
  #L1bc5c8.  v3.`c.p.a.a.i$d.i` @type ^`float` := v5;
  #L1bc5cc.  v5:= 0I;
  #L1bc5ce.  call temp:= `getString`(v4, v5) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L1bc5d4.  v4:= temp @kind object;
  #L1bc5d6.  if v4 == 0 then goto L1bc5de;
  #L1bc5da.  v3.`c.p.a.a.i$d.m` @type ^`java.lang.String` := v4 @kind object;
  #L1bc5de.  call `b`(v3) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc5e4.  return @kind void;
}
procedure `void` `b`(`c.p.a.a.i$d` v4 @kind this) @signature `Lc/p/a/a/i$d;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bc4c0.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc4c4.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L1bc4ca.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc4ce.  v1:= v4.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc4d2.  v1:= -v1 @kind float;
  #L1bc4d4.  v2:= v4.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc4d8.  v2:= -v2 @kind float;
  #L1bc4da.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L1bc4e0.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc4e4.  v1:= v4.`c.p.a.a.i$d.f` @type ^`float`;
  #L1bc4e8.  v2:= v4.`c.p.a.a.i$d.g` @type ^`float`;
  #L1bc4ec.  call temp:= `postScale`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L1bc4f2.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc4f6.  v1:= v4.`c.p.a.a.i$d.c` @type ^`float`;
  #L1bc4fa.  v2:= 0I;
  #L1bc4fc.  call temp:= `postRotate`(v0, v1, v2, v2) @signature `Landroid/graphics/Matrix;.postRotate:(FFF)Z` @kind virtual;
  #L1bc502.  v0:= v4.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc506.  v1:= v4.`c.p.a.a.i$d.h` @type ^`float`;
  #L1bc50a.  v2:= v4.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc50e.  v1:= v1 + v2 @kind float;
  #L1bc510.  v2:= v4.`c.p.a.a.i$d.i` @type ^`float`;
  #L1bc514.  v3:= v4.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc518.  v2:= v2 + v3 @kind float;
  #L1bc51a.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L1bc520.  return @kind void;
}
procedure `void` `a`(`c.p.a.a.i$d` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/p/a/a/i$d;.a:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc37c.  v0:= `@@c.p.a.a.a.b` @type ^`int`[] @kind object;
  #L1bc380.  call temp:= `a`(v2, v4, v3, v0) @signature `Lc/e/h/e/g;.a:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L1bc386.  v2:= temp @kind object;
  #L1bc388.  call `a`(v1, v2, v5) @signature `Lc/p/a/a/i$d;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L1bc38e.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1bc394.  return @kind void;
}
procedure `boolean` `a`(`c.p.a.a.i$d` v3 @kind this) @signature `Lc/p/a/a/i$d;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1bc04c.  v0:= 0I;
  #L1bc04e.  v1:= 0I;
  #L1bc050.  v2:= v3.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc054.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1bc05a.  v2:= temp;
  #L1bc05c.  if v1 >= v2 then goto L1bc086;
  #L1bc060.  v2:= v3.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc064.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1bc06a.  v2:= temp @kind object;
  #L1bc06c.  v2:= (`c.p.a.a.i$e`) v2 @kind object;
  #L1bc070.  call temp:= `a`(v2) @signature `Lc/p/a/a/i$e;.a:()Z` @kind virtual;
  #L1bc076.  v2:= temp;
  #L1bc078.  if v2 == 0 then goto L1bc080;
  #L1bc07c.  v0:= 1I;
  #L1bc07e.  return v0;
  #L1bc080.  v1:= v1 + 1;
  #L1bc084.  goto L1bc050;
  #L1bc086.  return v0;
}
procedure `boolean` `a`(`c.p.a.a.i$d` v3 @kind this, `int`[] v4 @kind object) @signature `Lc/p/a/a/i$d;.a:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1bc098.  v0:= 0I;
  #L1bc09a.  v1:= 0I;
  #L1bc09c.  v2:= v3.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc0a0.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1bc0a6.  v2:= temp;
  #L1bc0a8.  if v0 >= v2 then goto L1bc0cc;
  #L1bc0ac.  v2:= v3.`c.p.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L1bc0b0.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1bc0b6.  v2:= temp @kind object;
  #L1bc0b8.  v2:= (`c.p.a.a.i$e`) v2 @kind object;
  #L1bc0bc.  call temp:= `a`(v2, v4) @signature `Lc/p/a/a/i$e;.a:([I)Z` @kind virtual;
  #L1bc0c2.  v2:= temp;
  #L1bc0c4.  v1:= v1 ^| v2 @kind int;
  #L1bc0c6.  v0:= v0 + 1;
  #L1bc0ca.  goto L1bc09c;
  #L1bc0cc.  return v1;
}
procedure `java.lang.String` `getGroupName`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getGroupName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc188.  v0:= v1.`c.p.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L1bc18c.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `getLocalMatrix`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getLocalMatrix:()Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc034.  v0:= v1.`c.p.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L1bc038.  return v0 @kind object;
}
procedure `float` `getPivotX`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getPivotX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc0e0.  v0:= v1.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc0e4.  return v0;
}
procedure `float` `getPivotY`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getPivotY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc0f8.  v0:= v1.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc0fc.  return v0;
}
procedure `float` `getRotation`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getRotation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc110.  v0:= v1.`c.p.a.a.i$d.c` @type ^`float`;
  #L1bc114.  return v0;
}
procedure `float` `getScaleX`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc128.  v0:= v1.`c.p.a.a.i$d.f` @type ^`float`;
  #L1bc12c.  return v0;
}
procedure `float` `getScaleY`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc140.  v0:= v1.`c.p.a.a.i$d.g` @type ^`float`;
  #L1bc144.  return v0;
}
procedure `float` `getTranslateX`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getTranslateX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc158.  v0:= v1.`c.p.a.a.i$d.h` @type ^`float`;
  #L1bc15c.  return v0;
}
procedure `float` `getTranslateY`(`c.p.a.a.i$d` v1 @kind this) @signature `Lc/p/a/a/i$d;.getTranslateY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc170.  v0:= v1.`c.p.a.a.i$d.i` @type ^`float`;
  #L1bc174.  return v0;
}
procedure `void` `setPivotX`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setPivotX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3a8.  v0:= v1.`c.p.a.a.i$d.d` @type ^`float`;
  #L1bc3ac.  v0:= fcmpl(v2, v0);
  #L1bc3b0.  if v0 == 0 then goto L1bc3be;
  #L1bc3b4.  v1.`c.p.a.a.i$d.d` @type ^`float` := v2;
  #L1bc3b8.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc3be.  return @kind void;
}
procedure `void` `setPivotY`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setPivotY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3d0.  v0:= v1.`c.p.a.a.i$d.e` @type ^`float`;
  #L1bc3d4.  v0:= fcmpl(v2, v0);
  #L1bc3d8.  if v0 == 0 then goto L1bc3e6;
  #L1bc3dc.  v1.`c.p.a.a.i$d.e` @type ^`float` := v2;
  #L1bc3e0.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc3e6.  return @kind void;
}
procedure `void` `setRotation`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setRotation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc3f8.  v0:= v1.`c.p.a.a.i$d.c` @type ^`float`;
  #L1bc3fc.  v0:= fcmpl(v2, v0);
  #L1bc400.  if v0 == 0 then goto L1bc40e;
  #L1bc404.  v1.`c.p.a.a.i$d.c` @type ^`float` := v2;
  #L1bc408.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc40e.  return @kind void;
}
procedure `void` `setScaleX`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setScaleX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc420.  v0:= v1.`c.p.a.a.i$d.f` @type ^`float`;
  #L1bc424.  v0:= fcmpl(v2, v0);
  #L1bc428.  if v0 == 0 then goto L1bc436;
  #L1bc42c.  v1.`c.p.a.a.i$d.f` @type ^`float` := v2;
  #L1bc430.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc436.  return @kind void;
}
procedure `void` `setScaleY`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setScaleY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc448.  v0:= v1.`c.p.a.a.i$d.g` @type ^`float`;
  #L1bc44c.  v0:= fcmpl(v2, v0);
  #L1bc450.  if v0 == 0 then goto L1bc45e;
  #L1bc454.  v1.`c.p.a.a.i$d.g` @type ^`float` := v2;
  #L1bc458.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc45e.  return @kind void;
}
procedure `void` `setTranslateX`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setTranslateX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc470.  v0:= v1.`c.p.a.a.i$d.h` @type ^`float`;
  #L1bc474.  v0:= fcmpl(v2, v0);
  #L1bc478.  if v0 == 0 then goto L1bc486;
  #L1bc47c.  v1.`c.p.a.a.i$d.h` @type ^`float` := v2;
  #L1bc480.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc486.  return @kind void;
}
procedure `void` `setTranslateY`(`c.p.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/p/a/a/i$d;.setTranslateY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bc498.  v0:= v1.`c.p.a.a.i$d.i` @type ^`float`;
  #L1bc49c.  v0:= fcmpl(v2, v0);
  #L1bc4a0.  if v0 == 0 then goto L1bc4ae;
  #L1bc4a4.  v1.`c.p.a.a.i$d.i` @type ^`float` := v2;
  #L1bc4a8.  call `b`(v1) @signature `Lc/p/a/a/i$d;.b:()V` @kind direct;
  #L1bc4ae.  return @kind void;
}
