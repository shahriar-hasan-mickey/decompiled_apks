record `c.j.d$b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.j.d$b.a` @AccessFlag PRIVATE_FINAL;
  `java.io.FileDescriptor` `c.j.d$b.b` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.d$b.c` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.d$b.d` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.d$b.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.j.d$b.f` @AccessFlag PRIVATE;
  `int` `c.j.d$b.g` @AccessFlag PRIVATE;
  `int` `c.j.d$b.h` @AccessFlag PRIVATE;
  `int` `c.j.d$b.i` @AccessFlag PRIVATE;
  `int` `c.j.d$b.j` @AccessFlag PRIVATE;
  `android.os.Handler` `c.j.d$b.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.j.d$b` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `int` v10 ) @signature `Lc/j/d$b;.<init>:(Ljava/lang/String;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ab904.  v2:= 0I;
  #L1ab906.  v0:= v6 @kind object;
  #L1ab908.  v1:= v7 @kind object;
  #L1ab90a.  v3:= v8;
  #L1ab90c.  v4:= v9;
  #L1ab90e.  v5:= v10;
  #L1ab910.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lc/j/d$b;.<init>:(Ljava/lang/String;Ljava/io/FileDescriptor;III)V` @kind direct;
  #L1ab916.  return @kind void;
}
procedure `void` `<init>`(`c.j.d$b` v2 @kind this, `java.lang.String` v3 @kind object, `java.io.FileDescriptor` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lc/j/d$b;.<init>:(Ljava/lang/String;Ljava/io/FileDescriptor;III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ab928.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab92e.  v0:= 1I;
  #L1ab930.  v2.`c.j.d$b.f` @type ^`boolean` := v0 @kind boolean;
  #L1ab934.  v1:= 100I;
  #L1ab938.  v2.`c.j.d$b.g` @type ^`int` := v1;
  #L1ab93c.  v2.`c.j.d$b.h` @type ^`int` := v0;
  #L1ab940.  v0:= 0I;
  #L1ab942.  v2.`c.j.d$b.i` @type ^`int` := v0;
  #L1ab946.  v2.`c.j.d$b.j` @type ^`int` := v0;
  #L1ab94a.  if v5 <= 0 then goto L1ab968;
  #L1ab94e.  if v6 <= 0 then goto L1ab968;
  #L1ab952.  v2.`c.j.d$b.a` @type ^`java.lang.String` := v3 @kind object;
  #L1ab956.  v2.`c.j.d$b.b` @type ^`java.io.FileDescriptor` := v4 @kind object;
  #L1ab95a.  v2.`c.j.d$b.c` @type ^`int` := v5;
  #L1ab95e.  v2.`c.j.d$b.d` @type ^`int` := v6;
  #L1ab962.  v2.`c.j.d$b.e` @type ^`int` := v7;
  #L1ab966.  return @kind void;
  #L1ab968.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ab96c.  v4:= new `java.lang.StringBuilder`;
  #L1ab970.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab976.  v7:= "Invalid image size: " @kind object;
  #L1ab97a.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab980.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab986.  v5:= "x" @kind object;
  #L1ab98a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab990.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab996.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab99c.  v4:= temp @kind object;
  #L1ab99e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab9a4.  throw v3;
}
procedure `c.j.d$b` `a`(`c.j.d$b` v3 @kind this, `int` v4 ) @signature `Lc/j/d$b;.a:(I)Lc/j/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ab86c.  if v4 <= 0 then goto L1ab876;
  #L1ab870.  v3.`c.j.d$b.h` @type ^`int` := v4;
  #L1ab874.  return v3 @kind object;
  #L1ab876.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ab87a.  v1:= new `java.lang.StringBuilder`;
  #L1ab87e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab884.  v2:= "Invalid maxImage: " @kind object;
  #L1ab888.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab88e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab894.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab89a.  v4:= temp @kind object;
  #L1ab89c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab8a2.  throw v0;
}
procedure `c.j.d` `a`(`c.j.d$b` v13 @kind this) @signature `Lc/j/d$b;.a:()Lc/j/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1ab820.  v12:= new `c.j.d`;
  #L1ab824.  v1:= v13.`c.j.d$b.a` @type ^`java.lang.String` @kind object;
  #L1ab828.  v2:= v13.`c.j.d$b.b` @type ^`java.io.FileDescriptor` @kind object;
  #L1ab82c.  v3:= v13.`c.j.d$b.c` @type ^`int`;
  #L1ab830.  v4:= v13.`c.j.d$b.d` @type ^`int`;
  #L1ab834.  v5:= v13.`c.j.d$b.j` @type ^`int`;
  #L1ab838.  v6:= v13.`c.j.d$b.f` @type ^`boolean` @kind boolean;
  #L1ab83c.  v7:= v13.`c.j.d$b.g` @type ^`int`;
  #L1ab840.  v8:= v13.`c.j.d$b.h` @type ^`int`;
  #L1ab844.  v9:= v13.`c.j.d$b.i` @type ^`int`;
  #L1ab848.  v10:= v13.`c.j.d$b.e` @type ^`int`;
  #L1ab84c.  v11:= v13.`c.j.d$b.k` @type ^`android.os.Handler` @kind object;
  #L1ab850.  v0:= v12 @kind object;
  #L1ab852.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lc/j/d;.<init>:(Ljava/lang/String;Ljava/io/FileDescriptor;IIIZIIIILandroid/os/Handler;)V` @kind direct;
  #L1ab858.  return v12 @kind object;
}
procedure `c.j.d$b` `b`(`c.j.d$b` v3 @kind this, `int` v4 ) @signature `Lc/j/d$b;.b:(I)Lc/j/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ab8b4.  if v4 < 0 then goto L1ab8c6;
  #L1ab8b8.  v0:= 100I;
  #L1ab8bc.  if v4 > v0 then goto L1ab8c6;
  #L1ab8c0.  v3.`c.j.d$b.g` @type ^`int` := v4;
  #L1ab8c4.  return v3 @kind object;
  #L1ab8c6.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ab8ca.  v1:= new `java.lang.StringBuilder`;
  #L1ab8ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab8d4.  v2:= "Invalid quality: " @kind object;
  #L1ab8d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab8de.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab8e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab8ea.  v4:= temp @kind object;
  #L1ab8ec.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab8f2.  throw v0;
}
