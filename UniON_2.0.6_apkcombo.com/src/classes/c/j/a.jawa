record `c.j.a` @kind class @AccessFlag PUBLIC {
  `float`[] `c.j.a.a` @AccessFlag PRIVATE_FINAL;
  `java.nio.FloatBuffer` `c.j.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.a.c` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.a.d` @AccessFlag PRIVATE_FINAL;
  `c.j.e` `c.j.a.e` @AccessFlag PRIVATE;
}
global `float`[] `@@c.j.a.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.FloatBuffer` `@@c.j.a.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/j/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a9f50.  v0:= 8I;
  #L1a9f54.  v0:= new `float`[v0];
  #L1a9f58.  goto L1a9f74;
  #L1a9f5e.  `@@c.j.a.f` @type ^`float`[] := v0 @kind object;
  #L1a9f62.  v0:= `@@c.j.a.f` @type ^`float`[] @kind object;
  #L1a9f66.  call temp:= `a`(v0) @signature `Lc/j/a;.a:([F)Ljava/nio/FloatBuffer;` @kind static;
  #L1a9f6c.  v0:= temp @kind object;
  #L1a9f6e.  `@@c.j.a.g` @type ^`java.nio.FloatBuffer` := v0 @kind object;
  #L1a9f72.  return @kind void;
  #L1a9f74.  v0:= (-1082130432I, -1082130432I, 1065353216I, -1082130432I, -1082130432I, 1065353216I, 1065353216I, 1065353216I) @kind object;
  #L1a9f9b.  goto L1a9f5e;
}
procedure `void` `<init>`(`c.j.a` v1 @kind this, `c.j.e` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc/j/a;.<init>:(Lc/j/e;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a9fac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a9fb2.  v0:= 8I;
  #L1a9fb6.  v0:= new `float`[v0];
  #L1a9fba.  v1.`c.j.a.a` @type ^`float`[] := v0 @kind object;
  #L1a9fbe.  v0:= v1.`c.j.a.a` @type ^`float`[] @kind object;
  #L1a9fc2.  call temp:= `a`(v0) @signature `Lc/j/a;.a:([F)Ljava/nio/FloatBuffer;` @kind static;
  #L1a9fc8.  v0:= temp @kind object;
  #L1a9fca.  v1.`c.j.a.b` @type ^`java.nio.FloatBuffer` := v0 @kind object;
  #L1a9fce.  v1.`c.j.a.e` @type ^`c.j.e` := v2 @kind object;
  #L1a9fd2.  v1.`c.j.a.c` @type ^`int` := v3;
  #L1a9fd6.  v1.`c.j.a.d` @type ^`int` := v4;
  #L1a9fda.  return @kind void;
}
procedure `java.nio.FloatBuffer` `a`(`float`[] v2 @kind object) @signature `Lc/j/a;.a:([F)Ljava/nio/FloatBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1a9f0c.  v0:= length @variable v2;
  #L1a9f0e.  v0:= v0 * 4;
  #L1a9f12.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1a9f18.  v0:= temp @kind object;
  #L1a9f1a.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L1a9f20.  v1:= temp @kind object;
  #L1a9f22.  call temp:= `order`(v0, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1a9f28.  call temp:= `asFloatBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asFloatBuffer:()Ljava/nio/FloatBuffer;` @kind virtual;
  #L1a9f2e.  v0:= temp @kind object;
  #L1a9f30.  call temp:= `put`(v0, v2) @signature `Ljava/nio/FloatBuffer;.put:([F)Ljava/nio/FloatBuffer;` @kind virtual;
  #L1a9f36.  v2:= 0I;
  #L1a9f38.  call temp:= `position`(v0, v2) @signature `Ljava/nio/FloatBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1a9f3e.  return v0 @kind object;
}
procedure `int` `a`(`c.j.a` v1 @kind this) @signature `Lc/j/a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9eec.  v0:= v1.`c.j.a.e` @type ^`c.j.e` @kind object;
  #L1a9ef0.  call temp:= `a`(v0) @signature `Lc/j/e;.a:()I` @kind virtual;
  #L1a9ef6.  v0:= temp;
  #L1a9ef8.  return v0;
}
procedure `void` `a`(`c.j.a` v1 @kind this, `int` v2 , `android.graphics.Bitmap` v3 @kind object) @signature `Lc/j/a;.a:(ILandroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa02c.  v0:= v1.`c.j.a.e` @type ^`c.j.e` @kind object;
  #L1aa030.  call `a`(v0, v2, v3) @signature `Lc/j/e;.a:(ILandroid/graphics/Bitmap;)V` @kind virtual;
  #L1aa036.  return @kind void;
}
procedure `void` `a`(`c.j.a` v11 @kind this, `int` v12 , `float`[] v13 @kind object, `android.graphics.Rect` v14 @kind object) @signature `Lc/j/a;.a:(I[FLandroid/graphics/Rect;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a9fec.  call `a`(v11, v14) @signature `Lc/j/a;.a:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1a9ff2.  v0:= v11.`c.j.a.e` @type ^`c.j.e` @kind object;
  #L1a9ff6.  v1:= `@@c.j.e.g` @type ^`float`[] @kind object;
  #L1a9ffa.  v2:= `@@c.j.a.g` @type ^`java.nio.FloatBuffer` @kind object;
  #L1a9ffe.  v8:= v11.`c.j.a.b` @type ^`java.nio.FloatBuffer` @kind object;
  #L1aa002.  v3:= 0I;
  #L1aa004.  v4:= 4I;
  #L1aa006.  v5:= 2I;
  #L1aa008.  v6:= 8I;
  #L1aa00c.  v10:= 8I;
  #L1aa010.  v7:= v13 @kind object;
  #L1aa012.  v9:= v12;
  #L1aa014.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lc/j/e;.a:([FLjava/nio/FloatBuffer;IIII[FLjava/nio/FloatBuffer;II)V` @kind virtual;
  #L1aa01a.  return @kind void;
}
procedure `void` `a`(`c.j.a` v10 @kind this, `android.graphics.Rect` v11 @kind object) @signature `Lc/j/a;.a:(Landroid/graphics/Rect;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1aa074.  v0:= v10.`c.j.a.a` @type ^`float`[] @kind object;
  #L1aa078.  v1:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L1aa07c.  v2:= (`float`) v1 @kind i2f;
  #L1aa07e.  v3:= v10.`c.j.a.c` @type ^`int`;
  #L1aa082.  v4:= (`float`) v3 @kind i2f;
  #L1aa084.  v2:= v2 / v4 @kind float;
  #L1aa086.  v4:= 0I;
  #L1aa088.  v0[v4]:= v2;
  #L1aa08c.  v2:= v11.`android.graphics.Rect.bottom` @type ^`int`;
  #L1aa090.  v5:= (`float`) v2 @kind i2f;
  #L1aa092.  v6:= v10.`c.j.a.d` @type ^`int`;
  #L1aa096.  v7:= (`float`) v6 @kind i2f;
  #L1aa098.  v5:= v5 / v7 @kind float;
  #L1aa09a.  v7:= 1.0F;
  #L1aa09e.  v5:= v7 - v5 @kind float;
  #L1aa0a2.  v8:= 1I;
  #L1aa0a4.  v0[v8]:= v5;
  #L1aa0a8.  v5:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L1aa0ac.  v8:= (`float`) v5 @kind i2f;
  #L1aa0ae.  v9:= (`float`) v3 @kind i2f;
  #L1aa0b0.  v8:= v8 / v9 @kind float;
  #L1aa0b2.  v9:= 2I;
  #L1aa0b4.  v0[v9]:= v8;
  #L1aa0b8.  v2:= (`float`) v2 @kind i2f;
  #L1aa0ba.  v8:= (`float`) v6 @kind i2f;
  #L1aa0bc.  v2:= v2 / v8 @kind float;
  #L1aa0be.  v2:= v7 - v2 @kind float;
  #L1aa0c2.  v8:= 3I;
  #L1aa0c4.  v0[v8]:= v2;
  #L1aa0c8.  v1:= (`float`) v1 @kind i2f;
  #L1aa0ca.  v2:= (`float`) v3 @kind i2f;
  #L1aa0cc.  v1:= v1 / v2 @kind float;
  #L1aa0ce.  v2:= 4I;
  #L1aa0d0.  v0[v2]:= v1;
  #L1aa0d4.  v11:= v11.`android.graphics.Rect.top` @type ^`int`;
  #L1aa0d8.  v1:= (`float`) v11 @kind i2f;
  #L1aa0da.  v2:= (`float`) v6 @kind i2f;
  #L1aa0dc.  v1:= v1 / v2 @kind float;
  #L1aa0de.  v1:= v7 - v1 @kind float;
  #L1aa0e2.  v2:= 5I;
  #L1aa0e4.  v0[v2]:= v1;
  #L1aa0e8.  v1:= (`float`) v5 @kind i2f;
  #L1aa0ea.  v2:= (`float`) v3 @kind i2f;
  #L1aa0ec.  v1:= v1 / v2 @kind float;
  #L1aa0ee.  v2:= 6I;
  #L1aa0f0.  v0[v2]:= v1;
  #L1aa0f4.  v11:= (`float`) v11 @kind i2f;
  #L1aa0f6.  v1:= (`float`) v6 @kind i2f;
  #L1aa0f8.  v11:= v11 / v1 @kind float;
  #L1aa0fa.  v7:= v7 - v11 @kind float;
  #L1aa0fc.  v11:= 7I;
  #L1aa0fe.  v0[v11]:= v7;
  #L1aa102.  v11:= v10.`c.j.a.b` @type ^`java.nio.FloatBuffer` @kind object;
  #L1aa106.  call temp:= `put`(v11, v0) @signature `Ljava/nio/FloatBuffer;.put:([F)Ljava/nio/FloatBuffer;` @kind virtual;
  #L1aa10c.  v11:= v10.`c.j.a.b` @type ^`java.nio.FloatBuffer` @kind object;
  #L1aa110.  call temp:= `position`(v11, v4) @signature `Ljava/nio/FloatBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L1aa116.  return @kind void;
}
procedure `void` `a`(`c.j.a` v1 @kind this, `boolean` v2 ) @signature `Lc/j/a;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa048.  v0:= v1.`c.j.a.e` @type ^`c.j.e` @kind object;
  #L1aa04c.  if v0 == 0 then goto L1aa060;
  #L1aa050.  if v2 == 0 then goto L1aa05a;
  #L1aa054.  call `b`(v0) @signature `Lc/j/e;.b:()V` @kind virtual;
  #L1aa05a.  v2:= 0I;
  #L1aa05c.  v1.`c.j.a.e` @type ^`c.j.e` := v2 @kind object;
  #L1aa060.  return @kind void;
}
