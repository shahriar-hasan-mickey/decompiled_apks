record `c.j.d$c` @kind class @AccessFlag  extends `c.j.c$c` @kind class {
  `boolean` `c.j.d$c.a` @AccessFlag PRIVATE;
  `c.j.d` `c.j.d$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.j.d$c` v0 @kind this, `c.j.d` v1 @kind object) @signature `Lc/j/d$c;.<init>:(Lc/j/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ab9b8.  v0.`c.j.d$c.b` @type ^`c.j.d` := v1 @kind object;
  #L1ab9bc.  call `<init>`(v0) @signature `Lc/j/c$c;.<init>:()V` @kind direct;
  #L1ab9c2.  return @kind void;
}
procedure `void` `a`(`c.j.d$c` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1abc18.  v0:= v1.`c.j.d$c.a` @type ^`boolean` @kind boolean;
  #L1abc1c.  if v0 == 0 then goto L1abc22;
  #L1abc20.  return @kind void;
  #L1abc22.  v0:= 1I;
  #L1abc24.  v1.`c.j.d$c.a` @type ^`boolean` := v0 @kind boolean;
  #L1abc28.  v0:= v1.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abc2c.  v0:= v0.`c.j.d.i` @type ^`c.j.d$d` @kind object;
  #L1abc30.  call `a`(v0, v2) @signature `Lc/j/d$d;.a:(Ljava/lang/Exception;)V` @kind virtual;
  #L1abc36.  return @kind void;
}
procedure `void` `a`(`c.j.d$c` v0 @kind this, `c.j.c` v1 @kind object) @signature `Lc/j/d$c;.a:(Lc/j/c;)V` @AccessFlag PUBLIC {
    temp;

  #L1ab9d4.  v1:= 0I;
  #L1ab9d6.  call `a`(v0, v1) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @kind direct;
  #L1ab9dc.  return @kind void;
}
procedure `void` `a`(`c.j.d$c` v0 @kind this, `c.j.c` v1 @kind object, `android.media.MediaCodec$CodecException` v2 @kind object) @signature `Lc/j/d$c;.a:(Lc/j/c;Landroid/media/MediaCodec$CodecException;)V` @AccessFlag PUBLIC {
    temp;

  #L1abab8.  call `a`(v0, v2) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @kind direct;
  #L1ababe.  return @kind void;
}
procedure `void` `a`(`c.j.d$c` v4 @kind this, `c.j.c` v5 @kind object, `android.media.MediaFormat` v6 @kind object) @signature `Lc/j/d$c;.a:(Lc/j/c;Landroid/media/MediaFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1abad0.  v5:= v4.`c.j.d$c.a` @type ^`boolean` @kind boolean;
  #L1abad4.  if v5 == 0 then goto L1abada;
  #L1abad8.  return @kind void;
  #L1abada.  v5:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abade.  v5:= v5.`c.j.d.m` @type ^`int`[] @kind object;
  #L1abae2.  if v5 == 0 then goto L1abafc;
  #L1abae6.  v5:= new `java.lang.IllegalStateException`;
  #L1abaea.  v6:= "Output format changed after muxer started" @kind object;
  #L1abaee.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abaf4.  call `a`(v4, v5) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @kind direct;
  #L1abafa.  return @kind void;
  #L1abafc.  v5:= 1I;
  #L1abafe.  v0:= "grid-rows" @kind object;
  #L1abb02.  call temp:= `getInteger`(v6, v0) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L1abb08.  v0:= temp;
  #L1abb0a.  v1:= "grid-cols" @kind object;
  #L1abb0e.  call temp:= `getInteger`(v6, v1) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L1abb14.  v1:= temp;
  #L1abb16.  v2:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb1a.  v0:= v0 * v1 @kind int;
  #L1abb1e.  v2.`c.j.d.e` @type ^`int` := v0;
  #L1abb22.  goto L1abb2c;
  #L1abb24.  v0:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb28.  v0.`c.j.d.e` @type ^`int` := v5;
  #L1abb2c.  v0:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb30.  v1:= v0.`c.j.d.g` @type ^`int`;
  #L1abb34.  v1:= new `int`[v1];
  #L1abb38.  v0.`c.j.d.m` @type ^`int`[] := v1 @kind object;
  #L1abb3c.  v0:= v0.`c.j.d.f` @type ^`int`;
  #L1abb40.  if v0 <= 0 then goto L1abb8a;
  #L1abb44.  v0:= new `java.lang.StringBuilder`;
  #L1abb48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1abb4e.  v1:= "setting rotation: " @kind object;
  #L1abb52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abb58.  v1:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb5c.  v1:= v1.`c.j.d.f` @type ^`int`;
  #L1abb60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abb66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1abb6c.  v0:= temp @kind object;
  #L1abb6e.  v1:= "HeifWriter" @kind object;
  #L1abb72.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1abb78.  v0:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb7c.  v1:= v0.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1abb80.  v0:= v0.`c.j.d.f` @type ^`int`;
  #L1abb84.  call `setOrientationHint`(v1, v0) @signature `Landroid/media/MediaMuxer;.setOrientationHint:(I)V` @kind virtual;
  #L1abb8a.  v0:= 0I;
  #L1abb8c.  v1:= 0I;
  #L1abb8e.  v2:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abb92.  v3:= v2.`c.j.d.m` @type ^`int`[] @kind object;
  #L1abb96.  v3:= length @variable v3;
  #L1abb98.  if v1 >= v3 then goto L1abbd2;
  #L1abb9c.  v2:= v2.`c.j.d.h` @type ^`int`;
  #L1abba0.  if v1 != v2 then goto L1abba8;
  #L1abba4.  v2:= 1I;
  #L1abba6.  goto L1abbaa;
  #L1abba8.  v2:= 0I;
  #L1abbaa.  v3:= "is-default" @kind object;
  #L1abbae.  call `setInteger`(v6, v3, v2) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L1abbb4.  v2:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abbb8.  v3:= v2.`c.j.d.m` @type ^`int`[] @kind object;
  #L1abbbc.  v2:= v2.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1abbc0.  call temp:= `addTrack`(v2, v6) @signature `Landroid/media/MediaMuxer;.addTrack:(Landroid/media/MediaFormat;)I` @kind virtual;
  #L1abbc6.  v2:= temp;
  #L1abbc8.  v3[v1]:= v2;
  #L1abbcc.  v1:= v1 + 1;
  #L1abbd0.  goto L1abb8e;
  #L1abbd2.  v6:= v2.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1abbd6.  call `start`(v6) @signature `Landroid/media/MediaMuxer;.start:()V` @kind virtual;
  #L1abbdc.  v6:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abbe0.  v6:= v6.`c.j.d.l` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1abbe4.  call `set`(v6, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L1abbea.  v5:= v4.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1abbee.  call `l`(v5) @signature `Lc/j/d;.l:()V` @kind virtual;
  #L1abbf4.  return @kind void;
  catch `java.lang.NullPointerException` @[L1abafe..L1abb22] goto L1abb24;
  catch `java.lang.ClassCastException` @[L1abafe..L1abb22] goto L1abb24;
}
procedure `void` `a`(`c.j.d$c` v8 @kind this, `c.j.c` v9 @kind object, `java.nio.ByteBuffer` v10 @kind object) @signature `Lc/j/d$c;.a:(Lc/j/c;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ab9f0.  v9:= v8.`c.j.d$c.a` @type ^`boolean` @kind boolean;
  #L1ab9f4.  if v9 == 0 then goto L1ab9fa;
  #L1ab9f8.  return @kind void;
  #L1ab9fa.  v9:= v8.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1ab9fe.  v0:= v9.`c.j.d.m` @type ^`int`[] @kind object;
  #L1aba02.  if v0 != 0 then goto L1aba1c;
  #L1aba06.  v9:= new `java.lang.IllegalStateException`;
  #L1aba0a.  v10:= "Output buffer received before format info" @kind object;
  #L1aba0e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aba14.  call `a`(v8, v9) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @kind direct;
  #L1aba1a.  return @kind void;
  #L1aba1c.  v0:= v9.`c.j.d.n` @type ^`int`;
  #L1aba20.  v1:= v9.`c.j.d.g` @type ^`int`;
  #L1aba24.  v9:= v9.`c.j.d.e` @type ^`int`;
  #L1aba28.  v1:= v1 * v9 @kind int;
  #L1aba2c.  if v0 >= v1 then goto L1aba78;
  #L1aba30.  v9:= new `android.media.MediaCodec$BufferInfo`;
  #L1aba34.  call `<init>`(v9) @signature `Landroid/media/MediaCodec$BufferInfo;.<init>:()V` @kind direct;
  #L1aba3a.  call temp:= `position`(v10) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1aba40.  v3:= temp;
  #L1aba42.  call temp:= `remaining`(v10) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1aba48.  v4:= temp;
  #L1aba4a.  v5:= 0L;
  #L1aba4e.  v7:= 0I;
  #L1aba50.  v2:= v9 @kind object;
  #L1aba52.  call `set`(v2, v3, v4, v5, v7) @signature `Landroid/media/MediaCodec$BufferInfo;.set:(IIJI)V` @kind virtual;
  #L1aba58.  v0:= v8.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1aba5c.  v1:= v0.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1aba60.  v2:= v0.`c.j.d.m` @type ^`int`[] @kind object;
  #L1aba64.  v3:= v0.`c.j.d.n` @type ^`int`;
  #L1aba68.  v0:= v0.`c.j.d.e` @type ^`int`;
  #L1aba6c.  v3:= v3 / v0 @kind int;
  #L1aba6e.  v0:= v2[v3];
  #L1aba72.  call `writeSampleData`(v1, v0, v10, v9) @signature `Landroid/media/MediaMuxer;.writeSampleData:(ILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V` @kind virtual;
  #L1aba78.  v9:= v8.`c.j.d$c.b` @type ^`c.j.d` @kind object;
  #L1aba7c.  v10:= v9.`c.j.d.n` @type ^`int`;
  #L1aba80.  v10:= v10 + 1;
  #L1aba84.  v9.`c.j.d.n` @type ^`int` := v10;
  #L1aba88.  v10:= v9.`c.j.d.n` @type ^`int`;
  #L1aba8c.  v0:= v9.`c.j.d.g` @type ^`int`;
  #L1aba90.  v9:= v9.`c.j.d.e` @type ^`int`;
  #L1aba94.  v0:= v0 * v9 @kind int;
  #L1aba98.  if v10 != v0 then goto L1abaa4;
  #L1aba9c.  v9:= 0I;
  #L1aba9e.  call `a`(v8, v9) @signature `Lc/j/d$c;.a:(Ljava/lang/Exception;)V` @kind direct;
  #L1abaa4.  return @kind void;
}
