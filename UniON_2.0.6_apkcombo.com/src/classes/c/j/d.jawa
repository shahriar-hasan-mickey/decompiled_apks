record `c.j.d` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.AutoCloseable` @kind interface {
  `int` `c.j.d.b` @AccessFlag PRIVATE_FINAL;
  `android.os.HandlerThread` `c.j.d.c` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `c.j.d.d` @AccessFlag PRIVATE_FINAL;
  `int` `c.j.d.e` @AccessFlag ;
  `int` `c.j.d.f` @AccessFlag FINAL;
  `int` `c.j.d.g` @AccessFlag FINAL;
  `int` `c.j.d.h` @AccessFlag FINAL;
  `c.j.d$d` `c.j.d.i` @AccessFlag FINAL;
  `android.media.MediaMuxer` `c.j.d.j` @AccessFlag ;
  `c.j.c` `c.j.d.k` @AccessFlag PRIVATE;
  `java.util.concurrent.atomic.AtomicBoolean` `c.j.d.l` @AccessFlag FINAL;
  `int`[] `c.j.d.m` @AccessFlag ;
  `int` `c.j.d.n` @AccessFlag ;
  `boolean` `c.j.d.o` @AccessFlag PRIVATE;
  `java.util.List` `c.j.d.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.j.d` v13 @kind this, `java.lang.String` v14 @kind object, `java.io.FileDescriptor` v15 @kind object, `int` v16 , `int` v17 , `int` v18 , `boolean` v19 , `int` v20 , `int` v21 , `int` v22 , `int` v23 , `android.os.Handler` v24 @kind object) @signature `Lc/j/d;.<init>:(Ljava/lang/String;Ljava/io/FileDescriptor;IIIZIIIILandroid/os/Handler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1abd88.  v0:= v13 @kind object;
  #L1abd8a.  v1:= v14 @kind object;
  #L1abd8c.  v2:= v21;
  #L1abd90.  v3:= v22;
  #L1abd94.  call `<init>`(v13) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1abd9a.  v4:= new `c.j.d$d`;
  #L1abd9e.  call `<init>`(v4) @signature `Lc/j/d$d;.<init>:()V` @kind direct;
  #L1abda4.  v0.`c.j.d.i` @type ^`c.j.d$d` := v4 @kind object;
  #L1abda8.  v4:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1abdac.  v5:= 0I;
  #L1abdae.  call `<init>`(v4, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L1abdb4.  v0.`c.j.d.l` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v4 @kind object;
  #L1abdb8.  v4:= new `java.util.ArrayList`;
  #L1abdbc.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1abdc2.  v0.`c.j.d.p` @type ^`java.util.List` := v4 @kind object;
  #L1abdc6.  if v3 >= v2 then goto L1abea0;
  #L1abdca.  v4:= "image/vnd.android.heic" @kind object;
  #L1abdce.  v6:= v16;
  #L1abdd2.  v7:= v17;
  #L1abdd6.  call temp:= `createVideoFormat`(v4, v6, v7) @signature `Landroid/media/MediaFormat;.createVideoFormat:(Ljava/lang/String;II)Landroid/media/MediaFormat;` @kind static;
  #L1abddc.  v4:= 1I;
  #L1abdde.  v0.`c.j.d.e` @type ^`int` := v4;
  #L1abde2.  v4:= v18;
  #L1abde6.  v0.`c.j.d.f` @type ^`int` := v4;
  #L1abdea.  v4:= v23;
  #L1abdee.  v0.`c.j.d.b` @type ^`int` := v4;
  #L1abdf2.  v0.`c.j.d.g` @type ^`int` := v2;
  #L1abdf6.  v0.`c.j.d.h` @type ^`int` := v3;
  #L1abdfa.  v2:= 0I;
  #L1abdfc.  if v24 == 0 then goto L1abe0a;
  #L1abe00.  call temp:= `getLooper`(v24) @signature `Landroid/os/Handler;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L1abe06.  v3:= temp @kind object;
  #L1abe08.  goto L1abe0c;
  #L1abe0a.  v3:= v2 @kind object;
  #L1abe0c.  if v3 != 0 then goto L1abe3c;
  #L1abe10.  v2:= new `android.os.HandlerThread`;
  #L1abe14.  v3:= -2I;
  #L1abe16.  v4:= "HeifEncoderThread" @kind object;
  #L1abe1a.  call `<init>`(v2, v4, v3) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1abe20.  v0.`c.j.d.c` @type ^`android.os.HandlerThread` := v2 @kind object;
  #L1abe24.  v2:= v0.`c.j.d.c` @type ^`android.os.HandlerThread` @kind object;
  #L1abe28.  call `start`(v2) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L1abe2e.  v2:= v0.`c.j.d.c` @type ^`android.os.HandlerThread` @kind object;
  #L1abe32.  call temp:= `getLooper`(v2) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L1abe38.  v3:= temp @kind object;
  #L1abe3a.  goto L1abe40;
  #L1abe3c.  v0.`c.j.d.c` @type ^`android.os.HandlerThread` := v2 @kind object;
  #L1abe40.  v2:= new `android.os.Handler`;
  #L1abe44.  call `<init>`(v2, v3) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1abe4a.  v0.`c.j.d.d` @type ^`android.os.Handler` := v2 @kind object;
  #L1abe4e.  v2:= 3I;
  #L1abe50.  v3:= new `android.media.MediaMuxer`;
  #L1abe54.  if v1 == 0 then goto L1abe60;
  #L1abe58.  call `<init>`(v3, v14, v2) @signature `Landroid/media/MediaMuxer;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1abe5e.  goto L1abe68;
  #L1abe60.  v1:= v15 @kind object;
  #L1abe62.  call `<init>`(v3, v15, v2) @signature `Landroid/media/MediaMuxer;.<init>:(Ljava/io/FileDescriptor;I)V` @kind direct;
  #L1abe68.  v0.`c.j.d.j` @type ^`android.media.MediaMuxer` := v3 @kind object;
  #L1abe6c.  v1:= new `c.j.c`;
  #L1abe70.  v10:= v0.`c.j.d.b` @type ^`int`;
  #L1abe74.  v11:= v0.`c.j.d.d` @type ^`android.os.Handler` @kind object;
  #L1abe78.  v12:= new `c.j.d$c`;
  #L1abe7c.  call `<init>`(v12, v13) @signature `Lc/j/d$c;.<init>:(Lc/j/d;)V` @kind direct;
  #L1abe82.  v5:= v1 @kind object;
  #L1abe84.  v6:= v16;
  #L1abe88.  v7:= v17;
  #L1abe8c.  v8:= v19;
  #L1abe90.  v9:= v20;
  #L1abe94.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lc/j/c;.<init>:(IIZIILandroid/os/Handler;Lc/j/c$c;)V` @kind direct;
  #L1abe9a.  v0.`c.j.d.k` @type ^`c.j.c` := v1 @kind object;
  #L1abe9e.  return @kind void;
  #L1abea0.  v1:= new `java.lang.IllegalArgumentException`;
  #L1abea4.  v4:= new `java.lang.StringBuilder`;
  #L1abea8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1abeae.  v5:= "Invalid maxImages (" @kind object;
  #L1abeb2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abeb8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abebe.  v2:= ") or primaryIndex (" @kind object;
  #L1abec2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abec8.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abece.  v2:= ")" @kind object;
  #L1abed2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abed8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1abede.  v2:= temp @kind object;
  #L1abee0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abee6.  throw v1;
}
procedure `void` `a`(`c.j.d` v2 @kind this, `int` v3 ) @signature `Lc/j/d;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1abf3c.  v0:= v2.`c.j.d.b` @type ^`int`;
  #L1abf40.  if v0 != v3 then goto L1abf46;
  #L1abf44.  return @kind void;
  #L1abf46.  v3:= new `java.lang.IllegalStateException`;
  #L1abf4a.  v0:= new `java.lang.StringBuilder`;
  #L1abf4e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1abf54.  v1:= "Not valid in input mode " @kind object;
  #L1abf58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abf5e.  v1:= v2.`c.j.d.b` @type ^`int`;
  #L1abf62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1abf68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1abf6e.  v0:= temp @kind object;
  #L1abf70.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abf76.  throw v3;
}
procedure `void` `a`(`c.j.d` v1 @kind this, `boolean` v2 ) @signature `Lc/j/d;.a:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1abf88.  v0:= v1.`c.j.d.o` @type ^`boolean` @kind boolean;
  #L1abf8c.  if v0 != v2 then goto L1abf92;
  #L1abf90.  return @kind void;
  #L1abf92.  v2:= new `java.lang.IllegalStateException`;
  #L1abf96.  v0:= "Already started" @kind object;
  #L1abf9a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abfa0.  throw v2;
}
procedure `void` `b`(`c.j.d` v1 @kind this, `int` v2 ) @signature `Lc/j/d;.b:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1abfb4.  v0:= 1I;
  #L1abfb6.  call `a`(v1, v0) @signature `Lc/j/d;.a:(Z)V` @kind direct;
  #L1abfbc.  call `a`(v1, v2) @signature `Lc/j/d;.a:(I)V` @kind direct;
  #L1abfc2.  return @kind void;
}
procedure `void` `a`(`c.j.d` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lc/j/d;.a:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1abef8.  v0:= 2I;
  #L1abefa.  call `b`(v1, v0) @signature `Lc/j/d;.b:(I)V` @kind direct;
  #L1abf00.  @monitorenter v1
  #L1abf02.  v0:= v1.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1abf06.  if v0 == 0 then goto L1abf14;
  #L1abf0a.  v0:= v1.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1abf0e.  call `a`(v0, v2) @signature `Lc/j/c;.a:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L1abf14.  @monitorexit v1
  #L1abf16.  return @kind void;
  #L1abf18.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abf1a.  @monitorexit v1
  #L1abf1c.  throw v2;
  catch `java.lang.Throwable` @[L1abf02..L1abf1c] goto L1abf18;
}
procedure `void` `close`(`c.j.d` v2 @kind this) @signature `Lc/j/d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1abfd4.  v0:= v2.`c.j.d.d` @type ^`android.os.Handler` @kind object;
  #L1abfd8.  v1:= new `c.j.d$a`;
  #L1abfdc.  call `<init>`(v1, v2) @signature `Lc/j/d$a;.<init>:(Lc/j/d;)V` @kind direct;
  #L1abfe2.  call temp:= `postAtFrontOfQueue`(v0, v1) @signature `Landroid/os/Handler;.postAtFrontOfQueue:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1abfe8.  return @kind void;
}
procedure `void` `f`(`c.j.d` v1 @kind this, `long` v2 ) @signature `Lc/j/d;.f:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac154.  v0:= 1I;
  #L1ac156.  call `a`(v1, v0) @signature `Lc/j/d;.a:(Z)V` @kind direct;
  #L1ac15c.  @monitorenter v1
  #L1ac15e.  v0:= v1.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1ac162.  if v0 == 0 then goto L1ac170;
  #L1ac166.  v0:= v1.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1ac16a.  call `m`(v0) @signature `Lc/j/c;.m:()V` @kind virtual;
  #L1ac170.  @monitorexit v1
  #L1ac172.  v0:= v1.`c.j.d.i` @type ^`c.j.d$d` @kind object;
  #L1ac176.  call `a`(v0, v2) @signature `Lc/j/d$d;.a:(J)V` @kind virtual;
  #L1ac17c.  call `l`(v1) @signature `Lc/j/d;.l:()V` @kind virtual;
  #L1ac182.  call `k`(v1) @signature `Lc/j/d;.k:()V` @kind virtual;
  #L1ac188.  return @kind void;
  #L1ac18a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac18c.  @monitorexit v1
  #L1ac18e.  throw v2;
  catch `java.lang.Throwable` @[L1ac15e..L1ac172] goto L1ac18a;
  catch `java.lang.Throwable` @[L1ac18c..L1ac18e] goto L1ac18a;
}
procedure `void` `k`(`c.j.d` v2 @kind this) @signature `Lc/j/d;.k:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1abffc.  v0:= v2.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1ac000.  v1:= 0I;
  #L1ac002.  if v0 == 0 then goto L1ac01a;
  #L1ac006.  call `stop`(v0) @signature `Landroid/media/MediaMuxer;.stop:()V` @kind virtual;
  #L1ac00c.  v0:= v2.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1ac010.  call `release`(v0) @signature `Landroid/media/MediaMuxer;.release:()V` @kind virtual;
  #L1ac016.  v2.`c.j.d.j` @type ^`android.media.MediaMuxer` := v1 @kind object;
  #L1ac01a.  v0:= v2.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1ac01e.  if v0 == 0 then goto L1ac038;
  #L1ac022.  call `close`(v0) @signature `Lc/j/c;.close:()V` @kind virtual;
  #L1ac028.  @monitorenter v2
  #L1ac02a.  v2.`c.j.d.k` @type ^`c.j.c` := v1 @kind object;
  #L1ac02e.  @monitorexit v2
  #L1ac030.  goto L1ac038;
  #L1ac032.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac034.  @monitorexit v2
  #L1ac036.  throw v0;
  #L1ac038.  return @kind void;
  catch `java.lang.Throwable` @[L1ac02a..L1ac036] goto L1ac032;
}
procedure `void` `l`(`c.j.d` v8 @kind this) @signature `Lc/j/d;.l:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ac058.  v0:= v8.`c.j.d.l` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1ac05c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1ac062.  v0:= temp;
  #L1ac064.  if v0 != 0 then goto L1ac06a;
  #L1ac068.  return @kind void;
  #L1ac06a.  v0:= v8.`c.j.d.p` @type ^`java.util.List` @kind object;
  #L1ac06e.  @monitorenter v0
  #L1ac070.  v1:= v8.`c.j.d.p` @type ^`java.util.List` @kind object;
  #L1ac074.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1ac07a.  v1:= temp;
  #L1ac07c.  if v1 == 0 then goto L1ac084;
  #L1ac080.  @monitorexit v0
  #L1ac082.  return @kind void;
  #L1ac084.  v1:= v8.`c.j.d.p` @type ^`java.util.List` @kind object;
  #L1ac088.  v2:= 0I;
  #L1ac08a.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1ac090.  v1:= temp @kind object;
  #L1ac092.  v1:= (`android.util.Pair`) v1 @kind object;
  #L1ac096.  @monitorexit v0
  #L1ac098.  v0:= new `android.media.MediaCodec$BufferInfo`;
  #L1ac09c.  call `<init>`(v0) @signature `Landroid/media/MediaCodec$BufferInfo;.<init>:()V` @kind direct;
  #L1ac0a2.  v2:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L1ac0a6.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L1ac0aa.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1ac0b0.  v3:= temp;
  #L1ac0b2.  v2:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L1ac0b6.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L1ac0ba.  call temp:= `remaining`(v2) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L1ac0c0.  v4:= temp;
  #L1ac0c2.  v5:= 0L;
  #L1ac0c6.  v7:= 16I;
  #L1ac0ca.  v2:= v0 @kind object;
  #L1ac0cc.  call `set`(v2, v3, v4, v5, v7) @signature `Landroid/media/MediaCodec$BufferInfo;.set:(IIJI)V` @kind virtual;
  #L1ac0d2.  v2:= v8.`c.j.d.j` @type ^`android.media.MediaMuxer` @kind object;
  #L1ac0d6.  v3:= v8.`c.j.d.m` @type ^`int`[] @kind object;
  #L1ac0da.  v4:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L1ac0de.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L1ac0e2.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1ac0e8.  v4:= temp;
  #L1ac0ea.  v3:= v3[v4];
  #L1ac0ee.  v1:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L1ac0f2.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L1ac0f6.  call `writeSampleData`(v2, v3, v1, v0) @signature `Landroid/media/MediaMuxer;.writeSampleData:(ILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V` @kind virtual;
  #L1ac0fc.  goto L1ac06a;
  #L1ac0fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac100.  @monitorexit v0
  #L1ac102.  throw v1;
  catch `java.lang.Throwable` @[L1ac070..L1ac098] goto L1ac0fe;
  catch `java.lang.Throwable` @[L1ac100..L1ac102] goto L1ac0fe;
}
procedure `void` `m`(`c.j.d` v1 @kind this) @signature `Lc/j/d;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac128.  v0:= 0I;
  #L1ac12a.  call `a`(v1, v0) @signature `Lc/j/d;.a:(Z)V` @kind direct;
  #L1ac130.  v0:= 1I;
  #L1ac132.  v1.`c.j.d.o` @type ^`boolean` := v0 @kind boolean;
  #L1ac136.  v0:= v1.`c.j.d.k` @type ^`c.j.c` @kind object;
  #L1ac13a.  call `l`(v0) @signature `Lc/j/c;.l:()V` @kind virtual;
  #L1ac140.  return @kind void;
}
