record `c.c.a$a` @kind class @AccessFlag  extends `c.c.f` @kind class {
  `c.c.a` `c.c.a$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.c.a$a` v0 @kind this, `c.c.a` v1 @kind object) @signature `Lc/c/a$a;.<init>:(Lc/c/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15c084.  v0.`c.c.a$a.d` @type ^`c.c.a` := v1 @kind object;
  #L15c088.  call `<init>`(v0) @signature `Lc/c/f;.<init>:()V` @kind direct;
  #L15c08e.  return @kind void;
}
procedure `int` `a`(`c.c.a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/c/a$a;.a:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15bfe8.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15bfec.  call temp:= `a`(v0, v2) @signature `Lc/c/g;.a:(Ljava/lang/Object;)I` @kind virtual;
  #L15bff2.  v2:= temp;
  #L15bff4.  return v2;
}
procedure `java.lang.Object` `a`(`c.c.a$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lc/c/a$a;.a:(II)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c028.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c02c.  v0:= v0.`c.c.g.c` @type ^`java.lang.Object`[] @kind object;
  #L15c030.  v2:= v2 ^< 1;
  #L15c034.  v2:= v2 + v3 @kind int;
  #L15c036.  v2:= v0[v2] @kind object;
  #L15c03a.  return v2 @kind object;
}
procedure `java.lang.Object` `a`(`c.c.a$a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lc/c/a$a;.a:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c04c.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c050.  call temp:= `a`(v0, v2, v3) @signature `Lc/c/g;.a:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15c056.  v2:= temp @kind object;
  #L15c058.  return v2 @kind object;
}
procedure `void` `a`(`c.c.a$a` v1 @kind this) @signature `Lc/c/a$a;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c0a0.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c0a4.  call `clear`(v0) @signature `Lc/c/g;.clear:()V` @kind virtual;
  #L15c0aa.  return @kind void;
}
procedure `void` `a`(`c.c.a$a` v1 @kind this, `int` v2 ) @signature `Lc/c/a$a;.a:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c0d8.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c0dc.  call temp:= `c`(v0, v2) @signature `Lc/c/g;.c:(I)Ljava/lang/Object;` @kind virtual;
  #L15c0e2.  return @kind void;
}
procedure `void` `a`(`c.c.a$a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lc/c/a$a;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c0bc.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c0c0.  call temp:= `put`(v0, v2, v3) @signature `Lc/c/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15c0c6.  return @kind void;
}
procedure `int` `b`(`c.c.a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/c/a$a;.b:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c008.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c00c.  call temp:= `b`(v0, v2) @signature `Lc/c/g;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L15c012.  v2:= temp;
  #L15c014.  return v2;
}
procedure `java.util.Map` `b`(`c.c.a$a` v1 @kind this) @signature `Lc/c/a$a;.b:()Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c06c.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15c070.  return v0 @kind object;
}
procedure `int` `c`(`c.c.a$a` v1 @kind this) @signature `Lc/c/a$a;.c:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15bfcc.  v0:= v1.`c.c.a$a.d` @type ^`c.c.a` @kind object;
  #L15bfd0.  v0:= v0.`c.c.g.d` @type ^`int`;
  #L15bfd4.  return v0;
}
