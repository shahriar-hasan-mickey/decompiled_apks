record `c.c.a` @kind class @AccessFlag PUBLIC extends `c.c.g` @kind class, `java.util.Map` @kind interface {
  `c.c.f` `c.c.a.i` @AccessFlag ;
}
procedure `void` `<init>`(`c.c.a` v0 @kind this) @signature `Lc/c/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15c1a8.  call `<init>`(v0) @signature `Lc/c/g;.<init>:()V` @kind direct;
  #L15c1ae.  return @kind void;
}
procedure `void` `<init>`(`c.c.a` v0 @kind this, `int` v1 ) @signature `Lc/c/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15c1d8.  call `<init>`(v0, v1) @signature `Lc/c/g;.<init>:(I)V` @kind direct;
  #L15c1de.  return @kind void;
}
procedure `void` `<init>`(`c.c.a` v0 @kind this, `c.c.g` v1 @kind object) @signature `Lc/c/a;.<init>:(Lc/c/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15c1c0.  call `<init>`(v0, v1) @signature `Lc/c/g;.<init>:(Lc/c/g;)V` @kind direct;
  #L15c1c6.  return @kind void;
}
procedure `c.c.f` `b`(`c.c.a` v1 @kind this) @signature `Lc/c/a;.b:()Lc/c/f;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L15c0f4.  v0:= v1.`c.c.a.i` @type ^`c.c.f` @kind object;
  #L15c0f8.  if v0 != 0 then goto L15c10a;
  #L15c0fc.  v0:= new `c.c.a$a`;
  #L15c100.  call `<init>`(v0, v1) @signature `Lc/c/a$a;.<init>:(Lc/c/a;)V` @kind direct;
  #L15c106.  v1.`c.c.a.i` @type ^`c.c.f` := v0 @kind object;
  #L15c10a.  v0:= v1.`c.c.a.i` @type ^`c.c.f` @kind object;
  #L15c10e.  return v0 @kind object;
}
procedure `boolean` `a`(`c.c.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lc/c/a;.a:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L15c120.  call temp:= `c`(v0, v1) @signature `Lc/c/f;.c:(Ljava/util/Map;Ljava/util/Collection;)Z` @kind static;
  #L15c126.  v1:= temp;
  #L15c128.  return v1;
}
procedure `java.util.Set` `entrySet`(`c.c.a` v1 @kind this) @signature `Lc/c/a;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c160.  call temp:= `b`(v1) @signature `Lc/c/a;.b:()Lc/c/f;` @kind direct;
  #L15c166.  v0:= temp @kind object;
  #L15c168.  call temp:= `d`(v0) @signature `Lc/c/f;.d:()Ljava/util/Set;` @kind virtual;
  #L15c16e.  v0:= temp @kind object;
  #L15c170.  return v0 @kind object;
}
procedure `java.util.Set` `keySet`(`c.c.a` v1 @kind this) @signature `Lc/c/a;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c184.  call temp:= `b`(v1) @signature `Lc/c/a;.b:()Lc/c/f;` @kind direct;
  #L15c18a.  v0:= temp @kind object;
  #L15c18c.  call temp:= `e`(v0) @signature `Lc/c/f;.e:()Ljava/util/Set;` @kind virtual;
  #L15c192.  v0:= temp @kind object;
  #L15c194.  return v0 @kind object;
}
procedure `void` `putAll`(`c.c.a` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lc/c/a;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15c1f0.  v0:= v2.`c.c.g.d` @type ^`int`;
  #L15c1f4.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L15c1fa.  v1:= temp;
  #L15c1fc.  v0:= v0 + v1 @kind int;
  #L15c1fe.  call `a`(v2, v0) @signature `Lc/c/g;.a:(I)V` @kind virtual;
  #L15c204.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L15c20a.  v3:= temp @kind object;
  #L15c20c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15c212.  v3:= temp @kind object;
  #L15c214.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15c21a.  v0:= temp;
  #L15c21c.  if v0 == 0 then goto L15c244;
  #L15c220.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15c226.  v0:= temp @kind object;
  #L15c228.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L15c22c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L15c232.  v1:= temp @kind object;
  #L15c234.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L15c23a.  v0:= temp @kind object;
  #L15c23c.  call temp:= `put`(v2, v1, v0) @signature `Lc/c/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15c242.  goto L15c214;
  #L15c244.  return @kind void;
}
procedure `java.util.Collection` `values`(`c.c.a` v1 @kind this) @signature `Lc/c/a;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c13c.  call temp:= `b`(v1) @signature `Lc/c/a;.b:()Lc/c/f;` @kind direct;
  #L15c142.  v0:= temp @kind object;
  #L15c144.  call temp:= `f`(v0) @signature `Lc/c/f;.f:()Ljava/util/Collection;` @kind virtual;
  #L15c14a.  v0:= temp @kind object;
  #L15c14c.  return v0 @kind object;
}
