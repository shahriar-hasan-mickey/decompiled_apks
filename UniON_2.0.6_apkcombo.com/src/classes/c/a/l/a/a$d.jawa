record `c.a.l.a.a$d` @kind class @AccessFlag  extends `c.a.l.a.a$g` @kind class {
  `c.p.a.a.c` `c.a.l.a.a$d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.l.a.a$d` v1 @kind this, `c.p.a.a.c` v2 @kind object) @signature `Lc/a/l/a/a$d;.<init>:(Lc/p/a/a/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1331a4.  v0:= 0I;
  #L1331a6.  call `<init>`(v1, v0) @signature `Lc/a/l/a/a$g;.<init>:(Lc/a/l/a/a$a;)V` @kind direct;
  #L1331ac.  v1.`c.a.l.a.a$d.a` @type ^`c.p.a.a.c` := v2 @kind object;
  #L1331b0.  return @kind void;
}
procedure `void` `c`(`c.a.l.a.a$d` v1 @kind this) @signature `Lc/a/l/a/a$d;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1331c4.  v0:= v1.`c.a.l.a.a$d.a` @type ^`c.p.a.a.c` @kind object;
  #L1331c8.  call `start`(v0) @signature `Lc/p/a/a/c;.start:()V` @kind virtual;
  #L1331ce.  return @kind void;
}
procedure `void` `d`(`c.a.l.a.a$d` v1 @kind this) @signature `Lc/a/l/a/a$d;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1331e0.  v0:= v1.`c.a.l.a.a$d.a` @type ^`c.p.a.a.c` @kind object;
  #L1331e4.  call `stop`(v0) @signature `Lc/p/a/a/c;.stop:()V` @kind virtual;
  #L1331ea.  return @kind void;
}
