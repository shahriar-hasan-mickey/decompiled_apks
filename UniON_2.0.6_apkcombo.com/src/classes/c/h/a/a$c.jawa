record `c.h.a.a$c` @kind class @AccessFlag  extends `java.io.FilterOutputStream` @kind class {
  `java.io.OutputStream` `c.h.a.a$c.b` @AccessFlag FINAL;
  `java.nio.ByteOrder` `c.h.a.a$c.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.h.a.a$c` v0 @kind this, `java.io.OutputStream` v1 @kind object, `java.nio.ByteOrder` v2 @kind object) @signature `Lc/h/a/a$c;.<init>:(Ljava/io/OutputStream;Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18ecfc.  call `<init>`(v0, v1) @signature `Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L18ed02.  v0.`c.h.a.a$c.b` @type ^`java.io.OutputStream` := v1 @kind object;
  #L18ed06.  v0.`c.h.a.a$c.c` @type ^`java.nio.ByteOrder` := v2 @kind object;
  #L18ed0a.  return @kind void;
}
procedure `void` `a`(`c.h.a.a$c` v0 @kind this, `int` v1 ) @signature `Lc/h/a/a$c;.a:(I)V` @AccessFlag PUBLIC {
    temp;

  #L18eebc.  v1:= (`short`) v1 @kind i2s;
  #L18eebe.  call `a`(v0, v1) @signature `Lc/h/a/a$c;.a:(S)V` @kind virtual;
  #L18eec4.  return @kind void;
}
procedure `void` `a`(`c.h.a.a$c` v0 @kind this, `java.nio.ByteOrder` v1 @kind object) @signature `Lc/h/a/a$c;.a:(Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC {
    temp;

  #L18ed1c.  v0.`c.h.a.a$c.c` @type ^`java.nio.ByteOrder` := v1 @kind object;
  #L18ed20.  return @kind void;
}
procedure `void` `a`(`c.h.a.a$c` v2 @kind this, `short` v3 ) @signature `Lc/h/a/a$c;.a:(S)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18ee38.  v0:= v2.`c.h.a.a$c.c` @type ^`java.nio.ByteOrder` @kind object;
  #L18ee3c.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L18ee40.  if v0 != v1 then goto L18ee6a;
  #L18ee44.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee48.  v1:= v3 ^>> 0;
  #L18ee4c.  v1:= v1 ^& 255;
  #L18ee50.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ee56.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee5a.  v3:= v3 ^>> 8;
  #L18ee5e.  v3:= v3 ^& 255;
  #L18ee62.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ee68.  goto L18ee8e;
  #L18ee6a.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L18ee6e.  if v0 != v1 then goto L18ee8e;
  #L18ee72.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee76.  v1:= v3 ^>> 8;
  #L18ee7a.  v1:= v1 ^& 255;
  #L18ee7e.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ee84.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee88.  v3:= v3 ^>> 0;
  #L18ee8c.  goto L18ee5e;
  #L18ee8e.  return @kind void;
}
procedure `void` `f`(`c.h.a.a$c` v0 @kind this, `long` v1 ) @signature `Lc/h/a/a$c;.f:(J)V` @AccessFlag PUBLIC {
    temp;

  #L18eea0.  v2:= (`int`) v1 @kind l2i;
  #L18eea2.  call `writeInt`(v0, v2) @signature `Lc/h/a/a$c;.writeInt:(I)V` @kind virtual;
  #L18eea8.  return @kind void;
}
procedure `void` `write`(`c.h.a.a$c` v1 @kind this, `byte`[] v2 @kind object) @signature `Lc/h/a/a$c;.write:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ed34.  v0:= v1.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ed38.  call `write`(v0, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L18ed3e.  return @kind void;
}
procedure `void` `write`(`c.h.a.a$c` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc/h/a/a$c;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ed50.  v0:= v1.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ed54.  call `write`(v0, v2, v3, v4) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L18ed5a.  return @kind void;
}
procedure `void` `writeByte`(`c.h.a.a$c` v1 @kind this, `int` v2 ) @signature `Lc/h/a/a$c;.writeByte:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18ed6c.  v0:= v1.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ed70.  call `write`(v0, v2) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ed76.  return @kind void;
}
procedure `void` `writeInt`(`c.h.a.a$c` v2 @kind this, `int` v3 ) @signature `Lc/h/a/a$c;.writeInt:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18ed88.  v0:= v2.`c.h.a.a$c.c` @type ^`java.nio.ByteOrder` @kind object;
  #L18ed8c.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L18ed90.  if v0 != v1 then goto L18edde;
  #L18ed94.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ed98.  v1:= v3 ^>> 0;
  #L18ed9c.  v1:= v1 ^& 255;
  #L18eda0.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18eda6.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18edaa.  v1:= v3 ^>> 8;
  #L18edae.  v1:= v1 ^& 255;
  #L18edb2.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18edb8.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18edbc.  v1:= v3 ^>> 16;
  #L18edc0.  v1:= v1 ^& 255;
  #L18edc4.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18edca.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18edce.  v3:= v3 ^>> 24;
  #L18edd2.  v3:= v3 ^& 255;
  #L18edd6.  call `write`(v0, v3) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18eddc.  goto L18ee26;
  #L18edde.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L18ede2.  if v0 != v1 then goto L18ee26;
  #L18ede6.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18edea.  v1:= v3 ^>> 24;
  #L18edee.  v1:= v1 ^& 255;
  #L18edf2.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18edf8.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18edfc.  v1:= v3 ^>> 16;
  #L18ee00.  v1:= v1 ^& 255;
  #L18ee04.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ee0a.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee0e.  v1:= v3 ^>> 8;
  #L18ee12.  v1:= v1 ^& 255;
  #L18ee16.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L18ee1c.  v0:= v2.`c.h.a.a$c.b` @type ^`java.io.OutputStream` @kind object;
  #L18ee20.  v3:= v3 ^>> 0;
  #L18ee24.  goto L18edd2;
  #L18ee26.  return @kind void;
}
