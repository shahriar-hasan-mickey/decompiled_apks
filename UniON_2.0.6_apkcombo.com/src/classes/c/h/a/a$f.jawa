record `c.h.a.a$f` @kind class @AccessFlag  {
  `long` `c.h.a.a$f.a` @AccessFlag PUBLIC_FINAL;
  `long` `c.h.a.a$f.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`c.h.a.a$f` v2 @kind this, `double` v3 ) @signature `Lc/h/a/a$f;.<init>:(D)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L18fc58.  v0:= 10000.0D;
  #L18fc62.  v3:= v3 * v0 @kind double;
  #L18fc66.  v3:= (`long`) v3 @kind d2l;
  #L18fc68.  v0:= 10000L;
  #L18fc6c.  call `<init>`(v2, v3, v0) @signature `Lc/h/a/a$f;.<init>:(JJ)V` @kind direct;
  #L18fc72.  return @kind void;
}
procedure `void` `<init>`(`c.h.a.a$f` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lc/h/a/a$f;.<init>:(JJ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18fc84.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L18fc8a.  v0:= 0L;
  #L18fc8e.  v2:= lcmp(v6, v0);
  #L18fc92.  if v2 != 0 then goto L18fca4;
  #L18fc96.  v3.`c.h.a.a$f.a` @type ^`long` := v0 @kind wide;
  #L18fc9a.  v4:= 1L;
  #L18fc9e.  v3.`c.h.a.a$f.b` @type ^`long` := v4 @kind wide;
  #L18fca2.  return @kind void;
  #L18fca4.  v3.`c.h.a.a$f.a` @type ^`long` := v4 @kind wide;
  #L18fca8.  v3.`c.h.a.a$f.b` @type ^`long` := v6 @kind wide;
  #L18fcac.  return @kind void;
}
procedure `double` `a`(`c.h.a.a$f` v4 @kind this) @signature `Lc/h/a/a$f;.a:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18fbf4.  v0:= v4.`c.h.a.a$f.a` @type ^`long` @kind wide;
  #L18fbf8.  v0:= (`double`) v0 @kind l2d;
  #L18fbfa.  v2:= v4.`c.h.a.a$f.b` @type ^`long` @kind wide;
  #L18fbfe.  v2:= (`double`) v2 @kind l2d;
  #L18fc00.  v0:= v0 / v2 @kind double;
  #L18fc02.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`c.h.a.a$f` v3 @kind this) @signature `Lc/h/a/a$f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18fc14.  v0:= new `java.lang.StringBuilder`;
  #L18fc18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18fc1e.  v1:= v3.`c.h.a.a$f.a` @type ^`long` @kind wide;
  #L18fc22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L18fc28.  v1:= "/" @kind object;
  #L18fc2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18fc32.  v1:= v3.`c.h.a.a$f.b` @type ^`long` @kind wide;
  #L18fc36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L18fc3c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18fc42.  v0:= temp @kind object;
  #L18fc44.  return v0 @kind object;
}
