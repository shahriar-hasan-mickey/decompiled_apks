record `c.h.a.a$a` @kind class @AccessFlag  extends `android.media.MediaDataSource` @kind class {
  `long` `c.h.a.a$a.b` @AccessFlag ;
  `c.h.a.a$b` `c.h.a.a$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.h.a.a$a` v0 @kind this, `c.h.a.a` v1 @kind object, `c.h.a.a$b` v2 @kind object) @signature `Lc/h/a/a$a;.<init>:(Lc/h/a/a;Lc/h/a/a$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L18e438.  v0.`c.h.a.a$a.c` @type ^`c.h.a.a$b` := v2 @kind object;
  #L18e43c.  call `<init>`(v0) @signature `Landroid/media/MediaDataSource;.<init>:()V` @kind direct;
  #L18e442.  return @kind void;
}
procedure `void` `close`(`c.h.a.a$a` v0 @kind this) @signature `Lc/h/a/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L18e454.  return @kind void;
}
procedure `long` `getSize`(`c.h.a.a$a` v2 @kind this) @signature `Lc/h/a/a$a;.getSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18e420.  v0:= -1L;
  #L18e424.  return v0 @kind wide;
}
procedure `int` `readAt`(`c.h.a.a$a` v6 @kind this, `long` v7 , `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lc/h/a/a$a;.readAt:(J[BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18e360.  if v11 != 0 then goto L18e368;
  #L18e364.  v7:= 0I;
  #L18e366.  return v7;
  #L18e368.  v0:= 0L;
  #L18e36c.  v2:= -1I;
  #L18e36e.  v3:= lcmp(v7, v0);
  #L18e372.  if v3 >= 0 then goto L18e378;
  #L18e376.  return v2;
  #L18e378.  v3:= v6.`c.h.a.a$a.b` @type ^`long` @kind wide;
  #L18e37c.  v5:= lcmp(v3, v7);
  #L18e380.  if v5 == 0 then goto L18e3bc;
  #L18e384.  v3:= v6.`c.h.a.a$a.b` @type ^`long` @kind wide;
  #L18e388.  v5:= lcmp(v3, v0);
  #L18e38c.  if v5 < 0 then goto L18e3ae;
  #L18e390.  v0:= v6.`c.h.a.a$a.b` @type ^`long` @kind wide;
  #L18e394.  v3:= v6.`c.h.a.a$a.c` @type ^`c.h.a.a$b` @kind object;
  #L18e398.  call temp:= `available`(v3) @signature `Lc/h/a/a$b;.available:()I` @kind virtual;
  #L18e39e.  v3:= temp;
  #L18e3a0.  v3:= (`long`) v3 @kind i2l;
  #L18e3a2.  v0:= v0 + v3 @kind long;
  #L18e3a4.  v3:= lcmp(v7, v0);
  #L18e3a8.  if v3 < 0 then goto L18e3ae;
  #L18e3ac.  return v2;
  #L18e3ae.  v0:= v6.`c.h.a.a$a.c` @type ^`c.h.a.a$b` @kind object;
  #L18e3b2.  call `f`(v0, v7) @signature `Lc/h/a/a$b;.f:(J)V` @kind virtual;
  #L18e3b8.  v6.`c.h.a.a$a.b` @type ^`long` := v7 @kind wide;
  #L18e3bc.  v7:= v6.`c.h.a.a$a.c` @type ^`c.h.a.a$b` @kind object;
  #L18e3c0.  call temp:= `available`(v7) @signature `Lc/h/a/a$b;.available:()I` @kind virtual;
  #L18e3c6.  v7:= temp;
  #L18e3c8.  if v11 <= v7 then goto L18e3d8;
  #L18e3cc.  v7:= v6.`c.h.a.a$a.c` @type ^`c.h.a.a$b` @kind object;
  #L18e3d0.  call temp:= `available`(v7) @signature `Lc/h/a/a$b;.available:()I` @kind virtual;
  #L18e3d6.  v11:= temp;
  #L18e3d8.  v7:= v6.`c.h.a.a$a.c` @type ^`c.h.a.a$b` @kind object;
  #L18e3dc.  call temp:= `read`(v7, v9, v10, v11) @signature `Lc/h/a/a$b;.read:([BII)I` @kind virtual;
  #L18e3e2.  v7:= temp;
  #L18e3e4.  if v7 < 0 then goto L18e3f6;
  #L18e3e8.  v8:= v6.`c.h.a.a$a.b` @type ^`long` @kind wide;
  #L18e3ec.  v10:= (`long`) v7 @kind i2l;
  #L18e3ee.  v8:= v8 + v10 @kind long;
  #L18e3f0.  v6.`c.h.a.a$a.b` @type ^`long` := v8 @kind wide;
  #L18e3f4.  return v7;
  #L18e3f6.  v7:= -1L;
  #L18e3fa.  v6.`c.h.a.a$a.b` @type ^`long` := v7 @kind wide;
  #L18e3fe.  return v2;
  catch `java.io.IOException` @[L18e378..L18e3f4] goto L18e3f6;
}
