record `c.e.i.c` @kind class @AccessFlag PUBLIC {
}
procedure `int` `a`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lc/e/i/c;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L179fbc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179fc2.  v0:= temp;
  #L179fc4.  if v4 >= v0 then goto L17a008;
  #L179fc8.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L179fce.  v0:= temp;
  #L179fd0.  v1:= v0 + -65;
  #L179fd4.  v2:= v0 + -90;
  #L179fd8.  v1:= v1 * v2 @kind int;
  #L179fdc.  if v1 <= 0 then goto L179ff0;
  #L179fe0.  v1:= v0 + -97;
  #L179fe4.  v2:= v0 + -122;
  #L179fe8.  v1:= v1 * v2 @kind int;
  #L179fec.  if v1 > 0 then goto L17a002;
  #L179ff0.  v1:= 101I;
  #L179ff4.  if v0 == v1 then goto L17a002;
  #L179ff8.  v1:= 69I;
  #L179ffc.  if v0 == v1 then goto L17a002;
  #L17a000.  return v4;
  #L17a002.  v4:= v4 + 1;
  #L17a006.  goto L179fbc;
  #L17a008.  return v4;
}
procedure `void` `a`(`java.lang.String` v8 @kind object, `int` v9 , `c.e.i.c$a` v10 @kind object) @signature `Lc/e/i/c;.a:(Ljava/lang/String;ILc/e/i/c$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L17a040.  v0:= 0I;
  #L17a042.  v10.`c.e.i.c$a.b` @type ^`boolean` := v0 @kind boolean;
  #L17a046.  v1:= v9;
  #L17a048.  v2:= 0I;
  #L17a04a.  v3:= 0I;
  #L17a04c.  v4:= 0I;
  #L17a04e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L17a054.  v5:= temp;
  #L17a056.  if v1 >= v5 then goto L17a0b6;
  #L17a05a.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L17a060.  v5:= temp;
  #L17a062.  v6:= 32I;
  #L17a066.  v7:= 1I;
  #L17a068.  if v5 == v6 then goto L17a0a6;
  #L17a06c.  v6:= 69I;
  #L17a070.  if v5 == v6 then goto L17a0a2;
  #L17a074.  v6:= 101I;
  #L17a078.  if v5 == v6 then goto L17a0a2;
  #L17a07c.  goto L17a0bc;
  #L17a082.  goto L17a09e;
  #L17a084.  if v3 != 0 then goto L17a08e;
  #L17a088.  v2:= 0I;
  #L17a08a.  v3:= 1I;
  #L17a08c.  goto L17a0aa;
  #L17a08e.  v10.`c.e.i.c$a.b` @type ^`boolean` := v7 @kind boolean;
  #L17a092.  goto L17a0a6;
  #L17a094.  if v1 == v9 then goto L17a09e;
  #L17a098.  if v2 != 0 then goto L17a09e;
  #L17a09c.  goto L17a08e;
  #L17a09e.  v2:= 0I;
  #L17a0a0.  goto L17a0aa;
  #L17a0a2.  v2:= 1I;
  #L17a0a4.  goto L17a0aa;
  #L17a0a6.  v2:= 0I;
  #L17a0a8.  v4:= 1I;
  #L17a0aa.  if v4 == 0 then goto L17a0b0;
  #L17a0ae.  goto L17a0b6;
  #L17a0b0.  v1:= v1 + 1;
  #L17a0b4.  goto L17a04e;
  #L17a0b6.  v10.`c.e.i.c$a.a` @type ^`int` := v1;
  #L17a0ba.  return @kind void;
  #L17a0bc.  switch v5
                  | 44 => goto L17a0a6
                  | 45 => goto L17a094
                  | 46 => goto L17a084
                  | else => goto L17a082;
}
procedure `void` `a`(`java.util.ArrayList` v1 @kind object, `char` v2 , `float`[] v3 @kind object) @signature `Lc/e/i/c;.a:(Ljava/util/ArrayList;C[F)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L17a01c.  v0:= new `c.e.i.c$b`;
  #L17a020.  call `<init>`(v0, v2, v3) @signature `Lc/e/i/c$b;.<init>:(C[F)V` @kind direct;
  #L17a026.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L17a02c.  return @kind void;
}
procedure `boolean` `a`(`c.e.i.c$b`[] v4 @kind object, `c.e.i.c$b`[] v5 @kind object) @signature `Lc/e/i/c;.a:([Lc/e/i/c$b;[Lc/e/i/c$b;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L179e10.  v0:= 0I;
  #L179e12.  if v4 == 0 then goto L179e68;
  #L179e16.  if v5 != 0 then goto L179e1c;
  #L179e1a.  goto L179e68;
  #L179e1c.  v1:= length @variable v4;
  #L179e1e.  v2:= length @variable v5;
  #L179e20.  if v1 == v2 then goto L179e26;
  #L179e24.  return v0;
  #L179e26.  v1:= 0I;
  #L179e28.  v2:= length @variable v4;
  #L179e2a.  if v1 >= v2 then goto L179e64;
  #L179e2e.  v2:= v4[v1] @kind object;
  #L179e32.  v2:= v2.`c.e.i.c$b.a` @type ^`char` @kind char;
  #L179e36.  v3:= v5[v1] @kind object;
  #L179e3a.  v3:= v3.`c.e.i.c$b.a` @type ^`char` @kind char;
  #L179e3e.  if v2 != v3 then goto L179e62;
  #L179e42.  v2:= v4[v1] @kind object;
  #L179e46.  v2:= v2.`c.e.i.c$b.b` @type ^`float`[] @kind object;
  #L179e4a.  v2:= length @variable v2;
  #L179e4c.  v3:= v5[v1] @kind object;
  #L179e50.  v3:= v3.`c.e.i.c$b.b` @type ^`float`[] @kind object;
  #L179e54.  v3:= length @variable v3;
  #L179e56.  if v2 == v3 then goto L179e5c;
  #L179e5a.  goto L179e62;
  #L179e5c.  v1:= v1 + 1;
  #L179e60.  goto L179e28;
  #L179e62.  return v0;
  #L179e64.  v4:= 1I;
  #L179e66.  return v4;
  #L179e68.  return v0;
}
procedure `float`[] `a`(`float`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc/e/i/c;.a:([FII)[F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L179e7c.  if v3 > v4 then goto L179eb0;
  #L179e80.  v0:= length @variable v2;
  #L179e82.  if v3 < 0 then goto L179ea4;
  #L179e86.  if v3 > v0 then goto L179ea4;
  #L179e8a.  v4:= v4 - v3 @kind int;
  #L179e8c.  v0:= v0 - v3 @kind int;
  #L179e8e.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L179e94.  v0:= temp;
  #L179e96.  v4:= new `float`[v4];
  #L179e9a.  v1:= 0I;
  #L179e9c.  call `arraycopy`(v2, v3, v4, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L179ea2.  return v4 @kind object;
  #L179ea4.  v2:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L179ea8.  call `<init>`(v2) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L179eae.  throw v2;
  #L179eb0.  v2:= new `java.lang.IllegalArgumentException`;
  #L179eb4.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L179eba.  throw v2;
}
procedure `c.e.i.c$b`[] `a`(`java.lang.String` v7 @kind object) @signature `Lc/e/i/c;.a:(Ljava/lang/String;)[Lc/e/i/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L179d14.  if v7 != 0 then goto L179d1c;
  #L179d18.  v7:= 0I;
  #L179d1a.  return v7 @kind object;
  #L179d1c.  v0:= new `java.util.ArrayList`;
  #L179d20.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L179d26.  v1:= 1I;
  #L179d28.  v2:= 0I;
  #L179d2a.  v3:= 1I;
  #L179d2c.  v4:= 0I;
  #L179d2e.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179d34.  v5:= temp;
  #L179d36.  if v3 >= v5 then goto L179d80;
  #L179d3a.  call temp:= `a`(v7, v3) @signature `Lc/e/i/c;.a:(Ljava/lang/String;I)I` @kind static;
  #L179d40.  v3:= temp;
  #L179d42.  call temp:= `substring`(v7, v4, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L179d48.  v4:= temp @kind object;
  #L179d4a.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L179d50.  v4:= temp @kind object;
  #L179d52.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179d58.  v5:= temp;
  #L179d5a.  if v5 <= 0 then goto L179d74;
  #L179d5e.  call temp:= `c`(v4) @signature `Lc/e/i/c;.c:(Ljava/lang/String;)[F` @kind static;
  #L179d64.  v5:= temp @kind object;
  #L179d66.  call temp:= `charAt`(v4, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L179d6c.  v4:= temp;
  #L179d6e.  call `a`(v0, v4, v5) @signature `Lc/e/i/c;.a:(Ljava/util/ArrayList;C[F)V` @kind static;
  #L179d74.  v4:= v3 + 1;
  #L179d78.  v6:= v4;
  #L179d7a.  v4:= v3;
  #L179d7c.  v3:= v6;
  #L179d7e.  goto L179d2e;
  #L179d80.  v3:= v3 - v4 @kind int;
  #L179d82.  if v3 != v1 then goto L179da4;
  #L179d86.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179d8c.  v1:= temp;
  #L179d8e.  if v4 >= v1 then goto L179da4;
  #L179d92.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L179d98.  v7:= temp;
  #L179d9a.  v1:= new `float`[v2];
  #L179d9e.  call `a`(v0, v7, v1) @signature `Lc/e/i/c;.a:(Ljava/util/ArrayList;C[F)V` @kind static;
  #L179da4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L179daa.  v7:= temp;
  #L179dac.  v7:= new `c.e.i.c$b`[v7];
  #L179db0.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L179db6.  v7:= temp @kind object;
  #L179db8.  v7:= (`c.e.i.c$b`[]) v7 @kind object;
  #L179dbc.  return v7 @kind object;
}
procedure `c.e.i.c$b`[] `a`(`c.e.i.c$b`[] v4 @kind object) @signature `Lc/e/i/c;.a:([Lc/e/i/c$b;)[Lc/e/i/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L179dd0.  if v4 != 0 then goto L179dd8;
  #L179dd4.  v4:= 0I;
  #L179dd6.  return v4 @kind object;
  #L179dd8.  v0:= length @variable v4;
  #L179dda.  v0:= new `c.e.i.c$b`[v0];
  #L179dde.  v1:= 0I;
  #L179de0.  v2:= length @variable v4;
  #L179de2.  if v1 >= v2 then goto L179dfe;
  #L179de6.  v2:= new `c.e.i.c$b`;
  #L179dea.  v3:= v4[v1] @kind object;
  #L179dee.  call `<init>`(v2, v3) @signature `Lc/e/i/c$b;.<init>:(Lc/e/i/c$b;)V` @kind direct;
  #L179df4.  v0[v1]:= v2 @kind object;
  #L179df8.  v1:= v1 + 1;
  #L179dfc.  goto L179de0;
  #L179dfe.  return v0 @kind object;
}
procedure `android.graphics.Path` `b`(`java.lang.String` v4 @kind object) @signature `Lc/e/i/c;.b:(Ljava/lang/String;)Landroid/graphics/Path;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L179ca0.  v0:= new `android.graphics.Path`;
  #L179ca4.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L179caa.  call temp:= `a`(v4) @signature `Lc/e/i/c;.a:(Ljava/lang/String;)[Lc/e/i/c$b;` @kind static;
  #L179cb0.  v1:= temp @kind object;
  #L179cb2.  if v1 == 0 then goto L179cee;
  #L179cb6.  call `a`(v1, v0) @signature `Lc/e/i/c$b;.a:([Lc/e/i/c$b;Landroid/graphics/Path;)V` @kind static;
  #L179cbc.  return v0 @kind object;
  #L179cbe.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L179cc0.  v1:= new `java.lang.RuntimeException`;
  #L179cc4.  v2:= new `java.lang.StringBuilder`;
  #L179cc8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L179cce.  v3:= "Error in parsing " @kind object;
  #L179cd2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179cd8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179cde.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L179ce4.  v4:= temp @kind object;
  #L179ce6.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L179cec.  throw v1;
  #L179cee.  v4:= 0I;
  #L179cf0.  return v4 @kind object;
  catch `java.lang.RuntimeException` @[L179cb6..L179cbc] goto L179cbe;
}
procedure `void` `b`(`c.e.i.c$b`[] v5 @kind object, `c.e.i.c$b`[] v6 @kind object) @signature `Lc/e/i/c;.b:([Lc/e/i/c$b;[Lc/e/i/c$b;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17a0e0.  v0:= 0I;
  #L17a0e2.  v1:= 0I;
  #L17a0e4.  v2:= length @variable v6;
  #L17a0e6.  if v1 >= v2 then goto L17a12e;
  #L17a0ea.  v2:= v5[v1] @kind object;
  #L17a0ee.  v3:= v6[v1] @kind object;
  #L17a0f2.  v3:= v3.`c.e.i.c$b.a` @type ^`char` @kind char;
  #L17a0f6.  v2.`c.e.i.c$b.a` @type ^`char` := v3 @kind char;
  #L17a0fa.  v2:= 0I;
  #L17a0fc.  v3:= v6[v1] @kind object;
  #L17a100.  v3:= v3.`c.e.i.c$b.b` @type ^`float`[] @kind object;
  #L17a104.  v3:= length @variable v3;
  #L17a106.  if v2 >= v3 then goto L17a128;
  #L17a10a.  v3:= v5[v1] @kind object;
  #L17a10e.  v3:= v3.`c.e.i.c$b.b` @type ^`float`[] @kind object;
  #L17a112.  v4:= v6[v1] @kind object;
  #L17a116.  v4:= v4.`c.e.i.c$b.b` @type ^`float`[] @kind object;
  #L17a11a.  v4:= v4[v2];
  #L17a11e.  v3[v2]:= v4;
  #L17a122.  v2:= v2 + 1;
  #L17a126.  goto L17a0fc;
  #L17a128.  v1:= v1 + 1;
  #L17a12c.  goto L17a0e4;
  #L17a12e.  return @kind void;
}
procedure `float`[] `c`(`java.lang.String` v8 @kind object) @signature `Lc/e/i/c;.c:(Ljava/lang/String;)[F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L179ecc.  v0:= 0I;
  #L179ece.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L179ed4.  v1:= temp;
  #L179ed6.  v2:= 122I;
  #L179eda.  if v1 == v2 then goto L179f94;
  #L179ede.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L179ee4.  v1:= temp;
  #L179ee6.  v2:= 90I;
  #L179eea.  if v1 != v2 then goto L179ef0;
  #L179eee.  goto L179f94;
  #L179ef0.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179ef6.  v1:= temp;
  #L179ef8.  v1:= new `float`[v1];
  #L179efc.  v2:= new `c.e.i.c$a`;
  #L179f00.  call `<init>`(v2) @signature `Lc/e/i/c$a;.<init>:()V` @kind direct;
  #L179f06.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L179f0c.  v3:= temp;
  #L179f0e.  v4:= 1I;
  #L179f10.  v5:= 0I;
  #L179f12.  if v4 >= v3 then goto L179f50;
  #L179f16.  call `a`(v8, v4, v2) @signature `Lc/e/i/c;.a:(Ljava/lang/String;ILc/e/i/c$a;)V` @kind static;
  #L179f1c.  v6:= v2.`c.e.i.c$a.a` @type ^`int`;
  #L179f20.  if v4 >= v6 then goto L179f3e;
  #L179f24.  v7:= v5 + 1;
  #L179f28.  call temp:= `substring`(v8, v4, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L179f2e.  v4:= temp @kind object;
  #L179f30.  call temp:= `parseFloat`(v4) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L179f36.  v4:= temp;
  #L179f38.  v1[v5]:= v4;
  #L179f3c.  v5:= v7;
  #L179f3e.  v4:= v2.`c.e.i.c$a.b` @type ^`boolean` @kind boolean;
  #L179f42.  if v4 == 0 then goto L179f4a;
  #L179f46.  v4:= v6;
  #L179f48.  goto L179f12;
  #L179f4a.  v4:= v6 + 1;
  #L179f4e.  goto L179f12;
  #L179f50.  call temp:= `a`(v1, v0, v5) @signature `Lc/e/i/c;.a:([FII)[F` @kind static;
  #L179f56.  v8:= temp @kind object;
  #L179f58.  return v8 @kind object;
  #L179f5a.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L179f5c.  v1:= new `java.lang.RuntimeException`;
  #L179f60.  v2:= new `java.lang.StringBuilder`;
  #L179f64.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L179f6a.  v3:= "error in parsing \"" @kind object;
  #L179f6e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179f74.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179f7a.  v8:= "\"" @kind object;
  #L179f7e.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179f84.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L179f8a.  v8:= temp @kind object;
  #L179f8c.  call `<init>`(v1, v8, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L179f92.  throw v1;
  #L179f94.  v8:= new `float`[v0];
  #L179f98.  return v8 @kind object;
  catch `java.lang.NumberFormatException` @[L179ef0..L179f58] goto L179f5a;
}
