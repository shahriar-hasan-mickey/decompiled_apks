record `c.e.i.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Lc/e/i/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L178e1c.  v0:= new `java.lang.ThreadLocal`;
  #L178e20.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L178e26.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lc/e/i/a;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L178d04.  v1:= v1 - 255;
  #L178d08.  v0:= v0 - 255;
  #L178d0c.  v1:= v1 * v0 @kind int;
  #L178d10.  v1:= v1 / 255;
  #L178d14.  v0:= v1 - 255;
  #L178d18.  return v0;
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lc/e/i/a;.a:(IIIII)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L178da8.  if v4 != 0 then goto L178db0;
  #L178dac.  v0:= 0I;
  #L178dae.  return v0;
  #L178db0.  v0:= v0 * 255;
  #L178db4.  v0:= v0 * v1 @kind int;
  #L178db8.  v2:= v2 * v3 @kind int;
  #L178dbc.  v1:= v1 - 255;
  #L178dc0.  v2:= v2 * v1 @kind int;
  #L178dc4.  v0:= v0 + v2 @kind int;
  #L178dc6.  v4:= v4 * 255;
  #L178dca.  v0:= v0 / v4 @kind int;
  #L178dcc.  return v0;
}
procedure `int` `b`(`int` v6 , `int` v7 ) @signature `Lc/e/i/a;.b:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L178d2c.  call temp:= `alpha`(v7) @signature `Landroid/graphics/Color;.alpha:(I)I` @kind static;
  #L178d32.  v0:= temp;
  #L178d34.  call temp:= `alpha`(v6) @signature `Landroid/graphics/Color;.alpha:(I)I` @kind static;
  #L178d3a.  v1:= temp;
  #L178d3c.  call temp:= `a`(v1, v0) @signature `Lc/e/i/a;.a:(II)I` @kind static;
  #L178d42.  v2:= temp;
  #L178d44.  call temp:= `red`(v6) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L178d4a.  v3:= temp;
  #L178d4c.  call temp:= `red`(v7) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L178d52.  v4:= temp;
  #L178d54.  call temp:= `a`(v3, v1, v4, v0, v2) @signature `Lc/e/i/a;.a:(IIIII)I` @kind static;
  #L178d5a.  v3:= temp;
  #L178d5c.  call temp:= `green`(v6) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L178d62.  v4:= temp;
  #L178d64.  call temp:= `green`(v7) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L178d6a.  v5:= temp;
  #L178d6c.  call temp:= `a`(v4, v1, v5, v0, v2) @signature `Lc/e/i/a;.a:(IIIII)I` @kind static;
  #L178d72.  v4:= temp;
  #L178d74.  call temp:= `blue`(v6) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L178d7a.  v6:= temp;
  #L178d7c.  call temp:= `blue`(v7) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L178d82.  v7:= temp;
  #L178d84.  call temp:= `a`(v6, v1, v7, v0, v2) @signature `Lc/e/i/a;.a:(IIIII)I` @kind static;
  #L178d8a.  v6:= temp;
  #L178d8c.  call temp:= `argb`(v2, v3, v4, v6) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L178d92.  v6:= temp;
  #L178d94.  return v6;
}
procedure `int` `c`(`int` v1 , `int` v2 ) @signature `Lc/e/i/a;.c:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L178de0.  if v2 < 0 then goto L178dfc;
  #L178de4.  v0:= 255I;
  #L178de8.  if v2 > v0 then goto L178dfc;
  #L178dec.  v0:= 16777215I;
  #L178df2.  v1:= v1 ^& v0 @kind int;
  #L178df4.  v2:= v2 ^< 24;
  #L178df8.  v1:= v1 ^| v2 @kind int;
  #L178dfa.  return v1;
  #L178dfc.  v1:= new `java.lang.IllegalArgumentException`;
  #L178e00.  v2:= "alpha must be between 0 and 255." @kind object;
  #L178e04.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178e0a.  throw v1;
}
