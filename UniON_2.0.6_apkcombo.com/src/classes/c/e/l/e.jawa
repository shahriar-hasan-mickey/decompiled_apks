record `c.e.l.e` @kind class @AccessFlag FINAL extends `c.e.l.f` @kind interface {
  `java.util.Locale`[] `c.e.l.e.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Locale`[] `@@c.e.l.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/e/l/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L17e8f4.  v0:= 0I;
  #L17e8f6.  v0:= new `java.util.Locale`[v0];
  #L17e8fa.  `@@c.e.l.e.b` @type ^`java.util.Locale`[] := v0 @kind object;
  #L17e8fe.  v0:= new `java.util.Locale`;
  #L17e902.  v1:= "en" @kind object;
  #L17e906.  v2:= "XA" @kind object;
  #L17e90a.  call `<init>`(v0, v1, v2) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L17e910.  v0:= new `java.util.Locale`;
  #L17e914.  v1:= "ar" @kind object;
  #L17e918.  v2:= "XB" @kind object;
  #L17e91c.  call `<init>`(v0, v1, v2) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L17e922.  v0:= "en-Latn" @kind object;
  #L17e926.  call temp:= `a`(v0) @signature `Lc/e/l/d;.a:(Ljava/lang/String;)Ljava/util/Locale;` @kind static;
  #L17e92c.  return @kind void;
}
procedure `void` `<init>`(`c.e.l.e` v6 @kind this, `java.util.Locale`[] v7 @kind object) @signature `Lc/e/l/e;.<init>:([Ljava/util/Locale;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17e940.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17e946.  v0:= length @variable v7;
  #L17e948.  if v0 != 0 then goto L17e956;
  #L17e94c.  v7:= `@@c.e.l.e.b` @type ^`java.util.Locale`[] @kind object;
  #L17e950.  v6.`c.e.l.e.a` @type ^`java.util.Locale`[] := v7 @kind object;
  #L17e954.  goto L17ea24;
  #L17e956.  v0:= new `java.util.ArrayList`;
  #L17e95a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L17e960.  v1:= new `java.util.HashSet`;
  #L17e964.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L17e96a.  v2:= new `java.lang.StringBuilder`;
  #L17e96e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17e974.  v3:= 0I;
  #L17e976.  v4:= length @variable v7;
  #L17e978.  if v3 >= v4 then goto L17ea02;
  #L17e97c.  v4:= v7[v3] @kind object;
  #L17e980.  if v4 == 0 then goto L17e9ca;
  #L17e984.  call temp:= `contains`(v1, v4) @signature `Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L17e98a.  v5:= temp;
  #L17e98c.  if v5 == 0 then goto L17e992;
  #L17e990.  goto L17e9c4;
  #L17e992.  call temp:= `clone`(v4) @signature `Ljava/util/Locale;.clone:()Ljava/lang/Object;` @kind virtual;
  #L17e998.  v4:= temp @kind object;
  #L17e99a.  v4:= (`java.util.Locale`) v4 @kind object;
  #L17e99e.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17e9a4.  call `a`(v2, v4) @signature `Lc/e/l/e;.a:(Ljava/lang/StringBuilder;Ljava/util/Locale;)V` @kind static;
  #L17e9aa.  v5:= length @variable v7;
  #L17e9ac.  v5:= v5 + -1;
  #L17e9b0.  if v3 >= v5 then goto L17e9be;
  #L17e9b4.  v5:= 44I;
  #L17e9b8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e9be.  call temp:= `add`(v1, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L17e9c4.  v3:= v3 + 1;
  #L17e9c8.  goto L17e976;
  #L17e9ca.  v7:= new `java.lang.NullPointerException`;
  #L17e9ce.  v0:= new `java.lang.StringBuilder`;
  #L17e9d2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17e9d8.  v1:= "list[" @kind object;
  #L17e9dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e9e2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e9e8.  v1:= "] is null" @kind object;
  #L17e9ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e9f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17e9f8.  v0:= temp @kind object;
  #L17e9fa.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ea00.  throw v7;
  #L17ea02.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L17ea08.  v7:= temp;
  #L17ea0a.  v7:= new `java.util.Locale`[v7];
  #L17ea0e.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L17ea14.  v7:= temp @kind object;
  #L17ea16.  v7:= (`java.util.Locale`[]) v7 @kind object;
  #L17ea1a.  v6.`c.e.l.e.a` @type ^`java.util.Locale`[] := v7 @kind object;
  #L17ea1e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17ea24.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lc/e/l/e;.a:(Ljava/lang/StringBuilder;Ljava/util/Locale;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L17ea38.  call temp:= `getLanguage`(v2) @signature `Ljava/util/Locale;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L17ea3e.  v0:= temp @kind object;
  #L17ea40.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ea46.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L17ea4c.  v0:= temp @kind object;
  #L17ea4e.  if v0 == 0 then goto L17ea76;
  #L17ea52.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L17ea58.  v0:= temp;
  #L17ea5a.  if v0 != 0 then goto L17ea76;
  #L17ea5e.  v0:= 45I;
  #L17ea62.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ea68.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L17ea6e.  v2:= temp @kind object;
  #L17ea70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ea76.  return @kind void;
}
procedure `java.lang.Object` `a`(`c.e.l.e` v1 @kind this) @signature `Lc/e/l/e;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17e84c.  v0:= 0I;
  #L17e84e.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.e.l.e` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lc/e/l/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17e798.  v0:= 1I;
  #L17e79a.  if v6 != v5 then goto L17e7a0;
  #L17e79e.  return v0;
  #L17e7a0.  v1:= instanceof @variable v6 @type ^`c.e.l.e` @kind boolean;
  #L17e7a4.  v2:= 0I;
  #L17e7a6.  if v1 != 0 then goto L17e7ac;
  #L17e7aa.  return v2;
  #L17e7ac.  v6:= (`c.e.l.e`) v6 @kind object;
  #L17e7b0.  v6:= v6.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e7b4.  v1:= v5.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e7b8.  v1:= length @variable v1;
  #L17e7ba.  v3:= length @variable v6;
  #L17e7bc.  if v1 == v3 then goto L17e7c2;
  #L17e7c0.  return v2;
  #L17e7c2.  v1:= 0I;
  #L17e7c4.  v3:= v5.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e7c8.  v4:= length @variable v3;
  #L17e7ca.  if v1 >= v4 then goto L17e7ea;
  #L17e7ce.  v3:= v3[v1] @kind object;
  #L17e7d2.  v4:= v6[v1] @kind object;
  #L17e7d6.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17e7dc.  v3:= temp;
  #L17e7de.  if v3 != 0 then goto L17e7e4;
  #L17e7e2.  return v2;
  #L17e7e4.  v1:= v1 + 1;
  #L17e7e8.  goto L17e7c4;
  #L17e7ea.  return v0;
}
procedure `java.util.Locale` `get`(`c.e.l.e` v2 @kind this, `int` v3 ) @signature `Lc/e/l/e;.get:(I)Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17e8cc.  if v3 < 0 then goto L17e8e0;
  #L17e8d0.  v0:= v2.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e8d4.  v1:= length @variable v0;
  #L17e8d6.  if v3 >= v1 then goto L17e8e0;
  #L17e8da.  v3:= v0[v3] @kind object;
  #L17e8de.  goto L17e8e2;
  #L17e8e0.  v3:= 0I;
  #L17e8e2.  return v3 @kind object;
}
procedure `int` `hashCode`(`c.e.l.e` v4 @kind this) @signature `Lc/e/l/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17e7fc.  v0:= 1I;
  #L17e7fe.  v1:= 0I;
  #L17e800.  v2:= v4.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e804.  v3:= length @variable v2;
  #L17e806.  if v1 >= v3 then goto L17e822;
  #L17e80a.  v0:= v0 * 31;
  #L17e80e.  v2:= v2[v1] @kind object;
  #L17e812.  call temp:= `hashCode`(v2) @signature `Ljava/util/Locale;.hashCode:()I` @kind virtual;
  #L17e818.  v2:= temp;
  #L17e81a.  v0:= v0 + v2 @kind int;
  #L17e81c.  v1:= v1 + 1;
  #L17e820.  goto L17e800;
  #L17e822.  return v0;
}
procedure `int` `size`(`c.e.l.e` v1 @kind this) @signature `Lc/e/l/e;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17e834.  v0:= v1.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e838.  v0:= length @variable v0;
  #L17e83a.  return v0;
}
procedure `java.lang.String` `toString`(`c.e.l.e` v4 @kind this) @signature `Lc/e/l/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17e860.  v0:= new `java.lang.StringBuilder`;
  #L17e864.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17e86a.  v1:= "[" @kind object;
  #L17e86e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e874.  v1:= 0I;
  #L17e876.  v2:= v4.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e87a.  v3:= length @variable v2;
  #L17e87c.  if v1 >= v3 then goto L17e8a8;
  #L17e880.  v2:= v2[v1] @kind object;
  #L17e884.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e88a.  v2:= v4.`c.e.l.e.a` @type ^`java.util.Locale`[] @kind object;
  #L17e88e.  v2:= length @variable v2;
  #L17e890.  v2:= v2 + -1;
  #L17e894.  if v1 >= v2 then goto L17e8a2;
  #L17e898.  v2:= 44I;
  #L17e89c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e8a2.  v1:= v1 + 1;
  #L17e8a6.  goto L17e876;
  #L17e8a8.  v1:= "]" @kind object;
  #L17e8ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e8b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17e8b8.  v0:= temp @kind object;
  #L17e8ba.  return v0 @kind object;
}
