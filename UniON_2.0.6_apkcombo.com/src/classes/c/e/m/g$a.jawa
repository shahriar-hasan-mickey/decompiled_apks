record `c.e.m.g$a` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `c.e.m.g$a.a` @AccessFlag PRIVATE;
  `int` `c.e.m.g$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.e.m.g$a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lc/e/m/g$a;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L17ff18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17ff1e.  v0.`c.e.m.g$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L17ff22.  v0.`c.e.m.g$a.b` @type ^`int` := v2;
  #L17ff26.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`c.e.m.g$a` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lc/e/m/g$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L17fef4.  v0:= new `c.e.m.g$a$a`;
  #L17fef8.  v1:= v3.`c.e.m.g$a.a` @type ^`java.lang.String` @kind object;
  #L17fefc.  v2:= v3.`c.e.m.g$a.b` @type ^`int`;
  #L17ff00.  call `<init>`(v0, v4, v1, v2) @signature `Lc/e/m/g$a$a;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;I)V` @kind direct;
  #L17ff06.  return v0 @kind object;
}
