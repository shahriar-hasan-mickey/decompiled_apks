record `c.e.h.b$b` @kind class @AccessFlag  extends `c.e.h.b$a` @kind interface {
  `java.lang.String` `c.e.h.b$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `c.e.h.b$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.e.h.b$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/e/h/b$b;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L176c20.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L176c26.  v0:= new `java.util.HashMap`;
  #L176c2a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L176c30.  v1.`c.e.h.b$b.b` @type ^`java.util.HashMap` := v0 @kind object;
  #L176c34.  v1.`c.e.h.b$b.a` @type ^`java.lang.String` := v2 @kind object;
  #L176c38.  return @kind void;
}
procedure `android.net.Uri` `a`(`c.e.h.b$b` v5 @kind this, `java.io.File` v6 @kind object) @signature `Lc/e/h/b$b;.a:(Ljava/io/File;)Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L176960.  call temp:= `getCanonicalPath`(v6) @signature `Ljava/io/File;.getCanonicalPath:()Ljava/lang/String;` @kind virtual;
  #L176966.  v6:= temp @kind object;
  #L176968.  v0:= 0I;
  #L17696a.  v1:= v5.`c.e.h.b$b.b` @type ^`java.util.HashMap` @kind object;
  #L17696e.  call temp:= `entrySet`(v1) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L176974.  v1:= temp @kind object;
  #L176976.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L17697c.  v1:= temp @kind object;
  #L17697e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L176984.  v2:= temp;
  #L176986.  if v2 == 0 then goto L1769e6;
  #L17698a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L176990.  v2:= temp @kind object;
  #L176992.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L176996.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L17699c.  v3:= temp @kind object;
  #L17699e.  v3:= (`java.io.File`) v3 @kind object;
  #L1769a2.  call temp:= `getPath`(v3) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1769a8.  v3:= temp @kind object;
  #L1769aa.  call temp:= `startsWith`(v6, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1769b0.  v4:= temp;
  #L1769b2.  if v4 == 0 then goto L17697e;
  #L1769b6.  if v0 == 0 then goto L1769e2;
  #L1769ba.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1769c0.  v3:= temp;
  #L1769c2.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1769c8.  v4:= temp @kind object;
  #L1769ca.  v4:= (`java.io.File`) v4 @kind object;
  #L1769ce.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1769d4.  v4:= temp @kind object;
  #L1769d6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1769dc.  v4:= temp;
  #L1769de.  if v3 <= v4 then goto L17697e;
  #L1769e2.  v0:= v2 @kind object;
  #L1769e4.  goto L17697e;
  #L1769e6.  if v0 == 0 then goto L176a9c;
  #L1769ea.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1769f0.  v1:= temp @kind object;
  #L1769f2.  v1:= (`java.io.File`) v1 @kind object;
  #L1769f6.  call temp:= `getPath`(v1) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1769fc.  v1:= temp @kind object;
  #L1769fe.  v2:= "/" @kind object;
  #L176a02.  call temp:= `endsWith`(v1, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L176a08.  v3:= temp;
  #L176a0a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L176a10.  v1:= temp;
  #L176a12.  if v3 == 0 then goto L176a18;
  #L176a16.  goto L176a1c;
  #L176a18.  v1:= v1 + 1;
  #L176a1c.  call temp:= `substring`(v6, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L176a22.  v6:= temp @kind object;
  #L176a24.  v1:= new `java.lang.StringBuilder`;
  #L176a28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176a2e.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L176a34.  v0:= temp @kind object;
  #L176a36.  v0:= (`java.lang.String`) v0 @kind object;
  #L176a3a.  call temp:= `encode`(v0) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L176a40.  v0:= temp @kind object;
  #L176a42.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176a48.  v0:= 47I;
  #L176a4c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L176a52.  call temp:= `encode`(v6, v2) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L176a58.  v6:= temp @kind object;
  #L176a5a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176a60.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176a66.  v6:= temp @kind object;
  #L176a68.  v0:= new `android.net.Uri$Builder`;
  #L176a6c.  call `<init>`(v0) @signature `Landroid/net/Uri$Builder;.<init>:()V` @kind direct;
  #L176a72.  v1:= "content" @kind object;
  #L176a76.  call temp:= `scheme`(v0, v1) @signature `Landroid/net/Uri$Builder;.scheme:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L176a7c.  v0:= temp @kind object;
  #L176a7e.  v1:= v5.`c.e.h.b$b.a` @type ^`java.lang.String` @kind object;
  #L176a82.  call temp:= `authority`(v0, v1) @signature `Landroid/net/Uri$Builder;.authority:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L176a88.  v0:= temp @kind object;
  #L176a8a.  call temp:= `encodedPath`(v0, v6) @signature `Landroid/net/Uri$Builder;.encodedPath:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L176a90.  v6:= temp @kind object;
  #L176a92.  call temp:= `build`(v6) @signature `Landroid/net/Uri$Builder;.build:()Landroid/net/Uri;` @kind virtual;
  #L176a98.  v6:= temp @kind object;
  #L176a9a.  return v6 @kind object;
  #L176a9c.  v0:= new `java.lang.IllegalArgumentException`;
  #L176aa0.  v1:= new `java.lang.StringBuilder`;
  #L176aa4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176aaa.  v2:= "Failed to find configured root that contains " @kind object;
  #L176aae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176ab4.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176aba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176ac0.  v6:= temp @kind object;
  #L176ac2.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176ac8.  throw v0;
  #L176aca.  v0:= new `java.lang.IllegalArgumentException`;
  #L176ace.  v1:= new `java.lang.StringBuilder`;
  #L176ad2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176ad8.  v2:= "Failed to resolve canonical path for " @kind object;
  #L176adc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176ae2.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176ae8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176aee.  v6:= temp @kind object;
  #L176af0.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176af6.  throw v0;
  catch `java.io.IOException` @[L176960..L176968] goto L176aca;
}
procedure `java.io.File` `a`(`c.e.h.b$b` v4 @kind this, `android.net.Uri` v5 @kind object) @signature `Lc/e/h/b$b;.a:(Landroid/net/Uri;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L176b18.  call temp:= `getEncodedPath`(v5) @signature `Landroid/net/Uri;.getEncodedPath:()Ljava/lang/String;` @kind virtual;
  #L176b1e.  v0:= temp @kind object;
  #L176b20.  v1:= 1I;
  #L176b22.  v2:= 47I;
  #L176b26.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L176b2c.  v2:= temp;
  #L176b2e.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L176b34.  v3:= temp @kind object;
  #L176b36.  call temp:= `decode`(v3) @signature `Landroid/net/Uri;.decode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L176b3c.  v3:= temp @kind object;
  #L176b3e.  v2:= v2 + v1 @kind int;
  #L176b40.  call temp:= `substring`(v0, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L176b46.  v0:= temp @kind object;
  #L176b48.  call temp:= `decode`(v0) @signature `Landroid/net/Uri;.decode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L176b4e.  v0:= temp @kind object;
  #L176b50.  v1:= v4.`c.e.h.b$b.b` @type ^`java.util.HashMap` @kind object;
  #L176b54.  call temp:= `get`(v1, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L176b5a.  v1:= temp @kind object;
  #L176b5c.  v1:= (`java.io.File`) v1 @kind object;
  #L176b60.  if v1 == 0 then goto L176bd2;
  #L176b64.  v5:= new `java.io.File`;
  #L176b68.  call `<init>`(v5, v1, v0) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L176b6e.  call temp:= `getCanonicalFile`(v5) @signature `Ljava/io/File;.getCanonicalFile:()Ljava/io/File;` @kind virtual;
  #L176b74.  v5:= temp @kind object;
  #L176b76.  call temp:= `getPath`(v5) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L176b7c.  v0:= temp @kind object;
  #L176b7e.  call temp:= `getPath`(v1) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L176b84.  v1:= temp @kind object;
  #L176b86.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L176b8c.  v0:= temp;
  #L176b8e.  if v0 == 0 then goto L176b94;
  #L176b92.  return v5 @kind object;
  #L176b94.  v5:= new `java.lang.SecurityException`;
  #L176b98.  v0:= "Resolved path jumped beyond configured root" @kind object;
  #L176b9c.  call `<init>`(v5, v0) @signature `Ljava/lang/SecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176ba2.  throw v5;
  #L176ba4.  v0:= new `java.lang.IllegalArgumentException`;
  #L176ba8.  v1:= new `java.lang.StringBuilder`;
  #L176bac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176bb2.  v2:= "Failed to resolve canonical path for " @kind object;
  #L176bb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176bbc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176bc2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176bc8.  v5:= temp @kind object;
  #L176bca.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176bd0.  throw v0;
  #L176bd2.  v0:= new `java.lang.IllegalArgumentException`;
  #L176bd6.  v1:= new `java.lang.StringBuilder`;
  #L176bda.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176be0.  v2:= "Unable to find configured root for " @kind object;
  #L176be4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176bea.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176bf0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176bf6.  v5:= temp @kind object;
  #L176bf8.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176bfe.  throw v0;
  catch `java.io.IOException` @[L176b6e..L176b76] goto L176ba4;
}
procedure `void` `a`(`c.e.h.b$b` v3 @kind this, `java.lang.String` v4 @kind object, `java.io.File` v5 @kind object) @signature `Lc/e/h/b$b;.a:(Ljava/lang/String;Ljava/io/File;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L176c4c.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L176c52.  v0:= temp;
  #L176c54.  if v0 != 0 then goto L176c9c;
  #L176c58.  call temp:= `getCanonicalFile`(v5) @signature `Ljava/io/File;.getCanonicalFile:()Ljava/io/File;` @kind virtual;
  #L176c5e.  v5:= temp @kind object;
  #L176c60.  v0:= v3.`c.e.h.b$b.b` @type ^`java.util.HashMap` @kind object;
  #L176c64.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L176c6a.  return @kind void;
  #L176c6c.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L176c6e.  v0:= new `java.lang.IllegalArgumentException`;
  #L176c72.  v1:= new `java.lang.StringBuilder`;
  #L176c76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L176c7c.  v2:= "Failed to resolve canonical path for " @kind object;
  #L176c80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176c86.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L176c8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L176c92.  v5:= temp @kind object;
  #L176c94.  call `<init>`(v0, v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L176c9a.  throw v0;
  #L176c9c.  v4:= new `java.lang.IllegalArgumentException`;
  #L176ca0.  v5:= "Name must not be empty" @kind object;
  #L176ca4.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176caa.  throw v4;
  catch `java.io.IOException` @[L176c58..L176c60] goto L176c6c;
}
