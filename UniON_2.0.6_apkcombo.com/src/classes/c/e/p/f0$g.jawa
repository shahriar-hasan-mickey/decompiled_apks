record `c.e.p.f0$g` @kind class @AccessFlag  extends `c.e.p.f0$l` @kind class {
  `android.view.WindowInsets` `c.e.p.f0$g.c` @AccessFlag FINAL;
  `c.e.i.b` `c.e.p.f0$g.d` @AccessFlag PRIVATE;
  `c.e.p.f0` `c.e.p.f0$g.e` @AccessFlag PRIVATE;
  `c.e.i.b` `c.e.p.f0$g.f` @AccessFlag ;
}
global `boolean` `@@c.e.p.f0$g.g` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@c.e.p.f0$g.h` @AccessFlag PRIVATE_STATIC;
global `java.lang.Class` `@@c.e.p.f0$g.i` @AccessFlag PRIVATE_STATIC;
global `java.lang.Class` `@@c.e.p.f0$g.j` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Field` `@@c.e.p.f0$g.k` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Field` `@@c.e.p.f0$g.l` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`c.e.p.f0$g` v0 @kind this, `c.e.p.f0` v1 @kind object, `android.view.WindowInsets` v2 @kind object) @signature `Lc/e/p/f0$g;.<init>:(Lc/e/p/f0;Landroid/view/WindowInsets;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1868b4.  call `<init>`(v0, v1) @signature `Lc/e/p/f0$l;.<init>:(Lc/e/p/f0;)V` @kind direct;
  #L1868ba.  v1:= 0I;
  #L1868bc.  v0.`c.e.p.f0$g.d` @type ^`c.e.i.b` := v1 @kind object;
  #L1868c0.  v0.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` := v2 @kind object;
  #L1868c4.  return @kind void;
}
procedure `void` `<init>`(`c.e.p.f0$g` v1 @kind this, `c.e.p.f0` v2 @kind object, `c.e.p.f0$g` v3 @kind object) @signature `Lc/e/p/f0$g;.<init>:(Lc/e/p/f0;Lc/e/p/f0$g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1868d8.  v0:= new `android.view.WindowInsets`;
  #L1868dc.  v3:= v3.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L1868e0.  call `<init>`(v0, v3) @signature `Landroid/view/WindowInsets;.<init>:(Landroid/view/WindowInsets;)V` @kind direct;
  #L1868e6.  call `<init>`(v1, v2, v0) @signature `Lc/e/p/f0$g;.<init>:(Lc/e/p/f0;Landroid/view/WindowInsets;)V` @kind direct;
  #L1868ec.  return @kind void;
}
procedure `c.e.i.b` `b`(`c.e.p.f0$g` v4 @kind this, `android.view.View` v5 @kind object) @signature `Lc/e/p/f0$g;.b:(Landroid/view/View;)Lc/e/i/b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L186710.  v0:= "WindowInsetsCompat" @kind object;
  #L186714.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L186718.  v2:= 30I;
  #L18671c.  if v1 >= v2 then goto L1867d0;
  #L186720.  v1:= `@@c.e.p.f0$g.g` @type ^`boolean` @kind boolean;
  #L186724.  if v1 != 0 then goto L18672e;
  #L186728.  call `i`() @signature `Lc/e/p/f0$g;.i:()V` @kind static;
  #L18672e.  v1:= `@@c.e.p.f0$g.h` @type ^`java.lang.reflect.Method` @kind object;
  #L186732.  v2:= 0I;
  #L186734.  if v1 == 0 then goto L1867ce;
  #L186738.  v3:= `@@c.e.p.f0$g.j` @type ^`java.lang.Class` @kind object;
  #L18673c.  if v3 == 0 then goto L1867ce;
  #L186740.  v3:= `@@c.e.p.f0$g.k` @type ^`java.lang.reflect.Field` @kind object;
  #L186744.  if v3 != 0 then goto L18674a;
  #L186748.  goto L1867ce;
  #L18674a.  v3:= 0I;
  #L18674c.  v3:= new `java.lang.Object`[v3];
  #L186750.  call temp:= `invoke`(v1, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L186756.  v5:= temp @kind object;
  #L186758.  if v5 != 0 then goto L186772;
  #L18675c.  v5:= "Failed to get visible insets. getViewRootImpl() returned null from the provided view. This means that the view is either not attached or the method has been overridden" @kind object;
  #L186760.  v1:= new `java.lang.NullPointerException`;
  #L186764.  call `<init>`(v1) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L18676a.  call temp:= `w`(v0, v5, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L186770.  return v2 @kind object;
  #L186772.  v1:= `@@c.e.p.f0$g.l` @type ^`java.lang.reflect.Field` @kind object;
  #L186776.  call temp:= `get`(v1, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18677c.  v5:= temp @kind object;
  #L18677e.  v1:= `@@c.e.p.f0$g.k` @type ^`java.lang.reflect.Field` @kind object;
  #L186782.  call temp:= `get`(v1, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L186788.  v5:= temp @kind object;
  #L18678a.  v5:= (`android.graphics.Rect`) v5 @kind object;
  #L18678e.  if v5 == 0 then goto L18679a;
  #L186792.  call temp:= `a`(v5) @signature `Lc/e/i/b;.a:(Landroid/graphics/Rect;)Lc/e/i/b;` @kind static;
  #L186798.  v2:= temp @kind object;
  #L18679a.  return v2 @kind object;
  #L18679c.  v5:= Exception @type ^`java.lang.ReflectiveOperationException` @kind object;
  #L18679e.  v1:= new `java.lang.StringBuilder`;
  #L1867a2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1867a8.  v3:= "Failed to get visible insets. (Reflection error). " @kind object;
  #L1867ac.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1867b2.  call temp:= `getMessage`(v5) @signature `Ljava/lang/ReflectiveOperationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1867b8.  v3:= temp @kind object;
  #L1867ba.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1867c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1867c6.  v1:= temp @kind object;
  #L1867c8.  call temp:= `e`(v0, v1, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1867ce.  return v2 @kind object;
  #L1867d0.  v5:= new `java.lang.UnsupportedOperationException`;
  #L1867d4.  v0:= "getVisibleInsets() should not be called on API >= 30. Use WindowInsets.isVisible() instead." @kind object;
  #L1867d8.  call `<init>`(v5, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1867de.  throw v5;
  catch `java.lang.ReflectiveOperationException` @[L18674c..L18679a] goto L18679c;
}
procedure `void` `i`() @signature `Lc/e/p/f0$g;.i:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L186950.  v0:= 1I;
  #L186952.  v1:= constclass @type ^`android.view.View` @kind object;
  #L186956.  v2:= "getViewRootImpl" @kind object;
  #L18695a.  v3:= 0I;
  #L18695c.  v3:= new `java.lang.Class`[v3];
  #L186960.  call temp:= `getDeclaredMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L186966.  v1:= temp @kind object;
  #L186968.  `@@c.e.p.f0$g.h` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L18696c.  v1:= "android.view.ViewRootImpl" @kind object;
  #L186970.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L186976.  v1:= temp @kind object;
  #L186978.  `@@c.e.p.f0$g.i` @type ^`java.lang.Class` := v1 @kind object;
  #L18697c.  v1:= "android.view.View$AttachInfo" @kind object;
  #L186980.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L186986.  v1:= temp @kind object;
  #L186988.  `@@c.e.p.f0$g.j` @type ^`java.lang.Class` := v1 @kind object;
  #L18698c.  v1:= `@@c.e.p.f0$g.j` @type ^`java.lang.Class` @kind object;
  #L186990.  v2:= "mVisibleInsets" @kind object;
  #L186994.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L18699a.  v1:= temp @kind object;
  #L18699c.  `@@c.e.p.f0$g.k` @type ^`java.lang.reflect.Field` := v1 @kind object;
  #L1869a0.  v1:= `@@c.e.p.f0$g.i` @type ^`java.lang.Class` @kind object;
  #L1869a4.  v2:= "mAttachInfo" @kind object;
  #L1869a8.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1869ae.  v1:= temp @kind object;
  #L1869b0.  `@@c.e.p.f0$g.l` @type ^`java.lang.reflect.Field` := v1 @kind object;
  #L1869b4.  v1:= `@@c.e.p.f0$g.k` @type ^`java.lang.reflect.Field` @kind object;
  #L1869b8.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1869be.  v1:= `@@c.e.p.f0$g.l` @type ^`java.lang.reflect.Field` @kind object;
  #L1869c2.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1869c8.  goto L186a00;
  #L1869ca.  v1:= Exception @type ^`java.lang.ReflectiveOperationException` @kind object;
  #L1869cc.  v2:= new `java.lang.StringBuilder`;
  #L1869d0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1869d6.  v3:= "Failed to get visible insets. (Reflection error). " @kind object;
  #L1869da.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1869e0.  call temp:= `getMessage`(v1) @signature `Ljava/lang/ReflectiveOperationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1869e6.  v3:= temp @kind object;
  #L1869e8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1869ee.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1869f4.  v2:= temp @kind object;
  #L1869f6.  v3:= "WindowInsetsCompat" @kind object;
  #L1869fa.  call temp:= `e`(v3, v2, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L186a00.  `@@c.e.p.f0$g.g` @type ^`boolean` := v0 @kind boolean;
  #L186a04.  return @kind void;
  catch `java.lang.ReflectiveOperationException` @[L186952..L18696c] goto L1869ca;
  catch `java.lang.ReflectiveOperationException` @[L186970..L18697c] goto L1869ca;
  catch `java.lang.ReflectiveOperationException` @[L186980..L1869c8] goto L1869ca;
}
procedure `c.e.p.f0` `a`(`c.e.p.f0$g` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lc/e/p/f0$g;.a:(IIII)Lc/e/p/f0;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L186800.  v0:= new `c.e.p.f0$b`;
  #L186804.  v1:= v2.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L186808.  call temp:= `a`(v1) @signature `Lc/e/p/f0;.a:(Landroid/view/WindowInsets;)Lc/e/p/f0;` @kind static;
  #L18680e.  v1:= temp @kind object;
  #L186810.  call `<init>`(v0, v1) @signature `Lc/e/p/f0$b;.<init>:(Lc/e/p/f0;)V` @kind direct;
  #L186816.  call temp:= `f`(v2) @signature `Lc/e/p/f0$g;.f:()Lc/e/i/b;` @kind virtual;
  #L18681c.  v1:= temp @kind object;
  #L18681e.  call temp:= `a`(v1, v3, v4, v5, v6) @signature `Lc/e/p/f0;.a:(Lc/e/i/b;IIII)Lc/e/i/b;` @kind static;
  #L186824.  v1:= temp @kind object;
  #L186826.  call temp:= `b`(v0, v1) @signature `Lc/e/p/f0$b;.b:(Lc/e/i/b;)Lc/e/p/f0$b;` @kind virtual;
  #L18682c.  call temp:= `e`(v2) @signature `Lc/e/p/f0$l;.e:()Lc/e/i/b;` @kind virtual;
  #L186832.  v1:= temp @kind object;
  #L186834.  call temp:= `a`(v1, v3, v4, v5, v6) @signature `Lc/e/p/f0;.a:(Lc/e/i/b;IIII)Lc/e/i/b;` @kind static;
  #L18683a.  v3:= temp @kind object;
  #L18683c.  call temp:= `a`(v0, v3) @signature `Lc/e/p/f0$b;.a:(Lc/e/i/b;)Lc/e/p/f0$b;` @kind virtual;
  #L186842.  call temp:= `a`(v0) @signature `Lc/e/p/f0$b;.a:()Lc/e/p/f0;` @kind virtual;
  #L186848.  v3:= temp @kind object;
  #L18684a.  return v3 @kind object;
}
procedure `void` `a`(`c.e.p.f0$g` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/e/p/f0$g;.a:(Landroid/view/View;)V` @AccessFlag  {
    temp;

  #L186900.  call temp:= `b`(v0, v1) @signature `Lc/e/p/f0$g;.b:(Landroid/view/View;)Lc/e/i/b;` @kind direct;
  #L186906.  v1:= temp @kind object;
  #L186908.  if v1 != 0 then goto L186910;
  #L18690c.  v1:= `@@c.e.i.b.e` @type ^`c.e.i.b` @kind object;
  #L186910.  call `a`(v0, v1) @signature `Lc/e/p/f0$g;.a:(Lc/e/i/b;)V` @kind virtual;
  #L186916.  return @kind void;
}
procedure `void` `a`(`c.e.p.f0$g` v0 @kind this, `c.e.i.b` v1 @kind object) @signature `Lc/e/p/f0$g;.a:(Lc/e/i/b;)V` @AccessFlag  {
    temp;

  #L186a4c.  v0.`c.e.p.f0$g.f` @type ^`c.e.i.b` := v1 @kind object;
  #L186a50.  return @kind void;
}
procedure `void` `a`(`c.e.p.f0$g` v1 @kind this, `c.e.p.f0` v2 @kind object) @signature `Lc/e/p/f0$g;.a:(Lc/e/p/f0;)V` @AccessFlag  {
    temp;
    v0;

  #L186928.  v0:= v1.`c.e.p.f0$g.e` @type ^`c.e.p.f0` @kind object;
  #L18692c.  call `a`(v2, v0) @signature `Lc/e/p/f0;.a:(Lc/e/p/f0;)V` @kind virtual;
  #L186932.  v0:= v1.`c.e.p.f0$g.f` @type ^`c.e.i.b` @kind object;
  #L186936.  call `a`(v2, v0) @signature `Lc/e/p/f0;.a:(Lc/e/i/b;)V` @kind virtual;
  #L18693c.  return @kind void;
}
procedure `void` `a`(`c.e.p.f0$g` v0 @kind this, `c.e.i.b`[] v1 @kind object) @signature `Lc/e/p/f0$g;.a:([Lc/e/i/b;)V` @AccessFlag PUBLIC {
    temp;

  #L186a38.  return @kind void;
}
procedure `void` `b`(`c.e.p.f0$g` v0 @kind this, `c.e.p.f0` v1 @kind object) @signature `Lc/e/p/f0$g;.b:(Lc/e/p/f0;)V` @AccessFlag  {
    temp;

  #L186a64.  v0.`c.e.p.f0$g.e` @type ^`c.e.p.f0` := v1 @kind object;
  #L186a68.  return @kind void;
}
procedure `boolean` `equals`(`c.e.p.f0$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/e/p/f0$g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18685c.  call temp:= `equals`(v1, v2) @signature `Lc/e/p/f0$l;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L186862.  v0:= temp;
  #L186864.  if v0 != 0 then goto L18686c;
  #L186868.  v2:= 0I;
  #L18686a.  return v2;
  #L18686c.  v2:= (`c.e.p.f0$g`) v2 @kind object;
  #L186870.  v0:= v1.`c.e.p.f0$g.f` @type ^`c.e.i.b` @kind object;
  #L186874.  v2:= v2.`c.e.p.f0$g.f` @type ^`c.e.i.b` @kind object;
  #L186878.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18687e.  v2:= temp;
  #L186880.  return v2;
}
procedure `c.e.i.b` `f`(`c.e.p.f0$g` v4 @kind this) @signature `Lc/e/p/f0$g;.f:()Lc/e/i/b;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1866b4.  v0:= v4.`c.e.p.f0$g.d` @type ^`c.e.i.b` @kind object;
  #L1866b8.  if v0 != 0 then goto L1866f8;
  #L1866bc.  v0:= v4.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L1866c0.  call temp:= `getSystemWindowInsetLeft`(v0) @signature `Landroid/view/WindowInsets;.getSystemWindowInsetLeft:()I` @kind virtual;
  #L1866c6.  v0:= temp;
  #L1866c8.  v1:= v4.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L1866cc.  call temp:= `getSystemWindowInsetTop`(v1) @signature `Landroid/view/WindowInsets;.getSystemWindowInsetTop:()I` @kind virtual;
  #L1866d2.  v1:= temp;
  #L1866d4.  v2:= v4.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L1866d8.  call temp:= `getSystemWindowInsetRight`(v2) @signature `Landroid/view/WindowInsets;.getSystemWindowInsetRight:()I` @kind virtual;
  #L1866de.  v2:= temp;
  #L1866e0.  v3:= v4.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L1866e4.  call temp:= `getSystemWindowInsetBottom`(v3) @signature `Landroid/view/WindowInsets;.getSystemWindowInsetBottom:()I` @kind virtual;
  #L1866ea.  v3:= temp;
  #L1866ec.  call temp:= `a`(v0, v1, v2, v3) @signature `Lc/e/i/b;.a:(IIII)Lc/e/i/b;` @kind static;
  #L1866f2.  v0:= temp @kind object;
  #L1866f4.  v4.`c.e.p.f0$g.d` @type ^`c.e.i.b` := v0 @kind object;
  #L1866f8.  v0:= v4.`c.e.p.f0$g.d` @type ^`c.e.i.b` @kind object;
  #L1866fc.  return v0 @kind object;
}
procedure `boolean` `h`(`c.e.p.f0$g` v1 @kind this) @signature `Lc/e/p/f0$g;.h:()Z` @AccessFlag  {
    temp;
    v0;

  #L186894.  v0:= v1.`c.e.p.f0$g.c` @type ^`android.view.WindowInsets` @kind object;
  #L186898.  call temp:= `isRound`(v0) @signature `Landroid/view/WindowInsets;.isRound:()Z` @kind virtual;
  #L18689e.  v0:= temp;
  #L1868a0.  return v0;
}
