record `c.e.n.a$a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `c.e.n.a$a.a` @AccessFlag PRIVATE;
  `int` `c.e.n.a$a.b` @AccessFlag PRIVATE;
  `c.e.n.d` `c.e.n.a$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.e.n.a$a` v1 @kind this) @signature `Lc/e/n/a$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L180124.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L18012a.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L180130.  v0:= temp @kind object;
  #L180132.  call temp:= `a`(v0) @signature `Lc/e/n/a;.a:(Ljava/util/Locale;)Z` @kind static;
  #L180138.  v0:= temp;
  #L18013a.  call `b`(v1, v0) @signature `Lc/e/n/a$a;.b:(Z)V` @kind direct;
  #L180140.  return @kind void;
}
procedure `c.e.n.a` `a`(`boolean` v0 ) @signature `Lc/e/n/a$a;.a:(Z)Lc/e/n/a;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L180104.  if v0 == 0 then goto L18010e;
  #L180108.  v0:= `@@c.e.n.a.h` @type ^`c.e.n.a` @kind object;
  #L18010c.  goto L180112;
  #L18010e.  v0:= `@@c.e.n.a.g` @type ^`c.e.n.a` @kind object;
  #L180112.  return v0 @kind object;
}
procedure `void` `b`(`c.e.n.a$a` v0 @kind this, `boolean` v1 ) @signature `Lc/e/n/a$a;.b:(Z)V` @AccessFlag PRIVATE {
    temp;

  #L180154.  v0.`c.e.n.a$a.a` @type ^`boolean` := v1 @kind boolean;
  #L180158.  v1:= `@@c.e.n.a.d` @type ^`c.e.n.d` @kind object;
  #L18015c.  v0.`c.e.n.a$a.c` @type ^`c.e.n.d` := v1 @kind object;
  #L180160.  v1:= 2I;
  #L180162.  v0.`c.e.n.a$a.b` @type ^`int` := v1;
  #L180166.  return @kind void;
}
procedure `c.e.n.a` `a`(`c.e.n.a$a` v4 @kind this) @signature `Lc/e/n/a$a;.a:()Lc/e/n/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1800b8.  v0:= v4.`c.e.n.a$a.b` @type ^`int`;
  #L1800bc.  v1:= 2I;
  #L1800be.  if v0 != v1 then goto L1800dc;
  #L1800c2.  v0:= v4.`c.e.n.a$a.c` @type ^`c.e.n.d` @kind object;
  #L1800c6.  v1:= `@@c.e.n.a.d` @type ^`c.e.n.d` @kind object;
  #L1800ca.  if v0 != v1 then goto L1800dc;
  #L1800ce.  v0:= v4.`c.e.n.a$a.a` @type ^`boolean` @kind boolean;
  #L1800d2.  call temp:= `a`(v0) @signature `Lc/e/n/a$a;.a:(Z)Lc/e/n/a;` @kind static;
  #L1800d8.  v0:= temp @kind object;
  #L1800da.  return v0 @kind object;
  #L1800dc.  v0:= new `c.e.n.a`;
  #L1800e0.  v1:= v4.`c.e.n.a$a.a` @type ^`boolean` @kind boolean;
  #L1800e4.  v2:= v4.`c.e.n.a$a.b` @type ^`int`;
  #L1800e8.  v3:= v4.`c.e.n.a$a.c` @type ^`c.e.n.d` @kind object;
  #L1800ec.  call `<init>`(v0, v1, v2, v3) @signature `Lc/e/n/a;.<init>:(ZILc/e/n/d;)V` @kind direct;
  #L1800f2.  return v0 @kind object;
}
