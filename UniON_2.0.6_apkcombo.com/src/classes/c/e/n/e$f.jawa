record `c.e.n.e$f` @kind class @AccessFlag  extends `c.e.n.e$d` @kind class {
}
global `c.e.n.e$f` `@@c.e.n.e$f.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/e/n/e$f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L181b2c.  v0:= new `c.e.n.e$f`;
  #L181b30.  call `<init>`(v0) @signature `Lc/e/n/e$f;.<init>:()V` @kind direct;
  #L181b36.  `@@c.e.n.e$f.b` @type ^`c.e.n.e$f` := v0 @kind object;
  #L181b3a.  return @kind void;
}
procedure `void` `<init>`(`c.e.n.e$f` v1 @kind this) @signature `Lc/e/n/e$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L181b4c.  v0:= 0I;
  #L181b4e.  call `<init>`(v1, v0) @signature `Lc/e/n/e$d;.<init>:(Lc/e/n/e$c;)V` @kind direct;
  #L181b54.  return @kind void;
}
procedure `boolean` `a`(`c.e.n.e$f` v2 @kind this) @signature `Lc/e/n/e$f;.a:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L181b00.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L181b06.  v0:= temp @kind object;
  #L181b08.  call temp:= `b`(v0) @signature `Lc/e/n/f;.b:(Ljava/util/Locale;)I` @kind static;
  #L181b0e.  v0:= temp;
  #L181b10.  v1:= 1I;
  #L181b12.  if v0 != v1 then goto L181b18;
  #L181b16.  goto L181b1a;
  #L181b18.  v1:= 0I;
  #L181b1a.  return v1;
}
