record `c.e.n.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Method` `@@c.e.n.b.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@c.e.n.b.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lc/e/n/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L180b20.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L180b24.  v1:= "addLikelySubtags" @kind object;
  #L180b28.  v2:= 0I;
  #L180b2a.  v3:= 1I;
  #L180b2c.  v4:= 21I;
  #L180b30.  if v0 >= v4 then goto L180b92;
  #L180b34.  v0:= "libcore.icu.ICU" @kind object;
  #L180b38.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L180b3e.  v0:= temp @kind object;
  #L180b40.  if v0 == 0 then goto L180bce;
  #L180b44.  v4:= "getScript" @kind object;
  #L180b48.  v5:= new `java.lang.Class`[v3];
  #L180b4c.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L180b50.  v5[v2]:= v6 @kind object;
  #L180b54.  call temp:= `getMethod`(v0, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L180b5a.  v4:= temp @kind object;
  #L180b5c.  `@@c.e.n.b.a` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L180b60.  v3:= new `java.lang.Class`[v3];
  #L180b64.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L180b68.  v3[v2]:= v4 @kind object;
  #L180b6c.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L180b72.  v0:= temp @kind object;
  #L180b74.  `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L180b78.  goto L180bce;
  #L180b7a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L180b7c.  v1:= 0I;
  #L180b7e.  `@@c.e.n.b.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L180b82.  `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L180b86.  v1:= "ICUCompat" @kind object;
  #L180b8a.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L180b90.  goto L180bce;
  #L180b92.  v4:= 24I;
  #L180b96.  if v0 >= v4 then goto L180bce;
  #L180b9a.  v0:= "libcore.icu.ICU" @kind object;
  #L180b9e.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L180ba4.  v0:= temp @kind object;
  #L180ba6.  v3:= new `java.lang.Class`[v3];
  #L180baa.  v4:= constclass @type ^`java.util.Locale` @kind object;
  #L180bae.  v3[v2]:= v4 @kind object;
  #L180bb2.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L180bb8.  v0:= temp @kind object;
  #L180bba.  `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L180bbe.  goto L180bce;
  #L180bc0.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L180bc2.  v1:= new `java.lang.IllegalStateException`;
  #L180bc6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L180bcc.  throw v1;
  #L180bce.  return @kind void;
  catch `java.lang.Exception` @[L180b38..L180b78] goto L180b7a;
  catch `java.lang.Exception` @[L180b9e..L180bbe] goto L180bc0;
}
procedure `java.lang.String` `a`(`java.lang.String` v4 @kind object) @signature `Lc/e/n/b;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L180a1c.  v0:= "ICUCompat" @kind object;
  #L180a20.  v1:= 0I;
  #L180a22.  v2:= `@@c.e.n.b.a` @type ^`java.lang.reflect.Method` @kind object;
  #L180a26.  if v2 == 0 then goto L180a54;
  #L180a2a.  v2:= 1I;
  #L180a2c.  v2:= new `java.lang.Object`[v2];
  #L180a30.  v3:= 0I;
  #L180a32.  v2[v3]:= v4 @kind object;
  #L180a36.  v4:= `@@c.e.n.b.a` @type ^`java.lang.reflect.Method` @kind object;
  #L180a3a.  call temp:= `invoke`(v4, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L180a40.  v4:= temp @kind object;
  #L180a42.  v4:= (`java.lang.String`) v4 @kind object;
  #L180a46.  return v4 @kind object;
  #L180a48.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L180a4a.  goto L180a4e;
  #L180a4c.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L180a4e.  call temp:= `w`(v0, v4) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L180a54.  return v1 @kind object;
  catch `java.lang.IllegalAccessException` @[L180a22..L180a46] goto L180a4c;
  catch `java.lang.reflect.InvocationTargetException` @[L180a22..L180a46] goto L180a48;
}
procedure `java.lang.String` `a`(`java.util.Locale` v4 @kind object) @signature `Lc/e/n/b;.a:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1809b8.  v0:= "ICUCompat" @kind object;
  #L1809bc.  call temp:= `toString`(v4) @signature `Ljava/util/Locale;.toString:()Ljava/lang/String;` @kind virtual;
  #L1809c2.  v4:= temp @kind object;
  #L1809c4.  v1:= `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1809c8.  if v1 == 0 then goto L1809f8;
  #L1809cc.  v1:= 1I;
  #L1809ce.  v1:= new `java.lang.Object`[v1];
  #L1809d2.  v2:= 0I;
  #L1809d4.  v1[v2]:= v4 @kind object;
  #L1809d8.  v2:= `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1809dc.  v3:= 0I;
  #L1809de.  call temp:= `invoke`(v2, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1809e4.  v1:= temp @kind object;
  #L1809e6.  v1:= (`java.lang.String`) v1 @kind object;
  #L1809ea.  return v1 @kind object;
  #L1809ec.  v1:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1809ee.  goto L1809f2;
  #L1809f0.  v1:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1809f2.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1809f8.  return v4 @kind object;
  catch `java.lang.IllegalAccessException` @[L1809c4..L1809ea] goto L1809f0;
  catch `java.lang.reflect.InvocationTargetException` @[L1809c4..L1809ea] goto L1809ec;
}
procedure `java.lang.String` `b`(`java.util.Locale` v4 @kind object) @signature `Lc/e/n/b;.b:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L180a78.  v0:= "ICUCompat" @kind object;
  #L180a7c.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L180a80.  v2:= 24I;
  #L180a84.  if v1 < v2 then goto L180aa2;
  #L180a88.  call temp:= `forLocale`(v4) @signature `Landroid/icu/util/ULocale;.forLocale:(Ljava/util/Locale;)Landroid/icu/util/ULocale;` @kind static;
  #L180a8e.  v4:= temp @kind object;
  #L180a90.  call temp:= `addLikelySubtags`(v4) @signature `Landroid/icu/util/ULocale;.addLikelySubtags:(Landroid/icu/util/ULocale;)Landroid/icu/util/ULocale;` @kind static;
  #L180a96.  v4:= temp @kind object;
  #L180a98.  call temp:= `getScript`(v4) @signature `Landroid/icu/util/ULocale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L180a9e.  v4:= temp @kind object;
  #L180aa0.  return v4 @kind object;
  #L180aa2.  v2:= 21I;
  #L180aa6.  v3:= 0I;
  #L180aa8.  if v1 < v2 then goto L180ae8;
  #L180aac.  v1:= 1I;
  #L180aae.  v1:= new `java.lang.Object`[v1];
  #L180ab2.  v2:= 0I;
  #L180ab4.  v1[v2]:= v4 @kind object;
  #L180ab8.  v2:= `@@c.e.n.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L180abc.  call temp:= `invoke`(v2, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L180ac2.  v1:= temp @kind object;
  #L180ac4.  v1:= (`java.util.Locale`) v1 @kind object;
  #L180ac8.  call temp:= `getScript`(v1) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L180ace.  v4:= temp @kind object;
  #L180ad0.  return v4 @kind object;
  #L180ad2.  v1:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L180ad4.  goto L180ad8;
  #L180ad6.  v1:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L180ad8.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L180ade.  call temp:= `getScript`(v4) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L180ae4.  v4:= temp @kind object;
  #L180ae6.  return v4 @kind object;
  #L180ae8.  call temp:= `a`(v4) @signature `Lc/e/n/b;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L180aee.  v4:= temp @kind object;
  #L180af0.  if v4 == 0 then goto L180afe;
  #L180af4.  call temp:= `a`(v4) @signature `Lc/e/n/b;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L180afa.  v4:= temp @kind object;
  #L180afc.  return v4 @kind object;
  #L180afe.  return v3 @kind object;
  catch `java.lang.reflect.InvocationTargetException` @[L180aae..L180ad0] goto L180ad6;
  catch `java.lang.IllegalAccessException` @[L180aae..L180ad0] goto L180ad2;
}
