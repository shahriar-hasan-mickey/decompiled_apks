record `c.e.n.c` @kind class @AccessFlag PUBLIC extends `android.text.Spannable` @kind interface {
  `android.text.Spannable` `c.e.n.c.b` @AccessFlag PRIVATE_FINAL;
  `c.e.n.c$a` `c.e.n.c.c` @AccessFlag PRIVATE_FINAL;
  `android.text.PrecomputedText` `c.e.n.c.d` @AccessFlag PRIVATE_FINAL;
}
procedure `c.e.n.c$a` `a`(`c.e.n.c` v1 @kind this) @signature `Lc/e/n/c;.a:()Lc/e/n/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18171c.  v0:= v1.`c.e.n.c.c` @type ^`c.e.n.c$a` @kind object;
  #L181720.  return v0 @kind object;
}
procedure `android.text.PrecomputedText` `b`(`c.e.n.c` v2 @kind this) @signature `Lc/e/n/c;.b:()Landroid/text/PrecomputedText;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1816f4.  v0:= v2.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L1816f8.  v1:= instanceof @variable v0 @type ^`android.text.PrecomputedText` @kind boolean;
  #L1816fc.  if v1 == 0 then goto L181706;
  #L181700.  v0:= (`android.text.PrecomputedText`) v0 @kind object;
  #L181704.  return v0 @kind object;
  #L181706.  v0:= 0I;
  #L181708.  return v0 @kind object;
}
procedure `char` `charAt`(`c.e.n.c` v1 @kind this, `int` v2 ) @signature `Lc/e/n/c;.charAt:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L181734.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181738.  call temp:= `charAt`(v0, v2) @signature `Landroid/text/Spannable;.charAt:(I)C` @kind interface;
  #L18173e.  v2:= temp;
  #L181740.  return v2;
}
procedure `int` `getSpanEnd`(`c.e.n.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/e/n/c;.getSpanEnd:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L181754.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181758.  call temp:= `getSpanEnd`(v0, v2) @signature `Landroid/text/Spannable;.getSpanEnd:(Ljava/lang/Object;)I` @kind interface;
  #L18175e.  v2:= temp;
  #L181760.  return v2;
}
procedure `int` `getSpanFlags`(`c.e.n.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/e/n/c;.getSpanFlags:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L181774.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181778.  call temp:= `getSpanFlags`(v0, v2) @signature `Landroid/text/Spannable;.getSpanFlags:(Ljava/lang/Object;)I` @kind interface;
  #L18177e.  v2:= temp;
  #L181780.  return v2;
}
procedure `int` `getSpanStart`(`c.e.n.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/e/n/c;.getSpanStart:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L181794.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181798.  call temp:= `getSpanStart`(v0, v2) @signature `Landroid/text/Spannable;.getSpanStart:(Ljava/lang/Object;)I` @kind interface;
  #L18179e.  v2:= temp;
  #L1817a0.  return v2;
}
procedure `java.lang.Object`[] `getSpans`(`c.e.n.c` v2 @kind this, `int` v3 , `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lc/e/n/c;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L181814.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L181818.  v1:= 29I;
  #L18181c.  if v0 < v1 then goto L18182e;
  #L181820.  v0:= v2.`c.e.n.c.d` @type ^`android.text.PrecomputedText` @kind object;
  #L181824.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/PrecomputedText;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind virtual;
  #L18182a.  v3:= temp @kind object;
  #L18182c.  return v3 @kind object;
  #L18182e.  v0:= v2.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181832.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/Spannable;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind interface;
  #L181838.  v3:= temp @kind object;
  #L18183a.  return v3 @kind object;
}
procedure `int` `length`(`c.e.n.c` v1 @kind this) @signature `Lc/e/n/c;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1817b4.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L1817b8.  call temp:= `length`(v0) @signature `Landroid/text/Spannable;.length:()I` @kind interface;
  #L1817be.  v0:= temp;
  #L1817c0.  return v0;
}
procedure `int` `nextSpanTransition`(`c.e.n.c` v1 @kind this, `int` v2 , `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lc/e/n/c;.nextSpanTransition:(IILjava/lang/Class;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1817d4.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L1817d8.  call temp:= `nextSpanTransition`(v0, v2, v3, v4) @signature `Landroid/text/Spannable;.nextSpanTransition:(IILjava/lang/Class;)I` @kind interface;
  #L1817de.  v2:= temp;
  #L1817e0.  return v2;
}
procedure `void` `removeSpan`(`c.e.n.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/e/n/c;.removeSpan:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18186c.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L181870.  if v0 != 0 then goto L181898;
  #L181874.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L181878.  v1:= 29I;
  #L18187c.  if v0 < v1 then goto L18188c;
  #L181880.  v0:= v2.`c.e.n.c.d` @type ^`android.text.PrecomputedText` @kind object;
  #L181884.  call `removeSpan`(v0, v3) @signature `Landroid/text/PrecomputedText;.removeSpan:(Ljava/lang/Object;)V` @kind virtual;
  #L18188a.  goto L181896;
  #L18188c.  v0:= v2.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181890.  call `removeSpan`(v0, v3) @signature `Landroid/text/Spannable;.removeSpan:(Ljava/lang/Object;)V` @kind interface;
  #L181896.  return @kind void;
  #L181898.  v3:= new `java.lang.IllegalArgumentException`;
  #L18189c.  v0:= "MetricAffectingSpan can not be removed from PrecomputedText." @kind object;
  #L1818a0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1818a6.  throw v3;
}
procedure `void` `setSpan`(`c.e.n.c` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lc/e/n/c;.setSpan:(Ljava/lang/Object;III)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1818b8.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L1818bc.  if v0 != 0 then goto L1818e4;
  #L1818c0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1818c4.  v1:= 29I;
  #L1818c8.  if v0 < v1 then goto L1818d8;
  #L1818cc.  v0:= v2.`c.e.n.c.d` @type ^`android.text.PrecomputedText` @kind object;
  #L1818d0.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/PrecomputedText;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L1818d6.  goto L1818e2;
  #L1818d8.  v0:= v2.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L1818dc.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/Spannable;.setSpan:(Ljava/lang/Object;III)V` @kind interface;
  #L1818e2.  return @kind void;
  #L1818e4.  v3:= new `java.lang.IllegalArgumentException`;
  #L1818e8.  v4:= "MetricAffectingSpan can not be set to PrecomputedText." @kind object;
  #L1818ec.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1818f2.  throw v3;
}
procedure `java.lang.CharSequence` `subSequence`(`c.e.n.c` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lc/e/n/c;.subSequence:(II)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1817f4.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L1817f8.  call temp:= `subSequence`(v0, v2, v3) @signature `Landroid/text/Spannable;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L1817fe.  v2:= temp @kind object;
  #L181800.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`c.e.n.c` v1 @kind this) @signature `Lc/e/n/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18184c.  v0:= v1.`c.e.n.c.b` @type ^`android.text.Spannable` @kind object;
  #L181850.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L181856.  v0:= temp @kind object;
  #L181858.  return v0 @kind object;
}
