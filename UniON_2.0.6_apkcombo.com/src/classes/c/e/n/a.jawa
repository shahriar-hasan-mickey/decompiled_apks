record `c.e.n.a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `c.e.n.a.a` @AccessFlag PRIVATE_FINAL;
  `int` `c.e.n.a.b` @AccessFlag PRIVATE_FINAL;
  `c.e.n.d` `c.e.n.a.c` @AccessFlag PRIVATE_FINAL;
}
global `c.e.n.d` `@@c.e.n.a.d` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@c.e.n.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@c.e.n.a.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `c.e.n.a` `@@c.e.n.a.g` @AccessFlag STATIC_FINAL;
global `c.e.n.a` `@@c.e.n.a.h` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/e/n/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L180930.  v0:= `@@c.e.n.e.c` @type ^`c.e.n.d` @kind object;
  #L180934.  `@@c.e.n.a.d` @type ^`c.e.n.d` := v0 @kind object;
  #L180938.  v0:= 8206I;
  #L18093c.  call temp:= `toString`(v0) @signature `Ljava/lang/Character;.toString:(C)Ljava/lang/String;` @kind static;
  #L180942.  v0:= temp @kind object;
  #L180944.  `@@c.e.n.a.e` @type ^`java.lang.String` := v0 @kind object;
  #L180948.  v0:= 8207I;
  #L18094c.  call temp:= `toString`(v0) @signature `Ljava/lang/Character;.toString:(C)Ljava/lang/String;` @kind static;
  #L180952.  v0:= temp @kind object;
  #L180954.  `@@c.e.n.a.f` @type ^`java.lang.String` := v0 @kind object;
  #L180958.  v0:= new `c.e.n.a`;
  #L18095c.  v1:= `@@c.e.n.a.d` @type ^`c.e.n.d` @kind object;
  #L180960.  v2:= 2I;
  #L180962.  v3:= 0I;
  #L180964.  call `<init>`(v0, v3, v2, v1) @signature `Lc/e/n/a;.<init>:(ZILc/e/n/d;)V` @kind direct;
  #L18096a.  `@@c.e.n.a.g` @type ^`c.e.n.a` := v0 @kind object;
  #L18096e.  v0:= new `c.e.n.a`;
  #L180972.  v1:= `@@c.e.n.a.d` @type ^`c.e.n.d` @kind object;
  #L180976.  v3:= 1I;
  #L180978.  call `<init>`(v0, v3, v2, v1) @signature `Lc/e/n/a;.<init>:(ZILc/e/n/d;)V` @kind direct;
  #L18097e.  `@@c.e.n.a.h` @type ^`c.e.n.a` := v0 @kind object;
  #L180982.  return @kind void;
}
procedure `void` `<init>`(`c.e.n.a` v0 @kind this, `boolean` v1 , `int` v2 , `c.e.n.d` v3 @kind object) @signature `Lc/e/n/a;.<init>:(ZILc/e/n/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L180994.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L18099a.  v0.`c.e.n.a.a` @type ^`boolean` := v1 @kind boolean;
  #L18099e.  v0.`c.e.n.a.b` @type ^`int` := v2;
  #L1809a2.  v0.`c.e.n.a.c` @type ^`c.e.n.d` := v3 @kind object;
  #L1809a6.  return @kind void;
}
procedure `java.lang.String` `a`(`c.e.n.a` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `c.e.n.d` v4 @kind object) @signature `Lc/e/n/a;.a:(Ljava/lang/CharSequence;Lc/e/n/d;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L180860.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L180866.  v0:= temp;
  #L180868.  v1:= 0I;
  #L18086a.  call temp:= `a`(v4, v3, v1, v0) @signature `Lc/e/n/d;.a:(Ljava/lang/CharSequence;II)Z` @kind interface;
  #L180870.  v4:= temp;
  #L180872.  v0:= v2.`c.e.n.a.a` @type ^`boolean` @kind boolean;
  #L180876.  if v0 != 0 then goto L180892;
  #L18087a.  if v4 != 0 then goto L18088c;
  #L18087e.  call temp:= `c`(v3) @signature `Lc/e/n/a;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L180884.  v0:= temp;
  #L180886.  v1:= 1I;
  #L180888.  if v0 != v1 then goto L180892;
  #L18088c.  v3:= `@@c.e.n.a.e` @type ^`java.lang.String` @kind object;
  #L180890.  return v3 @kind object;
  #L180892.  v0:= v2.`c.e.n.a.a` @type ^`boolean` @kind boolean;
  #L180896.  if v0 == 0 then goto L1808b2;
  #L18089a.  if v4 == 0 then goto L1808ac;
  #L18089e.  call temp:= `c`(v3) @signature `Lc/e/n/a;.c:(Ljava/lang/CharSequence;)I` @kind static;
  #L1808a4.  v3:= temp;
  #L1808a6.  v4:= -1I;
  #L1808a8.  if v3 != v4 then goto L1808b2;
  #L1808ac.  v3:= `@@c.e.n.a.f` @type ^`java.lang.String` @kind object;
  #L1808b0.  return v3 @kind object;
  #L1808b2.  v3:= "" @kind object;
  #L1808b6.  return v3 @kind object;
}
procedure `boolean` `a`(`java.util.Locale` v1 @kind object) @signature `Lc/e/n/a;.a:(Ljava/util/Locale;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L180714.  call temp:= `b`(v1) @signature `Lc/e/n/f;.b:(Ljava/util/Locale;)I` @kind static;
  #L18071a.  v1:= temp;
  #L18071c.  v0:= 1I;
  #L18071e.  if v1 != v0 then goto L180724;
  #L180722.  goto L180726;
  #L180724.  v0:= 0I;
  #L180726.  return v0;
}
procedure `int` `b`(`java.lang.CharSequence` v2 @kind object) @signature `Lc/e/n/a;.b:(Ljava/lang/CharSequence;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L180738.  v0:= new `c.e.n.a$b`;
  #L18073c.  v1:= 0I;
  #L18073e.  call `<init>`(v0, v2, v1) @signature `Lc/e/n/a$b;.<init>:(Ljava/lang/CharSequence;Z)V` @kind direct;
  #L180744.  call temp:= `c`(v0) @signature `Lc/e/n/a$b;.c:()I` @kind virtual;
  #L18074a.  v2:= temp;
  #L18074c.  return v2;
}
procedure `c.e.n.a` `b`() @signature `Lc/e/n/a;.b:()Lc/e/n/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1806cc.  v0:= new `c.e.n.a$a`;
  #L1806d0.  call `<init>`(v0) @signature `Lc/e/n/a$a;.<init>:()V` @kind direct;
  #L1806d6.  call temp:= `a`(v0) @signature `Lc/e/n/a$a;.a:()Lc/e/n/a;` @kind virtual;
  #L1806dc.  v0:= temp @kind object;
  #L1806de.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`c.e.n.a` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `c.e.n.d` v4 @kind object) @signature `Lc/e/n/a;.b:(Ljava/lang/CharSequence;Lc/e/n/d;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1808c8.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1808ce.  v0:= temp;
  #L1808d0.  v1:= 0I;
  #L1808d2.  call temp:= `a`(v4, v3, v1, v0) @signature `Lc/e/n/d;.a:(Ljava/lang/CharSequence;II)Z` @kind interface;
  #L1808d8.  v4:= temp;
  #L1808da.  v0:= v2.`c.e.n.a.a` @type ^`boolean` @kind boolean;
  #L1808de.  if v0 != 0 then goto L1808fa;
  #L1808e2.  if v4 != 0 then goto L1808f4;
  #L1808e6.  call temp:= `b`(v3) @signature `Lc/e/n/a;.b:(Ljava/lang/CharSequence;)I` @kind static;
  #L1808ec.  v0:= temp;
  #L1808ee.  v1:= 1I;
  #L1808f0.  if v0 != v1 then goto L1808fa;
  #L1808f4.  v3:= `@@c.e.n.a.e` @type ^`java.lang.String` @kind object;
  #L1808f8.  return v3 @kind object;
  #L1808fa.  v0:= v2.`c.e.n.a.a` @type ^`boolean` @kind boolean;
  #L1808fe.  if v0 == 0 then goto L18091a;
  #L180902.  if v4 == 0 then goto L180914;
  #L180906.  call temp:= `b`(v3) @signature `Lc/e/n/a;.b:(Ljava/lang/CharSequence;)I` @kind static;
  #L18090c.  v3:= temp;
  #L18090e.  v4:= -1I;
  #L180910.  if v3 != v4 then goto L18091a;
  #L180914.  v3:= `@@c.e.n.a.f` @type ^`java.lang.String` @kind object;
  #L180918.  return v3 @kind object;
  #L18091a.  v3:= "" @kind object;
  #L18091e.  return v3 @kind object;
}
procedure `int` `c`(`java.lang.CharSequence` v2 @kind object) @signature `Lc/e/n/a;.c:(Ljava/lang/CharSequence;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L180760.  v0:= new `c.e.n.a$b`;
  #L180764.  v1:= 0I;
  #L180766.  call `<init>`(v0, v2, v1) @signature `Lc/e/n/a$b;.<init>:(Ljava/lang/CharSequence;Z)V` @kind direct;
  #L18076c.  call temp:= `d`(v0) @signature `Lc/e/n/a$b;.d:()I` @kind virtual;
  #L180772.  v2:= temp;
  #L180774.  return v2;
}
procedure `java.lang.CharSequence` `a`(`c.e.n.a` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lc/e/n/a;.a:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L180788.  v0:= v2.`c.e.n.a.c` @type ^`c.e.n.d` @kind object;
  #L18078c.  v1:= 1I;
  #L18078e.  call temp:= `a`(v2, v3, v0, v1) @signature `Lc/e/n/a;.a:(Ljava/lang/CharSequence;Lc/e/n/d;Z)Ljava/lang/CharSequence;` @kind virtual;
  #L180794.  v3:= temp @kind object;
  #L180796.  return v3 @kind object;
}
procedure `java.lang.CharSequence` `a`(`c.e.n.a` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `c.e.n.d` v4 @kind object, `boolean` v5 ) @signature `Lc/e/n/a;.a:(Ljava/lang/CharSequence;Lc/e/n/d;Z)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1807a8.  if v3 != 0 then goto L1807b0;
  #L1807ac.  v3:= 0I;
  #L1807ae.  return v3 @kind object;
  #L1807b0.  v0:= 0I;
  #L1807b2.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1807b8.  v1:= temp;
  #L1807ba.  call temp:= `a`(v4, v3, v0, v1) @signature `Lc/e/n/d;.a:(Ljava/lang/CharSequence;II)Z` @kind interface;
  #L1807c0.  v4:= temp;
  #L1807c2.  v0:= new `android.text.SpannableStringBuilder`;
  #L1807c6.  call `<init>`(v0) @signature `Landroid/text/SpannableStringBuilder;.<init>:()V` @kind direct;
  #L1807cc.  call temp:= `a`(v2) @signature `Lc/e/n/a;.a:()Z` @kind virtual;
  #L1807d2.  v1:= temp;
  #L1807d4.  if v1 == 0 then goto L1807f8;
  #L1807d8.  if v5 == 0 then goto L1807f8;
  #L1807dc.  if v4 == 0 then goto L1807e6;
  #L1807e0.  v1:= `@@c.e.n.e.b` @type ^`c.e.n.d` @kind object;
  #L1807e4.  goto L1807ea;
  #L1807e6.  v1:= `@@c.e.n.e.a` @type ^`c.e.n.d` @kind object;
  #L1807ea.  call temp:= `b`(v2, v3, v1) @signature `Lc/e/n/a;.b:(Ljava/lang/CharSequence;Lc/e/n/d;)Ljava/lang/String;` @kind direct;
  #L1807f0.  v1:= temp @kind object;
  #L1807f2.  call temp:= `append`(v0, v1) @signature `Landroid/text/SpannableStringBuilder;.append:(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L1807f8.  v1:= v2.`c.e.n.a.a` @type ^`boolean` @kind boolean;
  #L1807fc.  if v4 == v1 then goto L180826;
  #L180800.  if v4 == 0 then goto L18080a;
  #L180804.  v1:= 8235I;
  #L180808.  goto L18080e;
  #L18080a.  v1:= 8234I;
  #L18080e.  call temp:= `append`(v0, v1) @signature `Landroid/text/SpannableStringBuilder;.append:(C)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L180814.  call temp:= `append`(v0, v3) @signature `Landroid/text/SpannableStringBuilder;.append:(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L18081a.  v1:= 8236I;
  #L18081e.  call temp:= `append`(v0, v1) @signature `Landroid/text/SpannableStringBuilder;.append:(C)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L180824.  goto L18082c;
  #L180826.  call temp:= `append`(v0, v3) @signature `Landroid/text/SpannableStringBuilder;.append:(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L18082c.  if v5 == 0 then goto L18084c;
  #L180830.  if v4 == 0 then goto L18083a;
  #L180834.  v4:= `@@c.e.n.e.b` @type ^`c.e.n.d` @kind object;
  #L180838.  goto L18083e;
  #L18083a.  v4:= `@@c.e.n.e.a` @type ^`c.e.n.d` @kind object;
  #L18083e.  call temp:= `a`(v2, v3, v4) @signature `Lc/e/n/a;.a:(Ljava/lang/CharSequence;Lc/e/n/d;)Ljava/lang/String;` @kind direct;
  #L180844.  v3:= temp @kind object;
  #L180846.  call temp:= `append`(v0, v3) @signature `Landroid/text/SpannableStringBuilder;.append:(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L18084c.  return v0 @kind object;
}
procedure `boolean` `a`(`c.e.n.a` v1 @kind this) @signature `Lc/e/n/a;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1806f0.  v0:= v1.`c.e.n.a.b` @type ^`int`;
  #L1806f4.  v0:= v0 ^& 2;
  #L1806f8.  if v0 == 0 then goto L180700;
  #L1806fc.  v0:= 1I;
  #L1806fe.  goto L180702;
  #L180700.  v0:= 0I;
  #L180702.  return v0;
}
