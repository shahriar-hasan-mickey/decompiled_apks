record `c.e.o.e` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v0 ) @signature `Lc/e/o/e;.a:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L18231c.  if v0 < 0 then goto L182322;
  #L182320.  return v0;
  #L182322.  v0:= new `java.lang.IllegalArgumentException`;
  #L182326.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L18232c.  throw v0;
}
procedure `int` `a`(`int` v3 , `int` v4 ) @signature `Lc/e/o/e;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L182340.  v0:= v3 ^& v4 @kind int;
  #L182344.  if v0 != v3 then goto L18234a;
  #L182348.  return v3;
  #L18234a.  v0:= new `java.lang.IllegalArgumentException`;
  #L18234e.  v1:= new `java.lang.StringBuilder`;
  #L182352.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L182358.  v2:= "Requested flags 0x" @kind object;
  #L18235c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L182362.  call temp:= `toHexString`(v3) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L182368.  v3:= temp @kind object;
  #L18236a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L182370.  v3:= ", but only 0x" @kind object;
  #L182374.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18237a.  call temp:= `toHexString`(v4) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L182380.  v3:= temp @kind object;
  #L182382.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L182388.  v3:= " are allowed" @kind object;
  #L18238c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L182392.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L182398.  v3:= temp @kind object;
  #L18239a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1823a0.  throw v0;
}
procedure `int` `a`(`int` v5 , `int` v6 , `int` v7 , `java.lang.String` v8 @kind object) @signature `Lc/e/o/e;.a:(IIILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L182280.  v0:= 2I;
  #L182282.  v1:= 1I;
  #L182284.  v2:= 0I;
  #L182286.  v3:= 3I;
  #L182288.  if v5 < v6 then goto L1822ce;
  #L18228c.  if v5 > v7 then goto L182292;
  #L182290.  return v5;
  #L182292.  v5:= new `java.lang.IllegalArgumentException`;
  #L182296.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L18229a.  v3:= new `java.lang.Object`[v3];
  #L18229e.  v3[v2]:= v8 @kind object;
  #L1822a2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1822a8.  v6:= temp @kind object;
  #L1822aa.  v3[v1]:= v6 @kind object;
  #L1822ae.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1822b4.  v6:= temp @kind object;
  #L1822b6.  v3[v0]:= v6 @kind object;
  #L1822ba.  v6:= "%s is out of range of [%d, %d] (too high)" @kind object;
  #L1822be.  call temp:= `format`(v4, v6, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1822c4.  v6:= temp @kind object;
  #L1822c6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1822cc.  throw v5;
  #L1822ce.  v5:= new `java.lang.IllegalArgumentException`;
  #L1822d2.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1822d6.  v3:= new `java.lang.Object`[v3];
  #L1822da.  v3[v2]:= v8 @kind object;
  #L1822de.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1822e4.  v6:= temp @kind object;
  #L1822e6.  v3[v1]:= v6 @kind object;
  #L1822ea.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1822f0.  v6:= temp @kind object;
  #L1822f2.  v3[v0]:= v6 @kind object;
  #L1822f6.  v6:= "%s is out of range of [%d, %d] (too low)" @kind object;
  #L1822fa.  call temp:= `format`(v4, v6, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L182300.  v6:= temp @kind object;
  #L182302.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L182308.  throw v5;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Lc/e/o/e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1823b4.  if v0 == 0 then goto L1823ba;
  #L1823b8.  return v0 @kind object;
  #L1823ba.  v0:= new `java.lang.NullPointerException`;
  #L1823be.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L1823c4.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lc/e/o/e;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1823d8.  if v0 == 0 then goto L1823de;
  #L1823dc.  return v0 @kind object;
  #L1823de.  v0:= new `java.lang.NullPointerException`;
  #L1823e2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1823e8.  v1:= temp @kind object;
  #L1823ea.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1823f0.  throw v0;
}
