record `io.reactivex.observers.d` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.observers.d.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.observers.d.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.observers.d.d` @AccessFlag ;
  `boolean` `io.reactivex.observers.d.e` @AccessFlag ;
  `io.reactivex.internal.util.a` `io.reactivex.observers.d.f` @AccessFlag ;
  `boolean` `io.reactivex.observers.d.g` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.observers.d` v1 @kind this, `io.reactivex.t` v2 @kind object) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L292110.  v0:= 0I;
  #L292112.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;Z)V` @kind direct;
  #L292118.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.observers.d` v0 @kind this, `io.reactivex.t` v1 @kind object, `boolean` v2 ) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29212c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L292132.  v0.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L292136.  v0.`io.reactivex.observers.d.c` @type ^`boolean` := v2 @kind boolean;
  #L29213a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.observers.d` v2 @kind this) @signature `Lio/reactivex/observers/d;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L292168.  @monitorenter v2
  #L29216a.  v0:= v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` @kind object;
  #L29216e.  if v0 != 0 then goto L29217c;
  #L292172.  v0:= 0I;
  #L292174.  v2.`io.reactivex.observers.d.e` @type ^`boolean` := v0 @kind boolean;
  #L292178.  @monitorexit v2
  #L29217a.  return @kind void;
  #L29217c.  v1:= 0I;
  #L29217e.  v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` := v1 @kind object;
  #L292182.  @monitorexit v2
  #L292184.  v1:= v2.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` @kind object;
  #L292188.  call temp:= `a`(v0, v1) @signature `Lio/reactivex/internal/util/a;.a:(Lio/reactivex/t;)Z` @kind virtual;
  #L29218e.  v0:= temp;
  #L292190.  if v0 == 0 then goto L292168;
  #L292194.  return @kind void;
  #L292196.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L292198.  @monitorexit v2
  #L29219a.  goto L29219e;
  #L29219c.  throw v0;
  #L29219e.  goto L29219c;
  catch `java.lang.Throwable` @[L29216a..L292184] goto L292196;
  catch `java.lang.Throwable` @[L292198..L29219a] goto L292196;
}
procedure `void` `dispose`(`io.reactivex.observers.d` v1 @kind this) @signature `Lio/reactivex/observers/d;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29214c.  v0:= v1.`io.reactivex.observers.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L292150.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L292156.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.observers.d` v1 @kind this) @signature `Lio/reactivex/observers/d;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2920f0.  v0:= v1.`io.reactivex.observers.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2920f4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L2920fa.  v0:= temp;
  #L2920fc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.observers.d` v2 @kind this) @signature `Lio/reactivex/observers/d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2921c4.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L2921c8.  if v0 == 0 then goto L2921ce;
  #L2921cc.  return @kind void;
  #L2921ce.  @monitorenter v2
  #L2921d0.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L2921d4.  if v0 == 0 then goto L2921dc;
  #L2921d8.  @monitorexit v2
  #L2921da.  return @kind void;
  #L2921dc.  v0:= v2.`io.reactivex.observers.d.e` @type ^`boolean` @kind boolean;
  #L2921e0.  if v0 == 0 then goto L29220e;
  #L2921e4.  v0:= v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` @kind object;
  #L2921e8.  if v0 != 0 then goto L2921fc;
  #L2921ec.  v0:= new `io.reactivex.internal.util.a`;
  #L2921f0.  v1:= 4I;
  #L2921f2.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L2921f8.  v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L2921fc.  call temp:= `complete`() @signature `Lio/reactivex/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L292202.  v1:= temp @kind object;
  #L292204.  call `b`(v0, v1) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L29220a.  @monitorexit v2
  #L29220c.  return @kind void;
  #L29220e.  v0:= 1I;
  #L292210.  v2.`io.reactivex.observers.d.g` @type ^`boolean` := v0 @kind boolean;
  #L292214.  v2.`io.reactivex.observers.d.e` @type ^`boolean` := v0 @kind boolean;
  #L292218.  @monitorexit v2
  #L29221a.  v0:= v2.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` @kind object;
  #L29221e.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L292224.  return @kind void;
  #L292226.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L292228.  @monitorexit v2
  #L29222a.  throw v0;
  catch `java.lang.Throwable` @[L2921d0..L29221a] goto L292226;
  catch `java.lang.Throwable` @[L292228..L29222a] goto L292226;
}
procedure `void` `onError`(`io.reactivex.observers.d` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/observers/d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L292250.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L292254.  if v0 == 0 then goto L292260;
  #L292258.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L29225e.  return @kind void;
  #L292260.  @monitorenter v2
  #L292262.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L292266.  v1:= 1I;
  #L292268.  if v0 == 0 then goto L29226e;
  #L29226c.  goto L2922be;
  #L29226e.  v0:= v2.`io.reactivex.observers.d.e` @type ^`boolean` @kind boolean;
  #L292272.  if v0 == 0 then goto L2922b4;
  #L292276.  v2.`io.reactivex.observers.d.g` @type ^`boolean` := v1 @kind boolean;
  #L29227a.  v0:= v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` @kind object;
  #L29227e.  if v0 != 0 then goto L292292;
  #L292282.  v0:= new `io.reactivex.internal.util.a`;
  #L292286.  v1:= 4I;
  #L292288.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L29228e.  v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L292292.  call temp:= `error`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L292298.  v3:= temp @kind object;
  #L29229a.  v1:= v2.`io.reactivex.observers.d.c` @type ^`boolean` @kind boolean;
  #L29229e.  if v1 == 0 then goto L2922aa;
  #L2922a2.  call `b`(v0, v3) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L2922a8.  goto L2922b0;
  #L2922aa.  call `d`(v0, v3) @signature `Lio/reactivex/internal/util/a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L2922b0.  @monitorexit v2
  #L2922b2.  return @kind void;
  #L2922b4.  v2.`io.reactivex.observers.d.g` @type ^`boolean` := v1 @kind boolean;
  #L2922b8.  v2.`io.reactivex.observers.d.e` @type ^`boolean` := v1 @kind boolean;
  #L2922bc.  v1:= 0I;
  #L2922be.  @monitorexit v2
  #L2922c0.  if v1 == 0 then goto L2922cc;
  #L2922c4.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2922ca.  return @kind void;
  #L2922cc.  v0:= v2.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` @kind object;
  #L2922d0.  call `onError`(v0, v3) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2922d6.  return @kind void;
  #L2922d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2922da.  @monitorexit v2
  #L2922dc.  throw v3;
  catch `java.lang.Throwable` @[L292262..L2922c0] goto L2922d8;
  catch `java.lang.Throwable` @[L2922da..L2922dc] goto L2922d8;
}
procedure `void` `onNext`(`io.reactivex.observers.d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/observers/d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L292304.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L292308.  if v0 == 0 then goto L29230e;
  #L29230c.  return @kind void;
  #L29230e.  if v3 != 0 then goto L292332;
  #L292312.  v3:= v2.`io.reactivex.observers.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L292316.  call `dispose`(v3) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L29231c.  v3:= new `java.lang.NullPointerException`;
  #L292320.  v0:= "onNext called with null. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L292324.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29232a.  call `onError`(v2, v3) @signature `Lio/reactivex/observers/d;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L292330.  return @kind void;
  #L292332.  @monitorenter v2
  #L292334.  v0:= v2.`io.reactivex.observers.d.g` @type ^`boolean` @kind boolean;
  #L292338.  if v0 == 0 then goto L292340;
  #L29233c.  @monitorexit v2
  #L29233e.  return @kind void;
  #L292340.  v0:= v2.`io.reactivex.observers.d.e` @type ^`boolean` @kind boolean;
  #L292344.  if v0 == 0 then goto L292372;
  #L292348.  v0:= v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` @kind object;
  #L29234c.  if v0 != 0 then goto L292360;
  #L292350.  v0:= new `io.reactivex.internal.util.a`;
  #L292354.  v1:= 4I;
  #L292356.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L29235c.  v2.`io.reactivex.observers.d.f` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L292360.  call temp:= `next`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L292366.  v3:= temp @kind object;
  #L292368.  call `b`(v0, v3) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L29236e.  @monitorexit v2
  #L292370.  return @kind void;
  #L292372.  v0:= 1I;
  #L292374.  v2.`io.reactivex.observers.d.e` @type ^`boolean` := v0 @kind boolean;
  #L292378.  @monitorexit v2
  #L29237a.  v0:= v2.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` @kind object;
  #L29237e.  call `onNext`(v0, v3) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L292384.  call `a`(v2) @signature `Lio/reactivex/observers/d;.a:()V` @kind virtual;
  #L29238a.  return @kind void;
  #L29238c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29238e.  @monitorexit v2
  #L292390.  throw v3;
  catch `java.lang.Throwable` @[L292334..L29237a] goto L29238c;
  catch `java.lang.Throwable` @[L29238e..L292390] goto L29238c;
}
procedure `void` `onSubscribe`(`io.reactivex.observers.d` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/observers/d;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2923b8.  v0:= v1.`io.reactivex.observers.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2923bc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2923c2.  v0:= temp;
  #L2923c4.  if v0 == 0 then goto L2923d6;
  #L2923c8.  v1.`io.reactivex.observers.d.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2923cc.  v2:= v1.`io.reactivex.observers.d.b` @type ^`io.reactivex.t` @kind object;
  #L2923d0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2923d6.  return @kind void;
}
