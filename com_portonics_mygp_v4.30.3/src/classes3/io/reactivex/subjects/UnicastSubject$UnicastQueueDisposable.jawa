record `io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class {
  `io.reactivex.subjects.UnicastSubject` `io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v0 @kind this, `io.reactivex.subjects.UnicastSubject` v1 @kind object) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.<init>:(Lio/reactivex/subjects/UnicastSubject;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2955fc.  v0.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` := v1 @kind object;
  #L295600.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L295606.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295618.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L29561c.  v0:= v0.`io.reactivex.subjects.UnicastSubject.b` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L295620.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L295626.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v2 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295638.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L29563c.  v0:= v0.`io.reactivex.subjects.UnicastSubject.f` @type ^`boolean` @kind boolean;
  #L295640.  if v0 != 0 then goto L295698;
  #L295644.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L295648.  v1:= 1I;
  #L29564a.  v0.`io.reactivex.subjects.UnicastSubject.f` @type ^`boolean` := v1 @kind boolean;
  #L29564e.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L295652.  call `A`(v0) @signature `Lio/reactivex/subjects/UnicastSubject;.A:()V` @kind virtual;
  #L295658.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L29565c.  v0:= v0.`io.reactivex.subjects.UnicastSubject.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L295660.  v1:= 0I;
  #L295662.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L295668.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L29566c.  v0:= v0.`io.reactivex.subjects.UnicastSubject.j` @type ^`io.reactivex.internal.observers.BasicIntQueueDisposable` @kind object;
  #L295670.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L295676.  v0:= temp;
  #L295678.  if v0 != 0 then goto L295698;
  #L29567c.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L295680.  v0:= v0.`io.reactivex.subjects.UnicastSubject.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L295684.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L29568a.  v0:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L29568e.  v0:= v0.`io.reactivex.subjects.UnicastSubject.b` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L295692.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L295698.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295570.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L295574.  v0:= v0.`io.reactivex.subjects.UnicastSubject.f` @type ^`boolean` @kind boolean;
  #L295578.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29558c.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L295590.  v0:= v0.`io.reactivex.subjects.UnicastSubject.b` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L295594.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/a;.isEmpty:()Z` @kind virtual;
  #L29559a.  v0:= temp;
  #L29559c.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v1 @kind this) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2955d8.  v0:= v1.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L2955dc.  v0:= v0.`io.reactivex.subjects.UnicastSubject.b` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L2955e0.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L2955e6.  v0:= temp @kind object;
  #L2955e8.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/subjects/UnicastSubject$UnicastQueueDisposable;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2955b0.  v0:= 2I;
  #L2955b2.  v3:= v3 ^& v0 @kind int;
  #L2955b4.  if v3 == 0 then goto L2955c4;
  #L2955b8.  v3:= v2.`io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable.this$0` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L2955bc.  v1:= 1I;
  #L2955be.  v3.`io.reactivex.subjects.UnicastSubject.k` @type ^`boolean` := v1 @kind boolean;
  #L2955c2.  return v0;
  #L2955c4.  v3:= 0I;
  #L2955c6.  return v3;
}
