record `io.reactivex.subjects.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.n` @kind class, `io.reactivex.t` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.subjects.b` v0 @kind this) @signature `Lio/reactivex/subjects/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L295558.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L29555e.  return @kind void;
}
procedure `io.reactivex.subjects.b` `w`(`io.reactivex.subjects.b` v1 @kind this) @signature `Lio/reactivex/subjects/b;.w:()Lio/reactivex/subjects/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L295530.  v0:= instanceof @variable v1 @type ^`io.reactivex.subjects.a` @kind boolean;
  #L295534.  if v0 == 0 then goto L29553a;
  #L295538.  return v1 @kind object;
  #L29553a.  v0:= new `io.reactivex.subjects.a`;
  #L29553e.  call `<init>`(v0, v1) @signature `Lio/reactivex/subjects/a;.<init>:(Lio/reactivex/subjects/b;)V` @kind direct;
  #L295544.  return v0 @kind object;
}
