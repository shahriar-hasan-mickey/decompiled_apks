record `io.reactivex.subjects.a` @kind class @AccessFlag FINAL extends `io.reactivex.subjects.b` @kind class, `io.reactivex.internal.util.a$a` @kind interface {
  `io.reactivex.subjects.b` `io.reactivex.subjects.a.b` @AccessFlag FINAL;
  `boolean` `io.reactivex.subjects.a.c` @AccessFlag ;
  `io.reactivex.internal.util.a` `io.reactivex.subjects.a.d` @AccessFlag ;
  `boolean` `io.reactivex.subjects.a.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.subjects.a` v0 @kind this, `io.reactivex.subjects.b` v1 @kind object) @signature `Lio/reactivex/subjects/a;.<init>:(Lio/reactivex/subjects/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2951e4.  call `<init>`(v0) @signature `Lio/reactivex/subjects/b;.<init>:()V` @kind direct;
  #L2951ea.  v0.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` := v1 @kind object;
  #L2951ee.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.subjects.a` v2 @kind this) @signature `Lio/reactivex/subjects/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295254.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295258.  if v0 == 0 then goto L29525e;
  #L29525c.  return @kind void;
  #L29525e.  @monitorenter v2
  #L295260.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295264.  if v0 == 0 then goto L29526c;
  #L295268.  @monitorexit v2
  #L29526a.  return @kind void;
  #L29526c.  v0:= 1I;
  #L29526e.  v2.`io.reactivex.subjects.a.e` @type ^`boolean` := v0 @kind boolean;
  #L295272.  v1:= v2.`io.reactivex.subjects.a.c` @type ^`boolean` @kind boolean;
  #L295276.  if v1 == 0 then goto L2952a4;
  #L29527a.  v0:= v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` @kind object;
  #L29527e.  if v0 != 0 then goto L295292;
  #L295282.  v0:= new `io.reactivex.internal.util.a`;
  #L295286.  v1:= 4I;
  #L295288.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L29528e.  v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L295292.  call temp:= `complete`() @signature `Lio/reactivex/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L295298.  v1:= temp @kind object;
  #L29529a.  call `b`(v0, v1) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L2952a0.  @monitorexit v2
  #L2952a2.  return @kind void;
  #L2952a4.  v2.`io.reactivex.subjects.a.c` @type ^`boolean` := v0 @kind boolean;
  #L2952a8.  @monitorexit v2
  #L2952aa.  v0:= v2.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L2952ae.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L2952b4.  return @kind void;
  #L2952b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2952b8.  @monitorexit v2
  #L2952ba.  throw v0;
  catch `java.lang.Throwable` @[L295260..L2952aa] goto L2952b6;
  catch `java.lang.Throwable` @[L2952b8..L2952ba] goto L2952b6;
}
procedure `void` `onError`(`io.reactivex.subjects.a` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/subjects/a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2952e0.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L2952e4.  if v0 == 0 then goto L2952f0;
  #L2952e8.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2952ee.  return @kind void;
  #L2952f0.  @monitorenter v2
  #L2952f2.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L2952f6.  v1:= 1I;
  #L2952f8.  if v0 == 0 then goto L2952fe;
  #L2952fc.  goto L29533c;
  #L2952fe.  v2.`io.reactivex.subjects.a.e` @type ^`boolean` := v1 @kind boolean;
  #L295302.  v0:= v2.`io.reactivex.subjects.a.c` @type ^`boolean` @kind boolean;
  #L295306.  if v0 == 0 then goto L295334;
  #L29530a.  v0:= v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` @kind object;
  #L29530e.  if v0 != 0 then goto L295322;
  #L295312.  v0:= new `io.reactivex.internal.util.a`;
  #L295316.  v1:= 4I;
  #L295318.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L29531e.  v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L295322.  call temp:= `error`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L295328.  v3:= temp @kind object;
  #L29532a.  call `d`(v0, v3) @signature `Lio/reactivex/internal/util/a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L295330.  @monitorexit v2
  #L295332.  return @kind void;
  #L295334.  v0:= 0I;
  #L295336.  v2.`io.reactivex.subjects.a.c` @type ^`boolean` := v1 @kind boolean;
  #L29533a.  v1:= 0I;
  #L29533c.  @monitorexit v2
  #L29533e.  if v1 == 0 then goto L29534a;
  #L295342.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L295348.  return @kind void;
  #L29534a.  v0:= v2.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L29534e.  call `onError`(v0, v3) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L295354.  return @kind void;
  #L295356.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295358.  @monitorexit v2
  #L29535a.  throw v3;
  catch `java.lang.Throwable` @[L2952f2..L29533e] goto L295356;
  catch `java.lang.Throwable` @[L295358..L29535a] goto L295356;
}
procedure `void` `onNext`(`io.reactivex.subjects.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/subjects/a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295380.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295384.  if v0 == 0 then goto L29538a;
  #L295388.  return @kind void;
  #L29538a.  @monitorenter v2
  #L29538c.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295390.  if v0 == 0 then goto L295398;
  #L295394.  @monitorexit v2
  #L295396.  return @kind void;
  #L295398.  v0:= v2.`io.reactivex.subjects.a.c` @type ^`boolean` @kind boolean;
  #L29539c.  if v0 == 0 then goto L2953ca;
  #L2953a0.  v0:= v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` @kind object;
  #L2953a4.  if v0 != 0 then goto L2953b8;
  #L2953a8.  v0:= new `io.reactivex.internal.util.a`;
  #L2953ac.  v1:= 4I;
  #L2953ae.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L2953b4.  v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L2953b8.  call temp:= `next`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2953be.  v3:= temp @kind object;
  #L2953c0.  call `b`(v0, v3) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L2953c6.  @monitorexit v2
  #L2953c8.  return @kind void;
  #L2953ca.  v0:= 1I;
  #L2953cc.  v2.`io.reactivex.subjects.a.c` @type ^`boolean` := v0 @kind boolean;
  #L2953d0.  @monitorexit v2
  #L2953d2.  v0:= v2.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L2953d6.  call `onNext`(v0, v3) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2953dc.  call `x`(v2) @signature `Lio/reactivex/subjects/a;.x:()V` @kind virtual;
  #L2953e2.  return @kind void;
  #L2953e4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2953e6.  @monitorexit v2
  #L2953e8.  throw v3;
  catch `java.lang.Throwable` @[L29538c..L2953d2] goto L2953e4;
  catch `java.lang.Throwable` @[L2953e6..L2953e8] goto L2953e4;
}
procedure `void` `onSubscribe`(`io.reactivex.subjects.a` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/subjects/a;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295410.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295414.  v1:= 1I;
  #L295416.  if v0 != 0 then goto L29546a;
  #L29541a.  @monitorenter v2
  #L29541c.  v0:= v2.`io.reactivex.subjects.a.e` @type ^`boolean` @kind boolean;
  #L295420.  if v0 == 0 then goto L295426;
  #L295424.  goto L295460;
  #L295426.  v0:= v2.`io.reactivex.subjects.a.c` @type ^`boolean` @kind boolean;
  #L29542a.  if v0 == 0 then goto L295458;
  #L29542e.  v0:= v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` @kind object;
  #L295432.  if v0 != 0 then goto L295446;
  #L295436.  v0:= new `io.reactivex.internal.util.a`;
  #L29543a.  v1:= 4I;
  #L29543c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @kind direct;
  #L295442.  v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` := v0 @kind object;
  #L295446.  call temp:= `disposable`(v3) @signature `Lio/reactivex/internal/util/NotificationLite;.disposable:(Lio/reactivex/disposables/b;)Ljava/lang/Object;` @kind static;
  #L29544c.  v3:= temp @kind object;
  #L29544e.  call `b`(v0, v3) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L295454.  @monitorexit v2
  #L295456.  return @kind void;
  #L295458.  v2.`io.reactivex.subjects.a.c` @type ^`boolean` := v1 @kind boolean;
  #L29545c.  v0:= 0I;
  #L29545e.  v1:= 0I;
  #L295460.  @monitorexit v2
  #L295462.  goto L29546a;
  #L295464.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295466.  @monitorexit v2
  #L295468.  throw v3;
  #L29546a.  if v1 == 0 then goto L295476;
  #L29546e.  call `dispose`(v3) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L295474.  goto L295486;
  #L295476.  v0:= v2.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L29547a.  call `onSubscribe`(v0, v3) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L295480.  call `x`(v2) @signature `Lio/reactivex/subjects/a;.x:()V` @kind virtual;
  #L295486.  return @kind void;
  catch `java.lang.Throwable` @[L29541c..L295468] goto L295464;
}
procedure `void` `subscribeActual`(`io.reactivex.subjects.a` v1 @kind this, `io.reactivex.t` v2 @kind object) @signature `Lio/reactivex/subjects/a;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2954a4.  v0:= v1.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L2954a8.  call `subscribe`(v0, v2) @signature `Lio/reactivex/n;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L2954ae.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.subjects.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/subjects/a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2951c4.  v0:= v1.`io.reactivex.subjects.a.b` @type ^`io.reactivex.subjects.b` @kind object;
  #L2951c8.  call temp:= `acceptFull`(v2, v0) @signature `Lio/reactivex/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/t;)Z` @kind static;
  #L2951ce.  v2:= temp;
  #L2951d0.  return v2;
}
procedure `void` `x`(`io.reactivex.subjects.a` v2 @kind this) @signature `Lio/reactivex/subjects/a;.x:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L295200.  @monitorenter v2
  #L295202.  v0:= v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` @kind object;
  #L295206.  if v0 != 0 then goto L295214;
  #L29520a.  v0:= 0I;
  #L29520c.  v2.`io.reactivex.subjects.a.c` @type ^`boolean` := v0 @kind boolean;
  #L295210.  @monitorexit v2
  #L295212.  return @kind void;
  #L295214.  v1:= 0I;
  #L295216.  v2.`io.reactivex.subjects.a.d` @type ^`io.reactivex.internal.util.a` := v1 @kind object;
  #L29521a.  @monitorexit v2
  #L29521c.  call `c`(v0, v2) @signature `Lio/reactivex/internal/util/a;.c:(Lio/reactivex/internal/util/a$a;)V` @kind virtual;
  #L295222.  goto L295200;
  #L295224.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295226.  @monitorexit v2
  #L295228.  goto L29522c;
  #L29522a.  throw v0;
  #L29522c.  goto L29522a;
  catch `java.lang.Throwable` @[L295202..L29521c] goto L295224;
  catch `java.lang.Throwable` @[L295226..L295228] goto L295224;
}
