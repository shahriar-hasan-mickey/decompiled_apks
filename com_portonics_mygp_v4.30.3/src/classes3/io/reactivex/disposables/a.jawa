record `io.reactivex.disposables.a` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.b` @kind interface, `io.reactivex.internal.disposables.a` @kind interface {
  `io.reactivex.internal.util.i` `io.reactivex.disposables.a.b` @AccessFlag ;
  `boolean` `io.reactivex.disposables.a.c` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.disposables.a` v0 @kind this) @signature `Lio/reactivex/disposables/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L246c38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L246c3e.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.disposables.a` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/disposables/a;.a:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246bbc.  call temp:= `c`(v1, v2) @signature `Lio/reactivex/disposables/a;.c:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L246bc2.  v0:= temp;
  #L246bc4.  if v0 == 0 then goto L246bd2;
  #L246bc8.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L246bce.  v2:= 1I;
  #L246bd0.  return v2;
  #L246bd2.  v2:= 0I;
  #L246bd4.  return v2;
}
procedure `boolean` `b`(`io.reactivex.disposables.a` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/disposables/a;.b:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246acc.  v0:= "d is null" @kind object;
  #L246ad0.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L246ad6.  v0:= v1.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246ada.  if v0 != 0 then goto L246b14;
  #L246ade.  @monitorenter v1
  #L246ae0.  v0:= v1.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246ae4.  if v0 != 0 then goto L246b0a;
  #L246ae8.  v0:= v1.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` @kind object;
  #L246aec.  if v0 != 0 then goto L246afe;
  #L246af0.  v0:= new `io.reactivex.internal.util.i`;
  #L246af4.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/i;.<init>:()V` @kind direct;
  #L246afa.  v1.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` := v0 @kind object;
  #L246afe.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/internal/util/i;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L246b04.  v2:= 1I;
  #L246b06.  @monitorexit v1
  #L246b08.  return v2;
  #L246b0a.  @monitorexit v1
  #L246b0c.  goto L246b14;
  #L246b0e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246b10.  @monitorexit v1
  #L246b12.  throw v2;
  #L246b14.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L246b1a.  v2:= 0I;
  #L246b1c.  return v2;
  catch `java.lang.Throwable` @[L246ae0..L246b12] goto L246b0e;
}
procedure `boolean` `c`(`io.reactivex.disposables.a` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/disposables/a;.c:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L246b3c.  v0:= "Disposable item is null" @kind object;
  #L246b40.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L246b46.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246b4a.  v1:= 0I;
  #L246b4c.  if v0 == 0 then goto L246b52;
  #L246b50.  return v1;
  #L246b52.  @monitorenter v2
  #L246b54.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246b58.  if v0 == 0 then goto L246b60;
  #L246b5c.  @monitorexit v2
  #L246b5e.  return v1;
  #L246b60.  v0:= v2.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` @kind object;
  #L246b64.  if v0 == 0 then goto L246b7c;
  #L246b68.  call temp:= `e`(v0, v3) @signature `Lio/reactivex/internal/util/i;.e:(Ljava/lang/Object;)Z` @kind virtual;
  #L246b6e.  v3:= temp;
  #L246b70.  if v3 != 0 then goto L246b76;
  #L246b74.  goto L246b7c;
  #L246b76.  @monitorexit v2
  #L246b78.  v3:= 1I;
  #L246b7a.  return v3;
  #L246b7c.  @monitorexit v2
  #L246b7e.  return v1;
  #L246b80.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246b82.  @monitorexit v2
  #L246b84.  throw v3;
  catch `java.lang.Throwable` @[L246b54..L246b84] goto L246b80;
}
procedure `void` `d`(`io.reactivex.disposables.a` v6 @kind this, `io.reactivex.internal.util.i` v7 @kind object) @signature `Lio/reactivex/disposables/a;.d:(Lio/reactivex/internal/util/i;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L246cac.  if v7 != 0 then goto L246cb2;
  #L246cb0.  return @kind void;
  #L246cb2.  v0:= 0I;
  #L246cb4.  call temp:= `b`(v7) @signature `Lio/reactivex/internal/util/i;.b:()[Ljava/lang/Object;` @kind virtual;
  #L246cba.  v7:= temp @kind object;
  #L246cbc.  v1:= length @variable v7;
  #L246cbe.  v2:= 0I;
  #L246cc0.  v3:= 0I;
  #L246cc2.  if v3 >= v1 then goto L246d00;
  #L246cc6.  v4:= v7[v3] @kind object;
  #L246cca.  v5:= instanceof @variable v4 @type ^`io.reactivex.disposables.b` @kind boolean;
  #L246cce.  if v5 == 0 then goto L246cfa;
  #L246cd2.  v4:= (`io.reactivex.disposables.b`) v4 @kind object;
  #L246cd6.  call `dispose`(v4) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L246cdc.  goto L246cfa;
  #L246cde.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246ce0.  call `b`(v4) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L246ce6.  if v0 != 0 then goto L246cf4;
  #L246cea.  v0:= new `java.util.ArrayList`;
  #L246cee.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L246cf4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L246cfa.  v3:= v3 + 1;
  #L246cfe.  goto L246cc2;
  #L246d00.  if v0 == 0 then goto L246d34;
  #L246d04.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L246d0a.  v7:= temp;
  #L246d0c.  v1:= 1I;
  #L246d0e.  if v7 != v1 then goto L246d28;
  #L246d12.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L246d18.  v7:= temp @kind object;
  #L246d1a.  v7:= (`java.lang.Throwable`) v7 @kind object;
  #L246d1e.  call temp:= `e`(v7) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L246d24.  v7:= temp @kind object;
  #L246d26.  throw v7;
  #L246d28.  v7:= new `io.reactivex.exceptions.CompositeException`;
  #L246d2c.  call `<init>`(v7, v0) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L246d32.  throw v7;
  #L246d34.  return @kind void;
  catch `java.lang.Throwable` @[L246cd2..L246cdc] goto L246cde;
}
procedure `void` `dispose`(`io.reactivex.disposables.a` v2 @kind this) @signature `Lio/reactivex/disposables/a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L246c50.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246c54.  if v0 == 0 then goto L246c5a;
  #L246c58.  return @kind void;
  #L246c5a.  @monitorenter v2
  #L246c5c.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246c60.  if v0 == 0 then goto L246c68;
  #L246c64.  @monitorexit v2
  #L246c66.  return @kind void;
  #L246c68.  v0:= 1I;
  #L246c6a.  v2.`io.reactivex.disposables.a.c` @type ^`boolean` := v0 @kind boolean;
  #L246c6e.  v0:= v2.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` @kind object;
  #L246c72.  v1:= 0I;
  #L246c74.  v2.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` := v1 @kind object;
  #L246c78.  @monitorexit v2
  #L246c7a.  call `d`(v2, v0) @signature `Lio/reactivex/disposables/a;.d:(Lio/reactivex/internal/util/i;)V` @kind virtual;
  #L246c80.  return @kind void;
  #L246c82.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246c84.  @monitorexit v2
  #L246c86.  throw v0;
  catch `java.lang.Throwable` @[L246c5c..L246c7a] goto L246c82;
  catch `java.lang.Throwable` @[L246c84..L246c86] goto L246c82;
}
procedure `int` `e`(`io.reactivex.disposables.a` v2 @kind this) @signature `Lio/reactivex/disposables/a;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L246be8.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246bec.  v1:= 0I;
  #L246bee.  if v0 == 0 then goto L246bf4;
  #L246bf2.  return v1;
  #L246bf4.  @monitorenter v2
  #L246bf6.  v0:= v2.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246bfa.  if v0 == 0 then goto L246c02;
  #L246bfe.  @monitorexit v2
  #L246c00.  return v1;
  #L246c02.  v0:= v2.`io.reactivex.disposables.a.b` @type ^`io.reactivex.internal.util.i` @kind object;
  #L246c06.  if v0 == 0 then goto L246c12;
  #L246c0a.  call temp:= `g`(v0) @signature `Lio/reactivex/internal/util/i;.g:()I` @kind virtual;
  #L246c10.  v1:= temp;
  #L246c12.  @monitorexit v2
  #L246c14.  return v1;
  #L246c16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246c18.  @monitorexit v2
  #L246c1a.  throw v0;
  catch `java.lang.Throwable` @[L246bf6..L246c1a] goto L246c16;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.a` v1 @kind this) @signature `Lio/reactivex/disposables/a;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246ba4.  v0:= v1.`io.reactivex.disposables.a.c` @type ^`boolean` @kind boolean;
  #L246ba8.  return v0;
}
