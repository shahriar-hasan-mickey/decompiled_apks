record `io.reactivex.disposables.ActionDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.ReferenceDisposable` @kind class {
}
global `long` `@@io.reactivex.disposables.ActionDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.ActionDisposable` v0 @kind this, `io.reactivex.d0.a` v1 @kind object) @signature `Lio/reactivex/disposables/ActionDisposable;.<init>:(Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L246a68.  call `<init>`(v0, v1) @signature `Lio/reactivex/disposables/ReferenceDisposable;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L246a6e.  return @kind void;
}
procedure `void` `onDisposed`(`io.reactivex.disposables.ActionDisposable` v0 @kind this, `io.reactivex.d0.a` v1 @kind object) @signature `Lio/reactivex/disposables/ActionDisposable;.onDisposed:(Lio/reactivex/d0/a;)V` @AccessFlag PROTECTED {
    temp;

  #L246a80.  call `run`(v1) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L246a86.  return @kind void;
  #L246a88.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246a8a.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L246a90.  v1:= temp @kind object;
  #L246a92.  throw v1;
  catch `java.lang.Throwable` @[L246a80..L246a86] goto L246a88;
}
procedure `void` `onDisposed`(`io.reactivex.disposables.ActionDisposable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/disposables/ActionDisposable;.onDisposed:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L246ab0.  v1:= (`io.reactivex.d0.a`) v1 @kind object;
  #L246ab4.  call `onDisposed`(v0, v1) @signature `Lio/reactivex/disposables/ActionDisposable;.onDisposed:(Lio/reactivex/d0/a;)V` @kind virtual;
  #L246aba.  return @kind void;
}
