record `io.reactivex.disposables.ReferenceDisposable` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.disposables.b` @kind interface {
}
global `long` `@@io.reactivex.disposables.ReferenceDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L246e5c.  v0:= "value is null" @kind object;
  #L246e60.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L246e66.  v2:= temp @kind object;
  #L246e68.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L246e6e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246e80.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L246e86.  v0:= temp @kind object;
  #L246e88.  if v0 == 0 then goto L246ea0;
  #L246e8c.  v0:= 0I;
  #L246e8e.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246e94.  v0:= temp @kind object;
  #L246e96.  if v0 == 0 then goto L246ea0;
  #L246e9a.  call `onDisposed`(v1, v0) @signature `Lio/reactivex/disposables/ReferenceDisposable;.onDisposed:(Ljava/lang/Object;)V` @kind virtual;
  #L246ea0.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.disposables.ReferenceDisposable` v1 @kind this) @signature `Lio/reactivex/disposables/ReferenceDisposable;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L246e38.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L246e3e.  v0:= temp @kind object;
  #L246e40.  if v0 != 0 then goto L246e48;
  #L246e44.  v0:= 1I;
  #L246e46.  goto L246e4a;
  #L246e48.  v0:= 0I;
  #L246e4a.  return v0;
}
procedure `void` `onDisposed`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/disposables/ReferenceDisposable;.onDisposed:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
