record `io.reactivex.c0.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.e` @kind class {
}
procedure `void` `<init>`(`io.reactivex.c0.a` v0 @kind this) @signature `Lio/reactivex/c0/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L247684.  call `<init>`(v0) @signature `Lio/reactivex/e;.<init>:()V` @kind direct;
  #L24768a.  return @kind void;
}
procedure `io.reactivex.disposables.b` `J`(`io.reactivex.c0.a` v1 @kind this) @signature `Lio/reactivex/c0/a;.J:()Lio/reactivex/disposables/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L24765c.  v0:= new `io.reactivex.internal.util.e`;
  #L247660.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/e;.<init>:()V` @kind direct;
  #L247666.  call `K`(v1, v0) @signature `Lio/reactivex/c0/a;.K:(Lio/reactivex/d0/g;)V` @kind virtual;
  #L24766c.  v0:= v0.`io.reactivex.internal.util.e.b` @type ^`io.reactivex.disposables.b` @kind object;
  #L247670.  return v0 @kind object;
}
procedure `void` `K`(`io.reactivex.d0.g` v0 @kind object) @signature `Lio/reactivex/c0/a;.K:(Lio/reactivex/d0/g;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
