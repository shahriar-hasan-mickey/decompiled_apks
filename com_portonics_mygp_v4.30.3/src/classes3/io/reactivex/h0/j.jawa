record `io.reactivex.h0.j` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `io.reactivex.h0.j.a` @AccessFlag FINAL;
  `long` `io.reactivex.h0.j.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.h0.j.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.h0.j` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/reactivex/h0/j;.<init>:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L294084.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29408a.  v0.`io.reactivex.h0.j.a` @type ^`java.lang.Object` := v1 @kind object;
  #L29408e.  v0.`io.reactivex.h0.j.b` @type ^`long` := v2 @kind wide;
  #L294092.  v1:= "unit is null" @kind object;
  #L294096.  call temp:= `e`(v4, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L29409c.  v1:= temp @kind object;
  #L29409e.  v1:= (`java.util.concurrent.TimeUnit`) v1 @kind object;
  #L2940a2.  v0.`io.reactivex.h0.j.c` @type ^`java.util.concurrent.TimeUnit` := v1 @kind object;
  #L2940a6.  return @kind void;
}
procedure `long` `a`(`io.reactivex.h0.j` v2 @kind this) @signature `Lio/reactivex/h0/j;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29406c.  v0:= v2.`io.reactivex.h0.j.b` @type ^`long` @kind wide;
  #L294070.  return v0 @kind wide;
}
procedure `java.lang.Object` `b`(`io.reactivex.h0.j` v1 @kind this) @signature `Lio/reactivex/h0/j;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293fe8.  v0:= v1.`io.reactivex.h0.j.a` @type ^`java.lang.Object` @kind object;
  #L293fec.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.reactivex.h0.j` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/h0/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L293f3c.  v0:= instanceof @variable v7 @type ^`io.reactivex.h0.j` @kind boolean;
  #L293f40.  v1:= 0I;
  #L293f42.  if v0 == 0 then goto L293f84;
  #L293f46.  v7:= (`io.reactivex.h0.j`) v7 @kind object;
  #L293f4a.  v0:= v6.`io.reactivex.h0.j.a` @type ^`java.lang.Object` @kind object;
  #L293f4e.  v2:= v7.`io.reactivex.h0.j.a` @type ^`java.lang.Object` @kind object;
  #L293f52.  call temp:= `c`(v0, v2) @signature `Lio/reactivex/internal/functions/g0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L293f58.  v0:= temp;
  #L293f5a.  if v0 == 0 then goto L293f84;
  #L293f5e.  v2:= v6.`io.reactivex.h0.j.b` @type ^`long` @kind wide;
  #L293f62.  v4:= v7.`io.reactivex.h0.j.b` @type ^`long` @kind wide;
  #L293f66.  v0:= lcmp(v2, v4);
  #L293f6a.  if v0 != 0 then goto L293f84;
  #L293f6e.  v0:= v6.`io.reactivex.h0.j.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L293f72.  v7:= v7.`io.reactivex.h0.j.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L293f76.  call temp:= `c`(v0, v7) @signature `Lio/reactivex/internal/functions/g0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L293f7c.  v7:= temp;
  #L293f7e.  if v7 == 0 then goto L293f84;
  #L293f82.  v1:= 1I;
  #L293f84.  return v1;
}
procedure `int` `hashCode`(`io.reactivex.h0.j` v6 @kind this) @signature `Lio/reactivex/h0/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L293f98.  v0:= v6.`io.reactivex.h0.j.a` @type ^`java.lang.Object` @kind object;
  #L293f9c.  if v0 == 0 then goto L293faa;
  #L293fa0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L293fa6.  v0:= temp;
  #L293fa8.  goto L293fac;
  #L293faa.  v0:= 0I;
  #L293fac.  v1:= 31I;
  #L293fb0.  v0:= v0 * 31;
  #L293fb4.  v2:= v6.`io.reactivex.h0.j.b` @type ^`long` @kind wide;
  #L293fb8.  v4:= v2 ^>> v1 @kind long;
  #L293fbc.  v2:= v2 ^~ v4 @kind long;
  #L293fbe.  v3:= (`int`) v2 @kind l2i;
  #L293fc0.  v0:= v0 + v3 @kind int;
  #L293fc2.  v0:= v0 * 31;
  #L293fc6.  v1:= v6.`io.reactivex.h0.j.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L293fca.  call temp:= `hashCode`(v1) @signature `Ljava/util/concurrent/TimeUnit;.hashCode:()I` @kind virtual;
  #L293fd0.  v1:= temp;
  #L293fd2.  v0:= v0 + v1 @kind int;
  #L293fd4.  return v0;
}
procedure `java.lang.String` `toString`(`io.reactivex.h0.j` v3 @kind this) @signature `Lio/reactivex/h0/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L294000.  v0:= new `java.lang.StringBuilder`;
  #L294004.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29400a.  v1:= "Timed[time=" @kind object;
  #L29400e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294014.  v1:= v3.`io.reactivex.h0.j.b` @type ^`long` @kind wide;
  #L294018.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L29401e.  v1:= ", unit=" @kind object;
  #L294022.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294028.  v1:= v3.`io.reactivex.h0.j.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L29402c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294032.  v1:= ", value=" @kind object;
  #L294036.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29403c.  v1:= v3.`io.reactivex.h0.j.a` @type ^`java.lang.Object` @kind object;
  #L294040.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294046.  v1:= "]" @kind object;
  #L29404a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294050.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L294056.  v0:= temp @kind object;
  #L294058.  return v0 @kind object;
}
