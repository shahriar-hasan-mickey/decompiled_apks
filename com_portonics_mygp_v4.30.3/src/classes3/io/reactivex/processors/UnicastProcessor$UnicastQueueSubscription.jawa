record `io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.BasicIntQueueSubscription` @kind class {
  `io.reactivex.processors.UnicastProcessor` `io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v0 @kind this, `io.reactivex.processors.UnicastProcessor` v1 @kind object) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.<init>:(Lio/reactivex/processors/UnicastProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L293684.  v0.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` := v1 @kind object;
  #L293688.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L29368e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v2 @kind this) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2936a0.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936a4.  v0:= v0.`io.reactivex.processors.UnicastProcessor.i` @type ^`boolean` @kind boolean;
  #L2936a8.  if v0 == 0 then goto L2936ae;
  #L2936ac.  return @kind void;
  #L2936ae.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936b2.  v1:= 1I;
  #L2936b4.  v0.`io.reactivex.processors.UnicastProcessor.i` @type ^`boolean` := v1 @kind boolean;
  #L2936b8.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936bc.  call `M`(v0) @signature `Lio/reactivex/processors/UnicastProcessor;.M:()V` @kind virtual;
  #L2936c2.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936c6.  v1:= v0.`io.reactivex.processors.UnicastProcessor.m` @type ^`boolean` @kind boolean;
  #L2936ca.  if v1 != 0 then goto L2936fc;
  #L2936ce.  v0:= v0.`io.reactivex.processors.UnicastProcessor.k` @type ^`io.reactivex.internal.subscriptions.BasicIntQueueSubscription` @kind object;
  #L2936d2.  call temp:= `getAndIncrement`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L2936d8.  v0:= temp;
  #L2936da.  if v0 != 0 then goto L2936fc;
  #L2936de.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936e2.  v0:= v0.`io.reactivex.processors.UnicastProcessor.c` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L2936e6.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L2936ec.  v0:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L2936f0.  v0:= v0.`io.reactivex.processors.UnicastProcessor.h` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2936f4.  v1:= 0I;
  #L2936f6.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L2936fc.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v1 @kind this) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293710.  v0:= v1.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L293714.  v0:= v0.`io.reactivex.processors.UnicastProcessor.c` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L293718.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L29371e.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v1 @kind this) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293614.  v0:= v1.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L293618.  v0:= v0.`io.reactivex.processors.UnicastProcessor.c` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L29361c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/a;.isEmpty:()Z` @kind virtual;
  #L293622.  v0:= temp;
  #L293624.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v1 @kind this) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293660.  v0:= v1.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L293664.  v0:= v0.`io.reactivex.processors.UnicastProcessor.c` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L293668.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L29366e.  v0:= temp @kind object;
  #L293670.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293730.  call temp:= `validate`(v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L293736.  v0:= temp;
  #L293738.  if v0 == 0 then goto L293754;
  #L29373c.  v0:= v1.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L293740.  v0:= v0.`io.reactivex.processors.UnicastProcessor.l` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L293744.  call temp:= `a`(v0, v2) @signature `Lio/reactivex/internal/util/b;.a:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L29374a.  v2:= v1.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L29374e.  call `N`(v2) @signature `Lio/reactivex/processors/UnicastProcessor;.N:()V` @kind virtual;
  #L293754.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/processors/UnicastProcessor$UnicastQueueSubscription;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L293638.  v0:= 2I;
  #L29363a.  v3:= v3 ^& v0 @kind int;
  #L29363c.  if v3 == 0 then goto L29364c;
  #L293640.  v3:= v2.`io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription.this$0` @type ^`io.reactivex.processors.UnicastProcessor` @kind object;
  #L293644.  v1:= 1I;
  #L293646.  v3.`io.reactivex.processors.UnicastProcessor.m` @type ^`boolean` := v1 @kind boolean;
  #L29364a.  return v0;
  #L29364c.  v3:= 0I;
  #L29364e.  return v3;
}
