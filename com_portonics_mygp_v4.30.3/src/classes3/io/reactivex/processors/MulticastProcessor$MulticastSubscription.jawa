record `io.reactivex.processors.MulticastProcessor$MulticastSubscription` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `n.b.d` @kind interface {
  `n.b.c` `io.reactivex.processors.MulticastProcessor$MulticastSubscription.downstream` @AccessFlag FINAL;
  `long` `io.reactivex.processors.MulticastProcessor$MulticastSubscription.emitted` @AccessFlag ;
  `io.reactivex.processors.MulticastProcessor` `io.reactivex.processors.MulticastProcessor$MulticastSubscription.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.processors.MulticastProcessor$MulticastSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.processors.MulticastProcessor` v2 @kind object) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.<init>:(Ln/b/c;Lio/reactivex/processors/MulticastProcessor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L293274.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L29327a.  v0.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.downstream` @type ^`n.b.c` := v1 @kind object;
  #L29327e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v5 @kind this) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L293290.  v0:= -9223372036854775808L;
  #L293294.  call temp:= `getAndSet`(v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndSet:(J)J` @kind virtual;
  #L29329a.  v2:= temp @kind wide;
  #L29329c.  v4:= lcmp(v2, v0);
  #L2932a0.  if v4 != 0 then goto L2932a6;
  #L2932a4.  return @kind void;
  #L2932a6.  v0:= 0I;
  #L2932a8.  throw v0;
}
procedure `void` `onComplete`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v5 @kind this) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.onComplete:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2932bc.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L2932c2.  v0:= temp @kind wide;
  #L2932c4.  v2:= -9223372036854775808L;
  #L2932c8.  v4:= lcmp(v0, v2);
  #L2932cc.  if v4 == 0 then goto L2932da;
  #L2932d0.  v0:= v5.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.downstream` @type ^`n.b.c` @kind object;
  #L2932d4.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L2932da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.onError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2932ec.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L2932f2.  v0:= temp @kind wide;
  #L2932f4.  v2:= -9223372036854775808L;
  #L2932f8.  v4:= lcmp(v0, v2);
  #L2932fc.  if v4 == 0 then goto L29330a;
  #L293300.  v0:= v5.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.downstream` @type ^`n.b.c` @kind object;
  #L293304.  call `onError`(v0, v6) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L29330a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.onNext:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29331c.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L293322.  v0:= temp @kind wide;
  #L293324.  v2:= -9223372036854775808L;
  #L293328.  v4:= lcmp(v0, v2);
  #L29332c.  if v4 == 0 then goto L293348;
  #L293330.  v0:= v5.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.emitted` @type ^`long` @kind wide;
  #L293334.  v2:= 1L;
  #L293338.  v0:= v0 + v2 @kind long;
  #L29333a.  v5.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.emitted` @type ^`long` := v0 @kind wide;
  #L29333e.  v0:= v5.`io.reactivex.processors.MulticastProcessor$MulticastSubscription.downstream` @type ^`n.b.c` @kind object;
  #L293342.  call `onNext`(v0, v6) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L293348.  return @kind void;
}
procedure `void` `request`(`io.reactivex.processors.MulticastProcessor$MulticastSubscription` v9 @kind this, `long` v10 ) @signature `Lio/reactivex/processors/MulticastProcessor$MulticastSubscription;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L29335c.  call temp:= `validate`(v10) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L293362.  v0:= temp;
  #L293364.  if v0 == 0 then goto L2933b6;
  #L293368.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L29336e.  v0:= temp @kind wide;
  #L293370.  v2:= -9223372036854775808L;
  #L293374.  v4:= lcmp(v0, v2);
  #L293378.  if v4 == 0 then goto L2933b6;
  #L29337c.  v2:= 9223372036854775807L;
  #L293386.  v4:= lcmp(v0, v2);
  #L29338a.  if v4 != 0 then goto L293390;
  #L29338e.  goto L2933b6;
  #L293390.  v4:= v0 + v10 @kind long;
  #L293394.  v6:= 0L;
  #L293398.  v8:= lcmp(v4, v6);
  #L29339c.  if v8 >= 0 then goto L2933a2;
  #L2933a0.  goto L2933a4;
  #L2933a2.  v2:= v4 @kind wide;
  #L2933a4.  call temp:= `compareAndSet`(v9, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L2933aa.  v0:= temp;
  #L2933ac.  if v0 != 0 then goto L2933b2;
  #L2933b0.  goto L293368;
  #L2933b2.  v10:= 0I;
  #L2933b4.  throw v10;
  #L2933b6.  return @kind void;
}
