record `io.reactivex.internal.subscriptions.BooleanSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `n.b.d` @kind interface {
}
global `long` `@@io.reactivex.internal.subscriptions.BooleanSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscriptions.BooleanSubscription` v0 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28ebf4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L28ebfa.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28ec0c.  v0:= 1I;
  #L28ec0e.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.lazySet:(Z)V` @kind virtual;
  #L28ec14.  return @kind void;
}
procedure `boolean` `isCancelled`(`io.reactivex.internal.subscriptions.BooleanSubscription` v1 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28eb90.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L28eb96.  v0:= temp;
  #L28eb98.  return v0;
}
procedure `void` `request`(`io.reactivex.internal.subscriptions.BooleanSubscription` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.request:(J)V` @AccessFlag PUBLIC {
    temp;

  #L28ec28.  call temp:= `validate`(v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L28ec2e.  return @kind void;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.subscriptions.BooleanSubscription` v2 @kind this) @signature `Lio/reactivex/internal/subscriptions/BooleanSubscription;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28ebac.  v0:= new `java.lang.StringBuilder`;
  #L28ebb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28ebb6.  v1:= "BooleanSubscription(cancelled=" @kind object;
  #L28ebba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28ebc0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L28ebc6.  v1:= temp;
  #L28ebc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L28ebce.  v1:= ")" @kind object;
  #L28ebd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28ebd8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28ebde.  v0:= temp @kind object;
  #L28ebe0.  return v0 @kind object;
}
