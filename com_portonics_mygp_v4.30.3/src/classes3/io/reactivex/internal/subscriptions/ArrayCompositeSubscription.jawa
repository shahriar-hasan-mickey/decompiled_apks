record `io.reactivex.internal.subscriptions.ArrayCompositeSubscription` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.disposables.b` @kind interface {
}
global `long` `@@io.reactivex.internal.subscriptions.ArrayCompositeSubscription.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28e928.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L28e92e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v4 @kind this) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28e940.  v0:= 0I;
  #L28e942.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28e948.  v1:= temp @kind object;
  #L28e94a.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e94e.  if v1 == v2 then goto L28e992;
  #L28e952.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L28e958.  v1:= temp;
  #L28e95a.  if v0 >= v1 then goto L28e992;
  #L28e95e.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28e964.  v2:= temp @kind object;
  #L28e966.  v2:= (`n.b.d`) v2 @kind object;
  #L28e96a.  v3:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e96e.  if v2 == v3 then goto L28e98c;
  #L28e972.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28e978.  v2:= temp @kind object;
  #L28e97a.  v2:= (`n.b.d`) v2 @kind object;
  #L28e97e.  if v2 == v3 then goto L28e98c;
  #L28e982.  if v2 == 0 then goto L28e98c;
  #L28e986.  call `cancel`(v2) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28e98c.  v0:= v0 + 1;
  #L28e990.  goto L28e95a;
  #L28e992.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v3 @kind this) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28e874.  v0:= 0I;
  #L28e876.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28e87c.  v1:= temp @kind object;
  #L28e87e.  v2:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e882.  if v1 != v2 then goto L28e888;
  #L28e886.  v0:= 1I;
  #L28e888.  return v0;
}
procedure `n.b.d` `replaceResource`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `n.b.d` v4 @kind object) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.replaceResource:(ILn/b/d;)Ln/b/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e8e8.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28e8ee.  v0:= temp @kind object;
  #L28e8f0.  v0:= (`n.b.d`) v0 @kind object;
  #L28e8f4.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e8f8.  if v0 != v1 then goto L28e90a;
  #L28e8fc.  if v4 == 0 then goto L28e906;
  #L28e900.  call `cancel`(v4) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28e906.  v3:= 0I;
  #L28e908.  return v3 @kind object;
  #L28e90a.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L28e910.  v1:= temp;
  #L28e912.  if v1 == 0 then goto L28e8e8;
  #L28e916.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.internal.subscriptions.ArrayCompositeSubscription` v2 @kind this, `int` v3 , `n.b.d` v4 @kind object) @signature `Lio/reactivex/internal/subscriptions/ArrayCompositeSubscription;.setResource:(ILn/b/d;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e89c.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28e8a2.  v0:= temp @kind object;
  #L28e8a4.  v0:= (`n.b.d`) v0 @kind object;
  #L28e8a8.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e8ac.  if v0 != v1 then goto L28e8be;
  #L28e8b0.  if v4 == 0 then goto L28e8ba;
  #L28e8b4.  call `cancel`(v4) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28e8ba.  v3:= 0I;
  #L28e8bc.  return v3;
  #L28e8be.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L28e8c4.  v1:= temp;
  #L28e8c6.  if v1 == 0 then goto L28e89c;
  #L28e8ca.  if v0 == 0 then goto L28e8d4;
  #L28e8ce.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28e8d4.  v3:= 1I;
  #L28e8d6.  return v3;
}
