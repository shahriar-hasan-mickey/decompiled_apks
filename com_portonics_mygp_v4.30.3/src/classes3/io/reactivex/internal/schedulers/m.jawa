record `io.reactivex.internal.schedulers.m` @kind class @AccessFlag FINAL {
  `boolean` `io.reactivex.internal.schedulers.m.a` @AccessFlag ;
  `int` `io.reactivex.internal.schedulers.m.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.m` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28c970.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28c976.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.schedulers.m` v3 @kind this, `java.util.Properties` v4 @kind object) @signature `Lio/reactivex/internal/schedulers/m;.a:(Ljava/util/Properties;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L28c988.  v0:= "rx2.purge-enabled" @kind object;
  #L28c98c.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L28c992.  v1:= temp;
  #L28c994.  v2:= 1I;
  #L28c996.  if v1 == 0 then goto L28c9b0;
  #L28c99a.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L28c9a0.  v0:= temp @kind object;
  #L28c9a2.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L28c9a8.  v0:= temp;
  #L28c9aa.  v3.`io.reactivex.internal.schedulers.m.a` @type ^`boolean` := v0 @kind boolean;
  #L28c9ae.  goto L28c9b4;
  #L28c9b0.  v3.`io.reactivex.internal.schedulers.m.a` @type ^`boolean` := v2 @kind boolean;
  #L28c9b4.  v0:= v3.`io.reactivex.internal.schedulers.m.a` @type ^`boolean` @kind boolean;
  #L28c9b8.  if v0 == 0 then goto L28c9e8;
  #L28c9bc.  v0:= "rx2.purge-period-seconds" @kind object;
  #L28c9c0.  call temp:= `containsKey`(v4, v0) @signature `Ljava/util/Properties;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L28c9c6.  v1:= temp;
  #L28c9c8.  if v1 == 0 then goto L28c9e8;
  #L28c9cc.  call temp:= `getProperty`(v4, v0) @signature `Ljava/util/Properties;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L28c9d2.  v4:= temp @kind object;
  #L28c9d4.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L28c9da.  v4:= temp;
  #L28c9dc.  v3.`io.reactivex.internal.schedulers.m.b` @type ^`int` := v4;
  #L28c9e0.  goto L28c9ec;
  #L28c9e2.  v3.`io.reactivex.internal.schedulers.m.b` @type ^`int` := v2;
  #L28c9e6.  goto L28c9ec;
  #L28c9e8.  v3.`io.reactivex.internal.schedulers.m.b` @type ^`int` := v2;
  #L28c9ec.  return @kind void;
  catch `java.lang.NumberFormatException` @[L28c9cc..L28c9e0] goto L28c9e2;
}
