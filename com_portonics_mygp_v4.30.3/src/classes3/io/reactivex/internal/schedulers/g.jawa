record `io.reactivex.internal.schedulers.g` @kind class @AccessFlag FINAL extends `io.reactivex.x$a` @kind class {
  `io.reactivex.disposables.a` `io.reactivex.internal.schedulers.g.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.f` `io.reactivex.internal.schedulers.g.c` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.schedulers.h` `io.reactivex.internal.schedulers.g.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.reactivex.internal.schedulers.g.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.g` v1 @kind this, `io.reactivex.internal.schedulers.f` v2 @kind object) @signature `Lio/reactivex/internal/schedulers/g;.<init>:(Lio/reactivex/internal/schedulers/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L28bea8.  call `<init>`(v1) @signature `Lio/reactivex/x$a;.<init>:()V` @kind direct;
  #L28beae.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L28beb2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L28beb8.  v1.`io.reactivex.internal.schedulers.g.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L28bebc.  v1.`io.reactivex.internal.schedulers.g.c` @type ^`io.reactivex.internal.schedulers.f` := v2 @kind object;
  #L28bec0.  v0:= new `io.reactivex.disposables.a`;
  #L28bec4.  call `<init>`(v0) @signature `Lio/reactivex/disposables/a;.<init>:()V` @kind direct;
  #L28beca.  v1.`io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.disposables.a` := v0 @kind object;
  #L28bece.  call temp:= `b`(v2) @signature `Lio/reactivex/internal/schedulers/f;.b:()Lio/reactivex/internal/schedulers/h;` @kind virtual;
  #L28bed4.  v2:= temp @kind object;
  #L28bed6.  v1.`io.reactivex.internal.schedulers.g.d` @type ^`io.reactivex.internal.schedulers.h` := v2 @kind object;
  #L28beda.  return @kind void;
}
procedure `io.reactivex.disposables.b` `c`(`io.reactivex.internal.schedulers.g` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lio/reactivex/internal/schedulers/g;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28be68.  v0:= v6.`io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.disposables.a` @kind object;
  #L28be6c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/a;.isDisposed:()Z` @kind virtual;
  #L28be72.  v0:= temp;
  #L28be74.  if v0 == 0 then goto L28be7e;
  #L28be78.  v7:= `@@io.reactivex.internal.disposables.EmptyDisposable.INSTANCE` @type ^`io.reactivex.internal.disposables.EmptyDisposable` @kind object;
  #L28be7c.  return v7 @kind object;
  #L28be7e.  v0:= v6.`io.reactivex.internal.schedulers.g.d` @type ^`io.reactivex.internal.schedulers.h` @kind object;
  #L28be82.  v5:= v6.`io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.disposables.a` @kind object;
  #L28be86.  v1:= v7 @kind object;
  #L28be88.  v2:= v8 @kind wide;
  #L28be8a.  v4:= v10 @kind object;
  #L28be8c.  call temp:= `e`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/schedulers/k;.e:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/internal/disposables/a;)Lio/reactivex/internal/schedulers/ScheduledRunnable;` @kind virtual;
  #L28be92.  v7:= temp @kind object;
  #L28be94.  return v7 @kind object;
}
procedure `void` `dispose`(`io.reactivex.internal.schedulers.g` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/g;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28beec.  v0:= v3.`io.reactivex.internal.schedulers.g.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L28bef0.  v1:= 0I;
  #L28bef2.  v2:= 1I;
  #L28bef4.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L28befa.  v0:= temp;
  #L28befc.  if v0 == 0 then goto L28bf18;
  #L28bf00.  v0:= v3.`io.reactivex.internal.schedulers.g.b` @type ^`io.reactivex.disposables.a` @kind object;
  #L28bf04.  call `dispose`(v0) @signature `Lio/reactivex/disposables/a;.dispose:()V` @kind virtual;
  #L28bf0a.  v0:= v3.`io.reactivex.internal.schedulers.g.c` @type ^`io.reactivex.internal.schedulers.f` @kind object;
  #L28bf0e.  v1:= v3.`io.reactivex.internal.schedulers.g.d` @type ^`io.reactivex.internal.schedulers.h` @kind object;
  #L28bf12.  call `d`(v0, v1) @signature `Lio/reactivex/internal/schedulers/f;.d:(Lio/reactivex/internal/schedulers/h;)V` @kind virtual;
  #L28bf18.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.schedulers.g` v1 @kind this) @signature `Lio/reactivex/internal/schedulers/g;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28be48.  v0:= v1.`io.reactivex.internal.schedulers.g.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L28be4c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L28be52.  v0:= temp;
  #L28be54.  return v0;
}
