record `io.reactivex.internal.schedulers.h` @kind class @AccessFlag FINAL extends `io.reactivex.internal.schedulers.k` @kind class {
  `long` `io.reactivex.internal.schedulers.h.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.h` v2 @kind this, `java.util.concurrent.ThreadFactory` v3 @kind object) @signature `Lio/reactivex/internal/schedulers/h;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L28bf44.  call `<init>`(v2, v3) @signature `Lio/reactivex/internal/schedulers/k;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L28bf4a.  v0:= 0L;
  #L28bf4e.  v2.`io.reactivex.internal.schedulers.h.d` @type ^`long` := v0 @kind wide;
  #L28bf52.  return @kind void;
}
procedure `long` `i`(`io.reactivex.internal.schedulers.h` v2 @kind this) @signature `Lio/reactivex/internal/schedulers/h;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28bf2c.  v0:= v2.`io.reactivex.internal.schedulers.h.d` @type ^`long` @kind wide;
  #L28bf30.  return v0 @kind wide;
}
procedure `void` `j`(`io.reactivex.internal.schedulers.h` v0 @kind this, `long` v1 ) @signature `Lio/reactivex/internal/schedulers/h;.j:(J)V` @AccessFlag PUBLIC {
    temp;

  #L28bf64.  v0.`io.reactivex.internal.schedulers.h.d` @type ^`long` := v1 @kind wide;
  #L28bf68.  return @kind void;
}
