record `io.reactivex.internal.schedulers.n` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.internal.schedulers.n` v0 @kind this) @signature `Lio/reactivex/internal/schedulers/n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28ca10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28ca16.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.schedulers.n` v3 @kind this) @signature `Lio/reactivex/internal/schedulers/n;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28ca28.  v0:= new `java.util.ArrayList`;
  #L28ca2c.  v1:= `@@io.reactivex.internal.schedulers.o.d` @type ^`java.util.Map` @kind object;
  #L28ca30.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L28ca36.  v1:= temp @kind object;
  #L28ca38.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L28ca3e.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28ca44.  v0:= temp @kind object;
  #L28ca46.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28ca4c.  v1:= temp;
  #L28ca4e.  if v1 == 0 then goto L28ca7e;
  #L28ca52.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28ca58.  v1:= temp @kind object;
  #L28ca5a.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L28ca5e.  call temp:= `isShutdown`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z` @kind virtual;
  #L28ca64.  v2:= temp;
  #L28ca66.  if v2 == 0 then goto L28ca76;
  #L28ca6a.  v2:= `@@io.reactivex.internal.schedulers.o.d` @type ^`java.util.Map` @kind object;
  #L28ca6e.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28ca74.  goto L28ca46;
  #L28ca76.  call `purge`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.purge:()V` @kind virtual;
  #L28ca7c.  goto L28ca46;
  #L28ca7e.  return @kind void;
}
