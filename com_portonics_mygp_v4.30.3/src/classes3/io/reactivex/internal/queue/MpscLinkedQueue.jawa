record `io.reactivex.internal.queue.MpscLinkedQueue` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.e0.a.i` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.queue.MpscLinkedQueue.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28a83c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28a842.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L28a846.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L28a84c.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L28a850.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L28a854.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L28a85a.  v1.`io.reactivex.internal.queue.MpscLinkedQueue.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L28a85e.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`;
  #L28a862.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.<init>:()V` @kind direct;
  #L28a868.  call `d`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V` @kind virtual;
  #L28a86e.  call temp:= `e`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a874.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` `a`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @AccessFlag  {
    temp;
    v0;

  #L28a748.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28a74c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28a752.  v0:= temp @kind object;
  #L28a754.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`) v0 @kind object;
  #L28a758.  return v0 @kind object;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` `b`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.b:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @AccessFlag  {
    temp;
    v0;

  #L28a76c.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28a770.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28a776.  v0:= temp @kind object;
  #L28a778.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`) v0 @kind object;
  #L28a77c.  return v0 @kind object;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` `c`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @AccessFlag  {
    temp;
    v0;

  #L28a790.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28a794.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28a79a.  v0:= temp @kind object;
  #L28a79c.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`) v0 @kind object;
  #L28a7a0.  return v0 @kind object;
}
procedure `void` `clear`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a888.  call temp:= `poll`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L28a88e.  v0:= temp @kind object;
  #L28a890.  if v0 == 0 then goto L28a8a2;
  #L28a894.  call temp:= `isEmpty`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L28a89a.  v0:= temp;
  #L28a89c.  if v0 != 0 then goto L28a8a2;
  #L28a8a0.  goto L28a888;
  #L28a8a2.  return @kind void;
}
procedure `void` `d`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V` @AccessFlag  {
    temp;
    v0;

  #L28a8b4.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28a8b8.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L28a8be.  return @kind void;
}
procedure `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` `e`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @AccessFlag  {
    temp;
    v0;

  #L28a7b4.  v0:= v1.`io.reactivex.internal.queue.MpscLinkedQueue.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28a7b8.  call temp:= `getAndSet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28a7be.  v2:= temp @kind object;
  #L28a7c0.  v2:= (`io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`) v2 @kind object;
  #L28a7c4.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a6e4.  call temp:= `b`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.b:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a6ea.  v0:= temp @kind object;
  #L28a6ec.  call temp:= `c`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a6f2.  v1:= temp @kind object;
  #L28a6f4.  if v0 != v1 then goto L28a6fc;
  #L28a6f8.  v0:= 1I;
  #L28a6fa.  goto L28a6fe;
  #L28a6fc.  v0:= 0I;
  #L28a6fe.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.queue.MpscLinkedQueue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a710.  v0:= "Null is not a valid element" @kind object;
  #L28a714.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L28a71a.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode`;
  #L28a71e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L28a724.  call temp:= `e`(v1, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.e:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a72a.  v2:= temp @kind object;
  #L28a72c.  call `soNext`(v2, v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.soNext:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V` @kind virtual;
  #L28a732.  v2:= 1I;
  #L28a734.  return v2;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.queue.MpscLinkedQueue` v2 @kind this) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a7d8.  call temp:= `a`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.a:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a7de.  v0:= temp @kind object;
  #L28a7e0.  call temp:= `lvNext`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.lvNext:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a7e6.  v1:= temp @kind object;
  #L28a7e8.  if v1 == 0 then goto L28a7fc;
  #L28a7ec.  call temp:= `getAndNullValue`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.getAndNullValue:()Ljava/lang/Object;` @kind virtual;
  #L28a7f2.  v0:= temp @kind object;
  #L28a7f4.  call `d`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V` @kind virtual;
  #L28a7fa.  return v0 @kind object;
  #L28a7fc.  call temp:= `c`(v2) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.c:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a802.  v1:= temp @kind object;
  #L28a804.  if v0 == v1 then goto L28a826;
  #L28a808.  call temp:= `lvNext`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.lvNext:()Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;` @kind virtual;
  #L28a80e.  v1:= temp @kind object;
  #L28a810.  if v1 != 0 then goto L28a816;
  #L28a814.  goto L28a808;
  #L28a816.  call temp:= `getAndNullValue`(v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;.getAndNullValue:()Ljava/lang/Object;` @kind virtual;
  #L28a81c.  v0:= temp @kind object;
  #L28a81e.  call `d`(v2, v1) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.d:(Lio/reactivex/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V` @kind virtual;
  #L28a824.  return v0 @kind object;
  #L28a826.  v0:= 0I;
  #L28a828.  return v0 @kind object;
}
