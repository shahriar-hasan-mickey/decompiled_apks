record `io.reactivex.internal.subscribers.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.h` @kind interface, `io.reactivex.e0.a.g` @kind interface {
  `n.b.c` `io.reactivex.internal.subscribers.b.b` @AccessFlag PROTECTED_FINAL;
  `n.b.d` `io.reactivex.internal.subscribers.b.c` @AccessFlag PROTECTED;
  `io.reactivex.e0.a.g` `io.reactivex.internal.subscribers.b.d` @AccessFlag PROTECTED;
  `boolean` `io.reactivex.internal.subscribers.b.e` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.subscribers.b.f` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.b` v0 @kind this, `n.b.c` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/b;.<init>:(Ln/b/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28d7dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28d7e2.  v0.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` := v1 @kind object;
  #L28d7e6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.subscribers.b` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.a:()V` @AccessFlag PROTECTED {
    temp;

  #L28d7f8.  return @kind void;
}
procedure `boolean` `b`(`io.reactivex.internal.subscribers.b` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.b:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L28d750.  v0:= 1I;
  #L28d752.  return v0;
}
procedure `void` `c`(`io.reactivex.internal.subscribers.b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/b;.c:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L28d844.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L28d84a.  v0:= v1.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` @kind object;
  #L28d84e.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28d854.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/subscribers/b;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L28d85a.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.b` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d80c.  v0:= v1.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` @kind object;
  #L28d810.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28d816.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.subscribers.b` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d828.  v0:= v1.`io.reactivex.internal.subscribers.b.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d82c.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L28d832.  return @kind void;
}
procedure `int` `d`(`io.reactivex.internal.subscribers.b` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/subscribers/b;.d:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L28d7a4.  v0:= v2.`io.reactivex.internal.subscribers.b.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d7a8.  if v0 == 0 then goto L28d7c6;
  #L28d7ac.  v1:= v3 ^& 4;
  #L28d7b0.  if v1 != 0 then goto L28d7c6;
  #L28d7b4.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L28d7ba.  v3:= temp;
  #L28d7bc.  if v3 == 0 then goto L28d7c4;
  #L28d7c0.  v2.`io.reactivex.internal.subscribers.b.f` @type ^`int` := v3;
  #L28d7c4.  return v3;
  #L28d7c6.  v3:= 0I;
  #L28d7c8.  return v3;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.subscribers.b` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d764.  v0:= v1.`io.reactivex.internal.subscribers.b.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d768.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L28d76e.  v0:= temp;
  #L28d770.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/b;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28d784.  v2:= new `java.lang.UnsupportedOperationException`;
  #L28d788.  v0:= "Should not be called!" @kind object;
  #L28d78c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28d792.  throw v2;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.b` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d86c.  v0:= v1.`io.reactivex.internal.subscribers.b.e` @type ^`boolean` @kind boolean;
  #L28d870.  if v0 == 0 then goto L28d876;
  #L28d874.  return @kind void;
  #L28d876.  v0:= 1I;
  #L28d878.  v1.`io.reactivex.internal.subscribers.b.e` @type ^`boolean` := v0 @kind boolean;
  #L28d87c.  v0:= v1.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` @kind object;
  #L28d880.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L28d886.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d898.  v0:= v1.`io.reactivex.internal.subscribers.b.e` @type ^`boolean` @kind boolean;
  #L28d89c.  if v0 == 0 then goto L28d8a8;
  #L28d8a0.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L28d8a6.  return @kind void;
  #L28d8a8.  v0:= 1I;
  #L28d8aa.  v1.`io.reactivex.internal.subscribers.b.e` @type ^`boolean` := v0 @kind boolean;
  #L28d8ae.  v0:= v1.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` @kind object;
  #L28d8b2.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28d8b8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.b` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/b;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28d8cc.  v0:= v1.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` @kind object;
  #L28d8d0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L28d8d6.  v0:= temp;
  #L28d8d8.  if v0 == 0 then goto L28d90c;
  #L28d8dc.  v1.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` := v2 @kind object;
  #L28d8e0.  v0:= instanceof @variable v2 @type ^`io.reactivex.e0.a.g` @kind boolean;
  #L28d8e4.  if v0 == 0 then goto L28d8f0;
  #L28d8e8.  v2:= (`io.reactivex.e0.a.g`) v2 @kind object;
  #L28d8ec.  v1.`io.reactivex.internal.subscribers.b.d` @type ^`io.reactivex.e0.a.g` := v2 @kind object;
  #L28d8f0.  call temp:= `b`(v1) @signature `Lio/reactivex/internal/subscribers/b;.b:()Z` @kind virtual;
  #L28d8f6.  v2:= temp;
  #L28d8f8.  if v2 == 0 then goto L28d90c;
  #L28d8fc.  v2:= v1.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` @kind object;
  #L28d900.  call `onSubscribe`(v2, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L28d906.  call `a`(v1) @signature `Lio/reactivex/internal/subscribers/b;.a:()V` @kind virtual;
  #L28d90c.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.b` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/b;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d920.  v0:= v1.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` @kind object;
  #L28d924.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L28d92a.  return @kind void;
}
