record `io.reactivex.internal.subscribers.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.e0.a.a` @kind interface, `io.reactivex.e0.a.g` @kind interface {
  `io.reactivex.e0.a.a` `io.reactivex.internal.subscribers.a.b` @AccessFlag PROTECTED_FINAL;
  `n.b.d` `io.reactivex.internal.subscribers.a.c` @AccessFlag PROTECTED;
  `io.reactivex.e0.a.g` `io.reactivex.internal.subscribers.a.d` @AccessFlag PROTECTED;
  `boolean` `io.reactivex.internal.subscribers.a.e` @AccessFlag PROTECTED;
  `int` `io.reactivex.internal.subscribers.a.f` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`io.reactivex.internal.subscribers.a` v0 @kind this, `io.reactivex.e0.a.a` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.<init>:(Lio/reactivex/e0/a/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28d5f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28d5f6.  v0.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` := v1 @kind object;
  #L28d5fa.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.subscribers.a` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.a:()V` @AccessFlag PROTECTED {
    temp;

  #L28d60c.  return @kind void;
}
procedure `boolean` `b`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.b:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L28d564.  v0:= 1I;
  #L28d566.  return v0;
}
procedure `void` `c`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.c:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L28d658.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L28d65e.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` @kind object;
  #L28d662.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28d668.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/subscribers/a;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L28d66e.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d620.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` @kind object;
  #L28d624.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28d62a.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d63c.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d640.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L28d646.  return @kind void;
}
procedure `int` `d`(`io.reactivex.internal.subscribers.a` v2 @kind this, `int` v3 ) @signature `Lio/reactivex/internal/subscribers/a;.d:(I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L28d5b8.  v0:= v2.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d5bc.  if v0 == 0 then goto L28d5da;
  #L28d5c0.  v1:= v3 ^& 4;
  #L28d5c4.  if v1 != 0 then goto L28d5da;
  #L28d5c8.  call temp:= `requestFusion`(v0, v3) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L28d5ce.  v3:= temp;
  #L28d5d0.  if v3 == 0 then goto L28d5d8;
  #L28d5d4.  v2.`io.reactivex.internal.subscribers.a.f` @type ^`int` := v3;
  #L28d5d8.  return v3;
  #L28d5da.  v3:= 0I;
  #L28d5dc.  return v3;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d578.  v0:= v1.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L28d57c.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L28d582.  v0:= temp;
  #L28d584.  return v0;
}
procedure `boolean` `offer`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28d598.  v2:= new `java.lang.UnsupportedOperationException`;
  #L28d59c.  v0:= "Should not be called!" @kind object;
  #L28d5a0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28d5a6.  throw v2;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.a` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d680.  v0:= v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` @kind boolean;
  #L28d684.  if v0 == 0 then goto L28d68a;
  #L28d688.  return @kind void;
  #L28d68a.  v0:= 1I;
  #L28d68c.  v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` := v0 @kind boolean;
  #L28d690.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L28d694.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L28d69a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d6ac.  v0:= v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` @kind boolean;
  #L28d6b0.  if v0 == 0 then goto L28d6bc;
  #L28d6b4.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L28d6ba.  return @kind void;
  #L28d6bc.  v0:= 1I;
  #L28d6be.  v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` := v0 @kind boolean;
  #L28d6c2.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L28d6c6.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28d6cc.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.a` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/a;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L28d6e0.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` @kind object;
  #L28d6e4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L28d6ea.  v0:= temp;
  #L28d6ec.  if v0 == 0 then goto L28d720;
  #L28d6f0.  v1.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` := v2 @kind object;
  #L28d6f4.  v0:= instanceof @variable v2 @type ^`io.reactivex.e0.a.g` @kind boolean;
  #L28d6f8.  if v0 == 0 then goto L28d704;
  #L28d6fc.  v2:= (`io.reactivex.e0.a.g`) v2 @kind object;
  #L28d700.  v1.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` := v2 @kind object;
  #L28d704.  call temp:= `b`(v1) @signature `Lio/reactivex/internal/subscribers/a;.b:()Z` @kind virtual;
  #L28d70a.  v2:= temp;
  #L28d70c.  if v2 == 0 then goto L28d720;
  #L28d710.  v2:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L28d714.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/h;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L28d71a.  call `a`(v1) @signature `Lio/reactivex/internal/subscribers/a;.a:()V` @kind virtual;
  #L28d720.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.a` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/a;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d734.  v0:= v1.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` @kind object;
  #L28d738.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L28d73e.  return @kind void;
}
