record `io.reactivex.internal.subscribers.DeferredScalarSubscriber` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.h` @kind interface {
  `boolean` `io.reactivex.internal.subscribers.DeferredScalarSubscriber.hasValue` @AccessFlag PROTECTED;
  `n.b.d` `io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @AccessFlag PROTECTED;
}
global `long` `@@io.reactivex.internal.subscribers.DeferredScalarSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v0 @kind this, `n.b.c` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.<init>:(Ln/b/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28dd00.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ln/b/c;)V` @kind direct;
  #L28dd06.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28dd18.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L28dd1e.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L28dd22.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L28dd28.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28dd3c.  v0:= v1.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.hasValue` @type ^`boolean` @kind boolean;
  #L28dd40.  if v0 == 0 then goto L28dd50;
  #L28dd44.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L28dd48.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L28dd4e.  goto L28dd5a;
  #L28dd50.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L28dd54.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L28dd5a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28dd6c.  v0:= 0I;
  #L28dd6e.  v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v0 @kind object;
  #L28dd72.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L28dd76.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28dd7c.  return @kind void;
}
procedure `void` `onNext`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.DeferredScalarSubscriber` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/subscribers/DeferredScalarSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28dd90.  v0:= v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L28dd94.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L28dd9a.  v0:= temp;
  #L28dd9c.  if v0 == 0 then goto L28ddbe;
  #L28dda0.  v2.`io.reactivex.internal.subscribers.DeferredScalarSubscriber.upstream` @type ^`n.b.d` := v3 @kind object;
  #L28dda4.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L28dda8.  call `onSubscribe`(v0, v2) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L28ddae.  v0:= 9223372036854775807L;
  #L28ddb8.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L28ddbe.  return @kind void;
}
