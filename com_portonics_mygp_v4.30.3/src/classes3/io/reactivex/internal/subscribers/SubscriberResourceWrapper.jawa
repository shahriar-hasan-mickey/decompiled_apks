record `io.reactivex.internal.subscribers.SubscriberResourceWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.h` @kind interface, `io.reactivex.disposables.b` @kind interface, `n.b.d` @kind interface {
  `n.b.c` `io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.subscribers.SubscriberResourceWrapper.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `n.b.c` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.<init>:(Ln/b/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28e730.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L28e736.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L28e73a.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L28e740.  v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L28e744.  v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @type ^`n.b.c` := v2 @kind object;
  #L28e748.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v0 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L28e75c.  call `dispose`(v0) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @kind virtual;
  #L28e762.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e774.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28e778.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28e77e.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28e784.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v2 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e704.  v0:= v2.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28e708.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28e70e.  v0:= temp @kind object;
  #L28e710.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L28e714.  if v0 != v1 then goto L28e71c;
  #L28e718.  v0:= 1I;
  #L28e71a.  goto L28e71e;
  #L28e71c.  v0:= 0I;
  #L28e71e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e798.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28e79e.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @type ^`n.b.c` @kind object;
  #L28e7a2.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L28e7a8.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e7bc.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28e7c2.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @type ^`n.b.c` @kind object;
  #L28e7c6.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28e7cc.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e7e0.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @type ^`n.b.c` @kind object;
  #L28e7e4.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L28e7ea.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e7fc.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28e800.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ln/b/d;)Z` @kind static;
  #L28e806.  v2:= temp;
  #L28e808.  if v2 == 0 then goto L28e816;
  #L28e80c.  v2:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.downstream` @type ^`n.b.c` @kind object;
  #L28e810.  call `onSubscribe`(v2, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L28e816.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e828.  call temp:= `validate`(v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L28e82e.  v0:= temp;
  #L28e830.  if v0 == 0 then goto L28e84a;
  #L28e834.  v0:= v1.`io.reactivex.internal.subscribers.SubscriberResourceWrapper.upstream` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28e838.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28e83e.  v0:= temp @kind object;
  #L28e840.  v0:= (`n.b.d`) v0 @kind object;
  #L28e844.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L28e84a.  return @kind void;
}
procedure `void` `setResource`(`io.reactivex.internal.subscribers.SubscriberResourceWrapper` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/subscribers/SubscriberResourceWrapper;.setResource:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L28e85c.  call temp:= `set`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L28e862.  return @kind void;
}
