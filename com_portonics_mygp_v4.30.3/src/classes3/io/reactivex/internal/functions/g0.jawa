record `io.reactivex.internal.functions.g0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `io.reactivex.d0.d` `@@io.reactivex.internal.functions.g0.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/functions/g0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L249188.  v0:= new `io.reactivex.internal.functions.f0`;
  #L24918c.  call `<init>`(v0) @signature `Lio/reactivex/internal/functions/f0;.<init>:()V` @kind direct;
  #L249192.  `@@io.reactivex.internal.functions.g0.a` @type ^`io.reactivex.d0.d` := v0 @kind object;
  #L249196.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lio/reactivex/internal/functions/g0;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L249068.  if v0 >= v1 then goto L249070;
  #L24906c.  v0:= -1I;
  #L24906e.  goto L24907a;
  #L249070.  if v0 <= v1 then goto L249078;
  #L249074.  v0:= 1I;
  #L249076.  goto L24907a;
  #L249078.  v0:= 0I;
  #L24907a.  return v0;
}
procedure `int` `b`(`long` v1 , `long` v3 ) @signature `Lio/reactivex/internal/functions/g0;.b:(JJ)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24908c.  v0:= lcmp(v1, v3);
  #L249090.  if v0 >= 0 then goto L249098;
  #L249094.  v1:= -1I;
  #L249096.  goto L2490a6;
  #L249098.  v0:= lcmp(v1, v3);
  #L24909c.  if v0 <= 0 then goto L2490a4;
  #L2490a0.  v1:= 1I;
  #L2490a2.  goto L2490a6;
  #L2490a4.  v1:= 0I;
  #L2490a6.  return v1;
}
procedure `boolean` `c`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/g0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L249038.  if v0 == v1 then goto L249052;
  #L24903c.  if v0 == 0 then goto L24904e;
  #L249040.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249046.  v0:= temp;
  #L249048.  if v0 == 0 then goto L24904e;
  #L24904c.  goto L249052;
  #L24904e.  v0:= 0I;
  #L249050.  goto L249054;
  #L249052.  v0:= 1I;
  #L249054.  return v0;
}
procedure `io.reactivex.d0.d` `d`() @signature `Lio/reactivex/internal/functions/g0;.d:()Lio/reactivex/d0/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249104.  v0:= `@@io.reactivex.internal.functions.g0.a` @type ^`io.reactivex.d0.d` @kind object;
  #L249108.  return v0 @kind object;
}
procedure `java.lang.Object` `e`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L24911c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L249122.  return v0 @kind object;
}
procedure `int` `f`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lio/reactivex/internal/functions/g0;.f:(ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2490b8.  if v2 <= 0 then goto L2490be;
  #L2490bc.  return v2;
  #L2490be.  v0:= new `java.lang.IllegalArgumentException`;
  #L2490c2.  v1:= new `java.lang.StringBuilder`;
  #L2490c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2490cc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2490d2.  v3:= " > 0 required but it was " @kind object;
  #L2490d6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2490dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2490e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2490e8.  v2:= temp @kind object;
  #L2490ea.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2490f0.  throw v0;
}
procedure `long` `g`(`long` v3 , `java.lang.String` v5 @kind object) @signature `Lio/reactivex/internal/functions/g0;.g:(JLjava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L249134.  v0:= 0L;
  #L249138.  v2:= lcmp(v3, v0);
  #L24913c.  if v2 <= 0 then goto L249142;
  #L249140.  return v3 @kind wide;
  #L249142.  v0:= new `java.lang.IllegalArgumentException`;
  #L249146.  v1:= new `java.lang.StringBuilder`;
  #L24914a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249150.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249156.  v5:= " > 0 required but it was " @kind object;
  #L24915a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249160.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L249166.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24916c.  v3:= temp @kind object;
  #L24916e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249174.  throw v0;
}
