record `io.reactivex.internal.functions.i` @kind class @AccessFlag FINAL extends `io.reactivex.d0.m` @kind interface {
  `java.lang.Class` `io.reactivex.internal.functions.i.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.i` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lio/reactivex/internal/functions/i;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24843c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L248442.  v0.`io.reactivex.internal.functions.i.b` @type ^`java.lang.Class` := v1 @kind object;
  #L248446.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.internal.functions.i` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/i;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24841c.  v0:= v1.`io.reactivex.internal.functions.i.b` @type ^`java.lang.Class` @kind object;
  #L248420.  call temp:= `isInstance`(v0, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L248426.  v2:= temp;
  #L248428.  return v2;
}
