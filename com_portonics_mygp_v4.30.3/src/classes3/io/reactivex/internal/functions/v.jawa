record `io.reactivex.internal.functions.v` @kind class @AccessFlag FINAL extends `io.reactivex.d0.a` @kind interface {
  `io.reactivex.d0.g` `io.reactivex.internal.functions.v.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.v` v0 @kind this, `io.reactivex.d0.g` v1 @kind object) @signature `Lio/reactivex/internal/functions/v;.<init>:(Lio/reactivex/d0/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2488e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2488ee.  v0.`io.reactivex.internal.functions.v.b` @type ^`io.reactivex.d0.g` := v1 @kind object;
  #L2488f2.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.functions.v` v2 @kind this) @signature `Lio/reactivex/internal/functions/v;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L248904.  v0:= v2.`io.reactivex.internal.functions.v.b` @type ^`io.reactivex.d0.g` @kind object;
  #L248908.  call temp:= `a`() @signature `Lio/reactivex/l;.a:()Lio/reactivex/l;` @kind static;
  #L24890e.  v1:= temp @kind object;
  #L248910.  call `accept`(v0, v1) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L248916.  return @kind void;
}
