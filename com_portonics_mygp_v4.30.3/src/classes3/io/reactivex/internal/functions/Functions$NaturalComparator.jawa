record `io.reactivex.internal.functions.Functions$NaturalComparator` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `java.util.Comparator` @kind interface {
}
global `io.reactivex.internal.functions.Functions$NaturalComparator`[] `@@io.reactivex.internal.functions.Functions$NaturalComparator.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.functions.Functions$NaturalComparator` `@@io.reactivex.internal.functions.Functions$NaturalComparator.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L248864.  v0:= new `io.reactivex.internal.functions.Functions$NaturalComparator`;
  #L248868.  v1:= "INSTANCE" @kind object;
  #L24886c.  v2:= 0I;
  #L24886e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L248874.  `@@io.reactivex.internal.functions.Functions$NaturalComparator.INSTANCE` @type ^`io.reactivex.internal.functions.Functions$NaturalComparator` := v0 @kind object;
  #L248878.  v1:= 1I;
  #L24887a.  v1:= new `io.reactivex.internal.functions.Functions$NaturalComparator`[v1];
  #L24887e.  v1[v2]:= v0 @kind object;
  #L248882.  `@@io.reactivex.internal.functions.Functions$NaturalComparator.$VALUES` @type ^`io.reactivex.internal.functions.Functions$NaturalComparator`[] := v1 @kind object;
  #L248886.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.Functions$NaturalComparator` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L248898.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L24889e.  return @kind void;
}
procedure `io.reactivex.internal.functions.Functions$NaturalComparator` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/functions/Functions$NaturalComparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24881c.  v0:= constclass @type ^`io.reactivex.internal.functions.Functions$NaturalComparator` @kind object;
  #L248820.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L248826.  v1:= temp @kind object;
  #L248828.  v1:= (`io.reactivex.internal.functions.Functions$NaturalComparator`) v1 @kind object;
  #L24882c.  return v1 @kind object;
}
procedure `io.reactivex.internal.functions.Functions$NaturalComparator`[] `values`() @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.values:()[Lio/reactivex/internal/functions/Functions$NaturalComparator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L248840.  v0:= `@@io.reactivex.internal.functions.Functions$NaturalComparator.$VALUES` @type ^`io.reactivex.internal.functions.Functions$NaturalComparator`[] @kind object;
  #L248844.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/functions/Functions$NaturalComparator;.clone:()Ljava/lang/Object;` @kind virtual;
  #L24884a.  v0:= temp @kind object;
  #L24884c.  v0:= (`io.reactivex.internal.functions.Functions$NaturalComparator`[]) v0 @kind object;
  #L248850.  return v0 @kind object;
}
procedure `int` `compare`(`io.reactivex.internal.functions.Functions$NaturalComparator` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/Functions$NaturalComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;

  #L2487fc.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L248800.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L248806.  v1:= temp;
  #L248808.  return v1;
}
