record `io.reactivex.internal.functions.b0` @kind class @AccessFlag FINAL extends `io.reactivex.d0.b` @kind interface {
  `io.reactivex.d0.k` `io.reactivex.internal.functions.b0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.b0` v0 @kind this, `io.reactivex.d0.k` v1 @kind object) @signature `Lio/reactivex/internal/functions/b0;.<init>:(Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L248ab4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L248aba.  v0.`io.reactivex.internal.functions.b0.a` @type ^`io.reactivex.d0.k` := v1 @kind object;
  #L248abe.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.functions.b0` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/functions/b0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L248aec.  v0:= v1.`io.reactivex.internal.functions.b0.a` @type ^`io.reactivex.d0.k` @kind object;
  #L248af0.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L248af6.  v0:= temp @kind object;
  #L248af8.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L248afe.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.functions.b0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/functions/b0;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L248ad0.  v1:= (`java.util.Map`) v1 @kind object;
  #L248ad4.  call `a`(v0, v1, v2) @signature `Lio/reactivex/internal/functions/b0;.a:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L248ada.  return @kind void;
}
