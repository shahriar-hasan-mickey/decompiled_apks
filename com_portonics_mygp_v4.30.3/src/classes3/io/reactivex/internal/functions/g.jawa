record `io.reactivex.internal.functions.g` @kind class @AccessFlag FINAL extends `io.reactivex.d0.m` @kind interface {
  `io.reactivex.d0.e` `io.reactivex.internal.functions.g.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.functions.g` v0 @kind this, `io.reactivex.d0.e` v1 @kind object) @signature `Lio/reactivex/internal/functions/g;.<init>:(Lio/reactivex/d0/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2483c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2483ca.  v0.`io.reactivex.internal.functions.g.b` @type ^`io.reactivex.d0.e` := v1 @kind object;
  #L2483ce.  return @kind void;
}
procedure `boolean` `test`(`io.reactivex.internal.functions.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/functions/g;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2483a0.  v1:= v0.`io.reactivex.internal.functions.g.b` @type ^`io.reactivex.d0.e` @kind object;
  #L2483a4.  call temp:= `getAsBoolean`(v1) @signature `Lio/reactivex/d0/e;.getAsBoolean:()Z` @kind interface;
  #L2483aa.  v1:= temp;
  #L2483ac.  v1:= v1 ^~ 1;
  #L2483b0.  return v1;
}
