record `io.reactivex.internal.operators.single.d` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.y` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.single.d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/d;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L289574.  call `<init>`(v0) @signature `Lio/reactivex/y;.<init>:()V` @kind direct;
  #L28957a.  v0.`io.reactivex.internal.operators.single.d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L28957e.  return @kind void;
}
procedure `void` `m`(`io.reactivex.internal.operators.single.d` v1 @kind this, `io.reactivex.z` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/d;.m:(Lio/reactivex/z;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L289590.  call temp:= `a`() @signature `Lio/reactivex/disposables/c;.a:()Lio/reactivex/disposables/b;` @kind static;
  #L289596.  v0:= temp @kind object;
  #L289598.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L28959e.  v0:= v1.`io.reactivex.internal.operators.single.d.b` @type ^`java.lang.Object` @kind object;
  #L2895a2.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2895a8.  return @kind void;
}
