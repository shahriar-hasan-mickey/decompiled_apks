record `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.z` @kind interface, `io.reactivex.h` @kind interface, `n.b.d` @kind interface {
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.disposable` @AccessFlag ;
  `n.b.c` `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.mapper` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.<init>:(Ln/b/c;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2891b0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L2891b6.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` := v1 @kind object;
  #L2891ba.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.mapper` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L2891be.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L2891c2.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L2891c8.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.parent` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L2891cc.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2891e0.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.disposable` @type ^`io.reactivex.disposables.b` @kind object;
  #L2891e4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2891ea.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.parent` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2891ee.  call temp:= `cancel`(v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L2891f4.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289208.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` @kind object;
  #L28920c.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L289212.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289224.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` @kind object;
  #L289228.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28922e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289240.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` @kind object;
  #L289244.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L28924a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L28925c.  v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.disposable` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L289260.  v1:= v0.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` @kind object;
  #L289264.  call `onSubscribe`(v1, v0) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L28926a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28927c.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.parent` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L289280.  call temp:= `deferredSetOnce`(v0, v1, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Ln/b/d;)Z` @kind static;
  #L289286.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289298.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.mapper` @type ^`io.reactivex.d0.k` @kind object;
  #L28929c.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2892a2.  v2:= temp @kind object;
  #L2892a4.  v0:= "the mapper returned a null Publisher" @kind object;
  #L2892a8.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2892ae.  v2:= temp @kind object;
  #L2892b0.  v2:= (`n.b.b`) v2 @kind object;
  #L2892b4.  call `subscribe`(v2, v1) @signature `Ln/b/b;.subscribe:(Ln/b/c;)V` @kind interface;
  #L2892ba.  return @kind void;
  #L2892bc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2892be.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2892c4.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.downstream` @type ^`n.b.c` @kind object;
  #L2892c8.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2892ce.  return @kind void;
  catch `java.lang.Throwable` @[L289298..L2892b4] goto L2892bc;
}
procedure `void` `request`(`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/single/SingleFlatMapPublisher$SingleFlatMapPublisherObserver;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2892ec.  v0:= v1.`io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver.parent` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2892f0.  call `deferredRequest`(v0, v1, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L2892f6.  return @kind void;
}
