record `io.reactivex.internal.operators.single.c` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.single.c.b` @AccessFlag FINAL;
  `io.reactivex.j` `io.reactivex.internal.operators.single.c.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.c` v0 @kind this, `java.util.concurrent.atomic.AtomicReference` v1 @kind object, `io.reactivex.j` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L289010.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L289016.  v0.`io.reactivex.internal.operators.single.c.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L28901a.  v0.`io.reactivex.internal.operators.single.c.c` @type ^`io.reactivex.j` := v2 @kind object;
  #L28901e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.single.c` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/c;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289030.  v0:= v1.`io.reactivex.internal.operators.single.c.c` @type ^`io.reactivex.j` @kind object;
  #L289034.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L28903a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.c` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28904c.  v0:= v1.`io.reactivex.internal.operators.single.c.c` @type ^`io.reactivex.j` @kind object;
  #L289050.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L289056.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.c` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289068.  v0:= v1.`io.reactivex.internal.operators.single.c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28906c.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L289072.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/c;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289084.  v0:= v1.`io.reactivex.internal.operators.single.c.c` @type ^`io.reactivex.j` @kind object;
  #L289088.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L28908e.  return @kind void;
}
