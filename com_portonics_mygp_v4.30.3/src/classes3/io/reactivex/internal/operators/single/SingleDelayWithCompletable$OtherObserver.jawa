record `io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.a0` `io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.source` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v0 @kind this, `io.reactivex.z` v1 @kind object, `io.reactivex.a0` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.<init>:(Lio/reactivex/z;Lio/reactivex/a0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L287fc0.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L287fc6.  v0.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.downstream` @type ^`io.reactivex.z` := v1 @kind object;
  #L287fca.  v0.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.source` @type ^`io.reactivex.a0` := v2 @kind object;
  #L287fce.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L287fe0.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L287fe6.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L287f98.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L287f9e.  v0:= temp @kind object;
  #L287fa0.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L287fa4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/b;)Z` @kind static;
  #L287faa.  v0:= temp;
  #L287fac.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L287ff8.  v0:= v3.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.source` @type ^`io.reactivex.a0` @kind object;
  #L287ffc.  v1:= new `io.reactivex.internal.observers.n`;
  #L288000.  v2:= v3.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L288004.  call `<init>`(v1, v3, v2) @signature `Lio/reactivex/internal/observers/n;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/z;)V` @kind direct;
  #L28800a.  call `b`(v0, v1) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L288010.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L288024.  v0:= v1.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L288028.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28802e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleDelayWithCompletable$OtherObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L288040.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L288046.  v1:= temp;
  #L288048.  if v1 == 0 then goto L288056;
  #L28804c.  v1:= v0.`io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L288050.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L288056.  return @kind void;
}
