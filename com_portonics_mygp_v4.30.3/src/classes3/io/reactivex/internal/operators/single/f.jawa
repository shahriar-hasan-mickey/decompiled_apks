record `io.reactivex.internal.operators.single.f` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.y` @kind class {
  `io.reactivex.a0` `io.reactivex.internal.operators.single.f.b` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.single.f.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.f` v0 @kind this, `io.reactivex.a0` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/f;.<init>:(Lio/reactivex/a0;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L289664.  call `<init>`(v0) @signature `Lio/reactivex/y;.<init>:()V` @kind direct;
  #L28966a.  v0.`io.reactivex.internal.operators.single.f.b` @type ^`io.reactivex.a0` := v1 @kind object;
  #L28966e.  v0.`io.reactivex.internal.operators.single.f.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L289672.  return @kind void;
}
procedure `void` `m`(`io.reactivex.internal.operators.single.f` v3 @kind this, `io.reactivex.z` v4 @kind object) @signature `Lio/reactivex/internal/operators/single/f;.m:(Lio/reactivex/z;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L289684.  v0:= v3.`io.reactivex.internal.operators.single.f.b` @type ^`io.reactivex.a0` @kind object;
  #L289688.  v1:= new `io.reactivex.internal.operators.single.e`;
  #L28968c.  v2:= v3.`io.reactivex.internal.operators.single.f.c` @type ^`io.reactivex.d0.k` @kind object;
  #L289690.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/single/e;.<init>:(Lio/reactivex/z;Lio/reactivex/d0/k;)V` @kind direct;
  #L289696.  call `b`(v0, v1) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L28969c.  return @kind void;
}
