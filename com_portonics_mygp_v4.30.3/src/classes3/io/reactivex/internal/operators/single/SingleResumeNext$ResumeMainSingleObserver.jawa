record `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.z` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this, `io.reactivex.z` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.<init>:(Lio/reactivex/z;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2897e4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L2897ea.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.z` := v1 @kind object;
  #L2897ee.  v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L2897f2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L289804.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28980a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2897bc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2897c2.  v0:= temp @kind object;
  #L2897c4.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L2897c8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/b;)Z` @kind static;
  #L2897ce.  v0:= temp;
  #L2897d0.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28981c.  v0:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.nextFunction` @type ^`io.reactivex.d0.k` @kind object;
  #L289820.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L289826.  v0:= temp @kind object;
  #L289828.  v1:= "The nextFunction returned a null SingleSource." @kind object;
  #L28982c.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L289832.  v0:= temp @kind object;
  #L289834.  v0:= (`io.reactivex.a0`) v0 @kind object;
  #L289838.  v6:= new `io.reactivex.internal.observers.n`;
  #L28983c.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L289840.  call `<init>`(v6, v5, v1) @signature `Lio/reactivex/internal/observers/n;.<init>:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/z;)V` @kind direct;
  #L289846.  call `b`(v0, v6) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L28984c.  return @kind void;
  #L28984e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L289850.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L289856.  v1:= v5.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L28985a.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L28985e.  v3:= 2I;
  #L289860.  v3:= new `java.lang.Throwable`[v3];
  #L289864.  v4:= 0I;
  #L289866.  v3[v4]:= v6 @kind object;
  #L28986a.  v6:= 1I;
  #L28986c.  v3[v6]:= v0 @kind object;
  #L289870.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L289876.  call `onError`(v1, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28987c.  return @kind void;
  catch `java.lang.Throwable` @[L28981c..L289838] goto L28984e;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L28989c.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2898a2.  v1:= temp;
  #L2898a4.  if v1 == 0 then goto L2898b2;
  #L2898a8.  v1:= v0.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L2898ac.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2898b2.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleResumeNext$ResumeMainSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2898c4.  v0:= v1.`io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver.downstream` @type ^`io.reactivex.z` @kind object;
  #L2898c8.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2898ce.  return @kind void;
}
