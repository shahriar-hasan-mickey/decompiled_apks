record `io.reactivex.internal.operators.single.a` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.y` @kind class {
  `io.reactivex.a0` `io.reactivex.internal.operators.single.a.b` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.operators.single.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.a` v0 @kind this, `io.reactivex.a0` v1 @kind object, `io.reactivex.d0.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/a;.<init>:(Lio/reactivex/a0;Lio/reactivex/d0/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L288674.  call `<init>`(v0) @signature `Lio/reactivex/y;.<init>:()V` @kind direct;
  #L28867a.  v0.`io.reactivex.internal.operators.single.a.b` @type ^`io.reactivex.a0` := v1 @kind object;
  #L28867e.  v0.`io.reactivex.internal.operators.single.a.c` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L288682.  return @kind void;
}
procedure `void` `m`(`io.reactivex.internal.operators.single.a` v2 @kind this, `io.reactivex.z` v3 @kind object) @signature `Lio/reactivex/internal/operators/single/a;.m:(Lio/reactivex/z;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L288694.  v0:= v2.`io.reactivex.internal.operators.single.a.b` @type ^`io.reactivex.a0` @kind object;
  #L288698.  v1:= new `io.reactivex.internal.operators.single.a$a`;
  #L28869c.  call `<init>`(v1, v2, v3) @signature `Lio/reactivex/internal/operators/single/a$a;.<init>:(Lio/reactivex/internal/operators/single/a;Lio/reactivex/z;)V` @kind direct;
  #L2886a2.  call `b`(v0, v1) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L2886a8.  return @kind void;
}
