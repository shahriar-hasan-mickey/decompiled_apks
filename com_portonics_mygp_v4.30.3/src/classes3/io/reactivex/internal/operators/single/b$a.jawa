record `io.reactivex.internal.operators.single.b$a` @kind class @AccessFlag FINAL extends `io.reactivex.z` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.single.b$a.b` @AccessFlag FINAL;
  `io.reactivex.internal.operators.single.b` `io.reactivex.internal.operators.single.b$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.b$a` v0 @kind this, `io.reactivex.internal.operators.single.b` v1 @kind object, `io.reactivex.z` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/b$a;.<init>:(Lio/reactivex/internal/operators/single/b;Lio/reactivex/z;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2886bc.  v0.`io.reactivex.internal.operators.single.b$a.c` @type ^`io.reactivex.internal.operators.single.b` := v1 @kind object;
  #L2886c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2886c6.  v0.`io.reactivex.internal.operators.single.b$a.b` @type ^`io.reactivex.z` := v2 @kind object;
  #L2886ca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.single.b$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/b$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2886dc.  v0:= v1.`io.reactivex.internal.operators.single.b$a.b` @type ^`io.reactivex.z` @kind object;
  #L2886e0.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2886e6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.single.b$a` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/b$a;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2886f8.  v0:= v1.`io.reactivex.internal.operators.single.b$a.b` @type ^`io.reactivex.z` @kind object;
  #L2886fc.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L288702.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.single.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/b$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L288714.  v0:= v1.`io.reactivex.internal.operators.single.b$a.c` @type ^`io.reactivex.internal.operators.single.b` @kind object;
  #L288718.  v0:= v0.`io.reactivex.internal.operators.single.b.c` @type ^`io.reactivex.d0.g` @kind object;
  #L28871c.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L288722.  v0:= v1.`io.reactivex.internal.operators.single.b$a.b` @type ^`io.reactivex.z` @kind object;
  #L288726.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L28872c.  return @kind void;
  #L28872e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L288730.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L288736.  v0:= v1.`io.reactivex.internal.operators.single.b$a.b` @type ^`io.reactivex.z` @kind object;
  #L28873a.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L288740.  return @kind void;
  catch `java.lang.Throwable` @[L288714..L288722] goto L28872e;
}
