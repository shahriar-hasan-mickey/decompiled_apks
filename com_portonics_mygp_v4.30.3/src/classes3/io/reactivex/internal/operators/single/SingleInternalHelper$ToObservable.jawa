record `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.d0.k` @kind interface {
}
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L289528.  v0:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`;
  #L28952c.  v1:= "INSTANCE" @kind object;
  #L289530.  v2:= 0I;
  #L289532.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L289538.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.INSTANCE` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` := v0 @kind object;
  #L28953c.  v1:= 1I;
  #L28953e.  v1:= new `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[v1];
  #L289542.  v1[v2]:= v0 @kind object;
  #L289546.  `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] := v1 @kind object;
  #L28954a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28955c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L289562.  return @kind void;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2894c0.  v0:= constclass @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` @kind object;
  #L2894c4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2894ca.  v1:= temp @kind object;
  #L2894cc.  v1:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`) v1 @kind object;
  #L2894d0.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] `values`() @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.values:()[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2894e4.  v0:= `@@io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable.$VALUES` @type ^`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[] @kind object;
  #L2894e8.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2894ee.  v0:= temp @kind object;
  #L2894f0.  v0:= (`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable`[]) v0 @kind object;
  #L2894f4.  return v0 @kind object;
}
procedure `io.reactivex.n` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v1 @kind this, `io.reactivex.a0` v2 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Lio/reactivex/a0;)Lio/reactivex/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2894a4.  v0:= new `io.reactivex.internal.operators.single.SingleToObservable`;
  #L2894a8.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/single/SingleToObservable;.<init>:(Lio/reactivex/a0;)V` @kind direct;
  #L2894ae.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L289508.  v1:= (`io.reactivex.a0`) v1 @kind object;
  #L28950c.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/operators/single/SingleInternalHelper$ToObservable;.apply:(Lio/reactivex/a0;)Lio/reactivex/n;` @kind virtual;
  #L289512.  v1:= temp @kind object;
  #L289514.  return v1 @kind object;
}
