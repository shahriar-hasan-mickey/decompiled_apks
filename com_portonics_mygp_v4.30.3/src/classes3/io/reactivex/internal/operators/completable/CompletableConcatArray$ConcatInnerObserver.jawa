record `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.b` @kind interface {
  `io.reactivex.b` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.downstream` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @AccessFlag ;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @AccessFlag FINAL;
  `io.reactivex.c`[] `io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v0 @kind this, `io.reactivex.b` v1 @kind object, `io.reactivex.c`[] v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.<init>:(Lio/reactivex/b;[Lio/reactivex/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24b20c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L24b212.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.downstream` @type ^`io.reactivex.b` := v1 @kind object;
  #L24b216.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @type ^`io.reactivex.c`[] := v2 @kind object;
  #L24b21a.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L24b21e.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L24b224.  v0.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L24b228.  return @kind void;
}
procedure `void` `next`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.next:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L24b23c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L24b240.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L24b246.  v0:= temp;
  #L24b248.  if v0 == 0 then goto L24b24e;
  #L24b24c.  return @kind void;
  #L24b24e.  call temp:= `getAndIncrement`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L24b254.  v0:= temp;
  #L24b256.  if v0 == 0 then goto L24b25c;
  #L24b25a.  return @kind void;
  #L24b25c.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sources` @type ^`io.reactivex.c`[] @kind object;
  #L24b260.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L24b264.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.isDisposed:()Z` @kind virtual;
  #L24b26a.  v1:= temp;
  #L24b26c.  if v1 == 0 then goto L24b272;
  #L24b270.  return @kind void;
  #L24b272.  v1:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @type ^`int`;
  #L24b276.  v2:= v1 + 1;
  #L24b27a.  v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.index` @type ^`int` := v2;
  #L24b27e.  v2:= length @variable v0;
  #L24b280.  if v1 != v2 then goto L24b290;
  #L24b284.  v0:= v3.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24b288.  call `onComplete`(v0) @signature `Lio/reactivex/b;.onComplete:()V` @kind interface;
  #L24b28e.  return @kind void;
  #L24b290.  v1:= v0[v1] @kind object;
  #L24b294.  call `b`(v1, v3) @signature `Lio/reactivex/c;.b:(Lio/reactivex/b;)V` @kind interface;
  #L24b29a.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L24b2a0.  v1:= temp;
  #L24b2a2.  if v1 != 0 then goto L24b260;
  #L24b2a6.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L24b2b8.  call `next`(v0) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.next:()V` @kind virtual;
  #L24b2be.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b2d0.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24b2d4.  call `onError`(v0, v2) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24b2da.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableConcatArray$ConcatInnerObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b2ec.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.sd` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L24b2f0.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L24b2f6.  return @kind void;
}
