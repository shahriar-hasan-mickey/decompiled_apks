record `io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.b` `io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.onFinally` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v0 @kind this, `io.reactivex.b` v1 @kind object, `io.reactivex.d0.a` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.<init>:(Lio/reactivex/b;Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24b788.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L24b78e.  v0.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.b` := v1 @kind object;
  #L24b792.  v0.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.d0.a` := v2 @kind object;
  #L24b796.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b7a8.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L24b7ac.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L24b7b2.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L24b7b8.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b768.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L24b76c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L24b772.  v0:= temp;
  #L24b774.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b7cc.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24b7d0.  call `onComplete`(v0) @signature `Lio/reactivex/b;.onComplete:()V` @kind interface;
  #L24b7d6.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L24b7dc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b7f0.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24b7f4.  call `onError`(v0, v2) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24b7fa.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L24b800.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24b814.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L24b818.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L24b81e.  v0:= temp;
  #L24b820.  if v0 == 0 then goto L24b832;
  #L24b824.  v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L24b828.  v2:= v1.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24b82c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/b;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L24b832.  return @kind void;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableDoFinally$DoFinallyObserver;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L24b844.  v0:= 0I;
  #L24b846.  v1:= 1I;
  #L24b848.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L24b84e.  v0:= temp;
  #L24b850.  if v0 == 0 then goto L24b86e;
  #L24b854.  v0:= v2.`io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.d0.a` @kind object;
  #L24b858.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24b85e.  goto L24b86e;
  #L24b860.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24b862.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24b868.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L24b86e.  return @kind void;
  catch `java.lang.Throwable` @[L24b854..L24b85e] goto L24b860;
}
