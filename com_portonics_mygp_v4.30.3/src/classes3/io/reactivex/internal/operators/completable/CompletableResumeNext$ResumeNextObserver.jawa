record `io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.b` `io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.errorMapper` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.once` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v0 @kind this, `io.reactivex.b` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.<init>:(Lio/reactivex/b;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24c448.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L24c44e.  v0.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.downstream` @type ^`io.reactivex.b` := v1 @kind object;
  #L24c452.  v0.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.errorMapper` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L24c456.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L24c468.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L24c46e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c420.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L24c426.  v0:= temp @kind object;
  #L24c428.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L24c42c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/b;)Z` @kind static;
  #L24c432.  v0:= temp;
  #L24c434.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c480.  v0:= v1.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24c484.  call `onComplete`(v0) @signature `Lio/reactivex/b;.onComplete:()V` @kind interface;
  #L24c48a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24c49c.  v0:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.once` @type ^`boolean` @kind boolean;
  #L24c4a0.  if v0 == 0 then goto L24c4b0;
  #L24c4a4.  v0:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24c4a8.  call `onError`(v0, v7) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24c4ae.  return @kind void;
  #L24c4b0.  v0:= 1I;
  #L24c4b2.  v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.once` @type ^`boolean` := v0 @kind boolean;
  #L24c4b6.  v1:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.errorMapper` @type ^`io.reactivex.d0.k` @kind object;
  #L24c4ba.  call temp:= `apply`(v1, v7) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24c4c0.  v1:= temp @kind object;
  #L24c4c2.  v2:= "The errorMapper returned a null CompletableSource" @kind object;
  #L24c4c6.  call temp:= `e`(v1, v2) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24c4cc.  v1:= temp @kind object;
  #L24c4ce.  v1:= (`io.reactivex.c`) v1 @kind object;
  #L24c4d2.  call `b`(v1, v6) @signature `Lio/reactivex/c;.b:(Lio/reactivex/b;)V` @kind interface;
  #L24c4d8.  return @kind void;
  #L24c4da.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c4dc.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c4e2.  v2:= v6.`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver.downstream` @type ^`io.reactivex.b` @kind object;
  #L24c4e6.  v3:= new `io.reactivex.exceptions.CompositeException`;
  #L24c4ea.  v4:= 2I;
  #L24c4ec.  v4:= new `java.lang.Throwable`[v4];
  #L24c4f0.  v5:= 0I;
  #L24c4f2.  v4[v5]:= v7 @kind object;
  #L24c4f6.  v4[v0]:= v1 @kind object;
  #L24c4fa.  call `<init>`(v3, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L24c500.  call `onError`(v2, v3) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24c506.  return @kind void;
  catch `java.lang.Throwable` @[L24c4b6..L24c4d2] goto L24c4da;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/CompletableResumeNext$ResumeNextObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L24c524.  call temp:= `replace`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L24c52a.  return @kind void;
}
