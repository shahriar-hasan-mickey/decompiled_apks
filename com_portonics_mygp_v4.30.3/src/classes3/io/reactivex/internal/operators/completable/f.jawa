record `io.reactivex.internal.operators.completable.f` @kind class @AccessFlag FINAL extends `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.b` `io.reactivex.internal.operators.completable.f.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.completable.f.c` @AccessFlag ;
  `io.reactivex.internal.operators.completable.g` `io.reactivex.internal.operators.completable.f.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.f` v0 @kind this, `io.reactivex.internal.operators.completable.g` v1 @kind object, `io.reactivex.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/f;.<init>:(Lio/reactivex/internal/operators/completable/g;Lio/reactivex/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24c1c0.  v0.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` := v1 @kind object;
  #L24c1c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c1ca.  v0.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` := v2 @kind object;
  #L24c1ce.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.completable.f` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/f;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L24c228.  v0:= v1.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c22c.  v0:= v0.`io.reactivex.internal.operators.completable.g.g` @type ^`io.reactivex.d0.a` @kind object;
  #L24c230.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24c236.  goto L24c246;
  #L24c238.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c23a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c240.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L24c246.  return @kind void;
  catch `java.lang.Throwable` @[L24c228..L24c236] goto L24c238;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.completable.f` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/f;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c1e0.  v0:= v1.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c1e4.  v0:= v0.`io.reactivex.internal.operators.completable.g.h` @type ^`io.reactivex.d0.a` @kind object;
  #L24c1e8.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24c1ee.  goto L24c1fe;
  #L24c1f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c1f2.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c1f8.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L24c1fe.  v0:= v1.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L24c202.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L24c208.  return @kind void;
  catch `java.lang.Throwable` @[L24c1e0..L24c1ee] goto L24c1f0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.completable.f` v1 @kind this) @signature `Lio/reactivex/internal/operators/completable/f;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c1a0.  v0:= v1.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L24c1a4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L24c1aa.  v0:= temp;
  #L24c1ac.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.completable.f` v2 @kind this) @signature `Lio/reactivex/internal/operators/completable/f;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24c264.  v0:= v2.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L24c268.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L24c26c.  if v0 != v1 then goto L24c272;
  #L24c270.  return @kind void;
  #L24c272.  v0:= v2.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c276.  v0:= v0.`io.reactivex.internal.operators.completable.g.e` @type ^`io.reactivex.d0.a` @kind object;
  #L24c27a.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24c280.  v0:= v2.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c284.  v0:= v0.`io.reactivex.internal.operators.completable.g.f` @type ^`io.reactivex.d0.a` @kind object;
  #L24c288.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24c28e.  v0:= v2.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` @kind object;
  #L24c292.  call `onComplete`(v0) @signature `Lio/reactivex/b;.onComplete:()V` @kind interface;
  #L24c298.  call `a`(v2) @signature `Lio/reactivex/internal/operators/completable/f;.a:()V` @kind virtual;
  #L24c29e.  return @kind void;
  #L24c2a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c2a2.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c2a8.  v1:= v2.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` @kind object;
  #L24c2ac.  call `onError`(v1, v0) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24c2b2.  return @kind void;
  catch `java.lang.Throwable` @[L24c272..L24c28e] goto L24c2a0;
}
procedure `void` `onError`(`io.reactivex.internal.operators.completable.f` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/completable/f;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24c2d0.  v0:= v4.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L24c2d4.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L24c2d8.  if v0 != v1 then goto L24c2e4;
  #L24c2dc.  call `t`(v5) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L24c2e2.  return @kind void;
  #L24c2e4.  v0:= v4.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c2e8.  v0:= v0.`io.reactivex.internal.operators.completable.g.d` @type ^`io.reactivex.d0.g` @kind object;
  #L24c2ec.  call `accept`(v0, v5) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L24c2f2.  v0:= v4.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c2f6.  v0:= v0.`io.reactivex.internal.operators.completable.g.f` @type ^`io.reactivex.d0.a` @kind object;
  #L24c2fa.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L24c300.  goto L24c328;
  #L24c302.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c304.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c30a.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L24c30e.  v2:= 2I;
  #L24c310.  v2:= new `java.lang.Throwable`[v2];
  #L24c314.  v3:= 0I;
  #L24c316.  v2[v3]:= v5 @kind object;
  #L24c31a.  v5:= 1I;
  #L24c31c.  v2[v5]:= v0 @kind object;
  #L24c320.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L24c326.  v5:= v1 @kind object;
  #L24c328.  v0:= v4.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` @kind object;
  #L24c32c.  call `onError`(v0, v5) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L24c332.  call `a`(v4) @signature `Lio/reactivex/internal/operators/completable/f;.a:()V` @kind virtual;
  #L24c338.  return @kind void;
  catch `java.lang.Throwable` @[L24c2e4..L24c300] goto L24c302;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.completable.f` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/completable/f;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c358.  v0:= v1.`io.reactivex.internal.operators.completable.f.d` @type ^`io.reactivex.internal.operators.completable.g` @kind object;
  #L24c35c.  v0:= v0.`io.reactivex.internal.operators.completable.g.c` @type ^`io.reactivex.d0.g` @kind object;
  #L24c360.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L24c366.  v0:= v1.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L24c36a.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L24c370.  v0:= temp;
  #L24c372.  if v0 == 0 then goto L24c384;
  #L24c376.  v1.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L24c37a.  v2:= v1.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` @kind object;
  #L24c37e.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/b;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L24c384.  return @kind void;
  #L24c386.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24c388.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24c38e.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L24c394.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L24c398.  v1.`io.reactivex.internal.operators.completable.f.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L24c39c.  v2:= v1.`io.reactivex.internal.operators.completable.f.b` @type ^`io.reactivex.b` @kind object;
  #L24c3a0.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/b;)V` @kind static;
  #L24c3a6.  return @kind void;
  catch `java.lang.Throwable` @[L24c358..L24c366] goto L24c386;
}
