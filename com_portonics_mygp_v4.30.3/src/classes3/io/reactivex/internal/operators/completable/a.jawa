record `io.reactivex.internal.operators.completable.a` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.a` @kind class {
}
global `io.reactivex.a` `@@io.reactivex.internal.operators.completable.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/completable/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L24b88c.  v0:= new `io.reactivex.internal.operators.completable.a`;
  #L24b890.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/completable/a;.<init>:()V` @kind direct;
  #L24b896.  `@@io.reactivex.internal.operators.completable.a.b` @type ^`io.reactivex.a` := v0 @kind object;
  #L24b89a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.completable.a` v0 @kind this) @signature `Lio/reactivex/internal/operators/completable/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24b8ac.  call `<init>`(v0) @signature `Lio/reactivex/a;.<init>:()V` @kind direct;
  #L24b8b2.  return @kind void;
}
procedure `void` `n`(`io.reactivex.internal.operators.completable.a` v0 @kind this, `io.reactivex.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/completable/a;.n:(Lio/reactivex/b;)V` @AccessFlag PUBLIC {
    temp;

  #L24b8c4.  call `complete`(v1) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/b;)V` @kind static;
  #L24b8ca.  return @kind void;
}
