record `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.error` @AccessFlag FINAL;
  `io.reactivex.d0.c` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.reducer` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.remaining` @AccessFlag FINAL;
  `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber`[] `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.subscribers` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v2 @kind this, `n.b.c` v3 @kind object, `int` v4 , `io.reactivex.d0.c` v5 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.<init>:(Ln/b/c;ILio/reactivex/d0/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L287110.  call `<init>`(v2, v3) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ln/b/c;)V` @kind direct;
  #L287116.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L28711a.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L287120.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L287124.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L287128.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L28712e.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.remaining` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L287132.  v3:= new `java.util.concurrent.atomic.AtomicReference`;
  #L287136.  call `<init>`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L28713c.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.error` @type ^`java.util.concurrent.atomic.AtomicReference` := v3 @kind object;
  #L287140.  v3:= new `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber`[v4];
  #L287144.  v0:= 0I;
  #L287146.  if v0 >= v4 then goto L28715e;
  #L28714a.  v1:= new `io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber`;
  #L28714e.  call `<init>`(v1, v2, v5) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.<init>:(Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;Lio/reactivex/d0/c;)V` @kind direct;
  #L287154.  v3[v0]:= v1 @kind object;
  #L287158.  v0:= v0 + 1;
  #L28715c.  goto L287146;
  #L28715e.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.subscribers` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber`[] := v3 @kind object;
  #L287162.  v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.reducer` @type ^`io.reactivex.d0.c` := v5 @kind object;
  #L287166.  v3:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.remaining` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L28716a.  call `lazySet`(v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L287170.  return @kind void;
}
procedure `io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair` `addValue`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.addValue:(Ljava/lang/Object;)Lio/reactivex/internal/operators/parallel/ParallelReduceFull$SlotPair;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L28708c.  v0:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L287090.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L287096.  v0:= temp @kind object;
  #L287098.  v0:= (`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair`) v0 @kind object;
  #L28709c.  v1:= 0I;
  #L28709e.  if v0 != 0 then goto L2870be;
  #L2870a2.  v0:= new `io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair`;
  #L2870a6.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$SlotPair;.<init>:()V` @kind direct;
  #L2870ac.  v2:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2870b0.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2870b6.  v2:= temp;
  #L2870b8.  if v2 != 0 then goto L2870be;
  #L2870bc.  goto L28708c;
  #L2870be.  call temp:= `tryAcquireSlot`(v0) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$SlotPair;.tryAcquireSlot:()I` @kind virtual;
  #L2870c4.  v2:= temp;
  #L2870c6.  if v2 >= 0 then goto L2870d6;
  #L2870ca.  v2:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2870ce.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2870d4.  goto L28708c;
  #L2870d6.  if v2 != 0 then goto L2870e0;
  #L2870da.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair.first` @type ^`java.lang.Object` := v4 @kind object;
  #L2870de.  goto L2870e4;
  #L2870e0.  v0.`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair.second` @type ^`java.lang.Object` := v4 @kind object;
  #L2870e4.  call temp:= `releaseSlot`(v0) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$SlotPair;.releaseSlot:()Z` @kind virtual;
  #L2870ea.  v4:= temp;
  #L2870ec.  if v4 == 0 then goto L2870fc;
  #L2870f0.  v4:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2870f4.  call temp:= `compareAndSet`(v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2870fa.  return v0 @kind object;
  #L2870fc.  return v1 @kind object;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v4 @kind this) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L287184.  v0:= v4.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.subscribers` @type ^`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber`[] @kind object;
  #L287188.  v1:= length @variable v0;
  #L28718a.  v2:= 0I;
  #L28718c.  if v2 >= v1 then goto L2871a0;
  #L287190.  v3:= v0[v2] @kind object;
  #L287194.  call `cancel`(v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullInnerSubscriber;.cancel:()V` @kind virtual;
  #L28719a.  v2:= v2 + 1;
  #L28719e.  goto L28718c;
  #L2871a0.  return @kind void;
}
procedure `void` `innerComplete`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.innerComplete:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2871b4.  if v3 == 0 then goto L2871f6;
  #L2871b8.  call temp:= `addValue`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.addValue:(Ljava/lang/Object;)Lio/reactivex/internal/operators/parallel/ParallelReduceFull$SlotPair;` @kind virtual;
  #L2871be.  v3:= temp @kind object;
  #L2871c0.  if v3 == 0 then goto L2871f6;
  #L2871c4.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.reducer` @type ^`io.reactivex.d0.c` @kind object;
  #L2871c8.  v1:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair.first` @type ^`java.lang.Object` @kind object;
  #L2871cc.  v3:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair.second` @type ^`java.lang.Object` @kind object;
  #L2871d0.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/d0/c;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2871d6.  v3:= temp @kind object;
  #L2871d8.  v0:= "The reducer returned a null value" @kind object;
  #L2871dc.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2871e2.  v3:= temp @kind object;
  #L2871e4.  goto L2871b8;
  #L2871e6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2871e8.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2871ee.  call `innerError`(v2, v3) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2871f4.  return @kind void;
  #L2871f6.  v3:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.remaining` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2871fa.  call temp:= `decrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L287200.  v3:= temp;
  #L287202.  if v3 != 0 then goto L28723c;
  #L287206.  v3:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28720a.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L287210.  v3:= temp @kind object;
  #L287212.  v3:= (`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair`) v3 @kind object;
  #L287216.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.current` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L28721a.  v1:= 0I;
  #L28721c.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L287222.  if v3 == 0 then goto L287232;
  #L287226.  v3:= v3.`io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair.first` @type ^`java.lang.Object` @kind object;
  #L28722a.  call `complete`(v2, v3) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L287230.  goto L28723c;
  #L287232.  v3:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L287236.  call `onComplete`(v3) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L28723c.  return @kind void;
  catch `java.lang.Throwable` @[L2871c4..L2871e4] goto L2871e6;
}
procedure `void` `innerError`(`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.innerError:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L28725c.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.error` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L287260.  v1:= 0I;
  #L287262.  call temp:= `compareAndSet`(v0, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L287268.  v0:= temp;
  #L28726a.  if v0 == 0 then goto L287280;
  #L28726e.  call `cancel`(v2) @signature `Lio/reactivex/internal/operators/parallel/ParallelReduceFull$ParallelReduceFullMainSubscriber;.cancel:()V` @kind virtual;
  #L287274.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L287278.  call `onError`(v0, v3) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28727e.  goto L287296;
  #L287280.  v0:= v2.`io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber.error` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L287284.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28728a.  v0:= temp @kind object;
  #L28728c.  if v3 == v0 then goto L287296;
  #L287290.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L287296.  return @kind void;
}
