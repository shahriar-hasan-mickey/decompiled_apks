record `io.reactivex.internal.operators.observable.g5` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.j` @kind class, `io.reactivex.disposables.b` @kind interface, `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.g5.h` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.g5.i` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.g5.j` @AccessFlag FINAL;
  `io.reactivex.x$a` `io.reactivex.internal.operators.observable.g5.k` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.g5.l` @AccessFlag FINAL;
  `java.util.List` `io.reactivex.internal.operators.observable.g5.m` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.g5.n` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.g5.o` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.g5` v1 @kind this, `io.reactivex.t` v2 @kind object, `long` v3 , `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object, `io.reactivex.x$a` v8 @kind object, `int` v9 ) @signature `Lio/reactivex/internal/operators/observable/g5;.<init>:(Lio/reactivex/t;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/x$a;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2846fc.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L284700.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L284706.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/j;.<init>:(Lio/reactivex/t;Lio/reactivex/e0/a/i;)V` @kind direct;
  #L28470c.  v1.`io.reactivex.internal.operators.observable.g5.h` @type ^`long` := v3 @kind wide;
  #L284710.  v1.`io.reactivex.internal.operators.observable.g5.i` @type ^`long` := v5 @kind wide;
  #L284714.  v1.`io.reactivex.internal.operators.observable.g5.j` @type ^`java.util.concurrent.TimeUnit` := v7 @kind object;
  #L284718.  v1.`io.reactivex.internal.operators.observable.g5.k` @type ^`io.reactivex.x$a` := v8 @kind object;
  #L28471c.  v1.`io.reactivex.internal.operators.observable.g5.l` @type ^`int` := v9;
  #L284720.  v2:= new `java.util.LinkedList`;
  #L284724.  call `<init>`(v2) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L28472a.  v1.`io.reactivex.internal.operators.observable.g5.m` @type ^`java.util.List` := v2 @kind object;
  #L28472e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.g5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28477c.  v0:= 1I;
  #L28477e.  v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v0 @kind boolean;
  #L284782.  return @kind void;
}
procedure `void` `i`(`io.reactivex.internal.operators.observable.g5` v3 @kind this, `io.reactivex.subjects.UnicastSubject` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/g5;.i:(Lio/reactivex/subjects/UnicastSubject;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L284740.  v0:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284744.  v1:= new `io.reactivex.internal.operators.observable.h5`;
  #L284748.  v2:= 0I;
  #L28474a.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/h5;.<init>:(Lio/reactivex/subjects/UnicastSubject;Z)V` @kind direct;
  #L284750.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L284756.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L28475c.  v4:= temp;
  #L28475e.  if v4 == 0 then goto L284768;
  #L284762.  call `k`(v3) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @kind virtual;
  #L284768.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.g5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2846e4.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L2846e8.  return v0;
}
procedure `void` `j`(`io.reactivex.internal.operators.observable.g5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.j:()V` @AccessFlag  {
    temp;
    v0;

  #L284794.  v0:= v1.`io.reactivex.internal.operators.observable.g5.k` @type ^`io.reactivex.x$a` @kind object;
  #L284798.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L28479e.  return @kind void;
}
procedure `void` `k`(`io.reactivex.internal.operators.observable.g5` v10 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2847b0.  v0:= v10.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L2847b4.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue`) v0 @kind object;
  #L2847b8.  v1:= v10.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L2847bc.  v2:= v10.`io.reactivex.internal.operators.observable.g5.m` @type ^`java.util.List` @kind object;
  #L2847c0.  v3:= 1I;
  #L2847c2.  v4:= 1I;
  #L2847c4.  v5:= v10.`io.reactivex.internal.operators.observable.g5.o` @type ^`boolean` @kind boolean;
  #L2847c8.  if v5 == 0 then goto L2847ea;
  #L2847cc.  v1:= v10.`io.reactivex.internal.operators.observable.g5.n` @type ^`io.reactivex.disposables.b` @kind object;
  #L2847d0.  call `dispose`(v1) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2847d6.  call `j`(v10) @signature `Lio/reactivex/internal/operators/observable/g5;.j:()V` @kind virtual;
  #L2847dc.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L2847e2.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2847e8.  return @kind void;
  #L2847ea.  v5:= v10.`io.reactivex.internal.observers.j.f` @type ^`boolean` @kind boolean;
  #L2847ee.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L2847f4.  v6:= temp @kind object;
  #L2847f6.  if v6 != 0 then goto L2847fe;
  #L2847fa.  v7:= 1I;
  #L2847fc.  goto L284800;
  #L2847fe.  v7:= 0I;
  #L284800.  v8:= instanceof @variable v6 @type ^`io.reactivex.internal.operators.observable.h5` @kind boolean;
  #L284804.  if v5 == 0 then goto L28487c;
  #L284808.  if v7 != 0 then goto L284810;
  #L28480c.  if v8 == 0 then goto L28487c;
  #L284810.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L284816.  v0:= v10.`io.reactivex.internal.observers.j.g` @type ^`java.lang.Throwable` @kind object;
  #L28481a.  if v0 == 0 then goto L284846;
  #L28481e.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L284824.  v1:= temp @kind object;
  #L284826.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28482c.  v3:= temp;
  #L28482e.  if v3 == 0 then goto L28486e;
  #L284832.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L284838.  v3:= temp @kind object;
  #L28483a.  v3:= (`io.reactivex.subjects.UnicastSubject`) v3 @kind object;
  #L28483e.  call `onError`(v3, v0) @signature `Lio/reactivex/subjects/UnicastSubject;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L284844.  goto L284826;
  #L284846.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28484c.  v0:= temp @kind object;
  #L28484e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L284854.  v1:= temp;
  #L284856.  if v1 == 0 then goto L28486e;
  #L28485a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L284860.  v1:= temp @kind object;
  #L284862.  v1:= (`io.reactivex.subjects.UnicastSubject`) v1 @kind object;
  #L284866.  call `onComplete`(v1) @signature `Lio/reactivex/subjects/UnicastSubject;.onComplete:()V` @kind virtual;
  #L28486c.  goto L28484e;
  #L28486e.  call `j`(v10) @signature `Lio/reactivex/internal/operators/observable/g5;.j:()V` @kind virtual;
  #L284874.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L28487a.  return @kind void;
  #L28487c.  if v7 == 0 then goto L284890;
  #L284880.  v4:= -v4 @kind int;
  #L284882.  call temp:= `d`(v10, v4) @signature `Lio/reactivex/internal/observers/j;.d:(I)I` @kind virtual;
  #L284888.  v4:= temp;
  #L28488a.  if v4 != 0 then goto L2847c4;
  #L28488e.  return @kind void;
  #L284890.  if v8 == 0 then goto L284912;
  #L284894.  v6:= (`io.reactivex.internal.operators.observable.h5`) v6 @kind object;
  #L284898.  v5:= v6.`io.reactivex.internal.operators.observable.h5.b` @type ^`boolean` @kind boolean;
  #L28489c.  if v5 == 0 then goto L2848e2;
  #L2848a0.  v5:= v10.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L2848a4.  if v5 == 0 then goto L2848aa;
  #L2848a8.  goto L2847c4;
  #L2848aa.  v5:= v10.`io.reactivex.internal.operators.observable.g5.l` @type ^`int`;
  #L2848ae.  call temp:= `y`(v5) @signature `Lio/reactivex/subjects/UnicastSubject;.y:(I)Lio/reactivex/subjects/UnicastSubject;` @kind static;
  #L2848b4.  v5:= temp @kind object;
  #L2848b6.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2848bc.  call `onNext`(v1, v5) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2848c2.  v6:= v10.`io.reactivex.internal.operators.observable.g5.k` @type ^`io.reactivex.x$a` @kind object;
  #L2848c6.  v7:= new `io.reactivex.internal.operators.observable.g5$a`;
  #L2848ca.  call `<init>`(v7, v10, v5) @signature `Lio/reactivex/internal/operators/observable/g5$a;.<init>:(Lio/reactivex/internal/operators/observable/g5;Lio/reactivex/subjects/UnicastSubject;)V` @kind direct;
  #L2848d0.  v8:= v10.`io.reactivex.internal.operators.observable.g5.h` @type ^`long` @kind wide;
  #L2848d4.  v5:= v10.`io.reactivex.internal.operators.observable.g5.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2848d8.  call temp:= `c`(v6, v7, v8, v5) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L2848de.  goto L2847c4;
  #L2848e2.  v5:= v6.`io.reactivex.internal.operators.observable.h5.a` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L2848e6.  call temp:= `remove`(v2, v5) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2848ec.  v5:= v6.`io.reactivex.internal.operators.observable.h5.a` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L2848f0.  call `onComplete`(v5) @signature `Lio/reactivex/subjects/UnicastSubject;.onComplete:()V` @kind virtual;
  #L2848f6.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2848fc.  v5:= temp;
  #L2848fe.  if v5 == 0 then goto L2847c4;
  #L284902.  v5:= v10.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284906.  if v5 == 0 then goto L2847c4;
  #L28490a.  v10.`io.reactivex.internal.operators.observable.g5.o` @type ^`boolean` := v3 @kind boolean;
  #L28490e.  goto L2847c4;
  #L284912.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L284918.  v5:= temp @kind object;
  #L28491a.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L284920.  v7:= temp;
  #L284922.  if v7 == 0 then goto L2847c4;
  #L284926.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28492c.  v7:= temp @kind object;
  #L28492e.  v7:= (`io.reactivex.subjects.UnicastSubject`) v7 @kind object;
  #L284932.  call `onNext`(v7, v6) @signature `Lio/reactivex/subjects/UnicastSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L284938.  goto L28491a;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.g5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28494c.  v0:= 1I;
  #L28494e.  v1.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L284952.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284958.  v0:= temp;
  #L28495a.  if v0 == 0 then goto L284964;
  #L28495e.  call `k`(v1) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @kind virtual;
  #L284964.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284968.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L28496e.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/g5;.j:()V` @kind virtual;
  #L284974.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.g5` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/g5;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284988.  v1.`io.reactivex.internal.observers.j.g` @type ^`java.lang.Throwable` := v2 @kind object;
  #L28498c.  v0:= 1I;
  #L28498e.  v1.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L284992.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284998.  v0:= temp;
  #L28499a.  if v0 == 0 then goto L2849a4;
  #L28499e.  call `k`(v1) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @kind virtual;
  #L2849a4.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L2849a8.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2849ae.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/g5;.j:()V` @kind virtual;
  #L2849b4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.g5` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/g5;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2849c8.  call temp:= `f`(v2) @signature `Lio/reactivex/internal/observers/j;.f:()Z` @kind virtual;
  #L2849ce.  v0:= temp;
  #L2849d0.  if v0 == 0 then goto L284a10;
  #L2849d4.  v0:= v2.`io.reactivex.internal.operators.observable.g5.m` @type ^`java.util.List` @kind object;
  #L2849d8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2849de.  v0:= temp @kind object;
  #L2849e0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2849e6.  v1:= temp;
  #L2849e8.  if v1 == 0 then goto L284a00;
  #L2849ec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2849f2.  v1:= temp @kind object;
  #L2849f4.  v1:= (`io.reactivex.subjects.UnicastSubject`) v1 @kind object;
  #L2849f8.  call `onNext`(v1, v3) @signature `Lio/reactivex/subjects/UnicastSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L2849fe.  goto L2849e0;
  #L284a00.  v3:= -1I;
  #L284a02.  call temp:= `d`(v2, v3) @signature `Lio/reactivex/internal/observers/j;.d:(I)I` @kind virtual;
  #L284a08.  v3:= temp;
  #L284a0a.  if v3 != 0 then goto L284a28;
  #L284a0e.  return @kind void;
  #L284a10.  v0:= v2.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284a14.  call temp:= `offer`(v0, v3) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L284a1a.  call temp:= `e`(v2) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284a20.  v3:= temp;
  #L284a22.  if v3 != 0 then goto L284a28;
  #L284a26.  return @kind void;
  #L284a28.  call `k`(v2) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @kind virtual;
  #L284a2e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.g5` v11 @kind this, `io.reactivex.disposables.b` v12 @kind object) @signature `Lio/reactivex/internal/operators/observable/g5;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L284a40.  v0:= v11.`io.reactivex.internal.operators.observable.g5.n` @type ^`io.reactivex.disposables.b` @kind object;
  #L284a44.  call temp:= `validate`(v0, v12) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L284a4a.  v0:= temp;
  #L284a4c.  if v0 == 0 then goto L284aba;
  #L284a50.  v11.`io.reactivex.internal.operators.observable.g5.n` @type ^`io.reactivex.disposables.b` := v12 @kind object;
  #L284a54.  v12:= v11.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284a58.  call `onSubscribe`(v12, v11) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L284a5e.  v12:= v11.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284a62.  if v12 == 0 then goto L284a68;
  #L284a66.  return @kind void;
  #L284a68.  v12:= v11.`io.reactivex.internal.operators.observable.g5.l` @type ^`int`;
  #L284a6c.  call temp:= `y`(v12) @signature `Lio/reactivex/subjects/UnicastSubject;.y:(I)Lio/reactivex/subjects/UnicastSubject;` @kind static;
  #L284a72.  v12:= temp @kind object;
  #L284a74.  v0:= v11.`io.reactivex.internal.operators.observable.g5.m` @type ^`java.util.List` @kind object;
  #L284a78.  call temp:= `add`(v0, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L284a7e.  v0:= v11.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284a82.  call `onNext`(v0, v12) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L284a88.  v0:= v11.`io.reactivex.internal.operators.observable.g5.k` @type ^`io.reactivex.x$a` @kind object;
  #L284a8c.  v1:= new `io.reactivex.internal.operators.observable.g5$a`;
  #L284a90.  call `<init>`(v1, v11, v12) @signature `Lio/reactivex/internal/operators/observable/g5$a;.<init>:(Lio/reactivex/internal/operators/observable/g5;Lio/reactivex/subjects/UnicastSubject;)V` @kind direct;
  #L284a96.  v2:= v11.`io.reactivex.internal.operators.observable.g5.h` @type ^`long` @kind wide;
  #L284a9a.  v12:= v11.`io.reactivex.internal.operators.observable.g5.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L284a9e.  call temp:= `c`(v0, v1, v2, v12) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L284aa4.  v4:= v11.`io.reactivex.internal.operators.observable.g5.k` @type ^`io.reactivex.x$a` @kind object;
  #L284aa8.  v8:= v11.`io.reactivex.internal.operators.observable.g5.i` @type ^`long` @kind wide;
  #L284aac.  v10:= v11.`io.reactivex.internal.operators.observable.g5.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L284ab0.  v5:= v11 @kind object;
  #L284ab2.  v6:= v8 @kind wide;
  #L284ab4.  call temp:= `d`(v4, v5, v6, v8, v10) @signature `Lio/reactivex/x$a;.d:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L284aba.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.g5` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/g5;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L284acc.  v0:= v3.`io.reactivex.internal.operators.observable.g5.l` @type ^`int`;
  #L284ad0.  call temp:= `y`(v0) @signature `Lio/reactivex/subjects/UnicastSubject;.y:(I)Lio/reactivex/subjects/UnicastSubject;` @kind static;
  #L284ad6.  v0:= temp @kind object;
  #L284ad8.  v1:= new `io.reactivex.internal.operators.observable.h5`;
  #L284adc.  v2:= 1I;
  #L284ade.  call `<init>`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/observable/h5;.<init>:(Lio/reactivex/subjects/UnicastSubject;Z)V` @kind direct;
  #L284ae4.  v0:= v3.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284ae8.  if v0 != 0 then goto L284af6;
  #L284aec.  v0:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284af0.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L284af6.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284afc.  v0:= temp;
  #L284afe.  if v0 == 0 then goto L284b08;
  #L284b02.  call `k`(v3) @signature `Lio/reactivex/internal/operators/observable/g5;.k:()V` @kind virtual;
  #L284b08.  return @kind void;
}
