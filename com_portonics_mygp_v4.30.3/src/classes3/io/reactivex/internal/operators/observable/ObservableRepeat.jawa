record `io.reactivex.internal.operators.observable.ObservableRepeat` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableRepeat.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRepeat` v0 @kind this, `io.reactivex.n` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.<init>:(Lio/reactivex/n;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27bda8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27bdae.  v0.`io.reactivex.internal.operators.observable.ObservableRepeat.c` @type ^`long` := v2 @kind wide;
  #L27bdb2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableRepeat` v7 @kind this, `io.reactivex.t` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27bdc4.  v4:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L27bdc8.  call `<init>`(v4) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L27bdce.  call `onSubscribe`(v8, v4) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27bdd4.  v6:= new `io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver`;
  #L27bdd8.  v0:= v7.`io.reactivex.internal.operators.observable.ObservableRepeat.c` @type ^`long` @kind wide;
  #L27bddc.  v2:= 9223372036854775807L;
  #L27bde6.  v5:= lcmp(v0, v2);
  #L27bdea.  if v5 == 0 then goto L27bdf6;
  #L27bdee.  v2:= 1L;
  #L27bdf2.  v0:= v0 - v2 @kind long;
  #L27bdf4.  v2:= v0 @kind wide;
  #L27bdf6.  v5:= v7.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27bdfa.  v0:= v6 @kind object;
  #L27bdfc.  v1:= v8 @kind object;
  #L27bdfe.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat$RepeatObserver;.<init>:(Lio/reactivex/t;JLio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/r;)V` @kind direct;
  #L27be04.  call `subscribeNext`(v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeat$RepeatObserver;.subscribeNext:()V` @kind virtual;
  #L27be0a.  return @kind void;
}
