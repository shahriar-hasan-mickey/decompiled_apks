record `io.reactivex.internal.operators.observable.g0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.g0.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.g0.c` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.g0.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.g0` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/g0;.<init>:(Lio/reactivex/t;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L271d24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L271d2a.  v0.`io.reactivex.internal.operators.observable.g0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L271d2e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.g0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271d40.  v0:= v1.`io.reactivex.internal.operators.observable.g0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271d44.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L271d4a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.g0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/g0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271d04.  v0:= v1.`io.reactivex.internal.operators.observable.g0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271d08.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L271d0e.  v0:= temp;
  #L271d10.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.g0` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/g0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L271d5c.  v0:= v3.`io.reactivex.internal.operators.observable.g0.b` @type ^`io.reactivex.t` @kind object;
  #L271d60.  v1:= v3.`io.reactivex.internal.operators.observable.g0.d` @type ^`long` @kind wide;
  #L271d64.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L271d6a.  v1:= temp @kind object;
  #L271d6c.  call `onNext`(v0, v1) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L271d72.  v0:= v3.`io.reactivex.internal.operators.observable.g0.b` @type ^`io.reactivex.t` @kind object;
  #L271d76.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L271d7c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.g0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/g0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271d90.  v0:= v1.`io.reactivex.internal.operators.observable.g0.b` @type ^`io.reactivex.t` @kind object;
  #L271d94.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L271d9a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.g0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/g0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L271dac.  v0:= v4.`io.reactivex.internal.operators.observable.g0.d` @type ^`long` @kind wide;
  #L271db0.  v2:= 1L;
  #L271db4.  v0:= v0 + v2 @kind long;
  #L271db6.  v4.`io.reactivex.internal.operators.observable.g0.d` @type ^`long` := v0 @kind wide;
  #L271dba.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.g0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/g0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271dcc.  v0:= v1.`io.reactivex.internal.operators.observable.g0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271dd0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L271dd6.  v0:= temp;
  #L271dd8.  if v0 == 0 then goto L271dea;
  #L271ddc.  v1.`io.reactivex.internal.operators.observable.g0.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L271de0.  v2:= v1.`io.reactivex.internal.operators.observable.g0.b` @type ^`io.reactivex.t` @kind object;
  #L271de4.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L271dea.  return @kind void;
}
