record `io.reactivex.internal.operators.observable.m0` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.m0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.m0` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/m0;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L272a98.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L272a9e.  v0.`io.reactivex.internal.operators.observable.m0.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L272aa2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.m0` v3 @kind this, `io.reactivex.t` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/m0;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L272ab4.  v0:= v3.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L272ab8.  v1:= new `io.reactivex.internal.operators.observable.l0`;
  #L272abc.  v2:= new `io.reactivex.observers.d`;
  #L272ac0.  call `<init>`(v2, v4) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L272ac6.  v4:= v3.`io.reactivex.internal.operators.observable.m0.c` @type ^`io.reactivex.d0.k` @kind object;
  #L272aca.  call `<init>`(v1, v2, v4) @signature `Lio/reactivex/internal/operators/observable/l0;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;)V` @kind direct;
  #L272ad0.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L272ad6.  return @kind void;
}
