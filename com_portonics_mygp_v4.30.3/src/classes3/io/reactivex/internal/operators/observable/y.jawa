record `io.reactivex.internal.operators.observable.y` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.j` @kind class, `java.lang.Runnable` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.y.h` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.y.i` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.y.j` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.y.k` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.y.l` @AccessFlag FINAL;
  `io.reactivex.x$a` `io.reactivex.internal.operators.observable.y.m` @AccessFlag FINAL;
  `java.util.Collection` `io.reactivex.internal.operators.observable.y.n` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.y.o` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.y.p` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.y.q` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.y.r` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.y` v1 @kind this, `io.reactivex.t` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `int` v7 , `boolean` v8 , `io.reactivex.x$a` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;IZLio/reactivex/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L26f070.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L26f074.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L26f07a.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/j;.<init>:(Lio/reactivex/t;Lio/reactivex/e0/a/i;)V` @kind direct;
  #L26f080.  v1.`io.reactivex.internal.operators.observable.y.h` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L26f084.  v1.`io.reactivex.internal.operators.observable.y.i` @type ^`long` := v4 @kind wide;
  #L26f088.  v1.`io.reactivex.internal.operators.observable.y.j` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L26f08c.  v1.`io.reactivex.internal.operators.observable.y.k` @type ^`int` := v7;
  #L26f090.  v1.`io.reactivex.internal.operators.observable.y.l` @type ^`boolean` := v8 @kind boolean;
  #L26f094.  v1.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` := v9 @kind object;
  #L26f098.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.y` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.c:(Lio/reactivex/t;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L26f0ac.  v2:= (`java.util.Collection`) v2 @kind object;
  #L26f0b0.  call `i`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/y;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @kind virtual;
  #L26f0b6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.y` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/y;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f0e0.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26f0e4.  if v0 != 0 then goto L26f114;
  #L26f0e8.  v0:= 1I;
  #L26f0ea.  v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v0 @kind boolean;
  #L26f0ee.  v0:= v1.`io.reactivex.internal.operators.observable.y.p` @type ^`io.reactivex.disposables.b` @kind object;
  #L26f0f2.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f0f8.  v0:= v1.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f0fc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f102.  @monitorenter v1
  #L26f104.  v0:= 0I;
  #L26f106.  v1.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v0 @kind object;
  #L26f10a.  @monitorexit v1
  #L26f10c.  goto L26f114;
  #L26f10e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f110.  @monitorexit v1
  #L26f112.  throw v0;
  #L26f114.  return @kind void;
  catch `java.lang.Throwable` @[L26f106..L26f112] goto L26f10e;
}
procedure `void` `i`(`io.reactivex.internal.operators.observable.y` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L26f0c8.  call `onNext`(v1, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L26f0ce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.y` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/y;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f058.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26f05c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.y` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/y;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26f134.  v0:= v3.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f138.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f13e.  @monitorenter v3
  #L26f140.  v0:= v3.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` @kind object;
  #L26f144.  v1:= 0I;
  #L26f146.  v3.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v1 @kind object;
  #L26f14a.  @monitorexit v3
  #L26f14c.  v1:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26f150.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L26f156.  v0:= 1I;
  #L26f158.  v3.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L26f15c.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L26f162.  v0:= temp;
  #L26f164.  if v0 == 0 then goto L26f178;
  #L26f168.  v0:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26f16c.  v1:= v3.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f170.  v2:= 0I;
  #L26f172.  call `c`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/internal/util/k;.c:(Lio/reactivex/e0/a/i;Lio/reactivex/t;ZLio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)V` @kind static;
  #L26f178.  return @kind void;
  #L26f17a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f17c.  @monitorexit v3
  #L26f17e.  throw v0;
  catch `java.lang.Throwable` @[L26f140..L26f14c] goto L26f17a;
  catch `java.lang.Throwable` @[L26f17c..L26f17e] goto L26f17a;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.y` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f1a4.  @monitorenter v1
  #L26f1a6.  v0:= 0I;
  #L26f1a8.  v1.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v0 @kind object;
  #L26f1ac.  @monitorexit v1
  #L26f1ae.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f1b2.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26f1b8.  v2:= v1.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f1bc.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f1c2.  return @kind void;
  #L26f1c4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f1c6.  @monitorexit v1
  #L26f1c8.  throw v2;
  catch `java.lang.Throwable` @[L26f1a8..L26f1ae] goto L26f1c4;
  catch `java.lang.Throwable` @[L26f1c6..L26f1c8] goto L26f1c4;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.y` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26f1f0.  @monitorenter v7
  #L26f1f2.  v0:= v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` @kind object;
  #L26f1f6.  if v0 != 0 then goto L26f1fe;
  #L26f1fa.  @monitorexit v7
  #L26f1fc.  return @kind void;
  #L26f1fe.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26f204.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L26f20a.  v8:= temp;
  #L26f20c.  v1:= v7.`io.reactivex.internal.operators.observable.y.k` @type ^`int`;
  #L26f210.  if v8 >= v1 then goto L26f218;
  #L26f214.  @monitorexit v7
  #L26f216.  return @kind void;
  #L26f218.  v8:= 0I;
  #L26f21a.  v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v8 @kind object;
  #L26f21e.  v1:= v7.`io.reactivex.internal.operators.observable.y.q` @type ^`long` @kind wide;
  #L26f222.  v3:= 1L;
  #L26f226.  v1:= v1 + v3 @kind long;
  #L26f228.  v7.`io.reactivex.internal.operators.observable.y.q` @type ^`long` := v1 @kind wide;
  #L26f22c.  @monitorexit v7
  #L26f22e.  v8:= v7.`io.reactivex.internal.operators.observable.y.l` @type ^`boolean` @kind boolean;
  #L26f232.  if v8 == 0 then goto L26f240;
  #L26f236.  v8:= v7.`io.reactivex.internal.operators.observable.y.o` @type ^`io.reactivex.disposables.b` @kind object;
  #L26f23a.  call `dispose`(v8) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f240.  v8:= 0I;
  #L26f242.  call `h`(v7, v0, v8, v7) @signature `Lio/reactivex/internal/observers/j;.h:(Ljava/lang/Object;ZLio/reactivex/disposables/b;)V` @kind virtual;
  #L26f248.  v8:= v7.`io.reactivex.internal.operators.observable.y.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26f24c.  call temp:= `call`(v8) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26f252.  v8:= temp @kind object;
  #L26f254.  v0:= "The buffer supplied is null" @kind object;
  #L26f258.  call temp:= `e`(v8, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26f25e.  v8:= temp @kind object;
  #L26f260.  v8:= (`java.util.Collection`) v8 @kind object;
  #L26f264.  @monitorenter v7
  #L26f266.  v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v8 @kind object;
  #L26f26a.  v0:= v7.`io.reactivex.internal.operators.observable.y.r` @type ^`long` @kind wide;
  #L26f26e.  v0:= v0 + v3 @kind long;
  #L26f270.  v7.`io.reactivex.internal.operators.observable.y.r` @type ^`long` := v0 @kind wide;
  #L26f274.  @monitorexit v7
  #L26f276.  v8:= v7.`io.reactivex.internal.operators.observable.y.l` @type ^`boolean` @kind boolean;
  #L26f27a.  if v8 == 0 then goto L26f29a;
  #L26f27e.  v0:= v7.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f282.  v4:= v7.`io.reactivex.internal.operators.observable.y.i` @type ^`long` @kind wide;
  #L26f286.  v6:= v7.`io.reactivex.internal.operators.observable.y.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f28a.  v1:= v7 @kind object;
  #L26f28c.  v2:= v4 @kind wide;
  #L26f28e.  call temp:= `d`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/x$a;.d:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L26f294.  v8:= temp @kind object;
  #L26f296.  v7.`io.reactivex.internal.operators.observable.y.o` @type ^`io.reactivex.disposables.b` := v8 @kind object;
  #L26f29a.  return @kind void;
  #L26f29c.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f29e.  @monitorexit v7
  #L26f2a0.  throw v8;
  #L26f2a2.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f2a4.  call `b`(v8) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26f2aa.  v0:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f2ae.  call `onError`(v0, v8) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26f2b4.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/y;.dispose:()V` @kind virtual;
  #L26f2ba.  return @kind void;
  #L26f2bc.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f2be.  @monitorexit v7
  #L26f2c0.  throw v8;
  catch `java.lang.Throwable` @[L26f1f2..L26f22e] goto L26f2bc;
  catch `java.lang.Throwable` @[L26f248..L26f264] goto L26f2a2;
  catch `java.lang.Throwable` @[L26f266..L26f276] goto L26f29c;
  catch `java.lang.Throwable` @[L26f29e..L26f2a0] goto L26f29c;
  catch `java.lang.Throwable` @[L26f2be..L26f2c0] goto L26f2bc;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.y` v7 @kind this, `io.reactivex.disposables.b` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/y;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26f304.  v0:= v7.`io.reactivex.internal.operators.observable.y.p` @type ^`io.reactivex.disposables.b` @kind object;
  #L26f308.  call temp:= `validate`(v0, v8) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26f30e.  v0:= temp;
  #L26f310.  if v0 == 0 then goto L26f382;
  #L26f314.  v7.`io.reactivex.internal.operators.observable.y.p` @type ^`io.reactivex.disposables.b` := v8 @kind object;
  #L26f318.  v0:= v7.`io.reactivex.internal.operators.observable.y.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26f31c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26f322.  v0:= temp @kind object;
  #L26f324.  v1:= "The buffer supplied is null" @kind object;
  #L26f328.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26f32e.  v0:= temp @kind object;
  #L26f330.  v0:= (`java.util.Collection`) v0 @kind object;
  #L26f334.  v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v0 @kind object;
  #L26f338.  v8:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f33c.  call `onSubscribe`(v8, v7) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26f342.  v0:= v7.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f346.  v4:= v7.`io.reactivex.internal.operators.observable.y.i` @type ^`long` @kind wide;
  #L26f34a.  v6:= v7.`io.reactivex.internal.operators.observable.y.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f34e.  v1:= v7 @kind object;
  #L26f350.  v2:= v4 @kind wide;
  #L26f352.  call temp:= `d`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/x$a;.d:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L26f358.  v8:= temp @kind object;
  #L26f35a.  v7.`io.reactivex.internal.operators.observable.y.o` @type ^`io.reactivex.disposables.b` := v8 @kind object;
  #L26f35e.  goto L26f382;
  #L26f360.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f362.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26f368.  call `dispose`(v8) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f36e.  v8:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f372.  call `error`(v0, v8) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26f378.  v8:= v7.`io.reactivex.internal.operators.observable.y.m` @type ^`io.reactivex.x$a` @kind object;
  #L26f37c.  call `dispose`(v8) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26f382.  return @kind void;
  catch `java.lang.Throwable` @[L26f318..L26f334] goto L26f360;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.y` v7 @kind this) @signature `Lio/reactivex/internal/operators/observable/y;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26f3a0.  v0:= v7.`io.reactivex.internal.operators.observable.y.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26f3a4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26f3aa.  v0:= temp @kind object;
  #L26f3ac.  v1:= "The bufferSupplier returned a null buffer" @kind object;
  #L26f3b0.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26f3b6.  v0:= temp @kind object;
  #L26f3b8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L26f3bc.  @monitorenter v7
  #L26f3be.  v1:= v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` @kind object;
  #L26f3c2.  if v1 == 0 then goto L26f3e8;
  #L26f3c6.  v2:= v7.`io.reactivex.internal.operators.observable.y.q` @type ^`long` @kind wide;
  #L26f3ca.  v4:= v7.`io.reactivex.internal.operators.observable.y.r` @type ^`long` @kind wide;
  #L26f3ce.  v6:= lcmp(v2, v4);
  #L26f3d2.  if v6 == 0 then goto L26f3d8;
  #L26f3d6.  goto L26f3e8;
  #L26f3d8.  v7.`io.reactivex.internal.operators.observable.y.n` @type ^`java.util.Collection` := v0 @kind object;
  #L26f3dc.  @monitorexit v7
  #L26f3de.  v0:= 0I;
  #L26f3e0.  call `h`(v7, v1, v0, v7) @signature `Lio/reactivex/internal/observers/j;.h:(Ljava/lang/Object;ZLio/reactivex/disposables/b;)V` @kind virtual;
  #L26f3e6.  return @kind void;
  #L26f3e8.  @monitorexit v7
  #L26f3ea.  return @kind void;
  #L26f3ec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f3ee.  @monitorexit v7
  #L26f3f0.  throw v0;
  #L26f3f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f3f4.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26f3fa.  call `dispose`(v7) @signature `Lio/reactivex/internal/operators/observable/y;.dispose:()V` @kind virtual;
  #L26f400.  v1:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26f404.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26f40a.  return @kind void;
  catch `java.lang.Throwable` @[L26f3a0..L26f3bc] goto L26f3f2;
  catch `java.lang.Throwable` @[L26f3be..L26f3de] goto L26f3ec;
  catch `java.lang.Throwable` @[L26f3e8..L26f3f0] goto L26f3ec;
}
