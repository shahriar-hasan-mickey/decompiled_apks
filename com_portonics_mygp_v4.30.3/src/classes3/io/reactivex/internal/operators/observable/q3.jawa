record `io.reactivex.internal.operators.observable.q3` @kind class @AccessFlag FINAL extends `io.reactivex.n` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.q3.b` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.q3.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.q3` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/q3;.<init>:(Ljava/lang/Object;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27ddc8.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L27ddce.  v0.`io.reactivex.internal.operators.observable.q3.b` @type ^`java.lang.Object` := v1 @kind object;
  #L27ddd2.  v0.`io.reactivex.internal.operators.observable.q3.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27ddd6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.q3` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/q3;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27dde8.  v0:= v2.`io.reactivex.internal.operators.observable.q3.c` @type ^`io.reactivex.d0.k` @kind object;
  #L27ddec.  v1:= v2.`io.reactivex.internal.operators.observable.q3.b` @type ^`java.lang.Object` @kind object;
  #L27ddf0.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27ddf6.  v0:= temp @kind object;
  #L27ddf8.  v1:= "The mapper returned a null ObservableSource" @kind object;
  #L27ddfc.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27de02.  v0:= temp @kind object;
  #L27de04.  v0:= (`io.reactivex.r`) v0 @kind object;
  #L27de08.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L27de0c.  if v1 == 0 then goto L27de50;
  #L27de10.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L27de14.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L27de1a.  v0:= temp @kind object;
  #L27de1c.  if v0 != 0 then goto L27de28;
  #L27de20.  call `complete`(v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L27de26.  return @kind void;
  #L27de28.  v1:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L27de2c.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/t;Ljava/lang/Object;)V` @kind direct;
  #L27de32.  call `onSubscribe`(v3, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27de38.  call `run`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L27de3e.  goto L27de56;
  #L27de40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27de42.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27de48.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27de4e.  return @kind void;
  #L27de50.  call `subscribe`(v0, v3) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27de56.  return @kind void;
  #L27de58.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27de5a.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27de60.  return @kind void;
  catch `java.lang.Throwable` @[L27dde8..L27de08] goto L27de58;
  catch `java.lang.Throwable` @[L27de10..L27de1c] goto L27de40;
}
