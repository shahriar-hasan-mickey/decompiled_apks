record `io.reactivex.internal.operators.observable.ObservableAmb` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.n` @kind class {
  `io.reactivex.r`[] `io.reactivex.internal.operators.observable.ObservableAmb.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableAmb.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableAmb` v0 @kind this, `io.reactivex.r`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.<init>:([Lio/reactivex/r;Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26d748.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L26d74e.  v0.`io.reactivex.internal.operators.observable.ObservableAmb.b` @type ^`io.reactivex.r`[] := v1 @kind object;
  #L26d752.  v0.`io.reactivex.internal.operators.observable.ObservableAmb.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L26d756.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableAmb` v6 @kind this, `io.reactivex.t` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L26d768.  v0:= v6.`io.reactivex.internal.operators.observable.ObservableAmb.b` @type ^`io.reactivex.r`[] @kind object;
  #L26d76c.  v1:= 0I;
  #L26d76e.  if v0 != 0 then goto L26d7ee;
  #L26d772.  v0:= 8I;
  #L26d776.  v0:= new `io.reactivex.n`[v0];
  #L26d77a.  v2:= v6.`io.reactivex.internal.operators.observable.ObservableAmb.c` @type ^`java.lang.Iterable` @kind object;
  #L26d77e.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L26d784.  v2:= temp @kind object;
  #L26d786.  v3:= 0I;
  #L26d788.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L26d78e.  v4:= temp;
  #L26d790.  if v4 == 0 then goto L26d7f0;
  #L26d794.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L26d79a.  v4:= temp @kind object;
  #L26d79c.  v4:= (`io.reactivex.r`) v4 @kind object;
  #L26d7a0.  if v4 != 0 then goto L26d7ba;
  #L26d7a4.  v0:= new `java.lang.NullPointerException`;
  #L26d7a8.  v1:= "One of the sources is null" @kind object;
  #L26d7ac.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26d7b2.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26d7b8.  return @kind void;
  #L26d7ba.  v5:= length @variable v0;
  #L26d7bc.  if v3 != v5 then goto L26d7d2;
  #L26d7c0.  v5:= v3 ^> 2;
  #L26d7c4.  v5:= v5 + v3 @kind int;
  #L26d7c6.  v5:= new `io.reactivex.r`[v5];
  #L26d7ca.  call `arraycopy`(v0, v1, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L26d7d0.  v0:= v5 @kind object;
  #L26d7d2.  v5:= v3 + 1;
  #L26d7d6.  v0[v3]:= v4 @kind object;
  #L26d7da.  v3:= v5;
  #L26d7dc.  goto L26d788;
  #L26d7de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26d7e0.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26d7e6.  call `error`(v0, v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26d7ec.  return @kind void;
  #L26d7ee.  v3:= length @variable v0;
  #L26d7f0.  if v3 != 0 then goto L26d7fc;
  #L26d7f4.  call `complete`(v7) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L26d7fa.  return @kind void;
  #L26d7fc.  v2:= 1I;
  #L26d7fe.  if v3 != v2 then goto L26d80e;
  #L26d802.  v0:= v0[v1] @kind object;
  #L26d806.  call `subscribe`(v0, v7) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26d80c.  return @kind void;
  #L26d80e.  v1:= new `io.reactivex.internal.operators.observable.ObservableAmb$a`;
  #L26d812.  call `<init>`(v1, v7, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb$a;.<init>:(Lio/reactivex/t;I)V` @kind direct;
  #L26d818.  call `a`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableAmb$a;.a:([Lio/reactivex/r;)V` @kind virtual;
  #L26d81e.  return @kind void;
  catch `java.lang.Throwable` @[L26d77a..L26d7da] goto L26d7de;
}
