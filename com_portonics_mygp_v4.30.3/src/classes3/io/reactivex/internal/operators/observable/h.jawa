record `io.reactivex.internal.operators.observable.h` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `io.reactivex.r` `io.reactivex.internal.operators.observable.h.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.h` v0 @kind this, `io.reactivex.r` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/h;.<init>:(Lio/reactivex/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26d0b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26d0be.  v0.`io.reactivex.internal.operators.observable.h.b` @type ^`io.reactivex.r` := v1 @kind object;
  #L26d0c2.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.operators.observable.h` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/h;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26d08c.  v0:= new `io.reactivex.internal.operators.observable.g`;
  #L26d090.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/observable/g;.<init>:()V` @kind direct;
  #L26d096.  v1:= new `io.reactivex.internal.operators.observable.f`;
  #L26d09a.  v2:= v3.`io.reactivex.internal.operators.observable.h.b` @type ^`io.reactivex.r` @kind object;
  #L26d09e.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/operators/observable/f;.<init>:(Lio/reactivex/r;Lio/reactivex/internal/operators/observable/g;)V` @kind direct;
  #L26d0a4.  return v1 @kind object;
}
