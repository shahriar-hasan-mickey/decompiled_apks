record `io.reactivex.internal.operators.observable.v` @kind class @AccessFlag FINAL extends `io.reactivex.observers.b` @kind class {
  `io.reactivex.internal.operators.observable.w` `io.reactivex.internal.operators.observable.v.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.v` v0 @kind this, `io.reactivex.internal.operators.observable.w` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/v;.<init>:(Lio/reactivex/internal/operators/observable/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26ecd0.  call `<init>`(v0) @signature `Lio/reactivex/observers/b;.<init>:()V` @kind direct;
  #L26ecd6.  v0.`io.reactivex.internal.operators.observable.v.c` @type ^`io.reactivex.internal.operators.observable.w` := v1 @kind object;
  #L26ecda.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.v` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/v;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ecec.  v0:= v1.`io.reactivex.internal.operators.observable.v.c` @type ^`io.reactivex.internal.operators.observable.w` @kind object;
  #L26ecf0.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/observable/w;.onComplete:()V` @kind virtual;
  #L26ecf6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.v` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/v;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ed08.  v0:= v1.`io.reactivex.internal.operators.observable.v.c` @type ^`io.reactivex.internal.operators.observable.w` @kind object;
  #L26ed0c.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/w;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L26ed12.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.v` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/v;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L26ed24.  v1:= v0.`io.reactivex.internal.operators.observable.v.c` @type ^`io.reactivex.internal.operators.observable.w` @kind object;
  #L26ed28.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/w;.j:()V` @kind virtual;
  #L26ed2e.  return @kind void;
}
