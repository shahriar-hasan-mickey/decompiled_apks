record `io.reactivex.internal.operators.observable.k5` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.n` @kind class {
  `io.reactivex.n` `io.reactivex.internal.operators.observable.k5.b` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.k5.c` @AccessFlag FINAL;
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.k5.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.k5` v0 @kind this, `io.reactivex.n` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.d0.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/k5;.<init>:(Lio/reactivex/n;Ljava/lang/Iterable;Lio/reactivex/d0/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L285a70.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L285a76.  v0.`io.reactivex.internal.operators.observable.k5.b` @type ^`io.reactivex.n` := v1 @kind object;
  #L285a7a.  v0.`io.reactivex.internal.operators.observable.k5.c` @type ^`java.lang.Iterable` := v2 @kind object;
  #L285a7e.  v0.`io.reactivex.internal.operators.observable.k5.d` @type ^`io.reactivex.d0.c` := v3 @kind object;
  #L285a82.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.k5` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/k5;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L285a94.  v0:= v4.`io.reactivex.internal.operators.observable.k5.c` @type ^`java.lang.Iterable` @kind object;
  #L285a98.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L285a9e.  v0:= temp @kind object;
  #L285aa0.  v1:= "The iterator returned by other is null" @kind object;
  #L285aa4.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L285aaa.  v0:= temp @kind object;
  #L285aac.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L285ab0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L285ab6.  v1:= temp;
  #L285ab8.  if v1 != 0 then goto L285ac4;
  #L285abc.  call `complete`(v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L285ac2.  return @kind void;
  #L285ac4.  v1:= v4.`io.reactivex.internal.operators.observable.k5.b` @type ^`io.reactivex.n` @kind object;
  #L285ac8.  v2:= new `io.reactivex.internal.operators.observable.j5`;
  #L285acc.  v3:= v4.`io.reactivex.internal.operators.observable.k5.d` @type ^`io.reactivex.d0.c` @kind object;
  #L285ad0.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/j5;.<init>:(Lio/reactivex/t;Ljava/util/Iterator;Lio/reactivex/d0/c;)V` @kind direct;
  #L285ad6.  call `subscribe`(v1, v2) @signature `Lio/reactivex/n;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L285adc.  return @kind void;
  #L285ade.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L285ae0.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L285ae6.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L285aec.  return @kind void;
  #L285aee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L285af0.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L285af6.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L285afc.  return @kind void;
  catch `java.lang.Throwable` @[L285a94..L285ab0] goto L285aee;
  catch `java.lang.Throwable` @[L285ab0..L285ab8] goto L285ade;
}
