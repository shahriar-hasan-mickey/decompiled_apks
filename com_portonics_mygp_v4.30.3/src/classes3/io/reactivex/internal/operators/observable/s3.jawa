record `io.reactivex.internal.operators.observable.s3` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.s3.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.s3` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.c` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/s3;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27e2e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27e2ea.  v0.`io.reactivex.internal.operators.observable.s3.c` @type ^`io.reactivex.d0.c` := v2 @kind object;
  #L27e2ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.s3` v3 @kind this, `io.reactivex.t` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/s3;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27e300.  v0:= v3.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27e304.  v1:= new `io.reactivex.internal.operators.observable.r3`;
  #L27e308.  v2:= v3.`io.reactivex.internal.operators.observable.s3.c` @type ^`io.reactivex.d0.c` @kind object;
  #L27e30c.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/r3;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/c;)V` @kind direct;
  #L27e312.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27e318.  return @kind void;
}
