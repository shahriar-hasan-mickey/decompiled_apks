record `io.reactivex.internal.operators.observable.r3` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.r3.b` @AccessFlag FINAL;
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.r3.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.r3.d` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.r3.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.r3.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.r3` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.c` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/r3;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27dfb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27dfb6.  v0.`io.reactivex.internal.operators.observable.r3.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L27dfba.  v0.`io.reactivex.internal.operators.observable.r3.c` @type ^`io.reactivex.d0.c` := v2 @kind object;
  #L27dfbe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.r3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/r3;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27dfd0.  v0:= v1.`io.reactivex.internal.operators.observable.r3.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L27dfd4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27dfda.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.r3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/r3;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27df90.  v0:= v1.`io.reactivex.internal.operators.observable.r3.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L27df94.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27df9a.  v0:= temp;
  #L27df9c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.r3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/r3;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27dfec.  v0:= v1.`io.reactivex.internal.operators.observable.r3.f` @type ^`boolean` @kind boolean;
  #L27dff0.  if v0 == 0 then goto L27dff6;
  #L27dff4.  return @kind void;
  #L27dff6.  v0:= 1I;
  #L27dff8.  v1.`io.reactivex.internal.operators.observable.r3.f` @type ^`boolean` := v0 @kind boolean;
  #L27dffc.  v0:= v1.`io.reactivex.internal.operators.observable.r3.b` @type ^`io.reactivex.t` @kind object;
  #L27e000.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27e006.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.r3` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/r3;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e018.  v0:= v1.`io.reactivex.internal.operators.observable.r3.f` @type ^`boolean` @kind boolean;
  #L27e01c.  if v0 == 0 then goto L27e028;
  #L27e020.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27e026.  return @kind void;
  #L27e028.  v0:= 1I;
  #L27e02a.  v1.`io.reactivex.internal.operators.observable.r3.f` @type ^`boolean` := v0 @kind boolean;
  #L27e02e.  v0:= v1.`io.reactivex.internal.operators.observable.r3.b` @type ^`io.reactivex.t` @kind object;
  #L27e032.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27e038.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.r3` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/r3;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27e04c.  v0:= v3.`io.reactivex.internal.operators.observable.r3.f` @type ^`boolean` @kind boolean;
  #L27e050.  if v0 == 0 then goto L27e056;
  #L27e054.  return @kind void;
  #L27e056.  v0:= v3.`io.reactivex.internal.operators.observable.r3.b` @type ^`io.reactivex.t` @kind object;
  #L27e05a.  v1:= v3.`io.reactivex.internal.operators.observable.r3.e` @type ^`java.lang.Object` @kind object;
  #L27e05e.  if v1 != 0 then goto L27e06e;
  #L27e062.  v3.`io.reactivex.internal.operators.observable.r3.e` @type ^`java.lang.Object` := v4 @kind object;
  #L27e066.  call `onNext`(v0, v4) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27e06c.  goto L27e090;
  #L27e06e.  v2:= v3.`io.reactivex.internal.operators.observable.r3.c` @type ^`io.reactivex.d0.c` @kind object;
  #L27e072.  call temp:= `apply`(v2, v1, v4) @signature `Lio/reactivex/d0/c;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27e078.  v4:= temp @kind object;
  #L27e07a.  v1:= "The value returned by the accumulator is null" @kind object;
  #L27e07e.  call temp:= `e`(v4, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27e084.  v4:= temp @kind object;
  #L27e086.  v3.`io.reactivex.internal.operators.observable.r3.e` @type ^`java.lang.Object` := v4 @kind object;
  #L27e08a.  call `onNext`(v0, v4) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27e090.  return @kind void;
  #L27e092.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27e094.  call `b`(v4) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27e09a.  v0:= v3.`io.reactivex.internal.operators.observable.r3.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e09e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27e0a4.  call `onError`(v3, v4) @signature `Lio/reactivex/internal/operators/observable/r3;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27e0aa.  return @kind void;
  catch `java.lang.Throwable` @[L27e06e..L27e086] goto L27e092;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.r3` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/r3;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e0c8.  v0:= v1.`io.reactivex.internal.operators.observable.r3.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e0cc.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27e0d2.  v0:= temp;
  #L27e0d4.  if v0 == 0 then goto L27e0e6;
  #L27e0d8.  v1.`io.reactivex.internal.operators.observable.r3.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27e0dc.  v2:= v1.`io.reactivex.internal.operators.observable.r3.b` @type ^`io.reactivex.t` @kind object;
  #L27e0e0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27e0e6.  return @kind void;
}
