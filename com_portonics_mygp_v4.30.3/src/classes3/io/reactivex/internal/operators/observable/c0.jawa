record `io.reactivex.internal.operators.observable.c0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.c0.b` @AccessFlag FINAL;
  `io.reactivex.d0.b` `io.reactivex.internal.operators.observable.c0.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.c0.d` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.c0.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.c0.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.c0` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.d0.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/c0;.<init>:(Lio/reactivex/t;Ljava/lang/Object;Lio/reactivex/d0/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2701f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2701fe.  v0.`io.reactivex.internal.operators.observable.c0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L270202.  v0.`io.reactivex.internal.operators.observable.c0.c` @type ^`io.reactivex.d0.b` := v3 @kind object;
  #L270206.  v0.`io.reactivex.internal.operators.observable.c0.d` @type ^`java.lang.Object` := v2 @kind object;
  #L27020a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.c0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/c0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27021c.  v0:= v1.`io.reactivex.internal.operators.observable.c0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L270220.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L270226.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.c0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/c0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2701d8.  v0:= v1.`io.reactivex.internal.operators.observable.c0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L2701dc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L2701e2.  v0:= temp;
  #L2701e4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.c0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/c0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L270238.  v0:= v2.`io.reactivex.internal.operators.observable.c0.f` @type ^`boolean` @kind boolean;
  #L27023c.  if v0 == 0 then goto L270242;
  #L270240.  return @kind void;
  #L270242.  v0:= 1I;
  #L270244.  v2.`io.reactivex.internal.operators.observable.c0.f` @type ^`boolean` := v0 @kind boolean;
  #L270248.  v0:= v2.`io.reactivex.internal.operators.observable.c0.b` @type ^`io.reactivex.t` @kind object;
  #L27024c.  v1:= v2.`io.reactivex.internal.operators.observable.c0.d` @type ^`java.lang.Object` @kind object;
  #L270250.  call `onNext`(v0, v1) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L270256.  v0:= v2.`io.reactivex.internal.operators.observable.c0.b` @type ^`io.reactivex.t` @kind object;
  #L27025a.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L270260.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.c0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270274.  v0:= v1.`io.reactivex.internal.operators.observable.c0.f` @type ^`boolean` @kind boolean;
  #L270278.  if v0 == 0 then goto L270284;
  #L27027c.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L270282.  return @kind void;
  #L270284.  v0:= 1I;
  #L270286.  v1.`io.reactivex.internal.operators.observable.c0.f` @type ^`boolean` := v0 @kind boolean;
  #L27028a.  v0:= v1.`io.reactivex.internal.operators.observable.c0.b` @type ^`io.reactivex.t` @kind object;
  #L27028e.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L270294.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.c0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/c0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2702a8.  v0:= v2.`io.reactivex.internal.operators.observable.c0.f` @type ^`boolean` @kind boolean;
  #L2702ac.  if v0 == 0 then goto L2702b2;
  #L2702b0.  return @kind void;
  #L2702b2.  v0:= v2.`io.reactivex.internal.operators.observable.c0.c` @type ^`io.reactivex.d0.b` @kind object;
  #L2702b6.  v1:= v2.`io.reactivex.internal.operators.observable.c0.d` @type ^`java.lang.Object` @kind object;
  #L2702ba.  call `accept`(v0, v1, v3) @signature `Lio/reactivex/d0/b;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L2702c0.  goto L2702d4;
  #L2702c2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2702c4.  v0:= v2.`io.reactivex.internal.operators.observable.c0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L2702c8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2702ce.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/c0;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2702d4.  return @kind void;
  catch `java.lang.Throwable` @[L2702b2..L2702c0] goto L2702c2;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.c0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2702f4.  v0:= v1.`io.reactivex.internal.operators.observable.c0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L2702f8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2702fe.  v0:= temp;
  #L270300.  if v0 == 0 then goto L270312;
  #L270304.  v1.`io.reactivex.internal.operators.observable.c0.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L270308.  v2:= v1.`io.reactivex.internal.operators.observable.c0.b` @type ^`io.reactivex.t` @kind object;
  #L27030c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L270312.  return @kind void;
}
