record `io.reactivex.internal.operators.observable.e0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.observable.e0.b` @AccessFlag FINAL;
  `io.reactivex.d0.b` `io.reactivex.internal.operators.observable.e0.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.e0.d` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.e0.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.e0.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.e0` v0 @kind this, `io.reactivex.z` v1 @kind object, `java.lang.Object` v2 @kind object, `io.reactivex.d0.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/e0;.<init>:(Lio/reactivex/z;Ljava/lang/Object;Lio/reactivex/d0/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L270344.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27034a.  v0.`io.reactivex.internal.operators.observable.e0.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L27034e.  v0.`io.reactivex.internal.operators.observable.e0.c` @type ^`io.reactivex.d0.b` := v3 @kind object;
  #L270352.  v0.`io.reactivex.internal.operators.observable.e0.d` @type ^`java.lang.Object` := v2 @kind object;
  #L270356.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.e0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/e0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270368.  v0:= v1.`io.reactivex.internal.operators.observable.e0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L27036c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L270372.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.e0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/e0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270324.  v0:= v1.`io.reactivex.internal.operators.observable.e0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L270328.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27032e.  v0:= temp;
  #L270330.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.e0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/e0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L270384.  v0:= v2.`io.reactivex.internal.operators.observable.e0.f` @type ^`boolean` @kind boolean;
  #L270388.  if v0 == 0 then goto L27038e;
  #L27038c.  return @kind void;
  #L27038e.  v0:= 1I;
  #L270390.  v2.`io.reactivex.internal.operators.observable.e0.f` @type ^`boolean` := v0 @kind boolean;
  #L270394.  v0:= v2.`io.reactivex.internal.operators.observable.e0.b` @type ^`io.reactivex.z` @kind object;
  #L270398.  v1:= v2.`io.reactivex.internal.operators.observable.e0.d` @type ^`java.lang.Object` @kind object;
  #L27039c.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2703a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.e0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/e0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2703b4.  v0:= v1.`io.reactivex.internal.operators.observable.e0.f` @type ^`boolean` @kind boolean;
  #L2703b8.  if v0 == 0 then goto L2703c4;
  #L2703bc.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2703c2.  return @kind void;
  #L2703c4.  v0:= 1I;
  #L2703c6.  v1.`io.reactivex.internal.operators.observable.e0.f` @type ^`boolean` := v0 @kind boolean;
  #L2703ca.  v0:= v1.`io.reactivex.internal.operators.observable.e0.b` @type ^`io.reactivex.z` @kind object;
  #L2703ce.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2703d4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.e0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/e0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2703e8.  v0:= v2.`io.reactivex.internal.operators.observable.e0.f` @type ^`boolean` @kind boolean;
  #L2703ec.  if v0 == 0 then goto L2703f2;
  #L2703f0.  return @kind void;
  #L2703f2.  v0:= v2.`io.reactivex.internal.operators.observable.e0.c` @type ^`io.reactivex.d0.b` @kind object;
  #L2703f6.  v1:= v2.`io.reactivex.internal.operators.observable.e0.d` @type ^`java.lang.Object` @kind object;
  #L2703fa.  call `accept`(v0, v1, v3) @signature `Lio/reactivex/d0/b;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L270400.  goto L270414;
  #L270402.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L270404.  v0:= v2.`io.reactivex.internal.operators.observable.e0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L270408.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27040e.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/e0;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L270414.  return @kind void;
  catch `java.lang.Throwable` @[L2703f2..L270400] goto L270402;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.e0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/e0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270434.  v0:= v1.`io.reactivex.internal.operators.observable.e0.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L270438.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27043e.  v0:= temp;
  #L270440.  if v0 == 0 then goto L270452;
  #L270444.  v1.`io.reactivex.internal.operators.observable.e0.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L270448.  v2:= v1.`io.reactivex.internal.operators.observable.e0.b` @type ^`io.reactivex.z` @kind object;
  #L27044c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L270452.  return @kind void;
}
