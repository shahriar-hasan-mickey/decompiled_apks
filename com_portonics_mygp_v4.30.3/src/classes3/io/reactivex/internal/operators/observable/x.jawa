record `io.reactivex.internal.operators.observable.x` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.r` `io.reactivex.internal.operators.observable.x.c` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.x.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.x` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.r` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/x;.<init>:(Lio/reactivex/r;Lio/reactivex/r;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26f000.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L26f006.  v0.`io.reactivex.internal.operators.observable.x.c` @type ^`io.reactivex.r` := v2 @kind object;
  #L26f00a.  v0.`io.reactivex.internal.operators.observable.x.d` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L26f00e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.x` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/x;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f020.  v0:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L26f024.  v1:= new `io.reactivex.internal.operators.observable.w`;
  #L26f028.  v2:= new `io.reactivex.observers.d`;
  #L26f02c.  call `<init>`(v2, v5) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L26f032.  v5:= v4.`io.reactivex.internal.operators.observable.x.d` @type ^`java.util.concurrent.Callable` @kind object;
  #L26f036.  v3:= v4.`io.reactivex.internal.operators.observable.x.c` @type ^`io.reactivex.r` @kind object;
  #L26f03a.  call `<init>`(v1, v2, v5, v3) @signature `Lio/reactivex/internal/operators/observable/w;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/Callable;Lio/reactivex/r;)V` @kind direct;
  #L26f040.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26f046.  return @kind void;
}
