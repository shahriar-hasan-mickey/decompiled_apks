record `io.reactivex.internal.operators.observable.ObservableConcatMapEager` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableConcatMapEager.c` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.observable.ObservableConcatMapEager.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableConcatMapEager.e` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableConcatMapEager.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableConcatMapEager` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `io.reactivex.internal.util.ErrorMode` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;Lio/reactivex/internal/util/ErrorMode;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2717ac.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2717b2.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L2717b6.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.d` @type ^`io.reactivex.internal.util.ErrorMode` := v3 @kind object;
  #L2717ba.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.e` @type ^`int` := v4;
  #L2717be.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.f` @type ^`int` := v5;
  #L2717c2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableConcatMapEager` v8 @kind this, `io.reactivex.t` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2717d4.  v0:= v8.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2717d8.  v7:= new `io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver`;
  #L2717dc.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.c` @type ^`io.reactivex.d0.k` @kind object;
  #L2717e0.  v4:= v8.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.e` @type ^`int`;
  #L2717e4.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.f` @type ^`int`;
  #L2717e8.  v6:= v8.`io.reactivex.internal.operators.observable.ObservableConcatMapEager.d` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L2717ec.  v1:= v7 @kind object;
  #L2717ee.  v2:= v9 @kind object;
  #L2717f0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMapEager$ConcatMapEagerMainObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;IILio/reactivex/internal/util/ErrorMode;)V` @kind direct;
  #L2717f6.  call `subscribe`(v0, v7) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L2717fc.  return @kind void;
}
