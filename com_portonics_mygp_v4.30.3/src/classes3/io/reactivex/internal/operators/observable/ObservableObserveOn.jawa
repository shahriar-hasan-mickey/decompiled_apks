record `io.reactivex.internal.operators.observable.ObservableObserveOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.x` `io.reactivex.internal.operators.observable.ObservableObserveOn.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableObserveOn.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableObserveOn.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableObserveOn` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.x` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn;.<init>:(Lio/reactivex/r;Lio/reactivex/x;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27a0ec.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27a0f2.  v0.`io.reactivex.internal.operators.observable.ObservableObserveOn.c` @type ^`io.reactivex.x` := v2 @kind object;
  #L27a0f6.  v0.`io.reactivex.internal.operators.observable.ObservableObserveOn.d` @type ^`boolean` := v3 @kind boolean;
  #L27a0fa.  v0.`io.reactivex.internal.operators.observable.ObservableObserveOn.e` @type ^`int` := v4;
  #L27a0fe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableObserveOn` v5 @kind this, `io.reactivex.t` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27a110.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableObserveOn.c` @type ^`io.reactivex.x` @kind object;
  #L27a114.  v1:= instanceof @variable v0 @type ^`io.reactivex.internal.schedulers.w` @kind boolean;
  #L27a118.  if v1 == 0 then goto L27a128;
  #L27a11c.  v0:= v5.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27a120.  call `subscribe`(v0, v6) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27a126.  goto L27a14c;
  #L27a128.  call temp:= `a`(v0) @signature `Lio/reactivex/x;.a:()Lio/reactivex/x$a;` @kind virtual;
  #L27a12e.  v0:= temp @kind object;
  #L27a130.  v1:= v5.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27a134.  v2:= new `io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver`;
  #L27a138.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableObserveOn.d` @type ^`boolean` @kind boolean;
  #L27a13c.  v4:= v5.`io.reactivex.internal.operators.observable.ObservableObserveOn.e` @type ^`int`;
  #L27a140.  call `<init>`(v2, v6, v0, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableObserveOn$ObserveOnObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/x$a;ZI)V` @kind direct;
  #L27a146.  call `subscribe`(v1, v2) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27a14c.  return @kind void;
}
