record `io.reactivex.internal.operators.observable.m3` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.observable.i3` @kind interface {
  `int` `io.reactivex.internal.operators.observable.m3.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.m3` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/m3;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27c388.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27c38e.  v0.`io.reactivex.internal.operators.observable.m3.a` @type ^`int` := v1;
  #L27c392.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableReplay$a` `call`(`io.reactivex.internal.operators.observable.m3` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/m3;.call:()Lio/reactivex/internal/operators/observable/ObservableReplay$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27c368.  v0:= new `io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer`;
  #L27c36c.  v1:= v2.`io.reactivex.internal.operators.observable.m3.a` @type ^`int`;
  #L27c370.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableReplay$SizeBoundReplayBuffer;.<init>:(I)V` @kind direct;
  #L27c376.  return v0 @kind object;
}
