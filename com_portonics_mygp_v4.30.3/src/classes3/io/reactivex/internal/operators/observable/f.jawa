record `io.reactivex.internal.operators.observable.f` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `io.reactivex.internal.operators.observable.g` `io.reactivex.internal.operators.observable.f.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.r` `io.reactivex.internal.operators.observable.f.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.f.d` @AccessFlag PRIVATE;
  `boolean` `io.reactivex.internal.operators.observable.f.e` @AccessFlag PRIVATE;
  `boolean` `io.reactivex.internal.operators.observable.f.f` @AccessFlag PRIVATE;
  `java.lang.Throwable` `io.reactivex.internal.operators.observable.f.g` @AccessFlag PRIVATE;
  `boolean` `io.reactivex.internal.operators.observable.f.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.f` v1 @kind this, `io.reactivex.r` v2 @kind object, `io.reactivex.internal.operators.observable.g` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/f;.<init>:(Lio/reactivex/r;Lio/reactivex/internal/operators/observable/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L26cf08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26cf0e.  v0:= 1I;
  #L26cf10.  v1.`io.reactivex.internal.operators.observable.f.e` @type ^`boolean` := v0 @kind boolean;
  #L26cf14.  v1.`io.reactivex.internal.operators.observable.f.f` @type ^`boolean` := v0 @kind boolean;
  #L26cf18.  v1.`io.reactivex.internal.operators.observable.f.c` @type ^`io.reactivex.r` := v2 @kind object;
  #L26cf1c.  v1.`io.reactivex.internal.operators.observable.f.b` @type ^`io.reactivex.internal.operators.observable.g` := v3 @kind object;
  #L26cf20.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.internal.operators.observable.f` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/f;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26cdfc.  v0:= v4.`io.reactivex.internal.operators.observable.f.h` @type ^`boolean` @kind boolean;
  #L26ce00.  v1:= 1I;
  #L26ce02.  if v0 != 0 then goto L26ce2c;
  #L26ce06.  v4.`io.reactivex.internal.operators.observable.f.h` @type ^`boolean` := v1 @kind boolean;
  #L26ce0a.  v0:= v4.`io.reactivex.internal.operators.observable.f.b` @type ^`io.reactivex.internal.operators.observable.g` @kind object;
  #L26ce0e.  call `c`(v0) @signature `Lio/reactivex/internal/operators/observable/g;.c:()V` @kind virtual;
  #L26ce14.  v0:= new `io.reactivex.internal.operators.observable.w2`;
  #L26ce18.  v2:= v4.`io.reactivex.internal.operators.observable.f.c` @type ^`io.reactivex.r` @kind object;
  #L26ce1c.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/w2;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L26ce22.  v2:= v4.`io.reactivex.internal.operators.observable.f.b` @type ^`io.reactivex.internal.operators.observable.g` @kind object;
  #L26ce26.  call `subscribe`(v0, v2) @signature `Lio/reactivex/n;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L26ce2c.  v0:= v4.`io.reactivex.internal.operators.observable.f.b` @type ^`io.reactivex.internal.operators.observable.g` @kind object;
  #L26ce30.  call temp:= `d`(v0) @signature `Lio/reactivex/internal/operators/observable/g;.d:()Lio/reactivex/l;` @kind virtual;
  #L26ce36.  v0:= temp @kind object;
  #L26ce38.  call temp:= `h`(v0) @signature `Lio/reactivex/l;.h:()Z` @kind virtual;
  #L26ce3e.  v2:= temp;
  #L26ce40.  v3:= 0I;
  #L26ce42.  if v2 == 0 then goto L26ce58;
  #L26ce46.  v4.`io.reactivex.internal.operators.observable.f.f` @type ^`boolean` := v3 @kind boolean;
  #L26ce4a.  call temp:= `e`(v0) @signature `Lio/reactivex/l;.e:()Ljava/lang/Object;` @kind virtual;
  #L26ce50.  v0:= temp @kind object;
  #L26ce52.  v4.`io.reactivex.internal.operators.observable.f.d` @type ^`java.lang.Object` := v0 @kind object;
  #L26ce56.  return v1;
  #L26ce58.  v4.`io.reactivex.internal.operators.observable.f.e` @type ^`boolean` := v3 @kind boolean;
  #L26ce5c.  call temp:= `f`(v0) @signature `Lio/reactivex/l;.f:()Z` @kind virtual;
  #L26ce62.  v1:= temp;
  #L26ce64.  if v1 == 0 then goto L26ce6a;
  #L26ce68.  return v3;
  #L26ce6a.  call temp:= `d`(v0) @signature `Lio/reactivex/l;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L26ce70.  v0:= temp @kind object;
  #L26ce72.  v4.`io.reactivex.internal.operators.observable.f.g` @type ^`java.lang.Throwable` := v0 @kind object;
  #L26ce76.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L26ce7c.  v0:= temp @kind object;
  #L26ce7e.  throw v0;
  #L26ce80.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L26ce82.  v1:= v4.`io.reactivex.internal.operators.observable.f.b` @type ^`io.reactivex.internal.operators.observable.g` @kind object;
  #L26ce86.  call `dispose`(v1) @signature `Lio/reactivex/observers/b;.dispose:()V` @kind virtual;
  #L26ce8c.  v4.`io.reactivex.internal.operators.observable.f.g` @type ^`java.lang.Throwable` := v0 @kind object;
  #L26ce90.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L26ce96.  v0:= temp @kind object;
  #L26ce98.  throw v0;
  catch `java.lang.InterruptedException` @[L26ce2c..L26ce38] goto L26ce80;
}
procedure `boolean` `hasNext`(`io.reactivex.internal.operators.observable.f` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/f;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26cdb4.  v0:= v2.`io.reactivex.internal.operators.observable.f.g` @type ^`java.lang.Throwable` @kind object;
  #L26cdb8.  if v0 != 0 then goto L26cde0;
  #L26cdbc.  v0:= v2.`io.reactivex.internal.operators.observable.f.e` @type ^`boolean` @kind boolean;
  #L26cdc0.  v1:= 0I;
  #L26cdc2.  if v0 != 0 then goto L26cdc8;
  #L26cdc6.  return v1;
  #L26cdc8.  v0:= v2.`io.reactivex.internal.operators.observable.f.f` @type ^`boolean` @kind boolean;
  #L26cdcc.  if v0 == 0 then goto L26cddc;
  #L26cdd0.  call temp:= `a`(v2) @signature `Lio/reactivex/internal/operators/observable/f;.a:()Z` @kind direct;
  #L26cdd6.  v0:= temp;
  #L26cdd8.  if v0 == 0 then goto L26cdde;
  #L26cddc.  v1:= 1I;
  #L26cdde.  return v1;
  #L26cde0.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L26cde6.  v0:= temp @kind object;
  #L26cde8.  throw v0;
}
procedure `java.lang.Object` `next`(`io.reactivex.internal.operators.observable.f` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/f;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26cebc.  v0:= v2.`io.reactivex.internal.operators.observable.f.g` @type ^`java.lang.Throwable` @kind object;
  #L26cec0.  if v0 != 0 then goto L26ceec;
  #L26cec4.  call temp:= `hasNext`(v2) @signature `Lio/reactivex/internal/operators/observable/f;.hasNext:()Z` @kind virtual;
  #L26ceca.  v0:= temp;
  #L26cecc.  if v0 == 0 then goto L26cedc;
  #L26ced0.  v0:= 1I;
  #L26ced2.  v2.`io.reactivex.internal.operators.observable.f.f` @type ^`boolean` := v0 @kind boolean;
  #L26ced6.  v0:= v2.`io.reactivex.internal.operators.observable.f.d` @type ^`java.lang.Object` @kind object;
  #L26ceda.  return v0 @kind object;
  #L26cedc.  v0:= new `java.util.NoSuchElementException`;
  #L26cee0.  v1:= "No more elements" @kind object;
  #L26cee4.  call `<init>`(v0, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26ceea.  throw v0;
  #L26ceec.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L26cef2.  v0:= temp @kind object;
  #L26cef4.  throw v0;
}
procedure `void` `remove`(`io.reactivex.internal.operators.observable.f` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/f;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26cf34.  v0:= new `java.lang.UnsupportedOperationException`;
  #L26cf38.  v1:= "Read only iterator" @kind object;
  #L26cf3c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26cf42.  throw v0;
}
