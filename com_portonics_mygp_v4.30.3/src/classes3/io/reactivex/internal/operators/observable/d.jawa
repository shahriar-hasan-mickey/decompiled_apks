record `io.reactivex.internal.operators.observable.d` @kind class @AccessFlag FINAL extends `io.reactivex.observers.a` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.observable.d.c` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/d;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26ccdc.  call `<init>`(v0) @signature `Lio/reactivex/observers/a;.<init>:()V` @kind direct;
  #L26cce2.  call temp:= `next`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L26cce8.  v1:= temp @kind object;
  #L26ccea.  v0.`io.reactivex.internal.operators.observable.d.c` @type ^`java.lang.Object` := v1 @kind object;
  #L26ccee.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.d$a` `b`(`io.reactivex.internal.operators.observable.d` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d;.b:()Lio/reactivex/internal/operators/observable/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ccc0.  v0:= new `io.reactivex.internal.operators.observable.d$a`;
  #L26ccc4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/d$a;.<init>:(Lio/reactivex/internal/operators/observable/d;)V` @kind direct;
  #L26ccca.  return v0 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.d` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26cd00.  call temp:= `complete`() @signature `Lio/reactivex/internal/util/NotificationLite;.complete:()Ljava/lang/Object;` @kind static;
  #L26cd06.  v0:= temp @kind object;
  #L26cd08.  v1.`io.reactivex.internal.operators.observable.d.c` @type ^`java.lang.Object` := v0 @kind object;
  #L26cd0c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.d` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L26cd20.  call temp:= `error`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.error:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L26cd26.  v1:= temp @kind object;
  #L26cd28.  v0.`io.reactivex.internal.operators.observable.d.c` @type ^`java.lang.Object` := v1 @kind object;
  #L26cd2c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/d;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L26cd40.  call temp:= `next`(v1) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L26cd46.  v1:= temp @kind object;
  #L26cd48.  v0.`io.reactivex.internal.operators.observable.d.c` @type ^`java.lang.Object` := v1 @kind object;
  #L26cd4c.  return @kind void;
}
