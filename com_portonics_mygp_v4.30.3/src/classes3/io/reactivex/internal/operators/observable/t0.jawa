record `io.reactivex.internal.operators.observable.t0` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.t0` v0 @kind this, `io.reactivex.r` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/t0;.<init>:(Lio/reactivex/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2732a8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2732ae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.t0` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/t0;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2732c0.  v0:= v2.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2732c4.  v1:= new `io.reactivex.internal.operators.observable.s0`;
  #L2732c8.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/s0;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L2732ce.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L2732d4.  return @kind void;
}
