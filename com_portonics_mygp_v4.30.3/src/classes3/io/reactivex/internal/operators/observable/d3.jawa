record `io.reactivex.internal.operators.observable.d3` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.observable.d3.b` @AccessFlag FINAL;
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.d3.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.d3.d` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.d3.e` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.d3.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.d3` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.d0.c` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/d3;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27af60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27af66.  v0.`io.reactivex.internal.operators.observable.d3.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L27af6a.  v0.`io.reactivex.internal.operators.observable.d3.c` @type ^`io.reactivex.d0.c` := v2 @kind object;
  #L27af6e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.d3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d3;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27af80.  v0:= v1.`io.reactivex.internal.operators.observable.d3.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L27af84.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27af8a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.d3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d3;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27af40.  v0:= v1.`io.reactivex.internal.operators.observable.d3.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L27af44.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27af4a.  v0:= temp;
  #L27af4c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.d3` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/d3;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27af9c.  v0:= v2.`io.reactivex.internal.operators.observable.d3.d` @type ^`boolean` @kind boolean;
  #L27afa0.  if v0 == 0 then goto L27afa6;
  #L27afa4.  return @kind void;
  #L27afa6.  v0:= 1I;
  #L27afa8.  v2.`io.reactivex.internal.operators.observable.d3.d` @type ^`boolean` := v0 @kind boolean;
  #L27afac.  v0:= v2.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` @kind object;
  #L27afb0.  v1:= 0I;
  #L27afb2.  v2.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` := v1 @kind object;
  #L27afb6.  if v0 == 0 then goto L27afc6;
  #L27afba.  v1:= v2.`io.reactivex.internal.operators.observable.d3.b` @type ^`io.reactivex.j` @kind object;
  #L27afbe.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L27afc4.  goto L27afd0;
  #L27afc6.  v0:= v2.`io.reactivex.internal.operators.observable.d3.b` @type ^`io.reactivex.j` @kind object;
  #L27afca.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L27afd0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.d3` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/d3;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27afe4.  v0:= v1.`io.reactivex.internal.operators.observable.d3.d` @type ^`boolean` @kind boolean;
  #L27afe8.  if v0 == 0 then goto L27aff4;
  #L27afec.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27aff2.  return @kind void;
  #L27aff4.  v0:= 1I;
  #L27aff6.  v1.`io.reactivex.internal.operators.observable.d3.d` @type ^`boolean` := v0 @kind boolean;
  #L27affa.  v0:= 0I;
  #L27affc.  v1.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` := v0 @kind object;
  #L27b000.  v0:= v1.`io.reactivex.internal.operators.observable.d3.b` @type ^`io.reactivex.j` @kind object;
  #L27b004.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27b00a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.d3` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/d3;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27b01c.  v0:= v2.`io.reactivex.internal.operators.observable.d3.d` @type ^`boolean` @kind boolean;
  #L27b020.  if v0 != 0 then goto L27b068;
  #L27b024.  v0:= v2.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` @kind object;
  #L27b028.  if v0 != 0 then goto L27b032;
  #L27b02c.  v2.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` := v3 @kind object;
  #L27b030.  goto L27b068;
  #L27b032.  v1:= v2.`io.reactivex.internal.operators.observable.d3.c` @type ^`io.reactivex.d0.c` @kind object;
  #L27b036.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/d0/c;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27b03c.  v3:= temp @kind object;
  #L27b03e.  v0:= "The reducer returned a null value" @kind object;
  #L27b042.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27b048.  v3:= temp @kind object;
  #L27b04a.  v2.`io.reactivex.internal.operators.observable.d3.e` @type ^`java.lang.Object` := v3 @kind object;
  #L27b04e.  goto L27b068;
  #L27b050.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27b052.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27b058.  v0:= v2.`io.reactivex.internal.operators.observable.d3.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L27b05c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27b062.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/d3;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27b068.  return @kind void;
  catch `java.lang.Throwable` @[L27b032..L27b04e] goto L27b050;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.d3` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/d3;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27b088.  v0:= v1.`io.reactivex.internal.operators.observable.d3.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L27b08c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27b092.  v0:= temp;
  #L27b094.  if v0 == 0 then goto L27b0a6;
  #L27b098.  v1.`io.reactivex.internal.operators.observable.d3.f` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27b09c.  v2:= v1.`io.reactivex.internal.operators.observable.d3.b` @type ^`io.reactivex.j` @kind object;
  #L27b0a0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27b0a6.  return @kind void;
}
