record `io.reactivex.internal.operators.observable.ObservableRepeatWhen` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableRepeatWhen.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRepeatWhen` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27bd0c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27bd12.  v0.`io.reactivex.internal.operators.observable.ObservableRepeatWhen.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27bd16.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableRepeatWhen` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27bd28.  call temp:= `y`() @signature `Lio/reactivex/subjects/PublishSubject;.y:()Lio/reactivex/subjects/PublishSubject;` @kind static;
  #L27bd2e.  v0:= temp @kind object;
  #L27bd30.  call temp:= `w`(v0) @signature `Lio/reactivex/subjects/b;.w:()Lio/reactivex/subjects/b;` @kind virtual;
  #L27bd36.  v0:= temp @kind object;
  #L27bd38.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableRepeatWhen.c` @type ^`io.reactivex.d0.k` @kind object;
  #L27bd3c.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27bd42.  v1:= temp @kind object;
  #L27bd44.  v2:= "The handler returned a null ObservableSource" @kind object;
  #L27bd48.  call temp:= `e`(v1, v2) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27bd4e.  v1:= temp @kind object;
  #L27bd50.  v1:= (`io.reactivex.r`) v1 @kind object;
  #L27bd54.  v2:= new `io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver`;
  #L27bd58.  v3:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27bd5c.  call `<init>`(v2, v5, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/subjects/b;Lio/reactivex/r;)V` @kind direct;
  #L27bd62.  call `onSubscribe`(v5, v2) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27bd68.  v5:= v2.`io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.inner` @type ^`io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver` @kind object;
  #L27bd6c.  call `subscribe`(v1, v5) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27bd72.  call `subscribeNext`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver;.subscribeNext:()V` @kind virtual;
  #L27bd78.  return @kind void;
  #L27bd7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27bd7c.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27bd82.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27bd88.  return @kind void;
  catch `java.lang.Throwable` @[L27bd38..L27bd54] goto L27bd7a;
}
