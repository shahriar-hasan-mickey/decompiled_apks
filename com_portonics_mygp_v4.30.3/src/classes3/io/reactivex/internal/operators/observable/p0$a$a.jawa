record `io.reactivex.internal.operators.observable.p0$a$a` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface {
  `io.reactivex.internal.operators.observable.p0$a` `io.reactivex.internal.operators.observable.p0$a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.p0$a$a` v0 @kind this, `io.reactivex.internal.operators.observable.p0$a` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0$a$a;.<init>:(Lio/reactivex/internal/operators/observable/p0$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L272d44.  v0.`io.reactivex.internal.operators.observable.p0$a$a.b` @type ^`io.reactivex.internal.operators.observable.p0$a` := v1 @kind object;
  #L272d48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L272d4e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.p0$a$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/p0$a$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272d60.  v0:= v1.`io.reactivex.internal.operators.observable.p0$a$a.b` @type ^`io.reactivex.internal.operators.observable.p0$a` @kind object;
  #L272d64.  v0:= v0.`io.reactivex.internal.operators.observable.p0$a.c` @type ^`io.reactivex.t` @kind object;
  #L272d68.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L272d6e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.p0$a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0$a$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272d80.  v0:= v1.`io.reactivex.internal.operators.observable.p0$a$a.b` @type ^`io.reactivex.internal.operators.observable.p0$a` @kind object;
  #L272d84.  v0:= v0.`io.reactivex.internal.operators.observable.p0$a.c` @type ^`io.reactivex.t` @kind object;
  #L272d88.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L272d8e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.p0$a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0$a$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272da0.  v0:= v1.`io.reactivex.internal.operators.observable.p0$a$a.b` @type ^`io.reactivex.internal.operators.observable.p0$a` @kind object;
  #L272da4.  v0:= v0.`io.reactivex.internal.operators.observable.p0$a.c` @type ^`io.reactivex.t` @kind object;
  #L272da8.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L272dae.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.p0$a$a` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0$a$a;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272dc0.  v0:= v1.`io.reactivex.internal.operators.observable.p0$a$a.b` @type ^`io.reactivex.internal.operators.observable.p0$a` @kind object;
  #L272dc4.  v0:= v0.`io.reactivex.internal.operators.observable.p0$a.b` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L272dc8.  call temp:= `update`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.update:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L272dce.  return @kind void;
}
