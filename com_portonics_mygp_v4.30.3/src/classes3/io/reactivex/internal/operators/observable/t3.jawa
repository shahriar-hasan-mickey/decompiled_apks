record `io.reactivex.internal.operators.observable.t3` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.t3.b` @AccessFlag FINAL;
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.t3.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.t3.d` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.t3.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.t3.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.t3` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/t3;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/c;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27e118.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27e11e.  v0.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L27e122.  v0.`io.reactivex.internal.operators.observable.t3.c` @type ^`io.reactivex.d0.c` := v2 @kind object;
  #L27e126.  v0.`io.reactivex.internal.operators.observable.t3.d` @type ^`java.lang.Object` := v3 @kind object;
  #L27e12a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.t3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t3;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e13c.  v0:= v1.`io.reactivex.internal.operators.observable.t3.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e140.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27e146.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.t3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t3;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e0f8.  v0:= v1.`io.reactivex.internal.operators.observable.t3.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e0fc.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27e102.  v0:= temp;
  #L27e104.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.t3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t3;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e158.  v0:= v1.`io.reactivex.internal.operators.observable.t3.f` @type ^`boolean` @kind boolean;
  #L27e15c.  if v0 == 0 then goto L27e162;
  #L27e160.  return @kind void;
  #L27e162.  v0:= 1I;
  #L27e164.  v1.`io.reactivex.internal.operators.observable.t3.f` @type ^`boolean` := v0 @kind boolean;
  #L27e168.  v0:= v1.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` @kind object;
  #L27e16c.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27e172.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.t3` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t3;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e184.  v0:= v1.`io.reactivex.internal.operators.observable.t3.f` @type ^`boolean` @kind boolean;
  #L27e188.  if v0 == 0 then goto L27e194;
  #L27e18c.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27e192.  return @kind void;
  #L27e194.  v0:= 1I;
  #L27e196.  v1.`io.reactivex.internal.operators.observable.t3.f` @type ^`boolean` := v0 @kind boolean;
  #L27e19a.  v0:= v1.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` @kind object;
  #L27e19e.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27e1a4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.t3` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/t3;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27e1b8.  v0:= v2.`io.reactivex.internal.operators.observable.t3.f` @type ^`boolean` @kind boolean;
  #L27e1bc.  if v0 == 0 then goto L27e1c2;
  #L27e1c0.  return @kind void;
  #L27e1c2.  v0:= v2.`io.reactivex.internal.operators.observable.t3.d` @type ^`java.lang.Object` @kind object;
  #L27e1c6.  v1:= v2.`io.reactivex.internal.operators.observable.t3.c` @type ^`io.reactivex.d0.c` @kind object;
  #L27e1ca.  call temp:= `apply`(v1, v0, v3) @signature `Lio/reactivex/d0/c;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27e1d0.  v3:= temp @kind object;
  #L27e1d2.  v0:= "The accumulator returned a null value" @kind object;
  #L27e1d6.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27e1dc.  v3:= temp @kind object;
  #L27e1de.  v2.`io.reactivex.internal.operators.observable.t3.d` @type ^`java.lang.Object` := v3 @kind object;
  #L27e1e2.  v0:= v2.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` @kind object;
  #L27e1e6.  call `onNext`(v0, v3) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27e1ec.  return @kind void;
  #L27e1ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27e1f0.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27e1f6.  v0:= v2.`io.reactivex.internal.operators.observable.t3.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e1fa.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27e200.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/t3;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27e206.  return @kind void;
  catch `java.lang.Throwable` @[L27e1c6..L27e1de] goto L27e1ee;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.t3` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t3;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e224.  v0:= v1.`io.reactivex.internal.operators.observable.t3.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L27e228.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27e22e.  v0:= temp;
  #L27e230.  if v0 == 0 then goto L27e250;
  #L27e234.  v1.`io.reactivex.internal.operators.observable.t3.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27e238.  v2:= v1.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` @kind object;
  #L27e23c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27e242.  v2:= v1.`io.reactivex.internal.operators.observable.t3.b` @type ^`io.reactivex.t` @kind object;
  #L27e246.  v0:= v1.`io.reactivex.internal.operators.observable.t3.d` @type ^`java.lang.Object` @kind object;
  #L27e24a.  call `onNext`(v2, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27e250.  return @kind void;
}
