record `io.reactivex.internal.operators.observable.n0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.n0.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.n0.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.n0.d` @AccessFlag FINAL;
  `io.reactivex.x$a` `io.reactivex.internal.operators.observable.n0.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.n0.f` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.n0.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.n0` v0 @kind this, `io.reactivex.t` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.x$a` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/n0;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x$a;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L272c24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L272c2a.  v0.`io.reactivex.internal.operators.observable.n0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L272c2e.  v0.`io.reactivex.internal.operators.observable.n0.c` @type ^`long` := v2 @kind wide;
  #L272c32.  v0.`io.reactivex.internal.operators.observable.n0.d` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L272c36.  v0.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` := v5 @kind object;
  #L272c3a.  v0.`io.reactivex.internal.operators.observable.n0.f` @type ^`boolean` := v6 @kind boolean;
  #L272c3e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.n0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/n0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272c50.  v0:= v1.`io.reactivex.internal.operators.observable.n0.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L272c54.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L272c5a.  v0:= v1.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` @kind object;
  #L272c5e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L272c64.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.n0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/n0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272c04.  v0:= v1.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` @kind object;
  #L272c08.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L272c0e.  v0:= temp;
  #L272c10.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.n0` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/n0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L272c78.  v0:= v5.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` @kind object;
  #L272c7c.  v1:= new `io.reactivex.internal.operators.observable.n0$a`;
  #L272c80.  call `<init>`(v1, v5) @signature `Lio/reactivex/internal/operators/observable/n0$a;.<init>:(Lio/reactivex/internal/operators/observable/n0;)V` @kind direct;
  #L272c86.  v2:= v5.`io.reactivex.internal.operators.observable.n0.c` @type ^`long` @kind wide;
  #L272c8a.  v4:= v5.`io.reactivex.internal.operators.observable.n0.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L272c8e.  call temp:= `c`(v0, v1, v2, v4) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L272c94.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.n0` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/n0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L272ca8.  v0:= v4.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` @kind object;
  #L272cac.  v1:= new `io.reactivex.internal.operators.observable.n0$b`;
  #L272cb0.  call `<init>`(v1, v4, v5) @signature `Lio/reactivex/internal/operators/observable/n0$b;.<init>:(Lio/reactivex/internal/operators/observable/n0;Ljava/lang/Throwable;)V` @kind direct;
  #L272cb6.  v5:= v4.`io.reactivex.internal.operators.observable.n0.f` @type ^`boolean` @kind boolean;
  #L272cba.  if v5 == 0 then goto L272cc4;
  #L272cbe.  v2:= v4.`io.reactivex.internal.operators.observable.n0.c` @type ^`long` @kind wide;
  #L272cc2.  goto L272cc8;
  #L272cc4.  v2:= 0L;
  #L272cc8.  v5:= v4.`io.reactivex.internal.operators.observable.n0.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L272ccc.  call temp:= `c`(v0, v1, v2, v5) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L272cd2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.n0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/n0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L272ce4.  v0:= v4.`io.reactivex.internal.operators.observable.n0.e` @type ^`io.reactivex.x$a` @kind object;
  #L272ce8.  v1:= new `io.reactivex.internal.operators.observable.n0$c`;
  #L272cec.  call `<init>`(v1, v4, v5) @signature `Lio/reactivex/internal/operators/observable/n0$c;.<init>:(Lio/reactivex/internal/operators/observable/n0;Ljava/lang/Object;)V` @kind direct;
  #L272cf2.  v2:= v4.`io.reactivex.internal.operators.observable.n0.c` @type ^`long` @kind wide;
  #L272cf6.  v5:= v4.`io.reactivex.internal.operators.observable.n0.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L272cfa.  call temp:= `c`(v0, v1, v2, v5) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L272d00.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.n0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/n0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L272d14.  v0:= v1.`io.reactivex.internal.operators.observable.n0.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L272d18.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L272d1e.  v0:= temp;
  #L272d20.  if v0 == 0 then goto L272d32;
  #L272d24.  v1.`io.reactivex.internal.operators.observable.n0.g` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L272d28.  v2:= v1.`io.reactivex.internal.operators.observable.n0.b` @type ^`io.reactivex.t` @kind object;
  #L272d2c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L272d32.  return @kind void;
}
