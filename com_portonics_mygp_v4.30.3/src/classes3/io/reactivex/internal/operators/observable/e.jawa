record `io.reactivex.internal.operators.observable.e` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `io.reactivex.r` `io.reactivex.internal.operators.observable.e.b` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.e.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.e` v0 @kind this, `io.reactivex.r` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/e;.<init>:(Lio/reactivex/r;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26cd94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26cd9a.  v0.`io.reactivex.internal.operators.observable.e.b` @type ^`io.reactivex.r` := v1 @kind object;
  #L26cd9e.  v0.`io.reactivex.internal.operators.observable.e.c` @type ^`java.lang.Object` := v2 @kind object;
  #L26cda2.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.operators.observable.e` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/e;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26cd60.  v0:= new `io.reactivex.internal.operators.observable.d`;
  #L26cd64.  v1:= v2.`io.reactivex.internal.operators.observable.e.c` @type ^`java.lang.Object` @kind object;
  #L26cd68.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L26cd6e.  v1:= v2.`io.reactivex.internal.operators.observable.e.b` @type ^`io.reactivex.r` @kind object;
  #L26cd72.  call `subscribe`(v1, v0) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26cd78.  call temp:= `b`(v0) @signature `Lio/reactivex/internal/operators/observable/d;.b:()Lio/reactivex/internal/operators/observable/d$a;` @kind virtual;
  #L26cd7e.  v0:= temp @kind object;
  #L26cd80.  return v0 @kind object;
}
