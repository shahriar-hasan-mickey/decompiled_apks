record `io.reactivex.internal.operators.observable.ObservableConcatWithCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.c` `io.reactivex.internal.operators.observable.ObservableConcatWithCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableConcatWithCompletable` v0 @kind this, `io.reactivex.n` v1 @kind object, `io.reactivex.c` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithCompletable;.<init>:(Lio/reactivex/n;Lio/reactivex/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2719d8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2719de.  v0.`io.reactivex.internal.operators.observable.ObservableConcatWithCompletable.c` @type ^`io.reactivex.c` := v2 @kind object;
  #L2719e2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableConcatWithCompletable` v3 @kind this, `io.reactivex.t` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithCompletable;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2719f4.  v0:= v3.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2719f8.  v1:= new `io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver`;
  #L2719fc.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableConcatWithCompletable.c` @type ^`io.reactivex.c` @kind object;
  #L271a00.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatWithCompletable$ConcatWithObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/c;)V` @kind direct;
  #L271a06.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L271a0c.  return @kind void;
}
