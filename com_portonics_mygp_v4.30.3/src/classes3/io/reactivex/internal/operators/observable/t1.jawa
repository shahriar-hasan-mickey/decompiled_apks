record `io.reactivex.internal.operators.observable.t1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.t1.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.t1.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.t1` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/t1;.<init>:(Lio/reactivex/t;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L277748.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27774e.  v0.`io.reactivex.internal.operators.observable.t1.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L277752.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.t1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277764.  v0:= v1.`io.reactivex.internal.operators.observable.t1.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L277768.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27776e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.t1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277728.  v0:= v1.`io.reactivex.internal.operators.observable.t1.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27772c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L277732.  v0:= temp;
  #L277734.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.t1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277780.  v0:= v1.`io.reactivex.internal.operators.observable.t1.b` @type ^`io.reactivex.t` @kind object;
  #L277784.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27778a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.t1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27779c.  v0:= v1.`io.reactivex.internal.operators.observable.t1.b` @type ^`io.reactivex.t` @kind object;
  #L2777a0.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2777a6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.t1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2777b8.  v0:= v1.`io.reactivex.internal.operators.observable.t1.b` @type ^`io.reactivex.t` @kind object;
  #L2777bc.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2777c2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.t1` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2777d4.  v0:= v1.`io.reactivex.internal.operators.observable.t1.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L2777d8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2777de.  v0:= temp;
  #L2777e0.  if v0 == 0 then goto L2777f2;
  #L2777e4.  v1.`io.reactivex.internal.operators.observable.t1.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2777e8.  v2:= v1.`io.reactivex.internal.operators.observable.t1.b` @type ^`io.reactivex.t` @kind object;
  #L2777ec.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2777f2.  return @kind void;
}
