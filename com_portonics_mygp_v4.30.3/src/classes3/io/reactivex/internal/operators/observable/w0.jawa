record `io.reactivex.internal.operators.observable.w0` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.w0.g` @AccessFlag FINAL;
  `io.reactivex.d0.d` `io.reactivex.internal.operators.observable.w0.h` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.w0.i` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.w0.j` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.w0` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `io.reactivex.d0.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/w0;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;Lio/reactivex/d0/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L273500.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L273506.  v0.`io.reactivex.internal.operators.observable.w0.g` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27350a.  v0.`io.reactivex.internal.operators.observable.w0.h` @type ^`io.reactivex.d0.d` := v3 @kind object;
  #L27350e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.w0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/w0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L273520.  v0:= v3.`io.reactivex.internal.observers.a.e` @type ^`boolean` @kind boolean;
  #L273524.  if v0 == 0 then goto L27352a;
  #L273528.  return @kind void;
  #L27352a.  v0:= v3.`io.reactivex.internal.observers.a.f` @type ^`int`;
  #L27352e.  if v0 == 0 then goto L27353e;
  #L273532.  v0:= v3.`io.reactivex.internal.observers.a.b` @type ^`io.reactivex.t` @kind object;
  #L273536.  call `onNext`(v0, v4) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27353c.  return @kind void;
  #L27353e.  v0:= v3.`io.reactivex.internal.operators.observable.w0.g` @type ^`io.reactivex.d0.k` @kind object;
  #L273542.  call temp:= `apply`(v0, v4) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L273548.  v0:= temp @kind object;
  #L27354a.  v1:= v3.`io.reactivex.internal.operators.observable.w0.j` @type ^`boolean` @kind boolean;
  #L27354e.  if v1 == 0 then goto L27356c;
  #L273552.  v1:= v3.`io.reactivex.internal.operators.observable.w0.h` @type ^`io.reactivex.d0.d` @kind object;
  #L273556.  v2:= v3.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` @kind object;
  #L27355a.  call temp:= `a`(v1, v2, v0) @signature `Lio/reactivex/d0/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #L273560.  v1:= temp;
  #L273562.  v3.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` := v0 @kind object;
  #L273566.  if v1 == 0 then goto L273576;
  #L27356a.  return @kind void;
  #L27356c.  v1:= 1I;
  #L27356e.  v3.`io.reactivex.internal.operators.observable.w0.j` @type ^`boolean` := v1 @kind boolean;
  #L273572.  v3.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` := v0 @kind object;
  #L273576.  v0:= v3.`io.reactivex.internal.observers.a.b` @type ^`io.reactivex.t` @kind object;
  #L27357a.  call `onNext`(v0, v4) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L273580.  return @kind void;
  #L273582.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273584.  call `c`(v3, v4) @signature `Lio/reactivex/internal/observers/a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27358a.  return @kind void;
  catch `java.lang.Throwable` @[L27353e..L273576] goto L273582;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.w0` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/w0;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27349c.  v0:= v4.`io.reactivex.internal.observers.a.d` @type ^`io.reactivex.e0.a.e` @kind object;
  #L2734a0.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L2734a6.  v0:= temp @kind object;
  #L2734a8.  if v0 != 0 then goto L2734b0;
  #L2734ac.  v0:= 0I;
  #L2734ae.  return v0 @kind object;
  #L2734b0.  v1:= v4.`io.reactivex.internal.operators.observable.w0.g` @type ^`io.reactivex.d0.k` @kind object;
  #L2734b4.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2734ba.  v1:= temp @kind object;
  #L2734bc.  v2:= v4.`io.reactivex.internal.operators.observable.w0.j` @type ^`boolean` @kind boolean;
  #L2734c0.  if v2 != 0 then goto L2734d0;
  #L2734c4.  v2:= 1I;
  #L2734c6.  v4.`io.reactivex.internal.operators.observable.w0.j` @type ^`boolean` := v2 @kind boolean;
  #L2734ca.  v4.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` := v1 @kind object;
  #L2734ce.  return v0 @kind object;
  #L2734d0.  v2:= v4.`io.reactivex.internal.operators.observable.w0.h` @type ^`io.reactivex.d0.d` @kind object;
  #L2734d4.  v3:= v4.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` @kind object;
  #L2734d8.  call temp:= `a`(v2, v3, v1) @signature `Lio/reactivex/d0/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #L2734de.  v2:= temp;
  #L2734e0.  if v2 != 0 then goto L2734ea;
  #L2734e4.  v4.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` := v1 @kind object;
  #L2734e8.  return v0 @kind object;
  #L2734ea.  v4.`io.reactivex.internal.operators.observable.w0.i` @type ^`java.lang.Object` := v1 @kind object;
  #L2734ee.  goto L27349c;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.w0` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/w0;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L273480.  call temp:= `d`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.d:(I)I` @kind virtual;
  #L273486.  v1:= temp;
  #L273488.  return v1;
}
