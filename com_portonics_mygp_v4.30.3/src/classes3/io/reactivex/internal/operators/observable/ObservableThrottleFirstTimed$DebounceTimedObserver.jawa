record `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface, `java.lang.Runnable` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @AccessFlag ;
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.gate` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.timeout` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.upstream` @AccessFlag ;
  `io.reactivex.x$a` `io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v0 @kind this, `io.reactivex.t` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.x$a` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L280d70.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L280d76.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.t` := v1 @kind object;
  #L280d7a.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.timeout` @type ^`long` := v2 @kind wide;
  #L280d7e.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L280d82.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` := v5 @kind object;
  #L280d86.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280d98.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L280d9c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L280da2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` @kind object;
  #L280da6.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L280dac.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280d50.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` @kind object;
  #L280d54.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L280d5a.  v0:= temp;
  #L280d5c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280dc0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L280dc4.  if v0 != 0 then goto L280de2;
  #L280dc8.  v0:= 1I;
  #L280dca.  v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L280dce.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L280dd2.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L280dd8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` @kind object;
  #L280ddc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L280de2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280df4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L280df8.  if v0 == 0 then goto L280e04;
  #L280dfc.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L280e02.  goto L280e1e;
  #L280e04.  v0:= 1I;
  #L280e06.  v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L280e0a.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L280e0e.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L280e14.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` @kind object;
  #L280e18.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L280e1e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L280e30.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.gate` @type ^`boolean` @kind boolean;
  #L280e34.  if v0 != 0 then goto L280e80;
  #L280e38.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.done` @type ^`boolean` @kind boolean;
  #L280e3c.  if v0 != 0 then goto L280e80;
  #L280e40.  v0:= 1I;
  #L280e42.  v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.gate` @type ^`boolean` := v0 @kind boolean;
  #L280e46.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L280e4a.  call `onNext`(v0, v4) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L280e50.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L280e56.  v4:= temp @kind object;
  #L280e58.  v4:= (`io.reactivex.disposables.b`) v4 @kind object;
  #L280e5c.  if v4 == 0 then goto L280e66;
  #L280e60.  call `dispose`(v4) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L280e66.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.worker` @type ^`io.reactivex.x$a` @kind object;
  #L280e6a.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.timeout` @type ^`long` @kind wide;
  #L280e6e.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L280e72.  call temp:= `c`(v4, v3, v0, v2) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L280e78.  v4:= temp @kind object;
  #L280e7a.  call temp:= `replace`(v3, v4) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L280e80.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280e94.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L280e98.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L280e9e.  v0:= temp;
  #L280ea0.  if v0 == 0 then goto L280eb2;
  #L280ea4.  v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L280ea8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L280eac.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L280eb2.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleFirstTimed$DebounceTimedObserver;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280ec4.  v0:= 0I;
  #L280ec6.  v1.`io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver.gate` @type ^`boolean` := v0 @kind boolean;
  #L280eca.  return @kind void;
}
