record `io.reactivex.internal.operators.observable.o1` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.b` @kind class {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.o1.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.operators.observable.o1.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.o1.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.o1.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.o1.f` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.o1` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/o1;.<init>:(Lio/reactivex/t;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2763a8.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/b;.<init>:()V` @kind direct;
  #L2763ae.  v0.`io.reactivex.internal.operators.observable.o1.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2763b2.  v0.`io.reactivex.internal.operators.observable.o1.c` @type ^`java.lang.Object`[] := v2 @kind object;
  #L2763b6.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.o1` v5 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2763fc.  v0:= v5.`io.reactivex.internal.operators.observable.o1.c` @type ^`java.lang.Object`[] @kind object;
  #L276400.  v1:= length @variable v0;
  #L276402.  v2:= 0I;
  #L276404.  if v2 >= v1 then goto L27646e;
  #L276408.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/internal/operators/observable/o1;.isDisposed:()Z` @kind virtual;
  #L27640e.  v3:= temp;
  #L276410.  if v3 != 0 then goto L27646e;
  #L276414.  v3:= v0[v2] @kind object;
  #L276418.  if v3 != 0 then goto L27645e;
  #L27641c.  v0:= v5.`io.reactivex.internal.operators.observable.o1.b` @type ^`io.reactivex.t` @kind object;
  #L276420.  v1:= new `java.lang.NullPointerException`;
  #L276424.  v3:= new `java.lang.StringBuilder`;
  #L276428.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27642e.  v4:= "The " @kind object;
  #L276432.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276438.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27643e.  v2:= "th element is null" @kind object;
  #L276442.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276448.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27644e.  v2:= temp @kind object;
  #L276450.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L276456.  call `onError`(v0, v1) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27645c.  return @kind void;
  #L27645e.  v4:= v5.`io.reactivex.internal.operators.observable.o1.b` @type ^`io.reactivex.t` @kind object;
  #L276462.  call `onNext`(v4, v3) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L276468.  v2:= v2 + 1;
  #L27646c.  goto L276404;
  #L27646e.  call temp:= `isDisposed`(v5) @signature `Lio/reactivex/internal/operators/observable/o1;.isDisposed:()Z` @kind virtual;
  #L276474.  v0:= temp;
  #L276476.  if v0 != 0 then goto L276484;
  #L27647a.  v0:= v5.`io.reactivex.internal.operators.observable.o1.b` @type ^`io.reactivex.t` @kind object;
  #L27647e.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L276484.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.o1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2763c8.  v0:= v1.`io.reactivex.internal.operators.observable.o1.c` @type ^`java.lang.Object`[] @kind object;
  #L2763cc.  v0:= length @variable v0;
  #L2763ce.  v1.`io.reactivex.internal.operators.observable.o1.d` @type ^`int` := v0;
  #L2763d2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.o1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2763e4.  v0:= 1I;
  #L2763e6.  v1.`io.reactivex.internal.operators.observable.o1.f` @type ^`boolean` := v0 @kind boolean;
  #L2763ea.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.o1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276308.  v0:= v1.`io.reactivex.internal.operators.observable.o1.f` @type ^`boolean` @kind boolean;
  #L27630c.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.o1` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276320.  v0:= v2.`io.reactivex.internal.operators.observable.o1.d` @type ^`int`;
  #L276324.  v1:= v2.`io.reactivex.internal.operators.observable.o1.c` @type ^`java.lang.Object`[] @kind object;
  #L276328.  v1:= length @variable v1;
  #L27632a.  if v0 != v1 then goto L276332;
  #L27632e.  v0:= 1I;
  #L276330.  goto L276334;
  #L276332.  v0:= 0I;
  #L276334.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.o1` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/o1;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27636c.  v0:= v3.`io.reactivex.internal.operators.observable.o1.d` @type ^`int`;
  #L276370.  v1:= v3.`io.reactivex.internal.operators.observable.o1.c` @type ^`java.lang.Object`[] @kind object;
  #L276374.  v2:= length @variable v1;
  #L276376.  if v0 == v2 then goto L276394;
  #L27637a.  v2:= v0 + 1;
  #L27637e.  v3.`io.reactivex.internal.operators.observable.o1.d` @type ^`int` := v2;
  #L276382.  v0:= v1[v0] @kind object;
  #L276386.  v1:= "The array element is null" @kind object;
  #L27638a.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L276390.  v0:= temp @kind object;
  #L276392.  return v0 @kind object;
  #L276394.  v0:= 0I;
  #L276396.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.o1` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/o1;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276348.  v0:= 1I;
  #L27634a.  v2:= v2 ^& v0 @kind int;
  #L27634c.  if v2 == 0 then goto L276356;
  #L276350.  v1.`io.reactivex.internal.operators.observable.o1.e` @type ^`boolean` := v0 @kind boolean;
  #L276354.  return v0;
  #L276356.  v2:= 0I;
  #L276358.  return v2;
}
