record `io.reactivex.internal.operators.observable.f1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.observable.f1.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.f1.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.f1.d` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.f1.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.f1.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.f1` v0 @kind this, `io.reactivex.j` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/f1;.<init>:(Lio/reactivex/j;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L273e04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L273e0a.  v0.`io.reactivex.internal.operators.observable.f1.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L273e0e.  v0.`io.reactivex.internal.operators.observable.f1.c` @type ^`long` := v2 @kind wide;
  #L273e12.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.f1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273e24.  v0:= v1.`io.reactivex.internal.operators.observable.f1.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L273e28.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273e2e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.f1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273de4.  v0:= v1.`io.reactivex.internal.operators.observable.f1.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L273de8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L273dee.  v0:= temp;
  #L273df0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.f1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273e40.  v0:= v1.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` @kind boolean;
  #L273e44.  if v0 != 0 then goto L273e58;
  #L273e48.  v0:= 1I;
  #L273e4a.  v1.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` := v0 @kind boolean;
  #L273e4e.  v0:= v1.`io.reactivex.internal.operators.observable.f1.b` @type ^`io.reactivex.j` @kind object;
  #L273e52.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L273e58.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.f1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/f1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273e6c.  v0:= v1.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` @kind boolean;
  #L273e70.  if v0 == 0 then goto L273e7c;
  #L273e74.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L273e7a.  return @kind void;
  #L273e7c.  v0:= 1I;
  #L273e7e.  v1.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` := v0 @kind boolean;
  #L273e82.  v0:= v1.`io.reactivex.internal.operators.observable.f1.b` @type ^`io.reactivex.j` @kind object;
  #L273e86.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L273e8c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.f1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/f1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L273ea0.  v0:= v5.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` @kind boolean;
  #L273ea4.  if v0 == 0 then goto L273eaa;
  #L273ea8.  return @kind void;
  #L273eaa.  v0:= v5.`io.reactivex.internal.operators.observable.f1.e` @type ^`long` @kind wide;
  #L273eae.  v2:= v5.`io.reactivex.internal.operators.observable.f1.c` @type ^`long` @kind wide;
  #L273eb2.  v4:= lcmp(v0, v2);
  #L273eb6.  if v4 != 0 then goto L273ed6;
  #L273eba.  v0:= 1I;
  #L273ebc.  v5.`io.reactivex.internal.operators.observable.f1.f` @type ^`boolean` := v0 @kind boolean;
  #L273ec0.  v0:= v5.`io.reactivex.internal.operators.observable.f1.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L273ec4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273eca.  v0:= v5.`io.reactivex.internal.operators.observable.f1.b` @type ^`io.reactivex.j` @kind object;
  #L273ece.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L273ed4.  return @kind void;
  #L273ed6.  v2:= 1L;
  #L273eda.  v0:= v0 + v2 @kind long;
  #L273edc.  v5.`io.reactivex.internal.operators.observable.f1.e` @type ^`long` := v0 @kind wide;
  #L273ee0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.f1` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/f1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273ef4.  v0:= v1.`io.reactivex.internal.operators.observable.f1.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L273ef8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L273efe.  v0:= temp;
  #L273f00.  if v0 == 0 then goto L273f12;
  #L273f04.  v1.`io.reactivex.internal.operators.observable.f1.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L273f08.  v2:= v1.`io.reactivex.internal.operators.observable.f1.b` @type ^`io.reactivex.j` @kind object;
  #L273f0c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L273f12.  return @kind void;
}
