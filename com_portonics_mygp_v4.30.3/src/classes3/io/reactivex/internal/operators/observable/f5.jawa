record `io.reactivex.internal.operators.observable.f5` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.j` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface, `java.lang.Runnable` @kind interface {
  `long` `io.reactivex.internal.operators.observable.f5.i` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.f5.j` @AccessFlag FINAL;
  `io.reactivex.x` `io.reactivex.internal.operators.observable.f5.k` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.f5.l` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.f5.m` @AccessFlag ;
  `io.reactivex.subjects.UnicastSubject` `io.reactivex.internal.operators.observable.f5.n` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.f5.o` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.f5.p` @AccessFlag VOLATILE;
}
global `java.lang.Object` `@@io.reactivex.internal.operators.observable.f5.h` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/f5;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L284388.  v0:= new `java.lang.Object`;
  #L28438c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L284392.  `@@io.reactivex.internal.operators.observable.f5.h` @type ^`java.lang.Object` := v0 @kind object;
  #L284396.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.f5` v1 @kind this, `io.reactivex.t` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.x` v6 @kind object, `int` v7 ) @signature `Lio/reactivex/internal/operators/observable/f5;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2843a8.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L2843ac.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L2843b2.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/j;.<init>:(Lio/reactivex/t;Lio/reactivex/e0/a/i;)V` @kind direct;
  #L2843b8.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L2843bc.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L2843c2.  v1.`io.reactivex.internal.operators.observable.f5.o` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L2843c6.  v1.`io.reactivex.internal.operators.observable.f5.i` @type ^`long` := v3 @kind wide;
  #L2843ca.  v1.`io.reactivex.internal.operators.observable.f5.j` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L2843ce.  v1.`io.reactivex.internal.operators.observable.f5.k` @type ^`io.reactivex.x` := v6 @kind object;
  #L2843d2.  v1.`io.reactivex.internal.operators.observable.f5.l` @type ^`int` := v7;
  #L2843d6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.f5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2843e8.  v0:= 1I;
  #L2843ea.  v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v0 @kind boolean;
  #L2843ee.  return @kind void;
}
procedure `void` `i`(`io.reactivex.internal.operators.observable.f5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.i:()V` @AccessFlag  {
    temp;
    v0;

  #L284400.  v0:= v1.`io.reactivex.internal.operators.observable.f5.o` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L284404.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L28440a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.f5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284370.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284374.  return v0;
}
procedure `void` `j`(`io.reactivex.internal.operators.observable.f5` v7 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.j:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28441c.  v0:= v7.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284420.  v0:= (`io.reactivex.internal.queue.MpscLinkedQueue`) v0 @kind object;
  #L284424.  v1:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284428.  v2:= v7.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L28442c.  v3:= 1I;
  #L28442e.  v4:= v7.`io.reactivex.internal.operators.observable.f5.p` @type ^`boolean` @kind boolean;
  #L284432.  v5:= v7.`io.reactivex.internal.observers.j.f` @type ^`boolean` @kind boolean;
  #L284436.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L28443c.  v6:= temp @kind object;
  #L28443e.  if v5 == 0 then goto L284478;
  #L284442.  if v6 == 0 then goto L28444e;
  #L284446.  v5:= `@@io.reactivex.internal.operators.observable.f5.h` @type ^`java.lang.Object` @kind object;
  #L28444a.  if v6 != v5 then goto L284478;
  #L28444e.  v1:= 0I;
  #L284450.  v7.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` := v1 @kind object;
  #L284454.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.clear:()V` @kind virtual;
  #L28445a.  call `i`(v7) @signature `Lio/reactivex/internal/operators/observable/f5;.i:()V` @kind virtual;
  #L284460.  v0:= v7.`io.reactivex.internal.observers.j.g` @type ^`java.lang.Throwable` @kind object;
  #L284464.  if v0 == 0 then goto L284470;
  #L284468.  call `onError`(v2, v0) @signature `Lio/reactivex/subjects/UnicastSubject;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L28446e.  goto L284476;
  #L284470.  call `onComplete`(v2) @signature `Lio/reactivex/subjects/UnicastSubject;.onComplete:()V` @kind virtual;
  #L284476.  return @kind void;
  #L284478.  if v6 != 0 then goto L28448c;
  #L28447c.  v3:= -v3 @kind int;
  #L28447e.  call temp:= `d`(v7, v3) @signature `Lio/reactivex/internal/observers/j;.d:(I)I` @kind virtual;
  #L284484.  v3:= temp;
  #L284486.  if v3 != 0 then goto L28442e;
  #L28448a.  return @kind void;
  #L28448c.  v5:= `@@io.reactivex.internal.operators.observable.f5.h` @type ^`java.lang.Object` @kind object;
  #L284490.  if v6 != v5 then goto L2844c2;
  #L284494.  call `onComplete`(v2) @signature `Lio/reactivex/subjects/UnicastSubject;.onComplete:()V` @kind virtual;
  #L28449a.  if v4 != 0 then goto L2844b6;
  #L28449e.  v2:= v7.`io.reactivex.internal.operators.observable.f5.l` @type ^`int`;
  #L2844a2.  call temp:= `y`(v2) @signature `Lio/reactivex/subjects/UnicastSubject;.y:(I)Lio/reactivex/subjects/UnicastSubject;` @kind static;
  #L2844a8.  v2:= temp @kind object;
  #L2844aa.  v7.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` := v2 @kind object;
  #L2844ae.  call `onNext`(v1, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2844b4.  goto L28442e;
  #L2844b6.  v4:= v7.`io.reactivex.internal.operators.observable.f5.m` @type ^`io.reactivex.disposables.b` @kind object;
  #L2844ba.  call `dispose`(v4) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2844c0.  goto L28442e;
  #L2844c2.  call temp:= `getValue`(v6) @signature `Lio/reactivex/internal/util/NotificationLite;.getValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2844c8.  v4:= temp @kind object;
  #L2844ca.  call `onNext`(v2, v4) @signature `Lio/reactivex/subjects/UnicastSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L2844d0.  goto L28442e;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.f5` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2844e4.  v0:= 1I;
  #L2844e6.  v1.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L2844ea.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L2844f0.  v0:= temp;
  #L2844f2.  if v0 == 0 then goto L2844fc;
  #L2844f6.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/f5;.j:()V` @kind virtual;
  #L2844fc.  call `i`(v1) @signature `Lio/reactivex/internal/operators/observable/f5;.i:()V` @kind virtual;
  #L284502.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284506.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L28450c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.f5` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/f5;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284520.  v1.`io.reactivex.internal.observers.j.g` @type ^`java.lang.Throwable` := v2 @kind object;
  #L284524.  v0:= 1I;
  #L284526.  v1.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L28452a.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284530.  v0:= temp;
  #L284532.  if v0 == 0 then goto L28453c;
  #L284536.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/f5;.j:()V` @kind virtual;
  #L28453c.  call `i`(v1) @signature `Lio/reactivex/internal/operators/observable/f5;.i:()V` @kind virtual;
  #L284542.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L284546.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28454c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.f5` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/f5;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284560.  v0:= v1.`io.reactivex.internal.operators.observable.f5.p` @type ^`boolean` @kind boolean;
  #L284564.  if v0 == 0 then goto L28456a;
  #L284568.  return @kind void;
  #L28456a.  call temp:= `f`(v1) @signature `Lio/reactivex/internal/observers/j;.f:()Z` @kind virtual;
  #L284570.  v0:= temp;
  #L284572.  if v0 == 0 then goto L284590;
  #L284576.  v0:= v1.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L28457a.  call `onNext`(v0, v2) @signature `Lio/reactivex/subjects/UnicastSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L284580.  v2:= -1I;
  #L284582.  call temp:= `d`(v1, v2) @signature `Lio/reactivex/internal/observers/j;.d:(I)I` @kind virtual;
  #L284588.  v2:= temp;
  #L28458a.  if v2 != 0 then goto L2845b0;
  #L28458e.  return @kind void;
  #L284590.  v0:= v1.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284594.  call temp:= `next`(v2) @signature `Lio/reactivex/internal/util/NotificationLite;.next:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28459a.  v2:= temp @kind object;
  #L28459c.  call temp:= `offer`(v0, v2) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L2845a2.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L2845a8.  v2:= temp;
  #L2845aa.  if v2 != 0 then goto L2845b0;
  #L2845ae.  return @kind void;
  #L2845b0.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/f5;.j:()V` @kind virtual;
  #L2845b6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.f5` v7 @kind this, `io.reactivex.disposables.b` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/f5;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2845c8.  v0:= v7.`io.reactivex.internal.operators.observable.f5.m` @type ^`io.reactivex.disposables.b` @kind object;
  #L2845cc.  call temp:= `validate`(v0, v8) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2845d2.  v0:= temp;
  #L2845d4.  if v0 == 0 then goto L28462a;
  #L2845d8.  v7.`io.reactivex.internal.operators.observable.f5.m` @type ^`io.reactivex.disposables.b` := v8 @kind object;
  #L2845dc.  v8:= v7.`io.reactivex.internal.operators.observable.f5.l` @type ^`int`;
  #L2845e0.  call temp:= `y`(v8) @signature `Lio/reactivex/subjects/UnicastSubject;.y:(I)Lio/reactivex/subjects/UnicastSubject;` @kind static;
  #L2845e6.  v8:= temp @kind object;
  #L2845e8.  v7.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` := v8 @kind object;
  #L2845ec.  v8:= v7.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L2845f0.  call `onSubscribe`(v8, v7) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2845f6.  v0:= v7.`io.reactivex.internal.operators.observable.f5.n` @type ^`io.reactivex.subjects.UnicastSubject` @kind object;
  #L2845fa.  call `onNext`(v8, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L284600.  v8:= v7.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284604.  if v8 != 0 then goto L28462a;
  #L284608.  v0:= v7.`io.reactivex.internal.operators.observable.f5.k` @type ^`io.reactivex.x` @kind object;
  #L28460c.  v4:= v7.`io.reactivex.internal.operators.observable.f5.i` @type ^`long` @kind wide;
  #L284610.  v6:= v7.`io.reactivex.internal.operators.observable.f5.j` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L284614.  v1:= v7 @kind object;
  #L284616.  v2:= v4 @kind wide;
  #L284618.  call temp:= `e`(v0, v1, v2, v4, v6) @signature `Lio/reactivex/x;.e:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L28461e.  v8:= temp @kind object;
  #L284620.  v0:= v7.`io.reactivex.internal.operators.observable.f5.o` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L284624.  call temp:= `replace`(v0, v8) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L28462a.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.f5` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/f5;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28463c.  v0:= v2.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L284640.  if v0 == 0 then goto L284650;
  #L284644.  v0:= 1I;
  #L284646.  v2.`io.reactivex.internal.operators.observable.f5.p` @type ^`boolean` := v0 @kind boolean;
  #L28464a.  call `i`(v2) @signature `Lio/reactivex/internal/operators/observable/f5;.i:()V` @kind virtual;
  #L284650.  v0:= v2.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L284654.  v1:= `@@io.reactivex.internal.operators.observable.f5.h` @type ^`java.lang.Object` @kind object;
  #L284658.  call temp:= `offer`(v0, v1) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L28465e.  call temp:= `e`(v2) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L284664.  v0:= temp;
  #L284666.  if v0 == 0 then goto L284670;
  #L28466a.  call `j`(v2) @signature `Lio/reactivex/internal/operators/observable/f5;.j:()V` @kind virtual;
  #L284670.  return @kind void;
}
