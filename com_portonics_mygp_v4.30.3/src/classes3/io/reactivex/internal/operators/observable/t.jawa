record `io.reactivex.internal.operators.observable.t` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.j` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.t.h` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.t.i` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.t.j` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.t.k` @AccessFlag FINAL;
  `java.util.Collection` `io.reactivex.internal.operators.observable.t.l` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.t` v1 @kind this, `io.reactivex.t` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L26e8a8.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L26e8ac.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L26e8b2.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/j;.<init>:(Lio/reactivex/t;Lio/reactivex/e0/a/i;)V` @kind direct;
  #L26e8b8.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L26e8bc.  call `<init>`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L26e8c2.  v1.`io.reactivex.internal.operators.observable.t.k` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L26e8c6.  v1.`io.reactivex.internal.operators.observable.t.h` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L26e8ca.  v1.`io.reactivex.internal.operators.observable.t.i` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L26e8ce.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.t` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.c:(Lio/reactivex/t;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L26e8e0.  v2:= (`java.util.Collection`) v2 @kind object;
  #L26e8e4.  call `i`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/t;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @kind virtual;
  #L26e8ea.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.t` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26e918.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26e91c.  if v0 != 0 then goto L26e94c;
  #L26e920.  v0:= 1I;
  #L26e922.  v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v0 @kind boolean;
  #L26e926.  v0:= v1.`io.reactivex.internal.operators.observable.t.j` @type ^`io.reactivex.disposables.b` @kind object;
  #L26e92a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26e930.  call `j`(v1) @signature `Lio/reactivex/internal/operators/observable/t;.j:()V` @kind virtual;
  #L26e936.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L26e93c.  v0:= temp;
  #L26e93e.  if v0 == 0 then goto L26e94c;
  #L26e942.  v0:= v1.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26e946.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L26e94c.  return @kind void;
}
procedure `void` `i`(`io.reactivex.internal.operators.observable.t` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L26e8fc.  v1:= v0.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26e900.  call `onNext`(v1, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L26e906.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.t` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26e890.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26e894.  return v0;
}
procedure `void` `j`(`io.reactivex.internal.operators.observable.t` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/t;.j:()V` @AccessFlag  {
    temp;
    v0;

  #L26e960.  v0:= v1.`io.reactivex.internal.operators.observable.t.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L26e964.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L26e96a.  return @kind void;
}
procedure `void` `k`(`io.reactivex.internal.operators.observable.t` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/t;.k:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26e97c.  v0:= v4.`io.reactivex.internal.operators.observable.t.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26e980.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26e986.  v0:= temp @kind object;
  #L26e988.  v1:= "The buffer supplied is null" @kind object;
  #L26e98c.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26e992.  v0:= temp @kind object;
  #L26e994.  v0:= (`java.util.Collection`) v0 @kind object;
  #L26e998.  v1:= v4.`io.reactivex.internal.operators.observable.t.i` @type ^`java.util.concurrent.Callable` @kind object;
  #L26e99c.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26e9a2.  v1:= temp @kind object;
  #L26e9a4.  v2:= "The boundary ObservableSource supplied is null" @kind object;
  #L26e9a8.  call temp:= `e`(v1, v2) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26e9ae.  v1:= temp @kind object;
  #L26e9b0.  v1:= (`io.reactivex.r`) v1 @kind object;
  #L26e9b4.  v2:= new `io.reactivex.internal.operators.observable.s`;
  #L26e9b8.  call `<init>`(v2, v4) @signature `Lio/reactivex/internal/operators/observable/s;.<init>:(Lio/reactivex/internal/operators/observable/t;)V` @kind direct;
  #L26e9be.  v3:= v4.`io.reactivex.internal.operators.observable.t.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L26e9c2.  call temp:= `replace`(v3, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26e9c8.  v3:= temp;
  #L26e9ca.  if v3 == 0 then goto L26e9f8;
  #L26e9ce.  @monitorenter v4
  #L26e9d0.  v3:= v4.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` @kind object;
  #L26e9d4.  if v3 != 0 then goto L26e9dc;
  #L26e9d8.  @monitorexit v4
  #L26e9da.  return @kind void;
  #L26e9dc.  v4.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` := v0 @kind object;
  #L26e9e0.  @monitorexit v4
  #L26e9e2.  call `subscribe`(v1, v2) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26e9e8.  v0:= 0I;
  #L26e9ea.  call `g`(v4, v3, v0, v4) @signature `Lio/reactivex/internal/observers/j;.g:(Ljava/lang/Object;ZLio/reactivex/disposables/b;)V` @kind virtual;
  #L26e9f0.  goto L26e9f8;
  #L26e9f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26e9f4.  @monitorexit v4
  #L26e9f6.  throw v0;
  #L26e9f8.  return @kind void;
  #L26e9fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26e9fc.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26ea02.  v1:= 1I;
  #L26ea04.  v4.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v1 @kind boolean;
  #L26ea08.  v1:= v4.`io.reactivex.internal.operators.observable.t.j` @type ^`io.reactivex.disposables.b` @kind object;
  #L26ea0c.  call `dispose`(v1) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26ea12.  v1:= v4.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26ea16.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26ea1c.  return @kind void;
  #L26ea1e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ea20.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26ea26.  call `dispose`(v4) @signature `Lio/reactivex/internal/operators/observable/t;.dispose:()V` @kind virtual;
  #L26ea2c.  v1:= v4.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26ea30.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26ea36.  return @kind void;
  catch `java.lang.Throwable` @[L26e97c..L26e998] goto L26ea1e;
  catch `java.lang.Throwable` @[L26e998..L26e9b4] goto L26e9fa;
  catch `java.lang.Throwable` @[L26e9d0..L26e9e2] goto L26e9f2;
  catch `java.lang.Throwable` @[L26e9f4..L26e9f6] goto L26e9f2;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.t` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/t;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26ea70.  @monitorenter v3
  #L26ea72.  v0:= v3.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` @kind object;
  #L26ea76.  if v0 != 0 then goto L26ea7e;
  #L26ea7a.  @monitorexit v3
  #L26ea7c.  return @kind void;
  #L26ea7e.  v1:= 0I;
  #L26ea80.  v3.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` := v1 @kind object;
  #L26ea84.  @monitorexit v3
  #L26ea86.  v1:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26ea8a.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L26ea90.  v0:= 1I;
  #L26ea92.  v3.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L26ea96.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L26ea9c.  v0:= temp;
  #L26ea9e.  if v0 == 0 then goto L26eab2;
  #L26eaa2.  v0:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26eaa6.  v1:= v3.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26eaaa.  v2:= 0I;
  #L26eaac.  call `c`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/internal/util/k;.c:(Lio/reactivex/e0/a/i;Lio/reactivex/t;ZLio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)V` @kind static;
  #L26eab2.  return @kind void;
  #L26eab4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26eab6.  @monitorexit v3
  #L26eab8.  throw v0;
  catch `java.lang.Throwable` @[L26ea72..L26ea86] goto L26eab4;
  catch `java.lang.Throwable` @[L26eab6..L26eab8] goto L26eab4;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.t` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26eae0.  call `dispose`(v1) @signature `Lio/reactivex/internal/operators/observable/t;.dispose:()V` @kind virtual;
  #L26eae6.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26eaea.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26eaf0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26eb04.  @monitorenter v1
  #L26eb06.  v0:= v1.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` @kind object;
  #L26eb0a.  if v0 != 0 then goto L26eb12;
  #L26eb0e.  @monitorexit v1
  #L26eb10.  return @kind void;
  #L26eb12.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26eb18.  @monitorexit v1
  #L26eb1a.  return @kind void;
  #L26eb1c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26eb1e.  @monitorexit v1
  #L26eb20.  throw v2;
  catch `java.lang.Throwable` @[L26eb06..L26eb20] goto L26eb1c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.t` v4 @kind this, `io.reactivex.disposables.b` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26eb40.  v0:= v4.`io.reactivex.internal.operators.observable.t.j` @type ^`io.reactivex.disposables.b` @kind object;
  #L26eb44.  call temp:= `validate`(v0, v5) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26eb4a.  v0:= temp;
  #L26eb4c.  if v0 == 0 then goto L26ebf2;
  #L26eb50.  v4.`io.reactivex.internal.operators.observable.t.j` @type ^`io.reactivex.disposables.b` := v5 @kind object;
  #L26eb54.  v0:= v4.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26eb58.  v1:= 1I;
  #L26eb5a.  v2:= v4.`io.reactivex.internal.operators.observable.t.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26eb5e.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26eb64.  v2:= temp @kind object;
  #L26eb66.  v3:= "The buffer supplied is null" @kind object;
  #L26eb6a.  call temp:= `e`(v2, v3) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26eb70.  v2:= temp @kind object;
  #L26eb72.  v2:= (`java.util.Collection`) v2 @kind object;
  #L26eb76.  v4.`io.reactivex.internal.operators.observable.t.l` @type ^`java.util.Collection` := v2 @kind object;
  #L26eb7a.  v2:= v4.`io.reactivex.internal.operators.observable.t.i` @type ^`java.util.concurrent.Callable` @kind object;
  #L26eb7e.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26eb84.  v2:= temp @kind object;
  #L26eb86.  v3:= "The boundary ObservableSource supplied is null" @kind object;
  #L26eb8a.  call temp:= `e`(v2, v3) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26eb90.  v2:= temp @kind object;
  #L26eb92.  v2:= (`io.reactivex.r`) v2 @kind object;
  #L26eb96.  v5:= new `io.reactivex.internal.operators.observable.s`;
  #L26eb9a.  call `<init>`(v5, v4) @signature `Lio/reactivex/internal/operators/observable/s;.<init>:(Lio/reactivex/internal/operators/observable/t;)V` @kind direct;
  #L26eba0.  v1:= v4.`io.reactivex.internal.operators.observable.t.k` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L26eba4.  call `set`(v1, v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L26ebaa.  call `onSubscribe`(v0, v4) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26ebb0.  v0:= v4.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26ebb4.  if v0 != 0 then goto L26ebf2;
  #L26ebb8.  call `subscribe`(v2, v5) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26ebbe.  goto L26ebf2;
  #L26ebc0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ebc2.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26ebc8.  v4.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v1 @kind boolean;
  #L26ebcc.  call `dispose`(v5) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26ebd2.  call `error`(v2, v0) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26ebd8.  return @kind void;
  #L26ebda.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ebdc.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26ebe2.  v4.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v1 @kind boolean;
  #L26ebe6.  call `dispose`(v5) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26ebec.  call `error`(v2, v0) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26ebf2.  return @kind void;
  catch `java.lang.Throwable` @[L26eb5a..L26eb76] goto L26ebda;
  catch `java.lang.Throwable` @[L26eb7a..L26eb96] goto L26ebc0;
}
