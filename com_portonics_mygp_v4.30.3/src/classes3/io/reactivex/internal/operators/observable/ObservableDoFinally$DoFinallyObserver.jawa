record `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.t` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @AccessFlag FINAL;
  `io.reactivex.e0.a.e` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.a` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27381c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L273822.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.t` := v1 @kind object;
  #L273826.  v0.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.d0.a` := v2 @kind object;
  #L27382a.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27383c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.e0.a.e` @kind object;
  #L273840.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L273846.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273858.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L27385c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273862.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L273868.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27376c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L273770.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L273776.  v0:= temp;
  #L273778.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27378c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.e0.a.e` @kind object;
  #L273790.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L273796.  v0:= temp;
  #L273798.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27387c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L273880.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L273886.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L27388c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2738a0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L2738a4.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2738aa.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L2738b0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2738c4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L2738c8.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2738ce.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2738e0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L2738e4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2738ea.  v0:= temp;
  #L2738ec.  if v0 == 0 then goto L27390e;
  #L2738f0.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2738f4.  v0:= instanceof @variable v2 @type ^`io.reactivex.e0.a.e` @kind boolean;
  #L2738f8.  if v0 == 0 then goto L273904;
  #L2738fc.  v2:= (`io.reactivex.e0.a.e`) v2 @kind object;
  #L273900.  v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.e0.a.e` := v2 @kind object;
  #L273904.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L273908.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27390e.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2737ec.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.e0.a.e` @kind object;
  #L2737f0.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L2737f6.  v0:= temp @kind object;
  #L2737f8.  if v0 != 0 then goto L27380a;
  #L2737fc.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @type ^`boolean` @kind boolean;
  #L273800.  if v1 == 0 then goto L27380a;
  #L273804.  call `runFinally`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @kind virtual;
  #L27380a.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2737ac.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.qd` @type ^`io.reactivex.e0.a.e` @kind object;
  #L2737b0.  v1:= 0I;
  #L2737b2.  if v0 == 0 then goto L2737d8;
  #L2737b6.  v2:= v4 ^& 4;
  #L2737ba.  if v2 != 0 then goto L2737d8;
  #L2737be.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L2737c4.  v4:= temp;
  #L2737c6.  if v4 == 0 then goto L2737d6;
  #L2737ca.  v0:= 1I;
  #L2737cc.  if v4 != v0 then goto L2737d2;
  #L2737d0.  v1:= 1I;
  #L2737d2.  v3.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.syncFused` @type ^`boolean` := v1 @kind boolean;
  #L2737d6.  return v4;
  #L2737d8.  return v1;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableDoFinally$DoFinallyObserver;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L273920.  v0:= 0I;
  #L273922.  v1:= 1I;
  #L273924.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L27392a.  v0:= temp;
  #L27392c.  if v0 == 0 then goto L27394a;
  #L273930.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.onFinally` @type ^`io.reactivex.d0.a` @kind object;
  #L273934.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L27393a.  goto L27394a;
  #L27393c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27393e.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273944.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27394a.  return @kind void;
  catch `java.lang.Throwable` @[L273930..L27393a] goto L27393c;
}
