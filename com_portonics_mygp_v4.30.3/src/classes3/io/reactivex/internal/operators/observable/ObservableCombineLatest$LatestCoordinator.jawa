record `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `io.reactivex.disposables.b` @kind interface {
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.active` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @AccessFlag VOLATILE;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.combiner` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.complete` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.delayError` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.done` @AccessFlag VOLATILE;
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.util.AtomicThrowable` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @AccessFlag ;
  `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`[] `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.observers` @AccessFlag FINAL;
  `io.reactivex.internal.queue.a` `io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.queue` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v1 @kind this, `io.reactivex.t` v2 @kind object, `io.reactivex.d0.k` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;IIZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L270650.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L270656.  v0:= new `io.reactivex.internal.util.AtomicThrowable`;
  #L27065a.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L270660.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` := v0 @kind object;
  #L270664.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.downstream` @type ^`io.reactivex.t` := v2 @kind object;
  #L270668.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.combiner` @type ^`io.reactivex.d0.k` := v3 @kind object;
  #L27066c.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.delayError` @type ^`boolean` := v6 @kind boolean;
  #L270670.  v2:= new `java.lang.Object`[v4];
  #L270674.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @type ^`java.lang.Object`[] := v2 @kind object;
  #L270678.  v2:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`[v4];
  #L27067c.  v3:= 0I;
  #L27067e.  if v3 >= v4 then goto L270696;
  #L270682.  v6:= new `io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`;
  #L270686.  call `<init>`(v6, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;I)V` @kind direct;
  #L27068c.  v2[v3]:= v6 @kind object;
  #L270690.  v3:= v3 + 1;
  #L270694.  goto L27067e;
  #L270696.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.observers` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`[] := v2 @kind object;
  #L27069a.  v2:= new `io.reactivex.internal.queue.a`;
  #L27069e.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/queue/a;.<init>:(I)V` @kind direct;
  #L2706a4.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.queue` @type ^`io.reactivex.internal.queue.a` := v2 @kind object;
  #L2706a8.  return @kind void;
}
procedure `void` `cancelSources`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v4 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2706bc.  v0:= v4.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.observers` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`[] @kind object;
  #L2706c0.  v1:= length @variable v0;
  #L2706c2.  v2:= 0I;
  #L2706c4.  if v2 >= v1 then goto L2706d8;
  #L2706c8.  v3:= v0[v2] @kind object;
  #L2706cc.  call `dispose`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$CombinerObserver;.dispose:()V` @kind virtual;
  #L2706d2.  v2:= v2 + 1;
  #L2706d6.  goto L2706c4;
  #L2706d8.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v1 @kind this, `io.reactivex.internal.queue.a` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @AccessFlag  {
    temp;
    v0;

  #L2706ec.  @monitorenter v1
  #L2706ee.  v0:= 0I;
  #L2706f0.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2706f4.  @monitorexit v1
  #L2706f6.  call `clear`(v2) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L2706fc.  return @kind void;
  #L2706fe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L270700.  @monitorexit v1
  #L270702.  throw v2;
  catch `java.lang.Throwable` @[L2706f0..L2706f6] goto L2706fe;
  catch `java.lang.Throwable` @[L270700..L270702] goto L2706fe;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270728.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @type ^`boolean` @kind boolean;
  #L27072c.  if v0 != 0 then goto L270752;
  #L270730.  v0:= 1I;
  #L270732.  v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L270736.  call `cancelSources`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @kind virtual;
  #L27073c.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L270742.  v0:= temp;
  #L270744.  if v0 != 0 then goto L270752;
  #L270748.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L27074c.  call `clear`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @kind virtual;
  #L270752.  return @kind void;
}
procedure `void` `drain`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v8 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.drain:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L270764.  call temp:= `getAndIncrement`(v8) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L27076a.  v0:= temp;
  #L27076c.  if v0 == 0 then goto L270772;
  #L270770.  return @kind void;
  #L270772.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L270776.  v1:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.downstream` @type ^`io.reactivex.t` @kind object;
  #L27077a.  v2:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.delayError` @type ^`boolean` @kind boolean;
  #L27077e.  v3:= 1I;
  #L270780.  v4:= 1I;
  #L270782.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @type ^`boolean` @kind boolean;
  #L270786.  if v5 == 0 then goto L270792;
  #L27078a.  call `clear`(v8, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @kind virtual;
  #L270790.  return @kind void;
  #L270792.  if v2 != 0 then goto L2707c6;
  #L270796.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L27079a.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2707a0.  v5:= temp @kind object;
  #L2707a2.  if v5 == 0 then goto L2707c6;
  #L2707a6.  call `cancelSources`(v8) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @kind virtual;
  #L2707ac.  call `clear`(v8, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @kind virtual;
  #L2707b2.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L2707b6.  call temp:= `terminate`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L2707bc.  v0:= temp @kind object;
  #L2707be.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2707c4.  return @kind void;
  #L2707c6.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.done` @type ^`boolean` @kind boolean;
  #L2707ca.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L2707d0.  v6:= temp @kind object;
  #L2707d2.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L2707d6.  if v6 != 0 then goto L2707de;
  #L2707da.  v7:= 1I;
  #L2707dc.  goto L2707e0;
  #L2707de.  v7:= 0I;
  #L2707e0.  if v5 == 0 then goto L27080e;
  #L2707e4.  if v7 == 0 then goto L27080e;
  #L2707e8.  call `clear`(v8, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @kind virtual;
  #L2707ee.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L2707f2.  call temp:= `terminate`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L2707f8.  v0:= temp @kind object;
  #L2707fa.  if v0 != 0 then goto L270806;
  #L2707fe.  call `onComplete`(v1) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L270804.  goto L27080c;
  #L270806.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27080c.  return @kind void;
  #L27080e.  if v7 == 0 then goto L270822;
  #L270812.  v4:= -v4 @kind int;
  #L270814.  call temp:= `addAndGet`(v8, v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L27081a.  v4:= temp;
  #L27081c.  if v4 != 0 then goto L270782;
  #L270820.  return @kind void;
  #L270822.  v5:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.combiner` @type ^`io.reactivex.d0.k` @kind object;
  #L270826.  call temp:= `apply`(v5, v6) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27082c.  v5:= temp @kind object;
  #L27082e.  v6:= "The combiner returned a null value" @kind object;
  #L270832.  call temp:= `e`(v5, v6) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L270838.  v5:= temp @kind object;
  #L27083a.  call `onNext`(v1, v5) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L270840.  goto L270782;
  #L270842.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L270844.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27084a.  v3:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L27084e.  call temp:= `addThrowable`(v3, v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L270854.  call `cancelSources`(v8) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @kind virtual;
  #L27085a.  call `clear`(v8, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.clear:(Lio/reactivex/internal/queue/a;)V` @kind virtual;
  #L270860.  v0:= v8.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L270864.  call temp:= `terminate`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L27086a.  v0:= temp @kind object;
  #L27086c.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L270872.  return @kind void;
  catch `java.lang.Throwable` @[L270822..L27083a] goto L270842;
}
procedure `void` `innerComplete`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerComplete:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L270890.  @monitorenter v3
  #L270892.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @type ^`java.lang.Object`[] @kind object;
  #L270896.  if v0 != 0 then goto L27089e;
  #L27089a.  @monitorexit v3
  #L27089c.  return @kind void;
  #L27089e.  v4:= v0[v4] @kind object;
  #L2708a2.  v1:= 1I;
  #L2708a4.  if v4 != 0 then goto L2708ac;
  #L2708a8.  v4:= 1I;
  #L2708aa.  goto L2708ae;
  #L2708ac.  v4:= 0I;
  #L2708ae.  if v4 != 0 then goto L2708c2;
  #L2708b2.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.complete` @type ^`int`;
  #L2708b6.  v2:= v2 + v1 @kind int;
  #L2708b8.  v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.complete` @type ^`int` := v2;
  #L2708bc.  v0:= length @variable v0;
  #L2708be.  if v2 != v0 then goto L2708c6;
  #L2708c2.  v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.done` @type ^`boolean` := v1 @kind boolean;
  #L2708c6.  @monitorexit v3
  #L2708c8.  if v4 == 0 then goto L2708d2;
  #L2708cc.  call `cancelSources`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @kind virtual;
  #L2708d2.  call `drain`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.drain:()V` @kind virtual;
  #L2708d8.  return @kind void;
  #L2708da.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2708dc.  @monitorexit v3
  #L2708de.  throw v4;
  catch `java.lang.Throwable` @[L270892..L2708c8] goto L2708da;
  catch `java.lang.Throwable` @[L2708dc..L2708de] goto L2708da;
}
procedure `void` `innerError`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v2 @kind this, `int` v3 , `java.lang.Throwable` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerError:(ILjava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L270904.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L270908.  call temp:= `addThrowable`(v0, v4) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L27090e.  v0:= temp;
  #L270910.  if v0 == 0 then goto L270970;
  #L270914.  v4:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.delayError` @type ^`boolean` @kind boolean;
  #L270918.  v0:= 1I;
  #L27091a.  if v4 == 0 then goto L27095e;
  #L27091e.  @monitorenter v2
  #L270920.  v4:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @type ^`java.lang.Object`[] @kind object;
  #L270924.  if v4 != 0 then goto L27092c;
  #L270928.  @monitorexit v2
  #L27092a.  return @kind void;
  #L27092c.  v3:= v4[v3] @kind object;
  #L270930.  if v3 != 0 then goto L270938;
  #L270934.  v3:= 1I;
  #L270936.  goto L27093a;
  #L270938.  v3:= 0I;
  #L27093a.  if v3 != 0 then goto L27094e;
  #L27093e.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.complete` @type ^`int`;
  #L270942.  v1:= v1 + v0 @kind int;
  #L270944.  v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.complete` @type ^`int` := v1;
  #L270948.  v4:= length @variable v4;
  #L27094a.  if v1 != v4 then goto L270952;
  #L27094e.  v2.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.done` @type ^`boolean` := v0 @kind boolean;
  #L270952.  @monitorexit v2
  #L270954.  v0:= v3;
  #L270956.  goto L27095e;
  #L270958.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27095a.  @monitorexit v2
  #L27095c.  throw v3;
  #L27095e.  if v0 == 0 then goto L270968;
  #L270962.  call `cancelSources`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.cancelSources:()V` @kind virtual;
  #L270968.  call `drain`(v2) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.drain:()V` @kind virtual;
  #L27096e.  goto L270976;
  #L270970.  call `t`(v4) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L270976.  return @kind void;
  catch `java.lang.Throwable` @[L270920..L27095c] goto L270958;
}
procedure `void` `innerNext`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.innerNext:(ILjava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L270994.  @monitorenter v3
  #L270996.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.latest` @type ^`java.lang.Object`[] @kind object;
  #L27099a.  if v0 != 0 then goto L2709a2;
  #L27099e.  @monitorexit v3
  #L2709a0.  return @kind void;
  #L2709a2.  v1:= v0[v4] @kind object;
  #L2709a6.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.active` @type ^`int`;
  #L2709aa.  if v1 != 0 then goto L2709b6;
  #L2709ae.  v2:= v2 + 1;
  #L2709b2.  v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.active` @type ^`int` := v2;
  #L2709b6.  v0[v4]:= v5 @kind object;
  #L2709ba.  v4:= length @variable v0;
  #L2709bc.  if v2 != v4 then goto L2709d6;
  #L2709c0.  v4:= v3.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L2709c4.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2709ca.  v5:= temp @kind object;
  #L2709cc.  call temp:= `offer`(v4, v5) @signature `Lio/reactivex/internal/queue/a;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L2709d2.  v4:= 1I;
  #L2709d4.  goto L2709d8;
  #L2709d6.  v4:= 0I;
  #L2709d8.  @monitorexit v3
  #L2709da.  if v4 == 0 then goto L2709e4;
  #L2709de.  call `drain`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.drain:()V` @kind virtual;
  #L2709e4.  return @kind void;
  #L2709e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2709e8.  @monitorexit v3
  #L2709ea.  throw v4;
  catch `java.lang.Throwable` @[L270996..L2709da] goto L2709e6;
  catch `java.lang.Throwable` @[L2709e8..L2709ea] goto L2709e6;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270638.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @type ^`boolean` @kind boolean;
  #L27063c.  return v0;
}
procedure `void` `subscribe`(`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator` v5 @kind this, `io.reactivex.r`[] v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableCombineLatest$LatestCoordinator;.subscribe:([Lio/reactivex/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L270a10.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.observers` @type ^`io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver`[] @kind object;
  #L270a14.  v1:= length @variable v0;
  #L270a16.  v2:= v5.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.downstream` @type ^`io.reactivex.t` @kind object;
  #L270a1a.  call `onSubscribe`(v2, v5) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L270a20.  v2:= 0I;
  #L270a22.  if v2 >= v1 then goto L270a4c;
  #L270a26.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.done` @type ^`boolean` @kind boolean;
  #L270a2a.  if v3 != 0 then goto L270a4c;
  #L270a2e.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator.cancelled` @type ^`boolean` @kind boolean;
  #L270a32.  if v3 == 0 then goto L270a38;
  #L270a36.  goto L270a4c;
  #L270a38.  v3:= v6[v2] @kind object;
  #L270a3c.  v4:= v0[v2] @kind object;
  #L270a40.  call `subscribe`(v3, v4) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L270a46.  v2:= v2 + 1;
  #L270a4a.  goto L270a22;
  #L270a4c.  return @kind void;
}
