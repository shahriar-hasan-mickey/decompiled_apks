record `io.reactivex.internal.operators.observable.r1` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.n` @kind class {
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.r1.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.r1` v0 @kind this, `java.lang.Iterable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/r1;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2766a4.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L2766aa.  v0.`io.reactivex.internal.operators.observable.r1.b` @type ^`java.lang.Iterable` := v1 @kind object;
  #L2766ae.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.r1` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/r1;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2766c0.  v0:= v2.`io.reactivex.internal.operators.observable.r1.b` @type ^`java.lang.Iterable` @kind object;
  #L2766c4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2766ca.  v0:= temp @kind object;
  #L2766cc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2766d2.  v1:= temp;
  #L2766d4.  if v1 != 0 then goto L2766e0;
  #L2766d8.  call `complete`(v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L2766de.  return @kind void;
  #L2766e0.  v1:= new `io.reactivex.internal.operators.observable.q1`;
  #L2766e4.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/operators/observable/q1;.<init>:(Lio/reactivex/t;Ljava/util/Iterator;)V` @kind direct;
  #L2766ea.  call `onSubscribe`(v3, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2766f0.  v3:= v1.`io.reactivex.internal.operators.observable.q1.e` @type ^`boolean` @kind boolean;
  #L2766f4.  if v3 != 0 then goto L2766fe;
  #L2766f8.  call `a`(v1) @signature `Lio/reactivex/internal/operators/observable/q1;.a:()V` @kind virtual;
  #L2766fe.  return @kind void;
  #L276700.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276702.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L276708.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27670e.  return @kind void;
  #L276710.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276712.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L276718.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27671e.  return @kind void;
  catch `java.lang.Throwable` @[L2766c0..L2766cc] goto L276710;
  catch `java.lang.Throwable` @[L2766cc..L2766d4] goto L276700;
}
