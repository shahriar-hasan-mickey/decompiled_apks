record `io.reactivex.internal.operators.observable.ObservableSampleTimed` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableSampleTimed.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableSampleTimed.d` @AccessFlag FINAL;
  `io.reactivex.x` `io.reactivex.internal.operators.observable.ObservableSampleTimed.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableSampleTimed.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSampleTimed` v0 @kind this, `io.reactivex.r` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.x` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.<init>:(Lio/reactivex/r;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27d77c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27d782.  v0.`io.reactivex.internal.operators.observable.ObservableSampleTimed.c` @type ^`long` := v2 @kind wide;
  #L27d786.  v0.`io.reactivex.internal.operators.observable.ObservableSampleTimed.d` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L27d78a.  v0.`io.reactivex.internal.operators.observable.ObservableSampleTimed.e` @type ^`io.reactivex.x` := v5 @kind object;
  #L27d78e.  v0.`io.reactivex.internal.operators.observable.ObservableSampleTimed.f` @type ^`boolean` := v6 @kind boolean;
  #L27d792.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableSampleTimed` v7 @kind this, `io.reactivex.t` v8 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27d7a4.  v1:= new `io.reactivex.observers.d`;
  #L27d7a8.  call `<init>`(v1, v8) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L27d7ae.  v8:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.f` @type ^`boolean` @kind boolean;
  #L27d7b2.  if v8 == 0 then goto L27d7da;
  #L27d7b6.  v8:= v7.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27d7ba.  v6:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast`;
  #L27d7be.  v2:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.c` @type ^`long` @kind wide;
  #L27d7c2.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L27d7c6.  v5:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.e` @type ^`io.reactivex.x` @kind object;
  #L27d7ca.  v0:= v6 @kind object;
  #L27d7cc.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedEmitLast;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;)V` @kind direct;
  #L27d7d2.  call `subscribe`(v8, v6) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27d7d8.  goto L27d7fc;
  #L27d7da.  v8:= v7.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27d7de.  v6:= new `io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast`;
  #L27d7e2.  v2:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.c` @type ^`long` @kind wide;
  #L27d7e6.  v4:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L27d7ea.  v5:= v7.`io.reactivex.internal.operators.observable.ObservableSampleTimed.e` @type ^`io.reactivex.x` @kind object;
  #L27d7ee.  v0:= v6 @kind object;
  #L27d7f0.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedNoLast;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;)V` @kind direct;
  #L27d7f6.  call `subscribe`(v8, v6) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27d7fc.  return @kind void;
}
