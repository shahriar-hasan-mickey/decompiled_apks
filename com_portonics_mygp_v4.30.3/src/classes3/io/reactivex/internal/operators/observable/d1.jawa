record `io.reactivex.internal.operators.observable.d1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.d1.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.d1.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.d1.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.d1.e` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.d1.f` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.d1.g` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.d1.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.d1` v0 @kind this, `io.reactivex.t` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lio/reactivex/internal/operators/observable/d1;.<init>:(Lio/reactivex/t;JLjava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L273c80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L273c86.  v0.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L273c8a.  v0.`io.reactivex.internal.operators.observable.d1.c` @type ^`long` := v2 @kind wide;
  #L273c8e.  v0.`io.reactivex.internal.operators.observable.d1.d` @type ^`java.lang.Object` := v4 @kind object;
  #L273c92.  v0.`io.reactivex.internal.operators.observable.d1.e` @type ^`boolean` := v5 @kind boolean;
  #L273c96.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.d1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273ca8.  v0:= v1.`io.reactivex.internal.operators.observable.d1.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L273cac.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273cb2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.d1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/d1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273c60.  v0:= v1.`io.reactivex.internal.operators.observable.d1.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L273c64.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L273c6a.  v0:= temp;
  #L273c6c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.d1` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/d1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L273cc4.  v0:= v2.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` @kind boolean;
  #L273cc8.  if v0 != 0 then goto L273d10;
  #L273ccc.  v0:= 1I;
  #L273cce.  v2.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` := v0 @kind boolean;
  #L273cd2.  v0:= v2.`io.reactivex.internal.operators.observable.d1.d` @type ^`java.lang.Object` @kind object;
  #L273cd6.  if v0 != 0 then goto L273cf8;
  #L273cda.  v1:= v2.`io.reactivex.internal.operators.observable.d1.e` @type ^`boolean` @kind boolean;
  #L273cde.  if v1 == 0 then goto L273cf8;
  #L273ce2.  v0:= v2.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273ce6.  v1:= new `java.util.NoSuchElementException`;
  #L273cea.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L273cf0.  call `onError`(v0, v1) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L273cf6.  goto L273d10;
  #L273cf8.  if v0 == 0 then goto L273d06;
  #L273cfc.  v1:= v2.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273d00.  call `onNext`(v1, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L273d06.  v0:= v2.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273d0a.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L273d10.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.d1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/d1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273d24.  v0:= v1.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` @kind boolean;
  #L273d28.  if v0 == 0 then goto L273d34;
  #L273d2c.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L273d32.  return @kind void;
  #L273d34.  v0:= 1I;
  #L273d36.  v1.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` := v0 @kind boolean;
  #L273d3a.  v0:= v1.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273d3e.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L273d44.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.d1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/d1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L273d58.  v0:= v5.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` @kind boolean;
  #L273d5c.  if v0 == 0 then goto L273d62;
  #L273d60.  return @kind void;
  #L273d62.  v0:= v5.`io.reactivex.internal.operators.observable.d1.g` @type ^`long` @kind wide;
  #L273d66.  v2:= v5.`io.reactivex.internal.operators.observable.d1.c` @type ^`long` @kind wide;
  #L273d6a.  v4:= lcmp(v0, v2);
  #L273d6e.  if v4 != 0 then goto L273d98;
  #L273d72.  v0:= 1I;
  #L273d74.  v5.`io.reactivex.internal.operators.observable.d1.h` @type ^`boolean` := v0 @kind boolean;
  #L273d78.  v0:= v5.`io.reactivex.internal.operators.observable.d1.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L273d7c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273d82.  v0:= v5.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273d86.  call `onNext`(v0, v6) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L273d8c.  v6:= v5.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273d90.  call `onComplete`(v6) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L273d96.  return @kind void;
  #L273d98.  v2:= 1L;
  #L273d9c.  v0:= v0 + v2 @kind long;
  #L273d9e.  v5.`io.reactivex.internal.operators.observable.d1.g` @type ^`long` := v0 @kind wide;
  #L273da2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.d1` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/d1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273db4.  v0:= v1.`io.reactivex.internal.operators.observable.d1.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L273db8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L273dbe.  v0:= temp;
  #L273dc0.  if v0 == 0 then goto L273dd2;
  #L273dc4.  v1.`io.reactivex.internal.operators.observable.d1.f` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L273dc8.  v2:= v1.`io.reactivex.internal.operators.observable.d1.b` @type ^`io.reactivex.t` @kind object;
  #L273dcc.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L273dd2.  return @kind void;
}
