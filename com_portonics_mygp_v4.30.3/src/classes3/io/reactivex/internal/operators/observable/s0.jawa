record `io.reactivex.internal.operators.observable.s0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.s0.b` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.s0.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.s0` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/s0;.<init>:(Lio/reactivex/t;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2731b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2731b6.  v0.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2731ba.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.s0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/s0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2731cc.  v0:= v2.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L2731d0.  v1:= `@@io.reactivex.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.internal.util.EmptyComponent` @kind object;
  #L2731d4.  v2.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L2731d8.  call temp:= `asObserver`() @signature `Lio/reactivex/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/t;` @kind static;
  #L2731de.  v1:= temp @kind object;
  #L2731e0.  v2.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2731e4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2731ea.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.s0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/s0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273190.  v0:= v1.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L273194.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27319a.  v0:= temp;
  #L27319c.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.s0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/s0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2731fc.  v0:= v2.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` @kind object;
  #L273200.  v1:= `@@io.reactivex.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.internal.util.EmptyComponent` @kind object;
  #L273204.  v2.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L273208.  call temp:= `asObserver`() @signature `Lio/reactivex/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/t;` @kind static;
  #L27320e.  v1:= temp @kind object;
  #L273210.  v2.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L273214.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27321a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.s0` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/s0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27322c.  v0:= v2.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` @kind object;
  #L273230.  v1:= `@@io.reactivex.internal.util.EmptyComponent.INSTANCE` @type ^`io.reactivex.internal.util.EmptyComponent` @kind object;
  #L273234.  v2.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L273238.  call temp:= `asObserver`() @signature `Lio/reactivex/internal/util/EmptyComponent;.asObserver:()Lio/reactivex/t;` @kind static;
  #L27323e.  v1:= temp @kind object;
  #L273240.  v2.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L273244.  call `onError`(v0, v3) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27324a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.s0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/s0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27325c.  v0:= v1.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` @kind object;
  #L273260.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L273266.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.s0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/s0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273278.  v0:= v1.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27327c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L273282.  v0:= temp;
  #L273284.  if v0 == 0 then goto L273296;
  #L273288.  v1.`io.reactivex.internal.operators.observable.s0.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27328c.  v2:= v1.`io.reactivex.internal.operators.observable.s0.b` @type ^`io.reactivex.t` @kind object;
  #L273290.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L273296.  return @kind void;
}
