record `io.reactivex.internal.operators.observable.w` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.j` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.w.h` @AccessFlag FINAL;
  `io.reactivex.r` `io.reactivex.internal.operators.observable.w.i` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.w.j` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.w.k` @AccessFlag ;
  `java.util.Collection` `io.reactivex.internal.operators.observable.w.l` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.w` v1 @kind this, `io.reactivex.t` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object, `io.reactivex.r` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/Callable;Lio/reactivex/r;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L26ed58.  v0:= new `io.reactivex.internal.queue.MpscLinkedQueue`;
  #L26ed5c.  call `<init>`(v0) @signature `Lio/reactivex/internal/queue/MpscLinkedQueue;.<init>:()V` @kind direct;
  #L26ed62.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/observers/j;.<init>:(Lio/reactivex/t;Lio/reactivex/e0/a/i;)V` @kind direct;
  #L26ed68.  v1.`io.reactivex.internal.operators.observable.w.h` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L26ed6c.  v1.`io.reactivex.internal.operators.observable.w.i` @type ^`io.reactivex.r` := v4 @kind object;
  #L26ed70.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.operators.observable.w` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.c:(Lio/reactivex/t;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L26ed84.  v2:= (`java.util.Collection`) v2 @kind object;
  #L26ed88.  call `i`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/w;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @kind virtual;
  #L26ed8e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.w` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/w;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26edbc.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26edc0.  if v0 != 0 then goto L26edf4;
  #L26edc4.  v0:= 1I;
  #L26edc6.  v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v0 @kind boolean;
  #L26edca.  v0:= v1.`io.reactivex.internal.operators.observable.w.k` @type ^`io.reactivex.disposables.b` @kind object;
  #L26edce.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26edd4.  v0:= v1.`io.reactivex.internal.operators.observable.w.j` @type ^`io.reactivex.disposables.b` @kind object;
  #L26edd8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26edde.  call temp:= `e`(v1) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L26ede4.  v0:= temp;
  #L26ede6.  if v0 == 0 then goto L26edf4;
  #L26edea.  v0:= v1.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26edee.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L26edf4.  return @kind void;
}
procedure `void` `i`(`io.reactivex.internal.operators.observable.w` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.i:(Lio/reactivex/t;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;

  #L26eda0.  v1:= v0.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26eda4.  call `onNext`(v1, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L26edaa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.w` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/w;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ed40.  v0:= v1.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26ed44.  return v0;
}
procedure `void` `j`(`io.reactivex.internal.operators.observable.w` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/w;.j:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L26ee08.  v0:= v2.`io.reactivex.internal.operators.observable.w.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26ee0c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26ee12.  v0:= temp @kind object;
  #L26ee14.  v1:= "The buffer supplied is null" @kind object;
  #L26ee18.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26ee1e.  v0:= temp @kind object;
  #L26ee20.  v0:= (`java.util.Collection`) v0 @kind object;
  #L26ee24.  @monitorenter v2
  #L26ee26.  v1:= v2.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` @kind object;
  #L26ee2a.  if v1 != 0 then goto L26ee32;
  #L26ee2e.  @monitorexit v2
  #L26ee30.  return @kind void;
  #L26ee32.  v2.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` := v0 @kind object;
  #L26ee36.  @monitorexit v2
  #L26ee38.  v0:= 0I;
  #L26ee3a.  call `g`(v2, v1, v0, v2) @signature `Lio/reactivex/internal/observers/j;.g:(Ljava/lang/Object;ZLio/reactivex/disposables/b;)V` @kind virtual;
  #L26ee40.  return @kind void;
  #L26ee42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ee44.  @monitorexit v2
  #L26ee46.  throw v0;
  #L26ee48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ee4a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26ee50.  call `dispose`(v2) @signature `Lio/reactivex/internal/operators/observable/w;.dispose:()V` @kind virtual;
  #L26ee56.  v1:= v2.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26ee5a.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26ee60.  return @kind void;
  catch `java.lang.Throwable` @[L26ee08..L26ee24] goto L26ee48;
  catch `java.lang.Throwable` @[L26ee26..L26ee38] goto L26ee42;
  catch `java.lang.Throwable` @[L26ee44..L26ee46] goto L26ee42;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.w` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/w;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26ee94.  @monitorenter v3
  #L26ee96.  v0:= v3.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` @kind object;
  #L26ee9a.  if v0 != 0 then goto L26eea2;
  #L26ee9e.  @monitorexit v3
  #L26eea0.  return @kind void;
  #L26eea2.  v1:= 0I;
  #L26eea4.  v3.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` := v1 @kind object;
  #L26eea8.  @monitorexit v3
  #L26eeaa.  v1:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26eeae.  call temp:= `offer`(v1, v0) @signature `Lio/reactivex/e0/a/j;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L26eeb4.  v0:= 1I;
  #L26eeb6.  v3.`io.reactivex.internal.observers.j.f` @type ^`boolean` := v0 @kind boolean;
  #L26eeba.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/observers/j;.e:()Z` @kind virtual;
  #L26eec0.  v0:= temp;
  #L26eec2.  if v0 == 0 then goto L26eed6;
  #L26eec6.  v0:= v3.`io.reactivex.internal.observers.j.d` @type ^`io.reactivex.e0.a.i` @kind object;
  #L26eeca.  v1:= v3.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26eece.  v2:= 0I;
  #L26eed0.  call `c`(v0, v1, v2, v3, v3) @signature `Lio/reactivex/internal/util/k;.c:(Lio/reactivex/e0/a/i;Lio/reactivex/t;ZLio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)V` @kind static;
  #L26eed6.  return @kind void;
  #L26eed8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26eeda.  @monitorexit v3
  #L26eedc.  throw v0;
  catch `java.lang.Throwable` @[L26ee96..L26eeaa] goto L26eed8;
  catch `java.lang.Throwable` @[L26eeda..L26eedc] goto L26eed8;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.w` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ef04.  call `dispose`(v1) @signature `Lio/reactivex/internal/operators/observable/w;.dispose:()V` @kind virtual;
  #L26ef0a.  v0:= v1.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26ef0e.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26ef14.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ef28.  @monitorenter v1
  #L26ef2a.  v0:= v1.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` @kind object;
  #L26ef2e.  if v0 != 0 then goto L26ef36;
  #L26ef32.  @monitorexit v1
  #L26ef34.  return @kind void;
  #L26ef36.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26ef3c.  @monitorexit v1
  #L26ef3e.  return @kind void;
  #L26ef40.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26ef42.  @monitorexit v1
  #L26ef44.  throw v2;
  catch `java.lang.Throwable` @[L26ef2a..L26ef44] goto L26ef40;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.w` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/w;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26ef64.  v0:= v2.`io.reactivex.internal.operators.observable.w.j` @type ^`io.reactivex.disposables.b` @kind object;
  #L26ef68.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26ef6e.  v0:= temp;
  #L26ef70.  if v0 == 0 then goto L26efe2;
  #L26ef74.  v2.`io.reactivex.internal.operators.observable.w.j` @type ^`io.reactivex.disposables.b` := v3 @kind object;
  #L26ef78.  v0:= v2.`io.reactivex.internal.operators.observable.w.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L26ef7c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L26ef82.  v0:= temp @kind object;
  #L26ef84.  v1:= "The buffer supplied is null" @kind object;
  #L26ef88.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26ef8e.  v0:= temp @kind object;
  #L26ef90.  v0:= (`java.util.Collection`) v0 @kind object;
  #L26ef94.  v2.`io.reactivex.internal.operators.observable.w.l` @type ^`java.util.Collection` := v0 @kind object;
  #L26ef98.  v3:= new `io.reactivex.internal.operators.observable.v`;
  #L26ef9c.  call `<init>`(v3, v2) @signature `Lio/reactivex/internal/operators/observable/v;.<init>:(Lio/reactivex/internal/operators/observable/w;)V` @kind direct;
  #L26efa2.  v2.`io.reactivex.internal.operators.observable.w.k` @type ^`io.reactivex.disposables.b` := v3 @kind object;
  #L26efa6.  v0:= v2.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26efaa.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26efb0.  v0:= v2.`io.reactivex.internal.observers.j.e` @type ^`boolean` @kind boolean;
  #L26efb4.  if v0 != 0 then goto L26efe2;
  #L26efb8.  v0:= v2.`io.reactivex.internal.operators.observable.w.i` @type ^`io.reactivex.r` @kind object;
  #L26efbc.  call `subscribe`(v0, v3) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26efc2.  goto L26efe2;
  #L26efc4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26efc6.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26efcc.  v1:= 1I;
  #L26efce.  v2.`io.reactivex.internal.observers.j.e` @type ^`boolean` := v1 @kind boolean;
  #L26efd2.  call `dispose`(v3) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26efd8.  v3:= v2.`io.reactivex.internal.observers.j.c` @type ^`io.reactivex.t` @kind object;
  #L26efdc.  call `error`(v0, v3) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L26efe2.  return @kind void;
  catch `java.lang.Throwable` @[L26ef78..L26ef94] goto L26efc4;
}
