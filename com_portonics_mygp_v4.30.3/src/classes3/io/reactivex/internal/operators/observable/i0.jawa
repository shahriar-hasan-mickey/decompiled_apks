record `io.reactivex.internal.operators.observable.i0` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.observable.i0.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.i0.c` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.i0.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.i0` v0 @kind this, `io.reactivex.z` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/i0;.<init>:(Lio/reactivex/z;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L271e1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L271e22.  v0.`io.reactivex.internal.operators.observable.i0.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L271e26.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.i0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/i0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271e38.  v0:= v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271e3c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L271e42.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L271e46.  v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L271e4a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.i0` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/i0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271dfc.  v0:= v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271e00.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L271e06.  v0:= temp;
  #L271e08.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.i0` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/i0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L271e5c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L271e60.  v3.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L271e64.  v0:= v3.`io.reactivex.internal.operators.observable.i0.b` @type ^`io.reactivex.z` @kind object;
  #L271e68.  v1:= v3.`io.reactivex.internal.operators.observable.i0.d` @type ^`long` @kind wide;
  #L271e6c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L271e72.  v1:= temp @kind object;
  #L271e74.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L271e7a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.i0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271e8c.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L271e90.  v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L271e94.  v0:= v1.`io.reactivex.internal.operators.observable.i0.b` @type ^`io.reactivex.z` @kind object;
  #L271e98.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L271e9e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.i0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/i0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L271eb0.  v0:= v4.`io.reactivex.internal.operators.observable.i0.d` @type ^`long` @kind wide;
  #L271eb4.  v2:= 1L;
  #L271eb8.  v0:= v0 + v2 @kind long;
  #L271eba.  v4.`io.reactivex.internal.operators.observable.i0.d` @type ^`long` := v0 @kind wide;
  #L271ebe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.i0` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/i0;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L271ed0.  v0:= v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L271ed4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L271eda.  v0:= temp;
  #L271edc.  if v0 == 0 then goto L271eee;
  #L271ee0.  v1.`io.reactivex.internal.operators.observable.i0.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L271ee4.  v2:= v1.`io.reactivex.internal.operators.observable.i0.b` @type ^`io.reactivex.z` @kind object;
  #L271ee8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L271eee.  return @kind void;
}
