record `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.d` `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRetryBiPredicate` v0 @kind this, `io.reactivex.n` v1 @kind object, `io.reactivex.d0.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate;.<init>:(Lio/reactivex/n;Lio/reactivex/d0/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27cfb4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27cfba.  v0.`io.reactivex.internal.operators.observable.ObservableRetryBiPredicate.c` @type ^`io.reactivex.d0.d` := v2 @kind object;
  #L27cfbe.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableRetryBiPredicate` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27cfd0.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L27cfd4.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L27cfda.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27cfe0.  v1:= new `io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver`;
  #L27cfe4.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableRetryBiPredicate.c` @type ^`io.reactivex.d0.d` @kind object;
  #L27cfe8.  v3:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27cfec.  call `<init>`(v1, v5, v2, v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate$RetryBiObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/d;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/r;)V` @kind direct;
  #L27cff2.  call `subscribeNext`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryBiPredicate$RetryBiObserver;.subscribeNext:()V` @kind virtual;
  #L27cff8.  return @kind void;
}
