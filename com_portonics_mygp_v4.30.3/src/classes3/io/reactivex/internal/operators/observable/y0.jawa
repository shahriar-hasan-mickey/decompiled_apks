record `io.reactivex.internal.operators.observable.y0` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.a` @kind class {
  `io.reactivex.d0.g` `io.reactivex.internal.operators.observable.y0.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.y0` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y0;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2736c4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L2736ca.  v0.`io.reactivex.internal.operators.observable.y0.g` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L2736ce.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.y0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2736e0.  v0:= v1.`io.reactivex.internal.observers.a.b` @type ^`io.reactivex.t` @kind object;
  #L2736e4.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2736ea.  v0:= v1.`io.reactivex.internal.observers.a.f` @type ^`int`;
  #L2736ee.  if v0 != 0 then goto L273706;
  #L2736f2.  v0:= v1.`io.reactivex.internal.operators.observable.y0.g` @type ^`io.reactivex.d0.g` @kind object;
  #L2736f6.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L2736fc.  goto L273706;
  #L2736fe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273700.  call `c`(v1, v2) @signature `Lio/reactivex/internal/observers/a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L273706.  return @kind void;
  catch `java.lang.Throwable` @[L2736f2..L2736fc] goto L2736fe;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.y0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/y0;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L273698.  v0:= v2.`io.reactivex.internal.observers.a.d` @type ^`io.reactivex.e0.a.e` @kind object;
  #L27369c.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L2736a2.  v0:= temp @kind object;
  #L2736a4.  if v0 == 0 then goto L2736b2;
  #L2736a8.  v1:= v2.`io.reactivex.internal.operators.observable.y0.g` @type ^`io.reactivex.d0.g` @kind object;
  #L2736ac.  call `accept`(v1, v0) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L2736b2.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.y0` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/y0;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L27367c.  call temp:= `d`(v0, v1) @signature `Lio/reactivex/internal/observers/a;.d:(I)I` @kind virtual;
  #L273682.  v1:= temp;
  #L273684.  return v1;
}
