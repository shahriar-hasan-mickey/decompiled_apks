record `io.reactivex.internal.operators.observable.ObservableMergeWithSingle` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.a0` `io.reactivex.internal.operators.observable.ObservableMergeWithSingle.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMergeWithSingle` v0 @kind this, `io.reactivex.n` v1 @kind object, `io.reactivex.a0` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.<init>:(Lio/reactivex/n;Lio/reactivex/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L279c18.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L279c1e.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle.c` @type ^`io.reactivex.a0` := v2 @kind object;
  #L279c22.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableMergeWithSingle` v1 @kind this, `io.reactivex.t` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L279c34.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver`;
  #L279c38.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithSingle$MergeWithObserver;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L279c3e.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L279c44.  v2:= v1.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L279c48.  call `subscribe`(v2, v0) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L279c4e.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle.c` @type ^`io.reactivex.a0` @kind object;
  #L279c52.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver.otherObserver` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver` @kind object;
  #L279c56.  call `b`(v2, v0) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L279c5c.  return @kind void;
}
