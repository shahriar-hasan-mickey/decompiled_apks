record `io.reactivex.internal.operators.observable.u` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.u.c` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.u.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.u` v0 @kind this, `io.reactivex.r` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/u;.<init>:(Lio/reactivex/r;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26ec1c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L26ec22.  v0.`io.reactivex.internal.operators.observable.u.c` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L26ec26.  v0.`io.reactivex.internal.operators.observable.u.d` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L26ec2a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.u` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/u;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26ec3c.  v0:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L26ec40.  v1:= new `io.reactivex.internal.operators.observable.t`;
  #L26ec44.  v2:= new `io.reactivex.observers.d`;
  #L26ec48.  call `<init>`(v2, v5) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L26ec4e.  v5:= v4.`io.reactivex.internal.operators.observable.u.d` @type ^`java.util.concurrent.Callable` @kind object;
  #L26ec52.  v3:= v4.`io.reactivex.internal.operators.observable.u.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L26ec56.  call `<init>`(v1, v2, v5, v3) @signature `Lio/reactivex/internal/operators/observable/t;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/Callable;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L26ec5c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26ec62.  return @kind void;
}
