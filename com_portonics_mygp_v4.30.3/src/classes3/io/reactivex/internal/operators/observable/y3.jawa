record `io.reactivex.internal.operators.observable.y3` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.observable.y3.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.y3.c` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.observable.y3.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.y3.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.y3` v0 @kind this, `io.reactivex.j` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/y3;.<init>:(Lio/reactivex/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27eaf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27eafa.  v0.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L27eafe.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.y3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/y3;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27eb10.  v0:= v1.`io.reactivex.internal.operators.observable.y3.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27eb14.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27eb1a.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.y3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/y3;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ead4.  v0:= v1.`io.reactivex.internal.operators.observable.y3.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27ead8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27eade.  v0:= temp;
  #L27eae0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.y3` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/y3;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27eb2c.  v0:= v2.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` @kind boolean;
  #L27eb30.  if v0 == 0 then goto L27eb36;
  #L27eb34.  return @kind void;
  #L27eb36.  v0:= 1I;
  #L27eb38.  v2.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` := v0 @kind boolean;
  #L27eb3c.  v0:= v2.`io.reactivex.internal.operators.observable.y3.d` @type ^`java.lang.Object` @kind object;
  #L27eb40.  v1:= 0I;
  #L27eb42.  v2.`io.reactivex.internal.operators.observable.y3.d` @type ^`java.lang.Object` := v1 @kind object;
  #L27eb46.  if v0 != 0 then goto L27eb56;
  #L27eb4a.  v0:= v2.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` @kind object;
  #L27eb4e.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L27eb54.  goto L27eb60;
  #L27eb56.  v1:= v2.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` @kind object;
  #L27eb5a.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L27eb60.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.y3` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y3;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27eb74.  v0:= v1.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` @kind boolean;
  #L27eb78.  if v0 == 0 then goto L27eb84;
  #L27eb7c.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27eb82.  return @kind void;
  #L27eb84.  v0:= 1I;
  #L27eb86.  v1.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` := v0 @kind boolean;
  #L27eb8a.  v0:= v1.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` @kind object;
  #L27eb8e.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27eb94.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.y3` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/y3;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27eba8.  v0:= v2.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` @kind boolean;
  #L27ebac.  if v0 == 0 then goto L27ebb2;
  #L27ebb0.  return @kind void;
  #L27ebb2.  v0:= v2.`io.reactivex.internal.operators.observable.y3.d` @type ^`java.lang.Object` @kind object;
  #L27ebb6.  if v0 == 0 then goto L27ebe4;
  #L27ebba.  v3:= 1I;
  #L27ebbc.  v2.`io.reactivex.internal.operators.observable.y3.e` @type ^`boolean` := v3 @kind boolean;
  #L27ebc0.  v3:= v2.`io.reactivex.internal.operators.observable.y3.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27ebc4.  call `dispose`(v3) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27ebca.  v3:= v2.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` @kind object;
  #L27ebce.  v0:= new `java.lang.IllegalArgumentException`;
  #L27ebd2.  v1:= "Sequence contains more than one element!" @kind object;
  #L27ebd6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27ebdc.  call `onError`(v3, v0) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27ebe2.  return @kind void;
  #L27ebe4.  v2.`io.reactivex.internal.operators.observable.y3.d` @type ^`java.lang.Object` := v3 @kind object;
  #L27ebe8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.y3` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/y3;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ebfc.  v0:= v1.`io.reactivex.internal.operators.observable.y3.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27ec00.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27ec06.  v0:= temp;
  #L27ec08.  if v0 == 0 then goto L27ec1a;
  #L27ec0c.  v1.`io.reactivex.internal.operators.observable.y3.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27ec10.  v2:= v1.`io.reactivex.internal.operators.observable.y3.b` @type ^`io.reactivex.j` @kind object;
  #L27ec14.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27ec1a.  return @kind void;
}
