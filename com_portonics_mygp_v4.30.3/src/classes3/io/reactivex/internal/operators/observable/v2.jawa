record `io.reactivex.internal.operators.observable.v2` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.v2.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.v2.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.v2` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/v2;.<init>:(Lio/reactivex/t;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2790bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2790c2.  v0.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2790c6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.v2` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/v2;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2790d8.  v0:= v1.`io.reactivex.internal.operators.observable.v2.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L2790dc.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2790e2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.v2` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/v2;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27909c.  v0:= v1.`io.reactivex.internal.operators.observable.v2.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L2790a0.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L2790a6.  v0:= temp;
  #L2790a8.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.v2` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/v2;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2790f4.  call temp:= `a`() @signature `Lio/reactivex/l;.a:()Lio/reactivex/l;` @kind static;
  #L2790fa.  v0:= temp @kind object;
  #L2790fc.  v1:= v2.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L279100.  call `onNext`(v1, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L279106.  v0:= v2.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L27910a.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L279110.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.v2` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/v2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279124.  call temp:= `b`(v2) @signature `Lio/reactivex/l;.b:(Ljava/lang/Throwable;)Lio/reactivex/l;` @kind static;
  #L27912a.  v2:= temp @kind object;
  #L27912c.  v0:= v1.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L279130.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L279136.  v2:= v1.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L27913a.  call `onComplete`(v2) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L279140.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.v2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/v2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279154.  v0:= v1.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L279158.  call temp:= `c`(v2) @signature `Lio/reactivex/l;.c:(Ljava/lang/Object;)Lio/reactivex/l;` @kind static;
  #L27915e.  v2:= temp @kind object;
  #L279160.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L279166.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.v2` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/v2;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279178.  v0:= v1.`io.reactivex.internal.operators.observable.v2.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27917c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L279182.  v0:= temp;
  #L279184.  if v0 == 0 then goto L279196;
  #L279188.  v1.`io.reactivex.internal.operators.observable.v2.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27918c.  v2:= v1.`io.reactivex.internal.operators.observable.v2.b` @type ^`io.reactivex.t` @kind object;
  #L279190.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L279196.  return @kind void;
}
