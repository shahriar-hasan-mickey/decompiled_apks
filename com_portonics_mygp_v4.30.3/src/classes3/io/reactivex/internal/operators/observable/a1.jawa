record `io.reactivex.internal.operators.observable.a1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.a1.b` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.operators.observable.a1.c` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.operators.observable.a1.d` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.observable.a1.e` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.observable.a1.f` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.a1.g` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.a1.h` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.a1` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.g` v2 @kind object, `io.reactivex.d0.g` v3 @kind object, `io.reactivex.d0.a` v4 @kind object, `io.reactivex.d0.a` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/a1;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2739d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2739d6.  v0.`io.reactivex.internal.operators.observable.a1.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2739da.  v0.`io.reactivex.internal.operators.observable.a1.c` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L2739de.  v0.`io.reactivex.internal.operators.observable.a1.d` @type ^`io.reactivex.d0.g` := v3 @kind object;
  #L2739e2.  v0.`io.reactivex.internal.operators.observable.a1.e` @type ^`io.reactivex.d0.a` := v4 @kind object;
  #L2739e6.  v0.`io.reactivex.internal.operators.observable.a1.f` @type ^`io.reactivex.d0.a` := v5 @kind object;
  #L2739ea.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.a1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/a1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2739fc.  v0:= v1.`io.reactivex.internal.operators.observable.a1.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L273a00.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273a06.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.a1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/a1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2739b0.  v0:= v1.`io.reactivex.internal.operators.observable.a1.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L2739b4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L2739ba.  v0:= temp;
  #L2739bc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.a1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/a1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273a18.  v0:= v1.`io.reactivex.internal.operators.observable.a1.h` @type ^`boolean` @kind boolean;
  #L273a1c.  if v0 == 0 then goto L273a22;
  #L273a20.  return @kind void;
  #L273a22.  v0:= v1.`io.reactivex.internal.operators.observable.a1.e` @type ^`io.reactivex.d0.a` @kind object;
  #L273a26.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L273a2c.  v0:= 1I;
  #L273a2e.  v1.`io.reactivex.internal.operators.observable.a1.h` @type ^`boolean` := v0 @kind boolean;
  #L273a32.  v0:= v1.`io.reactivex.internal.operators.observable.a1.b` @type ^`io.reactivex.t` @kind object;
  #L273a36.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L273a3c.  v0:= v1.`io.reactivex.internal.operators.observable.a1.f` @type ^`io.reactivex.d0.a` @kind object;
  #L273a40.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L273a46.  goto L273a56;
  #L273a48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273a4a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273a50.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L273a56.  return @kind void;
  #L273a58.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273a5a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273a60.  call `onError`(v1, v0) @signature `Lio/reactivex/internal/operators/observable/a1;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L273a66.  return @kind void;
  catch `java.lang.Throwable` @[L273a22..L273a2c] goto L273a58;
  catch `java.lang.Throwable` @[L273a3c..L273a46] goto L273a48;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.a1` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/a1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L273a90.  v0:= v5.`io.reactivex.internal.operators.observable.a1.h` @type ^`boolean` @kind boolean;
  #L273a94.  if v0 == 0 then goto L273aa0;
  #L273a98.  call `t`(v6) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L273a9e.  return @kind void;
  #L273aa0.  v0:= 1I;
  #L273aa2.  v5.`io.reactivex.internal.operators.observable.a1.h` @type ^`boolean` := v0 @kind boolean;
  #L273aa6.  v1:= v5.`io.reactivex.internal.operators.observable.a1.d` @type ^`io.reactivex.d0.g` @kind object;
  #L273aaa.  call `accept`(v1, v6) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L273ab0.  goto L273ad6;
  #L273ab2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273ab4.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273aba.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L273abe.  v3:= 2I;
  #L273ac0.  v3:= new `java.lang.Throwable`[v3];
  #L273ac4.  v4:= 0I;
  #L273ac6.  v3[v4]:= v6 @kind object;
  #L273aca.  v3[v0]:= v1 @kind object;
  #L273ace.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L273ad4.  v6:= v2 @kind object;
  #L273ad6.  v0:= v5.`io.reactivex.internal.operators.observable.a1.b` @type ^`io.reactivex.t` @kind object;
  #L273ada.  call `onError`(v0, v6) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L273ae0.  v6:= v5.`io.reactivex.internal.operators.observable.a1.f` @type ^`io.reactivex.d0.a` @kind object;
  #L273ae4.  call `run`(v6) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L273aea.  goto L273afa;
  #L273aec.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273aee.  call `b`(v6) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273af4.  call `t`(v6) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L273afa.  return @kind void;
  catch `java.lang.Throwable` @[L273aa6..L273ab0] goto L273ab2;
  catch `java.lang.Throwable` @[L273ae0..L273aea] goto L273aec;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.a1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/a1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273b24.  v0:= v1.`io.reactivex.internal.operators.observable.a1.h` @type ^`boolean` @kind boolean;
  #L273b28.  if v0 == 0 then goto L273b2e;
  #L273b2c.  return @kind void;
  #L273b2e.  v0:= v1.`io.reactivex.internal.operators.observable.a1.c` @type ^`io.reactivex.d0.g` @kind object;
  #L273b32.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L273b38.  v0:= v1.`io.reactivex.internal.operators.observable.a1.b` @type ^`io.reactivex.t` @kind object;
  #L273b3c.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L273b42.  return @kind void;
  #L273b44.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273b46.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L273b4c.  v0:= v1.`io.reactivex.internal.operators.observable.a1.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L273b50.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273b56.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/a1;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L273b5c.  return @kind void;
  catch `java.lang.Throwable` @[L273b2e..L273b38] goto L273b44;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.a1` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/a1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273b7c.  v0:= v1.`io.reactivex.internal.operators.observable.a1.g` @type ^`io.reactivex.disposables.b` @kind object;
  #L273b80.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L273b86.  v0:= temp;
  #L273b88.  if v0 == 0 then goto L273b9a;
  #L273b8c.  v1.`io.reactivex.internal.operators.observable.a1.g` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L273b90.  v2:= v1.`io.reactivex.internal.operators.observable.a1.b` @type ^`io.reactivex.t` @kind object;
  #L273b94.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L273b9a.  return @kind void;
}
