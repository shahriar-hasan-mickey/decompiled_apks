record `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.BasicIntQueueDisposable` @kind class, `io.reactivex.t` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.delayErrors` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.disposed` @AccessFlag VOLATILE;
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.internal.util.AtomicThrowable` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.mapper` @AccessFlag FINAL;
  `io.reactivex.disposables.a` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L274e54.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/BasicIntQueueDisposable;.<init>:()V` @kind direct;
  #L274e5a.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` := v1 @kind object;
  #L274e5e.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.mapper` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L274e62.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.delayErrors` @type ^`boolean` := v3 @kind boolean;
  #L274e66.  v1:= new `io.reactivex.internal.util.AtomicThrowable`;
  #L274e6a.  call `<init>`(v1) @signature `Lio/reactivex/internal/util/AtomicThrowable;.<init>:()V` @kind direct;
  #L274e70.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` := v1 @kind object;
  #L274e74.  v1:= new `io.reactivex.disposables.a`;
  #L274e78.  call `<init>`(v1) @signature `Lio/reactivex/disposables/a;.<init>:()V` @kind direct;
  #L274e7e.  v0.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @type ^`io.reactivex.disposables.a` := v1 @kind object;
  #L274e82.  v1:= 1I;
  #L274e84.  call `lazySet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L274e8a.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L274e9c.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L274eb0.  v0:= 1I;
  #L274eb2.  v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.disposed` @type ^`boolean` := v0 @kind boolean;
  #L274eb6.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L274eba.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L274ec0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @type ^`io.reactivex.disposables.a` @kind object;
  #L274ec4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/a;.dispose:()V` @kind virtual;
  #L274eca.  return @kind void;
}
procedure `void` `innerComplete`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.innerComplete:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver;)V` @AccessFlag  {
    temp;
    v0;

  #L274edc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @type ^`io.reactivex.disposables.a` @kind object;
  #L274ee0.  call temp:= `c`(v0, v2) @signature `Lio/reactivex/disposables/a;.c:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L274ee6.  call `onComplete`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onComplete:()V` @kind virtual;
  #L274eec.  return @kind void;
}
procedure `void` `innerError`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this, `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.innerError:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver;Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;

  #L274f00.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @type ^`io.reactivex.disposables.a` @kind object;
  #L274f04.  call temp:= `c`(v0, v2) @signature `Lio/reactivex/disposables/a;.c:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L274f0a.  call `onError`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L274f10.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L274df4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L274df8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L274dfe.  v0:= temp;
  #L274e00.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L274e14.  v0:= 1I;
  #L274e16.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L274f24.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L274f2a.  v0:= temp;
  #L274f2c.  if v0 != 0 then goto L274f56;
  #L274f30.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L274f34.  call temp:= `terminate`(v0) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L274f3a.  v0:= temp @kind object;
  #L274f3c.  if v0 == 0 then goto L274f4c;
  #L274f40.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L274f44.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L274f4a.  goto L274f56;
  #L274f4c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L274f50.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L274f56.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L274f68.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L274f6c.  call temp:= `addThrowable`(v0, v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.addThrowable:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L274f72.  v0:= temp;
  #L274f74.  if v0 == 0 then goto L274fd0;
  #L274f78.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.delayErrors` @type ^`boolean` @kind boolean;
  #L274f7c.  if v2 == 0 then goto L274fa4;
  #L274f80.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L274f86.  v2:= temp;
  #L274f88.  if v2 != 0 then goto L274fd6;
  #L274f8c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L274f90.  call temp:= `terminate`(v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L274f96.  v2:= temp @kind object;
  #L274f98.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L274f9c.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L274fa2.  goto L274fd6;
  #L274fa4.  call `dispose`(v1) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.dispose:()V` @kind virtual;
  #L274faa.  v2:= 0I;
  #L274fac.  call temp:= `getAndSet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I` @kind virtual;
  #L274fb2.  v2:= temp;
  #L274fb4.  if v2 <= 0 then goto L274fd6;
  #L274fb8.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.errors` @type ^`io.reactivex.internal.util.AtomicThrowable` @kind object;
  #L274fbc.  call temp:= `terminate`(v2) @signature `Lio/reactivex/internal/util/AtomicThrowable;.terminate:()Ljava/lang/Throwable;` @kind virtual;
  #L274fc2.  v2:= temp @kind object;
  #L274fc4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L274fc8.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L274fce.  goto L274fd6;
  #L274fd0.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L274fd6.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L274fe8.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.mapper` @type ^`io.reactivex.d0.k` @kind object;
  #L274fec.  call temp:= `apply`(v0, v3) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L274ff2.  v3:= temp @kind object;
  #L274ff4.  v0:= "The mapper returned a null CompletableSource" @kind object;
  #L274ff8.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L274ffe.  v3:= temp @kind object;
  #L275000.  v3:= (`io.reactivex.c`) v3 @kind object;
  #L275004.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L27500a.  v0:= new `io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver`;
  #L27500e.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;)V` @kind direct;
  #L275014.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.disposed` @type ^`boolean` @kind boolean;
  #L275018.  if v1 != 0 then goto L275032;
  #L27501c.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.set` @type ^`io.reactivex.disposables.a` @kind object;
  #L275020.  call temp:= `b`(v1, v0) @signature `Lio/reactivex/disposables/a;.b:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L275026.  v1:= temp;
  #L275028.  if v1 == 0 then goto L275032;
  #L27502c.  call `b`(v3, v0) @signature `Lio/reactivex/c;.b:(Lio/reactivex/b;)V` @kind interface;
  #L275032.  return @kind void;
  #L275034.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L275036.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27503c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L275040.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L275046.  call `onError`(v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27504c.  return @kind void;
  catch `java.lang.Throwable` @[L274fe8..L275004] goto L275034;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27506c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L275070.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L275076.  v0:= temp;
  #L275078.  if v0 == 0 then goto L27508a;
  #L27507c.  v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L275080.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L275084.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27508a.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L274e40.  v0:= 0I;
  #L274e42.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/observable/ObservableFlatMapCompletable$FlatMapCompletableMainObserver;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L274e28.  v1:= v1 ^& 2;
  #L274e2c.  return v1;
}
