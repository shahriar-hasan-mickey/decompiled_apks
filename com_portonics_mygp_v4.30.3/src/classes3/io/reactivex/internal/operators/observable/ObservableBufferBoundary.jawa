record `io.reactivex.internal.operators.observable.ObservableBufferBoundary` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.ObservableBufferBoundary.c` @AccessFlag FINAL;
  `io.reactivex.r` `io.reactivex.internal.operators.observable.ObservableBufferBoundary.d` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableBufferBoundary.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableBufferBoundary` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.r` v2 @kind object, `io.reactivex.d0.k` v3 @kind object, `java.util.concurrent.Callable` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary;.<init>:(Lio/reactivex/r;Lio/reactivex/r;Lio/reactivex/d0/k;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26ec74.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L26ec7a.  v0.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.d` @type ^`io.reactivex.r` := v2 @kind object;
  #L26ec7e.  v0.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.e` @type ^`io.reactivex.d0.k` := v3 @kind object;
  #L26ec82.  v0.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.c` @type ^`java.util.concurrent.Callable` := v4 @kind object;
  #L26ec86.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableBufferBoundary` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26ec98.  v0:= new `io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver`;
  #L26ec9c.  v1:= v4.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.d` @type ^`io.reactivex.r` @kind object;
  #L26eca0.  v2:= v4.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.e` @type ^`io.reactivex.d0.k` @kind object;
  #L26eca4.  v3:= v4.`io.reactivex.internal.operators.observable.ObservableBufferBoundary.c` @type ^`java.util.concurrent.Callable` @kind object;
  #L26eca8.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableBufferBoundary$BufferBoundaryObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/r;Lio/reactivex/d0/k;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L26ecae.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26ecb4.  v5:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L26ecb8.  call `subscribe`(v5, v0) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26ecbe.  return @kind void;
}
