record `io.reactivex.internal.operators.observable.u3` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.u3.c` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.observable.u3.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.u3` v0 @kind this, `io.reactivex.r` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `io.reactivex.d0.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/u3;.<init>:(Lio/reactivex/r;Ljava/util/concurrent/Callable;Lio/reactivex/d0/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27e264.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27e26a.  v0.`io.reactivex.internal.operators.observable.u3.c` @type ^`io.reactivex.d0.c` := v3 @kind object;
  #L27e26e.  v0.`io.reactivex.internal.operators.observable.u3.d` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L27e272.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.u3` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/u3;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27e284.  v0:= v4.`io.reactivex.internal.operators.observable.u3.d` @type ^`java.util.concurrent.Callable` @kind object;
  #L27e288.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L27e28e.  v0:= temp @kind object;
  #L27e290.  v1:= "The seed supplied is null" @kind object;
  #L27e294.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27e29a.  v0:= temp @kind object;
  #L27e29c.  v1:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27e2a0.  v2:= new `io.reactivex.internal.operators.observable.t3`;
  #L27e2a4.  v3:= v4.`io.reactivex.internal.operators.observable.u3.c` @type ^`io.reactivex.d0.c` @kind object;
  #L27e2a8.  call `<init>`(v2, v5, v3, v0) @signature `Lio/reactivex/internal/operators/observable/t3;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/c;Ljava/lang/Object;)V` @kind direct;
  #L27e2ae.  call `subscribe`(v1, v2) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27e2b4.  return @kind void;
  #L27e2b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27e2b8.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27e2be.  call `error`(v0, v5) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27e2c4.  return @kind void;
  catch `java.lang.Throwable` @[L27e284..L27e29c] goto L27e2b6;
}
