record `io.reactivex.internal.operators.observable.j1` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.n` @kind class, `io.reactivex.e0.a.h` @kind interface {
}
global `io.reactivex.n` `@@io.reactivex.internal.operators.observable.j1.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/j1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2741fc.  v0:= new `io.reactivex.internal.operators.observable.j1`;
  #L274200.  call `<init>`(v0) @signature `Lio/reactivex/internal/operators/observable/j1;.<init>:()V` @kind direct;
  #L274206.  `@@io.reactivex.internal.operators.observable.j1.b` @type ^`io.reactivex.n` := v0 @kind object;
  #L27420a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.j1` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/j1;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27421c.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L274222.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.j1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/j1;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2741e8.  v0:= 0I;
  #L2741ea.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.j1` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/j1;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;

  #L274234.  call `complete`(v1) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L27423a.  return @kind void;
}
