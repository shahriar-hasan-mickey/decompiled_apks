record `io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.<init>:(Lio/reactivex/t;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a96c.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L27a972.  v0.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @type ^`io.reactivex.t` := v1 @kind object;
  #L27a976.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a988.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L27a98c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27a992.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L27a998.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a94c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L27a950.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L27a956.  v0:= temp;
  #L27a958.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a9ac.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L27a9b2.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L27a9b6.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27a9bc.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a9d0.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L27a9d6.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L27a9da.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27a9e0.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a9f4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L27a9f8.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27a9fe.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservablePublishSelector$TargetObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27aa10.  v0:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L27aa14.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27aa1a.  v0:= temp;
  #L27aa1c.  if v0 == 0 then goto L27aa2e;
  #L27aa20.  v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L27aa24.  v2:= v1.`io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L27aa28.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27aa2e.  return @kind void;
}
