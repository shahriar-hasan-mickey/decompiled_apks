record `io.reactivex.internal.operators.observable.k` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.observable.k.b` @AccessFlag FINAL;
  `io.reactivex.d0.m` `io.reactivex.internal.operators.observable.k.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.k.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.k.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.k` v0 @kind this, `io.reactivex.z` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/k;.<init>:(Lio/reactivex/z;Lio/reactivex/d0/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26d26c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26d272.  v0.`io.reactivex.internal.operators.observable.k.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L26d276.  v0.`io.reactivex.internal.operators.observable.k.c` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L26d27a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.k` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/k;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d28c.  v0:= v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d290.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26d296.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.k` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/k;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d24c.  v0:= v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d250.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L26d256.  v0:= temp;
  #L26d258.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.k` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/k;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26d2a8.  v0:= v2.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` @kind boolean;
  #L26d2ac.  if v0 == 0 then goto L26d2b2;
  #L26d2b0.  return @kind void;
  #L26d2b2.  v0:= 1I;
  #L26d2b4.  v2.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` := v0 @kind boolean;
  #L26d2b8.  v0:= v2.`io.reactivex.internal.operators.observable.k.b` @type ^`io.reactivex.z` @kind object;
  #L26d2bc.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L26d2c0.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26d2c6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.k` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/k;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d2d8.  v0:= v1.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` @kind boolean;
  #L26d2dc.  if v0 == 0 then goto L26d2e8;
  #L26d2e0.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L26d2e6.  return @kind void;
  #L26d2e8.  v0:= 1I;
  #L26d2ea.  v1.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` := v0 @kind boolean;
  #L26d2ee.  v0:= v1.`io.reactivex.internal.operators.observable.k.b` @type ^`io.reactivex.z` @kind object;
  #L26d2f2.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26d2f8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.k` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/k;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d30c.  v0:= v1.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` @kind boolean;
  #L26d310.  if v0 == 0 then goto L26d316;
  #L26d314.  return @kind void;
  #L26d316.  v0:= v1.`io.reactivex.internal.operators.observable.k.c` @type ^`io.reactivex.d0.m` @kind object;
  #L26d31a.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L26d320.  v2:= temp;
  #L26d322.  if v2 != 0 then goto L26d344;
  #L26d326.  v2:= 1I;
  #L26d328.  v1.`io.reactivex.internal.operators.observable.k.e` @type ^`boolean` := v2 @kind boolean;
  #L26d32c.  v2:= v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d330.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26d336.  v2:= v1.`io.reactivex.internal.operators.observable.k.b` @type ^`io.reactivex.z` @kind object;
  #L26d33a.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L26d33e.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26d344.  return @kind void;
  #L26d346.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26d348.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26d34e.  v0:= v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d352.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26d358.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/k;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L26d35e.  return @kind void;
  catch `java.lang.Throwable` @[L26d316..L26d322] goto L26d346;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.k` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/k;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d37c.  v0:= v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d380.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26d386.  v0:= temp;
  #L26d388.  if v0 == 0 then goto L26d39a;
  #L26d38c.  v1.`io.reactivex.internal.operators.observable.k.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L26d390.  v2:= v1.`io.reactivex.internal.operators.observable.k.b` @type ^`io.reactivex.z` @kind object;
  #L26d394.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26d39a.  return @kind void;
}
