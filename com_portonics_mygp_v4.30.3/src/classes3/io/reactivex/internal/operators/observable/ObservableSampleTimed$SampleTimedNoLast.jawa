record `io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast` @kind class @AccessFlag FINAL extends `io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver` @kind class {
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast` v0 @kind this, `io.reactivex.t` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.x` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedNoLast;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27d5bc.  call `<init>`(v0, v1, v2, v4, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedObserver;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;)V` @kind direct;
  #L27d5c2.  return @kind void;
}
procedure `void` `complete`(`io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedNoLast;.complete:()V` @AccessFlag  {
    temp;
    v0;

  #L27d5d4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L27d5d8.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27d5de.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedNoLast;.run:()V` @AccessFlag PUBLIC {
    temp;

  #L27d5f0.  call `emit`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableSampleTimed$SampleTimedObserver;.emit:()V` @kind virtual;
  #L27d5f6.  return @kind void;
}
