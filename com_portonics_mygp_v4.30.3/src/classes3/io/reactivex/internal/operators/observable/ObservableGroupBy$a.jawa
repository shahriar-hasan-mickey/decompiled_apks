record `io.reactivex.internal.operators.observable.ObservableGroupBy$a` @kind class @AccessFlag FINAL extends `io.reactivex.f0.b` @kind class {
  `io.reactivex.internal.operators.observable.ObservableGroupBy$State` `io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableGroupBy$a` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableGroupBy$State` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L276a8c.  call `<init>`(v0, v1) @signature `Lio/reactivex/f0/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L276a92.  v0.`io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` := v2 @kind object;
  #L276a96.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableGroupBy$a` `w`(`java.lang.Object` v1 @kind object, `int` v2 , `io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver` v3 @kind object, `boolean` v4 ) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.w:(Ljava/lang/Object;ILio/reactivex/internal/operators/observable/ObservableGroupBy$GroupByObserver;Z)Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L276a64.  v0:= new `io.reactivex.internal.operators.observable.ObservableGroupBy$State`;
  #L276a68.  call `<init>`(v0, v2, v3, v1, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.<init>:(ILio/reactivex/internal/operators/observable/ObservableGroupBy$GroupByObserver;Ljava/lang/Object;Z)V` @kind direct;
  #L276a6e.  v2:= new `io.reactivex.internal.operators.observable.ObservableGroupBy$a`;
  #L276a72.  call `<init>`(v2, v1, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.<init>:(Ljava/lang/Object;Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;)V` @kind direct;
  #L276a78.  return v2 @kind object;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableGroupBy$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276aa8.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L276aac.  call `onComplete`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onComplete:()V` @kind virtual;
  #L276ab2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableGroupBy$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276ac4.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L276ac8.  call `onError`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L276ace.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableGroupBy$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276ae0.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L276ae4.  call `onNext`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L276aea.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableGroupBy$a` v1 @kind this, `io.reactivex.t` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$a;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L276afc.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableGroupBy$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableGroupBy$State` @kind object;
  #L276b00.  call `subscribe`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableGroupBy$State;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L276b06.  return @kind void;
}
