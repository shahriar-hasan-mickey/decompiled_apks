record `io.reactivex.internal.operators.observable.ObservableRetryPredicate` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.m` `io.reactivex.internal.operators.observable.ObservableRetryPredicate.c` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableRetryPredicate.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableRetryPredicate` v0 @kind this, `io.reactivex.n` v1 @kind object, `long` v2 , `io.reactivex.d0.m` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate;.<init>:(Lio/reactivex/n;JLio/reactivex/d0/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27d184.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27d18a.  v0.`io.reactivex.internal.operators.observable.ObservableRetryPredicate.c` @type ^`io.reactivex.d0.m` := v4 @kind object;
  #L27d18e.  v0.`io.reactivex.internal.operators.observable.ObservableRetryPredicate.d` @type ^`long` := v2 @kind wide;
  #L27d192.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableRetryPredicate` v8 @kind this, `io.reactivex.t` v9 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L27d1a4.  v5:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L27d1a8.  call `<init>`(v5) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L27d1ae.  call `onSubscribe`(v9, v5) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27d1b4.  v7:= new `io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver`;
  #L27d1b8.  v2:= v8.`io.reactivex.internal.operators.observable.ObservableRetryPredicate.d` @type ^`long` @kind wide;
  #L27d1bc.  v4:= v8.`io.reactivex.internal.operators.observable.ObservableRetryPredicate.c` @type ^`io.reactivex.d0.m` @kind object;
  #L27d1c0.  v6:= v8.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27d1c4.  v0:= v7 @kind object;
  #L27d1c6.  v1:= v9 @kind object;
  #L27d1c8.  call `<init>`(v0, v1, v2, v4, v5, v6) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate$RepeatObserver;.<init>:(Lio/reactivex/t;JLio/reactivex/d0/m;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/r;)V` @kind direct;
  #L27d1ce.  call `subscribeNext`(v7) @signature `Lio/reactivex/internal/operators/observable/ObservableRetryPredicate$RepeatObserver;.subscribeNext:()V` @kind virtual;
  #L27d1d4.  return @kind void;
}
