record `io.reactivex.internal.operators.observable.s4` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.s4.b` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.s4.c` @AccessFlag FINAL;
  `io.reactivex.x` `io.reactivex.internal.operators.observable.s4.d` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.s4.e` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.s4.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.s4` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.util.concurrent.TimeUnit` v2 @kind object, `io.reactivex.x` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/s4;.<init>:(Lio/reactivex/t;Ljava/util/concurrent/TimeUnit;Lio/reactivex/x;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L281234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28123a.  v0.`io.reactivex.internal.operators.observable.s4.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L28123e.  v0.`io.reactivex.internal.operators.observable.s4.d` @type ^`io.reactivex.x` := v3 @kind object;
  #L281242.  v0.`io.reactivex.internal.operators.observable.s4.c` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L281246.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.s4` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/s4;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L281258.  v0:= v1.`io.reactivex.internal.operators.observable.s4.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L28125c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L281262.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.s4` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/s4;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L281214.  v0:= v1.`io.reactivex.internal.operators.observable.s4.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L281218.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L28121e.  v0:= temp;
  #L281220.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.s4` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/s4;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L281274.  v0:= v1.`io.reactivex.internal.operators.observable.s4.b` @type ^`io.reactivex.t` @kind object;
  #L281278.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L28127e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.s4` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/s4;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L281290.  v0:= v1.`io.reactivex.internal.operators.observable.s4.b` @type ^`io.reactivex.t` @kind object;
  #L281294.  call `onError`(v0, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L28129a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.s4` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/s4;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2812ac.  v0:= v5.`io.reactivex.internal.operators.observable.s4.d` @type ^`io.reactivex.x` @kind object;
  #L2812b0.  v1:= v5.`io.reactivex.internal.operators.observable.s4.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2812b4.  call temp:= `b`(v0, v1) @signature `Lio/reactivex/x;.b:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2812ba.  v0:= temp @kind wide;
  #L2812bc.  v2:= v5.`io.reactivex.internal.operators.observable.s4.e` @type ^`long` @kind wide;
  #L2812c0.  v5.`io.reactivex.internal.operators.observable.s4.e` @type ^`long` := v0 @kind wide;
  #L2812c4.  v0:= v0 - v2 @kind long;
  #L2812c6.  v2:= v5.`io.reactivex.internal.operators.observable.s4.b` @type ^`io.reactivex.t` @kind object;
  #L2812ca.  v3:= new `io.reactivex.h0.j`;
  #L2812ce.  v4:= v5.`io.reactivex.internal.operators.observable.s4.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2812d2.  call `<init>`(v3, v6, v0, v4) @signature `Lio/reactivex/h0/j;.<init>:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2812d8.  call `onNext`(v2, v3) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2812de.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.s4` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/s4;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2812f0.  v0:= v2.`io.reactivex.internal.operators.observable.s4.f` @type ^`io.reactivex.disposables.b` @kind object;
  #L2812f4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2812fa.  v0:= temp;
  #L2812fc.  if v0 == 0 then goto L281322;
  #L281300.  v2.`io.reactivex.internal.operators.observable.s4.f` @type ^`io.reactivex.disposables.b` := v3 @kind object;
  #L281304.  v3:= v2.`io.reactivex.internal.operators.observable.s4.d` @type ^`io.reactivex.x` @kind object;
  #L281308.  v0:= v2.`io.reactivex.internal.operators.observable.s4.c` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L28130c.  call temp:= `b`(v3, v0) @signature `Lio/reactivex/x;.b:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L281312.  v0:= temp @kind wide;
  #L281314.  v2.`io.reactivex.internal.operators.observable.s4.e` @type ^`long` := v0 @kind wide;
  #L281318.  v3:= v2.`io.reactivex.internal.operators.observable.s4.b` @type ^`io.reactivex.t` @kind object;
  #L28131c.  call `onSubscribe`(v3, v2) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L281322.  return @kind void;
}
