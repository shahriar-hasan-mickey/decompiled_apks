record `io.reactivex.internal.operators.observable.ObservableThrottleLatest` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.c` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.d` @AccessFlag FINAL;
  `io.reactivex.x` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableThrottleLatest.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableThrottleLatest` v0 @kind this, `io.reactivex.n` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `io.reactivex.x` v5 @kind object, `boolean` v6 ) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.<init>:(Lio/reactivex/n;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2811a8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2811ae.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.c` @type ^`long` := v2 @kind wide;
  #L2811b2.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.d` @type ^`java.util.concurrent.TimeUnit` := v4 @kind object;
  #L2811b6.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.e` @type ^`io.reactivex.x` := v5 @kind object;
  #L2811ba.  v0.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.f` @type ^`boolean` := v6 @kind boolean;
  #L2811be.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableThrottleLatest` v9 @kind this, `io.reactivex.t` v10 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2811d0.  v0:= v9.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2811d4.  v8:= new `io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver`;
  #L2811d8.  v3:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.c` @type ^`long` @kind wide;
  #L2811dc.  v5:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.d` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2811e0.  v1:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.e` @type ^`io.reactivex.x` @kind object;
  #L2811e4.  call temp:= `a`(v1) @signature `Lio/reactivex/x;.a:()Lio/reactivex/x$a;` @kind virtual;
  #L2811ea.  v6:= temp @kind object;
  #L2811ec.  v7:= v9.`io.reactivex.internal.operators.observable.ObservableThrottleLatest.f` @type ^`boolean` @kind boolean;
  #L2811f0.  v1:= v8 @kind object;
  #L2811f2.  v2:= v10 @kind object;
  #L2811f4.  call `<init>`(v1, v2, v3, v5, v6, v7) @signature `Lio/reactivex/internal/operators/observable/ObservableThrottleLatest$ThrottleLatestObserver;.<init>:(Lio/reactivex/t;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x$a;Z)V` @kind direct;
  #L2811fa.  call `subscribe`(v0, v8) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L281200.  return @kind void;
}
