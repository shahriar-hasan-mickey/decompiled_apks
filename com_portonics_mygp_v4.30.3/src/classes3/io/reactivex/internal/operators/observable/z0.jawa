record `io.reactivex.internal.operators.observable.z0` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.g` `io.reactivex.internal.operators.observable.z0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.z0` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.g` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/z0;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L273724.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27372a.  v0.`io.reactivex.internal.operators.observable.z0.c` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L27372e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.z0` v3 @kind this, `io.reactivex.t` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/z0;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L273740.  v0:= v3.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L273744.  v1:= new `io.reactivex.internal.operators.observable.y0`;
  #L273748.  v2:= v3.`io.reactivex.internal.operators.observable.z0.c` @type ^`io.reactivex.d0.g` @kind object;
  #L27374c.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/observable/y0;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/g;)V` @kind direct;
  #L273752.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L273758.  return @kind void;
}
