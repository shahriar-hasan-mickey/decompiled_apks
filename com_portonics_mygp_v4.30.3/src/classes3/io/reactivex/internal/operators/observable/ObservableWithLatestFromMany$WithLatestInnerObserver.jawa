record `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.t` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.hasValue` @AccessFlag ;
  `int` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.index` @AccessFlag FINAL;
  `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.parent` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L285230.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L285236.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` := v1 @kind object;
  #L28523a.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.index` @type ^`int` := v2;
  #L28523e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L285250.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L285256.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L285268.  v0:= v3.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` @kind object;
  #L28526c.  v1:= v3.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.index` @type ^`int`;
  #L285270.  v2:= v3.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.hasValue` @type ^`boolean` @kind boolean;
  #L285274.  call `innerComplete`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.innerComplete:(IZ)V` @kind virtual;
  #L28527a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28528c.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` @kind object;
  #L285290.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.index` @type ^`int`;
  #L285294.  call `innerError`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.innerError:(ILjava/lang/Throwable;)V` @kind virtual;
  #L28529a.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2852ac.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.hasValue` @type ^`boolean` @kind boolean;
  #L2852b0.  if v0 != 0 then goto L2852ba;
  #L2852b4.  v0:= 1I;
  #L2852b6.  v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.hasValue` @type ^`boolean` := v0 @kind boolean;
  #L2852ba.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.parent` @type ^`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver` @kind object;
  #L2852be.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver.index` @type ^`int`;
  #L2852c2.  call `innerNext`(v0, v1, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.innerNext:(ILjava/lang/Object;)V` @kind virtual;
  #L2852c8.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestInnerObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L2852dc.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2852e2.  return @kind void;
}
