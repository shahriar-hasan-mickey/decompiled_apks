record `io.reactivex.internal.operators.observable.q` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`io.reactivex.r` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/q;.a:(Lio/reactivex/r;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26dbd0.  v0:= new `io.reactivex.internal.util.d`;
  #L26dbd4.  call `<init>`(v0) @signature `Lio/reactivex/internal/util/d;.<init>:()V` @kind direct;
  #L26dbda.  v1:= new `io.reactivex.internal.observers.LambdaObserver`;
  #L26dbde.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L26dbe4.  v2:= temp @kind object;
  #L26dbe6.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L26dbec.  v3:= temp @kind object;
  #L26dbee.  call `<init>`(v1, v2, v0, v0, v3) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/g;)V` @kind direct;
  #L26dbf4.  call `subscribe`(v4, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26dbfa.  call `a`(v0, v1) @signature `Lio/reactivex/internal/util/c;.a:(Ljava/util/concurrent/CountDownLatch;Lio/reactivex/disposables/b;)V` @kind static;
  #L26dc00.  v4:= v0.`io.reactivex.internal.util.d.b` @type ^`java.lang.Throwable` @kind object;
  #L26dc04.  if v4 != 0 then goto L26dc0a;
  #L26dc08.  return @kind void;
  #L26dc0a.  call temp:= `e`(v4) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L26dc10.  v4:= temp @kind object;
  #L26dc12.  throw v4;
}
procedure `void` `b`(`io.reactivex.r` v4 @kind object, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/q;.b:(Lio/reactivex/r;Lio/reactivex/t;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26dc24.  v0:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L26dc28.  call `<init>`(v0) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L26dc2e.  v1:= new `io.reactivex.internal.observers.BlockingObserver`;
  #L26dc32.  call `<init>`(v1, v0) @signature `Lio/reactivex/internal/observers/BlockingObserver;.<init>:(Ljava/util/Queue;)V` @kind direct;
  #L26dc38.  call `onSubscribe`(v5, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26dc3e.  call `subscribe`(v4, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L26dc44.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/observers/BlockingObserver;.isDisposed:()Z` @kind virtual;
  #L26dc4a.  v2:= temp;
  #L26dc4c.  if v2 == 0 then goto L26dc52;
  #L26dc50.  goto L26dc98;
  #L26dc52.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/BlockingQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L26dc58.  v2:= temp @kind object;
  #L26dc5a.  if v2 != 0 then goto L26dc78;
  #L26dc5e.  call temp:= `take`(v0) @signature `Ljava/util/concurrent/BlockingQueue;.take:()Ljava/lang/Object;` @kind interface;
  #L26dc64.  v2:= temp @kind object;
  #L26dc66.  goto L26dc78;
  #L26dc68.  v4:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L26dc6a.  call `dispose`(v1) @signature `Lio/reactivex/internal/observers/BlockingObserver;.dispose:()V` @kind virtual;
  #L26dc70.  call `onError`(v5, v4) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26dc76.  return @kind void;
  #L26dc78.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/observers/BlockingObserver;.isDisposed:()Z` @kind virtual;
  #L26dc7e.  v3:= temp;
  #L26dc80.  if v3 != 0 then goto L26dc98;
  #L26dc84.  v3:= `@@io.reactivex.internal.observers.BlockingObserver.TERMINATED` @type ^`java.lang.Object` @kind object;
  #L26dc88.  if v4 == v3 then goto L26dc98;
  #L26dc8c.  call temp:= `acceptFull`(v2, v5) @signature `Lio/reactivex/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/t;)Z` @kind static;
  #L26dc92.  v2:= temp;
  #L26dc94.  if v2 == 0 then goto L26dc44;
  #L26dc98.  return @kind void;
  catch `java.lang.InterruptedException` @[L26dc5e..L26dc66] goto L26dc68;
}
procedure `void` `c`(`io.reactivex.r` v2 @kind object, `io.reactivex.d0.g` v3 @kind object, `io.reactivex.d0.g` v4 @kind object, `io.reactivex.d0.a` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/q;.c:(Lio/reactivex/r;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L26dcbc.  v0:= "onNext is null" @kind object;
  #L26dcc0.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26dcc6.  v0:= "onError is null" @kind object;
  #L26dcca.  call temp:= `e`(v4, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26dcd0.  v0:= "onComplete is null" @kind object;
  #L26dcd4.  call temp:= `e`(v5, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26dcda.  v0:= new `io.reactivex.internal.observers.LambdaObserver`;
  #L26dcde.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L26dce4.  v1:= temp @kind object;
  #L26dce6.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/internal/observers/LambdaObserver;.<init>:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/g;)V` @kind direct;
  #L26dcec.  call `b`(v2, v0) @signature `Lio/reactivex/internal/operators/observable/q;.b:(Lio/reactivex/r;Lio/reactivex/t;)V` @kind static;
  #L26dcf2.  return @kind void;
}
