record `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `io.reactivex.d0.k` @kind interface {
}
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L277d78.  v0:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`;
  #L277d7c.  v1:= "INSTANCE" @kind object;
  #L277d80.  v2:= 0I;
  #L277d82.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L277d88.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.INSTANCE` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` := v0 @kind object;
  #L277d8c.  v1:= 1I;
  #L277d8e.  v1:= new `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[v1];
  #L277d92.  v1[v2]:= v0 @kind object;
  #L277d96.  `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] := v1 @kind object;
  #L277d9a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L277dac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L277db2.  return @kind void;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L277d14.  v0:= constclass @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` @kind object;
  #L277d18.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L277d1e.  v1:= temp @kind object;
  #L277d20.  v1:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`) v1 @kind object;
  #L277d24.  return v1 @kind object;
}
procedure `io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] `values`() @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.values:()[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L277d38.  v0:= `@@io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt.$VALUES` @type ^`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[] @kind object;
  #L277d3c.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.clone:()Ljava/lang/Object;` @kind virtual;
  #L277d42.  v0:= temp @kind object;
  #L277d44.  v0:= (`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt`[]) v0 @kind object;
  #L277d48.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L277d5c.  v1:= 0I;
  #L277d5e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L277d64.  v1:= temp @kind object;
  #L277d66.  return v1 @kind object;
}
