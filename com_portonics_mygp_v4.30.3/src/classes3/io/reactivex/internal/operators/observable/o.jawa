record `io.reactivex.internal.operators.observable.o` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.observable.o.b` @AccessFlag FINAL;
  `io.reactivex.d0.m` `io.reactivex.internal.operators.observable.o.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.o.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.o.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.o` v0 @kind this, `io.reactivex.z` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/o;.<init>:(Lio/reactivex/z;Lio/reactivex/d0/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26d9d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26d9d6.  v0.`io.reactivex.internal.operators.observable.o.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L26d9da.  v0.`io.reactivex.internal.operators.observable.o.c` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L26d9de.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.o` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/o;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d9f0.  v0:= v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d9f4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26d9fa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.o` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/o;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26d9b0.  v0:= v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26d9b4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L26d9ba.  v0:= temp;
  #L26d9bc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.o` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/o;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26da0c.  v0:= v2.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` @kind boolean;
  #L26da10.  if v0 != 0 then goto L26da28;
  #L26da14.  v0:= 1I;
  #L26da16.  v2.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` := v0 @kind boolean;
  #L26da1a.  v0:= v2.`io.reactivex.internal.operators.observable.o.b` @type ^`io.reactivex.z` @kind object;
  #L26da1e.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L26da22.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26da28.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.o` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/o;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26da3c.  v0:= v1.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` @kind boolean;
  #L26da40.  if v0 == 0 then goto L26da4c;
  #L26da44.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L26da4a.  return @kind void;
  #L26da4c.  v0:= 1I;
  #L26da4e.  v1.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` := v0 @kind boolean;
  #L26da52.  v0:= v1.`io.reactivex.internal.operators.observable.o.b` @type ^`io.reactivex.z` @kind object;
  #L26da56.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26da5c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.o` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/o;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26da70.  v0:= v1.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` @kind boolean;
  #L26da74.  if v0 == 0 then goto L26da7a;
  #L26da78.  return @kind void;
  #L26da7a.  v0:= v1.`io.reactivex.internal.operators.observable.o.c` @type ^`io.reactivex.d0.m` @kind object;
  #L26da7e.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L26da84.  v2:= temp;
  #L26da86.  if v2 == 0 then goto L26daa8;
  #L26da8a.  v2:= 1I;
  #L26da8c.  v1.`io.reactivex.internal.operators.observable.o.e` @type ^`boolean` := v2 @kind boolean;
  #L26da90.  v2:= v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26da94.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26da9a.  v2:= v1.`io.reactivex.internal.operators.observable.o.b` @type ^`io.reactivex.z` @kind object;
  #L26da9e.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L26daa2.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26daa8.  return @kind void;
  #L26daaa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26daac.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26dab2.  v0:= v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26dab6.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26dabc.  call `onError`(v1, v2) @signature `Lio/reactivex/internal/operators/observable/o;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L26dac2.  return @kind void;
  catch `java.lang.Throwable` @[L26da7a..L26da86] goto L26daaa;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.o` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/o;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26dae0.  v0:= v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26dae4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26daea.  v0:= temp;
  #L26daec.  if v0 == 0 then goto L26dafe;
  #L26daf0.  v1.`io.reactivex.internal.operators.observable.o.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L26daf4.  v2:= v1.`io.reactivex.internal.operators.observable.o.b` @type ^`io.reactivex.z` @kind object;
  #L26daf8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26dafe.  return @kind void;
}
