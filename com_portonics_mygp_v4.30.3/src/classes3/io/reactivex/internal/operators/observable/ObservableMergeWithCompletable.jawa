record `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.c` `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` v0 @kind this, `io.reactivex.n` v1 @kind object, `io.reactivex.c` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.<init>:(Lio/reactivex/n;Lio/reactivex/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2793e4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2793ea.  v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.c` @type ^`io.reactivex.c` := v2 @kind object;
  #L2793ee.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable` v1 @kind this, `io.reactivex.t` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L279400.  v0:= new `io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver`;
  #L279404.  call `<init>`(v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableMergeWithCompletable$MergeWithObserver;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L27940a.  call `onSubscribe`(v2, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L279410.  v2:= v1.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L279414.  call `subscribe`(v2, v0) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27941a.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable.c` @type ^`io.reactivex.c` @kind object;
  #L27941e.  v0:= v0.`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver.otherObserver` @type ^`io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver` @kind object;
  #L279422.  call `b`(v2, v0) @signature `Lio/reactivex/c;.b:(Lio/reactivex/b;)V` @kind interface;
  #L279428.  return @kind void;
}
