record `io.reactivex.internal.operators.observable.c2` @kind class @AccessFlag FINAL extends `io.reactivex.d0.k` @kind interface {
  `io.reactivex.d0.c` `io.reactivex.internal.operators.observable.c2.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.c2.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.c2` v0 @kind this, `io.reactivex.d0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c2;.<init>:(Lio/reactivex/d0/c;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L277be4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L277bea.  v0.`io.reactivex.internal.operators.observable.c2.b` @type ^`io.reactivex.d0.c` := v1 @kind object;
  #L277bee.  v0.`io.reactivex.internal.operators.observable.c2.c` @type ^`java.lang.Object` := v2 @kind object;
  #L277bf2.  return @kind void;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.operators.observable.c2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/c2;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L277bc0.  v0:= v2.`io.reactivex.internal.operators.observable.c2.b` @type ^`io.reactivex.d0.c` @kind object;
  #L277bc4.  v1:= v2.`io.reactivex.internal.operators.observable.c2.c` @type ^`java.lang.Object` @kind object;
  #L277bc8.  call temp:= `apply`(v0, v1, v3) @signature `Lio/reactivex/d0/c;.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L277bce.  v3:= temp @kind object;
  #L277bd0.  return v3 @kind object;
}
