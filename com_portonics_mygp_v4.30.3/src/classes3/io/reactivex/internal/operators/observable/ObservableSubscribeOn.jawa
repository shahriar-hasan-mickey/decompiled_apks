record `io.reactivex.internal.operators.observable.ObservableSubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.x` `io.reactivex.internal.operators.observable.ObservableSubscribeOn.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.x` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;.<init>:(Lio/reactivex/r;Lio/reactivex/x;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27f844.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27f84a.  v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn.c` @type ^`io.reactivex.x` := v2 @kind object;
  #L27f84e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27f860.  v0:= new `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver`;
  #L27f864.  call `<init>`(v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeOnObserver;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L27f86a.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27f870.  v3:= v2.`io.reactivex.internal.operators.observable.ObservableSubscribeOn.c` @type ^`io.reactivex.x` @kind object;
  #L27f874.  v1:= new `io.reactivex.internal.operators.observable.ObservableSubscribeOn$a`;
  #L27f878.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeOnObserver;)V` @kind direct;
  #L27f87e.  call temp:= `c`(v3, v1) @signature `Lio/reactivex/x;.c:(Ljava/lang/Runnable;)Lio/reactivex/disposables/b;` @kind virtual;
  #L27f884.  v3:= temp @kind object;
  #L27f886.  call `setDisposable`(v0, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeOnObserver;.setDisposable:(Lio/reactivex/disposables/b;)V` @kind virtual;
  #L27f88c.  return @kind void;
}
