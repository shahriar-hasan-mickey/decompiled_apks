record `io.reactivex.internal.operators.observable.j0` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.y` @kind class, `io.reactivex.e0.a.d` @kind interface {
  `io.reactivex.r` `io.reactivex.internal.operators.observable.j0.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.j0` v0 @kind this, `io.reactivex.r` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/j0;.<init>:(Lio/reactivex/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L271f28.  call `<init>`(v0) @signature `Lio/reactivex/y;.<init>:()V` @kind direct;
  #L271f2e.  v0.`io.reactivex.internal.operators.observable.j0.b` @type ^`io.reactivex.r` := v1 @kind object;
  #L271f32.  return @kind void;
}
procedure `io.reactivex.n` `a`(`io.reactivex.internal.operators.observable.j0` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/j0;.a:()Lio/reactivex/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L271f00.  v0:= new `io.reactivex.internal.operators.observable.h0`;
  #L271f04.  v1:= v2.`io.reactivex.internal.operators.observable.j0.b` @type ^`io.reactivex.r` @kind object;
  #L271f08.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/h0;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L271f0e.  call temp:= `n`(v0) @signature `Lio/reactivex/g0/a;.n:(Lio/reactivex/n;)Lio/reactivex/n;` @kind static;
  #L271f14.  v0:= temp @kind object;
  #L271f16.  return v0 @kind object;
}
procedure `void` `m`(`io.reactivex.internal.operators.observable.j0` v2 @kind this, `io.reactivex.z` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/j0;.m:(Lio/reactivex/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L271f44.  v0:= v2.`io.reactivex.internal.operators.observable.j0.b` @type ^`io.reactivex.r` @kind object;
  #L271f48.  v1:= new `io.reactivex.internal.operators.observable.i0`;
  #L271f4c.  call `<init>`(v1, v3) @signature `Lio/reactivex/internal/operators/observable/i0;.<init>:(Lio/reactivex/z;)V` @kind direct;
  #L271f52.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L271f58.  return @kind void;
}
