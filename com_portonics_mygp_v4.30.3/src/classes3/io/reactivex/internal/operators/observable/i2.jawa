record `io.reactivex.internal.operators.observable.i2` @kind class @AccessFlag FINAL extends `java.util.concurrent.Callable` @kind interface {
  `io.reactivex.n` `io.reactivex.internal.operators.observable.i2.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.i2` v0 @kind this, `io.reactivex.n` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/i2;.<init>:(Lio/reactivex/n;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L277ec4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L277eca.  v0.`io.reactivex.internal.operators.observable.i2.b` @type ^`io.reactivex.n` := v1 @kind object;
  #L277ece.  return @kind void;
}
procedure `io.reactivex.f0.a` `a`(`io.reactivex.internal.operators.observable.i2` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/i2;.a:()Lio/reactivex/f0/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277e88.  v0:= v1.`io.reactivex.internal.operators.observable.i2.b` @type ^`io.reactivex.n` @kind object;
  #L277e8c.  call temp:= `replay`(v0) @signature `Lio/reactivex/n;.replay:()Lio/reactivex/f0/a;` @kind virtual;
  #L277e92.  v0:= temp @kind object;
  #L277e94.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.observable.i2` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/i2;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L277ea8.  call temp:= `a`(v1) @signature `Lio/reactivex/internal/operators/observable/i2;.a:()Lio/reactivex/f0/a;` @kind virtual;
  #L277eae.  v0:= temp @kind object;
  #L277eb0.  return v0 @kind object;
}
