record `io.reactivex.internal.operators.observable.h1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.observable.h1.b` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.h1.c` @AccessFlag FINAL;
  `java.lang.Object` `io.reactivex.internal.operators.observable.h1.d` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.h1.e` @AccessFlag ;
  `long` `io.reactivex.internal.operators.observable.h1.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.h1.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.h1` v0 @kind this, `io.reactivex.z` v1 @kind object, `long` v2 , `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/h1;.<init>:(Lio/reactivex/z;JLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L273fc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L273fca.  v0.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L273fce.  v0.`io.reactivex.internal.operators.observable.h1.c` @type ^`long` := v2 @kind wide;
  #L273fd2.  v0.`io.reactivex.internal.operators.observable.h1.d` @type ^`java.lang.Object` := v4 @kind object;
  #L273fd6.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.h1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/h1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273fe8.  v0:= v1.`io.reactivex.internal.operators.observable.h1.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L273fec.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L273ff2.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.h1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/h1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273fa4.  v0:= v1.`io.reactivex.internal.operators.observable.h1.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L273fa8.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L273fae.  v0:= temp;
  #L273fb0.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.h1` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/h1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L274004.  v0:= v2.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` @kind boolean;
  #L274008.  if v0 != 0 then goto L27403a;
  #L27400c.  v0:= 1I;
  #L27400e.  v2.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` := v0 @kind boolean;
  #L274012.  v0:= v2.`io.reactivex.internal.operators.observable.h1.d` @type ^`java.lang.Object` @kind object;
  #L274016.  if v0 == 0 then goto L274026;
  #L27401a.  v1:= v2.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` @kind object;
  #L27401e.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L274024.  goto L27403a;
  #L274026.  v0:= v2.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` @kind object;
  #L27402a.  v1:= new `java.util.NoSuchElementException`;
  #L27402e.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L274034.  call `onError`(v0, v1) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27403a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.h1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/h1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27404c.  v0:= v1.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` @kind boolean;
  #L274050.  if v0 == 0 then goto L27405c;
  #L274054.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27405a.  return @kind void;
  #L27405c.  v0:= 1I;
  #L27405e.  v1.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` := v0 @kind boolean;
  #L274062.  v0:= v1.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` @kind object;
  #L274066.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27406c.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.h1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/h1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L274080.  v0:= v5.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` @kind boolean;
  #L274084.  if v0 == 0 then goto L27408a;
  #L274088.  return @kind void;
  #L27408a.  v0:= v5.`io.reactivex.internal.operators.observable.h1.f` @type ^`long` @kind wide;
  #L27408e.  v2:= v5.`io.reactivex.internal.operators.observable.h1.c` @type ^`long` @kind wide;
  #L274092.  v4:= lcmp(v0, v2);
  #L274096.  if v4 != 0 then goto L2740b6;
  #L27409a.  v0:= 1I;
  #L27409c.  v5.`io.reactivex.internal.operators.observable.h1.g` @type ^`boolean` := v0 @kind boolean;
  #L2740a0.  v0:= v5.`io.reactivex.internal.operators.observable.h1.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L2740a4.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2740aa.  v0:= v5.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` @kind object;
  #L2740ae.  call `onSuccess`(v0, v6) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2740b4.  return @kind void;
  #L2740b6.  v2:= 1L;
  #L2740ba.  v0:= v0 + v2 @kind long;
  #L2740bc.  v5.`io.reactivex.internal.operators.observable.h1.f` @type ^`long` := v0 @kind wide;
  #L2740c0.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.h1` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/h1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2740d4.  v0:= v1.`io.reactivex.internal.operators.observable.h1.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L2740d8.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2740de.  v0:= temp;
  #L2740e0.  if v0 == 0 then goto L2740f2;
  #L2740e4.  v1.`io.reactivex.internal.operators.observable.h1.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2740e8.  v2:= v1.`io.reactivex.internal.operators.observable.h1.b` @type ^`io.reactivex.z` @kind object;
  #L2740ec.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2740f2.  return @kind void;
}
