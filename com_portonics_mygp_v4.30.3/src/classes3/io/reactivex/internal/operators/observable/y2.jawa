record `io.reactivex.internal.operators.observable.y2` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.y2.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.y2.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.y2` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/observable/y2;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27a2d4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27a2da.  v0.`io.reactivex.internal.operators.observable.y2.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27a2de.  v0.`io.reactivex.internal.operators.observable.y2.d` @type ^`boolean` := v3 @kind boolean;
  #L27a2e2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.y2` v3 @kind this, `io.reactivex.t` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/y2;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27a2f4.  v0:= new `io.reactivex.internal.operators.observable.x2`;
  #L27a2f8.  v1:= v3.`io.reactivex.internal.operators.observable.y2.c` @type ^`io.reactivex.d0.k` @kind object;
  #L27a2fc.  v2:= v3.`io.reactivex.internal.operators.observable.y2.d` @type ^`boolean` @kind boolean;
  #L27a300.  call `<init>`(v0, v4, v1, v2) @signature `Lio/reactivex/internal/operators/observable/x2;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;Z)V` @kind direct;
  #L27a306.  v1:= v0.`io.reactivex.internal.operators.observable.x2.e` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L27a30a.  call `onSubscribe`(v4, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27a310.  v4:= v3.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27a314.  call `subscribe`(v4, v0) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27a31a.  return @kind void;
}
