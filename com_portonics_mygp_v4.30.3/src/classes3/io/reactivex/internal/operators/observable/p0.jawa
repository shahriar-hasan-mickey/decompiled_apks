record `io.reactivex.internal.operators.observable.p0` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.n` @kind class {
  `io.reactivex.r` `io.reactivex.internal.operators.observable.p0.b` @AccessFlag FINAL;
  `io.reactivex.r` `io.reactivex.internal.operators.observable.p0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.p0` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.r` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0;.<init>:(Lio/reactivex/r;Lio/reactivex/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L272ea8.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L272eae.  v0.`io.reactivex.internal.operators.observable.p0.b` @type ^`io.reactivex.r` := v1 @kind object;
  #L272eb2.  v0.`io.reactivex.internal.operators.observable.p0.c` @type ^`io.reactivex.r` := v2 @kind object;
  #L272eb6.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.p0` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/p0;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L272ec8.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L272ecc.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L272ed2.  call `onSubscribe`(v3, v0) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L272ed8.  v1:= new `io.reactivex.internal.operators.observable.p0$a`;
  #L272edc.  call `<init>`(v1, v2, v0, v3) @signature `Lio/reactivex/internal/operators/observable/p0$a;.<init>:(Lio/reactivex/internal/operators/observable/p0;Lio/reactivex/internal/disposables/SequentialDisposable;Lio/reactivex/t;)V` @kind direct;
  #L272ee2.  v3:= v2.`io.reactivex.internal.operators.observable.p0.c` @type ^`io.reactivex.r` @kind object;
  #L272ee6.  call `subscribe`(v3, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L272eec.  return @kind void;
}
