record `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.r`[] `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @AccessFlag FINAL;
  `java.lang.Iterable` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.d` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.r` v1 @kind object, `java.lang.Iterable` v2 @kind object, `io.reactivex.d0.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/r;Ljava/lang/Iterable;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28531c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L285322.  v1:= 0I;
  #L285324.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.r`[] := v1 @kind object;
  #L285328.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.d` @type ^`java.lang.Iterable` := v2 @kind object;
  #L28532c.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.e` @type ^`io.reactivex.d0.k` := v3 @kind object;
  #L285330.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.r`[] v2 @kind object, `io.reactivex.d0.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.<init>:(Lio/reactivex/r;[Lio/reactivex/r;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2852f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L2852fa.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.r`[] := v2 @kind object;
  #L2852fe.  v1:= 0I;
  #L285300.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.d` @type ^`java.lang.Iterable` := v1 @kind object;
  #L285304.  v0.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.e` @type ^`io.reactivex.d0.k` := v3 @kind object;
  #L285308.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany` v5 @kind this, `io.reactivex.t` v6 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L285344.  v0:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.c` @type ^`io.reactivex.r`[] @kind object;
  #L285348.  if v0 != 0 then goto L2853ae;
  #L28534c.  v0:= 8I;
  #L285350.  v0:= new `io.reactivex.r`[v0];
  #L285354.  v1:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.d` @type ^`java.lang.Iterable` @kind object;
  #L285358.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28535e.  v1:= temp @kind object;
  #L285360.  v2:= 0I;
  #L285362.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L285368.  v3:= temp;
  #L28536a.  if v3 == 0 then goto L2853b0;
  #L28536e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L285374.  v3:= temp @kind object;
  #L285376.  v3:= (`io.reactivex.r`) v3 @kind object;
  #L28537a.  v4:= length @variable v0;
  #L28537c.  if v2 != v4 then goto L285392;
  #L285380.  v4:= v2 ^> 1;
  #L285384.  v4:= v4 + v2 @kind int;
  #L285386.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L28538c.  v0:= temp @kind object;
  #L28538e.  v0:= (`io.reactivex.r`[]) v0 @kind object;
  #L285392.  v4:= v2 + 1;
  #L285396.  v0[v2]:= v3 @kind object;
  #L28539a.  v2:= v4;
  #L28539c.  goto L285362;
  #L28539e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2853a0.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2853a6.  call `error`(v0, v6) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L2853ac.  return @kind void;
  #L2853ae.  v2:= length @variable v0;
  #L2853b0.  if v2 != 0 then goto L2853d4;
  #L2853b4.  v0:= new `io.reactivex.internal.operators.observable.s2`;
  #L2853b8.  v1:= v5.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2853bc.  v2:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$a`;
  #L2853c0.  call `<init>`(v2, v5) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany;)V` @kind direct;
  #L2853c6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/s2;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;)V` @kind direct;
  #L2853cc.  call `subscribeActual`(v0, v6) @signature `Lio/reactivex/internal/operators/observable/s2;.subscribeActual:(Lio/reactivex/t;)V` @kind virtual;
  #L2853d2.  return @kind void;
  #L2853d4.  v1:= new `io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver`;
  #L2853d8.  v3:= v5.`io.reactivex.internal.operators.observable.ObservableWithLatestFromMany.e` @type ^`io.reactivex.d0.k` @kind object;
  #L2853dc.  call `<init>`(v1, v6, v3, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;I)V` @kind direct;
  #L2853e2.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2853e8.  call `subscribe`(v1, v0, v2) @signature `Lio/reactivex/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;.subscribe:([Lio/reactivex/r;I)V` @kind virtual;
  #L2853ee.  v6:= v5.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L2853f2.  call `subscribe`(v6, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L2853f8.  return @kind void;
  catch `java.lang.Throwable` @[L285354..L28539a] goto L28539e;
}
