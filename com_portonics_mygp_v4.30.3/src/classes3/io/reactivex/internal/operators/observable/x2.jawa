record `io.reactivex.internal.operators.observable.x2` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.x2.b` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.x2.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.x2.d` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.observable.x2.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.x2.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.x2.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.x2` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `boolean` v3 ) @signature `Lio/reactivex/internal/operators/observable/x2;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a160.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27a166.  v0.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L27a16a.  v0.`io.reactivex.internal.operators.observable.x2.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27a16e.  v0.`io.reactivex.internal.operators.observable.x2.d` @type ^`boolean` := v3 @kind boolean;
  #L27a172.  v1:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L27a176.  call `<init>`(v1) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L27a17c.  v0.`io.reactivex.internal.operators.observable.x2.e` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v1 @kind object;
  #L27a180.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.x2` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/x2;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a194.  v0:= v1.`io.reactivex.internal.operators.observable.x2.g` @type ^`boolean` @kind boolean;
  #L27a198.  if v0 == 0 then goto L27a19e;
  #L27a19c.  return @kind void;
  #L27a19e.  v0:= 1I;
  #L27a1a0.  v1.`io.reactivex.internal.operators.observable.x2.g` @type ^`boolean` := v0 @kind boolean;
  #L27a1a4.  v1.`io.reactivex.internal.operators.observable.x2.f` @type ^`boolean` := v0 @kind boolean;
  #L27a1a8.  v0:= v1.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a1ac.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L27a1b2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.x2` v6 @kind this, `java.lang.Throwable` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/x2;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27a1c4.  v0:= v6.`io.reactivex.internal.operators.observable.x2.f` @type ^`boolean` @kind boolean;
  #L27a1c8.  if v0 == 0 then goto L27a1e8;
  #L27a1cc.  v0:= v6.`io.reactivex.internal.operators.observable.x2.g` @type ^`boolean` @kind boolean;
  #L27a1d0.  if v0 == 0 then goto L27a1dc;
  #L27a1d4.  call `t`(v7) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L27a1da.  return @kind void;
  #L27a1dc.  v0:= v6.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a1e0.  call `onError`(v0, v7) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27a1e6.  return @kind void;
  #L27a1e8.  v0:= 1I;
  #L27a1ea.  v6.`io.reactivex.internal.operators.observable.x2.f` @type ^`boolean` := v0 @kind boolean;
  #L27a1ee.  v1:= v6.`io.reactivex.internal.operators.observable.x2.d` @type ^`boolean` @kind boolean;
  #L27a1f2.  if v1 == 0 then goto L27a20a;
  #L27a1f6.  v1:= instanceof @variable v7 @type ^`java.lang.Exception` @kind boolean;
  #L27a1fa.  if v1 != 0 then goto L27a20a;
  #L27a1fe.  v0:= v6.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a202.  call `onError`(v0, v7) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27a208.  return @kind void;
  #L27a20a.  v1:= v6.`io.reactivex.internal.operators.observable.x2.c` @type ^`io.reactivex.d0.k` @kind object;
  #L27a20e.  call temp:= `apply`(v1, v7) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27a214.  v1:= temp @kind object;
  #L27a216.  v1:= (`io.reactivex.r`) v1 @kind object;
  #L27a21a.  if v1 != 0 then goto L27a23e;
  #L27a21e.  v0:= new `java.lang.NullPointerException`;
  #L27a222.  v1:= "Observable is null" @kind object;
  #L27a226.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27a22c.  call temp:= `initCause`(v0, v7) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L27a232.  v7:= v6.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a236.  call `onError`(v7, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27a23c.  return @kind void;
  #L27a23e.  call `subscribe`(v1, v6) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27a244.  return @kind void;
  #L27a246.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27a248.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27a24e.  v2:= v6.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a252.  v3:= new `io.reactivex.exceptions.CompositeException`;
  #L27a256.  v4:= 2I;
  #L27a258.  v4:= new `java.lang.Throwable`[v4];
  #L27a25c.  v5:= 0I;
  #L27a25e.  v4[v5]:= v7 @kind object;
  #L27a262.  v4[v0]:= v1 @kind object;
  #L27a266.  call `<init>`(v3, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L27a26c.  call `onError`(v2, v3) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L27a272.  return @kind void;
  catch `java.lang.Throwable` @[L27a20a..L27a21a] goto L27a246;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.x2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/x2;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a290.  v0:= v1.`io.reactivex.internal.operators.observable.x2.g` @type ^`boolean` @kind boolean;
  #L27a294.  if v0 == 0 then goto L27a29a;
  #L27a298.  return @kind void;
  #L27a29a.  v0:= v1.`io.reactivex.internal.operators.observable.x2.b` @type ^`io.reactivex.t` @kind object;
  #L27a29e.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27a2a4.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.x2` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/x2;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a2b8.  v0:= v1.`io.reactivex.internal.operators.observable.x2.e` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L27a2bc.  call temp:= `replace`(v0, v2) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L27a2c2.  return @kind void;
}
