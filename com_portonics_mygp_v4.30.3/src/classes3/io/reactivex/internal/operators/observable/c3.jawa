record `io.reactivex.internal.operators.observable.c3` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface {
  `io.reactivex.subjects.PublishSubject` `io.reactivex.internal.operators.observable.c3.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.internal.operators.observable.c3.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.c3` v0 @kind this, `io.reactivex.subjects.PublishSubject` v1 @kind object, `java.util.concurrent.atomic.AtomicReference` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c3;.<init>:(Lio/reactivex/subjects/PublishSubject;Ljava/util/concurrent/atomic/AtomicReference;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a8bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27a8c2.  v0.`io.reactivex.internal.operators.observable.c3.b` @type ^`io.reactivex.subjects.PublishSubject` := v1 @kind object;
  #L27a8c6.  v0.`io.reactivex.internal.operators.observable.c3.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L27a8ca.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.c3` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/c3;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a8dc.  v0:= v1.`io.reactivex.internal.operators.observable.c3.b` @type ^`io.reactivex.subjects.PublishSubject` @kind object;
  #L27a8e0.  call `onComplete`(v0) @signature `Lio/reactivex/subjects/PublishSubject;.onComplete:()V` @kind virtual;
  #L27a8e6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.c3` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c3;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a8f8.  v0:= v1.`io.reactivex.internal.operators.observable.c3.b` @type ^`io.reactivex.subjects.PublishSubject` @kind object;
  #L27a8fc.  call `onError`(v0, v2) @signature `Lio/reactivex/subjects/PublishSubject;.onError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L27a902.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.c3` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c3;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a914.  v0:= v1.`io.reactivex.internal.operators.observable.c3.b` @type ^`io.reactivex.subjects.PublishSubject` @kind object;
  #L27a918.  call `onNext`(v0, v2) @signature `Lio/reactivex/subjects/PublishSubject;.onNext:(Ljava/lang/Object;)V` @kind virtual;
  #L27a91e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.c3` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/c3;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27a930.  v0:= v1.`io.reactivex.internal.operators.observable.c3.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L27a934.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L27a93a.  return @kind void;
}
