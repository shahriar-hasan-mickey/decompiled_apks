record `io.reactivex.internal.operators.observable.x1` @kind class @AccessFlag FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.b` `io.reactivex.internal.operators.observable.x1.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.x1.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.x1` v0 @kind this, `io.reactivex.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/x1;.<init>:(Lio/reactivex/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L277928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27792e.  v0.`io.reactivex.internal.operators.observable.x1.b` @type ^`io.reactivex.b` := v1 @kind object;
  #L277932.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.x1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/x1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277944.  v0:= v1.`io.reactivex.internal.operators.observable.x1.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L277948.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L27794e.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.x1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/x1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277908.  v0:= v1.`io.reactivex.internal.operators.observable.x1.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L27790c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L277912.  v0:= temp;
  #L277914.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.x1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/x1;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L277960.  v0:= v1.`io.reactivex.internal.operators.observable.x1.b` @type ^`io.reactivex.b` @kind object;
  #L277964.  call `onComplete`(v0) @signature `Lio/reactivex/b;.onComplete:()V` @kind interface;
  #L27796a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.x1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/x1;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27797c.  v0:= v1.`io.reactivex.internal.operators.observable.x1.b` @type ^`io.reactivex.b` @kind object;
  #L277980.  call `onError`(v0, v2) @signature `Lio/reactivex/b;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L277986.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.x1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/x1;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L277998.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.x1` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/x1;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L2779ac.  v0.`io.reactivex.internal.operators.observable.x1.c` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L2779b0.  v1:= v0.`io.reactivex.internal.operators.observable.x1.b` @type ^`io.reactivex.b` @kind object;
  #L2779b4.  call `onSubscribe`(v1, v0) @signature `Lio/reactivex/b;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2779ba.  return @kind void;
}
