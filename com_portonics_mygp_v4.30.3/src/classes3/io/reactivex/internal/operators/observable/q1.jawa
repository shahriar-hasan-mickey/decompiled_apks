record `io.reactivex.internal.operators.observable.q1` @kind class @AccessFlag FINAL extends `io.reactivex.internal.observers.b` @kind class {
  `io.reactivex.t` `io.reactivex.internal.operators.observable.q1.b` @AccessFlag FINAL;
  `java.util.Iterator` `io.reactivex.internal.operators.observable.q1.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.q1.d` @AccessFlag VOLATILE;
  `boolean` `io.reactivex.internal.operators.observable.q1.e` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.q1.f` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.observable.q1.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.q1` v0 @kind this, `io.reactivex.t` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/q1;.<init>:(Lio/reactivex/t;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27659c.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/b;.<init>:()V` @kind direct;
  #L2765a2.  v0.`io.reactivex.internal.operators.observable.q1.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L2765a6.  v0.`io.reactivex.internal.operators.observable.q1.c` @type ^`java.util.Iterator` := v2 @kind object;
  #L2765aa.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.observable.q1` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2765ec.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/internal/operators/observable/q1;.isDisposed:()Z` @kind virtual;
  #L2765f2.  v0:= temp;
  #L2765f4.  if v0 == 0 then goto L2765fa;
  #L2765f8.  return @kind void;
  #L2765fa.  v0:= v2.`io.reactivex.internal.operators.observable.q1.c` @type ^`java.util.Iterator` @kind object;
  #L2765fe.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L276604.  v0:= temp @kind object;
  #L276606.  v1:= "The iterator returned a null value" @kind object;
  #L27660a.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L276610.  v0:= temp @kind object;
  #L276612.  v1:= v2.`io.reactivex.internal.operators.observable.q1.b` @type ^`io.reactivex.t` @kind object;
  #L276616.  call `onNext`(v1, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L27661c.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/internal/operators/observable/q1;.isDisposed:()Z` @kind virtual;
  #L276622.  v0:= temp;
  #L276624.  if v0 == 0 then goto L27662a;
  #L276628.  return @kind void;
  #L27662a.  v0:= v2.`io.reactivex.internal.operators.observable.q1.c` @type ^`java.util.Iterator` @kind object;
  #L27662e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L276634.  v0:= temp;
  #L276636.  if v0 != 0 then goto L2765ec;
  #L27663a.  call temp:= `isDisposed`(v2) @signature `Lio/reactivex/internal/operators/observable/q1;.isDisposed:()Z` @kind virtual;
  #L276640.  v0:= temp;
  #L276642.  if v0 != 0 then goto L276650;
  #L276646.  v0:= v2.`io.reactivex.internal.operators.observable.q1.b` @type ^`io.reactivex.t` @kind object;
  #L27664a.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L276650.  return @kind void;
  #L276652.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276654.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27665a.  v1:= v2.`io.reactivex.internal.operators.observable.q1.b` @type ^`io.reactivex.t` @kind object;
  #L27665e.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L276664.  return @kind void;
  #L276666.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276668.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27666e.  v1:= v2.`io.reactivex.internal.operators.observable.q1.b` @type ^`io.reactivex.t` @kind object;
  #L276672.  call `onError`(v1, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L276678.  return @kind void;
  catch `java.lang.Throwable` @[L2765fa..L276612] goto L276666;
  catch `java.lang.Throwable` @[L27662a..L276636] goto L276652;
}
procedure `void` `clear`(`io.reactivex.internal.operators.observable.q1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2765bc.  v0:= 1I;
  #L2765be.  v1.`io.reactivex.internal.operators.observable.q1.f` @type ^`boolean` := v0 @kind boolean;
  #L2765c2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.q1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2765d4.  v0:= 1I;
  #L2765d6.  v1.`io.reactivex.internal.operators.observable.q1.d` @type ^`boolean` := v0 @kind boolean;
  #L2765da.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.q1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2764ec.  v0:= v1.`io.reactivex.internal.operators.observable.q1.d` @type ^`boolean` @kind boolean;
  #L2764f0.  return v0;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.observable.q1` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276504.  v0:= v1.`io.reactivex.internal.operators.observable.q1.f` @type ^`boolean` @kind boolean;
  #L276508.  return v0;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.observable.q1` v3 @kind this) @signature `Lio/reactivex/internal/operators/observable/q1;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L276540.  v0:= v3.`io.reactivex.internal.operators.observable.q1.f` @type ^`boolean` @kind boolean;
  #L276544.  v1:= 0I;
  #L276546.  if v0 == 0 then goto L27654c;
  #L27654a.  return v1 @kind object;
  #L27654c.  v0:= v3.`io.reactivex.internal.operators.observable.q1.g` @type ^`boolean` @kind boolean;
  #L276550.  v2:= 1I;
  #L276552.  if v0 == 0 then goto L27656c;
  #L276556.  v0:= v3.`io.reactivex.internal.operators.observable.q1.c` @type ^`java.util.Iterator` @kind object;
  #L27655a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L276560.  v0:= temp;
  #L276562.  if v0 != 0 then goto L276570;
  #L276566.  v3.`io.reactivex.internal.operators.observable.q1.f` @type ^`boolean` := v2 @kind boolean;
  #L27656a.  return v1 @kind object;
  #L27656c.  v3.`io.reactivex.internal.operators.observable.q1.g` @type ^`boolean` := v2 @kind boolean;
  #L276570.  v0:= v3.`io.reactivex.internal.operators.observable.q1.c` @type ^`java.util.Iterator` @kind object;
  #L276574.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L27657a.  v0:= temp @kind object;
  #L27657c.  v1:= "The iterator returned a null value" @kind object;
  #L276580.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L276586.  v0:= temp @kind object;
  #L276588.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.observable.q1` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/operators/observable/q1;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27651c.  v0:= 1I;
  #L27651e.  v2:= v2 ^& v0 @kind int;
  #L276520.  if v2 == 0 then goto L27652a;
  #L276524.  v1.`io.reactivex.internal.operators.observable.q1.e` @type ^`boolean` := v0 @kind boolean;
  #L276528.  return v0;
  #L27652a.  v2:= 0I;
  #L27652c.  return v2;
}
