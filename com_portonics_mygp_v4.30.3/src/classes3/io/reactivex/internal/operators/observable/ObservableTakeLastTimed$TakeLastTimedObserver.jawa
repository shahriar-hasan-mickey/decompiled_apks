record `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicBoolean` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @AccessFlag FINAL;
  `io.reactivex.t` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @AccessFlag ;
  `io.reactivex.internal.queue.a` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @AccessFlag FINAL;
  `io.reactivex.x` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @AccessFlag FINAL;
  `long` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this, `io.reactivex.t` v1 @kind object, `long` v2 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `io.reactivex.x` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.<init>:(Lio/reactivex/t;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/x;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L280434.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L28043a.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.t` := v1 @kind object;
  #L28043e.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @type ^`long` := v2 @kind wide;
  #L280442.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` := v4 @kind wide;
  #L280446.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` := v6 @kind object;
  #L28044a.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.x` := v7 @kind object;
  #L28044e.  v1:= new `io.reactivex.internal.queue.a`;
  #L280452.  call `<init>`(v1, v8) @signature `Lio/reactivex/internal/queue/a;.<init>:(I)V` @kind direct;
  #L280458.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.a` := v1 @kind object;
  #L28045c.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @type ^`boolean` := v9 @kind boolean;
  #L280460.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L280474.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L280478.  if v0 != 0 then goto L2804a4;
  #L28047c.  v0:= 1I;
  #L28047e.  v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` := v0 @kind boolean;
  #L280482.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L280486.  call `dispose`(v1) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L28048c.  v1:= 0I;
  #L28048e.  call temp:= `compareAndSet`(v2, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L280494.  v0:= temp;
  #L280496.  if v0 == 0 then goto L2804a4;
  #L28049a.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L28049e.  call `clear`(v0) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L2804a4.  return @kind void;
}
procedure `void` `drain`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v13 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2804b8.  v0:= 0I;
  #L2804ba.  v1:= 1I;
  #L2804bc.  call temp:= `compareAndSet`(v13, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L2804c2.  v2:= temp;
  #L2804c4.  if v2 != 0 then goto L2804ca;
  #L2804c8.  return @kind void;
  #L2804ca.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L2804ce.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L2804d2.  v4:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.delayError` @type ^`boolean` @kind boolean;
  #L2804d6.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L2804da.  if v5 == 0 then goto L2804e6;
  #L2804de.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L2804e4.  return @kind void;
  #L2804e6.  if v4 != 0 then goto L280500;
  #L2804ea.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L2804ee.  if v5 == 0 then goto L280500;
  #L2804f2.  call `clear`(v3) @signature `Lio/reactivex/internal/queue/a;.clear:()V` @kind virtual;
  #L2804f8.  call `onError`(v2, v5) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2804fe.  return @kind void;
  #L280500.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L280506.  v5:= temp @kind object;
  #L280508.  if v5 != 0 then goto L280510;
  #L28050c.  v6:= 1I;
  #L28050e.  goto L280512;
  #L280510.  v6:= 0I;
  #L280512.  if v6 == 0 then goto L28052e;
  #L280516.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` @kind object;
  #L28051a.  if v0 == 0 then goto L280526;
  #L28051e.  call `onError`(v2, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L280524.  goto L28052c;
  #L280526.  call `onComplete`(v2) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L28052c.  return @kind void;
  #L28052e.  call temp:= `poll`(v3) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L280534.  v6:= temp @kind object;
  #L280536.  v5:= (`java.lang.Long`) v5 @kind object;
  #L28053a.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L280540.  v7:= temp @kind wide;
  #L280542.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.x` @kind object;
  #L280546.  v9:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L28054a.  call temp:= `b`(v5, v9) @signature `Lio/reactivex/x;.b:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L280550.  v9:= temp @kind wide;
  #L280552.  v11:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` @kind wide;
  #L280556.  v9:= v9 - v11 @kind long;
  #L280558.  v5:= lcmp(v7, v9);
  #L28055c.  if v5 >= 0 then goto L280562;
  #L280560.  goto L2804d6;
  #L280562.  call `onNext`(v2, v6) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L280568.  goto L2804d6;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28041c.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.cancelled` @type ^`boolean` @kind boolean;
  #L280420.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L28057c.  call `drain`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @kind virtual;
  #L280582.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L280594.  v0.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.error` @type ^`java.lang.Throwable` := v1 @kind object;
  #L280598.  call `drain`(v0) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.drain:()V` @kind virtual;
  #L28059e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2805b0.  v0:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.queue` @type ^`io.reactivex.internal.queue.a` @kind object;
  #L2805b4.  v1:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.scheduler` @type ^`io.reactivex.x` @kind object;
  #L2805b8.  v2:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2805bc.  call temp:= `b`(v1, v2) @signature `Lio/reactivex/x;.b:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2805c2.  v1:= temp @kind wide;
  #L2805c4.  v3:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.time` @type ^`long` @kind wide;
  #L2805c8.  v5:= v13.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.count` @type ^`long` @kind wide;
  #L2805cc.  v7:= 1I;
  #L2805ce.  v8:= 9223372036854775807L;
  #L2805d8.  v10:= lcmp(v5, v8);
  #L2805dc.  if v10 != 0 then goto L2805e4;
  #L2805e0.  v8:= 1I;
  #L2805e2.  goto L2805e6;
  #L2805e4.  v8:= 0I;
  #L2805e6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2805ec.  v9:= temp @kind object;
  #L2805ee.  call temp:= `l`(v0, v9, v14) @signature `Lio/reactivex/internal/queue/a;.l:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2805f4.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/internal/queue/a;.isEmpty:()Z` @kind virtual;
  #L2805fa.  v14:= temp;
  #L2805fc.  if v14 != 0 then goto L280646;
  #L280600.  call temp:= `peek`(v0) @signature `Lio/reactivex/internal/queue/a;.peek:()Ljava/lang/Object;` @kind virtual;
  #L280606.  v14:= temp @kind object;
  #L280608.  v14:= (`java.lang.Long`) v14 @kind object;
  #L28060c.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L280612.  v9:= temp @kind wide;
  #L280614.  v11:= v1 - v3 @kind long;
  #L280618.  v14:= lcmp(v9, v11);
  #L28061c.  if v14 <= 0 then goto L280638;
  #L280620.  if v8 != 0 then goto L280646;
  #L280624.  call temp:= `n`(v0) @signature `Lio/reactivex/internal/queue/a;.n:()I` @kind virtual;
  #L28062a.  v14:= temp;
  #L28062c.  v14:= v14 ^> v7 @kind int;
  #L28062e.  v9:= (`long`) v14 @kind i2l;
  #L280630.  v14:= lcmp(v9, v5);
  #L280634.  if v14 <= 0 then goto L280646;
  #L280638.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L28063e.  call temp:= `poll`(v0) @signature `Lio/reactivex/internal/queue/a;.poll:()Ljava/lang/Object;` @kind virtual;
  #L280644.  goto L2805f4;
  #L280646.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableTakeLastTimed$TakeLastTimedObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280658.  v0:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L28065c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L280662.  v0:= temp;
  #L280664.  if v0 == 0 then goto L280676;
  #L280668.  v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L28066c.  v2:= v1.`io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver.downstream` @type ^`io.reactivex.t` @kind object;
  #L280670.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L280676.  return @kind void;
}
