record `io.reactivex.internal.operators.observable.ObservableConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.observable.ObservableConcatMap.c` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.observable.ObservableConcatMap.d` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.observable.ObservableConcatMap.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableConcatMap` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `int` v3 , `io.reactivex.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.<init>:(Lio/reactivex/r;Lio/reactivex/d0/k;ILio/reactivex/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L271810.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L271816.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L27181a.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMap.e` @type ^`io.reactivex.internal.util.ErrorMode` := v4 @kind object;
  #L27181e.  v1:= 8I;
  #L271822.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L271828.  v1:= temp;
  #L27182a.  v0.`io.reactivex.internal.operators.observable.ObservableConcatMap.d` @type ^`int` := v1;
  #L27182e.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.ObservableConcatMap` v6 @kind this, `io.reactivex.t` v7 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L271840.  v0:= v6.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L271844.  v1:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.d0.k` @kind object;
  #L271848.  call temp:= `b`(v0, v7, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.b:(Lio/reactivex/r;Lio/reactivex/t;Lio/reactivex/d0/k;)Z` @kind static;
  #L27184e.  v0:= temp;
  #L271850.  if v0 == 0 then goto L271856;
  #L271854.  return @kind void;
  #L271856.  v0:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.e` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L27185a.  v1:= `@@io.reactivex.internal.util.ErrorMode.IMMEDIATE` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L27185e.  if v0 != v1 then goto L27188a;
  #L271862.  v0:= new `io.reactivex.observers.d`;
  #L271866.  call `<init>`(v0, v7) @signature `Lio/reactivex/observers/d;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L27186c.  v7:= v6.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L271870.  v1:= new `io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver`;
  #L271874.  v2:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.d0.k` @kind object;
  #L271878.  v3:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.d` @type ^`int`;
  #L27187c.  call `<init>`(v1, v0, v2, v3) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap$SourceObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;I)V` @kind direct;
  #L271882.  call `subscribe`(v7, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L271888.  goto L2718b8;
  #L27188a.  v0:= v6.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27188e.  v1:= new `io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver`;
  #L271892.  v2:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.c` @type ^`io.reactivex.d0.k` @kind object;
  #L271896.  v3:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.d` @type ^`int`;
  #L27189a.  v4:= v6.`io.reactivex.internal.operators.observable.ObservableConcatMap.e` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L27189e.  v5:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L2718a2.  if v4 != v5 then goto L2718aa;
  #L2718a6.  v4:= 1I;
  #L2718a8.  goto L2718ac;
  #L2718aa.  v4:= 0I;
  #L2718ac.  call `<init>`(v1, v7, v2, v3, v4) @signature `Lio/reactivex/internal/operators/observable/ObservableConcatMap$ConcatMapDelayErrorObserver;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/k;IZ)V` @kind direct;
  #L2718b2.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L2718b8.  return @kind void;
}
