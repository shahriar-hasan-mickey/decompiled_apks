record `io.reactivex.internal.operators.observable.q2` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `io.reactivex.q` `io.reactivex.internal.operators.observable.q2.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.q2` v0 @kind this, `io.reactivex.r` v1 @kind object, `io.reactivex.q` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/q2;.<init>:(Lio/reactivex/r;Lio/reactivex/q;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L278c90.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L278c96.  v0.`io.reactivex.internal.operators.observable.q2.c` @type ^`io.reactivex.q` := v2 @kind object;
  #L278c9a.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.q2` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/q2;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L278cac.  v0:= v2.`io.reactivex.internal.operators.observable.q2.c` @type ^`io.reactivex.q` @kind object;
  #L278cb0.  call temp:= `a`(v0, v3) @signature `Lio/reactivex/q;.a:(Lio/reactivex/t;)Lio/reactivex/t;` @kind interface;
  #L278cb6.  v3:= temp @kind object;
  #L278cb8.  v0:= new `java.lang.StringBuilder`;
  #L278cbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L278cc2.  v1:= "Operator " @kind object;
  #L278cc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L278ccc.  v1:= v2.`io.reactivex.internal.operators.observable.q2.c` @type ^`io.reactivex.q` @kind object;
  #L278cd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L278cd6.  v1:= " returned a null Observer" @kind object;
  #L278cda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L278ce0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L278ce6.  v0:= temp @kind object;
  #L278ce8.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L278cee.  v3:= temp @kind object;
  #L278cf0.  v3:= (`io.reactivex.t`) v3 @kind object;
  #L278cf4.  v0:= v2.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L278cf8.  call `subscribe`(v0, v3) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L278cfe.  return @kind void;
  #L278d00.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L278d02.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L278d08.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L278d0e.  v0:= new `java.lang.NullPointerException`;
  #L278d12.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L278d16.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L278d1c.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L278d22.  throw v0;
  #L278d24.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L278d26.  throw v3;
  catch `java.lang.NullPointerException` @[L278cac..L278cf4] goto L278d24;
  catch `java.lang.Throwable` @[L278cac..L278cf4] goto L278d00;
}
