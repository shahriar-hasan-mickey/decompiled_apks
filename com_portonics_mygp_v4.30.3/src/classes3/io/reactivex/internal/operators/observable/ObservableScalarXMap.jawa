record `io.reactivex.internal.operators.observable.ObservableScalarXMap` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `io.reactivex.n` `a`(`java.lang.Object` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.a:(Ljava/lang/Object;Lio/reactivex/d0/k;)Lio/reactivex/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27df6c.  v0:= new `io.reactivex.internal.operators.observable.q3`;
  #L27df70.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/observable/q3;.<init>:(Ljava/lang/Object;Lio/reactivex/d0/k;)V` @kind direct;
  #L27df76.  call temp:= `n`(v0) @signature `Lio/reactivex/g0/a;.n:(Lio/reactivex/n;)Lio/reactivex/n;` @kind static;
  #L27df7c.  v1:= temp @kind object;
  #L27df7e.  return v1 @kind object;
}
procedure `boolean` `b`(`io.reactivex.r` v1 @kind object, `io.reactivex.t` v2 @kind object, `io.reactivex.d0.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap;.b:(Lio/reactivex/r;Lio/reactivex/t;Lio/reactivex/d0/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27de8c.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L27de90.  if v0 == 0 then goto L27df36;
  #L27de94.  v0:= 1I;
  #L27de96.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L27de9a.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L27dea0.  v1:= temp @kind object;
  #L27dea2.  if v1 != 0 then goto L27deae;
  #L27dea6.  call `complete`(v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L27deac.  return v0;
  #L27deae.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L27deb4.  v1:= temp @kind object;
  #L27deb6.  v3:= "The mapper returned a null ObservableSource" @kind object;
  #L27deba.  call temp:= `e`(v1, v3) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L27dec0.  v1:= temp @kind object;
  #L27dec2.  v1:= (`io.reactivex.r`) v1 @kind object;
  #L27dec6.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L27deca.  if v3 == 0 then goto L27df0e;
  #L27dece.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L27ded2.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L27ded8.  v1:= temp @kind object;
  #L27deda.  if v1 != 0 then goto L27dee6;
  #L27dede.  call `complete`(v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.complete:(Lio/reactivex/t;)V` @kind static;
  #L27dee4.  return v0;
  #L27dee6.  v3:= new `io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable`;
  #L27deea.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.<init>:(Lio/reactivex/t;Ljava/lang/Object;)V` @kind direct;
  #L27def0.  call `onSubscribe`(v2, v3) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L27def6.  call `run`(v3) @signature `Lio/reactivex/internal/operators/observable/ObservableScalarXMap$ScalarDisposable;.run:()V` @kind virtual;
  #L27defc.  goto L27df14;
  #L27defe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27df00.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27df06.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27df0c.  return v0;
  #L27df0e.  call `subscribe`(v1, v2) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27df14.  return v0;
  #L27df16.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27df18.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27df1e.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27df24.  return v0;
  #L27df26.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27df28.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L27df2e.  call `error`(v1, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L27df34.  return v0;
  #L27df36.  v1:= 0I;
  #L27df38.  return v1;
  catch `java.lang.Throwable` @[L27de96..L27dea2] goto L27df26;
  catch `java.lang.Throwable` @[L27deae..L27dec6] goto L27df16;
  catch `java.lang.Throwable` @[L27dece..L27deda] goto L27defe;
}
