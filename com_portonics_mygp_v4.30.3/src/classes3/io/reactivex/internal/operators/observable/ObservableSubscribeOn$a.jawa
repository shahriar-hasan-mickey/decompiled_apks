record `io.reactivex.internal.operators.observable.ObservableSubscribeOn$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` `io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.b` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.internal.operators.observable.ObservableSubscribeOn` `io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a` v0 @kind this, `io.reactivex.internal.operators.observable.ObservableSubscribeOn` v1 @kind object, `io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` v2 @kind object) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$a;.<init>:(Lio/reactivex/internal/operators/observable/ObservableSubscribeOn;Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$SubscribeOnObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27f800.  v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn` := v1 @kind object;
  #L27f804.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27f80a.  v0.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` := v2 @kind object;
  #L27f80e.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a` v2 @kind this) @signature `Lio/reactivex/internal/operators/observable/ObservableSubscribeOn$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27f820.  v0:= v2.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.c` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn` @kind object;
  #L27f824.  v0:= v0.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27f828.  v1:= v2.`io.reactivex.internal.operators.observable.ObservableSubscribeOn$a.b` @type ^`io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver` @kind object;
  #L27f82c.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27f832.  return @kind void;
}
