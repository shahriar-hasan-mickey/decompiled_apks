record `io.reactivex.internal.operators.observable.d4` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.observable.a` @kind class {
  `long` `io.reactivex.internal.operators.observable.d4.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.observable.d4` v0 @kind this, `io.reactivex.r` v1 @kind object, `long` v2 ) @signature `Lio/reactivex/internal/operators/observable/d4;.<init>:(Lio/reactivex/r;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27f6b8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/observable/a;.<init>:(Lio/reactivex/r;)V` @kind direct;
  #L27f6be.  v0.`io.reactivex.internal.operators.observable.d4.c` @type ^`long` := v2 @kind wide;
  #L27f6c2.  return @kind void;
}
procedure `void` `subscribeActual`(`io.reactivex.internal.operators.observable.d4` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/operators/observable/d4;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27f6d4.  v0:= v4.`io.reactivex.internal.operators.observable.a.b` @type ^`io.reactivex.r` @kind object;
  #L27f6d8.  v1:= new `io.reactivex.internal.operators.observable.c4`;
  #L27f6dc.  v2:= v4.`io.reactivex.internal.operators.observable.d4.c` @type ^`long` @kind wide;
  #L27f6e0.  call `<init>`(v1, v5, v2) @signature `Lio/reactivex/internal/operators/observable/c4;.<init>:(Lio/reactivex/t;J)V` @kind direct;
  #L27f6e6.  call `subscribe`(v0, v1) @signature `Lio/reactivex/r;.subscribe:(Lio/reactivex/t;)V` @kind interface;
  #L27f6ec.  return @kind void;
}
