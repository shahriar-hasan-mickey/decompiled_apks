record `io.reactivex.internal.operators.maybe.k` @kind class @AccessFlag FINAL extends `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.k.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.k.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.k` v0 @kind this, `io.reactivex.j` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/k;.<init>:(Lio/reactivex/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26637c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L266382.  v0.`io.reactivex.internal.operators.maybe.k.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L266386.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.k` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/k;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266398.  v0:= v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L26639c.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2663a2.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2663a6.  v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L2663aa.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.k` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/k;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26635c.  v0:= v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L266360.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L266366.  v0:= temp;
  #L266368.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.k` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/k;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2663bc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2663c0.  v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L2663c4.  v0:= v1.`io.reactivex.internal.operators.maybe.k.b` @type ^`io.reactivex.j` @kind object;
  #L2663c8.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L2663ce.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.k` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/k;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2663e0.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2663e4.  v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L2663e8.  v0:= v1.`io.reactivex.internal.operators.maybe.k.b` @type ^`io.reactivex.j` @kind object;
  #L2663ec.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2663f2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.k` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/k;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266404.  v0:= v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L266408.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26640e.  v0:= temp;
  #L266410.  if v0 == 0 then goto L266422;
  #L266414.  v1.`io.reactivex.internal.operators.maybe.k.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L266418.  v2:= v1.`io.reactivex.internal.operators.maybe.k.b` @type ^`io.reactivex.j` @kind object;
  #L26641c.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L266422.  return @kind void;
}
