record `io.reactivex.internal.operators.maybe.MaybeSubscribeOn` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `io.reactivex.x` `io.reactivex.internal.operators.maybe.MaybeSubscribeOn.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v0 @kind this, `io.reactivex.k` v1 @kind object, `io.reactivex.x` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.<init>:(Lio/reactivex/k;Lio/reactivex/x;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L267718.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/k;)V` @kind direct;
  #L26771e.  v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.c` @type ^`io.reactivex.x` := v2 @kind object;
  #L267722.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.MaybeSubscribeOn` v4 @kind this, `io.reactivex.j` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.u:(Lio/reactivex/j;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L267734.  v0:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver`;
  #L267738.  call `<init>`(v0, v5) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn$SubscribeOnMaybeObserver;.<init>:(Lio/reactivex/j;)V` @kind direct;
  #L26773e.  call `onSubscribe`(v5, v0) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L267744.  v5:= v0.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver.task` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L267748.  v1:= v4.`io.reactivex.internal.operators.maybe.MaybeSubscribeOn.c` @type ^`io.reactivex.x` @kind object;
  #L26774c.  v2:= new `io.reactivex.internal.operators.maybe.w`;
  #L267750.  v3:= v4.`io.reactivex.internal.operators.maybe.a.b` @type ^`io.reactivex.k` @kind object;
  #L267754.  call `<init>`(v2, v0, v3) @signature `Lio/reactivex/internal/operators/maybe/w;.<init>:(Lio/reactivex/j;Lio/reactivex/k;)V` @kind direct;
  #L26775a.  call temp:= `c`(v1, v2) @signature `Lio/reactivex/x;.c:(Ljava/lang/Runnable;)Lio/reactivex/disposables/b;` @kind virtual;
  #L267760.  v0:= temp @kind object;
  #L267762.  call temp:= `replace`(v5, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L267768.  return @kind void;
}
