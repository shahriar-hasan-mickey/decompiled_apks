record `io.reactivex.internal.operators.maybe.g` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.i` @kind class {
  `io.reactivex.a0` `io.reactivex.internal.operators.maybe.g.b` @AccessFlag FINAL;
  `io.reactivex.d0.m` `io.reactivex.internal.operators.maybe.g.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.g` v0 @kind this, `io.reactivex.a0` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g;.<init>:(Lio/reactivex/a0;Lio/reactivex/d0/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L265440.  call `<init>`(v0) @signature `Lio/reactivex/i;.<init>:()V` @kind direct;
  #L265446.  v0.`io.reactivex.internal.operators.maybe.g.b` @type ^`io.reactivex.a0` := v1 @kind object;
  #L26544a.  v0.`io.reactivex.internal.operators.maybe.g.c` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L26544e.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.g` v3 @kind this, `io.reactivex.j` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/g;.u:(Lio/reactivex/j;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L265460.  v0:= v3.`io.reactivex.internal.operators.maybe.g.b` @type ^`io.reactivex.a0` @kind object;
  #L265464.  v1:= new `io.reactivex.internal.operators.maybe.f`;
  #L265468.  v2:= v3.`io.reactivex.internal.operators.maybe.g.c` @type ^`io.reactivex.d0.m` @kind object;
  #L26546c.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/f;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/m;)V` @kind direct;
  #L265472.  call `b`(v0, v1) @signature `Lio/reactivex/a0;.b:(Lio/reactivex/z;)V` @kind interface;
  #L265478.  return @kind void;
}
