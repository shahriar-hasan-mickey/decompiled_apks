record `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.j` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.mapper` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L266134.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L26613a.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` := v1 @kind object;
  #L26613e.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.mapper` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L266142.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266154.  call temp:= `dispose`(v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L26615a.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L26615e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L266164.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26610c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L266112.  v0:= temp @kind object;
  #L266114.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L266118.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/b;)Z` @kind static;
  #L26611e.  v0:= temp;
  #L266120.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266178.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L26617c.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L266182.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266194.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L266198.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26619e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2661b0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L2661b4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2661ba.  v0:= temp;
  #L2661bc.  if v0 == 0 then goto L2661ce;
  #L2661c0.  v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2661c4.  v2:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L2661c8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2661ce.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2661e0.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.mapper` @type ^`io.reactivex.d0.k` @kind object;
  #L2661e4.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2661ea.  v2:= temp @kind object;
  #L2661ec.  v0:= "The mapper returned a null MaybeSource" @kind object;
  #L2661f0.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2661f6.  v2:= temp @kind object;
  #L2661f8.  v2:= (`io.reactivex.k`) v2 @kind object;
  #L2661fc.  call temp:= `isDisposed`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.isDisposed:()Z` @kind virtual;
  #L266202.  v0:= temp;
  #L266204.  if v0 != 0 then goto L266218;
  #L266208.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$a`;
  #L26620c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;)V` @kind direct;
  #L266212.  call `b`(v2, v0) @signature `Lio/reactivex/k;.b:(Lio/reactivex/j;)V` @kind interface;
  #L266218.  return @kind void;
  #L26621a.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L26621c.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L266222.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L266226.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26622c.  return @kind void;
  catch `java.lang.Exception` @[L2661e0..L2661fc] goto L26621a;
}
