record `io.reactivex.internal.operators.maybe.MaybeFlatten` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.maybe.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.maybe.MaybeFlatten.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatten` v0 @kind this, `io.reactivex.k` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L266250.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/k;)V` @kind direct;
  #L266256.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatten.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L26625a.  return @kind void;
}
procedure `void` `u`(`io.reactivex.internal.operators.maybe.MaybeFlatten` v3 @kind this, `io.reactivex.j` v4 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten;.u:(Lio/reactivex/j;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L26626c.  v0:= v3.`io.reactivex.internal.operators.maybe.a.b` @type ^`io.reactivex.k` @kind object;
  #L266270.  v1:= new `io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver`;
  #L266274.  v2:= v3.`io.reactivex.internal.operators.maybe.MaybeFlatten.c` @type ^`io.reactivex.d0.k` @kind object;
  #L266278.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten$FlatMapMaybeObserver;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/k;)V` @kind direct;
  #L26627e.  call `b`(v0, v1) @signature `Lio/reactivex/k;.b:(Lio/reactivex/j;)V` @kind interface;
  #L266284.  return @kind void;
}
