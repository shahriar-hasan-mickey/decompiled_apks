record `io.reactivex.internal.operators.maybe.r` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.r.b` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.maybe.r.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.r.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.r` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/r;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26678c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L266792.  v0.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L266796.  v0.`io.reactivex.internal.operators.maybe.r.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L26679a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.r` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/r;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2667ac.  v0:= v2.`io.reactivex.internal.operators.maybe.r.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2667b0.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2667b4.  v2.`io.reactivex.internal.operators.maybe.r.d` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L2667b8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2667be.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.r` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/r;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26676c.  v0:= v1.`io.reactivex.internal.operators.maybe.r.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L266770.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L266776.  v0:= temp;
  #L266778.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.r` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/r;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2667d0.  v0:= v1.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` @kind object;
  #L2667d4.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L2667da.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.r` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/r;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2667ec.  v0:= v1.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` @kind object;
  #L2667f0.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2667f6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.r` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/r;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266808.  v0:= v1.`io.reactivex.internal.operators.maybe.r.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26680c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L266812.  v0:= temp;
  #L266814.  if v0 == 0 then goto L266826;
  #L266818.  v1.`io.reactivex.internal.operators.maybe.r.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L26681c.  v2:= v1.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` @kind object;
  #L266820.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L266826.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/r;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266838.  v0:= v1.`io.reactivex.internal.operators.maybe.r.c` @type ^`io.reactivex.d0.k` @kind object;
  #L26683c.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L266842.  v2:= temp @kind object;
  #L266844.  v0:= "The mapper returned a null item" @kind object;
  #L266848.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26684e.  v2:= temp @kind object;
  #L266850.  v0:= v1.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` @kind object;
  #L266854.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26685a.  return @kind void;
  #L26685c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26685e.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L266864.  v0:= v1.`io.reactivex.internal.operators.maybe.r.b` @type ^`io.reactivex.j` @kind object;
  #L266868.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26686e.  return @kind void;
  catch `java.lang.Throwable` @[L266838..L266850] goto L26685c;
}
