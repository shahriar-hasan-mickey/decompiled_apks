record `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.h` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @AccessFlag FINAL;
  `java.lang.Throwable` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.error` @AccessFlag ;
  `java.lang.Object` `io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.value` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` v0 @kind this, `io.reactivex.j` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.<init>:(Lio/reactivex/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L264b34.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L264b3a.  v0.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` := v1 @kind object;
  #L264b3e.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L264b50.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.error` @type ^`java.lang.Throwable` @kind object;
  #L264b54.  if v0 == 0 then goto L264b64;
  #L264b58.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` @kind object;
  #L264b5c.  call `onError`(v1, v0) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L264b62.  goto L264b82;
  #L264b64.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.value` @type ^`java.lang.Object` @kind object;
  #L264b68.  if v0 == 0 then goto L264b78;
  #L264b6c.  v1:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` @kind object;
  #L264b70.  call `onSuccess`(v1, v0) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L264b76.  goto L264b82;
  #L264b78.  v0:= v2.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` @kind object;
  #L264b7c.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L264b82.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L264b94.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.error` @type ^`java.lang.Throwable` @kind object;
  #L264b98.  if v0 != 0 then goto L264ba8;
  #L264b9c.  v0:= v5.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` @kind object;
  #L264ba0.  call `onError`(v0, v6) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L264ba6.  goto L264bce;
  #L264ba8.  v1:= v5.`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber.downstream` @type ^`io.reactivex.j` @kind object;
  #L264bac.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L264bb0.  v3:= 2I;
  #L264bb2.  v3:= new `java.lang.Throwable`[v3];
  #L264bb6.  v4:= 0I;
  #L264bb8.  v3[v4]:= v0 @kind object;
  #L264bbc.  v0:= 1I;
  #L264bbe.  v3[v0]:= v6 @kind object;
  #L264bc2.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L264bc8.  call `onError`(v1, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L264bce.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L264be0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L264be6.  v2:= temp @kind object;
  #L264be8.  v2:= (`n.b.d`) v2 @kind object;
  #L264bec.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L264bf0.  if v2 == v0 then goto L264c06;
  #L264bf4.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L264bfa.  call `cancel`(v2) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L264c00.  call `onComplete`(v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.onComplete:()V` @kind virtual;
  #L264c06.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeDelayOtherPublisher$OtherSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L264c18.  v0:= 9223372036854775807L;
  #L264c22.  call temp:= `setOnce`(v2, v3, v0) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ln/b/d;J)Z` @kind static;
  #L264c28.  return @kind void;
}
