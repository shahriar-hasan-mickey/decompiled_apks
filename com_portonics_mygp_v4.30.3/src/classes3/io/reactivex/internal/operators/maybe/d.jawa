record `io.reactivex.internal.operators.maybe.d` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.d.b` @AccessFlag FINAL;
  `io.reactivex.d0.m` `io.reactivex.internal.operators.maybe.d.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.d.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.d` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.<init>:(Lio/reactivex/j;Lio/reactivex/d0/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L265234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26523a.  v0.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L26523e.  v0.`io.reactivex.internal.operators.maybe.d.c` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L265242.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.d` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/d;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L265254.  v0:= v2.`io.reactivex.internal.operators.maybe.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L265258.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L26525c.  v2.`io.reactivex.internal.operators.maybe.d.d` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L265260.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L265266.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.d` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/d;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265214.  v0:= v1.`io.reactivex.internal.operators.maybe.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L265218.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L26521e.  v0:= temp;
  #L265220.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.d` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/d;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265278.  v0:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L26527c.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L265282.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.d` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265294.  v0:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L265298.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26529e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.d` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2652b0.  v0:= v1.`io.reactivex.internal.operators.maybe.d.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2652b4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2652ba.  v0:= temp;
  #L2652bc.  if v0 == 0 then goto L2652ce;
  #L2652c0.  v1.`io.reactivex.internal.operators.maybe.d.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2652c4.  v2:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L2652c8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2652ce.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/d;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2652e0.  v0:= v1.`io.reactivex.internal.operators.maybe.d.c` @type ^`io.reactivex.d0.m` @kind object;
  #L2652e4.  call temp:= `test`(v0, v2) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L2652ea.  v0:= temp;
  #L2652ec.  if v0 == 0 then goto L2652fc;
  #L2652f0.  v0:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L2652f4.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2652fa.  goto L265306;
  #L2652fc.  v2:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L265300.  call `onComplete`(v2) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L265306.  return @kind void;
  #L265308.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26530a.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L265310.  v0:= v1.`io.reactivex.internal.operators.maybe.d.b` @type ^`io.reactivex.j` @kind object;
  #L265314.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26531a.  return @kind void;
  catch `java.lang.Throwable` @[L2652e0..L2652ec] goto L265308;
}
