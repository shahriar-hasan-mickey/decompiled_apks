record `io.reactivex.internal.operators.maybe.u` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.u.b` @AccessFlag FINAL;
  `io.reactivex.internal.operators.maybe.v` `io.reactivex.internal.operators.maybe.u.c` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.u.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.u` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.internal.operators.maybe.v` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/u;.<init>:(Lio/reactivex/j;Lio/reactivex/internal/operators/maybe/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26732c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L267332.  v0.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L267336.  v0.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` := v2 @kind object;
  #L26733a.  return @kind void;
}
procedure `void` `a`(`io.reactivex.internal.operators.maybe.u` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/u;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L26739c.  v0:= v1.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L2673a0.  v0:= v0.`io.reactivex.internal.operators.maybe.v.g` @type ^`io.reactivex.d0.a` @kind object;
  #L2673a4.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L2673aa.  goto L2673ba;
  #L2673ac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2673ae.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2673b4.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2673ba.  return @kind void;
  catch `java.lang.Throwable` @[L26739c..L2673aa] goto L2673ac;
}
procedure `void` `b`(`io.reactivex.internal.operators.maybe.u` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/operators/maybe/u;.b:(Ljava/lang/Throwable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L267464.  v0:= v4.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L267468.  v0:= v0.`io.reactivex.internal.operators.maybe.v.e` @type ^`io.reactivex.d0.g` @kind object;
  #L26746c.  call `accept`(v0, v5) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L267472.  goto L26749a;
  #L267474.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L267476.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26747c.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L267480.  v2:= 2I;
  #L267482.  v2:= new `java.lang.Throwable`[v2];
  #L267486.  v3:= 0I;
  #L267488.  v2[v3]:= v5 @kind object;
  #L26748c.  v5:= 1I;
  #L26748e.  v2[v5]:= v0 @kind object;
  #L267492.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L267498.  v5:= v1 @kind object;
  #L26749a.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L26749e.  v4.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L2674a2.  v0:= v4.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` @kind object;
  #L2674a6.  call `onError`(v0, v5) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2674ac.  call `a`(v4) @signature `Lio/reactivex/internal/operators/maybe/u;.a:()V` @kind virtual;
  #L2674b2.  return @kind void;
  catch `java.lang.Throwable` @[L267464..L267472] goto L267474;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.u` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/u;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26734c.  v0:= v1.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L267350.  v0:= v0.`io.reactivex.internal.operators.maybe.v.h` @type ^`io.reactivex.d0.a` @kind object;
  #L267354.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L26735a.  goto L26736a;
  #L26735c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26735e.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L267364.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L26736a.  v0:= v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26736e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L267374.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L267378.  v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v0 @kind object;
  #L26737c.  return @kind void;
  catch `java.lang.Throwable` @[L26734c..L26735a] goto L26735c;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.u` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/u;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26730c.  v0:= v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L267310.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L267316.  v0:= temp;
  #L267318.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.u` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/u;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2673d8.  v0:= v2.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2673dc.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2673e0.  if v0 != v1 then goto L2673e6;
  #L2673e4.  return @kind void;
  #L2673e6.  v0:= v2.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L2673ea.  v0:= v0.`io.reactivex.internal.operators.maybe.v.f` @type ^`io.reactivex.d0.a` @kind object;
  #L2673ee.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L2673f4.  v2.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L2673f8.  v0:= v2.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` @kind object;
  #L2673fc.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L267402.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/u;.a:()V` @kind virtual;
  #L267408.  return @kind void;
  #L26740a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26740c.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L267412.  call `b`(v2, v0) @signature `Lio/reactivex/internal/operators/maybe/u;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L267418.  return @kind void;
  catch `java.lang.Throwable` @[L2673e6..L2673f4] goto L26740a;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.u` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/u;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L267438.  v0:= v2.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L26743c.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L267440.  if v0 != v1 then goto L26744c;
  #L267444.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L26744a.  return @kind void;
  #L26744c.  call `b`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/u;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L267452.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.u` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/u;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2674d0.  v0:= v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L2674d4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2674da.  v0:= temp;
  #L2674dc.  if v0 == 0 then goto L26751e;
  #L2674e0.  v0:= v1.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L2674e4.  v0:= v0.`io.reactivex.internal.operators.maybe.v.c` @type ^`io.reactivex.d0.g` @kind object;
  #L2674e8.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L2674ee.  v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2674f2.  v2:= v1.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` @kind object;
  #L2674f6.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L2674fc.  goto L26751e;
  #L2674fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L267500.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L267506.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26750c.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L267510.  v1.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L267514.  v2:= v1.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` @kind object;
  #L267518.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/j;)V` @kind static;
  #L26751e.  return @kind void;
  catch `java.lang.Throwable` @[L2674e0..L2674ee] goto L2674fe;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.u` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/maybe/u;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26753c.  v0:= v2.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L267540.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L267544.  if v0 != v1 then goto L26754a;
  #L267548.  return @kind void;
  #L26754a.  v0:= v2.`io.reactivex.internal.operators.maybe.u.c` @type ^`io.reactivex.internal.operators.maybe.v` @kind object;
  #L26754e.  v0:= v0.`io.reactivex.internal.operators.maybe.v.d` @type ^`io.reactivex.d0.g` @kind object;
  #L267552.  call `accept`(v0, v3) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L267558.  v2.`io.reactivex.internal.operators.maybe.u.d` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L26755c.  v0:= v2.`io.reactivex.internal.operators.maybe.u.b` @type ^`io.reactivex.j` @kind object;
  #L267560.  call `onSuccess`(v0, v3) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L267566.  call `a`(v2) @signature `Lio/reactivex/internal/operators/maybe/u;.a:()V` @kind virtual;
  #L26756c.  return @kind void;
  #L26756e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L267570.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L267576.  call `b`(v2, v3) @signature `Lio/reactivex/internal/operators/maybe/u;.b:(Ljava/lang/Throwable;)V` @kind virtual;
  #L26757c.  return @kind void;
  catch `java.lang.Throwable` @[L26754a..L267558] goto L26756e;
}
