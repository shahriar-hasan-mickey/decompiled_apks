record `io.reactivex.internal.operators.maybe.w` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.w.b` @AccessFlag FINAL;
  `io.reactivex.k` `io.reactivex.internal.operators.maybe.w.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.w` v0 @kind this, `io.reactivex.j` v1 @kind object, `io.reactivex.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/w;.<init>:(Lio/reactivex/j;Lio/reactivex/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2676d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2676de.  v0.`io.reactivex.internal.operators.maybe.w.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L2676e2.  v0.`io.reactivex.internal.operators.maybe.w.c` @type ^`io.reactivex.k` := v2 @kind object;
  #L2676e6.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.maybe.w` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/w;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2676f8.  v0:= v2.`io.reactivex.internal.operators.maybe.w.c` @type ^`io.reactivex.k` @kind object;
  #L2676fc.  v1:= v2.`io.reactivex.internal.operators.maybe.w.b` @type ^`io.reactivex.j` @kind object;
  #L267700.  call `b`(v0, v1) @signature `Lio/reactivex/k;.b:(Lio/reactivex/j;)V` @kind interface;
  #L267706.  return @kind void;
}
