record `io.reactivex.internal.operators.maybe.a` @kind class @AccessFlag ABSTRACT extends `io.reactivex.i` @kind class {
  `io.reactivex.k` `io.reactivex.internal.operators.maybe.a.b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.a` v0 @kind this, `io.reactivex.k` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/a;.<init>:(Lio/reactivex/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L263ef0.  call `<init>`(v0) @signature `Lio/reactivex/i;.<init>:()V` @kind direct;
  #L263ef6.  v0.`io.reactivex.internal.operators.maybe.a.b` @type ^`io.reactivex.k` := v1 @kind object;
  #L263efa.  return @kind void;
}
