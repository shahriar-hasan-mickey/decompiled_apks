record `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface {
  `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` v0 @kind this, `io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$a;.<init>:(Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L265ab0.  v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` := v1 @kind object;
  #L265ab4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L265aba.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$a;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265acc.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` @kind object;
  #L265ad0.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L265ad4.  call `onComplete`(v0) @signature `Lio/reactivex/j;.onComplete:()V` @kind interface;
  #L265ada.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$a;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265aec.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` @kind object;
  #L265af0.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L265af4.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L265afa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$a;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265b0c.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` @kind object;
  #L265b10.  call temp:= `setOnce`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L265b16.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$a;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L265b28.  v0:= v1.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$a.b` @type ^`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver` @kind object;
  #L265b2c.  v0:= v0.`io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver.downstream` @type ^`io.reactivex.j` @kind object;
  #L265b30.  call `onSuccess`(v0, v2) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L265b36.  return @kind void;
}
