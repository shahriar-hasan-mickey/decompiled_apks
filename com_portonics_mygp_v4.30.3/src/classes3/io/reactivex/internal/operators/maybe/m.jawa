record `io.reactivex.internal.operators.maybe.m` @kind class @AccessFlag FINAL extends `io.reactivex.j` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.j` `io.reactivex.internal.operators.maybe.m.b` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.maybe.m.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.maybe.m` v0 @kind this, `io.reactivex.j` v1 @kind object) @signature `Lio/reactivex/internal/operators/maybe/m;.<init>:(Lio/reactivex/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L266498.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26649e.  v0.`io.reactivex.internal.operators.maybe.m.b` @type ^`io.reactivex.j` := v1 @kind object;
  #L2664a2.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.maybe.m` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/m;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2664b4.  v0:= v1.`io.reactivex.internal.operators.maybe.m.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L2664b8.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2664be.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.maybe.m` v1 @kind this) @signature `Lio/reactivex/internal/operators/maybe/m;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L266478.  v0:= v1.`io.reactivex.internal.operators.maybe.m.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L26647c.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L266482.  v0:= temp;
  #L266484.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.maybe.m` v2 @kind this) @signature `Lio/reactivex/internal/operators/maybe/m;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2664d0.  v0:= v2.`io.reactivex.internal.operators.maybe.m.b` @type ^`io.reactivex.j` @kind object;
  #L2664d4.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2664d8.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L2664de.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.maybe.m` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/m;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2664f0.  v0:= v1.`io.reactivex.internal.operators.maybe.m.b` @type ^`io.reactivex.j` @kind object;
  #L2664f4.  call `onError`(v0, v2) @signature `Lio/reactivex/j;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2664fa.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.maybe.m` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/m;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26650c.  v0:= v1.`io.reactivex.internal.operators.maybe.m.c` @type ^`io.reactivex.disposables.b` @kind object;
  #L266510.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L266516.  v0:= temp;
  #L266518.  if v0 == 0 then goto L26652a;
  #L26651c.  v1.`io.reactivex.internal.operators.maybe.m.c` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L266520.  v2:= v1.`io.reactivex.internal.operators.maybe.m.b` @type ^`io.reactivex.j` @kind object;
  #L266524.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/j;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L26652a.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.maybe.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/maybe/m;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26653c.  v2:= v1.`io.reactivex.internal.operators.maybe.m.b` @type ^`io.reactivex.j` @kind object;
  #L266540.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L266544.  call `onSuccess`(v2, v0) @signature `Lio/reactivex/j;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L26654a.  return @kind void;
}
