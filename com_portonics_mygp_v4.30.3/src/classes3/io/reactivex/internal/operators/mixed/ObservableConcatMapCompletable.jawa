record `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.a` @kind class {
  `io.reactivex.n` `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.b` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.c` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable` v0 @kind this, `io.reactivex.n` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `io.reactivex.internal.util.ErrorMode` v3 @kind object, `int` v4 ) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.<init>:(Lio/reactivex/n;Lio/reactivex/d0/k;Lio/reactivex/internal/util/ErrorMode;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26ae20.  call `<init>`(v0) @signature `Lio/reactivex/a;.<init>:()V` @kind direct;
  #L26ae26.  v0.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.b` @type ^`io.reactivex.n` := v1 @kind object;
  #L26ae2a.  v0.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.c` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L26ae2e.  v0.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.d` @type ^`io.reactivex.internal.util.ErrorMode` := v3 @kind object;
  #L26ae32.  v0.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.e` @type ^`int` := v4;
  #L26ae36.  return @kind void;
}
procedure `void` `n`(`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable` v5 @kind this, `io.reactivex.b` v6 @kind object) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable;.n:(Lio/reactivex/b;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L26ae48.  v0:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.b` @type ^`io.reactivex.n` @kind object;
  #L26ae4c.  v1:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.c` @type ^`io.reactivex.d0.k` @kind object;
  #L26ae50.  call temp:= `a`(v0, v1, v6) @signature `Lio/reactivex/internal/operators/mixed/a;.a:(Ljava/lang/Object;Lio/reactivex/d0/k;Lio/reactivex/b;)Z` @kind static;
  #L26ae56.  v0:= temp;
  #L26ae58.  if v0 != 0 then goto L26ae7c;
  #L26ae5c.  v0:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.b` @type ^`io.reactivex.n` @kind object;
  #L26ae60.  v1:= new `io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver`;
  #L26ae64.  v2:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.c` @type ^`io.reactivex.d0.k` @kind object;
  #L26ae68.  v3:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.d` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L26ae6c.  v4:= v5.`io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable.e` @type ^`int`;
  #L26ae70.  call `<init>`(v1, v6, v2, v3, v4) @signature `Lio/reactivex/internal/operators/mixed/ObservableConcatMapCompletable$ConcatMapCompletableObserver;.<init>:(Lio/reactivex/b;Lio/reactivex/d0/k;Lio/reactivex/internal/util/ErrorMode;I)V` @kind direct;
  #L26ae76.  call `subscribe`(v0, v1) @signature `Lio/reactivex/n;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L26ae7c.  return @kind void;
}
