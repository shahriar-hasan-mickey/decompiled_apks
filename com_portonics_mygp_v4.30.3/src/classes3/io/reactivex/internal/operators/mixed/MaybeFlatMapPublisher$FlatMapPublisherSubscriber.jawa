record `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.h` @kind interface, `io.reactivex.j` @kind interface, `n.b.d` @kind interface {
  `n.b.c` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.mapper` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.requested` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.<init>:(Ln/b/c;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L26a844.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L26a84a.  v0.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` := v1 @kind object;
  #L26a84e.  v0.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.mapper` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L26a852.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L26a856.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L26a85c.  v0.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L26a860.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a874.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L26a878.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26a87e.  call temp:= `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L26a884.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a898.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L26a89c.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L26a8a2.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a8b4.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L26a8b8.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26a8be.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a8d0.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L26a8d4.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L26a8da.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a8ec.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L26a8f0.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26a8f6.  v0:= temp;
  #L26a8f8.  if v0 == 0 then goto L26a90a;
  #L26a8fc.  v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L26a900.  v2:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L26a904.  call `onSubscribe`(v2, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L26a90a.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a91c.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L26a920.  call temp:= `deferredSetOnce`(v1, v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Ln/b/d;)Z` @kind static;
  #L26a926.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a938.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.mapper` @type ^`io.reactivex.d0.k` @kind object;
  #L26a93c.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26a942.  v2:= temp @kind object;
  #L26a944.  v0:= "The mapper returned a null Publisher" @kind object;
  #L26a948.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26a94e.  v2:= temp @kind object;
  #L26a950.  v2:= (`n.b.b`) v2 @kind object;
  #L26a954.  call `subscribe`(v2, v1) @signature `Ln/b/b;.subscribe:(Ln/b/c;)V` @kind interface;
  #L26a95a.  return @kind void;
  #L26a95c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26a95e.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L26a964.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L26a968.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L26a96e.  return @kind void;
  catch `java.lang.Throwable` @[L26a938..L26a954] goto L26a95c;
}
procedure `void` `request`(`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapPublisher$FlatMapPublisherSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26a98c.  v0:= v1.`io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L26a990.  call `deferredRequest`(v1, v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L26a996.  return @kind void;
}
