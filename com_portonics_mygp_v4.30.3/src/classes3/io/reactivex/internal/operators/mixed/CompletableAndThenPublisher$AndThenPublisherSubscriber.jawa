record `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.h` @kind interface, `io.reactivex.b` @kind interface, `n.b.d` @kind interface {
  `n.b.c` `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @AccessFlag FINAL;
  `n.b.b` `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.other` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicLong` `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.requested` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v0 @kind this, `n.b.c` v1 @kind object, `n.b.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.<init>:(Ln/b/c;Ln/b/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L268f40.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L268f46.  v0.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @type ^`n.b.c` := v1 @kind object;
  #L268f4a.  v0.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.other` @type ^`n.b.b` := v2 @kind object;
  #L268f4e.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L268f52.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L268f58.  v0.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` := v1 @kind object;
  #L268f5c.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L268f70.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L268f74.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L268f7a.  call temp:= `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L268f80.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L268f94.  v0:= v2.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.other` @type ^`n.b.b` @kind object;
  #L268f98.  if v0 != 0 then goto L268fa8;
  #L268f9c.  v0:= v2.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L268fa0.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L268fa6.  goto L268fb4;
  #L268fa8.  v1:= 0I;
  #L268faa.  v2.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.other` @type ^`n.b.b` := v1 @kind object;
  #L268fae.  call `subscribe`(v0, v2) @signature `Ln/b/b;.subscribe:(Ln/b/c;)V` @kind interface;
  #L268fb4.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L268fc8.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L268fcc.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L268fd2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L268fe4.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L268fe8.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L268fee.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L269000.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L269004.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L26900a.  v0:= temp;
  #L26900c.  if v0 == 0 then goto L26901e;
  #L269010.  v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L269014.  v2:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L269018.  call `onSubscribe`(v2, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L26901e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L269030.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L269034.  call temp:= `deferredSetOnce`(v1, v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Ln/b/d;)Z` @kind static;
  #L26903a.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26904c.  v0:= v1.`io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber.requested` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L269050.  call `deferredRequest`(v1, v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V` @kind static;
  #L269056.  return @kind void;
}
