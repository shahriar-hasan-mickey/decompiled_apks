record `io.reactivex.internal.operators.flowable.h0` @kind class @AccessFlag FINAL extends `io.reactivex.h` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.z` `io.reactivex.internal.operators.flowable.h0.b` @AccessFlag FINAL;
  `n.b.d` `io.reactivex.internal.operators.flowable.h0.c` @AccessFlag ;
  `java.util.Collection` `io.reactivex.internal.operators.flowable.h0.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.h0` v0 @kind this, `io.reactivex.z` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/h0;.<init>:(Lio/reactivex/z;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L261a30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L261a36.  v0.`io.reactivex.internal.operators.flowable.h0.b` @type ^`io.reactivex.z` := v1 @kind object;
  #L261a3a.  v0.`io.reactivex.internal.operators.flowable.h0.d` @type ^`java.util.Collection` := v2 @kind object;
  #L261a3e.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.operators.flowable.h0` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/h0;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261a50.  v0:= v1.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` @kind object;
  #L261a54.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L261a5a.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L261a5e.  v1.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` := v0 @kind object;
  #L261a62.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.operators.flowable.h0` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/h0;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261a0c.  v0:= v2.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` @kind object;
  #L261a10.  v1:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L261a14.  if v0 != v1 then goto L261a1c;
  #L261a18.  v0:= 1I;
  #L261a1a.  goto L261a1e;
  #L261a1c.  v0:= 0I;
  #L261a1e.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.h0` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/h0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261a74.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L261a78.  v2.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` := v0 @kind object;
  #L261a7c.  v0:= v2.`io.reactivex.internal.operators.flowable.h0.b` @type ^`io.reactivex.z` @kind object;
  #L261a80.  v1:= v2.`io.reactivex.internal.operators.flowable.h0.d` @type ^`java.util.Collection` @kind object;
  #L261a84.  call `onSuccess`(v0, v1) @signature `Lio/reactivex/z;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L261a8a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.h0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/h0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261a9c.  v0:= 0I;
  #L261a9e.  v1.`io.reactivex.internal.operators.flowable.h0.d` @type ^`java.util.Collection` := v0 @kind object;
  #L261aa2.  v0:= `@@io.reactivex.internal.subscriptions.SubscriptionHelper.CANCELLED` @type ^`io.reactivex.internal.subscriptions.SubscriptionHelper` @kind object;
  #L261aa6.  v1.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` := v0 @kind object;
  #L261aaa.  v0:= v1.`io.reactivex.internal.operators.flowable.h0.b` @type ^`io.reactivex.z` @kind object;
  #L261aae.  call `onError`(v0, v2) @signature `Lio/reactivex/z;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L261ab4.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.h0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/h0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261ac8.  v0:= v1.`io.reactivex.internal.operators.flowable.h0.d` @type ^`java.util.Collection` @kind object;
  #L261acc.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L261ad2.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.h0` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/h0;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261ae4.  v0:= v2.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` @kind object;
  #L261ae8.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L261aee.  v0:= temp;
  #L261af0.  if v0 == 0 then goto L261b12;
  #L261af4.  v2.`io.reactivex.internal.operators.flowable.h0.c` @type ^`n.b.d` := v3 @kind object;
  #L261af8.  v0:= v2.`io.reactivex.internal.operators.flowable.h0.b` @type ^`io.reactivex.z` @kind object;
  #L261afc.  call `onSubscribe`(v0, v2) @signature `Lio/reactivex/z;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L261b02.  v0:= 9223372036854775807L;
  #L261b0c.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L261b12.  return @kind void;
}
