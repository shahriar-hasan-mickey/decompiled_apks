record `io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v0 @kind this, `n.b.c` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.<init>:(Ln/b/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L258210.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Ln/b/c;)V` @kind direct;
  #L258216.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258228.  call temp:= `a`() @signature `Lio/reactivex/l;.a:()Lio/reactivex/l;` @kind static;
  #L25822e.  v0:= temp @kind object;
  #L258230.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L258236.  return @kind void;
}
procedure `void` `onDrop`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v1 @kind this, `io.reactivex.l` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onDrop:(Lio/reactivex/l;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L258248.  call temp:= `g`(v2) @signature `Lio/reactivex/l;.g:()Z` @kind virtual;
  #L25824e.  v0:= temp;
  #L258250.  if v0 == 0 then goto L258262;
  #L258254.  call temp:= `d`(v2) @signature `Lio/reactivex/l;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L25825a.  v2:= temp @kind object;
  #L25825c.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L258262.  return @kind void;
}
procedure `void` `onDrop`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onDrop:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L258274.  v1:= (`io.reactivex.l`) v1 @kind object;
  #L258278.  call `onDrop`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onDrop:(Lio/reactivex/l;)V` @kind virtual;
  #L25827e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L258290.  call temp:= `b`(v1) @signature `Lio/reactivex/l;.b:(Ljava/lang/Throwable;)Lio/reactivex/l;` @kind static;
  #L258296.  v1:= temp @kind object;
  #L258298.  call `complete`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L25829e.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableMaterialize$MaterializeSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2582b0.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L2582b4.  v2:= 1L;
  #L2582b8.  v0:= v0 + v2 @kind long;
  #L2582ba.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L2582be.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L2582c2.  call temp:= `c`(v5) @signature `Lio/reactivex/l;.c:(Ljava/lang/Object;)Lio/reactivex/l;` @kind static;
  #L2582c8.  v5:= temp @kind object;
  #L2582ca.  call `onNext`(v0, v5) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2582d0.  return @kind void;
}
