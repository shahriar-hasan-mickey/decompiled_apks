record `io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.h` @kind interface {
  `n.b.d` `io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `n.b.c` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.<init>:(Ln/b/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L25ffe8.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ln/b/c;)V` @kind direct;
  #L25ffee.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260000.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L260006.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L26000a.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L260010.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260024.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L260028.  if v0 == 0 then goto L260034;
  #L26002c.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L260032.  goto L26003e;
  #L260034.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L260038.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L26003e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260050.  v0:= 0I;
  #L260052.  v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v0 @kind object;
  #L260056.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L26005a.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L260060.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L260074.  v0.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v1 @kind object;
  #L260078.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableTakeLastOne$TakeLastOneSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26008c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L260090.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L260096.  v0:= temp;
  #L260098.  if v0 == 0 then goto L2600ba;
  #L26009c.  v2.`io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber.upstream` @type ^`n.b.d` := v3 @kind object;
  #L2600a0.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L2600a4.  call `onSubscribe`(v0, v2) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L2600aa.  v0:= 9223372036854775807L;
  #L2600b4.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2600ba.  return @kind void;
}
