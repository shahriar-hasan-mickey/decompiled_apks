record `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` @kind class @AccessFlag FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `io.reactivex.h` @kind interface, `n.b.d` @kind interface, `java.lang.Runnable` @kind interface {
  `boolean` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @AccessFlag ;
  `n.b.c` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @AccessFlag VOLATILE;
  `long` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @AccessFlag FINAL;
  `io.reactivex.internal.disposables.SequentialDisposable` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @AccessFlag FINAL;
  `java.util.concurrent.TimeUnit` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @AccessFlag FINAL;
  `n.b.d` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @AccessFlag ;
  `io.reactivex.x$a` `io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `n.b.c` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.reactivex.x$a` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.<init>:(Ln/b/c;JLjava/util/concurrent/TimeUnit;Lio/reactivex/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L26063c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L260642.  v0:= new `io.reactivex.internal.disposables.SequentialDisposable`;
  #L260646.  call `<init>`(v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.<init>:()V` @kind direct;
  #L26064c.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` := v0 @kind object;
  #L260650.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` := v2 @kind object;
  #L260654.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @type ^`long` := v3 @kind wide;
  #L260658.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` := v5 @kind object;
  #L26065c.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.x$a` := v6 @kind object;
  #L260660.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260674.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L260678.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L26067e.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.x$a` @kind object;
  #L260682.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L260688.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26069c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L2606a0.  if v0 == 0 then goto L2606a6;
  #L2606a4.  return @kind void;
  #L2606a6.  v0:= 1I;
  #L2606a8.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L2606ac.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L2606b0.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L2606b6.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.x$a` @kind object;
  #L2606ba.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2606c0.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2606d4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L2606d8.  if v0 == 0 then goto L2606e4;
  #L2606dc.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2606e2.  return @kind void;
  #L2606e4.  v0:= 1I;
  #L2606e6.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L2606ea.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L2606ee.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2606f4.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.x$a` @kind object;
  #L2606f8.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2606fe.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L260710.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` @kind boolean;
  #L260714.  if v0 == 0 then goto L26071a;
  #L260718.  return @kind void;
  #L26071a.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` @kind boolean;
  #L26071e.  if v0 != 0 then goto L2607ac;
  #L260722.  v0:= 1I;
  #L260724.  v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` := v0 @kind boolean;
  #L260728.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L26072e.  v1:= temp @kind wide;
  #L260730.  v3:= 0L;
  #L260734.  v5:= lcmp(v1, v3);
  #L260738.  if v5 == 0 then goto L26078a;
  #L26073c.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L260740.  call `onNext`(v0, v7) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L260746.  v0:= 1L;
  #L26074a.  call temp:= `e`(v6, v0) @signature `Lio/reactivex/internal/util/b;.e:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L260750.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L260754.  call temp:= `get`(v7) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L26075a.  v7:= temp @kind object;
  #L26075c.  v7:= (`io.reactivex.disposables.b`) v7 @kind object;
  #L260760.  if v7 == 0 then goto L26076a;
  #L260764.  call `dispose`(v7) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L26076a.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timer` @type ^`io.reactivex.internal.disposables.SequentialDisposable` @kind object;
  #L26076e.  v0:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.worker` @type ^`io.reactivex.x$a` @kind object;
  #L260772.  v1:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.timeout` @type ^`long` @kind wide;
  #L260776.  v3:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.unit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26077a.  call temp:= `c`(v0, v6, v1, v3) @signature `Lio/reactivex/x$a;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/b;` @kind virtual;
  #L260780.  v0:= temp @kind object;
  #L260782.  call temp:= `replace`(v7, v0) @signature `Lio/reactivex/internal/disposables/SequentialDisposable;.replace:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L260788.  goto L2607ac;
  #L26078a.  v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.done` @type ^`boolean` := v0 @kind boolean;
  #L26078e.  call `cancel`(v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.cancel:()V` @kind virtual;
  #L260794.  v7:= v6.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L260798.  v0:= new `io.reactivex.exceptions.MissingBackpressureException`;
  #L26079c.  v1:= "Could not deliver value due to lack of requests" @kind object;
  #L2607a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/exceptions/MissingBackpressureException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2607a6.  call `onError`(v7, v0) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2607ac.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2607c0.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2607c4.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L2607ca.  v0:= temp;
  #L2607cc.  if v0 == 0 then goto L2607ee;
  #L2607d0.  v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.upstream` @type ^`n.b.d` := v3 @kind object;
  #L2607d4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L2607d8.  call `onSubscribe`(v0, v2) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L2607de.  v0:= 9223372036854775807L;
  #L2607e8.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2607ee.  return @kind void;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260800.  call temp:= `validate`(v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(J)Z` @kind static;
  #L260806.  v0:= temp;
  #L260808.  if v0 == 0 then goto L260812;
  #L26080c.  call temp:= `a`(v1, v2) @signature `Lio/reactivex/internal/util/b;.a:(Ljava/util/concurrent/atomic/AtomicLong;J)J` @kind static;
  #L260812.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed$DebounceTimedSubscriber;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260824.  v0:= 0I;
  #L260826.  v1.`io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber.gate` @type ^`boolean` := v0 @kind boolean;
  #L26082a.  return @kind void;
}
