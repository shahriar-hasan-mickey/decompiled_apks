record `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.BasicIntQueueSubscription` @kind class, `io.reactivex.h` @kind interface {
  `n.b.c` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.onFinally` @AccessFlag FINAL;
  `io.reactivex.e0.a.g` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.syncFused` @AccessFlag ;
  `n.b.d` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.d0.a` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.<init>:(Ln/b/c;Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2515bc.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L2515c2.  v0.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @type ^`n.b.c` := v1 @kind object;
  #L2515c6.  v0.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.onFinally` @type ^`io.reactivex.d0.a` := v2 @kind object;
  #L2515ca.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2515dc.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2515e0.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L2515e6.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.runFinally:()V` @kind virtual;
  #L2515ec.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251600.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251604.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L25160a.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25152c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251530.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L251536.  v0:= temp;
  #L251538.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25161c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @type ^`n.b.c` @kind object;
  #L251620.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L251626.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.runFinally:()V` @kind virtual;
  #L25162c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251640.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @type ^`n.b.c` @kind object;
  #L251644.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L25164a.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.runFinally:()V` @kind virtual;
  #L251650.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251664.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @type ^`n.b.c` @kind object;
  #L251668.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L25166e.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251680.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.upstream` @type ^`n.b.d` @kind object;
  #L251684.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L25168a.  v0:= temp;
  #L25168c.  if v0 == 0 then goto L2516ae;
  #L251690.  v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.upstream` @type ^`n.b.d` := v2 @kind object;
  #L251694.  v0:= instanceof @variable v2 @type ^`io.reactivex.e0.a.g` @kind boolean;
  #L251698.  if v0 == 0 then goto L2516a4;
  #L25169c.  v2:= (`io.reactivex.e0.a.g`) v2 @kind object;
  #L2516a0.  v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @type ^`io.reactivex.e0.a.g` := v2 @kind object;
  #L2516a4.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.downstream` @type ^`n.b.c` @kind object;
  #L2516a8.  call `onSubscribe`(v2, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L2516ae.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25158c.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251590.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L251596.  v0:= temp @kind object;
  #L251598.  if v0 != 0 then goto L2515aa;
  #L25159c.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.syncFused` @type ^`boolean` @kind boolean;
  #L2515a0.  if v1 == 0 then goto L2515aa;
  #L2515a4.  call `runFinally`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.runFinally:()V` @kind virtual;
  #L2515aa.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2516c0.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2516c4.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2516ca.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25154c.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251550.  v1:= 0I;
  #L251552.  if v0 == 0 then goto L251578;
  #L251556.  v2:= v4 ^& 4;
  #L25155a.  if v2 != 0 then goto L251578;
  #L25155e.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L251564.  v4:= temp;
  #L251566.  if v4 == 0 then goto L251576;
  #L25156a.  v0:= 1I;
  #L25156c.  if v4 != v0 then goto L251572;
  #L251570.  v1:= 1I;
  #L251572.  v3.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.syncFused` @type ^`boolean` := v1 @kind boolean;
  #L251576.  return v4;
  #L251578.  return v1;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallySubscriber;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2516dc.  v0:= 0I;
  #L2516de.  v1:= 1I;
  #L2516e0.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L2516e6.  v0:= temp;
  #L2516e8.  if v0 == 0 then goto L251706;
  #L2516ec.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber.onFinally` @type ^`io.reactivex.d0.a` @kind object;
  #L2516f0.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L2516f6.  goto L251706;
  #L2516f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2516fa.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L251700.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L251706.  return @kind void;
  catch `java.lang.Throwable` @[L2516ec..L2516f6] goto L2516f8;
}
