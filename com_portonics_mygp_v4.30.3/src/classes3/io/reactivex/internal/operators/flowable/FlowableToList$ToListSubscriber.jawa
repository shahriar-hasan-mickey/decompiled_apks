record `io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.DeferredScalarSubscription` @kind class, `io.reactivex.h` @kind interface, `n.b.d` @kind interface {
  `n.b.d` `io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v0 @kind this, `n.b.c` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.<init>:(Ln/b/c;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L261928.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.<init>:(Ln/b/c;)V` @kind direct;
  #L26192e.  v0.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v2 @kind object;
  #L261932.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261944.  call `cancel`(v1) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.cancel:()V` @kind super;
  #L26194a.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L26194e.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L261954.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261968.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L26196c.  call `complete`(v1, v0) @signature `Lio/reactivex/internal/subscriptions/DeferredScalarSubscription;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L261972.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261984.  v0:= 0I;
  #L261986.  v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` := v0 @kind object;
  #L26198a.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L26198e.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L261994.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2619a8.  v0:= v1.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.value` @type ^`java.lang.Object` @kind object;
  #L2619ac.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2619b0.  if v0 == 0 then goto L2619ba;
  #L2619b4.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2619ba.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber` v2 @kind this, `n.b.d` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2619cc.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2619d0.  call temp:= `validate`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L2619d6.  v0:= temp;
  #L2619d8.  if v0 == 0 then goto L2619fa;
  #L2619dc.  v2.`io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber.upstream` @type ^`n.b.d` := v3 @kind object;
  #L2619e0.  v0:= v2.`io.reactivex.internal.subscriptions.DeferredScalarSubscription.downstream` @type ^`n.b.c` @kind object;
  #L2619e4.  call `onSubscribe`(v0, v2) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L2619ea.  v0:= 9223372036854775807L;
  #L2619f4.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2619fa.  return @kind void;
}
