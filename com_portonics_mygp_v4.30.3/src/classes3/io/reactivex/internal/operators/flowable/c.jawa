record `io.reactivex.internal.operators.flowable.c` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.flowable.c.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L24e8d4.  call temp:= `values`() @signature `Lio/reactivex/internal/util/ErrorMode;.values:()[Lio/reactivex/internal/util/ErrorMode;` @kind static;
  #L24e8da.  v0:= temp @kind object;
  #L24e8dc.  v0:= length @variable v0;
  #L24e8de.  v0:= new `int`[v0];
  #L24e8e2.  `@@io.reactivex.internal.operators.flowable.c.a` @type ^`int`[] := v0 @kind object;
  #L24e8e6.  v1:= `@@io.reactivex.internal.util.ErrorMode.BOUNDARY` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L24e8ea.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L24e8f0.  v1:= temp;
  #L24e8f2.  v2:= 1I;
  #L24e8f4.  v0[v1]:= v2;
  #L24e8f8.  v0:= `@@io.reactivex.internal.operators.flowable.c.a` @type ^`int`[] @kind object;
  #L24e8fc.  v1:= `@@io.reactivex.internal.util.ErrorMode.END` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L24e900.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L24e906.  v1:= temp;
  #L24e908.  v2:= 2I;
  #L24e90a.  v0[v1]:= v2;
  #L24e90e.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L24e8e6..L24e8f8] goto L24e8f8;
  catch `java.lang.NoSuchFieldError` @[L24e8f8..L24e90e] goto L24e90e;
}
