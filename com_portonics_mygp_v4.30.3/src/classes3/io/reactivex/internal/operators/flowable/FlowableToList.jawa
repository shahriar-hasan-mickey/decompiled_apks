record `io.reactivex.internal.operators.flowable.FlowableToList` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `java.util.concurrent.Callable` `io.reactivex.internal.operators.flowable.FlowableToList.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableToList` v0 @kind this, `io.reactivex.e` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList;.<init>:(Lio/reactivex/e;Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L261bf0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @kind direct;
  #L261bf6.  v0.`io.reactivex.internal.operators.flowable.FlowableToList.d` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L261bfa.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.FlowableToList` v3 @kind this, `n.b.c` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L261c0c.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableToList.d` @type ^`java.util.concurrent.Callable` @kind object;
  #L261c10.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L261c16.  v0:= temp @kind object;
  #L261c18.  v1:= "The collectionSupplier returned a null collection. Null values are generally not allowed in 2.x operators and sources." @kind object;
  #L261c1c.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L261c22.  v0:= temp @kind object;
  #L261c24.  v0:= (`java.util.Collection`) v0 @kind object;
  #L261c28.  v1:= v3.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L261c2c.  v2:= new `io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber`;
  #L261c30.  call `<init>`(v2, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableToList$ToListSubscriber;.<init>:(Ln/b/c;Ljava/util/Collection;)V` @kind direct;
  #L261c36.  call `G`(v1, v2) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L261c3c.  return @kind void;
  #L261c3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L261c40.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L261c46.  call `error`(v0, v4) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L261c4c.  return @kind void;
  catch `java.lang.Throwable` @[L261c0c..L261c28] goto L261c3e;
}
