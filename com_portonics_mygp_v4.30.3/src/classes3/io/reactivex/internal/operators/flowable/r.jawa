record `io.reactivex.internal.operators.flowable.r` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.e` @kind class, `io.reactivex.e0.a.h` @kind interface {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.r.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/r;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L257c48.  call `<init>`(v0) @signature `Lio/reactivex/e;.<init>:()V` @kind direct;
  #L257c4e.  v0.`io.reactivex.internal.operators.flowable.r.c` @type ^`java.lang.Object` := v1 @kind object;
  #L257c52.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.r` v2 @kind this, `n.b.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/r;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L257c64.  v0:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L257c68.  v1:= v2.`io.reactivex.internal.operators.flowable.r.c` @type ^`java.lang.Object` @kind object;
  #L257c6c.  call `<init>`(v0, v3, v1) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Ln/b/c;Ljava/lang/Object;)V` @kind direct;
  #L257c72.  call `onSubscribe`(v3, v0) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L257c78.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.operators.flowable.r` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/r;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257c30.  v0:= v1.`io.reactivex.internal.operators.flowable.r.c` @type ^`java.lang.Object` @kind object;
  #L257c34.  return v0 @kind object;
}
