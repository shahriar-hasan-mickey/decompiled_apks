record `io.reactivex.internal.operators.flowable.b0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `io.reactivex.e` `a`(`java.lang.Object` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b0;.a:(Ljava/lang/Object;Lio/reactivex/d0/k;)Lio/reactivex/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L25dea0.  v0:= new `io.reactivex.internal.operators.flowable.a0`;
  #L25dea4.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/a0;.<init>:(Ljava/lang/Object;Lio/reactivex/d0/k;)V` @kind direct;
  #L25deaa.  call temp:= `l`(v0) @signature `Lio/reactivex/g0/a;.l:(Lio/reactivex/e;)Lio/reactivex/e;` @kind static;
  #L25deb0.  v1:= temp @kind object;
  #L25deb2.  return v1 @kind object;
}
procedure `boolean` `b`(`n.b.b` v1 @kind object, `n.b.c` v2 @kind object, `io.reactivex.d0.k` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/b0;.b:(Ln/b/b;Ln/b/c;Lio/reactivex/d0/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L25ddc8.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L25ddcc.  if v0 == 0 then goto L25de6c;
  #L25ddd0.  v0:= 1I;
  #L25ddd2.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L25ddd6.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L25dddc.  v1:= temp @kind object;
  #L25ddde.  if v1 != 0 then goto L25ddea;
  #L25dde2.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Ln/b/c;)V` @kind static;
  #L25dde8.  return v0;
  #L25ddea.  call temp:= `apply`(v3, v1) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25ddf0.  v1:= temp @kind object;
  #L25ddf2.  v3:= "The mapper returned a null Publisher" @kind object;
  #L25ddf6.  call temp:= `e`(v1, v3) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25ddfc.  v1:= temp @kind object;
  #L25ddfe.  v1:= (`n.b.b`) v1 @kind object;
  #L25de02.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L25de06.  if v3 == 0 then goto L25de44;
  #L25de0a.  v1:= (`java.util.concurrent.Callable`) v1 @kind object;
  #L25de0e.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L25de14.  v1:= temp @kind object;
  #L25de16.  if v1 != 0 then goto L25de22;
  #L25de1a.  call `complete`(v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Ln/b/c;)V` @kind static;
  #L25de20.  return v0;
  #L25de22.  v3:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L25de26.  call `<init>`(v3, v2, v1) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Ln/b/c;Ljava/lang/Object;)V` @kind direct;
  #L25de2c.  call `onSubscribe`(v2, v3) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L25de32.  goto L25de4a;
  #L25de34.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25de36.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L25de3c.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L25de42.  return v0;
  #L25de44.  call `subscribe`(v1, v2) @signature `Ln/b/b;.subscribe:(Ln/b/c;)V` @kind interface;
  #L25de4a.  return v0;
  #L25de4c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25de4e.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L25de54.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L25de5a.  return v0;
  #L25de5c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25de5e.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L25de64.  call `error`(v1, v2) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L25de6a.  return v0;
  #L25de6c.  v1:= 0I;
  #L25de6e.  return v1;
  catch `java.lang.Throwable` @[L25ddd2..L25ddde] goto L25de5c;
  catch `java.lang.Throwable` @[L25ddea..L25de02] goto L25de4c;
  catch `java.lang.Throwable` @[L25de0a..L25de16] goto L25de34;
}
