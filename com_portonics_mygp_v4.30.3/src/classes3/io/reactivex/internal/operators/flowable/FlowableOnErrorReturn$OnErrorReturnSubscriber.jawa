record `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.SinglePostCompleteSubscriber` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.<init>:(Ln/b/c;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L25aaa4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.<init>:(Ln/b/c;)V` @kind direct;
  #L25aaaa.  v0.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L25aaae.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25aac0.  v0:= v1.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L25aac4.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L25aaca.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25aadc.  v0:= v5.`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber.valueSupplier` @type ^`io.reactivex.d0.k` @kind object;
  #L25aae0.  call temp:= `apply`(v0, v6) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25aae6.  v0:= temp @kind object;
  #L25aae8.  v1:= "The valueSupplier returned a null value" @kind object;
  #L25aaec.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25aaf2.  v6:= temp @kind object;
  #L25aaf4.  call `complete`(v5, v6) @signature `Lio/reactivex/internal/subscribers/SinglePostCompleteSubscriber;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L25aafa.  return @kind void;
  #L25aafc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25aafe.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L25ab04.  v1:= v5.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L25ab08.  v2:= new `io.reactivex.exceptions.CompositeException`;
  #L25ab0c.  v3:= 2I;
  #L25ab0e.  v3:= new `java.lang.Throwable`[v3];
  #L25ab12.  v4:= 0I;
  #L25ab14.  v3[v4]:= v6 @kind object;
  #L25ab18.  v6:= 1I;
  #L25ab1a.  v3[v6]:= v0 @kind object;
  #L25ab1e.  call `<init>`(v2, v3) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L25ab24.  call `onError`(v1, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L25ab2a.  return @kind void;
  catch `java.lang.Throwable` @[L25aadc..L25aaf4] goto L25aafc;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnErrorReturn$OnErrorReturnSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25ab48.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` @kind wide;
  #L25ab4c.  v2:= 1L;
  #L25ab50.  v0:= v0 + v2 @kind long;
  #L25ab52.  v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.produced` @type ^`long` := v0 @kind wide;
  #L25ab56.  v0:= v4.`io.reactivex.internal.subscribers.SinglePostCompleteSubscriber.downstream` @type ^`n.b.c` @kind object;
  #L25ab5a.  call `onNext`(v0, v5) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L25ab60.  return @kind void;
}
