record `io.reactivex.internal.operators.flowable.FlowableConcatMap` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @AccessFlag FINAL;
  `int` `io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @AccessFlag FINAL;
  `io.reactivex.internal.util.ErrorMode` `io.reactivex.internal.operators.flowable.FlowableConcatMap.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableConcatMap` v0 @kind this, `io.reactivex.e` v1 @kind object, `io.reactivex.d0.k` v2 @kind object, `int` v3 , `io.reactivex.internal.util.ErrorMode` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.<init>:(Lio/reactivex/e;Lio/reactivex/d0/k;ILio/reactivex/internal/util/ErrorMode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L24f918.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @kind direct;
  #L24f91e.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L24f922.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @type ^`int` := v3;
  #L24f926.  v0.`io.reactivex.internal.operators.flowable.FlowableConcatMap.f` @type ^`io.reactivex.internal.util.ErrorMode` := v4 @kind object;
  #L24f92a.  return @kind void;
}
procedure `n.b.c` `J`(`n.b.c` v2 @kind object, `io.reactivex.d0.k` v3 @kind object, `int` v4 , `io.reactivex.internal.util.ErrorMode` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.J:(Ln/b/c;Lio/reactivex/d0/k;ILio/reactivex/internal/util/ErrorMode;)Ln/b/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24f8c4.  v0:= `@@io.reactivex.internal.operators.flowable.c.a` @type ^`int`[] @kind object;
  #L24f8c8.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L24f8ce.  v5:= temp;
  #L24f8d0.  v5:= v0[v5];
  #L24f8d4.  v0:= 1I;
  #L24f8d6.  if v5 == v0 then goto L24f8f8;
  #L24f8da.  v1:= 2I;
  #L24f8dc.  if v5 == v1 then goto L24f8ec;
  #L24f8e0.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate`;
  #L24f8e4.  call `<init>`(v5, v2, v3, v4) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapImmediate;.<init>:(Ln/b/c;Lio/reactivex/d0/k;I)V` @kind direct;
  #L24f8ea.  return v5 @kind object;
  #L24f8ec.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed`;
  #L24f8f0.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed;.<init>:(Ln/b/c;Lio/reactivex/d0/k;IZ)V` @kind direct;
  #L24f8f6.  return v5 @kind object;
  #L24f8f8.  v5:= new `io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed`;
  #L24f8fc.  v0:= 0I;
  #L24f8fe.  call `<init>`(v5, v2, v3, v4, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed;.<init>:(Ln/b/c;Lio/reactivex/d0/k;IZ)V` @kind direct;
  #L24f904.  return v5 @kind object;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.FlowableConcatMap` v4 @kind this, `n.b.c` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24f93c.  v0:= v4.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L24f940.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @type ^`io.reactivex.d0.k` @kind object;
  #L24f944.  call temp:= `b`(v0, v5, v1) @signature `Lio/reactivex/internal/operators/flowable/b0;.b:(Ln/b/b;Ln/b/c;Lio/reactivex/d0/k;)Z` @kind static;
  #L24f94a.  v0:= temp;
  #L24f94c.  if v0 == 0 then goto L24f952;
  #L24f950.  return @kind void;
  #L24f952.  v0:= v4.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L24f956.  v1:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.d` @type ^`io.reactivex.d0.k` @kind object;
  #L24f95a.  v2:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.e` @type ^`int`;
  #L24f95e.  v3:= v4.`io.reactivex.internal.operators.flowable.FlowableConcatMap.f` @type ^`io.reactivex.internal.util.ErrorMode` @kind object;
  #L24f962.  call temp:= `J`(v5, v1, v2, v3) @signature `Lio/reactivex/internal/operators/flowable/FlowableConcatMap;.J:(Ln/b/c;Lio/reactivex/d0/k;ILio/reactivex/internal/util/ErrorMode;)Ln/b/c;` @kind static;
  #L24f968.  v5:= temp @kind object;
  #L24f96a.  call `subscribe`(v0, v5) @signature `Lio/reactivex/e;.subscribe:(Ln/b/c;)V` @kind virtual;
  #L24f970.  return @kind void;
}
