record `io.reactivex.internal.operators.flowable.k` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.a` @kind class {
  `io.reactivex.d0.m` `io.reactivex.internal.operators.flowable.k.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.k` v0 @kind this, `io.reactivex.e0.a.a` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k;.<init>:(Lio/reactivex/e0/a/a;Lio/reactivex/d0/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L252288.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.<init>:(Lio/reactivex/e0/a/a;)V` @kind direct;
  #L25228e.  v0.`io.reactivex.internal.operators.flowable.k.g` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L252292.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.k` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2522a4.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/k;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L2522aa.  v3:= temp;
  #L2522ac.  if v3 != 0 then goto L2522be;
  #L2522b0.  v3:= v2.`io.reactivex.internal.subscribers.a.c` @type ^`n.b.d` @kind object;
  #L2522b4.  v0:= 1L;
  #L2522b8.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2522be.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.k` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/k;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25223c.  v0:= v4.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L252240.  v1:= v4.`io.reactivex.internal.operators.flowable.k.g` @type ^`io.reactivex.d0.m` @kind object;
  #L252244.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L25224a.  v2:= temp @kind object;
  #L25224c.  if v2 != 0 then goto L252254;
  #L252250.  v0:= 0I;
  #L252252.  return v0 @kind object;
  #L252254.  call temp:= `test`(v1, v2) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L25225a.  v3:= temp;
  #L25225c.  if v3 == 0 then goto L252262;
  #L252260.  return v2 @kind object;
  #L252262.  v2:= v4.`io.reactivex.internal.subscribers.a.f` @type ^`int`;
  #L252266.  v3:= 2I;
  #L252268.  if v2 != v3 then goto L252244;
  #L25226c.  v2:= 1L;
  #L252270.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L252276.  goto L252244;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.k` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/k;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L252220.  call temp:= `d`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.d:(I)I` @kind virtual;
  #L252226.  v1:= temp;
  #L252228.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.flowable.k` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2521b0.  v0:= v3.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` @kind boolean;
  #L2521b4.  v1:= 0I;
  #L2521b6.  if v0 == 0 then goto L2521bc;
  #L2521ba.  return v1;
  #L2521bc.  v0:= v3.`io.reactivex.internal.subscribers.a.f` @type ^`int`;
  #L2521c0.  if v0 == 0 then goto L2521d4;
  #L2521c4.  v4:= v3.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L2521c8.  v0:= 0I;
  #L2521ca.  call temp:= `tryOnNext`(v4, v0) @signature `Lio/reactivex/e0/a/a;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L2521d0.  v4:= temp;
  #L2521d2.  return v4;
  #L2521d4.  v0:= 1I;
  #L2521d6.  v2:= v3.`io.reactivex.internal.operators.flowable.k.g` @type ^`io.reactivex.d0.m` @kind object;
  #L2521da.  call temp:= `test`(v2, v4) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L2521e0.  v2:= temp;
  #L2521e2.  if v2 == 0 then goto L2521f8;
  #L2521e6.  v2:= v3.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L2521ea.  call temp:= `tryOnNext`(v2, v4) @signature `Lio/reactivex/e0/a/a;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L2521f0.  v4:= temp;
  #L2521f2.  if v4 == 0 then goto L2521f8;
  #L2521f6.  v1:= 1I;
  #L2521f8.  return v1;
  #L2521fa.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2521fc.  call `c`(v3, v4) @signature `Lio/reactivex/internal/subscribers/a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L252202.  return v0;
  catch `java.lang.Throwable` @[L2521d6..L2521e2] goto L2521fa;
}
