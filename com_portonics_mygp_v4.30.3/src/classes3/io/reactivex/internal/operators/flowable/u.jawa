record `io.reactivex.internal.operators.flowable.u` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.flowable.u.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.u` v0 @kind this, `io.reactivex.e` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/u;.<init>:(Lio/reactivex/e;Lio/reactivex/d0/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2581a4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @kind direct;
  #L2581aa.  v0.`io.reactivex.internal.operators.flowable.u.d` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L2581ae.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.u` v3 @kind this, `n.b.c` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/u;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2581c0.  v0:= instanceof @variable v4 @type ^`io.reactivex.e0.a.a` @kind boolean;
  #L2581c4.  if v0 == 0 then goto L2581e6;
  #L2581c8.  v0:= v3.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L2581cc.  v1:= new `io.reactivex.internal.operators.flowable.s`;
  #L2581d0.  v4:= (`io.reactivex.e0.a.a`) v4 @kind object;
  #L2581d4.  v2:= v3.`io.reactivex.internal.operators.flowable.u.d` @type ^`io.reactivex.d0.k` @kind object;
  #L2581d8.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/flowable/s;.<init>:(Lio/reactivex/e0/a/a;Lio/reactivex/d0/k;)V` @kind direct;
  #L2581de.  call `G`(v0, v1) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L2581e4.  goto L2581fe;
  #L2581e6.  v0:= v3.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L2581ea.  v1:= new `io.reactivex.internal.operators.flowable.t`;
  #L2581ee.  v2:= v3.`io.reactivex.internal.operators.flowable.u.d` @type ^`io.reactivex.d0.k` @kind object;
  #L2581f2.  call `<init>`(v1, v4, v2) @signature `Lio/reactivex/internal/operators/flowable/t;.<init>:(Ln/b/c;Lio/reactivex/d0/k;)V` @kind direct;
  #L2581f8.  call `G`(v0, v1) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L2581fe.  return @kind void;
}
