record `io.reactivex.internal.operators.flowable.v` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
global `int`[] `@@io.reactivex.internal.operators.flowable.v.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/operators/flowable/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L259e88.  call temp:= `values`() @signature `Lio/reactivex/BackpressureOverflowStrategy;.values:()[Lio/reactivex/BackpressureOverflowStrategy;` @kind static;
  #L259e8e.  v0:= temp @kind object;
  #L259e90.  v0:= length @variable v0;
  #L259e92.  v0:= new `int`[v0];
  #L259e96.  `@@io.reactivex.internal.operators.flowable.v.a` @type ^`int`[] := v0 @kind object;
  #L259e9a.  v1:= `@@io.reactivex.BackpressureOverflowStrategy.DROP_LATEST` @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L259e9e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L259ea4.  v1:= temp;
  #L259ea6.  v2:= 1I;
  #L259ea8.  v0[v1]:= v2;
  #L259eac.  v0:= `@@io.reactivex.internal.operators.flowable.v.a` @type ^`int`[] @kind object;
  #L259eb0.  v1:= `@@io.reactivex.BackpressureOverflowStrategy.DROP_OLDEST` @type ^`io.reactivex.BackpressureOverflowStrategy` @kind object;
  #L259eb4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L259eba.  v1:= temp;
  #L259ebc.  v2:= 2I;
  #L259ebe.  v0[v1]:= v2;
  #L259ec2.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L259e9a..L259eac] goto L259eac;
  catch `java.lang.NoSuchFieldError` @[L259eac..L259ec2] goto L259ec2;
}
