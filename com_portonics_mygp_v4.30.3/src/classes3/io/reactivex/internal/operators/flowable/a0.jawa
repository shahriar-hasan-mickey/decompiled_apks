record `io.reactivex.internal.operators.flowable.a0` @kind class @AccessFlag FINAL extends `io.reactivex.e` @kind class {
  `java.lang.Object` `io.reactivex.internal.operators.flowable.a0.c` @AccessFlag FINAL;
  `io.reactivex.d0.k` `io.reactivex.internal.operators.flowable.a0.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.a0` v0 @kind this, `java.lang.Object` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/a0;.<init>:(Ljava/lang/Object;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L25dd0c.  call `<init>`(v0) @signature `Lio/reactivex/e;.<init>:()V` @kind direct;
  #L25dd12.  v0.`io.reactivex.internal.operators.flowable.a0.c` @type ^`java.lang.Object` := v1 @kind object;
  #L25dd16.  v0.`io.reactivex.internal.operators.flowable.a0.d` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L25dd1a.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.a0` v2 @kind this, `n.b.c` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/a0;.H:(Ln/b/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25dd2c.  v0:= v2.`io.reactivex.internal.operators.flowable.a0.d` @type ^`io.reactivex.d0.k` @kind object;
  #L25dd30.  v1:= v2.`io.reactivex.internal.operators.flowable.a0.c` @type ^`java.lang.Object` @kind object;
  #L25dd34.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25dd3a.  v0:= temp @kind object;
  #L25dd3c.  v1:= "The mapper returned a null Publisher" @kind object;
  #L25dd40.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25dd46.  v0:= temp @kind object;
  #L25dd48.  v0:= (`n.b.b`) v0 @kind object;
  #L25dd4c.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.Callable` @kind boolean;
  #L25dd50.  if v1 == 0 then goto L25dd8e;
  #L25dd54.  v0:= (`java.util.concurrent.Callable`) v0 @kind object;
  #L25dd58.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L25dd5e.  v0:= temp @kind object;
  #L25dd60.  if v0 != 0 then goto L25dd6c;
  #L25dd64.  call `complete`(v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.complete:(Ln/b/c;)V` @kind static;
  #L25dd6a.  return @kind void;
  #L25dd6c.  v1:= new `io.reactivex.internal.subscriptions.ScalarSubscription`;
  #L25dd70.  call `<init>`(v1, v3, v0) @signature `Lio/reactivex/internal/subscriptions/ScalarSubscription;.<init>:(Ln/b/c;Ljava/lang/Object;)V` @kind direct;
  #L25dd76.  call `onSubscribe`(v3, v1) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L25dd7c.  goto L25dd94;
  #L25dd7e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25dd80.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L25dd86.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L25dd8c.  return @kind void;
  #L25dd8e.  call `subscribe`(v0, v3) @signature `Ln/b/b;.subscribe:(Ln/b/c;)V` @kind interface;
  #L25dd94.  return @kind void;
  #L25dd96.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L25dd98.  call `error`(v0, v3) @signature `Lio/reactivex/internal/subscriptions/EmptySubscription;.error:(Ljava/lang/Throwable;Ln/b/c;)V` @kind static;
  #L25dd9e.  return @kind void;
  catch `java.lang.Throwable` @[L25dd2c..L25dd4c] goto L25dd96;
  catch `java.lang.Throwable` @[L25dd54..L25dd60] goto L25dd7e;
}
