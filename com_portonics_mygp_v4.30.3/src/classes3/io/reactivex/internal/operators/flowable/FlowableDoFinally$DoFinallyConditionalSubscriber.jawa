record `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscriptions.BasicIntQueueSubscription` @kind class, `io.reactivex.e0.a.a` @kind interface {
  `io.reactivex.e0.a.a` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.onFinally` @AccessFlag FINAL;
  `io.reactivex.e0.a.g` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @AccessFlag ;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.syncFused` @AccessFlag ;
  `n.b.d` `io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.upstream` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v0 @kind this, `io.reactivex.e0.a.a` v1 @kind object, `io.reactivex.d0.a` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.<init>:(Lio/reactivex/e0/a/a;Lio/reactivex/d0/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2513c4.  call `<init>`(v0) @signature `Lio/reactivex/internal/subscriptions/BasicIntQueueSubscription;.<init>:()V` @kind direct;
  #L2513ca.  v0.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` := v1 @kind object;
  #L2513ce.  v0.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.onFinally` @type ^`io.reactivex.d0.a` := v2 @kind object;
  #L2513d2.  return @kind void;
}
procedure `void` `cancel`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2513e4.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2513e8.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L2513ee.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.runFinally:()V` @kind virtual;
  #L2513f4.  return @kind void;
}
procedure `void` `clear`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251408.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L25140c.  call `clear`(v0) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L251412.  return @kind void;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251314.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251318.  call temp:= `isEmpty`(v0) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L25131e.  v0:= temp;
  #L251320.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251424.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` @kind object;
  #L251428.  call `onComplete`(v0) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L25142e.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.runFinally:()V` @kind virtual;
  #L251434.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251448.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` @kind object;
  #L25144c.  call `onError`(v0, v2) @signature `Ln/b/c;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L251452.  call `runFinally`(v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.runFinally:()V` @kind virtual;
  #L251458.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25146c.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` @kind object;
  #L251470.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L251476.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this, `n.b.d` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.onSubscribe:(Ln/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251488.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L25148c.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/subscriptions/SubscriptionHelper;.validate:(Ln/b/d;Ln/b/d;)Z` @kind static;
  #L251492.  v0:= temp;
  #L251494.  if v0 == 0 then goto L2514b6;
  #L251498.  v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.upstream` @type ^`n.b.d` := v2 @kind object;
  #L25149c.  v0:= instanceof @variable v2 @type ^`io.reactivex.e0.a.g` @kind boolean;
  #L2514a0.  if v0 == 0 then goto L2514ac;
  #L2514a4.  v2:= (`io.reactivex.e0.a.g`) v2 @kind object;
  #L2514a8.  v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @type ^`io.reactivex.e0.a.g` := v2 @kind object;
  #L2514ac.  v2:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` @kind object;
  #L2514b0.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/h;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L2514b6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L251394.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251398.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L25139e.  v0:= temp @kind object;
  #L2513a0.  if v0 != 0 then goto L2513b2;
  #L2513a4.  v1:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.syncFused` @type ^`boolean` @kind boolean;
  #L2513a8.  if v1 == 0 then goto L2513b2;
  #L2513ac.  call `runFinally`(v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.runFinally:()V` @kind virtual;
  #L2513b2.  return v0 @kind object;
}
procedure `void` `request`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this, `long` v2 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2514c8.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L2514cc.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2514d2.  return @kind void;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v3 @kind this, `int` v4 ) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L251354.  v0:= v3.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.qs` @type ^`io.reactivex.e0.a.g` @kind object;
  #L251358.  v1:= 0I;
  #L25135a.  if v0 == 0 then goto L251380;
  #L25135e.  v2:= v4 ^& 4;
  #L251362.  if v2 != 0 then goto L251380;
  #L251366.  call temp:= `requestFusion`(v0, v4) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L25136c.  v4:= temp;
  #L25136e.  if v4 == 0 then goto L25137e;
  #L251372.  v0:= 1I;
  #L251374.  if v4 != v0 then goto L25137a;
  #L251378.  v1:= 1I;
  #L25137a.  v3.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.syncFused` @type ^`boolean` := v1 @kind boolean;
  #L25137e.  return v4;
  #L251380.  return v1;
}
procedure `void` `runFinally`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.runFinally:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2514e4.  v0:= 0I;
  #L2514e6.  v1:= 1I;
  #L2514e8.  call temp:= `compareAndSet`(v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z` @kind virtual;
  #L2514ee.  v0:= temp;
  #L2514f0.  if v0 == 0 then goto L25150e;
  #L2514f4.  v0:= v2.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.onFinally` @type ^`io.reactivex.d0.a` @kind object;
  #L2514f8.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L2514fe.  goto L25150e;
  #L251500.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L251502.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L251508.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L25150e.  return @kind void;
  catch `java.lang.Throwable` @[L2514f4..L2514fe] goto L251500;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableDoFinally$DoFinallyConditionalSubscriber;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L251334.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber.downstream` @type ^`io.reactivex.e0.a.a` @kind object;
  #L251338.  call temp:= `tryOnNext`(v0, v2) @signature `Lio/reactivex/e0/a/a;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L25133e.  v2:= temp;
  #L251340.  return v2;
}
