record `io.reactivex.internal.operators.flowable.g` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `io.reactivex.d0.g` `io.reactivex.internal.operators.flowable.g.d` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.operators.flowable.g.e` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.flowable.g.f` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.flowable.g.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.g` v0 @kind this, `io.reactivex.e` v1 @kind object, `io.reactivex.d0.g` v2 @kind object, `io.reactivex.d0.g` v3 @kind object, `io.reactivex.d0.a` v4 @kind object, `io.reactivex.d0.a` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/g;.<init>:(Lio/reactivex/e;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L251d00.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @kind direct;
  #L251d06.  v0.`io.reactivex.internal.operators.flowable.g.d` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L251d0a.  v0.`io.reactivex.internal.operators.flowable.g.e` @type ^`io.reactivex.d0.g` := v3 @kind object;
  #L251d0e.  v0.`io.reactivex.internal.operators.flowable.g.f` @type ^`io.reactivex.d0.a` := v4 @kind object;
  #L251d12.  v0.`io.reactivex.internal.operators.flowable.g.g` @type ^`io.reactivex.d0.a` := v5 @kind object;
  #L251d16.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.g` v8 @kind this, `n.b.c` v9 @kind object) @signature `Lio/reactivex/internal/operators/flowable/g;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L251d28.  v0:= instanceof @variable v9 @type ^`io.reactivex.e0.a.a` @kind boolean;
  #L251d2c.  if v0 == 0 then goto L251d5e;
  #L251d30.  v0:= v8.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L251d34.  v7:= new `io.reactivex.internal.operators.flowable.e`;
  #L251d38.  v2:= v9 @kind object;
  #L251d3a.  v2:= (`io.reactivex.e0.a.a`) v2 @kind object;
  #L251d3e.  v3:= v8.`io.reactivex.internal.operators.flowable.g.d` @type ^`io.reactivex.d0.g` @kind object;
  #L251d42.  v4:= v8.`io.reactivex.internal.operators.flowable.g.e` @type ^`io.reactivex.d0.g` @kind object;
  #L251d46.  v5:= v8.`io.reactivex.internal.operators.flowable.g.f` @type ^`io.reactivex.d0.a` @kind object;
  #L251d4a.  v6:= v8.`io.reactivex.internal.operators.flowable.g.g` @type ^`io.reactivex.d0.a` @kind object;
  #L251d4e.  v1:= v7 @kind object;
  #L251d50.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/e;.<init>:(Lio/reactivex/e0/a/a;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @kind direct;
  #L251d56.  call `G`(v0, v7) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L251d5c.  goto L251d86;
  #L251d5e.  v0:= v8.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L251d62.  v7:= new `io.reactivex.internal.operators.flowable.f`;
  #L251d66.  v3:= v8.`io.reactivex.internal.operators.flowable.g.d` @type ^`io.reactivex.d0.g` @kind object;
  #L251d6a.  v4:= v8.`io.reactivex.internal.operators.flowable.g.e` @type ^`io.reactivex.d0.g` @kind object;
  #L251d6e.  v5:= v8.`io.reactivex.internal.operators.flowable.g.f` @type ^`io.reactivex.d0.a` @kind object;
  #L251d72.  v6:= v8.`io.reactivex.internal.operators.flowable.g.g` @type ^`io.reactivex.d0.a` @kind object;
  #L251d76.  v1:= v7 @kind object;
  #L251d78.  v2:= v9 @kind object;
  #L251d7a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/f;.<init>:(Ln/b/c;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @kind direct;
  #L251d80.  call `G`(v0, v7) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L251d86.  return @kind void;
}
