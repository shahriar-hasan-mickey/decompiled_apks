record `io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber` `io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableUnsubscribeOn$UnsubscribeSubscriber$a;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableUnsubscribeOn$UnsubscribeSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L261c6c.  v0.`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber` := v1 @kind object;
  #L261c70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L261c76.  return @kind void;
}
procedure `void` `run`(`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/FlowableUnsubscribeOn$UnsubscribeSubscriber$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L261c88.  v0:= v1.`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$a.b` @type ^`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber` @kind object;
  #L261c8c.  v0:= v0.`io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber.upstream` @type ^`n.b.d` @kind object;
  #L261c90.  call `cancel`(v0) @signature `Ln/b/d;.cancel:()V` @kind interface;
  #L261c96.  return @kind void;
}
