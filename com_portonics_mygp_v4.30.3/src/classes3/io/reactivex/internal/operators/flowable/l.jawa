record `io.reactivex.internal.operators.flowable.l` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.b` @kind class, `io.reactivex.e0.a.a` @kind interface {
  `io.reactivex.d0.m` `io.reactivex.internal.operators.flowable.l.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.l` v0 @kind this, `n.b.c` v1 @kind object, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/l;.<init>:(Ln/b/c;Lio/reactivex/d0/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2523a0.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/b;.<init>:(Ln/b/c;)V` @kind direct;
  #L2523a6.  v0.`io.reactivex.internal.operators.flowable.l.g` @type ^`io.reactivex.d0.m` := v2 @kind object;
  #L2523aa.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.l` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/l;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2523bc.  call temp:= `tryOnNext`(v2, v3) @signature `Lio/reactivex/internal/operators/flowable/l;.tryOnNext:(Ljava/lang/Object;)Z` @kind virtual;
  #L2523c2.  v3:= temp;
  #L2523c4.  if v3 != 0 then goto L2523d6;
  #L2523c8.  v3:= v2.`io.reactivex.internal.subscribers.b.c` @type ^`n.b.d` @kind object;
  #L2523cc.  v0:= 1L;
  #L2523d0.  call `request`(v3, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2523d6.  return @kind void;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.l` v4 @kind this) @signature `Lio/reactivex/internal/operators/flowable/l;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L252354.  v0:= v4.`io.reactivex.internal.subscribers.b.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L252358.  v1:= v4.`io.reactivex.internal.operators.flowable.l.g` @type ^`io.reactivex.d0.m` @kind object;
  #L25235c.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L252362.  v2:= temp @kind object;
  #L252364.  if v2 != 0 then goto L25236c;
  #L252368.  v0:= 0I;
  #L25236a.  return v0 @kind object;
  #L25236c.  call temp:= `test`(v1, v2) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L252372.  v3:= temp;
  #L252374.  if v3 == 0 then goto L25237a;
  #L252378.  return v2 @kind object;
  #L25237a.  v2:= v4.`io.reactivex.internal.subscribers.b.f` @type ^`int`;
  #L25237e.  v3:= 2I;
  #L252380.  if v2 != v3 then goto L25235c;
  #L252384.  v2:= 1L;
  #L252388.  call `request`(v0, v2) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L25238e.  goto L25235c;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.l` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/l;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L252338.  call temp:= `d`(v0, v1) @signature `Lio/reactivex/internal/subscribers/b;.d:(I)I` @kind virtual;
  #L25233e.  v1:= temp;
  #L252340.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.flowable.l` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/operators/flowable/l;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2522d0.  v0:= v2.`io.reactivex.internal.subscribers.b.e` @type ^`boolean` @kind boolean;
  #L2522d4.  if v0 == 0 then goto L2522dc;
  #L2522d8.  v3:= 0I;
  #L2522da.  return v3;
  #L2522dc.  v0:= v2.`io.reactivex.internal.subscribers.b.f` @type ^`int`;
  #L2522e0.  v1:= 1I;
  #L2522e2.  if v0 == 0 then goto L2522f4;
  #L2522e6.  v3:= v2.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` @kind object;
  #L2522ea.  v0:= 0I;
  #L2522ec.  call `onNext`(v3, v0) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L2522f2.  return v1;
  #L2522f4.  v0:= v2.`io.reactivex.internal.operators.flowable.l.g` @type ^`io.reactivex.d0.m` @kind object;
  #L2522f8.  call temp:= `test`(v0, v3) @signature `Lio/reactivex/d0/m;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L2522fe.  v0:= temp;
  #L252300.  if v0 == 0 then goto L25230e;
  #L252304.  v1:= v2.`io.reactivex.internal.subscribers.b.b` @type ^`n.b.c` @kind object;
  #L252308.  call `onNext`(v1, v3) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L25230e.  return v0;
  #L252310.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L252312.  call `c`(v2, v3) @signature `Lio/reactivex/internal/subscribers/b;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L252318.  return v1;
  catch `java.lang.Throwable` @[L2522f4..L252300] goto L252310;
}
