record `io.reactivex.internal.operators.flowable.FlowableFromArray` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.e` @kind class {
  `java.lang.Object`[] `io.reactivex.internal.operators.flowable.FlowableFromArray.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableFromArray` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2553c4.  call `<init>`(v0) @signature `Lio/reactivex/e;.<init>:()V` @kind direct;
  #L2553ca.  v0.`io.reactivex.internal.operators.flowable.FlowableFromArray.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2553ce.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.FlowableFromArray` v3 @kind this, `n.b.c` v4 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray;.H:(Ln/b/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2553e0.  v0:= instanceof @variable v4 @type ^`io.reactivex.e0.a.a` @kind boolean;
  #L2553e4.  if v0 == 0 then goto L255404;
  #L2553e8.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription`;
  #L2553ec.  v1:= v4 @kind object;
  #L2553ee.  v1:= (`io.reactivex.e0.a.a`) v1 @kind object;
  #L2553f2.  v2:= v3.`io.reactivex.internal.operators.flowable.FlowableFromArray.c` @type ^`java.lang.Object`[] @kind object;
  #L2553f6.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$ArrayConditionalSubscription;.<init>:(Lio/reactivex/e0/a/a;[Ljava/lang/Object;)V` @kind direct;
  #L2553fc.  call `onSubscribe`(v4, v0) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L255402.  goto L255418;
  #L255404.  v0:= new `io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription`;
  #L255408.  v1:= v3.`io.reactivex.internal.operators.flowable.FlowableFromArray.c` @type ^`java.lang.Object`[] @kind object;
  #L25540c.  call `<init>`(v0, v4, v1) @signature `Lio/reactivex/internal/operators/flowable/FlowableFromArray$ArraySubscription;.<init>:(Ln/b/c;[Ljava/lang/Object;)V` @kind direct;
  #L255412.  call `onSubscribe`(v4, v0) @signature `Ln/b/c;.onSubscribe:(Ln/b/d;)V` @kind interface;
  #L255418.  return @kind void;
}
