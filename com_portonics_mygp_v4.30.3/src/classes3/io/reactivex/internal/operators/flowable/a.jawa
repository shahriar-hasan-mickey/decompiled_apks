record `io.reactivex.internal.operators.flowable.a` @kind class @AccessFlag ABSTRACT extends `io.reactivex.e` @kind class {
  `io.reactivex.e` `io.reactivex.internal.operators.flowable.a.c` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.a` v1 @kind this, `io.reactivex.e` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24caf0.  call `<init>`(v1) @signature `Lio/reactivex/e;.<init>:()V` @kind direct;
  #L24caf6.  v0:= "source is null" @kind object;
  #L24cafa.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24cb00.  v2:= temp @kind object;
  #L24cb02.  v2:= (`io.reactivex.e`) v2 @kind object;
  #L24cb06.  v1.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` := v2 @kind object;
  #L24cb0a.  return @kind void;
}
