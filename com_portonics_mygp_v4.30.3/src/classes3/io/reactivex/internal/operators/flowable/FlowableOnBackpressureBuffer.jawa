record `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.operators.flowable.a` @kind class {
  `int` `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.d` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.e` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.f` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer` v0 @kind this, `io.reactivex.e` v1 @kind object, `int` v2 , `boolean` v3 , `boolean` v4 , `io.reactivex.d0.a` v5 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureBuffer;.<init>:(Lio/reactivex/e;IZZLio/reactivex/d0/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L25a2ac.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/flowable/a;.<init>:(Lio/reactivex/e;)V` @kind direct;
  #L25a2b2.  v0.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.d` @type ^`int` := v2;
  #L25a2b6.  v0.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.e` @type ^`boolean` := v3 @kind boolean;
  #L25a2ba.  v0.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.f` @type ^`boolean` := v4 @kind boolean;
  #L25a2be.  v0.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.g` @type ^`io.reactivex.d0.a` := v5 @kind object;
  #L25a2c2.  return @kind void;
}
procedure `void` `H`(`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer` v8 @kind this, `n.b.c` v9 @kind object) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureBuffer;.H:(Ln/b/c;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L25a2d4.  v0:= v8.`io.reactivex.internal.operators.flowable.a.c` @type ^`io.reactivex.e` @kind object;
  #L25a2d8.  v7:= new `io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber`;
  #L25a2dc.  v3:= v8.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.d` @type ^`int`;
  #L25a2e0.  v4:= v8.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.e` @type ^`boolean` @kind boolean;
  #L25a2e4.  v5:= v8.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.f` @type ^`boolean` @kind boolean;
  #L25a2e8.  v6:= v8.`io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer.g` @type ^`io.reactivex.d0.a` @kind object;
  #L25a2ec.  v1:= v7 @kind object;
  #L25a2ee.  v2:= v9 @kind object;
  #L25a2f0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lio/reactivex/internal/operators/flowable/FlowableOnBackpressureBuffer$BackpressureBufferSubscriber;.<init>:(Ln/b/c;IZZLio/reactivex/d0/a;)V` @kind direct;
  #L25a2f6.  call `G`(v0, v7) @signature `Lio/reactivex/e;.G:(Lio/reactivex/h;)V` @kind virtual;
  #L25a2fc.  return @kind void;
}
