record `io.reactivex.internal.operators.flowable.s` @kind class @AccessFlag FINAL extends `io.reactivex.internal.subscribers.a` @kind class {
  `io.reactivex.d0.k` `io.reactivex.internal.operators.flowable.s.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.s` v0 @kind this, `io.reactivex.e0.a.a` v1 @kind object, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/s;.<init>:(Lio/reactivex/e0/a/a;Lio/reactivex/d0/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L257ef4.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.<init>:(Lio/reactivex/e0/a/a;)V` @kind direct;
  #L257efa.  v0.`io.reactivex.internal.operators.flowable.s.g` @type ^`io.reactivex.d0.k` := v2 @kind object;
  #L257efe.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/s;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257f10.  v0:= v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` @kind boolean;
  #L257f14.  if v0 == 0 then goto L257f1a;
  #L257f18.  return @kind void;
  #L257f1a.  v0:= v1.`io.reactivex.internal.subscribers.a.f` @type ^`int`;
  #L257f1e.  if v0 == 0 then goto L257f30;
  #L257f22.  v2:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L257f26.  v0:= 0I;
  #L257f28.  call `onNext`(v2, v0) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L257f2e.  return @kind void;
  #L257f30.  v0:= v1.`io.reactivex.internal.operators.flowable.s.g` @type ^`io.reactivex.d0.k` @kind object;
  #L257f34.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L257f3a.  v2:= temp @kind object;
  #L257f3c.  v0:= "The mapper function returned a null value." @kind object;
  #L257f40.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257f46.  v2:= temp @kind object;
  #L257f48.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L257f4c.  call `onNext`(v0, v2) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L257f52.  return @kind void;
  #L257f54.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L257f56.  call `c`(v1, v2) @signature `Lio/reactivex/internal/subscribers/a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L257f5c.  return @kind void;
  catch `java.lang.Throwable` @[L257f30..L257f48] goto L257f54;
}
procedure `java.lang.Object` `poll`(`io.reactivex.internal.operators.flowable.s` v2 @kind this) @signature `Lio/reactivex/internal/operators/flowable/s;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L257eb4.  v0:= v2.`io.reactivex.internal.subscribers.a.d` @type ^`io.reactivex.e0.a.g` @kind object;
  #L257eb8.  call temp:= `poll`(v0) @signature `Lio/reactivex/e0/a/j;.poll:()Ljava/lang/Object;` @kind interface;
  #L257ebe.  v0:= temp @kind object;
  #L257ec0.  if v0 == 0 then goto L257ede;
  #L257ec4.  v1:= v2.`io.reactivex.internal.operators.flowable.s.g` @type ^`io.reactivex.d0.k` @kind object;
  #L257ec8.  call temp:= `apply`(v1, v0) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L257ece.  v0:= temp @kind object;
  #L257ed0.  v1:= "The mapper function returned a null value." @kind object;
  #L257ed4.  call temp:= `e`(v0, v1) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257eda.  v0:= temp @kind object;
  #L257edc.  goto L257ee0;
  #L257ede.  v0:= 0I;
  #L257ee0.  return v0 @kind object;
}
procedure `int` `requestFusion`(`io.reactivex.internal.operators.flowable.s` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/operators/flowable/s;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L257e98.  call temp:= `d`(v0, v1) @signature `Lio/reactivex/internal/subscribers/a;.d:(I)I` @kind virtual;
  #L257e9e.  v1:= temp;
  #L257ea0.  return v1;
}
procedure `boolean` `tryOnNext`(`io.reactivex.internal.operators.flowable.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/s;.tryOnNext:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257e3c.  v0:= v1.`io.reactivex.internal.subscribers.a.e` @type ^`boolean` @kind boolean;
  #L257e40.  if v0 == 0 then goto L257e48;
  #L257e44.  v2:= 0I;
  #L257e46.  return v2;
  #L257e48.  v0:= v1.`io.reactivex.internal.operators.flowable.s.g` @type ^`io.reactivex.d0.k` @kind object;
  #L257e4c.  call temp:= `apply`(v0, v2) @signature `Lio/reactivex/d0/k;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L257e52.  v2:= temp @kind object;
  #L257e54.  v0:= "The mapper function returned a null value." @kind object;
  #L257e58.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257e5e.  v2:= temp @kind object;
  #L257e60.  v0:= v1.`io.reactivex.internal.subscribers.a.b` @type ^`io.reactivex.e0.a.a` @kind object;
  #L257e64.  call temp:= `tryOnNext`(v0, v2) @signature `Lio/reactivex/e0/a/a;.tryOnNext:(Ljava/lang/Object;)Z` @kind interface;
  #L257e6a.  v2:= temp;
  #L257e6c.  return v2;
  #L257e6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L257e70.  call `c`(v1, v2) @signature `Lio/reactivex/internal/subscribers/a;.c:(Ljava/lang/Throwable;)V` @kind virtual;
  #L257e76.  v2:= 1I;
  #L257e78.  return v2;
  catch `java.lang.Throwable` @[L257e48..L257e60] goto L257e6e;
}
