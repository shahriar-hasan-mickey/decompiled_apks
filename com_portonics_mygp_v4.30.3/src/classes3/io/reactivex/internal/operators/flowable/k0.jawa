record `io.reactivex.internal.operators.flowable.k0` @kind class @AccessFlag FINAL extends `io.reactivex.subscribers.a` @kind class {
  `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` `io.reactivex.internal.operators.flowable.k0.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.internal.operators.flowable.k0.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.operators.flowable.k0` v0 @kind this, `io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k0;.<init>:(Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L262d28.  call `<init>`(v0) @signature `Lio/reactivex/subscribers/a;.<init>:()V` @kind direct;
  #L262d2e.  v0.`io.reactivex.internal.operators.flowable.k0.c` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` := v1 @kind object;
  #L262d32.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.operators.flowable.k0` v1 @kind this) @signature `Lio/reactivex/internal/operators/flowable/k0;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L262d44.  v0:= v1.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` @kind boolean;
  #L262d48.  if v0 == 0 then goto L262d4e;
  #L262d4c.  return @kind void;
  #L262d4e.  v0:= 1I;
  #L262d50.  v1.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` := v0 @kind boolean;
  #L262d54.  v0:= v1.`io.reactivex.internal.operators.flowable.k0.c` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` @kind object;
  #L262d58.  call `innerComplete`(v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber;.innerComplete:()V` @kind virtual;
  #L262d5e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.operators.flowable.k0` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k0;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L262d70.  v0:= v1.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` @kind boolean;
  #L262d74.  if v0 == 0 then goto L262d80;
  #L262d78.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L262d7e.  return @kind void;
  #L262d80.  v0:= 1I;
  #L262d82.  v1.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` := v0 @kind boolean;
  #L262d86.  v0:= v1.`io.reactivex.internal.operators.flowable.k0.c` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` @kind object;
  #L262d8a.  call `innerError`(v0, v2) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber;.innerError:(Ljava/lang/Throwable;)V` @kind virtual;
  #L262d90.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.operators.flowable.k0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/operators/flowable/k0;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L262da4.  v1:= v0.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` @kind boolean;
  #L262da8.  if v1 == 0 then goto L262dae;
  #L262dac.  return @kind void;
  #L262dae.  v1:= 1I;
  #L262db0.  v0.`io.reactivex.internal.operators.flowable.k0.d` @type ^`boolean` := v1 @kind boolean;
  #L262db4.  call `dispose`(v0) @signature `Lio/reactivex/subscribers/a;.dispose:()V` @kind virtual;
  #L262dba.  v1:= v0.`io.reactivex.internal.operators.flowable.k0.c` @type ^`io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber` @kind object;
  #L262dbe.  call `innerNext`(v1, v0) @signature `Lio/reactivex/internal/operators/flowable/FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber;.innerNext:(Lio/reactivex/internal/operators/flowable/k0;)V` @kind virtual;
  #L262dc4.  return @kind void;
}
