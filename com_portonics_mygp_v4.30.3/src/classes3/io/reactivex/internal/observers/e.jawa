record `io.reactivex.internal.observers.e` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.internal.observers.c` @kind class {
}
procedure `void` `<init>`(`io.reactivex.internal.observers.e` v0 @kind this) @signature `Lio/reactivex/internal/observers/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2496b0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/c;.<init>:()V` @kind direct;
  #L2496b6.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.e` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/e;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2496c8.  v0:= 0I;
  #L2496ca.  v1.`io.reactivex.internal.observers.c.b` @type ^`java.lang.Object` := v0 @kind object;
  #L2496ce.  v1.`io.reactivex.internal.observers.c.c` @type ^`java.lang.Throwable` := v2 @kind object;
  #L2496d2.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L2496d8.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/observers/e;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L2496ec.  v0.`io.reactivex.internal.observers.c.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2496f0.  return @kind void;
}
