record `io.reactivex.internal.observers.f` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CountDownLatch` @kind class, `io.reactivex.z` @kind interface, `io.reactivex.b` @kind interface, `io.reactivex.j` @kind interface {
  `java.lang.Object` `io.reactivex.internal.observers.f.b` @AccessFlag ;
  `java.lang.Throwable` `io.reactivex.internal.observers.f.c` @AccessFlag ;
  `io.reactivex.disposables.b` `io.reactivex.internal.observers.f.d` @AccessFlag ;
  `boolean` `io.reactivex.internal.observers.f.e` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.f` v1 @kind this) @signature `Lio/reactivex/internal/observers/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L249770.  v0:= 1I;
  #L249772.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L249778.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.reactivex.internal.observers.f` v5 @kind this) @signature `Lio/reactivex/internal/observers/f;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L249704.  call temp:= `getCount`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.getCount:()J` @kind virtual;
  #L24970a.  v0:= temp @kind wide;
  #L24970c.  v2:= 0L;
  #L249710.  v4:= lcmp(v0, v2);
  #L249714.  if v4 == 0 then goto L249738;
  #L249718.  call `b`() @signature `Lio/reactivex/internal/util/c;.b:()V` @kind static;
  #L24971e.  call `await`(v5) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L249724.  goto L249738;
  #L249726.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L249728.  call `b`(v5) @signature `Lio/reactivex/internal/observers/f;.b:()V` @kind virtual;
  #L24972e.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L249734.  v0:= temp @kind object;
  #L249736.  throw v0;
  #L249738.  v0:= v5.`io.reactivex.internal.observers.f.c` @type ^`java.lang.Throwable` @kind object;
  #L24973c.  if v0 != 0 then goto L249746;
  #L249740.  v0:= v5.`io.reactivex.internal.observers.f.b` @type ^`java.lang.Object` @kind object;
  #L249744.  return v0 @kind object;
  #L249746.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L24974c.  v0:= temp @kind object;
  #L24974e.  throw v0;
  catch `java.lang.InterruptedException` @[L249718..L249724] goto L249726;
}
procedure `void` `b`(`io.reactivex.internal.observers.f` v1 @kind this) @signature `Lio/reactivex/internal/observers/f;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L24978c.  v0:= 1I;
  #L24978e.  v1.`io.reactivex.internal.observers.f.e` @type ^`boolean` := v0 @kind boolean;
  #L249792.  v0:= v1.`io.reactivex.internal.observers.f.d` @type ^`io.reactivex.disposables.b` @kind object;
  #L249796.  if v0 == 0 then goto L2497a0;
  #L24979a.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2497a0.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.f` v0 @kind this) @signature `Lio/reactivex/internal/observers/f;.onComplete:()V` @AccessFlag PUBLIC {
    temp;

  #L2497b4.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L2497ba.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.f` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lio/reactivex/internal/observers/f;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L2497cc.  v0.`io.reactivex.internal.observers.f.c` @type ^`java.lang.Throwable` := v1 @kind object;
  #L2497d0.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L2497d6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.f` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/observers/f;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2497e8.  v1.`io.reactivex.internal.observers.f.d` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L2497ec.  v0:= v1.`io.reactivex.internal.observers.f.e` @type ^`boolean` @kind boolean;
  #L2497f0.  if v0 == 0 then goto L2497fa;
  #L2497f4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2497fa.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/observers/f;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L24980c.  v0.`io.reactivex.internal.observers.f.b` @type ^`java.lang.Object` := v1 @kind object;
  #L249810.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L249816.  return @kind void;
}
