record `io.reactivex.internal.observers.g` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.t` `io.reactivex.internal.observers.g.b` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.observers.g.c` @AccessFlag FINAL;
  `io.reactivex.d0.a` `io.reactivex.internal.observers.g.d` @AccessFlag FINAL;
  `io.reactivex.disposables.b` `io.reactivex.internal.observers.g.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.g` v0 @kind this, `io.reactivex.t` v1 @kind object, `io.reactivex.d0.g` v2 @kind object, `io.reactivex.d0.a` v3 @kind object) @signature `Lio/reactivex/internal/observers/g;.<init>:(Lio/reactivex/t;Lio/reactivex/d0/g;Lio/reactivex/d0/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249ef0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249ef6.  v0.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` := v1 @kind object;
  #L249efa.  v0.`io.reactivex.internal.observers.g.c` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L249efe.  v0.`io.reactivex.internal.observers.g.d` @type ^`io.reactivex.d0.a` := v3 @kind object;
  #L249f02.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.g` v2 @kind this) @signature `Lio/reactivex/internal/observers/g;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249f14.  v0:= v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L249f18.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249f1c.  if v0 == v1 then goto L249f44;
  #L249f20.  v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L249f24.  v1:= v2.`io.reactivex.internal.observers.g.d` @type ^`io.reactivex.d0.a` @kind object;
  #L249f28.  call `run`(v1) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L249f2e.  goto L249f3e;
  #L249f30.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249f32.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L249f38.  call `t`(v1) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249f3e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L249f44.  return @kind void;
  catch `java.lang.Throwable` @[L249f24..L249f2e] goto L249f30;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.g` v1 @kind this) @signature `Lio/reactivex/internal/observers/g;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249ed0.  v0:= v1.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L249ed4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/disposables/b;.isDisposed:()Z` @kind interface;
  #L249eda.  v0:= temp;
  #L249edc.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.g` v2 @kind this) @signature `Lio/reactivex/internal/observers/g;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249f64.  v0:= v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L249f68.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249f6c.  if v0 == v1 then goto L249f7e;
  #L249f70.  v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L249f74.  v0:= v2.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` @kind object;
  #L249f78.  call `onComplete`(v0) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L249f7e.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.g` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/reactivex/internal/observers/g;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249f90.  v0:= v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L249f94.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249f98.  if v0 == v1 then goto L249fac;
  #L249f9c.  v2.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` := v1 @kind object;
  #L249fa0.  v0:= v2.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` @kind object;
  #L249fa4.  call `onError`(v0, v3) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L249faa.  goto L249fb2;
  #L249fac.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249fb2.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/g;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249fc4.  v0:= v1.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` @kind object;
  #L249fc8.  call `onNext`(v0, v2) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L249fce.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.g` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/observers/g;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249fe0.  v0:= v1.`io.reactivex.internal.observers.g.c` @type ^`io.reactivex.d0.g` @kind object;
  #L249fe4.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L249fea.  v0:= v1.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` @kind object;
  #L249fee.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L249ff4.  v0:= temp;
  #L249ff6.  if v0 == 0 then goto L24a008;
  #L249ffa.  v1.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L249ffe.  v2:= v1.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` @kind object;
  #L24a002.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L24a008.  return @kind void;
  #L24a00a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24a00c.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24a012.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L24a018.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L24a01c.  v1.`io.reactivex.internal.observers.g.e` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L24a020.  v2:= v1.`io.reactivex.internal.observers.g.b` @type ^`io.reactivex.t` @kind object;
  #L24a024.  call `error`(v0, v2) @signature `Lio/reactivex/internal/disposables/EmptyDisposable;.error:(Ljava/lang/Throwable;Lio/reactivex/t;)V` @kind static;
  #L24a02a.  return @kind void;
  catch `java.lang.Throwable` @[L249fe0..L249fea] goto L24a00a;
}
