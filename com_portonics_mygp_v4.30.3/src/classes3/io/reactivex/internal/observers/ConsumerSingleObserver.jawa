record `io.reactivex.internal.observers.ConsumerSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.z` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.d0.g` `io.reactivex.internal.observers.ConsumerSingleObserver.onError` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.ConsumerSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.d0.g` v1 @kind object, `io.reactivex.d0.g` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.<init>:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249b08.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L249b0e.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @type ^`io.reactivex.d0.g` := v1 @kind object;
  #L249b12.  v0.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.d0.g` := v2 @kind object;
  #L249b16.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L249b28.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L249b2e.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249abc.  v0:= v2.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.d0.g` @kind object;
  #L249ac0.  v1:= `@@io.reactivex.internal.functions.Functions.f` @type ^`io.reactivex.d0.g` @kind object;
  #L249ac4.  if v0 == v1 then goto L249acc;
  #L249ac8.  v0:= 1I;
  #L249aca.  goto L249ace;
  #L249acc.  v0:= 0I;
  #L249ace.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.ConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249ae0.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L249ae6.  v0:= temp @kind object;
  #L249ae8.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249aec.  if v0 != v1 then goto L249af4;
  #L249af0.  v0:= 1I;
  #L249af2.  goto L249af6;
  #L249af4.  v0:= 0I;
  #L249af6.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.observers.ConsumerSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249b40.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249b44.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L249b4a.  v0:= v4.`io.reactivex.internal.observers.ConsumerSingleObserver.onError` @type ^`io.reactivex.d0.g` @kind object;
  #L249b4e.  call `accept`(v0, v5) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L249b54.  goto L249b80;
  #L249b56.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249b58.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L249b5e.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L249b62.  v2:= 2I;
  #L249b64.  v2:= new `java.lang.Throwable`[v2];
  #L249b68.  v3:= 0I;
  #L249b6a.  v2[v3]:= v5 @kind object;
  #L249b6e.  v5:= 1I;
  #L249b70.  v2[v5]:= v0 @kind object;
  #L249b74.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L249b7a.  call `t`(v1) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249b80.  return @kind void;
  catch `java.lang.Throwable` @[L249b4a..L249b54] goto L249b56;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.ConsumerSingleObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L249ba0.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L249ba6.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.ConsumerSingleObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/ConsumerSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249bb8.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249bbc.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L249bc2.  v0:= v1.`io.reactivex.internal.observers.ConsumerSingleObserver.onSuccess` @type ^`io.reactivex.d0.g` @kind object;
  #L249bc6.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L249bcc.  goto L249bdc;
  #L249bce.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249bd0.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L249bd6.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249bdc.  return @kind void;
  catch `java.lang.Throwable` @[L249bc2..L249bcc] goto L249bce;
}
