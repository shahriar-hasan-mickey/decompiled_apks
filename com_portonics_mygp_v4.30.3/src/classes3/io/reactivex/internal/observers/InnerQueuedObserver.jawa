record `io.reactivex.internal.observers.InnerQueuedObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.t` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `boolean` `io.reactivex.internal.observers.InnerQueuedObserver.done` @AccessFlag VOLATILE;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @AccessFlag ;
  `io.reactivex.internal.observers.i` `io.reactivex.internal.observers.InnerQueuedObserver.parent` @AccessFlag FINAL;
  `int` `io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @AccessFlag FINAL;
  `io.reactivex.e0.a.j` `io.reactivex.internal.observers.InnerQueuedObserver.queue` @AccessFlag ;
}
global `long` `@@io.reactivex.internal.observers.InnerQueuedObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this, `io.reactivex.internal.observers.i` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.<init>:(Lio/reactivex/internal/observers/i;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L24a628.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L24a62e.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` := v1 @kind object;
  #L24a632.  v0.`io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @type ^`int` := v2;
  #L24a636.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.InnerQueuedObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L24a648.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L24a64e.  return @kind void;
}
procedure `int` `fusionMode`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.fusionMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a5f8.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int`;
  #L24a5fc.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a5b8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L24a5be.  v0:= temp @kind object;
  #L24a5c0.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L24a5c4.  call temp:= `isDisposed`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.isDisposed:(Lio/reactivex/disposables/b;)Z` @kind static;
  #L24a5ca.  v0:= temp;
  #L24a5cc.  return v0;
}
procedure `boolean` `isDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a5e0.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` @kind boolean;
  #L24a5e4.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a660.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` @kind object;
  #L24a664.  call `innerComplete`(v0, v1) @signature `Lio/reactivex/internal/observers/i;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L24a66a.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a67c.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` @kind object;
  #L24a680.  call `innerError`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/i;.innerError:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Throwable;)V` @kind interface;
  #L24a686.  return @kind void;
}
procedure `void` `onNext`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a698.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int`;
  #L24a69c.  if v0 != 0 then goto L24a6ac;
  #L24a6a0.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` @kind object;
  #L24a6a4.  call `innerNext`(v0, v1, v2) @signature `Lio/reactivex/internal/observers/i;.innerNext:(Lio/reactivex/internal/observers/InnerQueuedObserver;Ljava/lang/Object;)V` @kind interface;
  #L24a6aa.  goto L24a6b6;
  #L24a6ac.  v2:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` @kind object;
  #L24a6b0.  call `drain`(v2) @signature `Lio/reactivex/internal/observers/i;.drain:()V` @kind interface;
  #L24a6b6.  return @kind void;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.InnerQueuedObserver` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a6c8.  call temp:= `setOnce`(v2, v3) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L24a6ce.  v0:= temp;
  #L24a6d0.  if v0 == 0 then goto L24a72a;
  #L24a6d4.  v0:= instanceof @variable v3 @type ^`io.reactivex.e0.a.e` @kind boolean;
  #L24a6d8.  if v0 == 0 then goto L24a718;
  #L24a6dc.  v3:= (`io.reactivex.e0.a.e`) v3 @kind object;
  #L24a6e0.  v0:= 3I;
  #L24a6e2.  call temp:= `requestFusion`(v3, v0) @signature `Lio/reactivex/e0/a/f;.requestFusion:(I)I` @kind interface;
  #L24a6e8.  v0:= temp;
  #L24a6ea.  v1:= 1I;
  #L24a6ec.  if v0 != v1 then goto L24a708;
  #L24a6f0.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int` := v0;
  #L24a6f4.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.e0.a.j` := v3 @kind object;
  #L24a6f8.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` := v1 @kind boolean;
  #L24a6fc.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.parent` @type ^`io.reactivex.internal.observers.i` @kind object;
  #L24a700.  call `innerComplete`(v3, v2) @signature `Lio/reactivex/internal/observers/i;.innerComplete:(Lio/reactivex/internal/observers/InnerQueuedObserver;)V` @kind interface;
  #L24a706.  return @kind void;
  #L24a708.  v1:= 2I;
  #L24a70a.  if v0 != v1 then goto L24a718;
  #L24a70e.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.fusionMode` @type ^`int` := v0;
  #L24a712.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.e0.a.j` := v3 @kind object;
  #L24a716.  return @kind void;
  #L24a718.  v3:= v2.`io.reactivex.internal.observers.InnerQueuedObserver.prefetch` @type ^`int`;
  #L24a71c.  v3:= -v3 @kind int;
  #L24a71e.  call temp:= `b`(v3) @signature `Lio/reactivex/internal/util/k;.b:(I)Lio/reactivex/e0/a/j;` @kind static;
  #L24a724.  v3:= temp @kind object;
  #L24a726.  v2.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.e0.a.j` := v3 @kind object;
  #L24a72a.  return @kind void;
}
procedure `io.reactivex.e0.a.j` `queue`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.queue:()Lio/reactivex/e0/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a610.  v0:= v1.`io.reactivex.internal.observers.InnerQueuedObserver.queue` @type ^`io.reactivex.e0.a.j` @kind object;
  #L24a614.  return v0 @kind object;
}
procedure `void` `setDone`(`io.reactivex.internal.observers.InnerQueuedObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/InnerQueuedObserver;.setDone:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a73c.  v0:= 1I;
  #L24a73e.  v1.`io.reactivex.internal.observers.InnerQueuedObserver.done` @type ^`boolean` := v0 @kind boolean;
  #L24a742.  return @kind void;
}
