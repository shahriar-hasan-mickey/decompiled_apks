record `io.reactivex.internal.observers.CallbackCompletableObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.b` @kind interface, `io.reactivex.disposables.b` @kind interface, `io.reactivex.d0.g` @kind interface {
  `io.reactivex.d0.a` `io.reactivex.internal.observers.CallbackCompletableObserver.onComplete` @AccessFlag FINAL;
  `io.reactivex.d0.g` `io.reactivex.internal.observers.CallbackCompletableObserver.onError` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.CallbackCompletableObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.d0.a` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/d0/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249984.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L24998a.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.onError` @type ^`io.reactivex.d0.g` := v0 @kind object;
  #L24998e.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.onComplete` @type ^`io.reactivex.d0.a` := v1 @kind object;
  #L249992.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.d0.g` v1 @kind object, `io.reactivex.d0.a` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.<init>:(Lio/reactivex/d0/g;Lio/reactivex/d0/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2499a4.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L2499aa.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.onError` @type ^`io.reactivex.d0.g` := v1 @kind object;
  #L2499ae.  v0.`io.reactivex.internal.observers.CallbackCompletableObserver.onComplete` @type ^`io.reactivex.d0.a` := v2 @kind object;
  #L2499b2.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2499c4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2499c8.  call `accept`(v0, v1) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2499ce.  return @kind void;
}
procedure `void` `accept`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2499e0.  v0:= new `io.reactivex.exceptions.OnErrorNotImplementedException`;
  #L2499e4.  call `<init>`(v0, v2) @signature `Lio/reactivex/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2499ea.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2499f0.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L249a04.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L249a0a.  return @kind void;
}
procedure `boolean` `hasCustomOnError`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.hasCustomOnError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24993c.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.onError` @type ^`io.reactivex.d0.g` @kind object;
  #L249940.  if v0 == v1 then goto L249948;
  #L249944.  v0:= 1I;
  #L249946.  goto L24994a;
  #L249948.  v0:= 0I;
  #L24994a.  return v0;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.CallbackCompletableObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24995c.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L249962.  v0:= temp @kind object;
  #L249964.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249968.  if v0 != v1 then goto L249970;
  #L24996c.  v0:= 1I;
  #L24996e.  goto L249972;
  #L249970.  v0:= 0I;
  #L249972.  return v0;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249a1c.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.onComplete` @type ^`io.reactivex.d0.a` @kind object;
  #L249a20.  call `run`(v0) @signature `Lio/reactivex/d0/a;.run:()V` @kind interface;
  #L249a26.  goto L249a36;
  #L249a28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249a2a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L249a30.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249a36.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249a3a.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L249a40.  return @kind void;
  catch `java.lang.Throwable` @[L249a1c..L249a26] goto L249a28;
}
procedure `void` `onError`(`io.reactivex.internal.observers.CallbackCompletableObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249a60.  v0:= v1.`io.reactivex.internal.observers.CallbackCompletableObserver.onError` @type ^`io.reactivex.d0.g` @kind object;
  #L249a64.  call `accept`(v0, v2) @signature `Lio/reactivex/d0/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L249a6a.  goto L249a7a;
  #L249a6c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249a6e.  call `b`(v2) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L249a74.  call `t`(v2) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249a7a.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249a7e.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L249a84.  return @kind void;
  catch `java.lang.Throwable` @[L249a60..L249a6a] goto L249a6c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.CallbackCompletableObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/observers/CallbackCompletableObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L249aa4.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L249aaa.  return @kind void;
}
