record `io.reactivex.internal.observers.DeferredScalarObserver` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.internal.observers.DeferredScalarDisposable` @kind class, `io.reactivex.t` @kind interface {
  `io.reactivex.disposables.b` `io.reactivex.internal.observers.DeferredScalarObserver.upstream` @AccessFlag PROTECTED;
}
global `long` `@@io.reactivex.internal.observers.DeferredScalarObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.DeferredScalarObserver` v0 @kind this, `io.reactivex.t` v1 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.<init>:(Lio/reactivex/t;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249e14.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L249e1a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249e2c.  call `dispose`(v1) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.dispose:()V` @kind super;
  #L249e32.  v0:= v1.`io.reactivex.internal.observers.DeferredScalarObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L249e36.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L249e3c.  return @kind void;
}
procedure `void` `onComplete`(`io.reactivex.internal.observers.DeferredScalarObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249e50.  v0:= v2.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` @kind object;
  #L249e54.  if v0 == 0 then goto L249e66;
  #L249e58.  v1:= 0I;
  #L249e5a.  v2.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v1 @kind object;
  #L249e5e.  call `complete`(v2, v0) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L249e64.  goto L249e6c;
  #L249e66.  call `complete`(v2) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.complete:()V` @kind virtual;
  #L249e6c.  return @kind void;
}
procedure `void` `onError`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249e80.  v0:= 0I;
  #L249e82.  v1.`io.reactivex.internal.observers.DeferredScalarDisposable.value` @type ^`java.lang.Object` := v0 @kind object;
  #L249e86.  call `error`(v1, v2) @signature `Lio/reactivex/internal/observers/DeferredScalarDisposable;.error:(Ljava/lang/Throwable;)V` @kind virtual;
  #L249e8c.  return @kind void;
}
procedure `void` `onNext`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.DeferredScalarObserver` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/observers/DeferredScalarObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249ea0.  v0:= v1.`io.reactivex.internal.observers.DeferredScalarObserver.upstream` @type ^`io.reactivex.disposables.b` @kind object;
  #L249ea4.  call temp:= `validate`(v0, v2) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.validate:(Lio/reactivex/disposables/b;Lio/reactivex/disposables/b;)Z` @kind static;
  #L249eaa.  v0:= temp;
  #L249eac.  if v0 == 0 then goto L249ebe;
  #L249eb0.  v1.`io.reactivex.internal.observers.DeferredScalarObserver.upstream` @type ^`io.reactivex.disposables.b` := v2 @kind object;
  #L249eb4.  v2:= v1.`io.reactivex.internal.observers.DeferredScalarDisposable.downstream` @type ^`io.reactivex.t` @kind object;
  #L249eb8.  call `onSubscribe`(v2, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L249ebe.  return @kind void;
}
