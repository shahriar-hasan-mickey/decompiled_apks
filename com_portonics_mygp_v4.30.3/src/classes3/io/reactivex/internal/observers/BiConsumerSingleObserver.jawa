record `io.reactivex.internal.observers.BiConsumerSingleObserver` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.z` @kind interface, `io.reactivex.disposables.b` @kind interface {
  `io.reactivex.d0.b` `io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.observers.BiConsumerSingleObserver.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this, `io.reactivex.d0.b` v1 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.<init>:(Lio/reactivex/d0/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L249450.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L249456.  v0.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.d0.b` := v1 @kind object;
  #L24945a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L24946c.  call temp:= `dispose`(v0) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z` @kind static;
  #L249472.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v2 @kind this) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249428.  call temp:= `get`(v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L24942e.  v0:= temp @kind object;
  #L249430.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249434.  if v0 != v1 then goto L24943c;
  #L249438.  v0:= 1I;
  #L24943a.  goto L24943e;
  #L24943c.  v0:= 0I;
  #L24943e.  return v0;
}
procedure `void` `onError`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249484.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249488.  call `lazySet`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L24948e.  v0:= v4.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.d0.b` @kind object;
  #L249492.  v1:= 0I;
  #L249494.  call `accept`(v0, v1, v5) @signature `Lio/reactivex/d0/b;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L24949a.  goto L2494c6;
  #L24949c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24949e.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2494a4.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L2494a8.  v2:= 2I;
  #L2494aa.  v2:= new `java.lang.Throwable`[v2];
  #L2494ae.  v3:= 0I;
  #L2494b0.  v2[v3]:= v5 @kind object;
  #L2494b4.  v5:= 1I;
  #L2494b6.  v2[v5]:= v0 @kind object;
  #L2494ba.  call `<init>`(v1, v2) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L2494c0.  call `t`(v1) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L2494c6.  return @kind void;
  catch `java.lang.Throwable` @[L249484..L24949a] goto L24949c;
}
procedure `void` `onSubscribe`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v0 @kind this, `io.reactivex.disposables.b` v1 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onSubscribe:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC {
    temp;

  #L2494e4.  call temp:= `setOnce`(v0, v1) @signature `Lio/reactivex/internal/disposables/DisposableHelper;.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/disposables/b;)Z` @kind static;
  #L2494ea.  return @kind void;
}
procedure `void` `onSuccess`(`io.reactivex.internal.observers.BiConsumerSingleObserver` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/observers/BiConsumerSingleObserver;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2494fc.  v0:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L249500.  call `lazySet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L249506.  v0:= v2.`io.reactivex.internal.observers.BiConsumerSingleObserver.onCallback` @type ^`io.reactivex.d0.b` @kind object;
  #L24950a.  v1:= 0I;
  #L24950c.  call `accept`(v0, v3, v1) @signature `Lio/reactivex/d0/b;.accept:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L249512.  goto L249522;
  #L249514.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L249516.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24951c.  call `t`(v3) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L249522.  return @kind void;
  catch `java.lang.Throwable` @[L2494fc..L249512] goto L249514;
}
