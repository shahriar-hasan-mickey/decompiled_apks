record `io.reactivex.internal.util.ArrayListSupplier` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `java.util.concurrent.Callable` @kind interface, `io.reactivex.d0.k` @kind interface {
}
global `io.reactivex.internal.util.ArrayListSupplier`[] `@@io.reactivex.internal.util.ArrayListSupplier.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.reactivex.internal.util.ArrayListSupplier` `@@io.reactivex.internal.util.ArrayListSupplier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L28fba4.  v0:= new `io.reactivex.internal.util.ArrayListSupplier`;
  #L28fba8.  v1:= "INSTANCE" @kind object;
  #L28fbac.  v2:= 0I;
  #L28fbae.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28fbb4.  `@@io.reactivex.internal.util.ArrayListSupplier.INSTANCE` @type ^`io.reactivex.internal.util.ArrayListSupplier` := v0 @kind object;
  #L28fbb8.  v1:= 1I;
  #L28fbba.  v1:= new `io.reactivex.internal.util.ArrayListSupplier`[v1];
  #L28fbbe.  v1[v2]:= v0 @kind object;
  #L28fbc2.  `@@io.reactivex.internal.util.ArrayListSupplier.$VALUES` @type ^`io.reactivex.internal.util.ArrayListSupplier`[] := v1 @kind object;
  #L28fbc6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.ArrayListSupplier` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28fbd8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28fbde.  return @kind void;
}
procedure `java.util.concurrent.Callable` `asCallable`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asCallable:()Ljava/util/concurrent/Callable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28fb8c.  v0:= `@@io.reactivex.internal.util.ArrayListSupplier.INSTANCE` @type ^`io.reactivex.internal.util.ArrayListSupplier` @kind object;
  #L28fb90.  return v0 @kind object;
}
procedure `io.reactivex.d0.k` `asFunction`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.asFunction:()Lio/reactivex/d0/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28fabc.  v0:= `@@io.reactivex.internal.util.ArrayListSupplier.INSTANCE` @type ^`io.reactivex.internal.util.ArrayListSupplier` @kind object;
  #L28fac0.  return v0 @kind object;
}
procedure `io.reactivex.internal.util.ArrayListSupplier` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.valueOf:(Ljava/lang/String;)Lio/reactivex/internal/util/ArrayListSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28fad4.  v0:= constclass @type ^`io.reactivex.internal.util.ArrayListSupplier` @kind object;
  #L28fad8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L28fade.  v1:= temp @kind object;
  #L28fae0.  v1:= (`io.reactivex.internal.util.ArrayListSupplier`) v1 @kind object;
  #L28fae4.  return v1 @kind object;
}
procedure `io.reactivex.internal.util.ArrayListSupplier`[] `values`() @signature `Lio/reactivex/internal/util/ArrayListSupplier;.values:()[Lio/reactivex/internal/util/ArrayListSupplier;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28faf8.  v0:= `@@io.reactivex.internal.util.ArrayListSupplier.$VALUES` @type ^`io.reactivex.internal.util.ArrayListSupplier`[] @kind object;
  #L28fafc.  call temp:= `clone`(v0) @signature `[Lio/reactivex/internal/util/ArrayListSupplier;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28fb02.  v0:= temp @kind object;
  #L28fb04.  v0:= (`io.reactivex.internal.util.ArrayListSupplier`[]) v0 @kind object;
  #L28fb08.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`io.reactivex.internal.util.ArrayListSupplier` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L28fb1c.  call temp:= `apply`(v0, v1) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.apply:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L28fb22.  v1:= temp @kind object;
  #L28fb24.  return v1 @kind object;
}
procedure `java.util.List` `apply`(`io.reactivex.internal.util.ArrayListSupplier` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.apply:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;

  #L28fb54.  v1:= new `java.util.ArrayList`;
  #L28fb58.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28fb5e.  return v1 @kind object;
}
procedure `java.lang.Object` `call`(`io.reactivex.internal.util.ArrayListSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L28fb38.  call temp:= `call`(v1) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.call:()Ljava/util/List;` @kind virtual;
  #L28fb3e.  v0:= temp @kind object;
  #L28fb40.  return v0 @kind object;
}
procedure `java.util.List` `call`(`io.reactivex.internal.util.ArrayListSupplier` v1 @kind this) @signature `Lio/reactivex/internal/util/ArrayListSupplier;.call:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28fb70.  v0:= new `java.util.ArrayList`;
  #L28fb74.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28fb7a.  return v0 @kind object;
}
