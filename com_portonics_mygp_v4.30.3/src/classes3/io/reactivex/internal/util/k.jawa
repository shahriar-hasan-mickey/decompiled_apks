record `io.reactivex.internal.util.k` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `boolean` `a`(`boolean` v2 , `boolean` v3 , `io.reactivex.t` v4 @kind object, `boolean` v5 , `io.reactivex.e0.a.j` v6 @kind object, `io.reactivex.disposables.b` v7 @kind object, `io.reactivex.internal.util.h` v8 @kind object) @signature `Lio/reactivex/internal/util/k;.a:(ZZLio/reactivex/t;ZLio/reactivex/e0/a/j;Lio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L291050.  call temp:= `b`(v8) @signature `Lio/reactivex/internal/util/h;.b:()Z` @kind interface;
  #L291056.  v0:= temp;
  #L291058.  v1:= 1I;
  #L29105a.  if v0 == 0 then goto L29106c;
  #L29105e.  call `clear`(v6) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L291064.  call `dispose`(v7) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L29106a.  return v1;
  #L29106c.  if v2 == 0 then goto L2910d8;
  #L291070.  if v5 == 0 then goto L29109e;
  #L291074.  if v3 == 0 then goto L2910d8;
  #L291078.  if v7 == 0 then goto L291082;
  #L29107c.  call `dispose`(v7) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L291082.  call temp:= `z`(v8) @signature `Lio/reactivex/internal/util/h;.z:()Ljava/lang/Throwable;` @kind interface;
  #L291088.  v2:= temp @kind object;
  #L29108a.  if v2 == 0 then goto L291096;
  #L29108e.  call `onError`(v4, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L291094.  goto L29109c;
  #L291096.  call `onComplete`(v4) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L29109c.  return v1;
  #L29109e.  call temp:= `z`(v8) @signature `Lio/reactivex/internal/util/h;.z:()Ljava/lang/Throwable;` @kind interface;
  #L2910a4.  v2:= temp @kind object;
  #L2910a6.  if v2 == 0 then goto L2910c2;
  #L2910aa.  call `clear`(v6) @signature `Lio/reactivex/e0/a/j;.clear:()V` @kind interface;
  #L2910b0.  if v7 == 0 then goto L2910ba;
  #L2910b4.  call `dispose`(v7) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2910ba.  call `onError`(v4, v2) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L2910c0.  return v1;
  #L2910c2.  if v3 == 0 then goto L2910d8;
  #L2910c6.  if v7 == 0 then goto L2910d0;
  #L2910ca.  call `dispose`(v7) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2910d0.  call `onComplete`(v4) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L2910d6.  return v1;
  #L2910d8.  v2:= 0I;
  #L2910da.  return v2;
}
procedure `io.reactivex.e0.a.j` `b`(`int` v1 ) @signature `Lio/reactivex/internal/util/k;.b:(I)Lio/reactivex/e0/a/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29124c.  if v1 >= 0 then goto L29125e;
  #L291250.  v0:= new `io.reactivex.internal.queue.a`;
  #L291254.  v1:= -v1 @kind int;
  #L291256.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/queue/a;.<init>:(I)V` @kind direct;
  #L29125c.  return v0 @kind object;
  #L29125e.  v0:= new `io.reactivex.internal.queue.SpscArrayQueue`;
  #L291262.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/queue/SpscArrayQueue;.<init>:(I)V` @kind direct;
  #L291268.  return v0 @kind object;
}
procedure `void` `c`(`io.reactivex.e0.a.i` v11 @kind object, `io.reactivex.t` v12 @kind object, `boolean` v13 , `io.reactivex.disposables.b` v14 @kind object, `io.reactivex.internal.util.h` v15 @kind object) @signature `Lio/reactivex/internal/util/k;.c:(Lio/reactivex/e0/a/i;Lio/reactivex/t;ZLio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L29127c.  v0:= 1I;
  #L29127e.  v1:= 1I;
  #L291280.  call temp:= `a`(v15) @signature `Lio/reactivex/internal/util/h;.a:()Z` @kind interface;
  #L291286.  v2:= temp;
  #L291288.  call temp:= `isEmpty`(v11) @signature `Lio/reactivex/e0/a/j;.isEmpty:()Z` @kind interface;
  #L29128e.  v3:= temp;
  #L291290.  v4:= v12 @kind object;
  #L291292.  v5:= v13;
  #L291294.  v6:= v11 @kind object;
  #L291296.  v7:= v14 @kind object;
  #L291298.  v8:= v15 @kind object;
  #L29129a.  call temp:= `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lio/reactivex/internal/util/k;.a:(ZZLio/reactivex/t;ZLio/reactivex/e0/a/j;Lio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)Z` @kind static;
  #L2912a0.  v2:= temp;
  #L2912a2.  if v2 == 0 then goto L2912a8;
  #L2912a6.  return @kind void;
  #L2912a8.  call temp:= `a`(v15) @signature `Lio/reactivex/internal/util/h;.a:()Z` @kind interface;
  #L2912ae.  v3:= temp;
  #L2912b0.  call temp:= `poll`(v11) @signature `Lio/reactivex/e0/a/i;.poll:()Ljava/lang/Object;` @kind interface;
  #L2912b6.  v2:= temp @kind object;
  #L2912b8.  if v2 != 0 then goto L2912c0;
  #L2912bc.  v10:= 1I;
  #L2912be.  goto L2912c4;
  #L2912c0.  v4:= 0I;
  #L2912c2.  v10:= 0I;
  #L2912c4.  v4:= v10;
  #L2912c6.  v5:= v12 @kind object;
  #L2912c8.  v6:= v13;
  #L2912ca.  v7:= v11 @kind object;
  #L2912cc.  v8:= v14 @kind object;
  #L2912ce.  v9:= v15 @kind object;
  #L2912d0.  call temp:= `a`(v3, v4, v5, v6, v7, v8, v9) @signature `Lio/reactivex/internal/util/k;.a:(ZZLio/reactivex/t;ZLio/reactivex/e0/a/j;Lio/reactivex/disposables/b;Lio/reactivex/internal/util/h;)Z` @kind static;
  #L2912d6.  v3:= temp;
  #L2912d8.  if v3 == 0 then goto L2912de;
  #L2912dc.  return @kind void;
  #L2912de.  if v10 == 0 then goto L2912f2;
  #L2912e2.  v1:= -v1 @kind int;
  #L2912e4.  call temp:= `d`(v15, v1) @signature `Lio/reactivex/internal/util/h;.d:(I)I` @kind interface;
  #L2912ea.  v1:= temp;
  #L2912ec.  if v1 != 0 then goto L291280;
  #L2912f0.  return @kind void;
  #L2912f2.  call `c`(v15, v12, v2) @signature `Lio/reactivex/internal/util/h;.c:(Lio/reactivex/t;Ljava/lang/Object;)V` @kind interface;
  #L2912f8.  goto L2912a8;
}
procedure `boolean` `d`(`io.reactivex.d0.e` v0 @kind object) @signature `Lio/reactivex/internal/util/k;.d:(Lio/reactivex/d0/e;)Z` @AccessFlag STATIC {
    temp;

  #L2910ec.  call temp:= `getAsBoolean`(v0) @signature `Lio/reactivex/d0/e;.getAsBoolean:()Z` @kind interface;
  #L2910f2.  v0:= temp;
  #L2910f4.  return v0;
  #L2910f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2910f8.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2910fe.  v0:= 1I;
  #L291100.  return v0;
  catch `java.lang.Throwable` @[L2910ec..L2910f4] goto L2910f6;
}
procedure `void` `e`(`n.b.c` v15 @kind object, `java.util.Queue` v16 @kind object, `java.util.concurrent.atomic.AtomicLong` v17 @kind object, `io.reactivex.d0.e` v18 @kind object) @signature `Lio/reactivex/internal/util/k;.e:(Ln/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L29130c.  call temp:= `isEmpty`(v16) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L291312.  v0:= temp;
  #L291314.  if v0 == 0 then goto L291320;
  #L291318.  call `onComplete`(v15) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L29131e.  return @kind void;
  #L291320.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L291326.  v1:= temp @kind wide;
  #L291328.  v3:= v15 @kind object;
  #L29132a.  v4:= v16 @kind object;
  #L29132e.  v5:= v17 @kind object;
  #L291332.  v6:= v18 @kind object;
  #L291336.  call temp:= `f`(v1, v3, v4, v5, v6) @signature `Lio/reactivex/internal/util/k;.f:(JLn/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)Z` @kind static;
  #L29133c.  v0:= temp;
  #L29133e.  if v0 == 0 then goto L291344;
  #L291342.  return @kind void;
  #L291344.  call temp:= `get`(v17) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L29134a.  v0:= temp @kind wide;
  #L29134c.  v2:= -9223372036854775808L;
  #L291350.  v4:= v0 ^& v2 @kind long;
  #L291354.  v6:= 0L;
  #L291358.  v8:= lcmp(v4, v6);
  #L29135c.  if v8 == 0 then goto L291362;
  #L291360.  return @kind void;
  #L291362.  v9:= v0 ^| v2 @kind long;
  #L291366.  v2:= v17 @kind object;
  #L29136a.  call temp:= `compareAndSet`(v2, v0, v9) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L291370.  v3:= temp;
  #L291372.  if v3 == 0 then goto L291344;
  #L291376.  v3:= lcmp(v0, v6);
  #L29137a.  if v3 == 0 then goto L291392;
  #L29137e.  v11:= v15 @kind object;
  #L291380.  v12:= v16 @kind object;
  #L291384.  v13:= v17 @kind object;
  #L291388.  v14:= v18 @kind object;
  #L29138c.  call temp:= `f`(v9, v11, v12, v13, v14) @signature `Lio/reactivex/internal/util/k;.f:(JLn/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)Z` @kind static;
  #L291392.  return @kind void;
}
procedure `boolean` `f`(`long` v9 , `n.b.c` v11 @kind object, `java.util.Queue` v12 @kind object, `java.util.concurrent.atomic.AtomicLong` v13 @kind object, `io.reactivex.d0.e` v14 @kind object) @signature `Lio/reactivex/internal/util/k;.f:(JLn/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L291120.  v0:= -9223372036854775808L;
  #L291124.  v2:= v9 ^& v0 @kind long;
  #L291128.  v4:= 1I;
  #L29112a.  v5:= lcmp(v2, v9);
  #L29112e.  if v5 == 0 then goto L291162;
  #L291132.  call temp:= `d`(v14) @signature `Lio/reactivex/internal/util/k;.d:(Lio/reactivex/d0/e;)Z` @kind static;
  #L291138.  v5:= temp;
  #L29113a.  if v5 == 0 then goto L291140;
  #L29113e.  return v4;
  #L291140.  call temp:= `poll`(v12) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L291146.  v5:= temp @kind object;
  #L291148.  if v5 != 0 then goto L291154;
  #L29114c.  call `onComplete`(v11) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L291152.  return v4;
  #L291154.  call `onNext`(v11, v5) @signature `Ln/b/c;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L29115a.  v4:= 1L;
  #L29115e.  v2:= v2 + v4 @kind long;
  #L291160.  goto L291128;
  #L291162.  call temp:= `d`(v14) @signature `Lio/reactivex/internal/util/k;.d:(Lio/reactivex/d0/e;)Z` @kind static;
  #L291168.  v9:= temp;
  #L29116a.  if v9 == 0 then goto L291170;
  #L29116e.  return v4;
  #L291170.  call temp:= `isEmpty`(v12) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L291176.  v9:= temp;
  #L291178.  if v9 == 0 then goto L291184;
  #L29117c.  call `onComplete`(v11) @signature `Ln/b/c;.onComplete:()V` @kind interface;
  #L291182.  return v4;
  #L291184.  call temp:= `get`(v13) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L29118a.  v9:= temp @kind wide;
  #L29118c.  v4:= lcmp(v9, v2);
  #L291190.  if v4 != 0 then goto L291128;
  #L291194.  v9:= 9223372036854775807L;
  #L29119e.  v2:= v2 ^& v9 @kind long;
  #L2911a0.  v2:= -v2 @kind long;
  #L2911a2.  call temp:= `addAndGet`(v13, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.addAndGet:(J)J` @kind virtual;
  #L2911a8.  v2:= temp @kind wide;
  #L2911aa.  v9:= v9 ^& v2 @kind long;
  #L2911ac.  v4:= 0L;
  #L2911b0.  v6:= lcmp(v9, v4);
  #L2911b4.  if v6 != 0 then goto L2911bc;
  #L2911b8.  v9:= 0I;
  #L2911ba.  return v9;
  #L2911bc.  v9:= v2 ^& v0 @kind long;
  #L2911c0.  v7:= v9 @kind wide;
  #L2911c2.  v9:= v2 @kind wide;
  #L2911c4.  v2:= v7 @kind wide;
  #L2911c6.  goto L291128;
}
procedure `boolean` `g`(`long` v14 , `n.b.c` v16 @kind object, `java.util.Queue` v17 @kind object, `java.util.concurrent.atomic.AtomicLong` v18 @kind object, `io.reactivex.d0.e` v19 @kind object) @signature `Lio/reactivex/internal/util/k;.g:(JLn/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2911d8.  v0:= v14 @kind wide;
  #L2911da.  call temp:= `get`(v18) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L2911e0.  v2:= temp @kind wide;
  #L2911e2.  v4:= 9223372036854775807L;
  #L2911ec.  v4:= v4 ^& v2 @kind long;
  #L2911ee.  v6:= -9223372036854775808L;
  #L2911f2.  v8:= v2 ^& v6 @kind long;
  #L2911f6.  call temp:= `c`(v4, v14) @signature `Lio/reactivex/internal/util/b;.c:(JJ)J` @kind static;
  #L2911fc.  v4:= temp @kind wide;
  #L2911fe.  v4:= v4 ^| v8 @kind long;
  #L291200.  v12:= v18 @kind object;
  #L291204.  call temp:= `compareAndSet`(v12, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L29120a.  v4:= temp;
  #L29120c.  if v4 == 0 then goto L2911da;
  #L291210.  v4:= lcmp(v2, v6);
  #L291214.  if v4 != 0 then goto L291236;
  #L291218.  v8:= v0 ^| v6 @kind long;
  #L29121c.  v10:= v16 @kind object;
  #L291220.  v11:= v17 @kind object;
  #L291224.  v12:= v18 @kind object;
  #L291228.  v13:= v19 @kind object;
  #L29122c.  call temp:= `f`(v8, v10, v11, v12, v13) @signature `Lio/reactivex/internal/util/k;.f:(JLn/b/c;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/d0/e;)Z` @kind static;
  #L291232.  v0:= 1I;
  #L291234.  return v0;
  #L291236.  v0:= 0I;
  #L291238.  return v0;
}
procedure `void` `h`(`n.b.d` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/internal/util/k;.h:(Ln/b/d;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2913a4.  if v3 >= 0 then goto L2913b4;
  #L2913a8.  v0:= 9223372036854775807L;
  #L2913b2.  goto L2913b6;
  #L2913b4.  v0:= (`long`) v3 @kind i2l;
  #L2913b6.  call `request`(v2, v0) @signature `Ln/b/d;.request:(J)V` @kind interface;
  #L2913bc.  return @kind void;
}
