record `io.reactivex.internal.util.VolatileSizeArrayList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicInteger` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.ArrayList` `io.reactivex.internal.util.VolatileSizeArrayList.list` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.internal.util.VolatileSizeArrayList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29175c.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L291762.  v0:= new `java.util.ArrayList`;
  #L291766.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L29176c.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` := v0 @kind object;
  #L291770.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L291784.  call `<init>`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L29178a.  v0:= new `java.util.ArrayList`;
  #L29178e.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L291794.  v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` := v0 @kind object;
  #L291798.  return @kind void;
}
procedure `void` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2917ac.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2917b0.  call `add`(v0, v2, v3) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L2917b6.  v2:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2917ba.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2917c0.  v2:= temp;
  #L2917c2.  call `lazySet`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L2917c8.  return @kind void;
}
procedure `boolean` `add`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2913d0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2913d4.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2913da.  v2:= temp;
  #L2913dc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2913e0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2913e6.  v0:= temp;
  #L2913e8.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L2913ee.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291400.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291404.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/ArrayList;.addAll:(ILjava/util/Collection;)Z` @kind virtual;
  #L29140a.  v2:= temp;
  #L29140c.  v3:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291410.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291416.  v3:= temp;
  #L291418.  call `lazySet`(v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29141e.  return v2;
}
procedure `boolean` `addAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291430.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291434.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L29143a.  v2:= temp;
  #L29143c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291440.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291446.  v0:= temp;
  #L291448.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29144e.  return v2;
}
procedure `void` `clear`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2917dc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2917e0.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L2917e6.  v0:= 0I;
  #L2917e8.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L2917ee.  return @kind void;
}
procedure `boolean` `contains`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291460.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291464.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L29146a.  v2:= temp;
  #L29146c.  return v2;
}
procedure `boolean` `containsAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291480.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291484.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/ArrayList;.containsAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L29148a.  v2:= temp;
  #L29148c.  return v2;
}
procedure `boolean` `equals`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2914a0.  v0:= instanceof @variable v2 @type ^`io.reactivex.internal.util.VolatileSizeArrayList` @kind boolean;
  #L2914a4.  if v0 == 0 then goto L2914be;
  #L2914a8.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2914ac.  v2:= (`io.reactivex.internal.util.VolatileSizeArrayList`) v2 @kind object;
  #L2914b0.  v2:= v2.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2914b4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2914ba.  v2:= temp;
  #L2914bc.  return v2;
  #L2914be.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2914c2.  call temp:= `equals`(v0, v2) @signature `Ljava/util/ArrayList;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2914c8.  v2:= temp;
  #L2914ca.  return v2;
}
procedure `java.lang.Object` `get`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29160c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291610.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L291616.  v2:= temp @kind object;
  #L291618.  return v2 @kind object;
}
procedure `int` `hashCode`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291590.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291594.  call temp:= `hashCode`(v0) @signature `Ljava/util/ArrayList;.hashCode:()I` @kind virtual;
  #L29159a.  v0:= temp;
  #L29159c.  return v0;
}
procedure `int` `indexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2915b0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2915b4.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L2915ba.  v2:= temp;
  #L2915bc.  return v2;
}
procedure `boolean` `isEmpty`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2914dc.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L2914e2.  v0:= temp;
  #L2914e4.  if v0 != 0 then goto L2914ec;
  #L2914e8.  v0:= 1I;
  #L2914ea.  goto L2914ee;
  #L2914ec.  v0:= 0I;
  #L2914ee.  return v0;
}
procedure `java.util.Iterator` `iterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2916dc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2916e0.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2916e6.  v0:= temp @kind object;
  #L2916e8.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2915d0.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2915d4.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/ArrayList;.lastIndexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L2915da.  v2:= temp;
  #L2915dc.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29171c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291720.  call temp:= `listIterator`(v0) @signature `Ljava/util/ArrayList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L291726.  v0:= temp @kind object;
  #L291728.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29173c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291740.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/ArrayList;.listIterator:(I)Ljava/util/ListIterator;` @kind virtual;
  #L291746.  v2:= temp @kind object;
  #L291748.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29162c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291630.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L291636.  v2:= temp @kind object;
  #L291638.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L29163c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291642.  v0:= temp;
  #L291644.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29164a.  return v2 @kind object;
}
procedure `boolean` `remove`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291500.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291504.  call temp:= `remove`(v0, v2) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L29150a.  v2:= temp;
  #L29150c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291510.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291516.  v0:= temp;
  #L291518.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29151e.  return v2;
}
procedure `boolean` `removeAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291530.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291534.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/ArrayList;.removeAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L29153a.  v2:= temp;
  #L29153c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291540.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291546.  v0:= temp;
  #L291548.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29154e.  return v2;
}
procedure `boolean` `retainAll`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L291560.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291564.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/ArrayList;.retainAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L29156a.  v2:= temp;
  #L29156c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291570.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L291576.  v0:= temp;
  #L291578.  call `lazySet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.lazySet:(I)V` @kind virtual;
  #L29157e.  return v2;
}
procedure `java.lang.Object` `set`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29165c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291660.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L291666.  v2:= temp @kind object;
  #L291668.  return v2 @kind object;
}
procedure `int` `size`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2915f0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L2915f6.  v0:= temp;
  #L2915f8.  return v0;
}
procedure `java.util.List` `subList`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2916fc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291700.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/ArrayList;.subList:(II)Ljava/util/List;` @kind virtual;
  #L291706.  v2:= temp @kind object;
  #L291708.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29167c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L291680.  call temp:= `toArray`(v0) @signature `Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L291686.  v0:= temp @kind object;
  #L291688.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29169c.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2916a0.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L2916a6.  v2:= temp @kind object;
  #L2916a8.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.internal.util.VolatileSizeArrayList` v1 @kind this) @signature `Lio/reactivex/internal/util/VolatileSizeArrayList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2916bc.  v0:= v1.`io.reactivex.internal.util.VolatileSizeArrayList.list` @type ^`java.util.ArrayList` @kind object;
  #L2916c0.  call temp:= `toString`(v0) @signature `Ljava/util/ArrayList;.toString:()Ljava/lang/String;` @kind virtual;
  #L2916c6.  v0:= temp @kind object;
  #L2916c8.  return v0 @kind object;
}
