record `io.reactivex.internal.util.a` @kind class @AccessFlag PUBLIC {
  `int` `io.reactivex.internal.util.a.a` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.util.a.b` @AccessFlag FINAL;
  `java.lang.Object`[] `io.reactivex.internal.util.a.c` @AccessFlag ;
  `int` `io.reactivex.internal.util.a.d` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.internal.util.a` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/util/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28f9e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28f9ea.  v0.`io.reactivex.internal.util.a.a` @type ^`int` := v1;
  #L28f9ee.  v1:= v1 + 1;
  #L28f9f2.  v1:= new `java.lang.Object`[v1];
  #L28f9f6.  v0.`io.reactivex.internal.util.a.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L28f9fa.  v0.`io.reactivex.internal.util.a.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L28f9fe.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.internal.util.a` v4 @kind this, `io.reactivex.t` v5 @kind object) @signature `Lio/reactivex/internal/util/a;.a:(Lio/reactivex/t;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28f994.  v0:= v4.`io.reactivex.internal.util.a.b` @type ^`java.lang.Object`[] @kind object;
  #L28f998.  v1:= v4.`io.reactivex.internal.util.a.a` @type ^`int`;
  #L28f99c.  v2:= 0I;
  #L28f99e.  if v0 == 0 then goto L28f9d0;
  #L28f9a2.  if v2 >= v1 then goto L28f9c6;
  #L28f9a6.  v3:= v0[v2] @kind object;
  #L28f9aa.  if v3 != 0 then goto L28f9b0;
  #L28f9ae.  goto L28f9c6;
  #L28f9b0.  call temp:= `acceptFull`(v3, v5) @signature `Lio/reactivex/internal/util/NotificationLite;.acceptFull:(Ljava/lang/Object;Lio/reactivex/t;)Z` @kind static;
  #L28f9b6.  v3:= temp;
  #L28f9b8.  if v3 == 0 then goto L28f9c0;
  #L28f9bc.  v5:= 1I;
  #L28f9be.  return v5;
  #L28f9c0.  v2:= v2 + 1;
  #L28f9c4.  goto L28f9a2;
  #L28f9c6.  v0:= v0[v1] @kind object;
  #L28f9ca.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L28f9ce.  goto L28f99c;
  #L28f9d0.  return v2;
}
procedure `void` `b`(`io.reactivex.internal.util.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/reactivex/internal/util/a;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28fa10.  v0:= v3.`io.reactivex.internal.util.a.a` @type ^`int`;
  #L28fa14.  v1:= v3.`io.reactivex.internal.util.a.d` @type ^`int`;
  #L28fa18.  if v1 != v0 then goto L28fa32;
  #L28fa1c.  v1:= v0 + 1;
  #L28fa20.  v1:= new `java.lang.Object`[v1];
  #L28fa24.  v2:= v3.`io.reactivex.internal.util.a.c` @type ^`java.lang.Object`[] @kind object;
  #L28fa28.  v2[v0]:= v1 @kind object;
  #L28fa2c.  v3.`io.reactivex.internal.util.a.c` @type ^`java.lang.Object`[] := v1 @kind object;
  #L28fa30.  v1:= 0I;
  #L28fa32.  v0:= v3.`io.reactivex.internal.util.a.c` @type ^`java.lang.Object`[] @kind object;
  #L28fa36.  v0[v1]:= v4 @kind object;
  #L28fa3a.  v1:= v1 + 1;
  #L28fa3e.  v3.`io.reactivex.internal.util.a.d` @type ^`int` := v1;
  #L28fa42.  return @kind void;
}
procedure `void` `c`(`io.reactivex.internal.util.a` v4 @kind this, `io.reactivex.internal.util.a$a` v5 @kind object) @signature `Lio/reactivex/internal/util/a;.c:(Lio/reactivex/internal/util/a$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28fa54.  v0:= v4.`io.reactivex.internal.util.a.b` @type ^`java.lang.Object`[] @kind object;
  #L28fa58.  v1:= v4.`io.reactivex.internal.util.a.a` @type ^`int`;
  #L28fa5c.  if v0 == 0 then goto L28fa8e;
  #L28fa60.  v2:= 0I;
  #L28fa62.  if v2 >= v1 then goto L28fa84;
  #L28fa66.  v3:= v0[v2] @kind object;
  #L28fa6a.  if v3 != 0 then goto L28fa70;
  #L28fa6e.  goto L28fa84;
  #L28fa70.  call temp:= `test`(v5, v3) @signature `Lio/reactivex/internal/util/a$a;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L28fa76.  v3:= temp;
  #L28fa78.  if v3 == 0 then goto L28fa7e;
  #L28fa7c.  return @kind void;
  #L28fa7e.  v2:= v2 + 1;
  #L28fa82.  goto L28fa62;
  #L28fa84.  v0:= v0[v1] @kind object;
  #L28fa88.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L28fa8c.  goto L28fa5c;
  #L28fa8e.  return @kind void;
}
procedure `void` `d`(`io.reactivex.internal.util.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lio/reactivex/internal/util/a;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28faa0.  v0:= v2.`io.reactivex.internal.util.a.b` @type ^`java.lang.Object`[] @kind object;
  #L28faa4.  v1:= 0I;
  #L28faa6.  v0[v1]:= v3 @kind object;
  #L28faaa.  return @kind void;
}
