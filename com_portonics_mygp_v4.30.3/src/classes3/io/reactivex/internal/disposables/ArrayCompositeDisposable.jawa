record `io.reactivex.internal.disposables.ArrayCompositeDisposable` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `io.reactivex.disposables.b` @kind interface {
}
global `long` `@@io.reactivex.internal.disposables.ArrayCompositeDisposable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v0 @kind this, `int` v1 ) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L247764.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L24776a.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v4 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24777c.  v0:= 0I;
  #L24777e.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L247784.  v1:= temp @kind object;
  #L247786.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L24778a.  if v1 == v2 then goto L2477ce;
  #L24778e.  call temp:= `length`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.length:()I` @kind virtual;
  #L247794.  v1:= temp;
  #L247796.  if v0 >= v1 then goto L2477ce;
  #L24779a.  call temp:= `get`(v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2477a0.  v2:= temp @kind object;
  #L2477a2.  v2:= (`io.reactivex.disposables.b`) v2 @kind object;
  #L2477a6.  v3:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2477aa.  if v2 == v3 then goto L2477c8;
  #L2477ae.  call temp:= `getAndSet`(v4, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2477b4.  v2:= temp @kind object;
  #L2477b6.  v2:= (`io.reactivex.disposables.b`) v2 @kind object;
  #L2477ba.  if v2 == v3 then goto L2477c8;
  #L2477be.  if v2 == 0 then goto L2477c8;
  #L2477c2.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2477c8.  v0:= v0 + 1;
  #L2477cc.  goto L247796;
  #L2477ce.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v3 @kind this) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2476b8.  v0:= 0I;
  #L2476ba.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2476c0.  v1:= temp @kind object;
  #L2476c2.  v2:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2476c6.  if v1 != v2 then goto L2476cc;
  #L2476ca.  v0:= 1I;
  #L2476cc.  return v0;
}
procedure `io.reactivex.disposables.b` `replaceResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.b` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.replaceResource:(ILio/reactivex/disposables/b;)Lio/reactivex/disposables/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L247728.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24772e.  v0:= temp @kind object;
  #L247730.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L247734.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L247738.  if v0 != v1 then goto L247746;
  #L24773c.  call `dispose`(v4) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L247742.  v3:= 0I;
  #L247744.  return v3 @kind object;
  #L247746.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L24774c.  v1:= temp;
  #L24774e.  if v1 == 0 then goto L247728;
  #L247752.  return v0 @kind object;
}
procedure `boolean` `setResource`(`io.reactivex.internal.disposables.ArrayCompositeDisposable` v2 @kind this, `int` v3 , `io.reactivex.disposables.b` v4 @kind object) @signature `Lio/reactivex/internal/disposables/ArrayCompositeDisposable;.setResource:(ILio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2476e0.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2476e6.  v0:= temp @kind object;
  #L2476e8.  v0:= (`io.reactivex.disposables.b`) v0 @kind object;
  #L2476ec.  v1:= `@@io.reactivex.internal.disposables.DisposableHelper.DISPOSED` @type ^`io.reactivex.internal.disposables.DisposableHelper` @kind object;
  #L2476f0.  if v0 != v1 then goto L2476fe;
  #L2476f4.  call `dispose`(v4) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L2476fa.  v3:= 0I;
  #L2476fc.  return v3;
  #L2476fe.  call temp:= `compareAndSet`(v2, v3, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L247704.  v1:= temp;
  #L247706.  if v1 == 0 then goto L2476e0;
  #L24770a.  if v0 == 0 then goto L247714;
  #L24770e.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L247714.  v3:= 1I;
  #L247716.  return v3;
}
