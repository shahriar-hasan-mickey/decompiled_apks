record `io.reactivex.internal.disposables.b` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.disposables.b` @kind interface, `io.reactivex.internal.disposables.a` @kind interface {
  `java.util.List` `io.reactivex.internal.disposables.b.b` @AccessFlag ;
  `boolean` `io.reactivex.internal.disposables.b.c` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.internal.disposables.b` v0 @kind this) @signature `Lio/reactivex/internal/disposables/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L247ea8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L247eae.  return @kind void;
}
procedure `boolean` `a`(`io.reactivex.internal.disposables.b` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/disposables/b;.a:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L247e7c.  call temp:= `c`(v1, v2) @signature `Lio/reactivex/internal/disposables/b;.c:(Lio/reactivex/disposables/b;)Z` @kind virtual;
  #L247e82.  v0:= temp;
  #L247e84.  if v0 == 0 then goto L247e92;
  #L247e88.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L247e8e.  v2:= 1I;
  #L247e90.  return v2;
  #L247e92.  v2:= 0I;
  #L247e94.  return v2;
}
procedure `boolean` `b`(`io.reactivex.internal.disposables.b` v1 @kind this, `io.reactivex.disposables.b` v2 @kind object) @signature `Lio/reactivex/internal/disposables/b;.b:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L247d8c.  v0:= "d is null" @kind object;
  #L247d90.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L247d96.  v0:= v1.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247d9a.  if v0 != 0 then goto L247dd4;
  #L247d9e.  @monitorenter v1
  #L247da0.  v0:= v1.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247da4.  if v0 != 0 then goto L247dca;
  #L247da8.  v0:= v1.`io.reactivex.internal.disposables.b.b` @type ^`java.util.List` @kind object;
  #L247dac.  if v0 != 0 then goto L247dbe;
  #L247db0.  v0:= new `java.util.LinkedList`;
  #L247db4.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L247dba.  v1.`io.reactivex.internal.disposables.b.b` @type ^`java.util.List` := v0 @kind object;
  #L247dbe.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L247dc4.  v2:= 1I;
  #L247dc6.  @monitorexit v1
  #L247dc8.  return v2;
  #L247dca.  @monitorexit v1
  #L247dcc.  goto L247dd4;
  #L247dce.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247dd0.  @monitorexit v1
  #L247dd2.  throw v2;
  #L247dd4.  call `dispose`(v2) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L247dda.  v2:= 0I;
  #L247ddc.  return v2;
  catch `java.lang.Throwable` @[L247da0..L247dd2] goto L247dce;
}
procedure `boolean` `c`(`io.reactivex.internal.disposables.b` v2 @kind this, `io.reactivex.disposables.b` v3 @kind object) @signature `Lio/reactivex/internal/disposables/b;.c:(Lio/reactivex/disposables/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L247dfc.  v0:= "Disposable item is null" @kind object;
  #L247e00.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L247e06.  v0:= v2.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247e0a.  v1:= 0I;
  #L247e0c.  if v0 == 0 then goto L247e12;
  #L247e10.  return v1;
  #L247e12.  @monitorenter v2
  #L247e14.  v0:= v2.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247e18.  if v0 == 0 then goto L247e20;
  #L247e1c.  @monitorexit v2
  #L247e1e.  return v1;
  #L247e20.  v0:= v2.`io.reactivex.internal.disposables.b.b` @type ^`java.util.List` @kind object;
  #L247e24.  if v0 == 0 then goto L247e3c;
  #L247e28.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L247e2e.  v3:= temp;
  #L247e30.  if v3 != 0 then goto L247e36;
  #L247e34.  goto L247e3c;
  #L247e36.  @monitorexit v2
  #L247e38.  v3:= 1I;
  #L247e3a.  return v3;
  #L247e3c.  @monitorexit v2
  #L247e3e.  return v1;
  #L247e40.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247e42.  @monitorexit v2
  #L247e44.  throw v3;
  catch `java.lang.Throwable` @[L247e14..L247e44] goto L247e40;
}
procedure `void` `d`(`io.reactivex.internal.disposables.b` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/reactivex/internal/disposables/b;.d:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L247f1c.  if v3 != 0 then goto L247f22;
  #L247f20.  return @kind void;
  #L247f22.  v0:= 0I;
  #L247f24.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L247f2a.  v3:= temp @kind object;
  #L247f2c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L247f32.  v1:= temp;
  #L247f34.  if v1 == 0 then goto L247f6a;
  #L247f38.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L247f3e.  v1:= temp @kind object;
  #L247f40.  v1:= (`io.reactivex.disposables.b`) v1 @kind object;
  #L247f44.  call `dispose`(v1) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L247f4a.  goto L247f2c;
  #L247f4c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247f4e.  call `b`(v1) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L247f54.  if v0 != 0 then goto L247f62;
  #L247f58.  v0:= new `java.util.ArrayList`;
  #L247f5c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L247f62.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L247f68.  goto L247f2c;
  #L247f6a.  if v0 == 0 then goto L247fa0;
  #L247f6e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L247f74.  v3:= temp;
  #L247f76.  v1:= 1I;
  #L247f78.  if v3 != v1 then goto L247f94;
  #L247f7c.  v3:= 0I;
  #L247f7e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L247f84.  v3:= temp @kind object;
  #L247f86.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L247f8a.  call temp:= `e`(v3) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L247f90.  v3:= temp @kind object;
  #L247f92.  throw v3;
  #L247f94.  v3:= new `io.reactivex.exceptions.CompositeException`;
  #L247f98.  call `<init>`(v3, v0) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L247f9e.  throw v3;
  #L247fa0.  return @kind void;
  catch `java.lang.Throwable` @[L247f44..L247f4a] goto L247f4c;
}
procedure `void` `dispose`(`io.reactivex.internal.disposables.b` v2 @kind this) @signature `Lio/reactivex/internal/disposables/b;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L247ec0.  v0:= v2.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247ec4.  if v0 == 0 then goto L247eca;
  #L247ec8.  return @kind void;
  #L247eca.  @monitorenter v2
  #L247ecc.  v0:= v2.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247ed0.  if v0 == 0 then goto L247ed8;
  #L247ed4.  @monitorexit v2
  #L247ed6.  return @kind void;
  #L247ed8.  v0:= 1I;
  #L247eda.  v2.`io.reactivex.internal.disposables.b.c` @type ^`boolean` := v0 @kind boolean;
  #L247ede.  v0:= v2.`io.reactivex.internal.disposables.b.b` @type ^`java.util.List` @kind object;
  #L247ee2.  v1:= 0I;
  #L247ee4.  v2.`io.reactivex.internal.disposables.b.b` @type ^`java.util.List` := v1 @kind object;
  #L247ee8.  @monitorexit v2
  #L247eea.  call `d`(v2, v0) @signature `Lio/reactivex/internal/disposables/b;.d:(Ljava/util/List;)V` @kind virtual;
  #L247ef0.  return @kind void;
  #L247ef2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247ef4.  @monitorexit v2
  #L247ef6.  throw v0;
  catch `java.lang.Throwable` @[L247ecc..L247eea] goto L247ef2;
  catch `java.lang.Throwable` @[L247ef4..L247ef6] goto L247ef2;
}
procedure `boolean` `isDisposed`(`io.reactivex.internal.disposables.b` v1 @kind this) @signature `Lio/reactivex/internal/disposables/b;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L247e64.  v0:= v1.`io.reactivex.internal.disposables.b.c` @type ^`boolean` @kind boolean;
  #L247e68.  return v0;
}
