record `io.reactivex.p` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `io.reactivex.d` @kind interface {
}
procedure `boolean` `isDisposed`() @signature `Lio/reactivex/p;.isDisposed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setCancellable`(`io.reactivex.d0.f` v0 @kind object) @signature `Lio/reactivex/p;.setCancellable:(Lio/reactivex/d0/f;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setDisposable`(`io.reactivex.disposables.b` v0 @kind object) @signature `Lio/reactivex/p;.setDisposable:(Lio/reactivex/disposables/b;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
