record `io.reactivex.v` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.b` @kind interface, `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `io.reactivex.v.b` @AccessFlag FINAL;
  `io.reactivex.x$a` `io.reactivex.v.c` @AccessFlag FINAL;
  `boolean` `io.reactivex.v.d` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.v` v0 @kind this, `java.lang.Runnable` v1 @kind object, `io.reactivex.x$a` v2 @kind object) @signature `Lio/reactivex/v;.<init>:(Ljava/lang/Runnable;Lio/reactivex/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L245f48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L245f4e.  v0.`io.reactivex.v.b` @type ^`java.lang.Runnable` := v1 @kind object;
  #L245f52.  v0.`io.reactivex.v.c` @type ^`io.reactivex.x$a` := v2 @kind object;
  #L245f56.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.v` v1 @kind this) @signature `Lio/reactivex/v;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L245f68.  v0:= 1I;
  #L245f6a.  v1.`io.reactivex.v.d` @type ^`boolean` := v0 @kind boolean;
  #L245f6e.  v0:= v1.`io.reactivex.v.c` @type ^`io.reactivex.x$a` @kind object;
  #L245f72.  call `dispose`(v0) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L245f78.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.v` v1 @kind this) @signature `Lio/reactivex/v;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L245f30.  v0:= v1.`io.reactivex.v.d` @type ^`boolean` @kind boolean;
  #L245f34.  return v0;
}
procedure `void` `run`(`io.reactivex.v` v2 @kind this) @signature `Lio/reactivex/v;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L245f8c.  v0:= v2.`io.reactivex.v.d` @type ^`boolean` @kind boolean;
  #L245f90.  if v0 != 0 then goto L245fbc;
  #L245f94.  v0:= v2.`io.reactivex.v.b` @type ^`java.lang.Runnable` @kind object;
  #L245f98.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L245f9e.  goto L245fbc;
  #L245fa0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L245fa2.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L245fa8.  v1:= v2.`io.reactivex.v.c` @type ^`io.reactivex.x$a` @kind object;
  #L245fac.  call `dispose`(v1) @signature `Lio/reactivex/disposables/b;.dispose:()V` @kind interface;
  #L245fb2.  call temp:= `e`(v0) @signature `Lio/reactivex/internal/util/ExceptionHelper;.e:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L245fb8.  v0:= temp @kind object;
  #L245fba.  throw v0;
  #L245fbc.  return @kind void;
  catch `java.lang.Throwable` @[L245f94..L245f9e] goto L245fa0;
}
