record `io.reactivex.i` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.reactivex.k` @kind interface {
}
procedure `void` `<init>`(`io.reactivex.i` v0 @kind this) @signature `Lio/reactivex/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2410f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2410fe.  return @kind void;
}
procedure `io.reactivex.i` `h`() @signature `Lio/reactivex/i;.h:()Lio/reactivex/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L240e20.  v0:= `@@io.reactivex.internal.operators.maybe.c.b` @type ^`io.reactivex.internal.operators.maybe.c` @kind object;
  #L240e24.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240e2a.  v0:= temp @kind object;
  #L240e2c.  return v0 @kind object;
}
procedure `io.reactivex.i` `m`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lio/reactivex/i;.m:(Ljava/util/concurrent/Callable;)Lio/reactivex/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L240ea0.  v0:= "callable is null" @kind object;
  #L240ea4.  call temp:= `e`(v1, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240eaa.  v0:= new `io.reactivex.internal.operators.maybe.j`;
  #L240eae.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/j;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L240eb4.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240eba.  v1:= temp @kind object;
  #L240ebc.  return v1 @kind object;
}
procedure `io.reactivex.i` `o`(`java.lang.Object` v1 @kind object) @signature `Lio/reactivex/i;.o:(Ljava/lang/Object;)Lio/reactivex/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L240ed0.  v0:= "item is null" @kind object;
  #L240ed4.  call temp:= `e`(v1, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240eda.  v0:= new `io.reactivex.internal.operators.maybe.q`;
  #L240ede.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/q;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L240ee4.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240eea.  v1:= temp @kind object;
  #L240eec.  return v1 @kind object;
}
procedure `void` `b`(`io.reactivex.i` v2 @kind this, `io.reactivex.j` v3 @kind object) @signature `Lio/reactivex/i;.b:(Lio/reactivex/j;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L241110.  v0:= "observer is null" @kind object;
  #L241114.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24111a.  call temp:= `x`(v2, v3) @signature `Lio/reactivex/g0/a;.x:(Lio/reactivex/i;Lio/reactivex/j;)Lio/reactivex/j;` @kind static;
  #L241120.  v3:= temp @kind object;
  #L241122.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null MaybeObserver. Please check the handler provided to RxJavaPlugins.setOnMaybeSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L241126.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24112c.  call `u`(v2, v3) @signature `Lio/reactivex/i;.u:(Lio/reactivex/j;)V` @kind virtual;
  #L241132.  return @kind void;
  #L241134.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L241136.  call `b`(v3) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L24113c.  v0:= new `java.lang.NullPointerException`;
  #L241140.  v1:= "subscribeActual failed" @kind object;
  #L241144.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24114a.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L241150.  throw v0;
  #L241152.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L241154.  throw v3;
  catch `java.lang.NullPointerException` @[L24112c..L241132] goto L241152;
  catch `java.lang.Throwable` @[L24112c..L241132] goto L241134;
}
procedure `java.lang.Object` `c`(`io.reactivex.i` v1 @kind this) @signature `Lio/reactivex/i;.c:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2410cc.  v0:= new `io.reactivex.internal.observers.f`;
  #L2410d0.  call `<init>`(v0) @signature `Lio/reactivex/internal/observers/f;.<init>:()V` @kind direct;
  #L2410d6.  call `b`(v1, v0) @signature `Lio/reactivex/i;.b:(Lio/reactivex/j;)V` @kind virtual;
  #L2410dc.  call temp:= `a`(v0) @signature `Lio/reactivex/internal/observers/f;.a:()Ljava/lang/Object;` @kind virtual;
  #L2410e2.  v0:= temp @kind object;
  #L2410e4.  return v0 @kind object;
}
procedure `io.reactivex.i` `e`(`io.reactivex.i` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/i;.e:(Ljava/lang/Object;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240d4c.  v0:= "item is null" @kind object;
  #L240d50.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240d56.  call temp:= `o`(v2) @signature `Lio/reactivex/i;.o:(Ljava/lang/Object;)Lio/reactivex/i;` @kind static;
  #L240d5c.  v2:= temp @kind object;
  #L240d5e.  call temp:= `x`(v1, v2) @signature `Lio/reactivex/i;.x:(Lio/reactivex/k;)Lio/reactivex/i;` @kind virtual;
  #L240d64.  v2:= temp @kind object;
  #L240d66.  return v2 @kind object;
}
procedure `io.reactivex.i` `f`(`io.reactivex.i` v9 @kind this, `io.reactivex.d0.g` v10 @kind object) @signature `Lio/reactivex/i;.f:(Lio/reactivex/d0/g;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L240d78.  v8:= new `io.reactivex.internal.operators.maybe.v`;
  #L240d7c.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L240d82.  v2:= temp @kind object;
  #L240d84.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L240d8a.  v3:= temp @kind object;
  #L240d8c.  v0:= "onError is null" @kind object;
  #L240d90.  call temp:= `e`(v10, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240d96.  v10:= temp @kind object;
  #L240d98.  v4:= v10 @kind object;
  #L240d9a.  v4:= (`io.reactivex.d0.g`) v4 @kind object;
  #L240d9e.  v7:= `@@io.reactivex.internal.functions.Functions.c` @type ^`io.reactivex.d0.a` @kind object;
  #L240da2.  v0:= v8 @kind object;
  #L240da4.  v1:= v9 @kind object;
  #L240da6.  v5:= v7 @kind object;
  #L240da8.  v6:= v7 @kind object;
  #L240daa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/internal/operators/maybe/v;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @kind direct;
  #L240db0.  call temp:= `m`(v8) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240db6.  v10:= temp @kind object;
  #L240db8.  return v10 @kind object;
}
procedure `io.reactivex.i` `g`(`io.reactivex.i` v9 @kind this, `io.reactivex.d0.g` v10 @kind object) @signature `Lio/reactivex/i;.g:(Lio/reactivex/d0/g;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L240dcc.  v8:= new `io.reactivex.internal.operators.maybe.v`;
  #L240dd0.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L240dd6.  v2:= temp @kind object;
  #L240dd8.  v0:= "onSubscribe is null" @kind object;
  #L240ddc.  call temp:= `e`(v10, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240de2.  v10:= temp @kind object;
  #L240de4.  v3:= v10 @kind object;
  #L240de6.  v3:= (`io.reactivex.d0.g`) v3 @kind object;
  #L240dea.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L240df0.  v4:= temp @kind object;
  #L240df2.  v7:= `@@io.reactivex.internal.functions.Functions.c` @type ^`io.reactivex.d0.a` @kind object;
  #L240df6.  v0:= v8 @kind object;
  #L240df8.  v1:= v9 @kind object;
  #L240dfa.  v5:= v7 @kind object;
  #L240dfc.  v6:= v7 @kind object;
  #L240dfe.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lio/reactivex/internal/operators/maybe/v;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;Lio/reactivex/d0/a;Lio/reactivex/d0/a;)V` @kind direct;
  #L240e04.  call temp:= `m`(v8) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240e0a.  v10:= temp @kind object;
  #L240e0c.  return v10 @kind object;
}
procedure `io.reactivex.i` `i`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.m` v2 @kind object) @signature `Lio/reactivex/i;.i:(Lio/reactivex/d0/m;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240e40.  v0:= "predicate is null" @kind object;
  #L240e44.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240e4a.  v0:= new `io.reactivex.internal.operators.maybe.e`;
  #L240e4e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/e;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/m;)V` @kind direct;
  #L240e54.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240e5a.  v2:= temp @kind object;
  #L240e5c.  return v2 @kind object;
}
procedure `io.reactivex.i` `j`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/i;.j:(Lio/reactivex/d0/k;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240e70.  v0:= "mapper is null" @kind object;
  #L240e74.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240e7a.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatten`;
  #L240e7e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatten;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;)V` @kind direct;
  #L240e84.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240e8a.  v2:= temp @kind object;
  #L240e8c.  return v2 @kind object;
}
procedure `io.reactivex.a` `k`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/i;.k:(Lio/reactivex/d0/k;)Lio/reactivex/a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240ce0.  v0:= "mapper is null" @kind object;
  #L240ce4.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240cea.  v0:= new `io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable`;
  #L240cee.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeFlatMapCompletable;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;)V` @kind direct;
  #L240cf4.  call temp:= `k`(v0) @signature `Lio/reactivex/g0/a;.k:(Lio/reactivex/a;)Lio/reactivex/a;` @kind static;
  #L240cfa.  v2:= temp @kind object;
  #L240cfc.  return v2 @kind object;
}
procedure `io.reactivex.n` `l`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/i;.l:(Lio/reactivex/d0/k;)Lio/reactivex/n;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L241004.  v0:= "mapper is null" @kind object;
  #L241008.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24100e.  v0:= new `io.reactivex.internal.operators.mixed.MaybeFlatMapObservable`;
  #L241012.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/mixed/MaybeFlatMapObservable;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;)V` @kind direct;
  #L241018.  call temp:= `n`(v0) @signature `Lio/reactivex/g0/a;.n:(Lio/reactivex/n;)Lio/reactivex/n;` @kind static;
  #L24101e.  v2:= temp @kind object;
  #L241020.  return v2 @kind object;
}
procedure `io.reactivex.y` `n`(`io.reactivex.i` v1 @kind this) @signature `Lio/reactivex/i;.n:()Lio/reactivex/y;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L241034.  v0:= new `io.reactivex.internal.operators.maybe.p`;
  #L241038.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/p;.<init>:(Lio/reactivex/k;)V` @kind direct;
  #L24103e.  call temp:= `o`(v0) @signature `Lio/reactivex/g0/a;.o:(Lio/reactivex/y;)Lio/reactivex/y;` @kind static;
  #L241044.  v0:= temp @kind object;
  #L241046.  return v0 @kind object;
}
procedure `io.reactivex.i` `p`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.k` v2 @kind object) @signature `Lio/reactivex/i;.p:(Lio/reactivex/d0/k;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240f00.  v0:= "mapper is null" @kind object;
  #L240f04.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240f0a.  v0:= new `io.reactivex.internal.operators.maybe.s`;
  #L240f0e.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/s;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;)V` @kind direct;
  #L240f14.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240f1a.  v2:= temp @kind object;
  #L240f1c.  return v2 @kind object;
}
procedure `io.reactivex.i` `q`(`io.reactivex.i` v1 @kind this, `io.reactivex.k` v2 @kind object) @signature `Lio/reactivex/i;.q:(Lio/reactivex/k;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240f30.  v0:= "next is null" @kind object;
  #L240f34.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240f3a.  call temp:= `l`(v2) @signature `Lio/reactivex/internal/functions/Functions;.l:(Ljava/lang/Object;)Lio/reactivex/d0/k;` @kind static;
  #L240f40.  v2:= temp @kind object;
  #L240f42.  call temp:= `r`(v1, v2) @signature `Lio/reactivex/i;.r:(Lio/reactivex/d0/k;)Lio/reactivex/i;` @kind virtual;
  #L240f48.  v2:= temp @kind object;
  #L240f4a.  return v2 @kind object;
}
procedure `io.reactivex.i` `r`(`io.reactivex.i` v2 @kind this, `io.reactivex.d0.k` v3 @kind object) @signature `Lio/reactivex/i;.r:(Lio/reactivex/d0/k;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L240f5c.  v0:= "resumeFunction is null" @kind object;
  #L240f60.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240f66.  v0:= new `io.reactivex.internal.operators.maybe.MaybeOnErrorNext`;
  #L240f6a.  v1:= 1I;
  #L240f6c.  call `<init>`(v0, v2, v3, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeOnErrorNext;.<init>:(Lio/reactivex/k;Lio/reactivex/d0/k;Z)V` @kind direct;
  #L240f72.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240f78.  v3:= temp @kind object;
  #L240f7a.  return v3 @kind object;
}
procedure `io.reactivex.disposables.b` `s`(`io.reactivex.i` v3 @kind this) @signature `Lio/reactivex/i;.s:()Lio/reactivex/disposables/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L241058.  call temp:= `g`() @signature `Lio/reactivex/internal/functions/Functions;.g:()Lio/reactivex/d0/g;` @kind static;
  #L24105e.  v0:= temp @kind object;
  #L241060.  v1:= `@@io.reactivex.internal.functions.Functions.f` @type ^`io.reactivex.d0.g` @kind object;
  #L241064.  v2:= `@@io.reactivex.internal.functions.Functions.c` @type ^`io.reactivex.d0.a` @kind object;
  #L241068.  call temp:= `t`(v3, v0, v1, v2) @signature `Lio/reactivex/i;.t:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;)Lio/reactivex/disposables/b;` @kind virtual;
  #L24106e.  v0:= temp @kind object;
  #L241070.  return v0 @kind object;
}
procedure `io.reactivex.disposables.b` `t`(`io.reactivex.i` v1 @kind this, `io.reactivex.d0.g` v2 @kind object, `io.reactivex.d0.g` v3 @kind object, `io.reactivex.d0.a` v4 @kind object) @signature `Lio/reactivex/i;.t:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;)Lio/reactivex/disposables/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L241084.  v0:= "onSuccess is null" @kind object;
  #L241088.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24108e.  v0:= "onError is null" @kind object;
  #L241092.  call temp:= `e`(v3, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L241098.  v0:= "onComplete is null" @kind object;
  #L24109c.  call temp:= `e`(v4, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2410a2.  v0:= new `io.reactivex.internal.operators.maybe.MaybeCallbackObserver`;
  #L2410a6.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/internal/operators/maybe/MaybeCallbackObserver;.<init>:(Lio/reactivex/d0/g;Lio/reactivex/d0/g;Lio/reactivex/d0/a;)V` @kind direct;
  #L2410ac.  call temp:= `w`(v1, v0) @signature `Lio/reactivex/i;.w:(Lio/reactivex/j;)Lio/reactivex/j;` @kind virtual;
  #L2410b2.  v2:= temp @kind object;
  #L2410b4.  v2:= (`io.reactivex.disposables.b`) v2 @kind object;
  #L2410b8.  return v2 @kind object;
}
procedure `void` `u`(`io.reactivex.j` v0 @kind object) @signature `Lio/reactivex/i;.u:(Lio/reactivex/j;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.reactivex.i` `v`(`io.reactivex.i` v1 @kind this, `io.reactivex.x` v2 @kind object) @signature `Lio/reactivex/i;.v:(Lio/reactivex/x;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240f8c.  v0:= "scheduler is null" @kind object;
  #L240f90.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240f96.  v0:= new `io.reactivex.internal.operators.maybe.MaybeSubscribeOn`;
  #L240f9a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeSubscribeOn;.<init>:(Lio/reactivex/k;Lio/reactivex/x;)V` @kind direct;
  #L240fa0.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240fa6.  v2:= temp @kind object;
  #L240fa8.  return v2 @kind object;
}
procedure `io.reactivex.j` `w`(`io.reactivex.i` v0 @kind this, `io.reactivex.j` v1 @kind object) @signature `Lio/reactivex/i;.w:(Lio/reactivex/j;)Lio/reactivex/j;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L240fec.  call `b`(v0, v1) @signature `Lio/reactivex/i;.b:(Lio/reactivex/j;)V` @kind virtual;
  #L240ff2.  return v1 @kind object;
}
procedure `io.reactivex.i` `x`(`io.reactivex.i` v1 @kind this, `io.reactivex.k` v2 @kind object) @signature `Lio/reactivex/i;.x:(Lio/reactivex/k;)Lio/reactivex/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240fbc.  v0:= "other is null" @kind object;
  #L240fc0.  call temp:= `e`(v2, v0) @signature `Lio/reactivex/internal/functions/g0;.e:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L240fc6.  v0:= new `io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty`;
  #L240fca.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/internal/operators/maybe/MaybeSwitchIfEmpty;.<init>:(Lio/reactivex/k;Lio/reactivex/k;)V` @kind direct;
  #L240fd0.  call temp:= `m`(v0) @signature `Lio/reactivex/g0/a;.m:(Lio/reactivex/i;)Lio/reactivex/i;` @kind static;
  #L240fd6.  v2:= temp @kind object;
  #L240fd8.  return v2 @kind object;
}
procedure `io.reactivex.e` `y`(`io.reactivex.i` v1 @kind this) @signature `Lio/reactivex/i;.y:()Lio/reactivex/e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L240d10.  v0:= instanceof @variable v1 @type ^`io.reactivex.e0.a.b` @kind boolean;
  #L240d14.  if v0 == 0 then goto L240d28;
  #L240d18.  v0:= v1 @kind object;
  #L240d1a.  v0:= (`io.reactivex.e0.a.b`) v0 @kind object;
  #L240d1e.  call temp:= `d`(v0) @signature `Lio/reactivex/e0/a/b;.d:()Lio/reactivex/e;` @kind interface;
  #L240d24.  v0:= temp @kind object;
  #L240d26.  return v0 @kind object;
  #L240d28.  v0:= new `io.reactivex.internal.operators.maybe.MaybeToFlowable`;
  #L240d2c.  call `<init>`(v0, v1) @signature `Lio/reactivex/internal/operators/maybe/MaybeToFlowable;.<init>:(Lio/reactivex/k;)V` @kind direct;
  #L240d32.  call temp:= `l`(v0) @signature `Lio/reactivex/g0/a;.l:(Lio/reactivex/e;)Lio/reactivex/e;` @kind static;
  #L240d38.  v0:= temp @kind object;
  #L240d3a.  return v0 @kind object;
}
