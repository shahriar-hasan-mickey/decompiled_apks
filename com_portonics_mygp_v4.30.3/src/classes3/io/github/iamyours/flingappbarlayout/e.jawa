record `io.github.iamyours.flingappbarlayout.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.reflect.Field` `a`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/github/iamyours/flingappbarlayout/e;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/reflect/Field;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20c1b0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20c1b6.  v1:= temp @kind object;
  #L20c1b8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L20c1bc.  if v1 == v0 then goto L20c1d4;
  #L20c1c0.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L20c1c6.  v1:= temp @kind object;
  #L20c1c8.  return v1 @kind object;
  #L20c1ca.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L20c1d0.  v1:= temp @kind object;
  #L20c1d2.  goto L20c1b8;
  #L20c1d4.  v1:= 0I;
  #L20c1d6.  return v1 @kind object;
  catch `java.lang.Exception` @[L20c1c0..L20c1c8] goto L20c1ca;
}
