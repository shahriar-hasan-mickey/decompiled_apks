record `io.grpc.q3` @kind class @AccessFlag FINAL extends `io.grpc.l2` @kind interface {
}
global `byte`[] `@@io.grpc.q3.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/q3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L212ec4.  v0:= 16I;
  #L212ec8.  v0:= new `byte`[v0];
  #L212ecc.  goto L212ed8;
  #L212ed2.  `@@io.grpc.q3.a` @type ^`byte`[] := v0 @kind object;
  #L212ed6.  return @kind void;
  #L212ed8.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L212eef.  goto L212ed2;
}
procedure `void` `<init>`(`io.grpc.q3` v0 @kind this) @signature `Lio/grpc/q3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L212f00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L212f06.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.q3` v0 @kind this, `io.grpc.o3` v1 @kind object) @signature `Lio/grpc/q3;.<init>:(Lio/grpc/o3;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L212f18.  call `<init>`(v0) @signature `Lio/grpc/q3;.<init>:()V` @kind direct;
  #L212f1e.  return @kind void;
}
procedure `boolean` `c`(`byte` v1 ) @signature `Lio/grpc/q3;.c:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L212c70.  v0:= 32I;
  #L212c74.  if v1 < v0 then goto L212c8e;
  #L212c78.  v0:= 126I;
  #L212c7c.  if v1 >= v0 then goto L212c8e;
  #L212c80.  v0:= 37I;
  #L212c84.  if v1 != v0 then goto L212c8a;
  #L212c88.  goto L212c8e;
  #L212c8a.  v1:= 0I;
  #L212c8c.  goto L212c90;
  #L212c8e.  v1:= 1I;
  #L212c90.  return v1;
}
procedure `java.lang.String` `e`(`byte`[] v7 @kind object) @signature `Lio/grpc/q3;.e:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L212e1c.  v0:= length @variable v7;
  #L212e1e.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L212e24.  v0:= temp @kind object;
  #L212e26.  v1:= 0I;
  #L212e28.  v2:= 0I;
  #L212e2a.  v3:= length @variable v7;
  #L212e2c.  if v2 >= v3 then goto L212e84;
  #L212e30.  v3:= v7[v2] @kind byte;
  #L212e34.  v4:= 37I;
  #L212e38.  if v3 != v4 then goto L212e74;
  #L212e3c.  v3:= v2 + 2;
  #L212e40.  v4:= length @variable v7;
  #L212e42.  if v3 >= v4 then goto L212e74;
  #L212e46.  v3:= new `java.lang.String`;
  #L212e4a.  v4:= v2 + 1;
  #L212e4e.  v5:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L212e52.  v6:= 2I;
  #L212e54.  call `<init>`(v3, v7, v4, v6, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L212e5a.  v4:= 16I;
  #L212e5e.  call temp:= `parseInt`(v3, v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L212e64.  v3:= temp;
  #L212e66.  v3:= (`byte`) v3 @kind i2b;
  #L212e68.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212e6e.  v2:= v2 + 3;
  #L212e72.  goto L212e2a;
  #L212e74.  v3:= v7[v2] @kind byte;
  #L212e78.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L212e7e.  v2:= v2 + 1;
  #L212e82.  goto L212e2a;
  #L212e84.  v7:= new `java.lang.String`;
  #L212e88.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L212e8e.  v2:= temp @kind object;
  #L212e90.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L212e96.  v0:= temp;
  #L212e98.  v3:= `@@com.google.common.base.j.c` @type ^`java.nio.charset.Charset` @kind object;
  #L212e9c.  call `<init>`(v7, v2, v1, v0, v3) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L212ea2.  return v7 @kind object;
  catch `java.lang.NumberFormatException` @[L212e46..L212e6e] goto L212e74;
}
procedure `byte`[] `g`(`byte`[] v7 @kind object, `int` v8 ) @signature `Lio/grpc/q3;.g:([BI)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L212d0c.  v0:= length @variable v7;
  #L212d0e.  v0:= v0 - v8 @kind int;
  #L212d10.  v0:= v0 * 3;
  #L212d14.  v0:= v0 + v8 @kind int;
  #L212d16.  v0:= new `byte`[v0];
  #L212d1a.  v1:= 0I;
  #L212d1c.  if v8 == 0 then goto L212d26;
  #L212d20.  call `arraycopy`(v7, v1, v0, v1, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L212d26.  v2:= v8;
  #L212d28.  v3:= length @variable v7;
  #L212d2a.  if v8 >= v3 then goto L212d84;
  #L212d2e.  v3:= v7[v8] @kind byte;
  #L212d32.  call temp:= `c`(v3) @signature `Lio/grpc/q3;.c:(B)Z` @kind static;
  #L212d38.  v4:= temp;
  #L212d3a.  if v4 == 0 then goto L212d74;
  #L212d3e.  v4:= 37I;
  #L212d42.  v0[v2]:= v4 @kind byte;
  #L212d46.  v4:= v2 + 1;
  #L212d4a.  v5:= `@@io.grpc.q3.a` @type ^`byte`[] @kind object;
  #L212d4e.  v6:= v3 ^> 4;
  #L212d52.  v6:= v6 ^& 15;
  #L212d56.  v6:= v5[v6] @kind byte;
  #L212d5a.  v0[v4]:= v6 @kind byte;
  #L212d5e.  v4:= v2 + 2;
  #L212d62.  v3:= v3 ^& 15;
  #L212d66.  v3:= v5[v3] @kind byte;
  #L212d6a.  v0[v4]:= v3 @kind byte;
  #L212d6e.  v2:= v2 + 3;
  #L212d72.  goto L212d7e;
  #L212d74.  v4:= v2 + 1;
  #L212d78.  v0[v2]:= v3 @kind byte;
  #L212d7c.  v2:= v4;
  #L212d7e.  v8:= v8 + 1;
  #L212d82.  goto L212d28;
  #L212d84.  v7:= new `byte`[v2];
  #L212d88.  call `arraycopy`(v0, v1, v7, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L212d8e.  return v7 @kind object;
}
procedure `byte`[] `a`(`io.grpc.q3` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/q3;.a:(Ljava/lang/Object;)[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L212ca4.  v1:= (`java.lang.String`) v1 @kind object;
  #L212ca8.  call temp:= `f`(v0, v1) @signature `Lio/grpc/q3;.f:(Ljava/lang/String;)[B` @kind virtual;
  #L212cae.  v1:= temp @kind object;
  #L212cb0.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.q3` v0 @kind this, `byte`[] v1 @kind object) @signature `Lio/grpc/q3;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L212da0.  call temp:= `d`(v0, v1) @signature `Lio/grpc/q3;.d:([B)Ljava/lang/String;` @kind virtual;
  #L212da6.  v1:= temp @kind object;
  #L212da8.  return v1 @kind object;
}
procedure `java.lang.String` `d`(`io.grpc.q3` v4 @kind this, `byte`[] v5 @kind object) @signature `Lio/grpc/q3;.d:([B)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L212dbc.  v0:= 0I;
  #L212dbe.  v1:= 0I;
  #L212dc0.  v2:= length @variable v5;
  #L212dc2.  if v1 >= v2 then goto L212dfe;
  #L212dc6.  v2:= v5[v1] @kind byte;
  #L212dca.  v3:= 32I;
  #L212dce.  if v2 < v3 then goto L212df4;
  #L212dd2.  v3:= 126I;
  #L212dd6.  if v2 >= v3 then goto L212df4;
  #L212dda.  v3:= 37I;
  #L212dde.  if v2 != v3 then goto L212dee;
  #L212de2.  v2:= v1 + 2;
  #L212de6.  v3:= length @variable v5;
  #L212de8.  if v2 >= v3 then goto L212dee;
  #L212dec.  goto L212df4;
  #L212dee.  v1:= v1 + 1;
  #L212df2.  goto L212dc0;
  #L212df4.  call temp:= `e`(v5) @signature `Lio/grpc/q3;.e:([B)Ljava/lang/String;` @kind static;
  #L212dfa.  v5:= temp @kind object;
  #L212dfc.  return v5 @kind object;
  #L212dfe.  v1:= new `java.lang.String`;
  #L212e02.  call `<init>`(v1, v5, v0) @signature `Ljava/lang/String;.<init>:([BI)V` @kind direct;
  #L212e08.  return v1 @kind object;
}
procedure `byte`[] `f`(`io.grpc.q3` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/grpc/q3;.f:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L212cc4.  v0:= `@@com.google.common.base.j.c` @type ^`java.nio.charset.Charset` @kind object;
  #L212cc8.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L212cce.  v3:= temp @kind object;
  #L212cd0.  v0:= 0I;
  #L212cd2.  v1:= length @variable v3;
  #L212cd4.  if v0 >= v1 then goto L212cf8;
  #L212cd8.  v1:= v3[v0] @kind byte;
  #L212cdc.  call temp:= `c`(v1) @signature `Lio/grpc/q3;.c:(B)Z` @kind static;
  #L212ce2.  v1:= temp;
  #L212ce4.  if v1 == 0 then goto L212cf2;
  #L212ce8.  call temp:= `g`(v3, v0) @signature `Lio/grpc/q3;.g:([BI)[B` @kind static;
  #L212cee.  v3:= temp @kind object;
  #L212cf0.  return v3 @kind object;
  #L212cf2.  v0:= v0 + 1;
  #L212cf6.  goto L212cd2;
  #L212cf8.  return v3 @kind object;
}
