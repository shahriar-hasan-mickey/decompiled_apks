record `io.grpc.okhttp.d` @kind class @AccessFlag ABSTRACT extends `java.lang.Runnable` @kind interface {
  `io.grpc.okhttp.e` `io.grpc.okhttp.d.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.okhttp.d` v0 @kind this, `io.grpc.okhttp.e` v1 @kind object) @signature `Lio/grpc/okhttp/d;.<init>:(Lio/grpc/okhttp/e;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22cd44.  v0.`io.grpc.okhttp.d.b` @type ^`io.grpc.okhttp.e` := v1 @kind object;
  #L22cd48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22cd4e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.d` v0 @kind this, `io.grpc.okhttp.e` v1 @kind object, `io.grpc.okhttp.a` v2 @kind object) @signature `Lio/grpc/okhttp/d;.<init>:(Lio/grpc/okhttp/e;Lio/grpc/okhttp/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L22cd60.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/d;.<init>:(Lio/grpc/okhttp/e;)V` @kind direct;
  #L22cd66.  return @kind void;
}
procedure `void` `a`() @signature `Lio/grpc/okhttp/d;.a:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `run`(`io.grpc.okhttp.d` v2 @kind this) @signature `Lio/grpc/okhttp/d;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L22cd78.  v0:= v2.`io.grpc.okhttp.d.b` @type ^`io.grpc.okhttp.e` @kind object;
  #L22cd7c.  call temp:= `k`(v0) @signature `Lio/grpc/okhttp/e;.k:(Lio/grpc/okhttp/e;)Lokio/g0;` @kind static;
  #L22cd82.  v0:= temp @kind object;
  #L22cd84.  if v0 == 0 then goto L22cd90;
  #L22cd88.  call `a`(v2) @signature `Lio/grpc/okhttp/d;.a:()V` @kind virtual;
  #L22cd8e.  goto L22cdb4;
  #L22cd90.  v0:= new `java.io.IOException`;
  #L22cd94.  v1:= "Unable to perform write due to unavailable sink." @kind object;
  #L22cd98.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22cd9e.  throw v0;
  #L22cda0.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L22cda2.  v1:= v2.`io.grpc.okhttp.d.b` @type ^`io.grpc.okhttp.e` @kind object;
  #L22cda6.  call temp:= `o`(v1) @signature `Lio/grpc/okhttp/e;.o:(Lio/grpc/okhttp/e;)Lio/grpc/okhttp/f;` @kind static;
  #L22cdac.  v1:= temp @kind object;
  #L22cdae.  call `d`(v1, v0) @signature `Lio/grpc/okhttp/f;.d:(Ljava/lang/Throwable;)V` @kind interface;
  #L22cdb4.  return @kind void;
  catch `java.lang.Exception` @[L22cd78..L22cda0] goto L22cda0;
}
