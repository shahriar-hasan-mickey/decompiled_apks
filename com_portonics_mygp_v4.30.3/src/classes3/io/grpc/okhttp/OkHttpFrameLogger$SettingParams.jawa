record `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `io.grpc.okhttp.OkHttpFrameLogger$SettingParams.bit` @AccessFlag PRIVATE_FINAL;
}
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[] `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.ENABLE_PUSH` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.HEADER_TABLE_SIZE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.INITIAL_WINDOW_SIZE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_CONCURRENT_STREAMS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_FRAME_SIZE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_HEADER_LIST_SIZE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2314a4.  v0:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L2314a8.  v1:= "HEADER_TABLE_SIZE" @kind object;
  #L2314ac.  v2:= 0I;
  #L2314ae.  v3:= 1I;
  #L2314b0.  call `<init>`(v0, v1, v2, v3) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2314b6.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.HEADER_TABLE_SIZE` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v0 @kind object;
  #L2314ba.  v1:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L2314be.  v4:= "ENABLE_PUSH" @kind object;
  #L2314c2.  v5:= 2I;
  #L2314c4.  call `<init>`(v1, v4, v3, v5) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2314ca.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.ENABLE_PUSH` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v1 @kind object;
  #L2314ce.  v4:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L2314d2.  v6:= "MAX_CONCURRENT_STREAMS" @kind object;
  #L2314d6.  v7:= 4I;
  #L2314d8.  call `<init>`(v4, v6, v5, v7) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2314de.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_CONCURRENT_STREAMS` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v4 @kind object;
  #L2314e2.  v6:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L2314e6.  v8:= "MAX_FRAME_SIZE" @kind object;
  #L2314ea.  v9:= 3I;
  #L2314ec.  v10:= 5I;
  #L2314ee.  call `<init>`(v6, v8, v9, v10) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2314f4.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_FRAME_SIZE` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v6 @kind object;
  #L2314f8.  v8:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L2314fc.  v11:= "MAX_HEADER_LIST_SIZE" @kind object;
  #L231500.  v12:= 6I;
  #L231502.  call `<init>`(v8, v11, v7, v12) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L231508.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.MAX_HEADER_LIST_SIZE` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v8 @kind object;
  #L23150c.  v11:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`;
  #L231510.  v13:= "INITIAL_WINDOW_SIZE" @kind object;
  #L231514.  v14:= 7I;
  #L231516.  call `<init>`(v11, v13, v10, v14) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23151c.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.INITIAL_WINDOW_SIZE` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` := v11 @kind object;
  #L231520.  v12:= new `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[v12];
  #L231524.  v12[v2]:= v0 @kind object;
  #L231528.  v12[v3]:= v1 @kind object;
  #L23152c.  v12[v5]:= v4 @kind object;
  #L231530.  v12[v9]:= v6 @kind object;
  #L231534.  v12[v7]:= v8 @kind object;
  #L231538.  v12[v10]:= v11 @kind object;
  #L23153c.  `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.$VALUES` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[] := v12 @kind object;
  #L231540.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L231554.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23155a.  v0.`io.grpc.okhttp.OkHttpFrameLogger$SettingParams.bit` @type ^`int` := v3;
  #L23155e.  return @kind void;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$SettingParams` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.valueOf:(Ljava/lang/String;)Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23145c.  v0:= constclass @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` @kind object;
  #L231460.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L231466.  v1:= temp @kind object;
  #L231468.  v1:= (`io.grpc.okhttp.OkHttpFrameLogger$SettingParams`) v1 @kind object;
  #L23146c.  return v1 @kind object;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[] `values`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.values:()[Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L231480.  v0:= `@@io.grpc.okhttp.OkHttpFrameLogger$SettingParams.$VALUES` @type ^`io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[] @kind object;
  #L231484.  call temp:= `clone`(v0) @signature `[Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23148a.  v0:= temp @kind object;
  #L23148c.  v0:= (`io.grpc.okhttp.OkHttpFrameLogger$SettingParams`[]) v0 @kind object;
  #L231490.  return v0 @kind object;
}
procedure `int` `getBit`(`io.grpc.okhttp.OkHttpFrameLogger$SettingParams` v1 @kind this) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$SettingParams;.getBit:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L231444.  v0:= v1.`io.grpc.okhttp.OkHttpFrameLogger$SettingParams.bit` @type ^`int`;
  #L231448.  return v0;
}
