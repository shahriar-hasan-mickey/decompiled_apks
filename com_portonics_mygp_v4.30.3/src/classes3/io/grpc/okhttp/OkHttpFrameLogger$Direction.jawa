record `io.grpc.okhttp.OkHttpFrameLogger$Direction` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.grpc.okhttp.OkHttpFrameLogger$Direction`[] `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.grpc.okhttp.OkHttpFrameLogger$Direction` `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.INBOUND` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.grpc.okhttp.OkHttpFrameLogger$Direction` `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.OUTBOUND` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2313e0.  v0:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`;
  #L2313e4.  v1:= "INBOUND" @kind object;
  #L2313e8.  v2:= 0I;
  #L2313ea.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2313f0.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.INBOUND` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` := v0 @kind object;
  #L2313f4.  v1:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`;
  #L2313f8.  v3:= "OUTBOUND" @kind object;
  #L2313fc.  v4:= 1I;
  #L2313fe.  call `<init>`(v1, v3, v4) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L231404.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.OUTBOUND` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` := v1 @kind object;
  #L231408.  v3:= 2I;
  #L23140a.  v3:= new `io.grpc.okhttp.OkHttpFrameLogger$Direction`[v3];
  #L23140e.  v3[v2]:= v0 @kind object;
  #L231412.  v3[v4]:= v1 @kind object;
  #L231416.  `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.$VALUES` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction`[] := v3 @kind object;
  #L23141a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.OkHttpFrameLogger$Direction` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23142c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L231432.  return @kind void;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$Direction` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.valueOf:(Ljava/lang/String;)Lio/grpc/okhttp/OkHttpFrameLogger$Direction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L231398.  v0:= constclass @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction` @kind object;
  #L23139c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2313a2.  v1:= temp @kind object;
  #L2313a4.  v1:= (`io.grpc.okhttp.OkHttpFrameLogger$Direction`) v1 @kind object;
  #L2313a8.  return v1 @kind object;
}
procedure `io.grpc.okhttp.OkHttpFrameLogger$Direction`[] `values`() @signature `Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.values:()[Lio/grpc/okhttp/OkHttpFrameLogger$Direction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2313bc.  v0:= `@@io.grpc.okhttp.OkHttpFrameLogger$Direction.$VALUES` @type ^`io.grpc.okhttp.OkHttpFrameLogger$Direction`[] @kind object;
  #L2313c0.  call temp:= `clone`(v0) @signature `[Lio/grpc/okhttp/OkHttpFrameLogger$Direction;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2313c6.  v0:= temp @kind object;
  #L2313c8.  v0:= (`io.grpc.okhttp.OkHttpFrameLogger$Direction`[]) v0 @kind object;
  #L2313cc.  return v0 @kind object;
}
