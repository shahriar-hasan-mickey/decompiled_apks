record `io.grpc.okhttp.j0` @kind class @AccessFlag ABSTRACT {
}
global `java.util.logging.Logger` `@@io.grpc.okhttp.j0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/okhttp/j0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L232bc4.  v0:= constclass @type ^`io.grpc.okhttp.j0` @kind object;
  #L232bc8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L232bce.  v0:= temp @kind object;
  #L232bd0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L232bd6.  v0:= temp @kind object;
  #L232bd8.  `@@io.grpc.okhttp.j0.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L232bdc.  return @kind void;
}
procedure `io.grpc.m2` `a`(`java.util.List` v0 @kind object) @signature `Lio/grpc/okhttp/j0;.a:(Ljava/util/List;)Lio/grpc/m2;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L232b7c.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/j0;.b:(Ljava/util/List;)[[B` @kind static;
  #L232b82.  v0:= temp @kind object;
  #L232b84.  call temp:= `c`(v0) @signature `Lio/grpc/g1;.c:([[B)Lio/grpc/m2;` @kind static;
  #L232b8a.  v0:= temp @kind object;
  #L232b8c.  return v0 @kind object;
}
procedure `byte`[][] `b`(`java.util.List` v5 @kind object) @signature `Lio/grpc/okhttp/j0;.b:(Ljava/util/List;)[[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L232b04.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L232b0a.  v0:= temp;
  #L232b0c.  v0:= v0 * 2;
  #L232b10.  v0:= new `byte`[][v0];
  #L232b14.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L232b1a.  v5:= temp @kind object;
  #L232b1c.  v1:= 0I;
  #L232b1e.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L232b24.  v2:= temp;
  #L232b26.  if v2 == 0 then goto L232b60;
  #L232b2a.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L232b30.  v2:= temp @kind object;
  #L232b32.  v2:= (`io.grpc.okhttp.internal.framed.d`) v2 @kind object;
  #L232b36.  v3:= v1 + 1;
  #L232b3a.  v4:= v2.`io.grpc.okhttp.internal.framed.d.h` @type ^`okio.ByteString` @kind object;
  #L232b3e.  call temp:= `toByteArray`(v4) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L232b44.  v4:= temp @kind object;
  #L232b46.  v0[v1]:= v4 @kind object;
  #L232b4a.  v1:= v3 + 1;
  #L232b4e.  v2:= v2.`io.grpc.okhttp.internal.framed.d.i` @type ^`okio.ByteString` @kind object;
  #L232b52.  call temp:= `toByteArray`(v2) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L232b58.  v2:= temp @kind object;
  #L232b5a.  v0[v3]:= v2 @kind object;
  #L232b5e.  goto L232b1e;
  #L232b60.  call temp:= `e`(v0) @signature `Lio/grpc/internal/w9;.e:([[B)[[B` @kind static;
  #L232b66.  v5:= temp @kind object;
  #L232b68.  return v5 @kind object;
}
procedure `io.grpc.m2` `c`(`java.util.List` v0 @kind object) @signature `Lio/grpc/okhttp/j0;.c:(Ljava/util/List;)Lio/grpc/m2;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L232ba0.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/j0;.b:(Ljava/util/List;)[[B` @kind static;
  #L232ba6.  v0:= temp @kind object;
  #L232ba8.  call temp:= `c`(v0) @signature `Lio/grpc/g1;.c:([[B)Lio/grpc/m2;` @kind static;
  #L232bae.  v0:= temp @kind object;
  #L232bb0.  return v0 @kind object;
}
