record `io.grpc.okhttp.internal.f` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `io.grpc.okhttp.internal.f.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.okhttp.internal.f.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class`[] `io.grpc.okhttp.internal.f.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.f` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Class`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23563c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L235642.  v0.`io.grpc.okhttp.internal.f.a` @type ^`java.lang.Class` := v1 @kind object;
  #L235646.  v0.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` := v2 @kind object;
  #L23564a.  v0.`io.grpc.okhttp.internal.f.c` @type ^`java.lang.Class`[] := v3 @kind object;
  #L23564e.  return @kind void;
}
procedure `java.lang.reflect.Method` `a`(`io.grpc.okhttp.internal.f` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L23557c.  v0:= v3.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` @kind object;
  #L235580.  v1:= 0I;
  #L235582.  if v0 == 0 then goto L2355b6;
  #L235586.  v2:= v3.`io.grpc.okhttp.internal.f.c` @type ^`java.lang.Class`[] @kind object;
  #L23558a.  call temp:= `b`(v4, v0, v2) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind static;
  #L235590.  v4:= temp @kind object;
  #L235592.  if v4 == 0 then goto L2355b4;
  #L235596.  v0:= v3.`io.grpc.okhttp.internal.f.a` @type ^`java.lang.Class` @kind object;
  #L23559a.  if v0 == 0 then goto L2355b4;
  #L23559e.  call temp:= `getReturnType`(v4) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L2355a4.  v2:= temp @kind object;
  #L2355a6.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2355ac.  v0:= temp;
  #L2355ae.  if v0 != 0 then goto L2355b4;
  #L2355b2.  goto L2355b6;
  #L2355b4.  v1:= v4 @kind object;
  #L2355b6.  return v1 @kind object;
}
procedure `java.lang.reflect.Method` `b`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2355c8.  v0:= 0I;
  #L2355ca.  if v2 != 0 then goto L2355d0;
  #L2355ce.  return v0 @kind object;
  #L2355d0.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L2355d6.  v1:= temp;
  #L2355d8.  v1:= v1 ^& 1;
  #L2355dc.  if v1 != 0 then goto L2355f2;
  #L2355e0.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L2355e6.  v2:= temp @kind object;
  #L2355e8.  call temp:= `b`(v2, v3, v4) @signature `Lio/grpc/okhttp/internal/f;.b:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind static;
  #L2355ee.  v2:= temp @kind object;
  #L2355f0.  return v2 @kind object;
  #L2355f2.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2355f8.  v2:= temp @kind object;
  #L2355fa.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L235600.  v3:= temp;
  #L235602.  v3:= v3 ^& 1;
  #L235606.  if v3 != 0 then goto L23560c;
  #L23560a.  goto L23560e;
  #L23560c.  v0:= v2 @kind object;
  #L23560e.  return v0 @kind object;
  catch `java.lang.NoSuchMethodException` @[L2355d0..L2355fa] goto L23560e;
  catch `java.lang.NoSuchMethodException` @[L2355fa..L235602] goto L23560c;
}
procedure `java.lang.Object` `c`(`io.grpc.okhttp.internal.f` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lio/grpc/okhttp/internal/f;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2353d0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2353d6.  v0:= temp @kind object;
  #L2353d8.  call temp:= `a`(v3, v0) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L2353de.  v0:= temp @kind object;
  #L2353e0.  if v0 == 0 then goto L235424;
  #L2353e4.  call temp:= `invoke`(v0, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2353ea.  v4:= temp @kind object;
  #L2353ec.  return v4 @kind object;
  #L2353ee.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L2353f0.  v5:= new `java.lang.AssertionError`;
  #L2353f4.  v1:= new `java.lang.StringBuilder`;
  #L2353f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2353fe.  v2:= "Unexpectedly could not call: " @kind object;
  #L235402.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235408.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23540e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L235414.  v0:= temp @kind object;
  #L235416.  call `<init>`(v5, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L23541c.  call temp:= `initCause`(v5, v4) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L235422.  throw v5;
  #L235424.  v5:= new `java.lang.AssertionError`;
  #L235428.  v0:= new `java.lang.StringBuilder`;
  #L23542c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L235432.  v1:= "Method " @kind object;
  #L235436.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23543c.  v1:= v3.`io.grpc.okhttp.internal.f.b` @type ^`java.lang.String` @kind object;
  #L235440.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235446.  v1:= " not supported for object " @kind object;
  #L23544a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235450.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235456.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23545c.  v4:= temp @kind object;
  #L23545e.  call `<init>`(v5, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L235464.  throw v5;
  catch `java.lang.IllegalAccessException` @[L2353e4..L2353ec] goto L2353ee;
}
procedure `java.lang.Object` `d`(`io.grpc.okhttp.internal.f` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lio/grpc/okhttp/internal/f;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235488.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L23548e.  v0:= temp @kind object;
  #L235490.  call temp:= `a`(v2, v0) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L235496.  v0:= temp @kind object;
  #L235498.  v1:= 0I;
  #L23549a.  if v0 != 0 then goto L2354a0;
  #L23549e.  return v1 @kind object;
  #L2354a0.  call temp:= `invoke`(v0, v3, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2354a6.  v3:= temp @kind object;
  #L2354a8.  return v3 @kind object;
  #L2354aa.  return v1 @kind object;
  catch `java.lang.IllegalAccessException` @[L2354a0..L2354a8] goto L2354aa;
}
procedure `java.lang.Object` `e`(`io.grpc.okhttp.internal.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.e:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2354cc.  call temp:= `d`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/f;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2354d2.  v2:= temp @kind object;
  #L2354d4.  return v2 @kind object;
  #L2354d6.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L2354d8.  call temp:= `getTargetException`(v2) @signature `Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;` @kind virtual;
  #L2354de.  v2:= temp @kind object;
  #L2354e0.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L2354e4.  if v3 == 0 then goto L2354ee;
  #L2354e8.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L2354ec.  throw v2;
  #L2354ee.  v3:= new `java.lang.AssertionError`;
  #L2354f2.  v0:= "Unexpected exception" @kind object;
  #L2354f6.  call `<init>`(v3, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2354fc.  call temp:= `initCause`(v3, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L235502.  throw v3;
  catch `java.lang.reflect.InvocationTargetException` @[L2354cc..L2354d4] goto L2354d6;
}
procedure `java.lang.Object` `f`(`io.grpc.okhttp.internal.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/grpc/okhttp/internal/f;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L235524.  call temp:= `c`(v1, v2, v3) @signature `Lio/grpc/okhttp/internal/f;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23552a.  v2:= temp @kind object;
  #L23552c.  return v2 @kind object;
  #L23552e.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L235530.  call temp:= `getTargetException`(v2) @signature `Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;` @kind virtual;
  #L235536.  v2:= temp @kind object;
  #L235538.  v3:= instanceof @variable v2 @type ^`java.lang.RuntimeException` @kind boolean;
  #L23553c.  if v3 == 0 then goto L235546;
  #L235540.  v2:= (`java.lang.RuntimeException`) v2 @kind object;
  #L235544.  throw v2;
  #L235546.  v3:= new `java.lang.AssertionError`;
  #L23554a.  v0:= "Unexpected exception" @kind object;
  #L23554e.  call `<init>`(v3, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L235554.  call temp:= `initCause`(v3, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L23555a.  throw v3;
  catch `java.lang.reflect.InvocationTargetException` @[L235524..L23552c] goto L23552e;
}
procedure `boolean` `g`(`io.grpc.okhttp.internal.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/okhttp/internal/f;.g:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2353a4.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2353aa.  v1:= temp @kind object;
  #L2353ac.  call temp:= `a`(v0, v1) @signature `Lio/grpc/okhttp/internal/f;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind direct;
  #L2353b2.  v1:= temp @kind object;
  #L2353b4.  if v1 == 0 then goto L2353bc;
  #L2353b8.  v1:= 1I;
  #L2353ba.  goto L2353be;
  #L2353bc.  v1:= 0I;
  #L2353be.  return v1;
}
