record `io.grpc.okhttp.internal.l` @kind class @AccessFlag  extends `io.grpc.okhttp.internal.Platform` @kind class {
  `java.lang.reflect.Method` `io.grpc.okhttp.internal.l.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `io.grpc.okhttp.internal.l.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `io.grpc.okhttp.internal.l.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `io.grpc.okhttp.internal.l.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `io.grpc.okhttp.internal.l.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.internal.l` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object, `java.security.Provider` v6 @kind object) @signature `Lio/grpc/okhttp/internal/l;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;Ljava/security/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L235ab0.  call `<init>`(v0, v6) @signature `Lio/grpc/okhttp/internal/Platform;.<init>:(Ljava/security/Provider;)V` @kind direct;
  #L235ab6.  v0.`io.grpc.okhttp.internal.l.e` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L235aba.  v0.`io.grpc.okhttp.internal.l.f` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L235abe.  v0.`io.grpc.okhttp.internal.l.g` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L235ac2.  v0.`io.grpc.okhttp.internal.l.h` @type ^`java.lang.Class` := v4 @kind object;
  #L235ac6.  v0.`io.grpc.okhttp.internal.l.i` @type ^`java.lang.Class` := v5 @kind object;
  #L235aca.  return @kind void;
}
procedure `void` `a`(`io.grpc.okhttp.internal.l` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lio/grpc/okhttp/internal/l;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L235adc.  v0:= v4.`io.grpc.okhttp.internal.l.g` @type ^`java.lang.reflect.Method` @kind object;
  #L235ae0.  v1:= 0I;
  #L235ae2.  v2:= 1I;
  #L235ae4.  v2:= new `java.lang.Object`[v2];
  #L235ae8.  v3:= 0I;
  #L235aea.  v2[v3]:= v5 @kind object;
  #L235aee.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L235af4.  return @kind void;
  #L235af6.  v5:= new `java.lang.AssertionError`;
  #L235afa.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L235b00.  throw v5;
  catch `java.lang.IllegalAccessException` @[L235adc..L235af4] goto L235af6;
  catch `java.lang.reflect.InvocationTargetException` @[L235adc..L235af4] goto L235af4;
}
procedure `void` `c`(`io.grpc.okhttp.internal.l` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lio/grpc/okhttp/internal/l;.c:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L235b24.  v7:= new `java.util.ArrayList`;
  #L235b28.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L235b2e.  v0:= temp;
  #L235b30.  call `<init>`(v7, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L235b36.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L235b3c.  v0:= temp;
  #L235b3e.  v1:= 0I;
  #L235b40.  v2:= 0I;
  #L235b42.  if v2 >= v0 then goto L235b70;
  #L235b46.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L235b4c.  v3:= temp @kind object;
  #L235b4e.  v3:= (`io.grpc.okhttp.internal.Protocol`) v3 @kind object;
  #L235b52.  v4:= `@@io.grpc.okhttp.internal.Protocol.HTTP_1_0` @type ^`io.grpc.okhttp.internal.Protocol` @kind object;
  #L235b56.  if v3 != v4 then goto L235b5c;
  #L235b5a.  goto L235b6a;
  #L235b5c.  call temp:= `toString`(v3) @signature `Lio/grpc/okhttp/internal/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L235b62.  v3:= temp @kind object;
  #L235b64.  call temp:= `add`(v7, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L235b6a.  v2:= v2 + 1;
  #L235b6e.  goto L235b42;
  #L235b70.  v8:= constclass @type ^`io.grpc.okhttp.internal.Platform` @kind object;
  #L235b74.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L235b7a.  v8:= temp @kind object;
  #L235b7c.  v0:= 2I;
  #L235b7e.  v2:= new `java.lang.Class`[v0];
  #L235b82.  v3:= v5.`io.grpc.okhttp.internal.l.h` @type ^`java.lang.Class` @kind object;
  #L235b86.  v2[v1]:= v3 @kind object;
  #L235b8a.  v3:= v5.`io.grpc.okhttp.internal.l.i` @type ^`java.lang.Class` @kind object;
  #L235b8e.  v4:= 1I;
  #L235b90.  v2[v4]:= v3 @kind object;
  #L235b94.  v3:= new `io.grpc.okhttp.internal.m`;
  #L235b98.  call `<init>`(v3, v7) @signature `Lio/grpc/okhttp/internal/m;.<init>:(Ljava/util/List;)V` @kind direct;
  #L235b9e.  call temp:= `newProxyInstance`(v8, v2, v3) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L235ba4.  v7:= temp @kind object;
  #L235ba6.  v8:= v5.`io.grpc.okhttp.internal.l.e` @type ^`java.lang.reflect.Method` @kind object;
  #L235baa.  v2:= 0I;
  #L235bac.  v0:= new `java.lang.Object`[v0];
  #L235bb0.  v0[v1]:= v6 @kind object;
  #L235bb4.  v0[v4]:= v7 @kind object;
  #L235bb8.  call temp:= `invoke`(v8, v2, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L235bbe.  return @kind void;
  #L235bc0.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L235bc2.  v7:= new `java.lang.AssertionError`;
  #L235bc6.  call `<init>`(v7, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L235bcc.  throw v7;
  #L235bce.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L235bd0.  v7:= new `java.lang.AssertionError`;
  #L235bd4.  call `<init>`(v7, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L235bda.  goto L235bde;
  #L235bdc.  throw v7;
  #L235bde.  goto L235bdc;
  catch `java.lang.reflect.InvocationTargetException` @[L235b70..L235bbe] goto L235bce;
  catch `java.lang.IllegalAccessException` @[L235b70..L235bbe] goto L235bc0;
}
procedure `java.lang.String` `i`(`io.grpc.okhttp.internal.l` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lio/grpc/okhttp/internal/l;.i:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L235a0c.  v0:= v3.`io.grpc.okhttp.internal.l.f` @type ^`java.lang.reflect.Method` @kind object;
  #L235a10.  v1:= 1I;
  #L235a12.  v1:= new `java.lang.Object`[v1];
  #L235a16.  v2:= 0I;
  #L235a18.  v1[v2]:= v4 @kind object;
  #L235a1c.  v4:= 0I;
  #L235a1e.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L235a24.  v0:= temp @kind object;
  #L235a26.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L235a2c.  v0:= temp @kind object;
  #L235a2e.  v0:= (`io.grpc.okhttp.internal.m`) v0 @kind object;
  #L235a32.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/internal/m;.a:(Lio/grpc/okhttp/internal/m;)Z` @kind static;
  #L235a38.  v1:= temp;
  #L235a3a.  if v1 != 0 then goto L235a5e;
  #L235a3e.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/internal/m;.b:(Lio/grpc/okhttp/internal/m;)Ljava/lang/String;` @kind static;
  #L235a44.  v1:= temp @kind object;
  #L235a46.  if v1 != 0 then goto L235a5e;
  #L235a4a.  v0:= `@@io.grpc.okhttp.internal.Platform.a` @type ^`java.util.logging.Logger` @kind object;
  #L235a4e.  v1:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L235a52.  v2:= "ALPN callback dropped: SPDY and HTTP/2 are disabled. Is alpn-boot on the boot class path?" @kind object;
  #L235a56.  call `log`(v0, v1, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L235a5c.  return v4 @kind object;
  #L235a5e.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/internal/m;.a:(Lio/grpc/okhttp/internal/m;)Z` @kind static;
  #L235a64.  v1:= temp;
  #L235a66.  if v1 == 0 then goto L235a6c;
  #L235a6a.  goto L235a74;
  #L235a6c.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/internal/m;.b:(Lio/grpc/okhttp/internal/m;)Ljava/lang/String;` @kind static;
  #L235a72.  v4:= temp @kind object;
  #L235a74.  return v4 @kind object;
  #L235a76.  v4:= new `java.lang.AssertionError`;
  #L235a7a.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L235a80.  throw v4;
  #L235a82.  v4:= new `java.lang.AssertionError`;
  #L235a86.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L235a8c.  throw v4;
  catch `java.lang.reflect.InvocationTargetException` @[L235a0c..L235a74] goto L235a82;
  catch `java.lang.IllegalAccessException` @[L235a0c..L235a74] goto L235a76;
}
procedure `io.grpc.okhttp.internal.Platform$TlsExtensionType` `j`(`io.grpc.okhttp.internal.l` v1 @kind this) @signature `Lio/grpc/okhttp/internal/l;.j:()Lio/grpc/okhttp/internal/Platform$TlsExtensionType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2359f4.  v0:= `@@io.grpc.okhttp.internal.Platform$TlsExtensionType.ALPN_AND_NPN` @type ^`io.grpc.okhttp.internal.Platform$TlsExtensionType` @kind object;
  #L2359f8.  return v0 @kind object;
}
