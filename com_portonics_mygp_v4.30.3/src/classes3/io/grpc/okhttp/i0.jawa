record `io.grpc.okhttp.i0` @kind class @AccessFlag  {
  `io.grpc.okhttp.x` `io.grpc.okhttp.i0.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.okhttp.internal.framed.c` `io.grpc.okhttp.i0.b` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.okhttp.i0.c` @AccessFlag PRIVATE;
  `io.grpc.okhttp.g0` `io.grpc.okhttp.i0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.okhttp.i0` v1 @kind this, `io.grpc.okhttp.x` v2 @kind object, `io.grpc.okhttp.internal.framed.c` v3 @kind object, `int` v4 ) @signature `Lio/grpc/okhttp/i0;.<init>:(Lio/grpc/okhttp/x;Lio/grpc/okhttp/internal/framed/c;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2328f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2328f6.  v0:= "transport" @kind object;
  #L2328fa.  call temp:= `s`(v2, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L232900.  v2:= temp @kind object;
  #L232902.  v2:= (`io.grpc.okhttp.x`) v2 @kind object;
  #L232906.  v1.`io.grpc.okhttp.i0.a` @type ^`io.grpc.okhttp.x` := v2 @kind object;
  #L23290a.  v2:= "frameWriter" @kind object;
  #L23290e.  call temp:= `s`(v3, v2) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L232914.  v2:= temp @kind object;
  #L232916.  v2:= (`io.grpc.okhttp.internal.framed.c`) v2 @kind object;
  #L23291a.  v1.`io.grpc.okhttp.i0.b` @type ^`io.grpc.okhttp.internal.framed.c` := v2 @kind object;
  #L23291e.  v1.`io.grpc.okhttp.i0.c` @type ^`int` := v4;
  #L232922.  v2:= new `io.grpc.okhttp.g0`;
  #L232926.  v3:= 0I;
  #L232928.  call `<init>`(v2, v1, v3, v4) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;II)V` @kind direct;
  #L23292e.  v1.`io.grpc.okhttp.i0.d` @type ^`io.grpc.okhttp.g0` := v2 @kind object;
  #L232932.  return @kind void;
}
procedure `io.grpc.okhttp.g0` `a`(`io.grpc.okhttp.i0` v0 @kind object) @signature `Lio/grpc/okhttp/i0;.a:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/g0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L232888.  v0:= v0.`io.grpc.okhttp.i0.d` @type ^`io.grpc.okhttp.g0` @kind object;
  #L23288c.  return v0 @kind object;
}
procedure `io.grpc.okhttp.internal.framed.c` `b`(`io.grpc.okhttp.i0` v0 @kind object) @signature `Lio/grpc/okhttp/i0;.b:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/internal/framed/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2328d8.  v0:= v0.`io.grpc.okhttp.i0.b` @type ^`io.grpc.okhttp.internal.framed.c` @kind object;
  #L2328dc.  return v0 @kind object;
}
procedure `io.grpc.okhttp.g0` `f`(`io.grpc.okhttp.i0` v2 @kind this, `io.grpc.okhttp.p` v3 @kind object) @signature `Lio/grpc/okhttp/i0;.f:(Lio/grpc/okhttp/p;)Lio/grpc/okhttp/g0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2328a0.  call temp:= `K`(v3) @signature `Lio/grpc/okhttp/p;.K:()Ljava/lang/Object;` @kind virtual;
  #L2328a6.  v0:= temp @kind object;
  #L2328a8.  v0:= (`io.grpc.okhttp.g0`) v0 @kind object;
  #L2328ac.  if v0 != 0 then goto L2328c4;
  #L2328b0.  v0:= new `io.grpc.okhttp.g0`;
  #L2328b4.  v1:= v2.`io.grpc.okhttp.i0.c` @type ^`int`;
  #L2328b8.  call `<init>`(v0, v2, v3, v1) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;Lio/grpc/okhttp/p;I)V` @kind direct;
  #L2328be.  call `N`(v3, v0) @signature `Lio/grpc/okhttp/p;.N:(Ljava/lang/Object;)V` @kind virtual;
  #L2328c4.  return v0 @kind object;
}
procedure `void` `c`(`io.grpc.okhttp.i0` v4 @kind this, `boolean` v5 , `int` v6 , `okio.k` v7 @kind object, `boolean` v8 ) @signature `Lio/grpc/okhttp/i0;.c:(ZILokio/k;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L232944.  v0:= "source" @kind object;
  #L232948.  call temp:= `s`(v7, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23294e.  v0:= v4.`io.grpc.okhttp.i0.a` @type ^`io.grpc.okhttp.x` @kind object;
  #L232952.  call temp:= `Z`(v0, v6) @signature `Lio/grpc/okhttp/x;.Z:(I)Lio/grpc/okhttp/p;` @kind virtual;
  #L232958.  v6:= temp @kind object;
  #L23295a.  if v6 != 0 then goto L232960;
  #L23295e.  return @kind void;
  #L232960.  call temp:= `f`(v4, v6) @signature `Lio/grpc/okhttp/i0;.f:(Lio/grpc/okhttp/p;)Lio/grpc/okhttp/g0;` @kind direct;
  #L232966.  v6:= temp @kind object;
  #L232968.  call temp:= `j`(v6) @signature `Lio/grpc/okhttp/g0;.j:()I` @kind virtual;
  #L23296e.  v0:= temp;
  #L232970.  call temp:= `e`(v6) @signature `Lio/grpc/okhttp/g0;.e:()Z` @kind virtual;
  #L232976.  v1:= temp;
  #L232978.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L23297e.  v2:= temp @kind wide;
  #L232980.  v3:= (`int`) v2 @kind l2i;
  #L232982.  if v1 != 0 then goto L232992;
  #L232986.  if v0 < v3 then goto L232992;
  #L23298a.  call `k`(v6, v7, v3, v5) @signature `Lio/grpc/okhttp/g0;.k:(Lokio/k;IZ)V` @kind virtual;
  #L232990.  goto L2329b2;
  #L232992.  if v1 != 0 then goto L2329a2;
  #L232996.  if v0 <= 0 then goto L2329a2;
  #L23299a.  v1:= 0I;
  #L23299c.  call `k`(v6, v7, v0, v1) @signature `Lio/grpc/okhttp/g0;.k:(Lokio/k;IZ)V` @kind virtual;
  #L2329a2.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L2329a8.  v0:= temp @kind wide;
  #L2329aa.  v1:= (`int`) v0 @kind l2i;
  #L2329ac.  call `d`(v6, v7, v1, v5) @signature `Lio/grpc/okhttp/g0;.d:(Lokio/k;IZ)V` @kind virtual;
  #L2329b2.  if v8 == 0 then goto L2329bc;
  #L2329b6.  call `d`(v4) @signature `Lio/grpc/okhttp/i0;.d:()V` @kind virtual;
  #L2329bc.  return @kind void;
}
procedure `void` `d`(`io.grpc.okhttp.i0` v2 @kind this) @signature `Lio/grpc/okhttp/i0;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2329d0.  v0:= v2.`io.grpc.okhttp.i0.b` @type ^`io.grpc.okhttp.internal.framed.c` @kind object;
  #L2329d4.  call `flush`(v0) @signature `Lio/grpc/okhttp/internal/framed/c;.flush:()V` @kind interface;
  #L2329da.  return @kind void;
  #L2329dc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2329de.  v1:= new `java.lang.RuntimeException`;
  #L2329e2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2329e8.  throw v1;
  catch `java.io.IOException` @[L2329d0..L2329da] goto L2329dc;
}
procedure `boolean` `e`(`io.grpc.okhttp.i0` v7 @kind this, `int` v8 ) @signature `Lio/grpc/okhttp/i0;.e:(I)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L232778.  if v8 < 0 then goto L2327dc;
  #L23277c.  v0:= v7.`io.grpc.okhttp.i0.c` @type ^`int`;
  #L232780.  v0:= v8 - v0 @kind int;
  #L232784.  v7.`io.grpc.okhttp.i0.c` @type ^`int` := v8;
  #L232788.  v8:= v7.`io.grpc.okhttp.i0.a` @type ^`io.grpc.okhttp.x` @kind object;
  #L23278c.  call temp:= `U`(v8) @signature `Lio/grpc/okhttp/x;.U:()[Lio/grpc/okhttp/p;` @kind virtual;
  #L232792.  v8:= temp @kind object;
  #L232794.  v1:= length @variable v8;
  #L232796.  v2:= 0I;
  #L232798.  v3:= 0I;
  #L23279a.  if v3 >= v1 then goto L2327d4;
  #L23279e.  v4:= v8[v3] @kind object;
  #L2327a2.  call temp:= `K`(v4) @signature `Lio/grpc/okhttp/p;.K:()Ljava/lang/Object;` @kind virtual;
  #L2327a8.  v5:= temp @kind object;
  #L2327aa.  v5:= (`io.grpc.okhttp.g0`) v5 @kind object;
  #L2327ae.  if v5 != 0 then goto L2327c8;
  #L2327b2.  v5:= new `io.grpc.okhttp.g0`;
  #L2327b6.  v6:= v7.`io.grpc.okhttp.i0.c` @type ^`int`;
  #L2327ba.  call `<init>`(v5, v7, v4, v6) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;Lio/grpc/okhttp/p;I)V` @kind direct;
  #L2327c0.  call `N`(v4, v5) @signature `Lio/grpc/okhttp/p;.N:(Ljava/lang/Object;)V` @kind virtual;
  #L2327c6.  goto L2327ce;
  #L2327c8.  call temp:= `f`(v5, v0) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @kind virtual;
  #L2327ce.  v3:= v3 + 1;
  #L2327d2.  goto L23279a;
  #L2327d4.  if v0 <= 0 then goto L2327da;
  #L2327d8.  v2:= 1I;
  #L2327da.  return v2;
  #L2327dc.  v0:= new `java.lang.IllegalArgumentException`;
  #L2327e0.  v1:= new `java.lang.StringBuilder`;
  #L2327e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2327ea.  v2:= "Invalid initial window size: " @kind object;
  #L2327ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2327f4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2327fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L232800.  v8:= temp @kind object;
  #L232802.  call `<init>`(v0, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L232808.  goto L23280c;
  #L23280a.  throw v0;
  #L23280c.  goto L23280a;
}
procedure `int` `g`(`io.grpc.okhttp.i0` v2 @kind this, `io.grpc.okhttp.p` v3 @kind object, `int` v4 ) @signature `Lio/grpc/okhttp/i0;.g:(Lio/grpc/okhttp/p;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L232820.  if v3 != 0 then goto L232838;
  #L232824.  v3:= v2.`io.grpc.okhttp.i0.d` @type ^`io.grpc.okhttp.g0` @kind object;
  #L232828.  call temp:= `f`(v3, v4) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @kind virtual;
  #L23282e.  v3:= temp;
  #L232830.  call `h`(v2) @signature `Lio/grpc/okhttp/i0;.h:()V` @kind virtual;
  #L232836.  goto L232876;
  #L232838.  call temp:= `f`(v2, v3) @signature `Lio/grpc/okhttp/i0;.f:(Lio/grpc/okhttp/p;)Lio/grpc/okhttp/g0;` @kind direct;
  #L23283e.  v3:= temp @kind object;
  #L232840.  call temp:= `f`(v3, v4) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @kind virtual;
  #L232846.  v4:= temp;
  #L232848.  v0:= new `io.grpc.okhttp.h0`;
  #L23284c.  v1:= 0I;
  #L23284e.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/h0;.<init>:(Lio/grpc/okhttp/f0;)V` @kind direct;
  #L232854.  call temp:= `j`(v3) @signature `Lio/grpc/okhttp/g0;.j:()I` @kind virtual;
  #L23285a.  v1:= temp;
  #L23285c.  call temp:= `l`(v3, v1, v0) @signature `Lio/grpc/okhttp/g0;.l:(ILio/grpc/okhttp/h0;)I` @kind virtual;
  #L232862.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/h0;.a:()Z` @kind virtual;
  #L232868.  v3:= temp;
  #L23286a.  if v3 == 0 then goto L232874;
  #L23286e.  call `d`(v2) @signature `Lio/grpc/okhttp/i0;.d:()V` @kind virtual;
  #L232874.  v3:= v4;
  #L232876.  return v3;
}
procedure `void` `h`(`io.grpc.okhttp.i0` v9 @kind this) @signature `Lio/grpc/okhttp/i0;.h:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L232a0c.  v0:= v9.`io.grpc.okhttp.i0.a` @type ^`io.grpc.okhttp.x` @kind object;
  #L232a10.  call temp:= `U`(v0) @signature `Lio/grpc/okhttp/x;.U:()[Lio/grpc/okhttp/p;` @kind virtual;
  #L232a16.  v0:= temp @kind object;
  #L232a18.  v1:= v9.`io.grpc.okhttp.i0.d` @type ^`io.grpc.okhttp.g0` @kind object;
  #L232a1c.  call temp:= `i`(v1) @signature `Lio/grpc/okhttp/g0;.i:()I` @kind virtual;
  #L232a22.  v1:= temp;
  #L232a24.  v2:= length @variable v0;
  #L232a26.  v3:= 0I;
  #L232a28.  if v2 <= 0 then goto L232a9c;
  #L232a2c.  if v1 <= 0 then goto L232a9c;
  #L232a30.  v4:= (`float`) v1 @kind i2f;
  #L232a32.  v5:= (`float`) v2 @kind i2f;
  #L232a34.  v4:= v4 / v5 @kind float;
  #L232a36.  v4:= (`double`) v4 @kind f2d;
  #L232a38.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L232a3e.  v4:= temp @kind wide;
  #L232a40.  v4:= (`int`) v4 @kind d2i;
  #L232a42.  v5:= 0I;
  #L232a44.  if v5 >= v2 then goto L232a98;
  #L232a48.  if v1 <= 0 then goto L232a98;
  #L232a4c.  v6:= v0[v5] @kind object;
  #L232a50.  call temp:= `f`(v9, v6) @signature `Lio/grpc/okhttp/i0;.f:(Lio/grpc/okhttp/p;)Lio/grpc/okhttp/g0;` @kind direct;
  #L232a56.  v7:= temp @kind object;
  #L232a58.  call temp:= `h`(v7) @signature `Lio/grpc/okhttp/g0;.h:()I` @kind virtual;
  #L232a5e.  v8:= temp;
  #L232a60.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L232a66.  v8:= temp;
  #L232a68.  call temp:= `min`(v1, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L232a6e.  v8:= temp;
  #L232a70.  if v8 <= 0 then goto L232a7c;
  #L232a74.  call `a`(v7, v8) @signature `Lio/grpc/okhttp/g0;.a:(I)V` @kind virtual;
  #L232a7a.  v1:= v1 - v8 @kind int;
  #L232a7c.  call temp:= `h`(v7) @signature `Lio/grpc/okhttp/g0;.h:()I` @kind virtual;
  #L232a82.  v7:= temp;
  #L232a84.  if v7 <= 0 then goto L232a92;
  #L232a88.  v7:= v3 + 1;
  #L232a8c.  v0[v3]:= v6 @kind object;
  #L232a90.  v3:= v7;
  #L232a92.  v5:= v5 + 1;
  #L232a96.  goto L232a44;
  #L232a98.  v2:= v3;
  #L232a9a.  goto L232a26;
  #L232a9c.  v0:= new `io.grpc.okhttp.h0`;
  #L232aa0.  v1:= 0I;
  #L232aa2.  call `<init>`(v0, v1) @signature `Lio/grpc/okhttp/h0;.<init>:(Lio/grpc/okhttp/f0;)V` @kind direct;
  #L232aa8.  v1:= v9.`io.grpc.okhttp.i0.a` @type ^`io.grpc.okhttp.x` @kind object;
  #L232aac.  call temp:= `U`(v1) @signature `Lio/grpc/okhttp/x;.U:()[Lio/grpc/okhttp/p;` @kind virtual;
  #L232ab2.  v1:= temp @kind object;
  #L232ab4.  v2:= length @variable v1;
  #L232ab6.  if v3 >= v2 then goto L232ae0;
  #L232aba.  v4:= v1[v3] @kind object;
  #L232abe.  call temp:= `f`(v9, v4) @signature `Lio/grpc/okhttp/i0;.f:(Lio/grpc/okhttp/p;)Lio/grpc/okhttp/g0;` @kind direct;
  #L232ac4.  v4:= temp @kind object;
  #L232ac6.  call temp:= `b`(v4) @signature `Lio/grpc/okhttp/g0;.b:()I` @kind virtual;
  #L232acc.  v5:= temp;
  #L232ace.  call temp:= `l`(v4, v5, v0) @signature `Lio/grpc/okhttp/g0;.l:(ILio/grpc/okhttp/h0;)I` @kind virtual;
  #L232ad4.  call `c`(v4) @signature `Lio/grpc/okhttp/g0;.c:()V` @kind virtual;
  #L232ada.  v3:= v3 + 1;
  #L232ade.  goto L232ab6;
  #L232ae0.  call temp:= `a`(v0) @signature `Lio/grpc/okhttp/h0;.a:()Z` @kind virtual;
  #L232ae6.  v0:= temp;
  #L232ae8.  if v0 == 0 then goto L232af2;
  #L232aec.  call `d`(v9) @signature `Lio/grpc/okhttp/i0;.d:()V` @kind virtual;
  #L232af2.  return @kind void;
}
