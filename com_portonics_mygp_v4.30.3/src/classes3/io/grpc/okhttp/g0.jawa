record `io.grpc.okhttp.g0` @kind class @AccessFlag FINAL {
  `okio.k` `io.grpc.okhttp.g0.a` @AccessFlag FINAL;
  `int` `io.grpc.okhttp.g0.b` @AccessFlag FINAL;
  `int` `io.grpc.okhttp.g0.c` @AccessFlag ;
  `int` `io.grpc.okhttp.g0.d` @AccessFlag ;
  `io.grpc.okhttp.p` `io.grpc.okhttp.g0.e` @AccessFlag ;
  `boolean` `io.grpc.okhttp.g0.f` @AccessFlag ;
  `io.grpc.okhttp.i0` `io.grpc.okhttp.g0.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.okhttp.g0` v0 @kind this, `io.grpc.okhttp.i0` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23259c.  v0.`io.grpc.okhttp.g0.g` @type ^`io.grpc.okhttp.i0` := v1 @kind object;
  #L2325a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2325a6.  v1:= 0I;
  #L2325a8.  v0.`io.grpc.okhttp.g0.f` @type ^`boolean` := v1 @kind boolean;
  #L2325ac.  v0.`io.grpc.okhttp.g0.b` @type ^`int` := v2;
  #L2325b0.  v0.`io.grpc.okhttp.g0.c` @type ^`int` := v3;
  #L2325b4.  v1:= new `okio.k`;
  #L2325b8.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L2325be.  v0.`io.grpc.okhttp.g0.a` @type ^`okio.k` := v1 @kind object;
  #L2325c2.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.okhttp.g0` v1 @kind this, `io.grpc.okhttp.i0` v2 @kind object, `io.grpc.okhttp.p` v3 @kind object, `int` v4 ) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;Lio/grpc/okhttp/p;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2325d4.  call temp:= `M`(v3) @signature `Lio/grpc/okhttp/p;.M:()I` @kind virtual;
  #L2325da.  v0:= temp;
  #L2325dc.  call `<init>`(v1, v2, v0, v4) @signature `Lio/grpc/okhttp/g0;.<init>:(Lio/grpc/okhttp/i0;II)V` @kind direct;
  #L2325e2.  v1.`io.grpc.okhttp.g0.e` @type ^`io.grpc.okhttp.p` := v3 @kind object;
  #L2325e6.  return @kind void;
}
procedure `void` `a`(`io.grpc.okhttp.g0` v1 @kind this, `int` v2 ) @signature `Lio/grpc/okhttp/g0;.a:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2325f8.  v0:= v1.`io.grpc.okhttp.g0.d` @type ^`int`;
  #L2325fc.  v0:= v0 + v2 @kind int;
  #L2325fe.  v1.`io.grpc.okhttp.g0.d` @type ^`int` := v0;
  #L232602.  return @kind void;
}
procedure `int` `b`(`io.grpc.okhttp.g0` v1 @kind this) @signature `Lio/grpc/okhttp/g0;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L2323dc.  v0:= v1.`io.grpc.okhttp.g0.d` @type ^`int`;
  #L2323e0.  return v0;
}
procedure `void` `c`(`io.grpc.okhttp.g0` v1 @kind this) @signature `Lio/grpc/okhttp/g0;.c:()V` @AccessFlag  {
    temp;
    v0;

  #L232614.  v0:= 0I;
  #L232616.  v1.`io.grpc.okhttp.g0.d` @type ^`int` := v0;
  #L23261a.  return @kind void;
}
procedure `void` `d`(`io.grpc.okhttp.g0` v3 @kind this, `okio.k` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lio/grpc/okhttp/g0;.d:(Lokio/k;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L23262c.  v0:= v3.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L232630.  v1:= (`long`) v5 @kind i2l;
  #L232632.  call `write`(v0, v4, v1) @signature `Lokio/k;.write:(Lokio/k;J)V` @kind virtual;
  #L232638.  v4:= v3.`io.grpc.okhttp.g0.f` @type ^`boolean` @kind boolean;
  #L23263c.  v4:= v4 ^| v6 @kind int;
  #L23263e.  v3.`io.grpc.okhttp.g0.f` @type ^`boolean` := v4 @kind boolean;
  #L232642.  return @kind void;
}
procedure `boolean` `e`(`io.grpc.okhttp.g0` v5 @kind this) @signature `Lio/grpc/okhttp/g0;.e:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2323ac.  v0:= v5.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L2323b0.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L2323b6.  v0:= temp @kind wide;
  #L2323b8.  v2:= 0L;
  #L2323bc.  v4:= lcmp(v0, v2);
  #L2323c0.  if v4 <= 0 then goto L2323c8;
  #L2323c4.  v0:= 1I;
  #L2323c6.  goto L2323ca;
  #L2323c8.  v0:= 0I;
  #L2323ca.  return v0;
}
procedure `int` `f`(`io.grpc.okhttp.g0` v2 @kind this, `int` v3 ) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2323f4.  if v3 <= 0 then goto L23243c;
  #L2323f8.  v0:= 2147483647I;
  #L2323fe.  v0:= v0 - v3 @kind int;
  #L232400.  v1:= v2.`io.grpc.okhttp.g0.c` @type ^`int`;
  #L232404.  if v0 < v1 then goto L23240a;
  #L232408.  goto L23243c;
  #L23240a.  v3:= new `java.lang.IllegalArgumentException`;
  #L23240e.  v0:= new `java.lang.StringBuilder`;
  #L232412.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L232418.  v1:= "Window size overflow for stream: " @kind object;
  #L23241c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L232422.  v1:= v2.`io.grpc.okhttp.g0.b` @type ^`int`;
  #L232426.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23242c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L232432.  v0:= temp @kind object;
  #L232434.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23243a.  throw v3;
  #L23243c.  v0:= v2.`io.grpc.okhttp.g0.c` @type ^`int`;
  #L232440.  v0:= v0 + v3 @kind int;
  #L232442.  v2.`io.grpc.okhttp.g0.c` @type ^`int` := v0;
  #L232446.  return v0;
}
procedure `int` `g`(`io.grpc.okhttp.g0` v3 @kind this) @signature `Lio/grpc/okhttp/g0;.g:()I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L232458.  v0:= v3.`io.grpc.okhttp.g0.c` @type ^`int`;
  #L23245c.  v1:= v3.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L232460.  call temp:= `f1`(v1) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L232466.  v1:= temp @kind wide;
  #L232468.  v2:= (`int`) v1 @kind l2i;
  #L23246a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L232470.  v0:= temp;
  #L232472.  v1:= 0I;
  #L232474.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L23247a.  v0:= temp;
  #L23247c.  return v0;
}
procedure `int` `h`(`io.grpc.okhttp.g0` v2 @kind this) @signature `Lio/grpc/okhttp/g0;.h:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L232490.  call temp:= `g`(v2) @signature `Lio/grpc/okhttp/g0;.g:()I` @kind virtual;
  #L232496.  v0:= temp;
  #L232498.  v1:= v2.`io.grpc.okhttp.g0.d` @type ^`int`;
  #L23249c.  v0:= v0 - v1 @kind int;
  #L23249e.  return v0;
}
procedure `int` `i`(`io.grpc.okhttp.g0` v1 @kind this) @signature `Lio/grpc/okhttp/g0;.i:()I` @AccessFlag  {
    temp;
    v0;

  #L2324b0.  v0:= v1.`io.grpc.okhttp.g0.c` @type ^`int`;
  #L2324b4.  return v0;
}
procedure `int` `j`(`io.grpc.okhttp.g0` v2 @kind this) @signature `Lio/grpc/okhttp/g0;.j:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2324c8.  v0:= v2.`io.grpc.okhttp.g0.c` @type ^`int`;
  #L2324cc.  v1:= v2.`io.grpc.okhttp.g0.g` @type ^`io.grpc.okhttp.i0` @kind object;
  #L2324d0.  call temp:= `a`(v1) @signature `Lio/grpc/okhttp/i0;.a:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/g0;` @kind static;
  #L2324d6.  v1:= temp @kind object;
  #L2324d8.  call temp:= `i`(v1) @signature `Lio/grpc/okhttp/g0;.i:()I` @kind virtual;
  #L2324de.  v1:= temp;
  #L2324e0.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2324e6.  v0:= temp;
  #L2324e8.  return v0;
}
procedure `void` `k`(`io.grpc.okhttp.g0` v6 @kind this, `okio.k` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lio/grpc/okhttp/g0;.k:(Lokio/k;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L232654.  v0:= v6.`io.grpc.okhttp.g0.g` @type ^`io.grpc.okhttp.i0` @kind object;
  #L232658.  call temp:= `b`(v0) @signature `Lio/grpc/okhttp/i0;.b:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/internal/framed/c;` @kind static;
  #L23265e.  v0:= temp @kind object;
  #L232660.  call temp:= `maxDataLength`(v0) @signature `Lio/grpc/okhttp/internal/framed/c;.maxDataLength:()I` @kind interface;
  #L232666.  v0:= temp;
  #L232668.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L23266e.  v0:= temp;
  #L232670.  v1:= v6.`io.grpc.okhttp.g0.g` @type ^`io.grpc.okhttp.i0` @kind object;
  #L232674.  call temp:= `a`(v1) @signature `Lio/grpc/okhttp/i0;.a:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/g0;` @kind static;
  #L23267a.  v1:= temp @kind object;
  #L23267c.  v2:= -v0 @kind int;
  #L23267e.  call temp:= `f`(v1, v2) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @kind virtual;
  #L232684.  call temp:= `f`(v6, v2) @signature `Lio/grpc/okhttp/g0;.f:(I)I` @kind virtual;
  #L23268a.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L232690.  v1:= temp @kind wide;
  #L232692.  v3:= (`long`) v0 @kind i2l;
  #L232694.  v5:= lcmp(v1, v3);
  #L232698.  if v5 != 0 then goto L2326a4;
  #L23269c.  if v9 == 0 then goto L2326a4;
  #L2326a0.  v1:= 1I;
  #L2326a2.  goto L2326a6;
  #L2326a4.  v1:= 0I;
  #L2326a6.  v2:= v6.`io.grpc.okhttp.g0.g` @type ^`io.grpc.okhttp.i0` @kind object;
  #L2326aa.  call temp:= `b`(v2) @signature `Lio/grpc/okhttp/i0;.b:(Lio/grpc/okhttp/i0;)Lio/grpc/okhttp/internal/framed/c;` @kind static;
  #L2326b0.  v2:= temp @kind object;
  #L2326b2.  v3:= v6.`io.grpc.okhttp.g0.b` @type ^`int`;
  #L2326b6.  call `data`(v2, v1, v3, v7, v0) @signature `Lio/grpc/okhttp/internal/framed/c;.data:(ZILokio/k;I)V` @kind interface;
  #L2326bc.  v1:= v6.`io.grpc.okhttp.g0.e` @type ^`io.grpc.okhttp.p` @kind object;
  #L2326c0.  call temp:= `O`(v1) @signature `Lio/grpc/okhttp/p;.O:()Lio/grpc/okhttp/o;` @kind virtual;
  #L2326c6.  v1:= temp @kind object;
  #L2326c8.  call `n`(v1, v0) @signature `Lio/grpc/internal/h;.n:(I)V` @kind virtual;
  #L2326ce.  v8:= v8 - v0 @kind int;
  #L2326d0.  if v8 > 0 then goto L232654;
  #L2326d4.  return @kind void;
  #L2326d6.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L2326d8.  v8:= new `java.lang.RuntimeException`;
  #L2326dc.  call `<init>`(v8, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2326e2.  goto L2326e6;
  #L2326e4.  throw v8;
  #L2326e6.  goto L2326e4;
  catch `java.io.IOException` @[L23268a..L2326bc] goto L2326d6;
}
procedure `int` `l`(`io.grpc.okhttp.g0` v8 @kind this, `int` v9 , `io.grpc.okhttp.h0` v10 @kind object) @signature `Lio/grpc/okhttp/g0;.l:(ILio/grpc/okhttp/h0;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2324fc.  call temp:= `j`(v8) @signature `Lio/grpc/okhttp/g0;.j:()I` @kind virtual;
  #L232502.  v0:= temp;
  #L232504.  call temp:= `min`(v9, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L23250a.  v0:= temp;
  #L23250c.  v1:= 0I;
  #L23250e.  v2:= 0I;
  #L232510.  call temp:= `e`(v8) @signature `Lio/grpc/okhttp/g0;.e:()Z` @kind virtual;
  #L232516.  v3:= temp;
  #L232518.  if v3 == 0 then goto L232588;
  #L23251c.  if v0 <= 0 then goto L232588;
  #L232520.  v3:= (`long`) v0 @kind i2l;
  #L232522.  v5:= v8.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L232526.  call temp:= `f1`(v5) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L23252c.  v5:= temp @kind wide;
  #L23252e.  v7:= lcmp(v3, v5);
  #L232532.  if v7 < 0 then goto L232560;
  #L232536.  v0:= v8.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L23253a.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L232540.  v3:= temp @kind wide;
  #L232542.  v0:= (`int`) v3 @kind l2i;
  #L232544.  v2:= v2 + v0 @kind int;
  #L232546.  v0:= v8.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L23254a.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L232550.  v3:= temp @kind wide;
  #L232552.  v4:= (`int`) v3 @kind l2i;
  #L232554.  v3:= v8.`io.grpc.okhttp.g0.f` @type ^`boolean` @kind boolean;
  #L232558.  call `k`(v8, v0, v4, v3) @signature `Lio/grpc/okhttp/g0;.k:(Lokio/k;IZ)V` @kind virtual;
  #L23255e.  goto L23256c;
  #L232560.  v2:= v2 + v0 @kind int;
  #L232562.  v3:= v8.`io.grpc.okhttp.g0.a` @type ^`okio.k` @kind object;
  #L232566.  call `k`(v8, v3, v0, v1) @signature `Lio/grpc/okhttp/g0;.k:(Lokio/k;IZ)V` @kind virtual;
  #L23256c.  call `b`(v10) @signature `Lio/grpc/okhttp/h0;.b:()V` @kind virtual;
  #L232572.  v0:= v9 - v2 @kind int;
  #L232576.  call temp:= `j`(v8) @signature `Lio/grpc/okhttp/g0;.j:()I` @kind virtual;
  #L23257c.  v3:= temp;
  #L23257e.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L232584.  v0:= temp;
  #L232586.  goto L232510;
  #L232588.  return v2;
}
