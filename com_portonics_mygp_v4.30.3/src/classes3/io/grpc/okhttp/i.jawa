record `io.grpc.okhttp.i` @kind class @AccessFlag  extends `io.grpc.internal.m9` @kind interface {
}
procedure `void` `<init>`(`io.grpc.okhttp.i` v0 @kind this) @signature `Lio/grpc/okhttp/i;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L22d85c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22d862.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.grpc.okhttp.i` v1 @kind this) @signature `Lio/grpc/okhttp/i;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L22d818.  call temp:= `d`(v1) @signature `Lio/grpc/okhttp/i;.d:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L22d81e.  v0:= temp @kind object;
  #L22d820.  return v0 @kind object;
}
procedure `void` `b`(`io.grpc.okhttp.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/okhttp/i;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L22d874.  v1:= (`java.util.concurrent.Executor`) v1 @kind object;
  #L22d878.  call `c`(v0, v1) @signature `Lio/grpc/okhttp/i;.c:(Ljava/util/concurrent/Executor;)V` @kind virtual;
  #L22d87e.  return @kind void;
}
procedure `void` `c`(`io.grpc.okhttp.i` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lio/grpc/okhttp/i;.c:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;

  #L22d890.  v1:= (`java.util.concurrent.ExecutorService`) v1 @kind object;
  #L22d894.  call `shutdown`(v1) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L22d89a.  return @kind void;
}
procedure `java.util.concurrent.Executor` `d`(`io.grpc.okhttp.i` v2 @kind this) @signature `Lio/grpc/okhttp/i;.d:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22d834.  v0:= "grpc-okhttp-%d" @kind object;
  #L22d838.  v1:= 1I;
  #L22d83a.  call temp:= `g`(v0, v1) @signature `Lio/grpc/internal/GrpcUtil;.g:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L22d840.  v0:= temp @kind object;
  #L22d842.  call temp:= `newCachedThreadPool`(v0) @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L22d848.  v0:= temp @kind object;
  #L22d84a.  return v0 @kind object;
}
