record `io.grpc.v3` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface {
  `java.lang.Thread$UncaughtExceptionHandler` `io.grpc.v3.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `io.grpc.v3.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `io.grpc.v3.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.v3` v1 @kind this, `java.lang.Thread$UncaughtExceptionHandler` v2 @kind object) @signature `Lio/grpc/v3;.<init>:(Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213ac0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213ac6.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L213aca.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L213ad0.  v1.`io.grpc.v3.c` @type ^`java.util.Queue` := v0 @kind object;
  #L213ad4.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L213ad8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L213ade.  v1.`io.grpc.v3.d` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L213ae2.  v0:= "uncaughtExceptionHandler" @kind object;
  #L213ae6.  call temp:= `s`(v2, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L213aec.  v2:= temp @kind object;
  #L213aee.  v2:= (`java.lang.Thread$UncaughtExceptionHandler`) v2 @kind object;
  #L213af2.  v1.`io.grpc.v3.b` @type ^`java.lang.Thread$UncaughtExceptionHandler` := v2 @kind object;
  #L213af6.  return @kind void;
}
procedure `void` `a`(`io.grpc.v3` v4 @kind this) @signature `Lio/grpc/v3;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213b08.  v0:= v4.`io.grpc.v3.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L213b0c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L213b12.  v1:= temp @kind object;
  #L213b14.  v2:= 0I;
  #L213b16.  call temp:= `compareAndSet`(v0, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L213b1c.  v0:= temp;
  #L213b1e.  if v0 != 0 then goto L213b24;
  #L213b22.  return @kind void;
  #L213b24.  v0:= v4.`io.grpc.v3.c` @type ^`java.util.Queue` @kind object;
  #L213b28.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L213b2e.  v0:= temp @kind object;
  #L213b30.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L213b34.  if v0 == 0 then goto L213b56;
  #L213b38.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L213b3e.  goto L213b24;
  #L213b40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L213b42.  v1:= v4.`io.grpc.v3.b` @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind object;
  #L213b46.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L213b4c.  v3:= temp @kind object;
  #L213b4e.  call `uncaughtException`(v1, v3, v0) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L213b54.  goto L213b24;
  #L213b56.  v0:= v4.`io.grpc.v3.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L213b5a.  call `set`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L213b60.  v0:= v4.`io.grpc.v3.c` @type ^`java.util.Queue` @kind object;
  #L213b64.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L213b6a.  v0:= temp;
  #L213b6c.  if v0 == 0 then goto L213b08;
  #L213b70.  return @kind void;
  #L213b72.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L213b74.  v1:= v4.`io.grpc.v3.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L213b78.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L213b7e.  goto L213b82;
  #L213b80.  throw v0;
  #L213b82.  goto L213b80;
  catch `java.lang.Throwable` @[L213b24..L213b34] goto L213b72;
  catch `java.lang.Throwable` @[L213b38..L213b3e] goto L213b40;
  catch `java.lang.Throwable` @[L213b42..L213b54] goto L213b72;
}
procedure `void` `b`(`io.grpc.v3` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/grpc/v3;.b:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L213bd4.  v0:= v2.`io.grpc.v3.c` @type ^`java.util.Queue` @kind object;
  #L213bd8.  v1:= "runnable is null" @kind object;
  #L213bdc.  call temp:= `s`(v3, v1) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L213be2.  v3:= temp @kind object;
  #L213be4.  call temp:= `add`(v0, v3) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L213bea.  return @kind void;
}
procedure `io.grpc.u3` `c`(`io.grpc.v3` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object, `java.util.concurrent.ScheduledExecutorService` v7 @kind object) @signature `Lio/grpc/v3;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lio/grpc/u3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L213a84.  v0:= new `io.grpc.t3`;
  #L213a88.  call `<init>`(v0, v3) @signature `Lio/grpc/t3;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L213a8e.  v1:= new `io.grpc.s3`;
  #L213a92.  call `<init>`(v1, v2, v0, v3) @signature `Lio/grpc/s3;.<init>:(Lio/grpc/v3;Lio/grpc/t3;Ljava/lang/Runnable;)V` @kind direct;
  #L213a98.  call temp:= `schedule`(v7, v1, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L213a9e.  v3:= temp @kind object;
  #L213aa0.  v4:= new `io.grpc.u3`;
  #L213aa4.  v5:= 0I;
  #L213aa6.  call `<init>`(v4, v0, v3, v5) @signature `Lio/grpc/u3;.<init>:(Lio/grpc/t3;Ljava/util/concurrent/ScheduledFuture;Lio/grpc/s3;)V` @kind direct;
  #L213aac.  return v4 @kind object;
}
procedure `void` `d`(`io.grpc.v3` v2 @kind this) @signature `Lio/grpc/v3;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L213bfc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L213c02.  v0:= temp @kind object;
  #L213c04.  v1:= v2.`io.grpc.v3.d` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L213c08.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L213c0e.  v1:= temp @kind object;
  #L213c10.  if v0 != v1 then goto L213c18;
  #L213c14.  v0:= 1I;
  #L213c16.  goto L213c1a;
  #L213c18.  v0:= 0I;
  #L213c1a.  v1:= "Not called from the SynchronizationContext" @kind object;
  #L213c1e.  call `z`(v0, v1) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L213c24.  return @kind void;
}
procedure `void` `execute`(`io.grpc.v3` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lio/grpc/v3;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L213bb4.  call `b`(v0, v1) @signature `Lio/grpc/v3;.b:(Ljava/lang/Runnable;)V` @kind virtual;
  #L213bba.  call `a`(v0) @signature `Lio/grpc/v3;.a:()V` @kind virtual;
  #L213bc0.  return @kind void;
}
