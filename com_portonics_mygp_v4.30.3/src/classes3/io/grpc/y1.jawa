record `io.grpc.y1` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.LinkedHashSet` `io.grpc.y1.d` @AccessFlag PRIVATE_FINAL;
  `java.util.LinkedHashMap` `io.grpc.y1.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.y1.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.y1` `@@io.grpc.y1.b` @AccessFlag PRIVATE_STATIC;
global `java.lang.Iterable` `@@io.grpc.y1.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/y1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2104e8.  v0:= constclass @type ^`io.grpc.y1` @kind object;
  #L2104ec.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2104f2.  v0:= temp @kind object;
  #L2104f4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2104fa.  v0:= temp @kind object;
  #L2104fc.  `@@io.grpc.y1.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L210500.  call temp:= `c`() @signature `Lio/grpc/y1;.c:()Ljava/util/List;` @kind static;
  #L210506.  v0:= temp @kind object;
  #L210508.  `@@io.grpc.y1.c` @type ^`java.lang.Iterable` := v0 @kind object;
  #L21050c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.y1` v1 @kind this) @signature `Lio/grpc/y1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L210520.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L210526.  v0:= new `java.util.LinkedHashSet`;
  #L21052a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L210530.  v1.`io.grpc.y1.d` @type ^`java.util.LinkedHashSet` := v0 @kind object;
  #L210534.  v0:= new `java.util.LinkedHashMap`;
  #L210538.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L21053e.  v1.`io.grpc.y1.e` @type ^`java.util.LinkedHashMap` := v0 @kind object;
  #L210542.  return @kind void;
}
procedure `void` `a`(`io.grpc.y1` v2 @kind this, `io.grpc.w1` v3 @kind object) @signature `Lio/grpc/y1;.a:(Lio/grpc/w1;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L210554.  @monitorenter v2
  #L210556.  call temp:= `d`(v3) @signature `Lio/grpc/w1;.d:()Z` @kind virtual;
  #L21055c.  v0:= temp;
  #L21055e.  v1:= "isAvailable() returned false" @kind object;
  #L210562.  call `e`(v0, v1) @signature `Lcom/google/common/base/b0;.e:(ZLjava/lang/Object;)V` @kind static;
  #L210568.  v0:= v2.`io.grpc.y1.d` @type ^`java.util.LinkedHashSet` @kind object;
  #L21056c.  call temp:= `add`(v0, v3) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L210572.  @monitorexit v2
  #L210574.  return @kind void;
  #L210576.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L210578.  @monitorexit v2
  #L21057a.  throw v3;
  catch `java.lang.Throwable` @[L210556..L210572] goto L210576;
}
procedure `io.grpc.y1` `b`() @signature `Lio/grpc/y1;.b:()Lio/grpc/y1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21037c.  v0:= constclass @type ^`io.grpc.w1` @kind object;
  #L210380.  v1:= constclass @type ^`io.grpc.y1` @kind object;
  #L210384.  @monitorenter v1
  #L210386.  v2:= `@@io.grpc.y1.b` @type ^`io.grpc.y1` @kind object;
  #L21038a.  if v2 != 0 then goto L210428;
  #L21038e.  v2:= `@@io.grpc.y1.c` @type ^`java.lang.Iterable` @kind object;
  #L210392.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L210398.  v3:= temp @kind object;
  #L21039a.  v4:= new `io.grpc.x1`;
  #L21039e.  call `<init>`(v4) @signature `Lio/grpc/x1;.<init>:()V` @kind direct;
  #L2103a4.  call temp:= `f`(v0, v2, v3, v4) @signature `Lio/grpc/n3;.f:(Ljava/lang/Class;Ljava/lang/Iterable;Ljava/lang/ClassLoader;Lio/grpc/m3;)Ljava/util/List;` @kind static;
  #L2103aa.  v0:= temp @kind object;
  #L2103ac.  v2:= new `io.grpc.y1`;
  #L2103b0.  call `<init>`(v2) @signature `Lio/grpc/y1;.<init>:()V` @kind direct;
  #L2103b6.  `@@io.grpc.y1.b` @type ^`io.grpc.y1` := v2 @kind object;
  #L2103ba.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2103c0.  v0:= temp @kind object;
  #L2103c2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2103c8.  v2:= temp;
  #L2103ca.  if v2 == 0 then goto L21041e;
  #L2103ce.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2103d4.  v2:= temp @kind object;
  #L2103d6.  v2:= (`io.grpc.w1`) v2 @kind object;
  #L2103da.  v3:= `@@io.grpc.y1.a` @type ^`java.util.logging.Logger` @kind object;
  #L2103de.  v4:= new `java.lang.StringBuilder`;
  #L2103e2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2103e8.  v5:= "Service loader found " @kind object;
  #L2103ec.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2103f2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2103f8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2103fe.  v4:= temp @kind object;
  #L210400.  call `fine`(v3, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L210406.  call temp:= `d`(v2) @signature `Lio/grpc/w1;.d:()Z` @kind virtual;
  #L21040c.  v3:= temp;
  #L21040e.  if v3 == 0 then goto L2103c2;
  #L210412.  v3:= `@@io.grpc.y1.b` @type ^`io.grpc.y1` @kind object;
  #L210416.  call `a`(v3, v2) @signature `Lio/grpc/y1;.a:(Lio/grpc/w1;)V` @kind direct;
  #L21041c.  goto L2103c2;
  #L21041e.  v0:= `@@io.grpc.y1.b` @type ^`io.grpc.y1` @kind object;
  #L210422.  call `e`(v0) @signature `Lio/grpc/y1;.e:()V` @kind direct;
  #L210428.  v0:= `@@io.grpc.y1.b` @type ^`io.grpc.y1` @kind object;
  #L21042c.  @monitorexit v1
  #L21042e.  return v0 @kind object;
  #L210430.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L210432.  @monitorexit v1
  #L210434.  goto L210438;
  #L210436.  throw v0;
  #L210438.  goto L210436;
  catch `java.lang.Throwable` @[L210386..L21042c] goto L210430;
}
procedure `java.util.List` `c`() @signature `Lio/grpc/y1;.c:()Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L210458.  v0:= new `java.util.ArrayList`;
  #L21045c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L210462.  v1:= "io.grpc.internal.e7" @kind object;
  #L210466.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21046c.  v1:= temp @kind object;
  #L21046e.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L210474.  goto L21048a;
  #L210476.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L210478.  v2:= `@@io.grpc.y1.a` @type ^`java.util.logging.Logger` @kind object;
  #L21047c.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L210480.  v4:= "Unable to find pick-first LoadBalancer" @kind object;
  #L210484.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21048a.  v1:= "io.grpc.z3.h" @kind object;
  #L21048e.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L210494.  v1:= temp @kind object;
  #L210496.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L21049c.  goto L2104b2;
  #L21049e.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L2104a0.  v2:= `@@io.grpc.y1.a` @type ^`java.util.logging.Logger` @kind object;
  #L2104a4.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L2104a8.  v4:= "Unable to find round-robin LoadBalancer" @kind object;
  #L2104ac.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2104b2.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2104b8.  v0:= temp @kind object;
  #L2104ba.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L210462..L210474] goto L210476;
  catch `java.lang.ClassNotFoundException` @[L21048a..L21049c] goto L21049e;
}
procedure `void` `e`(`io.grpc.y1` v5 @kind this) @signature `Lio/grpc/y1;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L210598.  @monitorenter v5
  #L21059a.  v0:= v5.`io.grpc.y1.e` @type ^`java.util.LinkedHashMap` @kind object;
  #L21059e.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind virtual;
  #L2105a4.  v0:= v5.`io.grpc.y1.d` @type ^`java.util.LinkedHashSet` @kind object;
  #L2105a8.  call temp:= `iterator`(v0) @signature `Ljava/util/LinkedHashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2105ae.  v0:= temp @kind object;
  #L2105b0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2105b6.  v1:= temp;
  #L2105b8.  if v1 == 0 then goto L210604;
  #L2105bc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2105c2.  v1:= temp @kind object;
  #L2105c4.  v1:= (`io.grpc.w1`) v1 @kind object;
  #L2105c8.  call temp:= `b`(v1) @signature `Lio/grpc/w1;.b:()Ljava/lang/String;` @kind virtual;
  #L2105ce.  v2:= temp @kind object;
  #L2105d0.  v3:= v5.`io.grpc.y1.e` @type ^`java.util.LinkedHashMap` @kind object;
  #L2105d4.  call temp:= `get`(v3, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2105da.  v3:= temp @kind object;
  #L2105dc.  v3:= (`io.grpc.w1`) v3 @kind object;
  #L2105e0.  if v3 == 0 then goto L2105f8;
  #L2105e4.  call temp:= `c`(v3) @signature `Lio/grpc/w1;.c:()I` @kind virtual;
  #L2105ea.  v3:= temp;
  #L2105ec.  call temp:= `c`(v1) @signature `Lio/grpc/w1;.c:()I` @kind virtual;
  #L2105f2.  v4:= temp;
  #L2105f4.  if v3 >= v4 then goto L2105b0;
  #L2105f8.  v3:= v5.`io.grpc.y1.e` @type ^`java.util.LinkedHashMap` @kind object;
  #L2105fc.  call temp:= `put`(v3, v2, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L210602.  goto L2105b0;
  #L210604.  @monitorexit v5
  #L210606.  return @kind void;
  #L210608.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21060a.  @monitorexit v5
  #L21060c.  goto L210610;
  #L21060e.  throw v0;
  #L210610.  goto L21060e;
  catch `java.lang.Throwable` @[L21059a..L210602] goto L210608;
}
procedure `io.grpc.w1` `d`(`io.grpc.y1` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/grpc/y1;.d:(Ljava/lang/String;)Lio/grpc/w1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L210338.  @monitorenter v2
  #L21033a.  v0:= v2.`io.grpc.y1.e` @type ^`java.util.LinkedHashMap` @kind object;
  #L21033e.  v1:= "policy" @kind object;
  #L210342.  call temp:= `s`(v3, v1) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L210348.  v3:= temp @kind object;
  #L21034a.  call temp:= `get`(v0, v3) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L210350.  v3:= temp @kind object;
  #L210352.  v3:= (`io.grpc.w1`) v3 @kind object;
  #L210356.  @monitorexit v2
  #L210358.  return v3 @kind object;
  #L21035a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21035c.  @monitorexit v2
  #L21035e.  throw v3;
  catch `java.lang.Throwable` @[L21033a..L210356] goto L21035a;
}
