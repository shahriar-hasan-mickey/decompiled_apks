record `io.grpc.h0` @kind class @AccessFlag ABSTRACT {
}
global `io.grpc.j0` `@@io.grpc.h0.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/h0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20dd94.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L20dd98.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L20dd9e.  call temp:= `a`(v0) @signature `Lio/grpc/h0;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/grpc/j0;` @kind static;
  #L20dda4.  v1:= temp @kind object;
  #L20dda6.  `@@io.grpc.h0.a` @type ^`io.grpc.j0` := v1 @kind object;
  #L20ddaa.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L20ddb0.  v0:= temp @kind object;
  #L20ddb2.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L20ddb6.  if v0 == 0 then goto L20ddcc;
  #L20ddba.  v1:= `@@io.grpc.Context.b` @type ^`java.util.logging.Logger` @kind object;
  #L20ddbe.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L20ddc2.  v3:= "Storage override doesn't exist. Using default" @kind object;
  #L20ddc6.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L20ddcc.  return @kind void;
}
procedure `io.grpc.j0` `a`(`java.util.concurrent.atomic.AtomicReference` v3 @kind object) @signature `Lio/grpc/h0;.a:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/grpc/j0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20dd14.  v0:= "io.grpc.override.ContextStorageOverride" @kind object;
  #L20dd18.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20dd1e.  v0:= temp @kind object;
  #L20dd20.  v1:= constclass @type ^`io.grpc.j0` @kind object;
  #L20dd24.  call temp:= `asSubclass`(v0, v1) @signature `Ljava/lang/Class;.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;` @kind virtual;
  #L20dd2a.  v0:= temp @kind object;
  #L20dd2c.  v1:= 0I;
  #L20dd2e.  v2:= new `java.lang.Class`[v1];
  #L20dd32.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L20dd38.  v0:= temp @kind object;
  #L20dd3a.  v1:= new `java.lang.Object`[v1];
  #L20dd3e.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20dd44.  v0:= temp @kind object;
  #L20dd46.  v0:= (`io.grpc.j0`) v0 @kind object;
  #L20dd4a.  return v0 @kind object;
  #L20dd4c.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L20dd4e.  v0:= new `java.lang.RuntimeException`;
  #L20dd52.  v1:= "Storage override failed to initialize" @kind object;
  #L20dd56.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20dd5c.  throw v0;
  #L20dd5e.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L20dd60.  call `set`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L20dd66.  v3:= new `io.grpc.w3`;
  #L20dd6a.  call `<init>`(v3) @signature `Lio/grpc/w3;.<init>:()V` @kind direct;
  #L20dd70.  return v3 @kind object;
  catch `java.lang.ClassNotFoundException` @[L20dd14..L20dd4a] goto L20dd5e;
  catch `java.lang.Exception` @[L20dd14..L20dd4a] goto L20dd4c;
}
