record `io.grpc.g1` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.nio.charset.Charset` `@@io.grpc.g1.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.common.io.BaseEncoding` `@@io.grpc.g1.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/g1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20fb6c.  v0:= "US-ASCII" @kind object;
  #L20fb70.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L20fb76.  v0:= temp @kind object;
  #L20fb78.  `@@io.grpc.g1.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L20fb7c.  v0:= `@@io.grpc.m2.c` @type ^`com.google.common.io.BaseEncoding` @kind object;
  #L20fb80.  `@@io.grpc.g1.b` @type ^`com.google.common.io.BaseEncoding` := v0 @kind object;
  #L20fb84.  return @kind void;
}
procedure `int` `a`(`io.grpc.m2` v0 @kind object) @signature `Lio/grpc/g1;.a:(Lio/grpc/m2;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L20faf4.  call temp:= `f`(v0) @signature `Lio/grpc/m2;.f:()I` @kind virtual;
  #L20fafa.  v0:= temp;
  #L20fafc.  return v0;
}
procedure `io.grpc.j2` `b`(`java.lang.String` v3 @kind object, `io.grpc.f1` v4 @kind object) @signature `Lio/grpc/g1;.b:(Ljava/lang/String;Lio/grpc/f1;)Lio/grpc/j2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20fb2c.  v0:= 0I;
  #L20fb2e.  if v3 == 0 then goto L20fb50;
  #L20fb32.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L20fb38.  v1:= temp;
  #L20fb3a.  if v1 != 0 then goto L20fb50;
  #L20fb3e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20fb44.  v1:= temp;
  #L20fb46.  v2:= 58I;
  #L20fb4a.  if v1 != v2 then goto L20fb50;
  #L20fb4e.  v0:= 1I;
  #L20fb50.  call temp:= `g`(v3, v0, v4) @signature `Lio/grpc/j2;.g:(Ljava/lang/String;ZLio/grpc/l2;)Lio/grpc/j2;` @kind static;
  #L20fb56.  v3:= temp @kind object;
  #L20fb58.  return v3 @kind object;
}
procedure `io.grpc.m2` `c`(`byte`[][] v1 @kind object) @signature `Lio/grpc/g1;.c:([[B)Lio/grpc/m2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20fb10.  v0:= new `io.grpc.m2`;
  #L20fb14.  call `<init>`(v0, v1) @signature `Lio/grpc/m2;.<init>:([[B)V` @kind direct;
  #L20fb1a.  return v0 @kind object;
}
procedure `byte`[][] `d`(`io.grpc.m2` v0 @kind object) @signature `Lio/grpc/g1;.d:(Lio/grpc/m2;)[[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L20fad8.  call temp:= `n`(v0) @signature `Lio/grpc/m2;.n:()[[B` @kind virtual;
  #L20fade.  v0:= temp @kind object;
  #L20fae0.  return v0 @kind object;
}
