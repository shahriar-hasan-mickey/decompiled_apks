record `io.grpc.a3` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `io.grpc.d3` `io.grpc.a3.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.a3` v0 @kind this, `io.grpc.d3` v1 @kind object) @signature `Lio/grpc/a3;.<init>:(Lio/grpc/d3;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L211f54.  v0.`io.grpc.a3.b` @type ^`io.grpc.d3` := v1 @kind object;
  #L211f58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L211f5e.  return @kind void;
}
procedure `int` `a`(`io.grpc.a3` v0 @kind this, `io.grpc.z2` v1 @kind object, `io.grpc.z2` v2 @kind object) @signature `Lio/grpc/a3;.a:(Lio/grpc/z2;Lio/grpc/z2;)I` @AccessFlag PUBLIC {
    temp;

  #L211f0c.  call temp:= `d`(v1) @signature `Lio/grpc/z2;.d:()I` @kind virtual;
  #L211f12.  v1:= temp;
  #L211f14.  call temp:= `d`(v2) @signature `Lio/grpc/z2;.d:()I` @kind virtual;
  #L211f1a.  v2:= temp;
  #L211f1c.  v1:= v1 - v2 @kind int;
  #L211f1e.  return v1;
}
procedure `int` `compare`(`io.grpc.a3` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/grpc/a3;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L211f30.  v1:= (`io.grpc.z2`) v1 @kind object;
  #L211f34.  v2:= (`io.grpc.z2`) v2 @kind object;
  #L211f38.  call temp:= `a`(v0, v1, v2) @signature `Lio/grpc/a3;.a:(Lio/grpc/z2;Lio/grpc/z2;)I` @kind virtual;
  #L211f3e.  v1:= temp;
  #L211f40.  return v1;
}
