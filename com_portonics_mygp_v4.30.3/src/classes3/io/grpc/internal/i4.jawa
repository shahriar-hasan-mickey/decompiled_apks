record `io.grpc.internal.i4` @kind class @AccessFlag  extends `io.grpc.f1` @kind interface {
}
procedure `void` `<init>`(`io.grpc.internal.i4` v0 @kind this) @signature `Lio/grpc/internal/i4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ecd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21ecd6.  return @kind void;
}
procedure `byte`[] `a`(`io.grpc.internal.i4` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/internal/i4;.a:(Ljava/lang/Object;)[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L21ec0c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L21ec10.  call temp:= `d`(v0, v1) @signature `Lio/grpc/internal/i4;.d:(Ljava/lang/Integer;)[B` @kind virtual;
  #L21ec16.  v1:= temp @kind object;
  #L21ec18.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.internal.i4` v0 @kind this, `byte`[] v1 @kind object) @signature `Lio/grpc/internal/i4;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L21ecb4.  call temp:= `c`(v0, v1) @signature `Lio/grpc/internal/i4;.c:([B)Ljava/lang/Integer;` @kind virtual;
  #L21ecba.  v1:= temp @kind object;
  #L21ecbc.  return v1 @kind object;
}
procedure `java.lang.Integer` `c`(`io.grpc.internal.i4` v4 @kind this, `byte`[] v5 @kind object) @signature `Lio/grpc/internal/i4;.c:([B)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21ec2c.  v0:= length @variable v5;
  #L21ec2e.  v1:= 3I;
  #L21ec30.  if v0 < v1 then goto L21ec68;
  #L21ec34.  v0:= 0I;
  #L21ec36.  v0:= v5[v0] @kind byte;
  #L21ec3a.  v0:= v0 + -48;
  #L21ec3e.  v0:= v0 * 100;
  #L21ec42.  v1:= 1I;
  #L21ec44.  v1:= v5[v1] @kind byte;
  #L21ec48.  v1:= v1 + -48;
  #L21ec4c.  v1:= v1 * 10;
  #L21ec50.  v0:= v0 + v1 @kind int;
  #L21ec52.  v1:= 2I;
  #L21ec54.  v5:= v5[v1] @kind byte;
  #L21ec58.  v5:= v5 + -48;
  #L21ec5c.  v0:= v0 + v5 @kind int;
  #L21ec5e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L21ec64.  v5:= temp @kind object;
  #L21ec66.  return v5 @kind object;
  #L21ec68.  v0:= new `java.lang.NumberFormatException`;
  #L21ec6c.  v1:= new `java.lang.StringBuilder`;
  #L21ec70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21ec76.  v2:= "Malformed status code " @kind object;
  #L21ec7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ec80.  v2:= new `java.lang.String`;
  #L21ec84.  v3:= `@@io.grpc.g1.a` @type ^`java.nio.charset.Charset` @kind object;
  #L21ec88.  call `<init>`(v2, v5, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L21ec8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ec94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ec9a.  v5:= temp @kind object;
  #L21ec9c.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21eca2.  throw v0;
}
procedure `byte`[] `d`(`io.grpc.internal.i4` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lio/grpc/internal/i4;.d:(Ljava/lang/Integer;)[B` @AccessFlag PUBLIC {
    temp;

  #L21ebf0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L21ebf4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L21ebfa.  throw v1;
}
