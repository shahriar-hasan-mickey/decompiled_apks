record `io.grpc.internal.b3` @kind class @AccessFlag  extends `io.grpc.internal.ClientStreamListener` @kind interface {
  `io.grpc.internal.ClientStreamListener` `io.grpc.internal.b3.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `io.grpc.internal.b3.b` @AccessFlag PRIVATE_VOLATILE;
  `java.util.List` `io.grpc.internal.b3.c` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/b3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L21a63c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.b3` v1 @kind this, `io.grpc.internal.ClientStreamListener` v2 @kind object) @signature `Lio/grpc/internal/b3;.<init>:(Lio/grpc/internal/ClientStreamListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L21a650.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21a656.  v0:= new `java.util.ArrayList`;
  #L21a65a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21a660.  v1.`io.grpc.internal.b3.c` @type ^`java.util.List` := v0 @kind object;
  #L21a664.  v1.`io.grpc.internal.b3.a` @type ^`io.grpc.internal.ClientStreamListener` := v2 @kind object;
  #L21a668.  return @kind void;
}
procedure `io.grpc.internal.ClientStreamListener` `f`(`io.grpc.internal.b3` v0 @kind object) @signature `Lio/grpc/internal/b3;.f:(Lio/grpc/internal/b3;)Lio/grpc/internal/ClientStreamListener;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L21a624.  v0:= v0.`io.grpc.internal.b3.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L21a628.  return v0 @kind object;
}
procedure `void` `g`(`io.grpc.internal.b3` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L21a6c4.  @monitorenter v1
  #L21a6c6.  v0:= v1.`io.grpc.internal.b3.b` @type ^`boolean` @kind boolean;
  #L21a6ca.  if v0 != 0 then goto L21a6dc;
  #L21a6ce.  v0:= v1.`io.grpc.internal.b3.c` @type ^`java.util.List` @kind object;
  #L21a6d2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21a6d8.  @monitorexit v1
  #L21a6da.  return @kind void;
  #L21a6dc.  @monitorexit v1
  #L21a6de.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L21a6e4.  return @kind void;
  #L21a6e6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21a6e8.  @monitorexit v1
  #L21a6ea.  throw v2;
  catch `java.lang.Throwable` @[L21a6c6..L21a6de] goto L21a6e6;
  catch `java.lang.Throwable` @[L21a6e8..L21a6ea] goto L21a6e6;
}
procedure `void` `a`(`io.grpc.internal.b3` v1 @kind this, `io.grpc.Status` v2 @kind object, `io.grpc.m2` v3 @kind object) @signature `Lio/grpc/internal/b3;.a:(Lio/grpc/Status;Lio/grpc/m2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a67c.  v0:= new `io.grpc.internal.z2`;
  #L21a680.  call `<init>`(v0, v1, v2, v3) @signature `Lio/grpc/internal/z2;.<init>:(Lio/grpc/internal/b3;Lio/grpc/Status;Lio/grpc/m2;)V` @kind direct;
  #L21a686.  call `g`(v1, v0) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @kind direct;
  #L21a68c.  return @kind void;
}
procedure `void` `b`(`io.grpc.internal.b3` v1 @kind this, `io.grpc.internal.s9` v2 @kind object) @signature `Lio/grpc/internal/b3;.b:(Lio/grpc/internal/s9;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a7cc.  v0:= v1.`io.grpc.internal.b3.b` @type ^`boolean` @kind boolean;
  #L21a7d0.  if v0 == 0 then goto L21a7e0;
  #L21a7d4.  v0:= v1.`io.grpc.internal.b3.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L21a7d8.  call `b`(v0, v2) @signature `Lio/grpc/internal/t9;.b:(Lio/grpc/internal/s9;)V` @kind interface;
  #L21a7de.  goto L21a7f0;
  #L21a7e0.  v0:= new `io.grpc.internal.w2`;
  #L21a7e4.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/w2;.<init>:(Lio/grpc/internal/b3;Lio/grpc/internal/s9;)V` @kind direct;
  #L21a7ea.  call `g`(v1, v0) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @kind direct;
  #L21a7f0.  return @kind void;
}
procedure `void` `c`(`io.grpc.internal.b3` v1 @kind this) @signature `Lio/grpc/internal/b3;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a804.  v0:= v1.`io.grpc.internal.b3.b` @type ^`boolean` @kind boolean;
  #L21a808.  if v0 == 0 then goto L21a818;
  #L21a80c.  v0:= v1.`io.grpc.internal.b3.a` @type ^`io.grpc.internal.ClientStreamListener` @kind object;
  #L21a810.  call `c`(v0) @signature `Lio/grpc/internal/t9;.c:()V` @kind interface;
  #L21a816.  goto L21a828;
  #L21a818.  v0:= new `io.grpc.internal.x2`;
  #L21a81c.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/x2;.<init>:(Lio/grpc/internal/b3;)V` @kind direct;
  #L21a822.  call `g`(v1, v0) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @kind direct;
  #L21a828.  return @kind void;
}
procedure `void` `d`(`io.grpc.internal.b3` v1 @kind this, `io.grpc.m2` v2 @kind object) @signature `Lio/grpc/internal/b3;.d:(Lio/grpc/m2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a7a8.  v0:= new `io.grpc.internal.y2`;
  #L21a7ac.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/y2;.<init>:(Lio/grpc/internal/b3;Lio/grpc/m2;)V` @kind direct;
  #L21a7b2.  call `g`(v1, v0) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @kind direct;
  #L21a7b8.  return @kind void;
}
procedure `void` `e`(`io.grpc.internal.b3` v1 @kind this, `io.grpc.Status` v2 @kind object, `io.grpc.internal.ClientStreamListener$RpcProgress` v3 @kind object, `io.grpc.m2` v4 @kind object) @signature `Lio/grpc/internal/b3;.e:(Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/m2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a6a0.  v0:= new `io.grpc.internal.a3`;
  #L21a6a4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/grpc/internal/a3;.<init>:(Lio/grpc/internal/b3;Lio/grpc/Status;Lio/grpc/internal/ClientStreamListener$RpcProgress;Lio/grpc/m2;)V` @kind direct;
  #L21a6aa.  call `g`(v1, v0) @signature `Lio/grpc/internal/b3;.g:(Ljava/lang/Runnable;)V` @kind direct;
  #L21a6b0.  return @kind void;
}
procedure `void` `h`(`io.grpc.internal.b3` v3 @kind this) @signature `Lio/grpc/internal/b3;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21a710.  v0:= new `java.util.ArrayList`;
  #L21a714.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21a71a.  @monitorenter v3
  #L21a71c.  v1:= v3.`io.grpc.internal.b3.c` @type ^`java.util.List` @kind object;
  #L21a720.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L21a726.  v1:= temp;
  #L21a728.  if v1 == 0 then goto L21a73c;
  #L21a72c.  v0:= 0I;
  #L21a72e.  v3.`io.grpc.internal.b3.c` @type ^`java.util.List` := v0 @kind object;
  #L21a732.  v0:= 1I;
  #L21a734.  v3.`io.grpc.internal.b3.b` @type ^`boolean` := v0 @kind boolean;
  #L21a738.  @monitorexit v3
  #L21a73a.  return @kind void;
  #L21a73c.  v1:= v3.`io.grpc.internal.b3.c` @type ^`java.util.List` @kind object;
  #L21a740.  v3.`io.grpc.internal.b3.c` @type ^`java.util.List` := v0 @kind object;
  #L21a744.  @monitorexit v3
  #L21a746.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21a74c.  v0:= temp @kind object;
  #L21a74e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21a754.  v2:= temp;
  #L21a756.  if v2 == 0 then goto L21a76e;
  #L21a75a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21a760.  v2:= temp @kind object;
  #L21a762.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L21a766.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L21a76c.  goto L21a74e;
  #L21a76e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L21a774.  v0:= v1 @kind object;
  #L21a776.  goto L21a71a;
  #L21a778.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21a77a.  @monitorexit v3
  #L21a77c.  goto L21a780;
  #L21a77e.  throw v0;
  #L21a780.  goto L21a77e;
  catch `java.lang.Throwable` @[L21a71c..L21a746] goto L21a778;
  catch `java.lang.Throwable` @[L21a77a..L21a77c] goto L21a778;
}
