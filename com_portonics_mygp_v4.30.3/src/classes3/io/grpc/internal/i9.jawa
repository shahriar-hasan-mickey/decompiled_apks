record `io.grpc.internal.i9` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `long` `@@io.grpc.internal.i9.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/i9;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L22be38.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L22be3c.  v1:= 1L;
  #L22be40.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L22be46.  v0:= temp @kind wide;
  #L22be48.  `@@io.grpc.internal.i9.a` @type ^`long` := v0 @kind wide;
  #L22be4c.  return @kind void;
}
procedure `io.grpc.internal.t8` `A`(`java.util.Map` v6 @kind object) @signature `Lio/grpc/internal/i9;.A:(Ljava/util/Map;)Lio/grpc/internal/t8;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22b1e8.  if v6 == 0 then goto L22b26e;
  #L22b1ec.  v0:= "retryThrottling" @kind object;
  #L22b1f0.  call temp:= `containsKey`(v6, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b1f6.  v1:= temp;
  #L22b1f8.  if v1 != 0 then goto L22b1fe;
  #L22b1fc.  goto L22b26e;
  #L22b1fe.  call temp:= `u`(v6, v0) @signature `Lio/grpc/internal/i9;.u:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L22b204.  v6:= temp @kind object;
  #L22b206.  v0:= "maxTokens" @kind object;
  #L22b20a.  call temp:= `f`(v6, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b210.  v0:= temp @kind object;
  #L22b212.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Double;.floatValue:()F` @kind virtual;
  #L22b218.  v0:= temp;
  #L22b21a.  v1:= "tokenRatio" @kind object;
  #L22b21e.  call temp:= `f`(v6, v1) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b224.  v6:= temp @kind object;
  #L22b226.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Double;.floatValue:()F` @kind virtual;
  #L22b22c.  v6:= temp;
  #L22b22e.  v1:= 1I;
  #L22b230.  v2:= 0I;
  #L22b232.  v3:= 0I;
  #L22b234.  v4:= fcmpl(v0, v3);
  #L22b238.  if v4 <= 0 then goto L22b240;
  #L22b23c.  v4:= 1I;
  #L22b23e.  goto L22b242;
  #L22b240.  v4:= 0I;
  #L22b242.  v5:= "maxToken should be greater than zero" @kind object;
  #L22b246.  call `z`(v4, v5) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L22b24c.  v3:= fcmpl(v6, v3);
  #L22b250.  if v3 <= 0 then goto L22b256;
  #L22b254.  goto L22b258;
  #L22b256.  v1:= 0I;
  #L22b258.  v2:= "tokenRatio should be greater than zero" @kind object;
  #L22b25c.  call `z`(v1, v2) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L22b262.  v1:= new `io.grpc.internal.t8`;
  #L22b266.  call `<init>`(v1, v0, v6) @signature `Lio/grpc/internal/t8;.<init>:(FF)V` @kind direct;
  #L22b26c.  return v1 @kind object;
  #L22b26e.  v6:= 0I;
  #L22b270.  return v6 @kind object;
}
procedure `java.lang.Long` `B`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.B:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b668.  v0:= "timeout" @kind object;
  #L22b66c.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b672.  v1:= temp;
  #L22b674.  if v1 != 0 then goto L22b67c;
  #L22b678.  v2:= 0I;
  #L22b67a.  return v2 @kind object;
  #L22b67c.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b682.  v2:= temp @kind object;
  #L22b684.  call temp:= `E`(v2) @signature `Lio/grpc/internal/i9;.E:(Ljava/lang/String;)J` @kind static;
  #L22b68a.  v0:= temp @kind wide;
  #L22b68c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L22b692.  v2:= temp @kind object;
  #L22b694.  return v2 @kind object;
  #L22b696.  v2:= Exception @type ^`java.text.ParseException` @kind object;
  #L22b698.  v0:= new `java.lang.RuntimeException`;
  #L22b69c.  call `<init>`(v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22b6a2.  throw v0;
  catch `java.text.ParseException` @[L22b684..L22b694] goto L22b696;
}
procedure `java.lang.Boolean` `C`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.C:(Ljava/util/Map;)Ljava/lang/Boolean;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b38c.  v0:= "waitForReady" @kind object;
  #L22b390.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b396.  v1:= temp;
  #L22b398.  if v1 != 0 then goto L22b3a0;
  #L22b39c.  v2:= 0I;
  #L22b39e.  return v2 @kind object;
  #L22b3a0.  call temp:= `e`(v2, v0) @signature `Lio/grpc/internal/i9;.e:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;` @kind static;
  #L22b3a6.  v2:= temp @kind object;
  #L22b3a8.  return v2 @kind object;
}
procedure `long` `D`(`long` v8 , `int` v10 ) @signature `Lio/grpc/internal/i9;.D:(JI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L22bbc4.  v0:= (`long`) v10 @kind i2l;
  #L22bbc6.  v2:= `@@io.grpc.internal.i9.a` @type ^`long` @kind wide;
  #L22bbca.  v4:= -v2 @kind long;
  #L22bbcc.  v6:= lcmp(v0, v4);
  #L22bbd0.  if v6 <= 0 then goto L22bbdc;
  #L22bbd4.  v4:= lcmp(v0, v2);
  #L22bbd8.  if v4 < 0 then goto L22bbec;
  #L22bbdc.  v4:= v0 / v2 @kind long;
  #L22bbe0.  call temp:= `a`(v8, v4) @signature `Lcom/google/common/math/LongMath;.a:(JJ)J` @kind static;
  #L22bbe6.  v8:= temp @kind wide;
  #L22bbe8.  v0:= v0 %% v2 @kind long;
  #L22bbea.  v10:= (`int`) v0 @kind l2i;
  #L22bbec.  v0:= 1L;
  #L22bbf0.  v4:= 0L;
  #L22bbf4.  v6:= lcmp(v8, v4);
  #L22bbf8.  if v6 <= 0 then goto L22bc08;
  #L22bbfc.  if v10 >= 0 then goto L22bc08;
  #L22bc00.  v6:= (`long`) v10 @kind i2l;
  #L22bc02.  v6:= v6 + v2 @kind long;
  #L22bc04.  v10:= (`int`) v6 @kind l2i;
  #L22bc06.  v8:= v8 - v0 @kind long;
  #L22bc08.  v6:= lcmp(v8, v4);
  #L22bc0c.  if v6 >= 0 then goto L22bc1c;
  #L22bc10.  if v10 <= 0 then goto L22bc1c;
  #L22bc14.  v4:= (`long`) v10 @kind i2l;
  #L22bc16.  v4:= v4 - v2 @kind long;
  #L22bc18.  v10:= (`int`) v4 @kind l2i;
  #L22bc1a.  v8:= v8 + v0 @kind long;
  #L22bc1c.  call temp:= `c`(v8, v10) @signature `Lio/grpc/internal/i9;.c:(JI)Z` @kind static;
  #L22bc22.  v0:= temp;
  #L22bc24.  if v0 == 0 then goto L22bc40;
  #L22bc28.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L22bc2c.  call temp:= `toNanos`(v0, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L22bc32.  v8:= temp @kind wide;
  #L22bc34.  v0:= (`long`) v10 @kind i2l;
  #L22bc36.  call temp:= `G`(v8, v0) @signature `Lio/grpc/internal/i9;.G:(JJ)J` @kind static;
  #L22bc3c.  v8:= temp @kind wide;
  #L22bc3e.  return v8 @kind wide;
  #L22bc40.  v0:= new `java.lang.IllegalArgumentException`;
  #L22bc44.  v1:= 2I;
  #L22bc46.  v1:= new `java.lang.Object`[v1];
  #L22bc4a.  v2:= 0I;
  #L22bc4c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L22bc52.  v8:= temp @kind object;
  #L22bc54.  v1[v2]:= v8 @kind object;
  #L22bc58.  v8:= 1I;
  #L22bc5a.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22bc60.  v9:= temp @kind object;
  #L22bc62.  v1[v8]:= v9 @kind object;
  #L22bc66.  v8:= "Duration is not valid. See proto definition for valid values. Seconds (%s) must be in range [-315,576,000,000, +315,576,000,000]. Nanos (%s) must be in range [-999,999,999, +999,999,999]. Nanos must have the same sign as seconds" @kind object;
  #L22bc6a.  call temp:= `format`(v8, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22bc70.  v8:= temp @kind object;
  #L22bc72.  call `<init>`(v0, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22bc78.  throw v0;
}
procedure `long` `E`(`java.lang.String` v9 @kind object) @signature `Lio/grpc/internal/i9;.E:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22bc8c.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22bc92.  v0:= temp;
  #L22bc94.  v1:= "Invalid duration string: " @kind object;
  #L22bc98.  v2:= 0I;
  #L22bc9a.  if v0 != 0 then goto L22bd8e;
  #L22bc9e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22bca4.  v0:= temp;
  #L22bca6.  v3:= 1I;
  #L22bca8.  v0:= v0 - v3 @kind int;
  #L22bcaa.  call temp:= `charAt`(v9, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22bcb0.  v0:= temp;
  #L22bcb2.  v4:= 115I;
  #L22bcb6.  if v0 != v4 then goto L22bd8e;
  #L22bcba.  call temp:= `charAt`(v9, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22bcc0.  v0:= temp;
  #L22bcc2.  v4:= 45I;
  #L22bcc6.  if v0 != v4 then goto L22bcd6;
  #L22bcca.  call temp:= `substring`(v9, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22bcd0.  v9:= temp @kind object;
  #L22bcd2.  v0:= 1I;
  #L22bcd4.  goto L22bcd8;
  #L22bcd6.  v0:= 0I;
  #L22bcd8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22bcde.  v4:= temp;
  #L22bce0.  v4:= v4 - v3 @kind int;
  #L22bce2.  call temp:= `substring`(v9, v2, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22bce8.  v3:= temp @kind object;
  #L22bcea.  v4:= 46I;
  #L22bcee.  call temp:= `indexOf`(v3, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22bcf4.  v4:= temp;
  #L22bcf6.  v5:= -1I;
  #L22bcf8.  if v4 == v5 then goto L22bd12;
  #L22bcfc.  v5:= v4 + 1;
  #L22bd00.  call temp:= `substring`(v3, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22bd06.  v5:= temp @kind object;
  #L22bd08.  call temp:= `substring`(v3, v2, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22bd0e.  v3:= temp @kind object;
  #L22bd10.  goto L22bd16;
  #L22bd12.  v5:= "" @kind object;
  #L22bd16.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L22bd1c.  v3:= temp @kind wide;
  #L22bd1e.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22bd24.  v6:= temp;
  #L22bd26.  if v6 == 0 then goto L22bd2e;
  #L22bd2a.  v5:= 0I;
  #L22bd2c.  goto L22bd36;
  #L22bd2e.  call temp:= `F`(v5) @signature `Lio/grpc/internal/i9;.F:(Ljava/lang/String;)I` @kind static;
  #L22bd34.  v5:= temp;
  #L22bd36.  v6:= 0L;
  #L22bd3a.  v8:= lcmp(v3, v6);
  #L22bd3e.  if v8 < 0 then goto L22bd64;
  #L22bd42.  if v0 == 0 then goto L22bd4a;
  #L22bd46.  v3:= -v3 @kind long;
  #L22bd48.  v5:= -v5 @kind int;
  #L22bd4a.  call temp:= `D`(v3, v5) @signature `Lio/grpc/internal/i9;.D:(JI)J` @kind static;
  #L22bd50.  v0:= temp @kind wide;
  #L22bd52.  return v0 @kind wide;
  #L22bd54.  v9:= new `java.text.ParseException`;
  #L22bd58.  v0:= "Duration value is out of range." @kind object;
  #L22bd5c.  call `<init>`(v9, v0, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22bd62.  throw v9;
  #L22bd64.  v0:= new `java.text.ParseException`;
  #L22bd68.  v3:= new `java.lang.StringBuilder`;
  #L22bd6c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22bd72.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22bd78.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22bd7e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22bd84.  v9:= temp @kind object;
  #L22bd86.  call `<init>`(v0, v9, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22bd8c.  throw v0;
  #L22bd8e.  v0:= new `java.text.ParseException`;
  #L22bd92.  v3:= new `java.lang.StringBuilder`;
  #L22bd96.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22bd9c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22bda2.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22bda8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22bdae.  v9:= temp @kind object;
  #L22bdb0.  call `<init>`(v0, v9, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22bdb6.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L22bd4a..L22bd52] goto L22bd54;
}
procedure `int` `F`(`java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/i9;.F:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22b174.  v0:= 0I;
  #L22b176.  v1:= 0I;
  #L22b178.  v2:= 0I;
  #L22b17a.  v3:= 9I;
  #L22b17e.  if v1 >= v3 then goto L22b1d6;
  #L22b182.  v2:= v2 * 10;
  #L22b186.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22b18c.  v3:= temp;
  #L22b18e.  if v1 >= v3 then goto L22b1d0;
  #L22b192.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22b198.  v3:= temp;
  #L22b19a.  v4:= 48I;
  #L22b19e.  if v3 < v4 then goto L22b1c0;
  #L22b1a2.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22b1a8.  v3:= temp;
  #L22b1aa.  v5:= 57I;
  #L22b1ae.  if v3 > v5 then goto L22b1c0;
  #L22b1b2.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22b1b8.  v3:= temp;
  #L22b1ba.  v3:= v3 - v4 @kind int;
  #L22b1bc.  v2:= v2 + v3 @kind int;
  #L22b1be.  goto L22b1d0;
  #L22b1c0.  v6:= new `java.text.ParseException`;
  #L22b1c4.  v1:= "Invalid nanoseconds." @kind object;
  #L22b1c8.  call `<init>`(v6, v1, v0) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L22b1ce.  throw v6;
  #L22b1d0.  v1:= v1 + 1;
  #L22b1d4.  goto L22b17a;
  #L22b1d6.  return v2;
}
procedure `long` `G`(`long` v7 , `long` v9 ) @signature `Lio/grpc/internal/i9;.G:(JJ)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22bdd8.  v0:= v7 + v9 @kind long;
  #L22bddc.  v9:= v9 ^~ v7 @kind long;
  #L22bdde.  v2:= 1I;
  #L22bde0.  v3:= 0I;
  #L22bde2.  v4:= 0L;
  #L22bde6.  v6:= lcmp(v9, v4);
  #L22bdea.  if v6 >= 0 then goto L22bdf2;
  #L22bdee.  v9:= 1I;
  #L22bdf0.  goto L22bdf4;
  #L22bdf2.  v9:= 0I;
  #L22bdf4.  v7:= v7 ^~ v0 @kind long;
  #L22bdf6.  v10:= lcmp(v7, v4);
  #L22bdfa.  if v10 < 0 then goto L22be00;
  #L22bdfe.  goto L22be02;
  #L22be00.  v2:= 0I;
  #L22be02.  v7:= v9 ^| v2 @kind int;
  #L22be06.  if v7 == 0 then goto L22be0c;
  #L22be0a.  return v0 @kind wide;
  #L22be0c.  v7:= 9223372036854775807L;
  #L22be16.  v9:= 63I;
  #L22be1a.  v9:= v0 ^>> v9 @kind long;
  #L22be1e.  v0:= 1L;
  #L22be22.  v9:= v9 ^~ v0 @kind long;
  #L22be24.  v9:= v9 + v7 @kind long;
  #L22be26.  return v9 @kind wide;
}
procedure `io.grpc.internal.h9` `H`(`java.util.Map` v3 @kind object) @signature `Lio/grpc/internal/i9;.H:(Ljava/util/Map;)Lio/grpc/internal/h9;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22b284.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L22b28a.  v0:= temp;
  #L22b28c.  v1:= 1I;
  #L22b28e.  if v0 != v1 then goto L22b2ce;
  #L22b292.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L22b298.  v0:= temp @kind object;
  #L22b29a.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22b2a0.  v0:= temp @kind object;
  #L22b2a2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L22b2a8.  v0:= temp @kind object;
  #L22b2aa.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L22b2ae.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L22b2b4.  v0:= temp @kind object;
  #L22b2b6.  v0:= (`java.lang.String`) v0 @kind object;
  #L22b2ba.  v1:= new `io.grpc.internal.h9`;
  #L22b2be.  call temp:= `u`(v3, v0) @signature `Lio/grpc/internal/i9;.u:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L22b2c4.  v3:= temp @kind object;
  #L22b2c6.  call `<init>`(v1, v0, v3) @signature `Lio/grpc/internal/h9;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L22b2cc.  return v1 @kind object;
  #L22b2ce.  v0:= new `java.lang.RuntimeException`;
  #L22b2d2.  v1:= new `java.lang.StringBuilder`;
  #L22b2d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22b2dc.  v2:= "There are " @kind object;
  #L22b2e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22b2e6.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L22b2ec.  v2:= temp;
  #L22b2ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L22b2f4.  v2:= " fields in a LoadBalancingConfig object. Exactly one is expected. Config=" @kind object;
  #L22b2f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22b2fe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22b304.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22b30a.  v3:= temp @kind object;
  #L22b30c.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b312.  throw v0;
}
procedure `java.util.List` `I`(`java.util.List` v2 @kind object) @signature `Lio/grpc/internal/i9;.I:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L22baa8.  v0:= new `java.util.ArrayList`;
  #L22baac.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22bab2.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22bab8.  v2:= temp @kind object;
  #L22baba.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L22bac0.  v1:= temp;
  #L22bac2.  if v1 == 0 then goto L22bae2;
  #L22bac6.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L22bacc.  v1:= temp @kind object;
  #L22bace.  v1:= (`java.util.Map`) v1 @kind object;
  #L22bad2.  call temp:= `H`(v1) @signature `Lio/grpc/internal/i9;.H:(Ljava/util/Map;)Lio/grpc/internal/h9;` @kind static;
  #L22bad8.  v1:= temp @kind object;
  #L22bada.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L22bae0.  goto L22baba;
  #L22bae2.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22bae8.  v2:= temp @kind object;
  #L22baea.  return v2 @kind object;
}
procedure `java.util.List` `a`(`java.util.List` v5 @kind object) @signature `Lio/grpc/internal/i9;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22b7bc.  v0:= 0I;
  #L22b7be.  v1:= 0I;
  #L22b7c0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22b7c6.  v2:= temp;
  #L22b7c8.  if v1 >= v2 then goto L22b820;
  #L22b7cc.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22b7d2.  v2:= temp @kind object;
  #L22b7d4.  v2:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L22b7d8.  if v2 == 0 then goto L22b7e2;
  #L22b7dc.  v1:= v1 + 1;
  #L22b7e0.  goto L22b7c0;
  #L22b7e2.  v2:= new `java.lang.ClassCastException`;
  #L22b7e6.  v3:= 3I;
  #L22b7e8.  v3:= new `java.lang.Object`[v3];
  #L22b7ec.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22b7f2.  v4:= temp @kind object;
  #L22b7f4.  v3[v0]:= v4 @kind object;
  #L22b7f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b7fe.  v0:= temp @kind object;
  #L22b800.  v1:= 1I;
  #L22b802.  v3[v1]:= v0 @kind object;
  #L22b806.  v0:= 2I;
  #L22b808.  v3[v0]:= v5 @kind object;
  #L22b80c.  v5:= "value %s for idx %d in %s is not object" @kind object;
  #L22b810.  call temp:= `format`(v5, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b816.  v5:= temp @kind object;
  #L22b818.  call `<init>`(v2, v5) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b81e.  throw v2;
  #L22b820.  return v5 @kind object;
}
procedure `java.util.List` `b`(`java.util.List` v5 @kind object) @signature `Lio/grpc/internal/i9;.b:(Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22b834.  v0:= 0I;
  #L22b836.  v1:= 0I;
  #L22b838.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22b83e.  v2:= temp;
  #L22b840.  if v1 >= v2 then goto L22b898;
  #L22b844.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22b84a.  v2:= temp @kind object;
  #L22b84c.  v2:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L22b850.  if v2 == 0 then goto L22b85a;
  #L22b854.  v1:= v1 + 1;
  #L22b858.  goto L22b838;
  #L22b85a.  v2:= new `java.lang.ClassCastException`;
  #L22b85e.  v3:= 3I;
  #L22b860.  v3:= new `java.lang.Object`[v3];
  #L22b864.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22b86a.  v4:= temp @kind object;
  #L22b86c.  v3[v0]:= v4 @kind object;
  #L22b870.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b876.  v0:= temp @kind object;
  #L22b878.  v1:= 1I;
  #L22b87a.  v3[v1]:= v0 @kind object;
  #L22b87e.  v0:= 2I;
  #L22b880.  v3[v0]:= v5 @kind object;
  #L22b884.  v5:= "value '%s' for idx %d in '%s' is not string" @kind object;
  #L22b888.  call temp:= `format`(v5, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b88e.  v5:= temp @kind object;
  #L22b890.  call `<init>`(v2, v5) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b896.  throw v2;
  #L22b898.  return v5 @kind object;
}
procedure `boolean` `c`(`long` v6 , `int` v8 ) @signature `Lio/grpc/internal/i9;.c:(JI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22b0f8.  v0:= 0I;
  #L22b0fa.  v1:= -315576000000L;
  #L22b104.  v3:= lcmp(v6, v1);
  #L22b108.  if v3 < 0 then goto L22b160;
  #L22b10c.  v1:= 315576000000L;
  #L22b116.  v3:= lcmp(v6, v1);
  #L22b11a.  if v3 <= 0 then goto L22b120;
  #L22b11e.  goto L22b160;
  #L22b120.  v1:= (`long`) v8 @kind i2l;
  #L22b122.  v3:= -999999999L;
  #L22b128.  v5:= lcmp(v1, v3);
  #L22b12c.  if v5 < 0 then goto L22b160;
  #L22b130.  v3:= `@@io.grpc.internal.i9.a` @type ^`long` @kind wide;
  #L22b134.  v5:= lcmp(v1, v3);
  #L22b138.  if v5 < 0 then goto L22b13e;
  #L22b13c.  goto L22b160;
  #L22b13e.  v1:= 0L;
  #L22b142.  v3:= lcmp(v6, v1);
  #L22b146.  if v3 < 0 then goto L22b14e;
  #L22b14a.  if v8 >= 0 then goto L22b15c;
  #L22b14e.  v3:= lcmp(v6, v1);
  #L22b152.  if v3 > 0 then goto L22b160;
  #L22b156.  if v8 <= 0 then goto L22b15c;
  #L22b15a.  goto L22b160;
  #L22b15c.  v6:= 1I;
  #L22b15e.  return v6;
  #L22b160.  return v0;
}
procedure `java.lang.Double` `d`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.d:(Ljava/util/Map;)Ljava/lang/Double;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b3bc.  v0:= "backoffMultiplier" @kind object;
  #L22b3c0.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b3c6.  v1:= temp;
  #L22b3c8.  if v1 != 0 then goto L22b3d0;
  #L22b3cc.  v2:= 0I;
  #L22b3ce.  return v2 @kind object;
  #L22b3d0.  call temp:= `f`(v2, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b3d6.  v2:= temp @kind object;
  #L22b3d8.  return v2 @kind object;
}
procedure `java.lang.Boolean` `e`(`java.util.Map` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/i9;.e:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22b324.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b32a.  v0:= temp;
  #L22b32c.  if v0 != 0 then goto L22b334;
  #L22b330.  v4:= 0I;
  #L22b332.  return v4 @kind object;
  #L22b334.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22b33a.  v0:= temp @kind object;
  #L22b33c.  v1:= instanceof @variable v0 @type ^`java.lang.Boolean` @kind boolean;
  #L22b340.  if v1 == 0 then goto L22b34a;
  #L22b344.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L22b348.  return v0 @kind object;
  #L22b34a.  v1:= new `java.lang.ClassCastException`;
  #L22b34e.  v2:= 3I;
  #L22b350.  v2:= new `java.lang.Object`[v2];
  #L22b354.  v3:= 0I;
  #L22b356.  v2[v3]:= v0 @kind object;
  #L22b35a.  v0:= 1I;
  #L22b35c.  v2[v0]:= v5 @kind object;
  #L22b360.  v5:= 2I;
  #L22b362.  v2[v5]:= v4 @kind object;
  #L22b366.  v4:= "value '%s' for key '%s' in '%s' is not Boolean" @kind object;
  #L22b36a.  call temp:= `format`(v4, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b370.  v4:= temp @kind object;
  #L22b372.  call `<init>`(v1, v4) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b378.  throw v1;
}
procedure `java.lang.Double` `f`(`java.util.Map` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22b3ec.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b3f2.  v0:= temp;
  #L22b3f4.  if v0 != 0 then goto L22b3fc;
  #L22b3f8.  v4:= 0I;
  #L22b3fa.  return v4 @kind object;
  #L22b3fc.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22b402.  v0:= temp @kind object;
  #L22b404.  v1:= instanceof @variable v0 @type ^`java.lang.Double` @kind boolean;
  #L22b408.  if v1 == 0 then goto L22b412;
  #L22b40c.  v0:= (`java.lang.Double`) v0 @kind object;
  #L22b410.  return v0 @kind object;
  #L22b412.  v1:= new `java.lang.ClassCastException`;
  #L22b416.  v2:= 3I;
  #L22b418.  v2:= new `java.lang.Object`[v2];
  #L22b41c.  v3:= 0I;
  #L22b41e.  v2[v3]:= v0 @kind object;
  #L22b422.  v0:= 1I;
  #L22b424.  v2[v0]:= v5 @kind object;
  #L22b428.  v5:= 2I;
  #L22b42a.  v2[v5]:= v4 @kind object;
  #L22b42e.  v4:= "value '%s' for key '%s' in '%s' is not Double" @kind object;
  #L22b432.  call temp:= `format`(v4, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b438.  v4:= temp @kind object;
  #L22b43a.  call `<init>`(v1, v4) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b440.  throw v1;
}
procedure `java.lang.Long` `g`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.g:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b554.  v0:= "hedgingDelay" @kind object;
  #L22b558.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b55e.  v1:= temp;
  #L22b560.  if v1 != 0 then goto L22b568;
  #L22b564.  v2:= 0I;
  #L22b566.  return v2 @kind object;
  #L22b568.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b56e.  v2:= temp @kind object;
  #L22b570.  call temp:= `E`(v2) @signature `Lio/grpc/internal/i9;.E:(Ljava/lang/String;)J` @kind static;
  #L22b576.  v0:= temp @kind wide;
  #L22b578.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L22b57e.  v2:= temp @kind object;
  #L22b580.  return v2 @kind object;
  #L22b582.  v2:= Exception @type ^`java.text.ParseException` @kind object;
  #L22b584.  v0:= new `java.lang.RuntimeException`;
  #L22b588.  call `<init>`(v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22b58e.  throw v0;
  catch `java.text.ParseException` @[L22b570..L22b580] goto L22b582;
}
procedure `java.util.Map` `h`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.h:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22bafc.  v0:= "hedgingPolicy" @kind object;
  #L22bb00.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22bb06.  v1:= temp;
  #L22bb08.  if v1 != 0 then goto L22bb10;
  #L22bb0c.  v2:= 0I;
  #L22bb0e.  return v2 @kind object;
  #L22bb10.  call temp:= `u`(v2, v0) @signature `Lio/grpc/internal/i9;.u:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L22bb16.  v2:= temp @kind object;
  #L22bb18.  return v2 @kind object;
}
procedure `java.lang.Long` `i`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.i:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b5b0.  v0:= "initialBackoff" @kind object;
  #L22b5b4.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b5ba.  v1:= temp;
  #L22b5bc.  if v1 != 0 then goto L22b5c4;
  #L22b5c0.  v2:= 0I;
  #L22b5c2.  return v2 @kind object;
  #L22b5c4.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b5ca.  v2:= temp @kind object;
  #L22b5cc.  call temp:= `E`(v2) @signature `Lio/grpc/internal/i9;.E:(Ljava/lang/String;)J` @kind static;
  #L22b5d2.  v0:= temp @kind wide;
  #L22b5d4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L22b5da.  v2:= temp @kind object;
  #L22b5dc.  return v2 @kind object;
  #L22b5de.  v2:= Exception @type ^`java.text.ParseException` @kind object;
  #L22b5e0.  v0:= new `java.lang.RuntimeException`;
  #L22b5e4.  call `<init>`(v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22b5ea.  throw v0;
  catch `java.text.ParseException` @[L22b5cc..L22b5dc] goto L22b5de;
}
procedure `java.util.List` `j`(`java.util.Map` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22b8ac.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b8b2.  v0:= temp;
  #L22b8b4.  if v0 != 0 then goto L22b8bc;
  #L22b8b8.  v4:= 0I;
  #L22b8ba.  return v4 @kind object;
  #L22b8bc.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22b8c2.  v0:= temp @kind object;
  #L22b8c4.  v1:= instanceof @variable v0 @type ^`java.util.List` @kind boolean;
  #L22b8c8.  if v1 == 0 then goto L22b8d2;
  #L22b8cc.  v0:= (`java.util.List`) v0 @kind object;
  #L22b8d0.  return v0 @kind object;
  #L22b8d2.  v1:= new `java.lang.ClassCastException`;
  #L22b8d6.  v2:= 3I;
  #L22b8d8.  v2:= new `java.lang.Object`[v2];
  #L22b8dc.  v3:= 0I;
  #L22b8de.  v2[v3]:= v0 @kind object;
  #L22b8e2.  v0:= 1I;
  #L22b8e4.  v2[v0]:= v5 @kind object;
  #L22b8e8.  v5:= 2I;
  #L22b8ea.  v2[v5]:= v4 @kind object;
  #L22b8ee.  v4:= "value '%s' for key '%s' in '%s' is not List" @kind object;
  #L22b8f2.  call temp:= `format`(v4, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b8f8.  v4:= temp @kind object;
  #L22b8fa.  call `<init>`(v1, v4) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b900.  throw v1;
}
procedure `java.util.List` `k`(`java.util.Map` v3 @kind object) @signature `Lio/grpc/internal/i9;.k:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22b914.  v0:= new `java.util.ArrayList`;
  #L22b918.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22b91e.  v1:= "loadBalancingConfig" @kind object;
  #L22b922.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b928.  v2:= temp;
  #L22b92a.  if v2 == 0 then goto L22b966;
  #L22b92e.  call temp:= `j`(v3, v1) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22b934.  v1:= temp @kind object;
  #L22b936.  call temp:= `a`(v1) @signature `Lio/grpc/internal/i9;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22b93c.  v1:= temp @kind object;
  #L22b93e.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22b944.  v1:= temp @kind object;
  #L22b946.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L22b94c.  v2:= temp;
  #L22b94e.  if v2 == 0 then goto L22b966;
  #L22b952.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L22b958.  v2:= temp @kind object;
  #L22b95a.  v2:= (`java.util.Map`) v2 @kind object;
  #L22b95e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22b964.  goto L22b946;
  #L22b966.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L22b96c.  v1:= temp;
  #L22b96e.  if v1 == 0 then goto L22b9ac;
  #L22b972.  v1:= "loadBalancingPolicy" @kind object;
  #L22b976.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b97c.  v2:= temp;
  #L22b97e.  if v2 == 0 then goto L22b9ac;
  #L22b982.  call temp:= `z`(v3, v1) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b988.  v3:= temp @kind object;
  #L22b98a.  v1:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L22b98e.  call temp:= `toLowerCase`(v3, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L22b994.  v3:= temp @kind object;
  #L22b996.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L22b99c.  v1:= temp @kind object;
  #L22b99e.  call temp:= `singletonMap`(v3, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L22b9a4.  v3:= temp @kind object;
  #L22b9a6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22b9ac.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22b9b2.  v3:= temp @kind object;
  #L22b9b4.  return v3 @kind object;
}
procedure `java.lang.Integer` `l`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.l:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b454.  v0:= "maxAttempts" @kind object;
  #L22b458.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b45e.  v1:= temp;
  #L22b460.  if v1 != 0 then goto L22b468;
  #L22b464.  v2:= 0I;
  #L22b466.  return v2 @kind object;
  #L22b468.  call temp:= `f`(v2, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b46e.  v2:= temp @kind object;
  #L22b470.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L22b476.  v2:= temp;
  #L22b478.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b47e.  v2:= temp @kind object;
  #L22b480.  return v2 @kind object;
}
procedure `java.lang.Integer` `m`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.m:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b494.  v0:= "maxAttempts" @kind object;
  #L22b498.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b49e.  v1:= temp;
  #L22b4a0.  if v1 != 0 then goto L22b4a8;
  #L22b4a4.  v2:= 0I;
  #L22b4a6.  return v2 @kind object;
  #L22b4a8.  call temp:= `f`(v2, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b4ae.  v2:= temp @kind object;
  #L22b4b0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L22b4b6.  v2:= temp;
  #L22b4b8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b4be.  v2:= temp @kind object;
  #L22b4c0.  return v2 @kind object;
}
procedure `java.lang.Long` `n`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.n:(Ljava/util/Map;)Ljava/lang/Long;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b60c.  v0:= "maxBackoff" @kind object;
  #L22b610.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b616.  v1:= temp;
  #L22b618.  if v1 != 0 then goto L22b620;
  #L22b61c.  v2:= 0I;
  #L22b61e.  return v2 @kind object;
  #L22b620.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b626.  v2:= temp @kind object;
  #L22b628.  call temp:= `E`(v2) @signature `Lio/grpc/internal/i9;.E:(Ljava/lang/String;)J` @kind static;
  #L22b62e.  v0:= temp @kind wide;
  #L22b630.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L22b636.  v2:= temp @kind object;
  #L22b638.  return v2 @kind object;
  #L22b63a.  v2:= Exception @type ^`java.text.ParseException` @kind object;
  #L22b63c.  v0:= new `java.lang.RuntimeException`;
  #L22b640.  call `<init>`(v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22b646.  throw v0;
  catch `java.text.ParseException` @[L22b628..L22b638] goto L22b63a;
}
procedure `java.lang.Integer` `o`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.o:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b4d4.  v0:= "maxRequestMessageBytes" @kind object;
  #L22b4d8.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b4de.  v1:= temp;
  #L22b4e0.  if v1 != 0 then goto L22b4e8;
  #L22b4e4.  v2:= 0I;
  #L22b4e6.  return v2 @kind object;
  #L22b4e8.  call temp:= `f`(v2, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b4ee.  v2:= temp @kind object;
  #L22b4f0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L22b4f6.  v2:= temp;
  #L22b4f8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b4fe.  v2:= temp @kind object;
  #L22b500.  return v2 @kind object;
}
procedure `java.lang.Integer` `p`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.p:(Ljava/util/Map;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b514.  v0:= "maxResponseMessageBytes" @kind object;
  #L22b518.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b51e.  v1:= temp;
  #L22b520.  if v1 != 0 then goto L22b528;
  #L22b524.  v2:= 0I;
  #L22b526.  return v2 @kind object;
  #L22b528.  call temp:= `f`(v2, v0) @signature `Lio/grpc/internal/i9;.f:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L22b52e.  v2:= temp @kind object;
  #L22b530.  call temp:= `intValue`(v2) @signature `Ljava/lang/Double;.intValue:()I` @kind virtual;
  #L22b536.  v2:= temp;
  #L22b538.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L22b53e.  v2:= temp @kind object;
  #L22b540.  return v2 @kind object;
}
procedure `java.util.List` `q`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.q:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b9c8.  v0:= "methodConfig" @kind object;
  #L22b9cc.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b9d2.  v1:= temp;
  #L22b9d4.  if v1 != 0 then goto L22b9dc;
  #L22b9d8.  v2:= 0I;
  #L22b9da.  return v2 @kind object;
  #L22b9dc.  call temp:= `j`(v2, v0) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22b9e2.  v2:= temp @kind object;
  #L22b9e4.  call temp:= `a`(v2) @signature `Lio/grpc/internal/i9;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22b9ea.  v2:= temp @kind object;
  #L22b9ec.  return v2 @kind object;
}
procedure `java.lang.String` `r`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.r:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b6c4.  v0:= "method" @kind object;
  #L22b6c8.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b6ce.  v1:= temp;
  #L22b6d0.  if v1 != 0 then goto L22b6d8;
  #L22b6d4.  v2:= 0I;
  #L22b6d6.  return v2 @kind object;
  #L22b6d8.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b6de.  v2:= temp @kind object;
  #L22b6e0.  return v2 @kind object;
}
procedure `java.util.List` `s`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.s:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22ba00.  v0:= "name" @kind object;
  #L22ba04.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22ba0a.  v1:= temp;
  #L22ba0c.  if v1 != 0 then goto L22ba14;
  #L22ba10.  v2:= 0I;
  #L22ba12.  return v2 @kind object;
  #L22ba14.  call temp:= `j`(v2, v0) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22ba1a.  v2:= temp @kind object;
  #L22ba1c.  call temp:= `a`(v2) @signature `Lio/grpc/internal/i9;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22ba22.  v2:= temp @kind object;
  #L22ba24.  return v2 @kind object;
}
procedure `java.util.List` `t`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.t:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22ba38.  v0:= "nonFatalStatusCodes" @kind object;
  #L22ba3c.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22ba42.  v1:= temp;
  #L22ba44.  if v1 != 0 then goto L22ba4c;
  #L22ba48.  v2:= 0I;
  #L22ba4a.  return v2 @kind object;
  #L22ba4c.  call temp:= `j`(v2, v0) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22ba52.  v2:= temp @kind object;
  #L22ba54.  call temp:= `b`(v2) @signature `Lio/grpc/internal/i9;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22ba5a.  v2:= temp @kind object;
  #L22ba5c.  return v2 @kind object;
}
procedure `java.util.Map` `u`(`java.util.Map` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/i9;.u:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22bb2c.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22bb32.  v0:= temp;
  #L22bb34.  if v0 != 0 then goto L22bb3c;
  #L22bb38.  v4:= 0I;
  #L22bb3a.  return v4 @kind object;
  #L22bb3c.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22bb42.  v0:= temp @kind object;
  #L22bb44.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L22bb48.  if v1 == 0 then goto L22bb52;
  #L22bb4c.  v0:= (`java.util.Map`) v0 @kind object;
  #L22bb50.  return v0 @kind object;
  #L22bb52.  v1:= new `java.lang.ClassCastException`;
  #L22bb56.  v2:= 3I;
  #L22bb58.  v2:= new `java.lang.Object`[v2];
  #L22bb5c.  v3:= 0I;
  #L22bb5e.  v2[v3]:= v0 @kind object;
  #L22bb62.  v0:= 1I;
  #L22bb64.  v2[v0]:= v5 @kind object;
  #L22bb68.  v5:= 2I;
  #L22bb6a.  v2[v5]:= v4 @kind object;
  #L22bb6e.  v4:= "value '%s' for key '%s' in '%s' is not object" @kind object;
  #L22bb72.  call temp:= `format`(v4, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22bb78.  v4:= temp @kind object;
  #L22bb7a.  call `<init>`(v1, v4) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22bb80.  throw v1;
}
procedure `java.util.Map` `v`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.v:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22bb94.  v0:= "retryPolicy" @kind object;
  #L22bb98.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22bb9e.  v1:= temp;
  #L22bba0.  if v1 != 0 then goto L22bba8;
  #L22bba4.  v2:= 0I;
  #L22bba6.  return v2 @kind object;
  #L22bba8.  call temp:= `u`(v2, v0) @signature `Lio/grpc/internal/i9;.u:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L22bbae.  v2:= temp @kind object;
  #L22bbb0.  return v2 @kind object;
}
procedure `java.util.List` `w`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.w:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22ba70.  v0:= "retryableStatusCodes" @kind object;
  #L22ba74.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22ba7a.  v1:= temp;
  #L22ba7c.  if v1 != 0 then goto L22ba84;
  #L22ba80.  v2:= 0I;
  #L22ba82.  return v2 @kind object;
  #L22ba84.  call temp:= `j`(v2, v0) @signature `Lio/grpc/internal/i9;.j:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L22ba8a.  v2:= temp @kind object;
  #L22ba8c.  call temp:= `b`(v2) @signature `Lio/grpc/internal/i9;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22ba92.  v2:= temp @kind object;
  #L22ba94.  return v2 @kind object;
}
procedure `java.lang.String` `x`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.x:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22b6f4.  v0:= "service" @kind object;
  #L22b6f8.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b6fe.  v1:= temp;
  #L22b700.  if v1 != 0 then goto L22b708;
  #L22b704.  v2:= 0I;
  #L22b706.  return v2 @kind object;
  #L22b708.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b70e.  v2:= temp @kind object;
  #L22b710.  return v2 @kind object;
}
procedure `java.lang.String` `y`(`java.util.Map` v2 @kind object) @signature `Lio/grpc/internal/i9;.y:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L22b724.  v0:= "stickinessMetadataKey" @kind object;
  #L22b728.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b72e.  v1:= temp;
  #L22b730.  if v1 != 0 then goto L22b738;
  #L22b734.  v2:= 0I;
  #L22b736.  return v2 @kind object;
  #L22b738.  call temp:= `z`(v2, v0) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22b73e.  v2:= temp @kind object;
  #L22b740.  return v2 @kind object;
}
procedure `java.lang.String` `z`(`java.util.Map` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/grpc/internal/i9;.z:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22b754.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L22b75a.  v0:= temp;
  #L22b75c.  if v0 != 0 then goto L22b764;
  #L22b760.  v4:= 0I;
  #L22b762.  return v4 @kind object;
  #L22b764.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22b76a.  v0:= temp @kind object;
  #L22b76c.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L22b770.  if v1 == 0 then goto L22b77a;
  #L22b774.  v0:= (`java.lang.String`) v0 @kind object;
  #L22b778.  return v0 @kind object;
  #L22b77a.  v1:= new `java.lang.ClassCastException`;
  #L22b77e.  v2:= 3I;
  #L22b780.  v2:= new `java.lang.Object`[v2];
  #L22b784.  v3:= 0I;
  #L22b786.  v2[v3]:= v0 @kind object;
  #L22b78a.  v0:= 1I;
  #L22b78c.  v2[v0]:= v5 @kind object;
  #L22b790.  v5:= 2I;
  #L22b792.  v2[v5]:= v4 @kind object;
  #L22b796.  v4:= "value '%s' for key '%s' in '%s' is not String" @kind object;
  #L22b79a.  call temp:= `format`(v4, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L22b7a0.  v4:= temp @kind object;
  #L22b7a2.  call `<init>`(v1, v4) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22b7a8.  throw v1;
}
