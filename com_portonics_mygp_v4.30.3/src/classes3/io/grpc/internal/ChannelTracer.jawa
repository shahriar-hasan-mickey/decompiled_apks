record `io.grpc.internal.ChannelTracer` @kind class @AccessFlag FINAL {
  `java.lang.Object` `io.grpc.internal.ChannelTracer.b` @AccessFlag PRIVATE_FINAL;
  `io.grpc.e1` `io.grpc.internal.ChannelTracer.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Collection` `io.grpc.internal.ChannelTracer.d` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.internal.ChannelTracer.e` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.internal.ChannelTracer.f` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@io.grpc.internal.ChannelTracer.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/ChannelTracer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L217b8c.  v0:= constclass @type ^`io.grpc.ChannelLogger` @kind object;
  #L217b90.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L217b96.  v0:= temp @kind object;
  #L217b98.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L217b9e.  v0:= temp @kind object;
  #L217ba0.  `@@io.grpc.internal.ChannelTracer.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L217ba4.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.ChannelTracer` v1 @kind this, `io.grpc.e1` v2 @kind object, `int` v3 , `long` v4 , `java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.<init>:(Lio/grpc/e1;IJLjava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L217bb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L217bbe.  v0:= new `java.lang.Object`;
  #L217bc2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L217bc8.  v1.`io.grpc.internal.ChannelTracer.b` @type ^`java.lang.Object` := v0 @kind object;
  #L217bcc.  v0:= "description" @kind object;
  #L217bd0.  call temp:= `s`(v6, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L217bd6.  v0:= "logId" @kind object;
  #L217bda.  call temp:= `s`(v2, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L217be0.  v2:= temp @kind object;
  #L217be2.  v2:= (`io.grpc.e1`) v2 @kind object;
  #L217be6.  v1.`io.grpc.internal.ChannelTracer.c` @type ^`io.grpc.e1` := v2 @kind object;
  #L217bea.  if v3 <= 0 then goto L217bfe;
  #L217bee.  v2:= new `io.grpc.internal.ChannelTracer$1`;
  #L217bf2.  call `<init>`(v2, v1, v3) @signature `Lio/grpc/internal/ChannelTracer$1;.<init>:(Lio/grpc/internal/ChannelTracer;I)V` @kind direct;
  #L217bf8.  v1.`io.grpc.internal.ChannelTracer.d` @type ^`java.util.Collection` := v2 @kind object;
  #L217bfc.  goto L217c04;
  #L217bfe.  v2:= 0I;
  #L217c00.  v1.`io.grpc.internal.ChannelTracer.d` @type ^`java.util.Collection` := v2 @kind object;
  #L217c04.  v1.`io.grpc.internal.ChannelTracer.e` @type ^`long` := v4 @kind wide;
  #L217c08.  v2:= new `io.grpc.z0`;
  #L217c0c.  call `<init>`(v2) @signature `Lio/grpc/z0;.<init>:()V` @kind direct;
  #L217c12.  v3:= new `java.lang.StringBuilder`;
  #L217c16.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L217c1c.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217c22.  v6:= " created" @kind object;
  #L217c26.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217c2c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L217c32.  v3:= temp @kind object;
  #L217c34.  call temp:= `b`(v2, v3) @signature `Lio/grpc/z0;.b:(Ljava/lang/String;)Lio/grpc/z0;` @kind virtual;
  #L217c3a.  v2:= temp @kind object;
  #L217c3c.  v3:= `@@io.grpc.InternalChannelz$ChannelTrace$Event$Severity.CT_INFO` @type ^`io.grpc.InternalChannelz$ChannelTrace$Event$Severity` @kind object;
  #L217c40.  call temp:= `c`(v2, v3) @signature `Lio/grpc/z0;.c:(Lio/grpc/InternalChannelz$ChannelTrace$Event$Severity;)Lio/grpc/z0;` @kind virtual;
  #L217c46.  v2:= temp @kind object;
  #L217c48.  call temp:= `e`(v2, v4) @signature `Lio/grpc/z0;.e:(J)Lio/grpc/z0;` @kind virtual;
  #L217c4e.  v2:= temp @kind object;
  #L217c50.  call temp:= `a`(v2) @signature `Lio/grpc/z0;.a:()Lio/grpc/InternalChannelz$ChannelTrace$Event;` @kind virtual;
  #L217c56.  v2:= temp @kind object;
  #L217c58.  call `e`(v1, v2) @signature `Lio/grpc/internal/ChannelTracer;.e:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @kind virtual;
  #L217c5e.  return @kind void;
}
procedure `int` `a`(`io.grpc.internal.ChannelTracer` v2 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.a:(Lio/grpc/internal/ChannelTracer;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L217b54.  v0:= v2.`io.grpc.internal.ChannelTracer.f` @type ^`int`;
  #L217b58.  v1:= v0 + 1;
  #L217b5c.  v2.`io.grpc.internal.ChannelTracer.f` @type ^`int` := v1;
  #L217b60.  return v0;
}
procedure `void` `d`(`io.grpc.e1` v4 @kind object, `java.util.logging.Level` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.d:(Lio/grpc/e1;Ljava/util/logging/Level;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L217c70.  v0:= `@@io.grpc.internal.ChannelTracer.a` @type ^`java.util.logging.Logger` @kind object;
  #L217c74.  call temp:= `isLoggable`(v0, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L217c7a.  v1:= temp;
  #L217c7c.  if v1 == 0 then goto L217ce8;
  #L217c80.  v1:= new `java.util.logging.LogRecord`;
  #L217c84.  v2:= new `java.lang.StringBuilder`;
  #L217c88.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L217c8e.  v3:= "[" @kind object;
  #L217c92.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217c98.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217c9e.  v4:= "] " @kind object;
  #L217ca2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217ca8.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L217cae.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L217cb4.  v4:= temp @kind object;
  #L217cb6.  call `<init>`(v1, v5, v4) @signature `Ljava/util/logging/LogRecord;.<init>:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind direct;
  #L217cbc.  call temp:= `getName`(v0) @signature `Ljava/util/logging/Logger;.getName:()Ljava/lang/String;` @kind virtual;
  #L217cc2.  v4:= temp @kind object;
  #L217cc4.  call `setLoggerName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setLoggerName:(Ljava/lang/String;)V` @kind virtual;
  #L217cca.  call temp:= `getName`(v0) @signature `Ljava/util/logging/Logger;.getName:()Ljava/lang/String;` @kind virtual;
  #L217cd0.  v4:= temp @kind object;
  #L217cd2.  call `setSourceClassName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setSourceClassName:(Ljava/lang/String;)V` @kind virtual;
  #L217cd8.  v4:= "log" @kind object;
  #L217cdc.  call `setSourceMethodName`(v1, v4) @signature `Ljava/util/logging/LogRecord;.setSourceMethodName:(Ljava/lang/String;)V` @kind virtual;
  #L217ce2.  call `log`(v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/LogRecord;)V` @kind virtual;
  #L217ce8.  return @kind void;
}
procedure `io.grpc.e1` `b`(`io.grpc.internal.ChannelTracer` v1 @kind this) @signature `Lio/grpc/internal/ChannelTracer;.b:()Lio/grpc/e1;` @AccessFlag  {
    temp;
    v0;

  #L217b74.  v0:= v1.`io.grpc.internal.ChannelTracer.c` @type ^`io.grpc.e1` @kind object;
  #L217b78.  return v0 @kind object;
}
procedure `boolean` `c`(`io.grpc.internal.ChannelTracer` v2 @kind this) @signature `Lio/grpc/internal/ChannelTracer;.c:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L217b18.  v0:= v2.`io.grpc.internal.ChannelTracer.b` @type ^`java.lang.Object` @kind object;
  #L217b1c.  @monitorenter v0
  #L217b1e.  v1:= v2.`io.grpc.internal.ChannelTracer.d` @type ^`java.util.Collection` @kind object;
  #L217b22.  if v1 == 0 then goto L217b2a;
  #L217b26.  v1:= 1I;
  #L217b28.  goto L217b2c;
  #L217b2a.  v1:= 0I;
  #L217b2c.  @monitorexit v0
  #L217b2e.  return v1;
  #L217b30.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L217b32.  @monitorexit v0
  #L217b34.  throw v1;
  catch `java.lang.Throwable` @[L217b1e..L217b34] goto L217b30;
}
procedure `void` `e`(`io.grpc.internal.ChannelTracer` v2 @kind this, `io.grpc.InternalChannelz$ChannelTrace$Event` v3 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.e:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L217cfc.  v0:= `@@io.grpc.internal.e1.a` @type ^`int`[] @kind object;
  #L217d00.  v1:= v3.`io.grpc.InternalChannelz$ChannelTrace$Event.b` @type ^`io.grpc.InternalChannelz$ChannelTrace$Event$Severity` @kind object;
  #L217d04.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L217d0a.  v1:= temp;
  #L217d0c.  v0:= v0[v1];
  #L217d10.  v1:= 1I;
  #L217d12.  if v0 == v1 then goto L217d28;
  #L217d16.  v1:= 2I;
  #L217d18.  if v0 == v1 then goto L217d22;
  #L217d1c.  v0:= `@@java.util.logging.Level.FINEST` @type ^`java.util.logging.Level` @kind object;
  #L217d20.  goto L217d2c;
  #L217d22.  v0:= `@@java.util.logging.Level.FINER` @type ^`java.util.logging.Level` @kind object;
  #L217d26.  goto L217d2c;
  #L217d28.  v0:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L217d2c.  call `f`(v2, v3) @signature `Lio/grpc/internal/ChannelTracer;.f:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @kind virtual;
  #L217d32.  v1:= v2.`io.grpc.internal.ChannelTracer.c` @type ^`io.grpc.e1` @kind object;
  #L217d36.  v3:= v3.`io.grpc.InternalChannelz$ChannelTrace$Event.a` @type ^`java.lang.String` @kind object;
  #L217d3a.  call `d`(v1, v0, v3) @signature `Lio/grpc/internal/ChannelTracer;.d:(Lio/grpc/e1;Ljava/util/logging/Level;Ljava/lang/String;)V` @kind static;
  #L217d40.  return @kind void;
}
procedure `void` `f`(`io.grpc.internal.ChannelTracer` v2 @kind this, `io.grpc.InternalChannelz$ChannelTrace$Event` v3 @kind object) @signature `Lio/grpc/internal/ChannelTracer;.f:(Lio/grpc/InternalChannelz$ChannelTrace$Event;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L217d54.  v0:= v2.`io.grpc.internal.ChannelTracer.b` @type ^`java.lang.Object` @kind object;
  #L217d58.  @monitorenter v0
  #L217d5a.  v1:= v2.`io.grpc.internal.ChannelTracer.d` @type ^`java.util.Collection` @kind object;
  #L217d5e.  if v1 == 0 then goto L217d68;
  #L217d62.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L217d68.  @monitorexit v0
  #L217d6a.  return @kind void;
  #L217d6c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L217d6e.  @monitorexit v0
  #L217d70.  throw v3;
  catch `java.lang.Throwable` @[L217d5a..L217d70] goto L217d6c;
}
