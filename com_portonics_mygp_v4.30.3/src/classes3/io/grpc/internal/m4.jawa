record `io.grpc.internal.m4` @kind class @AccessFlag PUBLIC {
  `long` `io.grpc.internal.m4.b` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.j0` `io.grpc.internal.m4.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `io.grpc.internal.m4.d` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.m4.e` @AccessFlag PRIVATE;
  `java.lang.Throwable` `io.grpc.internal.m4.f` @AccessFlag PRIVATE;
  `long` `io.grpc.internal.m4.g` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@io.grpc.internal.m4.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/m4;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21f458.  v0:= constclass @type ^`io.grpc.internal.m4` @kind object;
  #L21f45c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L21f462.  v0:= temp @kind object;
  #L21f464.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L21f46a.  v0:= temp @kind object;
  #L21f46c.  `@@io.grpc.internal.m4.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L21f470.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.m4` v1 @kind this, `long` v2 , `com.google.common.base.j0` v4 @kind object) @signature `Lio/grpc/internal/m4;.<init>:(JLcom/google/common/base/j0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L21f484.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21f48a.  v0:= new `java.util.LinkedHashMap`;
  #L21f48e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L21f494.  v1.`io.grpc.internal.m4.d` @type ^`java.util.Map` := v0 @kind object;
  #L21f498.  v1.`io.grpc.internal.m4.b` @type ^`long` := v2 @kind wide;
  #L21f49c.  v1.`io.grpc.internal.m4.c` @type ^`com.google.common.base.j0` := v4 @kind object;
  #L21f4a0.  return @kind void;
}
procedure `java.lang.Runnable` `b`(`io.grpc.internal.p1` v1 @kind object, `long` v2 ) @signature `Lio/grpc/internal/m4;.b:(Lio/grpc/internal/p1;J)Ljava/lang/Runnable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L21f424.  v0:= new `io.grpc.internal.k4`;
  #L21f428.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/k4;.<init>:(Lio/grpc/internal/p1;J)V` @kind direct;
  #L21f42e.  return v0 @kind object;
}
procedure `java.lang.Runnable` `c`(`io.grpc.internal.p1` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/grpc/internal/m4;.c:(Lio/grpc/internal/p1;Ljava/lang/Throwable;)Ljava/lang/Runnable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L21f408.  v0:= new `io.grpc.internal.l4`;
  #L21f40c.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/l4;.<init>:(Lio/grpc/internal/p1;Ljava/lang/Throwable;)V` @kind direct;
  #L21f412.  return v0 @kind object;
}
procedure `void` `e`(`java.util.concurrent.Executor` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lio/grpc/internal/m4;.e:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L21f520.  call `execute`(v2, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L21f526.  goto L21f53c;
  #L21f528.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21f52a.  v3:= `@@io.grpc.internal.m4.a` @type ^`java.util.logging.Logger` @kind object;
  #L21f52e.  v0:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L21f532.  v1:= "Failed to execute PingCallback" @kind object;
  #L21f536.  call `log`(v3, v0, v1, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21f53c.  return @kind void;
  catch `java.lang.Throwable` @[L21f520..L21f526] goto L21f528;
}
procedure `void` `g`(`io.grpc.internal.p1` v0 @kind object, `java.util.concurrent.Executor` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/grpc/internal/m4;.g:(Lio/grpc/internal/p1;Ljava/util/concurrent/Executor;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L21f5f8.  call temp:= `c`(v0, v2) @signature `Lio/grpc/internal/m4;.c:(Lio/grpc/internal/p1;Ljava/lang/Throwable;)Ljava/lang/Runnable;` @kind static;
  #L21f5fe.  v0:= temp @kind object;
  #L21f600.  call `e`(v1, v0) @signature `Lio/grpc/internal/m4;.e:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind static;
  #L21f606.  return @kind void;
}
procedure `void` `a`(`io.grpc.internal.m4` v2 @kind this, `io.grpc.internal.p1` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lio/grpc/internal/m4;.a:(Lio/grpc/internal/p1;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f4b4.  @monitorenter v2
  #L21f4b6.  v0:= v2.`io.grpc.internal.m4.e` @type ^`boolean` @kind boolean;
  #L21f4ba.  if v0 != 0 then goto L21f4cc;
  #L21f4be.  v0:= v2.`io.grpc.internal.m4.d` @type ^`java.util.Map` @kind object;
  #L21f4c2.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L21f4c8.  @monitorexit v2
  #L21f4ca.  return @kind void;
  #L21f4cc.  v0:= v2.`io.grpc.internal.m4.f` @type ^`java.lang.Throwable` @kind object;
  #L21f4d0.  if v0 == 0 then goto L21f4de;
  #L21f4d4.  call temp:= `c`(v3, v0) @signature `Lio/grpc/internal/m4;.c:(Lio/grpc/internal/p1;Ljava/lang/Throwable;)Ljava/lang/Runnable;` @kind static;
  #L21f4da.  v3:= temp @kind object;
  #L21f4dc.  goto L21f4ea;
  #L21f4de.  v0:= v2.`io.grpc.internal.m4.g` @type ^`long` @kind wide;
  #L21f4e2.  call temp:= `b`(v3, v0) @signature `Lio/grpc/internal/m4;.b:(Lio/grpc/internal/p1;J)Ljava/lang/Runnable;` @kind static;
  #L21f4e8.  v3:= temp @kind object;
  #L21f4ea.  @monitorexit v2
  #L21f4ec.  call `e`(v4, v3) @signature `Lio/grpc/internal/m4;.e:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind static;
  #L21f4f2.  return @kind void;
  #L21f4f4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21f4f6.  @monitorexit v2
  #L21f4f8.  throw v3;
  catch `java.lang.Throwable` @[L21f4b6..L21f4ec] goto L21f4f4;
  catch `java.lang.Throwable` @[L21f4f6..L21f4f8] goto L21f4f4;
}
procedure `boolean` `d`(`io.grpc.internal.m4` v6 @kind this) @signature `Lio/grpc/internal/m4;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21f350.  @monitorenter v6
  #L21f352.  v0:= v6.`io.grpc.internal.m4.e` @type ^`boolean` @kind boolean;
  #L21f356.  if v0 == 0 then goto L21f360;
  #L21f35a.  v0:= 0I;
  #L21f35c.  @monitorexit v6
  #L21f35e.  return v0;
  #L21f360.  v0:= 1I;
  #L21f362.  v6.`io.grpc.internal.m4.e` @type ^`boolean` := v0 @kind boolean;
  #L21f366.  v1:= v6.`io.grpc.internal.m4.c` @type ^`com.google.common.base.j0` @kind object;
  #L21f36a.  v2:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L21f36e.  call temp:= `e`(v1, v2) @signature `Lcom/google/common/base/j0;.e:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L21f374.  v1:= temp @kind wide;
  #L21f376.  v6.`io.grpc.internal.m4.g` @type ^`long` := v1 @kind wide;
  #L21f37a.  v3:= v6.`io.grpc.internal.m4.d` @type ^`java.util.Map` @kind object;
  #L21f37e.  v4:= 0I;
  #L21f380.  v6.`io.grpc.internal.m4.d` @type ^`java.util.Map` := v4 @kind object;
  #L21f384.  @monitorexit v6
  #L21f386.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L21f38c.  v3:= temp @kind object;
  #L21f38e.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21f394.  v3:= temp @kind object;
  #L21f396.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21f39c.  v4:= temp;
  #L21f39e.  if v4 == 0 then goto L21f3d6;
  #L21f3a2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21f3a8.  v4:= temp @kind object;
  #L21f3aa.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L21f3ae.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L21f3b4.  v5:= temp @kind object;
  #L21f3b6.  v5:= (`java.util.concurrent.Executor`) v5 @kind object;
  #L21f3ba.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L21f3c0.  v4:= temp @kind object;
  #L21f3c2.  v4:= (`io.grpc.internal.p1`) v4 @kind object;
  #L21f3c6.  call temp:= `b`(v4, v1) @signature `Lio/grpc/internal/m4;.b:(Lio/grpc/internal/p1;J)Ljava/lang/Runnable;` @kind static;
  #L21f3cc.  v4:= temp @kind object;
  #L21f3ce.  call `e`(v5, v4) @signature `Lio/grpc/internal/m4;.e:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind static;
  #L21f3d4.  goto L21f396;
  #L21f3d6.  return v0;
  #L21f3d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21f3da.  @monitorexit v6
  #L21f3dc.  goto L21f3e0;
  #L21f3de.  throw v0;
  #L21f3e0.  goto L21f3de;
  catch `java.lang.Throwable` @[L21f352..L21f386] goto L21f3d8;
  catch `java.lang.Throwable` @[L21f3da..L21f3dc] goto L21f3d8;
}
procedure `void` `f`(`io.grpc.internal.m4` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lio/grpc/internal/m4;.f:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21f55c.  @monitorenter v3
  #L21f55e.  v0:= v3.`io.grpc.internal.m4.e` @type ^`boolean` @kind boolean;
  #L21f562.  if v0 == 0 then goto L21f56a;
  #L21f566.  @monitorexit v3
  #L21f568.  return @kind void;
  #L21f56a.  v0:= 1I;
  #L21f56c.  v3.`io.grpc.internal.m4.e` @type ^`boolean` := v0 @kind boolean;
  #L21f570.  v3.`io.grpc.internal.m4.f` @type ^`java.lang.Throwable` := v4 @kind object;
  #L21f574.  v0:= v3.`io.grpc.internal.m4.d` @type ^`java.util.Map` @kind object;
  #L21f578.  v1:= 0I;
  #L21f57a.  v3.`io.grpc.internal.m4.d` @type ^`java.util.Map` := v1 @kind object;
  #L21f57e.  @monitorexit v3
  #L21f580.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L21f586.  v0:= temp @kind object;
  #L21f588.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21f58e.  v0:= temp @kind object;
  #L21f590.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21f596.  v1:= temp;
  #L21f598.  if v1 == 0 then goto L21f5c8;
  #L21f59c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21f5a2.  v1:= temp @kind object;
  #L21f5a4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L21f5a8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L21f5ae.  v2:= temp @kind object;
  #L21f5b0.  v2:= (`io.grpc.internal.p1`) v2 @kind object;
  #L21f5b4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L21f5ba.  v1:= temp @kind object;
  #L21f5bc.  v1:= (`java.util.concurrent.Executor`) v1 @kind object;
  #L21f5c0.  call `g`(v2, v1, v4) @signature `Lio/grpc/internal/m4;.g:(Lio/grpc/internal/p1;Ljava/util/concurrent/Executor;Ljava/lang/Throwable;)V` @kind static;
  #L21f5c6.  goto L21f590;
  #L21f5c8.  return @kind void;
  #L21f5ca.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21f5cc.  @monitorexit v3
  #L21f5ce.  goto L21f5d2;
  #L21f5d0.  throw v4;
  #L21f5d2.  goto L21f5d0;
  catch `java.lang.Throwable` @[L21f55e..L21f580] goto L21f5ca;
  catch `java.lang.Throwable` @[L21f5cc..L21f5ce] goto L21f5ca;
}
procedure `long` `h`(`io.grpc.internal.m4` v2 @kind this) @signature `Lio/grpc/internal/m4;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f440.  v0:= v2.`io.grpc.internal.m4.b` @type ^`long` @kind wide;
  #L21f444.  return v0 @kind wide;
}
