record `io.grpc.internal.p7` @kind class @AccessFlag PUBLIC_FINAL extends `io.grpc.internal.o5` @kind interface {
  `java.lang.Object` `io.grpc.internal.p7.f` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.internal.p7.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.reflect.Constructor` `@@io.grpc.internal.p7.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.reflect.Method` `@@io.grpc.internal.p7.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.reflect.Method` `@@io.grpc.internal.p7.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.RuntimeException` `@@io.grpc.internal.p7.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/p7;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L227c18.  v0:= constclass @type ^`io.grpc.internal.p7` @kind object;
  #L227c1c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L227c22.  v0:= temp @kind object;
  #L227c24.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L227c2a.  v0:= temp @kind object;
  #L227c2c.  `@@io.grpc.internal.p7.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L227c30.  v0:= 0I;
  #L227c32.  v1:= "java.util.concurrent.atomic.LongAdder" @kind object;
  #L227c36.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L227c3c.  v1:= temp @kind object;
  #L227c3e.  v2:= "add" @kind object;
  #L227c42.  v3:= 1I;
  #L227c44.  v3:= new `java.lang.Class`[v3];
  #L227c48.  v4:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L227c4c.  v5:= 0I;
  #L227c4e.  v3[v5]:= v4 @kind object;
  #L227c52.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L227c58.  v2:= temp @kind object;
  #L227c5a.  v3:= "sum" @kind object;
  #L227c5e.  v4:= new `java.lang.Class`[v5];
  #L227c62.  call temp:= `getMethod`(v1, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L227c68.  v3:= temp @kind object;
  #L227c6a.  call temp:= `getConstructors`(v1) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L227c70.  v1:= temp @kind object;
  #L227c72.  v4:= length @variable v1;
  #L227c74.  if v5 >= v4 then goto L227c92;
  #L227c78.  v6:= v1[v5] @kind object;
  #L227c7c.  call temp:= `getParameterTypes`(v6) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L227c82.  v7:= temp @kind object;
  #L227c84.  v7:= length @variable v7;
  #L227c86.  if v7 != 0 then goto L227c8c;
  #L227c8a.  goto L227c94;
  #L227c8c.  v5:= v5 + 1;
  #L227c90.  goto L227c74;
  #L227c92.  v6:= v0 @kind object;
  #L227c94.  v1:= v0 @kind object;
  #L227c96.  goto L227cbc;
  #L227c98.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L227c9a.  goto L227ca8;
  #L227c9c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L227c9e.  v3:= v0 @kind object;
  #L227ca0.  goto L227ca8;
  #L227ca2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L227ca4.  v2:= v0 @kind object;
  #L227ca6.  v3:= v2 @kind object;
  #L227ca8.  v4:= `@@io.grpc.internal.p7.a` @type ^`java.util.logging.Logger` @kind object;
  #L227cac.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L227cb0.  v6:= "LongAdder can not be found via reflection, this is normal for JDK7 and below" @kind object;
  #L227cb4.  call `log`(v4, v5, v6, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L227cba.  v6:= v0 @kind object;
  #L227cbc.  if v1 != 0 then goto L227cd6;
  #L227cc0.  if v6 == 0 then goto L227cd6;
  #L227cc4.  `@@io.grpc.internal.p7.b` @type ^`java.lang.reflect.Constructor` := v6 @kind object;
  #L227cc8.  `@@io.grpc.internal.p7.c` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L227ccc.  `@@io.grpc.internal.p7.d` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L227cd0.  `@@io.grpc.internal.p7.e` @type ^`java.lang.RuntimeException` := v0 @kind object;
  #L227cd4.  goto L227cf0;
  #L227cd6.  `@@io.grpc.internal.p7.b` @type ^`java.lang.reflect.Constructor` := v0 @kind object;
  #L227cda.  `@@io.grpc.internal.p7.c` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L227cde.  `@@io.grpc.internal.p7.d` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L227ce2.  v0:= new `java.lang.RuntimeException`;
  #L227ce6.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227cec.  `@@io.grpc.internal.p7.e` @type ^`java.lang.RuntimeException` := v0 @kind object;
  #L227cf0.  return @kind void;
  catch `java.lang.Throwable` @[L227c32..L227c5a] goto L227ca2;
  catch `java.lang.Throwable` @[L227c5a..L227c6a] goto L227c9c;
  catch `java.lang.Throwable` @[L227c6a..L227c86] goto L227c98;
}
procedure `void` `<init>`(`io.grpc.internal.p7` v2 @kind this) @signature `Lio/grpc/internal/p7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L227d24.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L227d2a.  v0:= `@@io.grpc.internal.p7.e` @type ^`java.lang.RuntimeException` @kind object;
  #L227d2e.  if v0 != 0 then goto L227d74;
  #L227d32.  v0:= `@@io.grpc.internal.p7.b` @type ^`java.lang.reflect.Constructor` @kind object;
  #L227d36.  v1:= 0I;
  #L227d38.  v1:= new `java.lang.Object`[v1];
  #L227d3c.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L227d42.  v0:= temp @kind object;
  #L227d44.  v2.`io.grpc.internal.p7.f` @type ^`java.lang.Object` := v0 @kind object;
  #L227d48.  return @kind void;
  #L227d4a.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L227d4c.  v1:= new `java.lang.RuntimeException`;
  #L227d50.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227d56.  throw v1;
  #L227d58.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L227d5a.  v1:= new `java.lang.RuntimeException`;
  #L227d5e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227d64.  throw v1;
  #L227d66.  v0:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L227d68.  v1:= new `java.lang.RuntimeException`;
  #L227d6c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227d72.  throw v1;
  #L227d74.  throw v0;
  catch `java.lang.InstantiationException` @[L227d32..L227d48] goto L227d66;
  catch `java.lang.IllegalAccessException` @[L227d32..L227d48] goto L227d58;
  catch `java.lang.reflect.InvocationTargetException` @[L227d32..L227d48] goto L227d4a;
}
procedure `boolean` `a`() @signature `Lio/grpc/internal/p7;.a:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L227bf8.  v0:= `@@io.grpc.internal.p7.e` @type ^`java.lang.RuntimeException` @kind object;
  #L227bfc.  if v0 != 0 then goto L227c04;
  #L227c00.  v0:= 1I;
  #L227c02.  goto L227c06;
  #L227c04.  v0:= 0I;
  #L227c06.  return v0;
}
procedure `void` `add`(`io.grpc.internal.p7` v4 @kind this, `long` v5 ) @signature `Lio/grpc/internal/p7;.add:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L227d9c.  v0:= `@@io.grpc.internal.p7.c` @type ^`java.lang.reflect.Method` @kind object;
  #L227da0.  v1:= v4.`io.grpc.internal.p7.f` @type ^`java.lang.Object` @kind object;
  #L227da4.  v2:= 1I;
  #L227da6.  v2:= new `java.lang.Object`[v2];
  #L227daa.  v3:= 0I;
  #L227dac.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L227db2.  v5:= temp @kind object;
  #L227db4.  v2[v3]:= v5 @kind object;
  #L227db8.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L227dbe.  return @kind void;
  #L227dc0.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L227dc2.  v6:= new `java.lang.RuntimeException`;
  #L227dc6.  call `<init>`(v6, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227dcc.  throw v6;
  #L227dce.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L227dd0.  v6:= new `java.lang.RuntimeException`;
  #L227dd4.  call `<init>`(v6, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L227dda.  throw v6;
  catch `java.lang.IllegalAccessException` @[L227d9c..L227dbe] goto L227dce;
  catch `java.lang.reflect.InvocationTargetException` @[L227d9c..L227dbe] goto L227dc0;
}
