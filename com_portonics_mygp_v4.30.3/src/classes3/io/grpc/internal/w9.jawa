record `io.grpc.internal.w9` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.logging.Logger` `@@io.grpc.internal.w9.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@io.grpc.internal.w9.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/w9;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22c8fc.  v0:= constclass @type ^`io.grpc.internal.w9` @kind object;
  #L22c900.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L22c906.  v0:= temp @kind object;
  #L22c908.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L22c90e.  v0:= temp @kind object;
  #L22c910.  `@@io.grpc.internal.w9.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L22c914.  v0:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L22c918.  v1:= "-bin" @kind object;
  #L22c91c.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L22c922.  v0:= temp @kind object;
  #L22c924.  `@@io.grpc.internal.w9.b` @type ^`byte`[] := v0 @kind object;
  #L22c928.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lio/grpc/internal/w9;.a:([B[B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22c618.  v0:= length @variable v5;
  #L22c61a.  v1:= length @variable v6;
  #L22c61c.  v0:= v0 - v1 @kind int;
  #L22c61e.  v1:= 0I;
  #L22c620.  if v0 >= 0 then goto L22c626;
  #L22c624.  return v1;
  #L22c626.  v2:= v0;
  #L22c628.  v3:= length @variable v5;
  #L22c62a.  if v2 >= v3 then goto L22c646;
  #L22c62e.  v3:= v5[v2] @kind byte;
  #L22c632.  v4:= v2 - v0 @kind int;
  #L22c636.  v4:= v6[v4] @kind byte;
  #L22c63a.  if v3 == v4 then goto L22c640;
  #L22c63e.  return v1;
  #L22c640.  v2:= v2 + 1;
  #L22c644.  goto L22c628;
  #L22c646.  v5:= 1I;
  #L22c648.  return v5;
}
procedure `boolean` `b`(`byte`[] v5 @kind object) @signature `Lio/grpc/internal/w9;.b:([B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22c65c.  v0:= length @variable v5;
  #L22c65e.  v1:= 0I;
  #L22c660.  v2:= 0I;
  #L22c662.  if v2 >= v0 then goto L22c684;
  #L22c666.  v3:= v5[v2] @kind byte;
  #L22c66a.  v4:= 32I;
  #L22c66e.  if v3 < v4 then goto L22c682;
  #L22c672.  v4:= 126I;
  #L22c676.  if v3 <= v4 then goto L22c67c;
  #L22c67a.  goto L22c682;
  #L22c67c.  v2:= v2 + 1;
  #L22c680.  goto L22c662;
  #L22c682.  return v1;
  #L22c684.  v5:= 1I;
  #L22c686.  return v5;
}
procedure `byte`[][] `c`(`byte`[][] v10 @kind object, `int` v11 ) @signature `Lio/grpc/internal/w9;.c:([[BI)[[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L22c698.  v0:= new `java.util.ArrayList`;
  #L22c69c.  v1:= length @variable v10;
  #L22c69e.  v1:= v1 + 10;
  #L22c6a2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L22c6a8.  v1:= 0I;
  #L22c6aa.  v2:= 0I;
  #L22c6ac.  if v2 >= v11 then goto L22c6c0;
  #L22c6b0.  v3:= v10[v2] @kind object;
  #L22c6b4.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c6ba.  v2:= v2 + 1;
  #L22c6be.  goto L22c6ac;
  #L22c6c0.  v2:= length @variable v10;
  #L22c6c2.  if v11 >= v2 then goto L22c74e;
  #L22c6c6.  v2:= v10[v11] @kind object;
  #L22c6ca.  v3:= v11 + 1;
  #L22c6ce.  v3:= v10[v3] @kind object;
  #L22c6d2.  v4:= `@@io.grpc.internal.w9.b` @type ^`byte`[] @kind object;
  #L22c6d6.  call temp:= `a`(v2, v4) @signature `Lio/grpc/internal/w9;.a:([B[B)Z` @kind static;
  #L22c6dc.  v4:= temp;
  #L22c6de.  if v4 != 0 then goto L22c6f0;
  #L22c6e2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c6e8.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c6ee.  goto L22c748;
  #L22c6f0.  v4:= 0I;
  #L22c6f2.  v5:= 0I;
  #L22c6f4.  v6:= length @variable v3;
  #L22c6f6.  if v4 > v6 then goto L22c748;
  #L22c6fa.  v6:= length @variable v3;
  #L22c6fc.  if v4 == v6 then goto L22c70e;
  #L22c700.  v6:= v3[v4] @kind byte;
  #L22c704.  v7:= 44I;
  #L22c708.  if v6 == v7 then goto L22c70e;
  #L22c70c.  goto L22c742;
  #L22c70e.  call temp:= `b`() @signature `Lcom/google/common/io/BaseEncoding;.b:()Lcom/google/common/io/BaseEncoding;` @kind static;
  #L22c714.  v6:= temp @kind object;
  #L22c716.  v7:= new `java.lang.String`;
  #L22c71a.  v8:= v4 - v5 @kind int;
  #L22c71e.  v9:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L22c722.  call `<init>`(v7, v3, v5, v8, v9) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L22c728.  call temp:= `c`(v6, v7) @signature `Lcom/google/common/io/BaseEncoding;.c:(Ljava/lang/CharSequence;)[B` @kind virtual;
  #L22c72e.  v5:= temp @kind object;
  #L22c730.  v6:= v4 + 1;
  #L22c734.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c73a.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22c740.  v5:= v6;
  #L22c742.  v4:= v4 + 1;
  #L22c746.  goto L22c6f4;
  #L22c748.  v11:= v11 + 2;
  #L22c74c.  goto L22c6c0;
  #L22c74e.  v10:= new `byte`[][v1];
  #L22c752.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L22c758.  v10:= temp @kind object;
  #L22c75a.  v10:= (`byte`[][]) v10 @kind object;
  #L22c75e.  return v10 @kind object;
}
procedure `byte`[][] `d`(`io.grpc.m2` v8 @kind object) @signature `Lio/grpc/internal/w9;.d:(Lio/grpc/m2;)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L22c770.  call temp:= `d`(v8) @signature `Lio/grpc/g1;.d:(Lio/grpc/m2;)[[B` @kind static;
  #L22c776.  v8:= temp @kind object;
  #L22c778.  v0:= 0I;
  #L22c77a.  if v8 != 0 then goto L22c784;
  #L22c77e.  v8:= new `byte`[][v0];
  #L22c782.  return v8 @kind object;
  #L22c784.  v1:= 0I;
  #L22c786.  v2:= 0I;
  #L22c788.  v3:= length @variable v8;
  #L22c78a.  if v1 >= v3 then goto L22c850;
  #L22c78e.  v3:= v8[v1] @kind object;
  #L22c792.  v4:= v1 + 1;
  #L22c796.  v4:= v8[v4] @kind object;
  #L22c79a.  v5:= `@@io.grpc.internal.w9.b` @type ^`byte`[] @kind object;
  #L22c79e.  call temp:= `a`(v3, v5) @signature `Lio/grpc/internal/w9;.a:([B[B)Z` @kind static;
  #L22c7a4.  v5:= temp;
  #L22c7a6.  if v5 == 0 then goto L22c7d4;
  #L22c7aa.  v8[v2]:= v3 @kind object;
  #L22c7ae.  v3:= v2 + 1;
  #L22c7b2.  v5:= `@@io.grpc.g1.b` @type ^`com.google.common.io.BaseEncoding` @kind object;
  #L22c7b6.  call temp:= `f`(v5, v4) @signature `Lcom/google/common/io/BaseEncoding;.f:([B)Ljava/lang/String;` @kind virtual;
  #L22c7bc.  v4:= temp @kind object;
  #L22c7be.  v5:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L22c7c2.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L22c7c8.  v4:= temp @kind object;
  #L22c7ca.  v8[v3]:= v4 @kind object;
  #L22c7ce.  v2:= v2 + 2;
  #L22c7d2.  goto L22c84a;
  #L22c7d4.  call temp:= `b`(v4) @signature `Lio/grpc/internal/w9;.b:([B)Z` @kind static;
  #L22c7da.  v5:= temp;
  #L22c7dc.  if v5 == 0 then goto L22c7ee;
  #L22c7e0.  v8[v2]:= v3 @kind object;
  #L22c7e4.  v3:= v2 + 1;
  #L22c7e8.  v8[v3]:= v4 @kind object;
  #L22c7ec.  goto L22c7ce;
  #L22c7ee.  v5:= new `java.lang.String`;
  #L22c7f2.  v6:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L22c7f6.  call `<init>`(v5, v3, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L22c7fc.  v3:= `@@io.grpc.internal.w9.a` @type ^`java.util.logging.Logger` @kind object;
  #L22c800.  v6:= new `java.lang.StringBuilder`;
  #L22c804.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22c80a.  v7:= "Metadata key=" @kind object;
  #L22c80e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c814.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c81a.  v5:= ", value=" @kind object;
  #L22c81e.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c824.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([B)Ljava/lang/String;` @kind static;
  #L22c82a.  v4:= temp @kind object;
  #L22c82c.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c832.  v4:= " contains invalid ASCII characters" @kind object;
  #L22c836.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22c83c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22c842.  v4:= temp @kind object;
  #L22c844.  call `warning`(v3, v4) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L22c84a.  v1:= v1 + 2;
  #L22c84e.  goto L22c788;
  #L22c850.  v1:= length @variable v8;
  #L22c852.  if v2 != v1 then goto L22c858;
  #L22c856.  return v8 @kind object;
  #L22c858.  call temp:= `copyOfRange`(v8, v0, v2) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L22c85e.  v8:= temp @kind object;
  #L22c860.  v8:= (`byte`[][]) v8 @kind object;
  #L22c864.  return v8 @kind object;
}
procedure `byte`[][] `e`(`byte`[][] v7 @kind object) @signature `Lio/grpc/internal/w9;.e:([[B)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22c878.  v0:= 0I;
  #L22c87a.  v1:= 0I;
  #L22c87c.  v2:= length @variable v7;
  #L22c87e.  if v1 >= v2 then goto L22c8ea;
  #L22c882.  v2:= v7[v1] @kind object;
  #L22c886.  v3:= v1 + 1;
  #L22c88a.  v4:= v7[v3] @kind object;
  #L22c88e.  v5:= `@@io.grpc.internal.w9.b` @type ^`byte`[] @kind object;
  #L22c892.  call temp:= `a`(v2, v5) @signature `Lio/grpc/internal/w9;.a:([B[B)Z` @kind static;
  #L22c898.  v2:= temp;
  #L22c89a.  if v2 == 0 then goto L22c8e4;
  #L22c89e.  v2:= 0I;
  #L22c8a0.  v5:= length @variable v4;
  #L22c8a2.  if v2 >= v5 then goto L22c8c2;
  #L22c8a6.  v5:= v4[v2] @kind byte;
  #L22c8aa.  v6:= 44I;
  #L22c8ae.  if v5 != v6 then goto L22c8bc;
  #L22c8b2.  call temp:= `c`(v7, v1) @signature `Lio/grpc/internal/w9;.c:([[BI)[[B` @kind static;
  #L22c8b8.  v7:= temp @kind object;
  #L22c8ba.  return v7 @kind object;
  #L22c8bc.  v2:= v2 + 1;
  #L22c8c0.  goto L22c8a0;
  #L22c8c2.  call temp:= `b`() @signature `Lcom/google/common/io/BaseEncoding;.b:()Lcom/google/common/io/BaseEncoding;` @kind static;
  #L22c8c8.  v2:= temp @kind object;
  #L22c8ca.  v5:= new `java.lang.String`;
  #L22c8ce.  v6:= `@@com.google.common.base.j.a` @type ^`java.nio.charset.Charset` @kind object;
  #L22c8d2.  call `<init>`(v5, v4, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L22c8d8.  call temp:= `c`(v2, v5) @signature `Lcom/google/common/io/BaseEncoding;.c:(Ljava/lang/CharSequence;)[B` @kind virtual;
  #L22c8de.  v2:= temp @kind object;
  #L22c8e0.  v7[v3]:= v2 @kind object;
  #L22c8e4.  v1:= v1 + 2;
  #L22c8e8.  goto L22c87c;
  #L22c8ea.  return v7 @kind object;
}
