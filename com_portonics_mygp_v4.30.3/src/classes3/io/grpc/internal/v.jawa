record `io.grpc.internal.v` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `io.grpc.internal.v.a` @AccessFlag PRIVATE_FINAL;
  `io.grpc.internal.w` `io.grpc.internal.v.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L21555c.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.v` v0 @kind this, `io.grpc.internal.w` v1 @kind object, `long` v2 ) @signature `Lio/grpc/internal/v;.<init>:(Lio/grpc/internal/w;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L215570.  v0.`io.grpc.internal.v.b` @type ^`io.grpc.internal.w` := v1 @kind object;
  #L215574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21557a.  v0.`io.grpc.internal.v.a` @type ^`long` := v2 @kind wide;
  #L21557e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.v` v0 @kind this, `io.grpc.internal.w` v1 @kind object, `long` v2 , `io.grpc.internal.u` v4 @kind object) @signature `Lio/grpc/internal/v;.<init>:(Lio/grpc/internal/w;JLio/grpc/internal/u;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L215590.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/internal/v;.<init>:(Lio/grpc/internal/w;J)V` @kind direct;
  #L215596.  return @kind void;
}
procedure `void` `a`(`io.grpc.internal.v` v7 @kind this) @signature `Lio/grpc/internal/v;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2155a8.  v0:= v7.`io.grpc.internal.v.a` @type ^`long` @kind wide;
  #L2155ac.  v2:= 2L;
  #L2155b0.  v2:= v2 * v0 @kind long;
  #L2155b4.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L2155ba.  v0:= temp @kind wide;
  #L2155bc.  v2:= v7.`io.grpc.internal.v.b` @type ^`io.grpc.internal.w` @kind object;
  #L2155c0.  call temp:= `a`(v2) @signature `Lio/grpc/internal/w;.a:(Lio/grpc/internal/w;)Ljava/util/concurrent/atomic/AtomicLong;` @kind static;
  #L2155c6.  v2:= temp @kind object;
  #L2155c8.  v3:= v7.`io.grpc.internal.v.a` @type ^`long` @kind wide;
  #L2155cc.  call temp:= `compareAndSet`(v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.compareAndSet:(JJ)Z` @kind virtual;
  #L2155d2.  v2:= temp;
  #L2155d4.  if v2 == 0 then goto L215614;
  #L2155d8.  call temp:= `c`() @signature `Lio/grpc/internal/w;.c:()Ljava/util/logging/Logger;` @kind static;
  #L2155de.  v2:= temp @kind object;
  #L2155e0.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L2155e4.  v4:= 2I;
  #L2155e6.  v4:= new `java.lang.Object`[v4];
  #L2155ea.  v5:= 0I;
  #L2155ec.  v6:= v7.`io.grpc.internal.v.b` @type ^`io.grpc.internal.w` @kind object;
  #L2155f0.  call temp:= `b`(v6) @signature `Lio/grpc/internal/w;.b:(Lio/grpc/internal/w;)Ljava/lang/String;` @kind static;
  #L2155f6.  v6:= temp @kind object;
  #L2155f8.  v4[v5]:= v6 @kind object;
  #L2155fc.  v5:= 1I;
  #L2155fe.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L215604.  v0:= temp @kind object;
  #L215606.  v4[v5]:= v0 @kind object;
  #L21560a.  v0:= "Increased {0} to {1}" @kind object;
  #L21560e.  call `log`(v2, v3, v0, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L215614.  return @kind void;
}
procedure `long` `b`(`io.grpc.internal.v` v2 @kind this) @signature `Lio/grpc/internal/v;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L215544.  v0:= v2.`io.grpc.internal.v.a` @type ^`long` @kind wide;
  #L215548.  return v0 @kind wide;
}
