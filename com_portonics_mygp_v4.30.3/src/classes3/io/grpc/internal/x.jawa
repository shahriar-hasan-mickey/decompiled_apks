record `io.grpc.internal.x` @kind class @AccessFlag FINAL extends `io.grpc.internal.o5` @kind interface {
  `java.util.concurrent.atomic.AtomicLong` `io.grpc.internal.x.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.internal.x` v1 @kind this) @signature `Lio/grpc/internal/x;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L215714.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21571a.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L21571e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L215724.  v1.`io.grpc.internal.x.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L215728.  return @kind void;
}
procedure `void` `add`(`io.grpc.internal.x` v1 @kind this, `long` v2 ) @signature `Lio/grpc/internal/x;.add:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21573c.  v0:= v1.`io.grpc.internal.x.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L215740.  call temp:= `getAndAdd`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndAdd:(J)J` @kind virtual;
  #L215746.  return @kind void;
}
