record `io.grpc.internal.w7` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.Collection` `io.grpc.internal.w7.b` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.s8` `io.grpc.internal.w7.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Future` `io.grpc.internal.w7.d` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Future` `io.grpc.internal.w7.e` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.j8` `io.grpc.internal.w7.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.w7` v0 @kind this, `io.grpc.internal.j8` v1 @kind object, `java.util.Collection` v2 @kind object, `io.grpc.internal.s8` v3 @kind object, `java.util.concurrent.Future` v4 @kind object, `java.util.concurrent.Future` v5 @kind object) @signature `Lio/grpc/internal/w7;.<init>:(Lio/grpc/internal/j8;Ljava/util/Collection;Lio/grpc/internal/s8;Ljava/util/concurrent/Future;Ljava/util/concurrent/Future;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L228158.  v0.`io.grpc.internal.w7.f` @type ^`io.grpc.internal.j8` := v1 @kind object;
  #L22815c.  v0.`io.grpc.internal.w7.b` @type ^`java.util.Collection` := v2 @kind object;
  #L228160.  v0.`io.grpc.internal.w7.c` @type ^`io.grpc.internal.s8` := v3 @kind object;
  #L228164.  v0.`io.grpc.internal.w7.d` @type ^`java.util.concurrent.Future` := v4 @kind object;
  #L228168.  v0.`io.grpc.internal.w7.e` @type ^`java.util.concurrent.Future` := v5 @kind object;
  #L22816c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L228172.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.w7` v3 @kind this) @signature `Lio/grpc/internal/w7;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L228184.  v0:= v3.`io.grpc.internal.w7.b` @type ^`java.util.Collection` @kind object;
  #L228188.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L22818e.  v0:= temp @kind object;
  #L228190.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L228196.  v1:= temp;
  #L228198.  if v1 == 0 then goto L2281c4;
  #L22819c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2281a2.  v1:= temp @kind object;
  #L2281a4.  v1:= (`io.grpc.internal.s8`) v1 @kind object;
  #L2281a8.  v2:= v3.`io.grpc.internal.w7.c` @type ^`io.grpc.internal.s8` @kind object;
  #L2281ac.  if v1 == v2 then goto L228190;
  #L2281b0.  v1:= v1.`io.grpc.internal.s8.a` @type ^`io.grpc.internal.o1` @kind object;
  #L2281b4.  call temp:= `l`() @signature `Lio/grpc/internal/j8;.l:()Lio/grpc/Status;` @kind static;
  #L2281ba.  v2:= temp @kind object;
  #L2281bc.  call `b`(v1, v2) @signature `Lio/grpc/internal/o1;.b:(Lio/grpc/Status;)V` @kind interface;
  #L2281c2.  goto L228190;
  #L2281c4.  v0:= v3.`io.grpc.internal.w7.d` @type ^`java.util.concurrent.Future` @kind object;
  #L2281c8.  v1:= 0I;
  #L2281ca.  if v0 == 0 then goto L2281d4;
  #L2281ce.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L2281d4.  v0:= v3.`io.grpc.internal.w7.e` @type ^`java.util.concurrent.Future` @kind object;
  #L2281d8.  if v0 == 0 then goto L2281e2;
  #L2281dc.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L2281e2.  v0:= v3.`io.grpc.internal.w7.f` @type ^`io.grpc.internal.j8` @kind object;
  #L2281e6.  call `a0`(v0) @signature `Lio/grpc/internal/j8;.a0:()V` @kind virtual;
  #L2281ec.  return @kind void;
}
