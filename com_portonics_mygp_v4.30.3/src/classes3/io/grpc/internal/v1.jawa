record `io.grpc.internal.v1` @kind class @AccessFlag ABSTRACT {
  `int` `io.grpc.internal.v1.a` @AccessFlag ;
  `java.io.IOException` `io.grpc.internal.v1.b` @AccessFlag ;
}
procedure `void` `<init>`(`io.grpc.internal.v1` v0 @kind this) @signature `Lio/grpc/internal/v1;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2193b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2193ba.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.v1` v0 @kind this, `io.grpc.internal.t1` v1 @kind object) @signature `Lio/grpc/internal/v1;.<init>:(Lio/grpc/internal/t1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2193cc.  call `<init>`(v0) @signature `Lio/grpc/internal/v1;.<init>:()V` @kind direct;
  #L2193d2.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.internal.v1` v1 @kind this) @signature `Lio/grpc/internal/v1;.a:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L219394.  v0:= v1.`io.grpc.internal.v1.b` @type ^`java.io.IOException` @kind object;
  #L219398.  if v0 == 0 then goto L2193a0;
  #L21939c.  v0:= 1I;
  #L21939e.  goto L2193a2;
  #L2193a0.  v0:= 0I;
  #L2193a2.  return v0;
}
procedure `void` `b`(`io.grpc.internal.v1` v0 @kind this, `io.grpc.internal.k7` v1 @kind object, `int` v2 ) @signature `Lio/grpc/internal/v1;.b:(Lio/grpc/internal/k7;I)V` @AccessFlag FINAL {
    temp;

  #L2193e4.  call temp:= `c`(v0, v1, v2) @signature `Lio/grpc/internal/v1;.c:(Lio/grpc/internal/k7;I)I` @kind virtual;
  #L2193ea.  v1:= temp;
  #L2193ec.  v0.`io.grpc.internal.v1.a` @type ^`int` := v1;
  #L2193f0.  goto L2193f8;
  #L2193f2.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2193f4.  v0.`io.grpc.internal.v1.b` @type ^`java.io.IOException` := v1 @kind object;
  #L2193f8.  return @kind void;
  catch `java.io.IOException` @[L2193e4..L2193f0] goto L2193f2;
}
procedure `int` `c`(`io.grpc.internal.k7` v0 @kind object, `int` v1 ) @signature `Lio/grpc/internal/v1;.c:(Lio/grpc/internal/k7;I)I` @AccessFlag ABSTRACT {

  # return;
}
