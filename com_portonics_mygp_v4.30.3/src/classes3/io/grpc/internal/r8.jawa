record `io.grpc.internal.r8` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `io.grpc.internal.j8$c` `io.grpc.internal.r8.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.r8` v0 @kind this, `io.grpc.internal.j8$c` v1 @kind object) @signature `Lio/grpc/internal/r8;.<init>:(Lio/grpc/internal/j8$c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L228e60.  v0.`io.grpc.internal.r8.b` @type ^`io.grpc.internal.j8$c` := v1 @kind object;
  #L228e64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L228e6a.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.r8` v2 @kind this) @signature `Lio/grpc/internal/r8;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L228e7c.  v0:= v2.`io.grpc.internal.r8.b` @type ^`io.grpc.internal.j8$c` @kind object;
  #L228e80.  v0:= v0.`io.grpc.internal.j8$c.b` @type ^`io.grpc.internal.j8` @kind object;
  #L228e84.  call temp:= `o`(v0) @signature `Lio/grpc/internal/j8;.o:(Lio/grpc/internal/j8;)Ljava/util/concurrent/Executor;` @kind static;
  #L228e8a.  v0:= temp @kind object;
  #L228e8c.  v1:= new `io.grpc.internal.q8`;
  #L228e90.  call `<init>`(v1, v2) @signature `Lio/grpc/internal/q8;.<init>:(Lio/grpc/internal/r8;)V` @kind direct;
  #L228e96.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L228e9c.  return @kind void;
}
