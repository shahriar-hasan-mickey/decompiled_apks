record `io.grpc.internal.c9` @kind class @AccessFlag FINAL extends `io.grpc.internal.g4` @kind interface {
  `io.grpc.MethodDescriptor` `io.grpc.internal.c9.a` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.g9` `io.grpc.internal.c9.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.c9` v0 @kind this, `io.grpc.internal.g9` v1 @kind object, `io.grpc.MethodDescriptor` v2 @kind object) @signature `Lio/grpc/internal/c9;.<init>:(Lio/grpc/internal/g9;Lio/grpc/MethodDescriptor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L22ab68.  v0.`io.grpc.internal.c9.b` @type ^`io.grpc.internal.g9` := v1 @kind object;
  #L22ab6c.  v0.`io.grpc.internal.c9.a` @type ^`io.grpc.MethodDescriptor` := v2 @kind object;
  #L22ab70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22ab76.  return @kind void;
}
procedure `io.grpc.internal.h4` `get`(`io.grpc.internal.c9` v4 @kind this) @signature `Lio/grpc/internal/c9;.get:()Lio/grpc/internal/h4;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22aae8.  v0:= v4.`io.grpc.internal.c9.b` @type ^`io.grpc.internal.g9` @kind object;
  #L22aaec.  call temp:= `b`(v0) @signature `Lio/grpc/internal/g9;.b:(Lio/grpc/internal/g9;)Z` @kind static;
  #L22aaf2.  v0:= temp;
  #L22aaf4.  if v0 != 0 then goto L22aafe;
  #L22aaf8.  v0:= `@@io.grpc.internal.h4.a` @type ^`io.grpc.internal.h4` @kind object;
  #L22aafc.  return v0 @kind object;
  #L22aafe.  v0:= v4.`io.grpc.internal.c9.b` @type ^`io.grpc.internal.g9` @kind object;
  #L22ab02.  v1:= v4.`io.grpc.internal.c9.a` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L22ab06.  call temp:= `c`(v0, v1) @signature `Lio/grpc/internal/g9;.c:(Lio/grpc/MethodDescriptor;)Lio/grpc/internal/h4;` @kind virtual;
  #L22ab0c.  v0:= temp @kind object;
  #L22ab0e.  v1:= `@@io.grpc.internal.h4.a` @type ^`io.grpc.internal.h4` @kind object;
  #L22ab12.  call temp:= `equals`(v0, v1) @signature `Lio/grpc/internal/h4;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22ab18.  v1:= temp;
  #L22ab1a.  if v1 != 0 then goto L22ab44;
  #L22ab1e.  v1:= v4.`io.grpc.internal.c9.b` @type ^`io.grpc.internal.g9` @kind object;
  #L22ab22.  v2:= v4.`io.grpc.internal.c9.a` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L22ab26.  call temp:= `e`(v1, v2) @signature `Lio/grpc/internal/g9;.e:(Lio/grpc/MethodDescriptor;)Lio/grpc/internal/v8;` @kind virtual;
  #L22ab2c.  v1:= temp @kind object;
  #L22ab2e.  v2:= `@@io.grpc.internal.v8.a` @type ^`io.grpc.internal.v8` @kind object;
  #L22ab32.  call temp:= `equals`(v1, v2) @signature `Lio/grpc/internal/v8;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22ab38.  v1:= temp;
  #L22ab3a.  if v1 == 0 then goto L22ab40;
  #L22ab3e.  goto L22ab44;
  #L22ab40.  v1:= 0I;
  #L22ab42.  goto L22ab46;
  #L22ab44.  v1:= 1I;
  #L22ab46.  v2:= v4.`io.grpc.internal.c9.a` @type ^`io.grpc.MethodDescriptor` @kind object;
  #L22ab4a.  v3:= "Can not apply both retry and hedging policy for the method '%s'" @kind object;
  #L22ab4e.  call `a`(v1, v3, v2) @signature `Lcom/google/common/base/p0;.a:(ZLjava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L22ab54.  return v0 @kind object;
}
