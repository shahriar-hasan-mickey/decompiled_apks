record `io.grpc.internal.b9` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface, `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Executor` `io.grpc.internal.b9.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `io.grpc.internal.b9.e` @AccessFlag PRIVATE_FINAL;
  `int` `io.grpc.internal.b9.f` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.logging.Logger` `@@io.grpc.internal.b9.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.internal.y8` `@@io.grpc.internal.b9.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/b9;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22a930.  v0:= constclass @type ^`io.grpc.internal.b9` @kind object;
  #L22a934.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L22a93a.  v0:= temp @kind object;
  #L22a93c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L22a942.  v0:= temp @kind object;
  #L22a944.  `@@io.grpc.internal.b9.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L22a948.  call temp:= `c`() @signature `Lio/grpc/internal/b9;.c:()Lio/grpc/internal/y8;` @kind static;
  #L22a94e.  v0:= temp @kind object;
  #L22a950.  `@@io.grpc.internal.b9.c` @type ^`io.grpc.internal.y8` := v0 @kind object;
  #L22a954.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.b9` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lio/grpc/internal/b9;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L22a968.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22a96e.  v0:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L22a972.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L22a978.  v1.`io.grpc.internal.b9.e` @type ^`java.util.Queue` := v0 @kind object;
  #L22a97c.  v0:= 0I;
  #L22a97e.  v1.`io.grpc.internal.b9.f` @type ^`int` := v0;
  #L22a982.  v0:= "'executor' must not be null." @kind object;
  #L22a986.  call temp:= `s`(v2, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22a98c.  v1.`io.grpc.internal.b9.d` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L22a990.  return @kind void;
}
procedure `int` `a`(`io.grpc.internal.b9` v0 @kind object) @signature `Lio/grpc/internal/b9;.a:(Lio/grpc/internal/b9;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L22a8a4.  v0:= v0.`io.grpc.internal.b9.f` @type ^`int`;
  #L22a8a8.  return v0;
}
procedure `int` `b`(`io.grpc.internal.b9` v0 @kind object, `int` v1 ) @signature `Lio/grpc/internal/b9;.b:(Lio/grpc/internal/b9;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L22a8bc.  v0.`io.grpc.internal.b9.f` @type ^`int` := v1;
  #L22a8c0.  return v1;
}
procedure `io.grpc.internal.y8` `c`() @signature `Lio/grpc/internal/b9;.c:()Lio/grpc/internal/y8;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22a8d4.  v0:= 0I;
  #L22a8d6.  v1:= new `io.grpc.internal.z8`;
  #L22a8da.  v2:= constclass @type ^`io.grpc.internal.b9` @kind object;
  #L22a8de.  v3:= "f" @kind object;
  #L22a8e2.  call temp:= `newUpdater`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L22a8e8.  v2:= temp @kind object;
  #L22a8ea.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/internal/z8;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;Lio/grpc/internal/x8;)V` @kind direct;
  #L22a8f0.  goto L22a910;
  #L22a8f2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22a8f4.  v2:= `@@io.grpc.internal.b9.b` @type ^`java.util.logging.Logger` @kind object;
  #L22a8f8.  v3:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L22a8fc.  v4:= "FieldUpdaterAtomicHelper failed" @kind object;
  #L22a900.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L22a906.  v1:= new `io.grpc.internal.a9`;
  #L22a90a.  call `<init>`(v1, v0) @signature `Lio/grpc/internal/a9;.<init>:(Lio/grpc/internal/x8;)V` @kind direct;
  #L22a910.  return v1 @kind object;
  catch `java.lang.Throwable` @[L22a8d6..L22a8f0] goto L22a8f2;
}
procedure `void` `d`(`io.grpc.internal.b9` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/grpc/internal/b9;.d:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L22aa8c.  v0:= `@@io.grpc.internal.b9.c` @type ^`io.grpc.internal.y8` @kind object;
  #L22aa90.  v1:= 0I;
  #L22aa92.  v2:= -1I;
  #L22aa94.  call temp:= `a`(v0, v3, v1, v2) @signature `Lio/grpc/internal/y8;.a:(Lio/grpc/internal/b9;II)Z` @kind virtual;
  #L22aa9a.  v0:= temp;
  #L22aa9c.  if v0 == 0 then goto L22aac8;
  #L22aaa0.  v0:= v3.`io.grpc.internal.b9.d` @type ^`java.util.concurrent.Executor` @kind object;
  #L22aaa4.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L22aaaa.  goto L22aac8;
  #L22aaac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22aaae.  if v4 == 0 then goto L22aabc;
  #L22aab2.  v2:= v3.`io.grpc.internal.b9.e` @type ^`java.util.Queue` @kind object;
  #L22aab6.  call temp:= `remove`(v2, v4) @signature `Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L22aabc.  v4:= `@@io.grpc.internal.b9.c` @type ^`io.grpc.internal.y8` @kind object;
  #L22aac0.  call `b`(v4, v3, v1) @signature `Lio/grpc/internal/y8;.b:(Lio/grpc/internal/b9;I)V` @kind virtual;
  #L22aac6.  throw v0;
  #L22aac8.  return @kind void;
  catch `java.lang.Throwable` @[L22aaa0..L22aaaa] goto L22aaac;
}
procedure `void` `execute`(`io.grpc.internal.b9` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/grpc/internal/b9;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a9a4.  v0:= v2.`io.grpc.internal.b9.e` @type ^`java.util.Queue` @kind object;
  #L22a9a8.  v1:= "'r' must not be null." @kind object;
  #L22a9ac.  call temp:= `s`(v3, v1) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L22a9b2.  v1:= temp @kind object;
  #L22a9b4.  call temp:= `add`(v0, v1) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22a9ba.  call `d`(v2, v3) @signature `Lio/grpc/internal/b9;.d:(Ljava/lang/Runnable;)V` @kind direct;
  #L22a9c0.  return @kind void;
}
procedure `void` `run`(`io.grpc.internal.b9` v7 @kind this) @signature `Lio/grpc/internal/b9;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L22a9d4.  v0:= 0I;
  #L22a9d6.  v1:= v7.`io.grpc.internal.b9.e` @type ^`java.util.Queue` @kind object;
  #L22a9da.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L22a9e0.  v1:= temp @kind object;
  #L22a9e2.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L22a9e6.  if v1 == 0 then goto L22aa26;
  #L22a9ea.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L22a9f0.  goto L22a9d4;
  #L22a9f2.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L22a9f4.  v3:= `@@io.grpc.internal.b9.b` @type ^`java.util.logging.Logger` @kind object;
  #L22a9f8.  v4:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L22a9fc.  v5:= new `java.lang.StringBuilder`;
  #L22aa00.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22aa06.  v6:= "Exception while executing runnable " @kind object;
  #L22aa0a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22aa10.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22aa16.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22aa1c.  v1:= temp @kind object;
  #L22aa1e.  call `log`(v3, v4, v1, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L22aa24.  goto L22a9d4;
  #L22aa26.  v1:= `@@io.grpc.internal.b9.c` @type ^`io.grpc.internal.y8` @kind object;
  #L22aa2a.  call `b`(v1, v7, v0) @signature `Lio/grpc/internal/y8;.b:(Lio/grpc/internal/b9;I)V` @kind virtual;
  #L22aa30.  v0:= v7.`io.grpc.internal.b9.e` @type ^`java.util.Queue` @kind object;
  #L22aa34.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L22aa3a.  v0:= temp;
  #L22aa3c.  if v0 != 0 then goto L22aa48;
  #L22aa40.  v0:= 0I;
  #L22aa42.  call `d`(v7, v0) @signature `Lio/grpc/internal/b9;.d:(Ljava/lang/Runnable;)V` @kind direct;
  #L22aa48.  return @kind void;
  #L22aa4a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L22aa4c.  v2:= `@@io.grpc.internal.b9.c` @type ^`io.grpc.internal.y8` @kind object;
  #L22aa50.  call `b`(v2, v7, v0) @signature `Lio/grpc/internal/y8;.b:(Lio/grpc/internal/b9;I)V` @kind virtual;
  #L22aa56.  goto L22aa5a;
  #L22aa58.  throw v1;
  #L22aa5a.  goto L22aa58;
  catch `java.lang.Throwable` @[L22a9d6..L22a9e6] goto L22aa4a;
  catch `java.lang.RuntimeException` @[L22a9ea..L22a9f0] goto L22a9f2;
  catch `java.lang.Throwable` @[L22a9ea..L22a9f0] goto L22aa4a;
  catch `java.lang.Throwable` @[L22a9f4..L22aa24] goto L22aa4a;
}
