record `io.grpc.internal.s0` @kind class @AccessFlag  extends `io.grpc.i2` @kind interface {
  `io.opencensus.trace.propagation.c` `io.grpc.internal.s0.a` @AccessFlag FINAL_SYNTHETIC;
  `io.grpc.internal.b1` `io.grpc.internal.s0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.s0` v0 @kind this, `io.grpc.internal.b1` v1 @kind object, `io.opencensus.trace.propagation.c` v2 @kind object) @signature `Lio/grpc/internal/s0;.<init>:(Lio/grpc/internal/b1;Lio/opencensus/trace/propagation/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L216dd0.  v0.`io.grpc.internal.s0.b` @type ^`io.grpc.internal.b1` := v1 @kind object;
  #L216dd4.  v0.`io.grpc.internal.s0.a` @type ^`io.opencensus.trace.propagation.c` := v2 @kind object;
  #L216dd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L216dde.  return @kind void;
}
procedure `byte`[] `a`(`io.grpc.internal.s0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/internal/s0;.a:(Ljava/lang/Object;)[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L216d48.  v1:= (`io.opencensus.trace.p`) v1 @kind object;
  #L216d4c.  call temp:= `d`(v0, v1) @signature `Lio/grpc/internal/s0;.d:(Lio/opencensus/trace/p;)[B` @kind virtual;
  #L216d52.  v1:= temp @kind object;
  #L216d54.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.internal.s0` v0 @kind this, `byte`[] v1 @kind object) @signature `Lio/grpc/internal/s0;.b:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L216db4.  call temp:= `c`(v0, v1) @signature `Lio/grpc/internal/s0;.c:([B)Lio/opencensus/trace/p;` @kind virtual;
  #L216dba.  v1:= temp @kind object;
  #L216dbc.  return v1 @kind object;
}
procedure `io.opencensus.trace.p` `c`(`io.grpc.internal.s0` v3 @kind this, `byte`[] v4 @kind object) @signature `Lio/grpc/internal/s0;.c:([B)Lio/opencensus/trace/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L216d68.  v0:= v3.`io.grpc.internal.s0.a` @type ^`io.opencensus.trace.propagation.c` @kind object;
  #L216d6c.  call temp:= `a`(v0, v4) @signature `Lio/opencensus/trace/propagation/c;.a:([B)Lio/opencensus/trace/p;` @kind virtual;
  #L216d72.  v4:= temp @kind object;
  #L216d74.  return v4 @kind object;
  #L216d76.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L216d78.  call temp:= `a`() @signature `Lio/grpc/internal/b1;.a:()Ljava/util/logging/Logger;` @kind static;
  #L216d7e.  v0:= temp @kind object;
  #L216d80.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L216d84.  v2:= "Failed to parse tracing header" @kind object;
  #L216d88.  call `log`(v0, v1, v2, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L216d8e.  v4:= `@@io.opencensus.trace.p.b` @type ^`io.opencensus.trace.p` @kind object;
  #L216d92.  return v4 @kind object;
  catch `java.lang.Exception` @[L216d68..L216d74] goto L216d76;
}
procedure `byte`[] `d`(`io.grpc.internal.s0` v1 @kind this, `io.opencensus.trace.p` v2 @kind object) @signature `Lio/grpc/internal/s0;.d:(Lio/opencensus/trace/p;)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L216d28.  v0:= v1.`io.grpc.internal.s0.a` @type ^`io.opencensus.trace.propagation.c` @kind object;
  #L216d2c.  call temp:= `c`(v0, v2) @signature `Lio/opencensus/trace/propagation/c;.c:(Lio/opencensus/trace/p;)[B` @kind virtual;
  #L216d32.  v2:= temp @kind object;
  #L216d34.  return v2 @kind object;
}
