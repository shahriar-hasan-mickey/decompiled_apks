record `io.grpc.internal.g6` @kind class @AccessFlag FINAL extends `io.grpc.internal.s3` @kind class {
  `io.grpc.internal.f6` `io.grpc.internal.g6.e` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ref.ReferenceQueue` `@@io.grpc.internal.g6.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@io.grpc.internal.g6.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@io.grpc.internal.g6.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/internal/g6;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L224d98.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L224d9c.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L224da2.  `@@io.grpc.internal.g6.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L224da6.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L224daa.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L224db0.  `@@io.grpc.internal.g6.c` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L224db4.  v0:= constclass @type ^`io.grpc.internal.g6` @kind object;
  #L224db8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L224dbe.  v0:= temp @kind object;
  #L224dc0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L224dc6.  v0:= temp @kind object;
  #L224dc8.  `@@io.grpc.internal.g6.d` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L224dcc.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.g6` v2 @kind this, `io.grpc.z1` v3 @kind object) @signature `Lio/grpc/internal/g6;.<init>:(Lio/grpc/z1;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L224de0.  v0:= `@@io.grpc.internal.g6.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L224de4.  v1:= `@@io.grpc.internal.g6.c` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L224de8.  call `<init>`(v2, v3, v0, v1) @signature `Lio/grpc/internal/g6;.<init>:(Lio/grpc/z1;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @kind direct;
  #L224dee.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.g6` v1 @kind this, `io.grpc.z1` v2 @kind object, `java.lang.ref.ReferenceQueue` v3 @kind object, `java.util.concurrent.ConcurrentMap` v4 @kind object) @signature `Lio/grpc/internal/g6;.<init>:(Lio/grpc/z1;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L224e00.  call `<init>`(v1, v2) @signature `Lio/grpc/internal/s3;.<init>:(Lio/grpc/z1;)V` @kind direct;
  #L224e06.  v0:= new `io.grpc.internal.f6`;
  #L224e0a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/grpc/internal/f6;.<init>:(Lio/grpc/internal/g6;Lio/grpc/z1;Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V` @kind direct;
  #L224e10.  v1.`io.grpc.internal.g6.e` @type ^`io.grpc.internal.f6` := v0 @kind object;
  #L224e14.  return @kind void;
}
procedure `java.util.logging.Logger` `i`() @signature `Lio/grpc/internal/g6;.i:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L224d80.  v0:= `@@io.grpc.internal.g6.d` @type ^`java.util.logging.Logger` @kind object;
  #L224d84.  return v0 @kind object;
}
