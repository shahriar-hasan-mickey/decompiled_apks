record `io.grpc.internal.a` @kind class @AccessFlag  extends `io.grpc.internal.v3` @kind interface {
  `io.grpc.m2` `io.grpc.internal.a.a` @AccessFlag PRIVATE;
  `boolean` `io.grpc.internal.a.b` @AccessFlag PRIVATE;
  `io.grpc.internal.q9` `io.grpc.internal.a.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `io.grpc.internal.a.d` @AccessFlag PRIVATE;
  `io.grpc.internal.e` `io.grpc.internal.a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.grpc.internal.a` v0 @kind this, `io.grpc.internal.e` v1 @kind object, `io.grpc.m2` v2 @kind object, `io.grpc.internal.q9` v3 @kind object) @signature `Lio/grpc/internal/a;.<init>:(Lio/grpc/internal/e;Lio/grpc/m2;Lio/grpc/internal/q9;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L213e18.  v0.`io.grpc.internal.a.e` @type ^`io.grpc.internal.e` := v1 @kind object;
  #L213e1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213e22.  v1:= "headers" @kind object;
  #L213e26.  call temp:= `s`(v2, v1) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L213e2c.  v1:= temp @kind object;
  #L213e2e.  v1:= (`io.grpc.m2`) v1 @kind object;
  #L213e32.  v0.`io.grpc.internal.a.a` @type ^`io.grpc.m2` := v1 @kind object;
  #L213e36.  v1:= "statsTraceCtx" @kind object;
  #L213e3a.  call temp:= `s`(v3, v1) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L213e40.  v1:= temp @kind object;
  #L213e42.  v1:= (`io.grpc.internal.q9`) v1 @kind object;
  #L213e46.  v0.`io.grpc.internal.a.c` @type ^`io.grpc.internal.q9` := v1 @kind object;
  #L213e4a.  return @kind void;
}
procedure `io.grpc.internal.v3` `c`(`io.grpc.internal.a` v0 @kind this, `io.grpc.z` v1 @kind object) @signature `Lio/grpc/internal/a;.c:(Lio/grpc/z;)Lio/grpc/internal/v3;` @AccessFlag PUBLIC {
    temp;

  #L213e04.  return v0 @kind object;
}
procedure `void` `close`(`io.grpc.internal.a` v3 @kind this) @signature `Lio/grpc/internal/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L213e5c.  v0:= 1I;
  #L213e5e.  v3.`io.grpc.internal.a.b` @type ^`boolean` := v0 @kind boolean;
  #L213e62.  v1:= v3.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213e66.  if v1 == 0 then goto L213e6c;
  #L213e6a.  goto L213e6e;
  #L213e6c.  v0:= 0I;
  #L213e6e.  v1:= "Lack of request message. GET request is only supported for unary requests" @kind object;
  #L213e72.  call `z`(v0, v1) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L213e78.  v0:= v3.`io.grpc.internal.a.e` @type ^`io.grpc.internal.e` @kind object;
  #L213e7c.  call temp:= `r`(v0) @signature `Lio/grpc/internal/e;.r:()Lio/grpc/internal/b;` @kind virtual;
  #L213e82.  v0:= temp @kind object;
  #L213e84.  v1:= v3.`io.grpc.internal.a.a` @type ^`io.grpc.m2` @kind object;
  #L213e88.  v2:= v3.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213e8c.  call `d`(v0, v1, v2) @signature `Lio/grpc/internal/b;.d:(Lio/grpc/m2;[B)V` @kind interface;
  #L213e92.  v0:= 0I;
  #L213e94.  v3.`io.grpc.internal.a.d` @type ^`byte`[] := v0 @kind object;
  #L213e98.  v3.`io.grpc.internal.a.a` @type ^`io.grpc.m2` := v0 @kind object;
  #L213e9c.  return @kind void;
}
procedure `void` `d`(`io.grpc.internal.a` v8 @kind this, `java.io.InputStream` v9 @kind object) @signature `Lio/grpc/internal/a;.d:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L213ed8.  v0:= v8.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213edc.  v1:= 0I;
  #L213ede.  if v0 != 0 then goto L213ee6;
  #L213ee2.  v0:= 1I;
  #L213ee4.  goto L213ee8;
  #L213ee6.  v0:= 0I;
  #L213ee8.  v2:= "writePayload should not be called multiple times" @kind object;
  #L213eec.  call `z`(v0, v2) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L213ef2.  call temp:= `b`(v9) @signature `Lio/grpc/internal/a5;.b:(Ljava/io/InputStream;)[B` @kind static;
  #L213ef8.  v9:= temp @kind object;
  #L213efa.  v8.`io.grpc.internal.a.d` @type ^`byte`[] := v9 @kind object;
  #L213efe.  v9:= v8.`io.grpc.internal.a.c` @type ^`io.grpc.internal.q9` @kind object;
  #L213f02.  call `i`(v9, v1) @signature `Lio/grpc/internal/q9;.i:(I)V` @kind virtual;
  #L213f08.  v2:= v8.`io.grpc.internal.a.c` @type ^`io.grpc.internal.q9` @kind object;
  #L213f0c.  v3:= 0I;
  #L213f0e.  v9:= v8.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213f12.  v0:= length @variable v9;
  #L213f14.  v4:= (`long`) v0 @kind i2l;
  #L213f16.  v9:= length @variable v9;
  #L213f18.  v6:= (`long`) v9 @kind i2l;
  #L213f1a.  call `j`(v2, v3, v4, v6) @signature `Lio/grpc/internal/q9;.j:(IJJ)V` @kind virtual;
  #L213f20.  v9:= v8.`io.grpc.internal.a.c` @type ^`io.grpc.internal.q9` @kind object;
  #L213f24.  v0:= v8.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213f28.  v0:= length @variable v0;
  #L213f2a.  v0:= (`long`) v0 @kind i2l;
  #L213f2c.  call `k`(v9, v0) @signature `Lio/grpc/internal/q9;.k:(J)V` @kind virtual;
  #L213f32.  v9:= v8.`io.grpc.internal.a.c` @type ^`io.grpc.internal.q9` @kind object;
  #L213f36.  v0:= v8.`io.grpc.internal.a.d` @type ^`byte`[] @kind object;
  #L213f3a.  v0:= length @variable v0;
  #L213f3c.  v0:= (`long`) v0 @kind i2l;
  #L213f3e.  call `l`(v9, v0) @signature `Lio/grpc/internal/q9;.l:(J)V` @kind virtual;
  #L213f44.  return @kind void;
  #L213f46.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L213f48.  v0:= new `java.lang.RuntimeException`;
  #L213f4c.  call `<init>`(v0, v9) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L213f52.  throw v0;
  catch `java.io.IOException` @[L213ef2..L213efe] goto L213f46;
}
procedure `void` `e`(`io.grpc.internal.a` v0 @kind this, `int` v1 ) @signature `Lio/grpc/internal/a;.e:(I)V` @AccessFlag PUBLIC {
    temp;

  #L213ec4.  return @kind void;
}
procedure `void` `flush`(`io.grpc.internal.a` v0 @kind this) @signature `Lio/grpc/internal/a;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L213eb0.  return @kind void;
}
procedure `boolean` `isClosed`(`io.grpc.internal.a` v1 @kind this) @signature `Lio/grpc/internal/a;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213dec.  v0:= v1.`io.grpc.internal.a.b` @type ^`boolean` @kind boolean;
  #L213df0.  return v0;
}
