record `io.grpc.internal.z8` @kind class @AccessFlag FINAL extends `io.grpc.internal.y8` @kind class {
  `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `io.grpc.internal.z8.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.grpc.internal.z8` v1 @kind this, `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` v2 @kind object) @signature `Lio/grpc/internal/z8;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L22a7a8.  v0:= 0I;
  #L22a7aa.  call `<init>`(v1, v0) @signature `Lio/grpc/internal/y8;.<init>:(Lio/grpc/internal/x8;)V` @kind direct;
  #L22a7b0.  v1.`io.grpc.internal.z8.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v2 @kind object;
  #L22a7b4.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.internal.z8` v0 @kind this, `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` v1 @kind object, `io.grpc.internal.x8` v2 @kind object) @signature `Lio/grpc/internal/z8;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;Lio/grpc/internal/x8;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L22a7c8.  call `<init>`(v0, v1) @signature `Lio/grpc/internal/z8;.<init>:(Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;)V` @kind direct;
  #L22a7ce.  return @kind void;
}
procedure `boolean` `a`(`io.grpc.internal.z8` v1 @kind this, `io.grpc.internal.b9` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/grpc/internal/z8;.a:(Lio/grpc/internal/b9;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a788.  v0:= v1.`io.grpc.internal.z8.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L22a78c.  call temp:= `compareAndSet`(v0, v2, v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L22a792.  v2:= temp;
  #L22a794.  return v2;
}
procedure `void` `b`(`io.grpc.internal.z8` v1 @kind this, `io.grpc.internal.b9` v2 @kind object, `int` v3 ) @signature `Lio/grpc/internal/z8;.b:(Lio/grpc/internal/b9;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a7e0.  v0:= v1.`io.grpc.internal.z8.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L22a7e4.  call `set`(v0, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.set:(Ljava/lang/Object;I)V` @kind virtual;
  #L22a7ea.  return @kind void;
}
