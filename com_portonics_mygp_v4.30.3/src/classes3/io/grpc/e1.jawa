record `io.grpc.e1` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `io.grpc.e1.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.grpc.e1.c` @AccessFlag PRIVATE_FINAL;
  `long` `io.grpc.e1.d` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicLong` `@@io.grpc.e1.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/e1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20fa74.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L20fa78.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L20fa7e.  `@@io.grpc.e1.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L20fa82.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.e1` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 ) @signature `Lio/grpc/e1;.<init>:(Ljava/lang/String;Ljava/lang/String;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20fa94.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20fa9a.  v0:= "typeName" @kind object;
  #L20fa9e.  call temp:= `s`(v3, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20faa4.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L20faaa.  v0:= temp;
  #L20faac.  v0:= v0 ^~ 1;
  #L20fab0.  v1:= "empty type" @kind object;
  #L20fab4.  call `e`(v0, v1) @signature `Lcom/google/common/base/b0;.e:(ZLjava/lang/Object;)V` @kind static;
  #L20faba.  v2.`io.grpc.e1.b` @type ^`java.lang.String` := v3 @kind object;
  #L20fabe.  v2.`io.grpc.e1.c` @type ^`java.lang.String` := v4 @kind object;
  #L20fac2.  v2.`io.grpc.e1.d` @type ^`long` := v5 @kind wide;
  #L20fac6.  return @kind void;
}
procedure `io.grpc.e1` `a`(`java.lang.Class` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/grpc/e1;.a:(Ljava/lang/Class;Ljava/lang/String;)Lio/grpc/e1;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L20f8ec.  call temp:= `c`(v0) @signature `Lio/grpc/e1;.c:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L20f8f2.  v0:= temp @kind object;
  #L20f8f4.  call temp:= `b`(v0, v1) @signature `Lio/grpc/e1;.b:(Ljava/lang/String;Ljava/lang/String;)Lio/grpc/e1;` @kind static;
  #L20f8fa.  v0:= temp @kind object;
  #L20f8fc.  return v0 @kind object;
}
procedure `io.grpc.e1` `b`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lio/grpc/e1;.b:(Ljava/lang/String;Ljava/lang/String;)Lio/grpc/e1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20f910.  v0:= new `io.grpc.e1`;
  #L20f914.  call temp:= `e`() @signature `Lio/grpc/e1;.e:()J` @kind static;
  #L20f91a.  v1:= temp @kind wide;
  #L20f91c.  call `<init>`(v0, v3, v4, v1) @signature `Lio/grpc/e1;.<init>:(Ljava/lang/String;Ljava/lang/String;J)V` @kind direct;
  #L20f922.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`java.lang.Class` v2 @kind object) @signature `Lio/grpc/e1;.c:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f934.  v0:= "type" @kind object;
  #L20f938.  call temp:= `s`(v2, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20f93e.  v0:= temp @kind object;
  #L20f940.  v0:= (`java.lang.Class`) v0 @kind object;
  #L20f944.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L20f94a.  v0:= temp @kind object;
  #L20f94c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L20f952.  v1:= temp;
  #L20f954.  if v1 != 0 then goto L20f95a;
  #L20f958.  return v0 @kind object;
  #L20f95a.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20f960.  v0:= temp @kind object;
  #L20f962.  call temp:= `getPackage`(v2) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L20f968.  v2:= temp @kind object;
  #L20f96a.  call temp:= `getName`(v2) @signature `Ljava/lang/Package;.getName:()Ljava/lang/String;` @kind virtual;
  #L20f970.  v2:= temp @kind object;
  #L20f972.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20f978.  v2:= temp;
  #L20f97a.  v2:= v2 + 1;
  #L20f97e.  call temp:= `substring`(v0, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L20f984.  v2:= temp @kind object;
  #L20f986.  return v2 @kind object;
}
procedure `long` `e`() @signature `Lio/grpc/e1;.e:()J` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L20fa54.  v0:= `@@io.grpc.e1.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L20fa58.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J` @kind virtual;
  #L20fa5e.  v0:= temp @kind wide;
  #L20fa60.  return v0 @kind wide;
}
procedure `long` `d`(`io.grpc.e1` v2 @kind this) @signature `Lio/grpc/e1;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20fa3c.  v0:= v2.`io.grpc.e1.d` @type ^`long` @kind wide;
  #L20fa40.  return v0 @kind wide;
}
procedure `java.lang.String` `f`(`io.grpc.e1` v3 @kind this) @signature `Lio/grpc/e1;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20f998.  v0:= new `java.lang.StringBuilder`;
  #L20f99c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20f9a2.  v1:= v3.`io.grpc.e1.b` @type ^`java.lang.String` @kind object;
  #L20f9a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f9ac.  v1:= "<" @kind object;
  #L20f9b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f9b6.  v1:= v3.`io.grpc.e1.d` @type ^`long` @kind wide;
  #L20f9ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f9c0.  v1:= ">" @kind object;
  #L20f9c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f9ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20f9d0.  v0:= temp @kind object;
  #L20f9d2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`io.grpc.e1` v2 @kind this) @signature `Lio/grpc/e1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20f9e4.  v0:= new `java.lang.StringBuilder`;
  #L20f9e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20f9ee.  call temp:= `f`(v2) @signature `Lio/grpc/e1;.f:()Ljava/lang/String;` @kind virtual;
  #L20f9f4.  v1:= temp @kind object;
  #L20f9f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20f9fc.  v1:= v2.`io.grpc.e1.c` @type ^`java.lang.String` @kind object;
  #L20fa00.  if v1 == 0 then goto L20fa22;
  #L20fa04.  v1:= ": (" @kind object;
  #L20fa08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fa0e.  v1:= v2.`io.grpc.e1.c` @type ^`java.lang.String` @kind object;
  #L20fa12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fa18.  v1:= 41I;
  #L20fa1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fa22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20fa28.  v0:= temp @kind object;
  #L20fa2a.  return v0 @kind object;
}
