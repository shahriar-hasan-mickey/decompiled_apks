record `io.grpc.s1` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.grpc.s1` v0 @kind this) @signature `Lio/grpc/s1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L210188.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21018e.  return @kind void;
}
procedure `io.grpc.t0` `a`(`io.grpc.s1` v4 @kind this) @signature `Lio/grpc/s1;.a:()Lio/grpc/t0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L210144.  call temp:= `b`(v4) @signature `Lio/grpc/s1;.b:()Ljava/util/List;` @kind virtual;
  #L21014a.  v0:= temp @kind object;
  #L21014c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L210152.  v1:= temp;
  #L210154.  v2:= 0I;
  #L210156.  v3:= 1I;
  #L210158.  if v1 != v3 then goto L21015e;
  #L21015c.  goto L210160;
  #L21015e.  v3:= 0I;
  #L210160.  v1:= "Does not have exactly one group" @kind object;
  #L210164.  call `z`(v3, v1) @signature `Lcom/google/common/base/b0;.z:(ZLjava/lang/Object;)V` @kind static;
  #L21016a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L210170.  v0:= temp @kind object;
  #L210172.  v0:= (`io.grpc.t0`) v0 @kind object;
  #L210176.  return v0 @kind object;
}
procedure `java.util.List` `b`() @signature `Lio/grpc/s1;.b:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.grpc.d` `c`() @signature `Lio/grpc/s1;.c:()Lio/grpc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`() @signature `Lio/grpc/s1;.d:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `e`() @signature `Lio/grpc/s1;.e:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
