record `io.grpc.InternalChannelz` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.ConcurrentNavigableMap` `io.grpc.InternalChannelz.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentNavigableMap` `io.grpc.InternalChannelz.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `io.grpc.InternalChannelz.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `io.grpc.InternalChannelz.f` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `io.grpc.InternalChannelz.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.InternalChannelz.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.InternalChannelz` `@@io.grpc.InternalChannelz.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/InternalChannelz;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20f694.  v0:= constclass @type ^`io.grpc.InternalChannelz` @kind object;
  #L20f698.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20f69e.  v0:= temp @kind object;
  #L20f6a0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L20f6a6.  v0:= temp @kind object;
  #L20f6a8.  `@@io.grpc.InternalChannelz.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L20f6ac.  v0:= new `io.grpc.InternalChannelz`;
  #L20f6b0.  call `<init>`(v0) @signature `Lio/grpc/InternalChannelz;.<init>:()V` @kind direct;
  #L20f6b6.  `@@io.grpc.InternalChannelz.b` @type ^`io.grpc.InternalChannelz` := v0 @kind object;
  #L20f6ba.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.InternalChannelz` v1 @kind this) @signature `Lio/grpc/InternalChannelz;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20f6cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20f6d2.  v0:= new `java.util.concurrent.ConcurrentSkipListMap`;
  #L20f6d6.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V` @kind direct;
  #L20f6dc.  v1.`io.grpc.InternalChannelz.c` @type ^`java.util.concurrent.ConcurrentNavigableMap` := v0 @kind object;
  #L20f6e0.  v0:= new `java.util.concurrent.ConcurrentSkipListMap`;
  #L20f6e4.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V` @kind direct;
  #L20f6ea.  v1.`io.grpc.InternalChannelz.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` := v0 @kind object;
  #L20f6ee.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L20f6f2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L20f6f8.  v1.`io.grpc.InternalChannelz.e` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L20f6fc.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L20f700.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L20f706.  v1.`io.grpc.InternalChannelz.f` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L20f70a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L20f70e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L20f714.  v1.`io.grpc.InternalChannelz.g` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L20f718.  return @kind void;
}
procedure `java.util.logging.Logger` `a`() @signature `Lio/grpc/InternalChannelz;.a:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L20f658.  v0:= `@@io.grpc.InternalChannelz.a` @type ^`java.util.logging.Logger` @kind object;
  #L20f65c.  return v0 @kind object;
}
procedure `void` `b`(`java.util.Map` v2 @kind object, `io.grpc.d1` v3 @kind object) @signature `Lio/grpc/InternalChannelz;.b:(Ljava/util/Map;Lio/grpc/d1;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f72c.  call temp:= `e`(v3) @signature `Lio/grpc/j1;.e:()Lio/grpc/e1;` @kind interface;
  #L20f732.  v0:= temp @kind object;
  #L20f734.  call temp:= `d`(v0) @signature `Lio/grpc/e1;.d:()J` @kind virtual;
  #L20f73a.  v0:= temp @kind wide;
  #L20f73c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L20f742.  v0:= temp @kind object;
  #L20f744.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20f74a.  v2:= temp @kind object;
  #L20f74c.  v2:= (`io.grpc.d1`) v2 @kind object;
  #L20f750.  return @kind void;
}
procedure `long` `f`(`io.grpc.j1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.f:(Lio/grpc/j1;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20f670.  call temp:= `e`(v2) @signature `Lio/grpc/j1;.e:()Lio/grpc/e1;` @kind interface;
  #L20f676.  v2:= temp @kind object;
  #L20f678.  call temp:= `d`(v2) @signature `Lio/grpc/e1;.d:()J` @kind virtual;
  #L20f67e.  v0:= temp @kind wide;
  #L20f680.  return v0 @kind wide;
}
procedure `io.grpc.InternalChannelz` `g`() @signature `Lio/grpc/InternalChannelz;.g:()Lio/grpc/InternalChannelz;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20f640.  v0:= `@@io.grpc.InternalChannelz.b` @type ^`io.grpc.InternalChannelz` @kind object;
  #L20f644.  return v0 @kind object;
}
procedure `void` `h`(`java.util.Map` v2 @kind object, `io.grpc.d1` v3 @kind object) @signature `Lio/grpc/InternalChannelz;.h:(Ljava/util/Map;Lio/grpc/d1;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L20f7b8.  call temp:= `f`(v3) @signature `Lio/grpc/InternalChannelz;.f:(Lio/grpc/j1;)J` @kind static;
  #L20f7be.  v0:= temp @kind wide;
  #L20f7c0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L20f7c6.  v3:= temp @kind object;
  #L20f7c8.  call temp:= `remove`(v2, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20f7ce.  v2:= temp @kind object;
  #L20f7d0.  v2:= (`io.grpc.d1`) v2 @kind object;
  #L20f7d4.  return @kind void;
}
procedure `void` `c`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.c:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f764.  v0:= v1.`io.grpc.InternalChannelz.f` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20f768.  call `b`(v0, v2) @signature `Lio/grpc/InternalChannelz;.b:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f76e.  return @kind void;
}
procedure `void` `d`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.d:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f780.  v0:= v1.`io.grpc.InternalChannelz.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L20f784.  call `b`(v0, v2) @signature `Lio/grpc/InternalChannelz;.b:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f78a.  return @kind void;
}
procedure `void` `e`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.e:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f79c.  v0:= v1.`io.grpc.InternalChannelz.e` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20f7a0.  call `b`(v0, v2) @signature `Lio/grpc/InternalChannelz;.b:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f7a6.  return @kind void;
}
procedure `void` `i`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.i:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f7e8.  v0:= v1.`io.grpc.InternalChannelz.f` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20f7ec.  call `h`(v0, v2) @signature `Lio/grpc/InternalChannelz;.h:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f7f2.  return @kind void;
}
procedure `void` `j`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.j:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f804.  v0:= v1.`io.grpc.InternalChannelz.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L20f808.  call `h`(v0, v2) @signature `Lio/grpc/InternalChannelz;.h:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f80e.  return @kind void;
}
procedure `void` `k`(`io.grpc.InternalChannelz` v1 @kind this, `io.grpc.d1` v2 @kind object) @signature `Lio/grpc/InternalChannelz;.k:(Lio/grpc/d1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20f820.  v0:= v1.`io.grpc.InternalChannelz.e` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L20f824.  call `h`(v0, v2) @signature `Lio/grpc/InternalChannelz;.h:(Ljava/util/Map;Lio/grpc/d1;)V` @kind static;
  #L20f82a.  return @kind void;
}
