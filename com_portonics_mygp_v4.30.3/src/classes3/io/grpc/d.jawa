record `io.grpc.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `io.grpc.d.b` @AccessFlag PRIVATE_FINAL;
}
global `io.grpc.d` `@@io.grpc.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20cbf8.  v0:= new `io.grpc.d`;
  #L20cbfc.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L20cc02.  v1:= temp @kind object;
  #L20cc04.  call `<init>`(v0, v1) @signature `Lio/grpc/d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L20cc0a.  `@@io.grpc.d.a` @type ^`io.grpc.d` := v0 @kind object;
  #L20cc0e.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.d` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lio/grpc/d;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L20cc20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20cc26.  v0.`io.grpc.d.b` @type ^`java.util.Map` := v1 @kind object;
  #L20cc2a.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.d` v0 @kind this, `java.util.Map` v1 @kind object, `io.grpc.a` v2 @kind object) @signature `Lio/grpc/d;.<init>:(Ljava/util/Map;Lio/grpc/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L20cc3c.  call `<init>`(v0, v1) @signature `Lio/grpc/d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L20cc42.  return @kind void;
}
procedure `java.util.Map` `a`(`io.grpc.d` v0 @kind object) @signature `Lio/grpc/d;.a:(Lio/grpc/d;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20cbe0.  v0:= v0.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20cbe4.  return v0 @kind object;
}
procedure `io.grpc.b` `c`() @signature `Lio/grpc/d;.c:()Lio/grpc/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20cb5c.  v0:= new `io.grpc.b`;
  #L20cb60.  v1:= `@@io.grpc.d.a` @type ^`io.grpc.d` @kind object;
  #L20cb64.  v2:= 0I;
  #L20cb66.  call `<init>`(v0, v1, v2) @signature `Lio/grpc/b;.<init>:(Lio/grpc/d;Lio/grpc/a;)V` @kind direct;
  #L20cb6c.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`io.grpc.d` v1 @kind this, `io.grpc.c` v2 @kind object) @signature `Lio/grpc/d;.b:(Lio/grpc/c;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20cba0.  v0:= v1.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20cba4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20cbaa.  v2:= temp @kind object;
  #L20cbac.  return v2 @kind object;
}
procedure `io.grpc.b` `d`(`io.grpc.d` v2 @kind this) @signature `Lio/grpc/d;.d:()Lio/grpc/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20cb80.  v0:= new `io.grpc.b`;
  #L20cb84.  v1:= 0I;
  #L20cb86.  call `<init>`(v0, v2, v1) @signature `Lio/grpc/b;.<init>:(Lio/grpc/d;Lio/grpc/a;)V` @kind direct;
  #L20cb8c.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.grpc.d` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/grpc/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20ca24.  v0:= 1I;
  #L20ca26.  if v6 != v7 then goto L20ca2c;
  #L20ca2a.  return v0;
  #L20ca2c.  v1:= 0I;
  #L20ca2e.  if v7 == 0 then goto L20cad8;
  #L20ca32.  v2:= constclass @type ^`io.grpc.d` @kind object;
  #L20ca36.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20ca3c.  v3:= temp @kind object;
  #L20ca3e.  if v2 == v3 then goto L20ca44;
  #L20ca42.  goto L20cad8;
  #L20ca44.  v7:= (`io.grpc.d`) v7 @kind object;
  #L20ca48.  v2:= v6.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20ca4c.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L20ca52.  v2:= temp;
  #L20ca54.  v3:= v7.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20ca58.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L20ca5e.  v3:= temp;
  #L20ca60.  if v2 == v3 then goto L20ca66;
  #L20ca64.  return v1;
  #L20ca66.  v2:= v6.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20ca6a.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L20ca70.  v2:= temp @kind object;
  #L20ca72.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20ca78.  v2:= temp @kind object;
  #L20ca7a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20ca80.  v3:= temp;
  #L20ca82.  if v3 == 0 then goto L20cad6;
  #L20ca86.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20ca8c.  v3:= temp @kind object;
  #L20ca8e.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L20ca92.  v4:= v7.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20ca96.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L20ca9c.  v5:= temp @kind object;
  #L20ca9e.  call temp:= `containsKey`(v4, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L20caa4.  v4:= temp;
  #L20caa6.  if v4 != 0 then goto L20caac;
  #L20caaa.  return v1;
  #L20caac.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L20cab2.  v4:= temp @kind object;
  #L20cab4.  v5:= v7.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20cab8.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L20cabe.  v3:= temp @kind object;
  #L20cac0.  call temp:= `get`(v5, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20cac6.  v3:= temp @kind object;
  #L20cac8.  call temp:= `a`(v4, v3) @signature `Lcom/google/common/base/v;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20cace.  v3:= temp;
  #L20cad0.  if v3 != 0 then goto L20ca7a;
  #L20cad4.  return v1;
  #L20cad6.  return v0;
  #L20cad8.  return v1;
}
procedure `int` `hashCode`(`io.grpc.d` v6 @kind this) @signature `Lio/grpc/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20caec.  v0:= v6.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20caf0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L20caf6.  v0:= temp @kind object;
  #L20caf8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20cafe.  v0:= temp @kind object;
  #L20cb00.  v1:= 0I;
  #L20cb02.  v2:= 0I;
  #L20cb04.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20cb0a.  v3:= temp;
  #L20cb0c.  if v3 == 0 then goto L20cb48;
  #L20cb10.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20cb16.  v3:= temp @kind object;
  #L20cb18.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L20cb1c.  v4:= 2I;
  #L20cb1e.  v4:= new `java.lang.Object`[v4];
  #L20cb22.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L20cb28.  v5:= temp @kind object;
  #L20cb2a.  v4[v1]:= v5 @kind object;
  #L20cb2e.  v5:= 1I;
  #L20cb30.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L20cb36.  v3:= temp @kind object;
  #L20cb38.  v4[v5]:= v3 @kind object;
  #L20cb3c.  call temp:= `b`(v4) @signature `Lcom/google/common/base/v;.b:([Ljava/lang/Object;)I` @kind static;
  #L20cb42.  v3:= temp;
  #L20cb44.  v2:= v2 + v3 @kind int;
  #L20cb46.  goto L20cb04;
  #L20cb48.  return v2;
}
procedure `java.lang.String` `toString`(`io.grpc.d` v1 @kind this) @signature `Lio/grpc/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20cbc0.  v0:= v1.`io.grpc.d.b` @type ^`java.util.Map` @kind object;
  #L20cbc4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L20cbca.  v0:= temp @kind object;
  #L20cbcc.  return v0 @kind object;
}
