record `io.grpc.Context` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `io.grpc.Context.e` @AccessFlag PRIVATE;
  `io.grpc.e0` `io.grpc.Context.f` @AccessFlag PRIVATE;
  `io.grpc.d0` `io.grpc.Context.g` @AccessFlag FINAL;
  `io.grpc.h3` `io.grpc.Context.h` @AccessFlag FINAL;
  `int` `io.grpc.Context.i` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@io.grpc.Context.b` @AccessFlag STATIC_FINAL;
global `io.grpc.h3` `@@io.grpc.Context.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.grpc.Context` `@@io.grpc.Context.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/Context;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L20e080.  v0:= constclass @type ^`io.grpc.Context` @kind object;
  #L20e084.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20e08a.  v0:= temp @kind object;
  #L20e08c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L20e092.  v0:= temp @kind object;
  #L20e094.  `@@io.grpc.Context.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L20e098.  v0:= new `io.grpc.h3`;
  #L20e09c.  call `<init>`(v0) @signature `Lio/grpc/h3;.<init>:()V` @kind direct;
  #L20e0a2.  `@@io.grpc.Context.c` @type ^`io.grpc.h3` := v0 @kind object;
  #L20e0a6.  v1:= new `io.grpc.Context`;
  #L20e0aa.  v2:= 0I;
  #L20e0ac.  call `<init>`(v1, v2, v0) @signature `Lio/grpc/Context;.<init>:(Lio/grpc/Context;Lio/grpc/h3;)V` @kind direct;
  #L20e0b2.  `@@io.grpc.Context.d` @type ^`io.grpc.Context` := v1 @kind object;
  #L20e0b6.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.Context` v2 @kind this, `io.grpc.Context` v3 @kind object, `io.grpc.h3` v4 @kind object) @signature `Lio/grpc/Context;.<init>:(Lio/grpc/Context;Lio/grpc/h3;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20e0c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20e0ce.  v0:= new `io.grpc.i0`;
  #L20e0d2.  v1:= 0I;
  #L20e0d4.  call `<init>`(v0, v2, v1) @signature `Lio/grpc/i0;.<init>:(Lio/grpc/Context;Lio/grpc/c0;)V` @kind direct;
  #L20e0da.  v2.`io.grpc.Context.f` @type ^`io.grpc.e0` := v0 @kind object;
  #L20e0de.  call temp:= `k`(v3) @signature `Lio/grpc/Context;.k:(Lio/grpc/Context;)Lio/grpc/d0;` @kind static;
  #L20e0e4.  v2.`io.grpc.Context.h` @type ^`io.grpc.h3` := v4 @kind object;
  #L20e0e8.  if v3 != 0 then goto L20e0f0;
  #L20e0ec.  v3:= 0I;
  #L20e0ee.  goto L20e0f8;
  #L20e0f0.  v3:= v3.`io.grpc.Context.i` @type ^`int`;
  #L20e0f4.  v3:= v3 + 1;
  #L20e0f8.  v2.`io.grpc.Context.i` @type ^`int` := v3;
  #L20e0fc.  call `K0`(v3) @signature `Lio/grpc/Context;.K0:(I)V` @kind static;
  #L20e102.  return @kind void;
}
procedure `io.grpc.j0` `G0`() @signature `Lio/grpc/Context;.G0:()Lio/grpc/j0;` @AccessFlag STATIC {
    temp;
    v0;

  #L20df1c.  v0:= `@@io.grpc.h0.a` @type ^`io.grpc.j0` @kind object;
  #L20df20.  return v0 @kind object;
}
procedure `void` `K0`(`int` v3 ) @signature `Lio/grpc/Context;.K0:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20e358.  v0:= 1000I;
  #L20e35c.  if v3 != v0 then goto L20e37c;
  #L20e360.  v3:= `@@io.grpc.Context.b` @type ^`java.util.logging.Logger` @kind object;
  #L20e364.  v0:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L20e368.  v1:= new `java.lang.Exception`;
  #L20e36c.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L20e372.  v2:= "Context ancestry chain length is abnormally long. This suggests an error in application code. Length exceeded: 1000" @kind object;
  #L20e376.  call `log`(v3, v0, v2, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L20e37c.  return @kind void;
}
procedure `io.grpc.d0` `k`(`io.grpc.Context` v0 @kind object) @signature `Lio/grpc/Context;.k:(Lio/grpc/Context;)Lio/grpc/d0;` @AccessFlag STATIC {
    temp;

  #L20dee0.  if v0 != 0 then goto L20dee8;
  #L20dee4.  v0:= 0I;
  #L20dee6.  return v0 @kind object;
  #L20dee8.  v0:= v0.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20deec.  return v0 @kind object;
}
procedure `io.grpc.g0` `m0`(`java.lang.String` v1 @kind object) @signature `Lio/grpc/Context;.m0:(Ljava/lang/String;)Lio/grpc/g0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20df00.  v0:= new `io.grpc.g0`;
  #L20df04.  call `<init>`(v0, v1) @signature `Lio/grpc/g0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20df0a.  return v0 @kind object;
}
procedure `java.lang.Object` `o`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/grpc/Context;.o:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L20df54.  if v0 == 0 then goto L20df5a;
  #L20df58.  return v0 @kind object;
  #L20df5a.  v0:= new `java.lang.NullPointerException`;
  #L20df5e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20df64.  v1:= temp @kind object;
  #L20df66.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20df6c.  throw v0;
}
procedure `io.grpc.Context` `s`() @signature `Lio/grpc/Context;.s:()Lio/grpc/Context;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20deb4.  call temp:= `G0`() @signature `Lio/grpc/Context;.G0:()Lio/grpc/j0;` @kind static;
  #L20deba.  v0:= temp @kind object;
  #L20debc.  call temp:= `a`(v0) @signature `Lio/grpc/j0;.a:()Lio/grpc/Context;` @kind virtual;
  #L20dec2.  v0:= temp @kind object;
  #L20dec4.  if v0 != 0 then goto L20decc;
  #L20dec8.  v0:= `@@io.grpc.Context.d` @type ^`io.grpc.Context` @kind object;
  #L20decc.  return v0 @kind object;
}
procedure `void` `A0`(`io.grpc.Context` v2 @kind this, `io.grpc.e0` v3 @kind object) @signature `Lio/grpc/Context;.A0:(Lio/grpc/e0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20e2b8.  call temp:= `d`(v2) @signature `Lio/grpc/Context;.d:()Z` @kind virtual;
  #L20e2be.  v0:= temp;
  #L20e2c0.  if v0 != 0 then goto L20e2c6;
  #L20e2c4.  return @kind void;
  #L20e2c6.  @monitorenter v2
  #L20e2c8.  v0:= v2.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e2cc.  if v0 == 0 then goto L20e32c;
  #L20e2d0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L20e2d6.  v0:= temp;
  #L20e2d8.  v0:= v0 + -1;
  #L20e2dc.  if v0 < 0 then goto L20e30a;
  #L20e2e0.  v1:= v2.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e2e4.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L20e2ea.  v1:= temp @kind object;
  #L20e2ec.  v1:= (`io.grpc.f0`) v1 @kind object;
  #L20e2f0.  v1:= v1.`io.grpc.f0.c` @type ^`io.grpc.e0` @kind object;
  #L20e2f4.  if v1 != v3 then goto L20e304;
  #L20e2f8.  v3:= v2.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e2fc.  call temp:= `remove`(v3, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L20e302.  goto L20e30a;
  #L20e304.  v0:= v0 + -1;
  #L20e308.  goto L20e2dc;
  #L20e30a.  v3:= v2.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e30e.  call temp:= `isEmpty`(v3) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L20e314.  v3:= temp;
  #L20e316.  if v3 == 0 then goto L20e32c;
  #L20e31a.  v3:= v2.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20e31e.  v0:= 0I;
  #L20e320.  if v3 != 0 then goto L20e32a;
  #L20e324.  v2.`io.grpc.Context.e` @type ^`java.util.ArrayList` := v0 @kind object;
  #L20e328.  goto L20e32c;
  #L20e32a.  throw v0;
  #L20e32c.  @monitorexit v2
  #L20e32e.  return @kind void;
  #L20e330.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20e332.  @monitorexit v2
  #L20e334.  goto L20e338;
  #L20e336.  throw v3;
  #L20e338.  goto L20e336;
  catch `java.lang.Throwable` @[L20e2c8..L20e334] goto L20e330;
}
procedure `boolean` `C`(`io.grpc.Context` v1 @kind this) @signature `Lio/grpc/Context;.C:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20de68.  v0:= v1.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20de6c.  if v0 != 0 then goto L20de74;
  #L20de70.  v0:= 0I;
  #L20de72.  return v0;
  #L20de74.  v0:= 0I;
  #L20de76.  throw v0;
}
procedure `void` `a`(`io.grpc.Context` v1 @kind this, `io.grpc.e0` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lio/grpc/Context;.a:(Lio/grpc/e0;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e114.  v0:= "cancellationListener" @kind object;
  #L20e118.  call temp:= `o`(v2, v0) @signature `Lio/grpc/Context;.o:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20e11e.  v0:= "executor" @kind object;
  #L20e122.  call temp:= `o`(v3, v0) @signature `Lio/grpc/Context;.o:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20e128.  call temp:= `d`(v1) @signature `Lio/grpc/Context;.d:()Z` @kind virtual;
  #L20e12e.  v0:= temp;
  #L20e130.  if v0 == 0 then goto L20e192;
  #L20e134.  v0:= new `io.grpc.f0`;
  #L20e138.  call `<init>`(v0, v1, v3, v2) @signature `Lio/grpc/f0;.<init>:(Lio/grpc/Context;Ljava/util/concurrent/Executor;Lio/grpc/e0;)V` @kind direct;
  #L20e13e.  @monitorenter v1
  #L20e140.  call temp:= `C`(v1) @signature `Lio/grpc/Context;.C:()Z` @kind virtual;
  #L20e146.  v2:= temp;
  #L20e148.  if v2 == 0 then goto L20e154;
  #L20e14c.  call `a`(v0) @signature `Lio/grpc/f0;.a:()V` @kind virtual;
  #L20e152.  goto L20e188;
  #L20e154.  v2:= v1.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e158.  if v2 != 0 then goto L20e182;
  #L20e15c.  v2:= new `java.util.ArrayList`;
  #L20e160.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L20e166.  v1.`io.grpc.Context.e` @type ^`java.util.ArrayList` := v2 @kind object;
  #L20e16a.  call temp:= `add`(v2, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L20e170.  v2:= v1.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20e174.  if v2 != 0 then goto L20e17a;
  #L20e178.  goto L20e188;
  #L20e17a.  v2:= `@@io.grpc.Context$DirectExecutor.INSTANCE` @type ^`io.grpc.Context$DirectExecutor` @kind object;
  #L20e17e.  v2:= 0I;
  #L20e180.  throw v2;
  #L20e182.  call temp:= `add`(v2, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L20e188.  @monitorexit v1
  #L20e18a.  goto L20e192;
  #L20e18c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20e18e.  @monitorexit v1
  #L20e190.  throw v2;
  #L20e192.  return @kind void;
  catch `java.lang.Throwable` @[L20e140..L20e190] goto L20e18c;
}
procedure `io.grpc.Context` `c`(`io.grpc.Context` v1 @kind this) @signature `Lio/grpc/Context;.c:()Lio/grpc/Context;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20de88.  call temp:= `G0`() @signature `Lio/grpc/Context;.G0:()Lio/grpc/j0;` @kind static;
  #L20de8e.  v0:= temp @kind object;
  #L20de90.  call temp:= `c`(v0, v1) @signature `Lio/grpc/j0;.c:(Lio/grpc/Context;)Lio/grpc/Context;` @kind virtual;
  #L20de96.  v0:= temp @kind object;
  #L20de98.  if v0 != 0 then goto L20dea0;
  #L20de9c.  v0:= `@@io.grpc.Context.d` @type ^`io.grpc.Context` @kind object;
  #L20dea0.  return v0 @kind object;
}
procedure `boolean` `d`(`io.grpc.Context` v1 @kind this) @signature `Lio/grpc/Context;.d:()Z` @AccessFlag  {
    temp;
    v0;

  #L20de48.  v0:= v1.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20de4c.  if v0 == 0 then goto L20de54;
  #L20de50.  v0:= 1I;
  #L20de52.  goto L20de56;
  #L20de54.  v0:= 0I;
  #L20de56.  return v0;
}
procedure `java.lang.Throwable` `m`(`io.grpc.Context` v2 @kind this) @signature `Lio/grpc/Context;.m:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dfa0.  v0:= v2.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20dfa4.  v1:= 0I;
  #L20dfa6.  if v0 != 0 then goto L20dfac;
  #L20dfaa.  return v1 @kind object;
  #L20dfac.  throw v1;
}
procedure `java.lang.Object` `o0`(`io.grpc.Context` v1 @kind this, `io.grpc.g0` v2 @kind object) @signature `Lio/grpc/Context;.o0:(Lio/grpc/g0;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L20df80.  v0:= v1.`io.grpc.Context.h` @type ^`io.grpc.h3` @kind object;
  #L20df84.  call temp:= `a`(v0, v2) @signature `Lio/grpc/h3;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20df8a.  v2:= temp @kind object;
  #L20df8c.  return v2 @kind object;
}
procedure `void` `u0`(`io.grpc.Context` v5 @kind this) @signature `Lio/grpc/Context;.u0:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20e1dc.  call temp:= `d`(v5) @signature `Lio/grpc/Context;.d:()Z` @kind virtual;
  #L20e1e2.  v0:= temp;
  #L20e1e4.  if v0 != 0 then goto L20e1ea;
  #L20e1e8.  return @kind void;
  #L20e1ea.  @monitorenter v5
  #L20e1ec.  v0:= v5.`io.grpc.Context.e` @type ^`java.util.ArrayList` @kind object;
  #L20e1f0.  if v0 != 0 then goto L20e1f8;
  #L20e1f4.  @monitorexit v5
  #L20e1f6.  return @kind void;
  #L20e1f8.  v1:= 0I;
  #L20e1fa.  v5.`io.grpc.Context.e` @type ^`java.util.ArrayList` := v1 @kind object;
  #L20e1fe.  @monitorexit v5
  #L20e200.  v2:= 0I;
  #L20e202.  v3:= 0I;
  #L20e204.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L20e20a.  v4:= temp;
  #L20e20c.  if v3 >= v4 then goto L20e240;
  #L20e210.  call temp:= `get`(v0, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L20e216.  v4:= temp @kind object;
  #L20e218.  v4:= (`io.grpc.f0`) v4 @kind object;
  #L20e21c.  v4:= v4.`io.grpc.f0.c` @type ^`io.grpc.e0` @kind object;
  #L20e220.  v4:= instanceof @variable v4 @type ^`io.grpc.i0` @kind boolean;
  #L20e224.  if v4 != 0 then goto L20e23a;
  #L20e228.  call temp:= `get`(v0, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L20e22e.  v4:= temp @kind object;
  #L20e230.  v4:= (`io.grpc.f0`) v4 @kind object;
  #L20e234.  call `a`(v4) @signature `Lio/grpc/f0;.a:()V` @kind virtual;
  #L20e23a.  v3:= v3 + 1;
  #L20e23e.  goto L20e204;
  #L20e240.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L20e246.  v3:= temp;
  #L20e248.  if v2 >= v3 then goto L20e27c;
  #L20e24c.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L20e252.  v3:= temp @kind object;
  #L20e254.  v3:= (`io.grpc.f0`) v3 @kind object;
  #L20e258.  v3:= v3.`io.grpc.f0.c` @type ^`io.grpc.e0` @kind object;
  #L20e25c.  v3:= instanceof @variable v3 @type ^`io.grpc.i0` @kind boolean;
  #L20e260.  if v3 == 0 then goto L20e276;
  #L20e264.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L20e26a.  v3:= temp @kind object;
  #L20e26c.  v3:= (`io.grpc.f0`) v3 @kind object;
  #L20e270.  call `a`(v3) @signature `Lio/grpc/f0;.a:()V` @kind virtual;
  #L20e276.  v2:= v2 + 1;
  #L20e27a.  goto L20e240;
  #L20e27c.  v0:= v5.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20e280.  if v0 != 0 then goto L20e286;
  #L20e284.  return @kind void;
  #L20e286.  throw v1;
  #L20e288.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20e28a.  @monitorexit v5
  #L20e28c.  goto L20e290;
  #L20e28e.  throw v0;
  #L20e290.  goto L20e28e;
  catch `java.lang.Throwable` @[L20e1ec..L20e200] goto L20e288;
  catch `java.lang.Throwable` @[L20e28a..L20e28c] goto L20e288;
}
procedure `void` `v`(`io.grpc.Context` v1 @kind this, `io.grpc.Context` v2 @kind object) @signature `Lio/grpc/Context;.v:(Lio/grpc/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e1b0.  v0:= "toAttach" @kind object;
  #L20e1b4.  call temp:= `o`(v2, v0) @signature `Lio/grpc/Context;.o:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20e1ba.  call temp:= `G0`() @signature `Lio/grpc/Context;.G0:()Lio/grpc/j0;` @kind static;
  #L20e1c0.  v0:= temp @kind object;
  #L20e1c2.  call `b`(v0, v1, v2) @signature `Lio/grpc/j0;.b:(Lio/grpc/Context;Lio/grpc/Context;)V` @kind virtual;
  #L20e1c8.  return @kind void;
}
procedure `io.grpc.o0` `x`(`io.grpc.Context` v2 @kind this) @signature `Lio/grpc/Context;.x:()Lio/grpc/o0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20df34.  v0:= v2.`io.grpc.Context.g` @type ^`io.grpc.d0` @kind object;
  #L20df38.  v1:= 0I;
  #L20df3a.  if v0 != 0 then goto L20df40;
  #L20df3e.  return v1 @kind object;
  #L20df40.  throw v1;
}
