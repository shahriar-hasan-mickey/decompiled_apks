record `io.grpc.z3.g` @kind class @AccessFlag FINAL extends `io.grpc.u1` @kind class {
  `io.grpc.n1` `io.grpc.z3.g.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `io.grpc.z3.g.f` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `io.grpc.z3.g.g` @AccessFlag PRIVATE_FINAL;
  `io.grpc.ConnectivityState` `io.grpc.z3.g.h` @AccessFlag PRIVATE;
  `io.grpc.z3.e` `io.grpc.z3.g.i` @AccessFlag PRIVATE;
  `io.grpc.z3.f` `io.grpc.z3.g.j` @AccessFlag PRIVATE;
}
global `io.grpc.c` `@@io.grpc.z3.g.b` @AccessFlag STATIC_FINAL;
global `io.grpc.c` `@@io.grpc.z3.g.c` @AccessFlag STATIC_FINAL;
global `io.grpc.Status` `@@io.grpc.z3.g.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/grpc/z3/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23b2ac.  v0:= "state-info" @kind object;
  #L23b2b0.  call temp:= `a`(v0) @signature `Lio/grpc/c;.a:(Ljava/lang/String;)Lio/grpc/c;` @kind static;
  #L23b2b6.  v0:= temp @kind object;
  #L23b2b8.  `@@io.grpc.z3.g.b` @type ^`io.grpc.c` := v0 @kind object;
  #L23b2bc.  v0:= "sticky-ref" @kind object;
  #L23b2c0.  call temp:= `a`(v0) @signature `Lio/grpc/c;.a:(Ljava/lang/String;)Lio/grpc/c;` @kind static;
  #L23b2c6.  v0:= temp @kind object;
  #L23b2c8.  `@@io.grpc.z3.g.c` @type ^`io.grpc.c` := v0 @kind object;
  #L23b2cc.  v0:= `@@io.grpc.Status.c` @type ^`io.grpc.Status` @kind object;
  #L23b2d0.  v1:= "no subchannels ready" @kind object;
  #L23b2d4.  call temp:= `r`(v0, v1) @signature `Lio/grpc/Status;.r:(Ljava/lang/String;)Lio/grpc/Status;` @kind virtual;
  #L23b2da.  v0:= temp @kind object;
  #L23b2dc.  `@@io.grpc.z3.g.d` @type ^`io.grpc.Status` := v0 @kind object;
  #L23b2e0.  return @kind void;
}
procedure `void` `<init>`(`io.grpc.z3.g` v2 @kind this, `io.grpc.n1` v3 @kind object) @signature `Lio/grpc/z3/g;.<init>:(Lio/grpc/n1;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23b2f4.  call `<init>`(v2) @signature `Lio/grpc/u1;.<init>:()V` @kind direct;
  #L23b2fa.  v0:= new `java.util.HashMap`;
  #L23b2fe.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L23b304.  v2.`io.grpc.z3.g.f` @type ^`java.util.Map` := v0 @kind object;
  #L23b308.  v0:= new `io.grpc.z3.b`;
  #L23b30c.  v1:= `@@io.grpc.z3.g.d` @type ^`io.grpc.Status` @kind object;
  #L23b310.  call `<init>`(v0, v1) @signature `Lio/grpc/z3/b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L23b316.  v2.`io.grpc.z3.g.i` @type ^`io.grpc.z3.e` := v0 @kind object;
  #L23b31a.  v0:= "helper" @kind object;
  #L23b31e.  call temp:= `s`(v3, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23b324.  v3:= temp @kind object;
  #L23b326.  v3:= (`io.grpc.n1`) v3 @kind object;
  #L23b32a.  v2.`io.grpc.z3.g.e` @type ^`io.grpc.n1` := v3 @kind object;
  #L23b32e.  v3:= new `java.util.Random`;
  #L23b332.  call `<init>`(v3) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L23b338.  v2.`io.grpc.z3.g.g` @type ^`java.util.Random` := v3 @kind object;
  #L23b33c.  return @kind void;
}
procedure `java.util.List` `f`(`java.util.Collection` v3 @kind object) @signature `Lio/grpc/z3/g;.f:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23b1d0.  v0:= new `java.util.ArrayList`;
  #L23b1d4.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L23b1da.  v1:= temp;
  #L23b1dc.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L23b1e2.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b1e8.  v3:= temp @kind object;
  #L23b1ea.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b1f0.  v1:= temp;
  #L23b1f2.  if v1 == 0 then goto L23b216;
  #L23b1f6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b1fc.  v1:= temp @kind object;
  #L23b1fe.  v1:= (`io.grpc.s1`) v1 @kind object;
  #L23b202.  call temp:= `i`(v1) @signature `Lio/grpc/z3/g;.i:(Lio/grpc/s1;)Z` @kind static;
  #L23b208.  v2:= temp;
  #L23b20a.  if v2 == 0 then goto L23b1ea;
  #L23b20e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23b214.  goto L23b1ea;
  #L23b216.  return v0 @kind object;
}
procedure `io.grpc.z3.d` `g`(`io.grpc.s1` v1 @kind object) @signature `Lio/grpc/z3/g;.g:(Lio/grpc/s1;)Lio/grpc/z3/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L23b178.  call temp:= `c`(v1) @signature `Lio/grpc/s1;.c:()Lio/grpc/d;` @kind virtual;
  #L23b17e.  v1:= temp @kind object;
  #L23b180.  v0:= `@@io.grpc.z3.g.b` @type ^`io.grpc.c` @kind object;
  #L23b184.  call temp:= `b`(v1, v0) @signature `Lio/grpc/d;.b:(Lio/grpc/c;)Ljava/lang/Object;` @kind virtual;
  #L23b18a.  v1:= temp @kind object;
  #L23b18c.  v0:= "STATE_INFO" @kind object;
  #L23b190.  call temp:= `s`(v1, v0) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23b196.  v1:= temp @kind object;
  #L23b198.  v1:= (`io.grpc.z3.d`) v1 @kind object;
  #L23b19c.  return v1 @kind object;
}
procedure `boolean` `i`(`io.grpc.s1` v1 @kind object) @signature `Lio/grpc/z3/g;.i:(Lio/grpc/s1;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L23b140.  call temp:= `g`(v1) @signature `Lio/grpc/z3/g;.g:(Lio/grpc/s1;)Lio/grpc/z3/d;` @kind static;
  #L23b146.  v1:= temp @kind object;
  #L23b148.  v1:= v1.`io.grpc.z3.d.a` @type ^`java.lang.Object` @kind object;
  #L23b14c.  v1:= (`io.grpc.b0`) v1 @kind object;
  #L23b150.  call temp:= `c`(v1) @signature `Lio/grpc/b0;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L23b156.  v1:= temp @kind object;
  #L23b158.  v0:= `@@io.grpc.ConnectivityState.READY` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b15c.  if v1 != v0 then goto L23b164;
  #L23b160.  v1:= 1I;
  #L23b162.  goto L23b166;
  #L23b164.  v1:= 0I;
  #L23b166.  return v1;
}
procedure `java.util.Set` `j`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lio/grpc/z3/g;.j:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L23b228.  v0:= new `java.util.HashSet`;
  #L23b22c.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L23b232.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/Set;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L23b238.  return v0 @kind object;
}
procedure `void` `k`(`io.grpc.z3.g` v2 @kind this, `io.grpc.s1` v3 @kind object) @signature `Lio/grpc/z3/g;.k:(Lio/grpc/s1;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L23b61c.  call `e`(v3) @signature `Lio/grpc/s1;.e:()V` @kind virtual;
  #L23b622.  call temp:= `g`(v3) @signature `Lio/grpc/z3/g;.g:(Lio/grpc/s1;)Lio/grpc/z3/d;` @kind static;
  #L23b628.  v0:= temp @kind object;
  #L23b62a.  v1:= `@@io.grpc.ConnectivityState.SHUTDOWN` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b62e.  call temp:= `a`(v1) @signature `Lio/grpc/b0;.a:(Lio/grpc/ConnectivityState;)Lio/grpc/b0;` @kind static;
  #L23b634.  v1:= temp @kind object;
  #L23b636.  v0.`io.grpc.z3.d.a` @type ^`java.lang.Object` := v1 @kind object;
  #L23b63a.  v0:= v2.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` @kind object;
  #L23b63e.  if v0 == 0 then goto L23b648;
  #L23b642.  call `d`(v0, v3) @signature `Lio/grpc/z3/f;.d:(Lio/grpc/s1;)V` @kind virtual;
  #L23b648.  return @kind void;
}
procedure `java.util.Set` `l`(`java.util.List` v3 @kind object) @signature `Lio/grpc/z3/g;.l:(Ljava/util/List;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23b24c.  v0:= new `java.util.HashSet`;
  #L23b250.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23b256.  v1:= temp;
  #L23b258.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L23b25e.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b264.  v3:= temp @kind object;
  #L23b266.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b26c.  v1:= temp;
  #L23b26e.  if v1 == 0 then goto L23b298;
  #L23b272.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b278.  v1:= temp @kind object;
  #L23b27a.  v1:= (`io.grpc.t0`) v1 @kind object;
  #L23b27e.  v2:= new `io.grpc.t0`;
  #L23b282.  call temp:= `a`(v1) @signature `Lio/grpc/t0;.a:()Ljava/util/List;` @kind virtual;
  #L23b288.  v1:= temp @kind object;
  #L23b28a.  call `<init>`(v2, v1) @signature `Lio/grpc/t0;.<init>:(Ljava/util/List;)V` @kind direct;
  #L23b290.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23b296.  goto L23b266;
  #L23b298.  return v0 @kind object;
}
procedure `void` `m`(`io.grpc.z3.g` v6 @kind this) @signature `Lio/grpc/z3/g;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23b65c.  call temp:= `h`(v6) @signature `Lio/grpc/z3/g;.h:()Ljava/util/Collection;` @kind virtual;
  #L23b662.  v0:= temp @kind object;
  #L23b664.  call temp:= `f`(v0) @signature `Lio/grpc/z3/g;.f:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L23b66a.  v0:= temp @kind object;
  #L23b66c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L23b672.  v1:= temp;
  #L23b674.  if v1 == 0 then goto L23b716;
  #L23b678.  v0:= 0I;
  #L23b67a.  v1:= `@@io.grpc.z3.g.d` @type ^`io.grpc.Status` @kind object;
  #L23b67e.  call temp:= `h`(v6) @signature `Lio/grpc/z3/g;.h:()Ljava/util/Collection;` @kind virtual;
  #L23b684.  v2:= temp @kind object;
  #L23b686.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b68c.  v2:= temp @kind object;
  #L23b68e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b694.  v3:= temp;
  #L23b696.  if v3 == 0 then goto L23b6f6;
  #L23b69a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b6a0.  v3:= temp @kind object;
  #L23b6a2.  v3:= (`io.grpc.s1`) v3 @kind object;
  #L23b6a6.  call temp:= `g`(v3) @signature `Lio/grpc/z3/g;.g:(Lio/grpc/s1;)Lio/grpc/z3/d;` @kind static;
  #L23b6ac.  v3:= temp @kind object;
  #L23b6ae.  v3:= v3.`io.grpc.z3.d.a` @type ^`java.lang.Object` @kind object;
  #L23b6b2.  v3:= (`io.grpc.b0`) v3 @kind object;
  #L23b6b6.  call temp:= `c`(v3) @signature `Lio/grpc/b0;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L23b6bc.  v4:= temp @kind object;
  #L23b6be.  v5:= `@@io.grpc.ConnectivityState.CONNECTING` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b6c2.  if v4 == v5 then goto L23b6d6;
  #L23b6c6.  call temp:= `c`(v3) @signature `Lio/grpc/b0;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L23b6cc.  v4:= temp @kind object;
  #L23b6ce.  v5:= `@@io.grpc.ConnectivityState.IDLE` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b6d2.  if v4 != v5 then goto L23b6d8;
  #L23b6d6.  v0:= 1I;
  #L23b6d8.  v4:= `@@io.grpc.z3.g.d` @type ^`io.grpc.Status` @kind object;
  #L23b6dc.  if v1 == v4 then goto L23b6ec;
  #L23b6e0.  call temp:= `p`(v1) @signature `Lio/grpc/Status;.p:()Z` @kind virtual;
  #L23b6e6.  v4:= temp;
  #L23b6e8.  if v4 != 0 then goto L23b68e;
  #L23b6ec.  call temp:= `d`(v3) @signature `Lio/grpc/b0;.d:()Lio/grpc/Status;` @kind virtual;
  #L23b6f2.  v1:= temp @kind object;
  #L23b6f4.  goto L23b68e;
  #L23b6f6.  if v0 == 0 then goto L23b700;
  #L23b6fa.  v0:= `@@io.grpc.ConnectivityState.CONNECTING` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b6fe.  goto L23b704;
  #L23b700.  v0:= `@@io.grpc.ConnectivityState.TRANSIENT_FAILURE` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b704.  v2:= new `io.grpc.z3.b`;
  #L23b708.  call `<init>`(v2, v1) @signature `Lio/grpc/z3/b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L23b70e.  call `n`(v6, v0, v2) @signature `Lio/grpc/z3/g;.n:(Lio/grpc/ConnectivityState;Lio/grpc/z3/e;)V` @kind direct;
  #L23b714.  goto L23b742;
  #L23b716.  v1:= v6.`io.grpc.z3.g.g` @type ^`java.util.Random` @kind object;
  #L23b71a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23b720.  v2:= temp;
  #L23b722.  call temp:= `nextInt`(v1, v2) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L23b728.  v1:= temp;
  #L23b72a.  v2:= `@@io.grpc.ConnectivityState.READY` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b72e.  v3:= new `io.grpc.z3.c`;
  #L23b732.  v4:= v6.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` @kind object;
  #L23b736.  call `<init>`(v3, v0, v1, v4) @signature `Lio/grpc/z3/c;.<init>:(Ljava/util/List;ILio/grpc/z3/f;)V` @kind direct;
  #L23b73c.  call `n`(v6, v2, v3) @signature `Lio/grpc/z3/g;.n:(Lio/grpc/ConnectivityState;Lio/grpc/z3/e;)V` @kind direct;
  #L23b742.  return @kind void;
}
procedure `void` `n`(`io.grpc.z3.g` v1 @kind this, `io.grpc.ConnectivityState` v2 @kind object, `io.grpc.z3.e` v3 @kind object) @signature `Lio/grpc/z3/g;.n:(Lio/grpc/ConnectivityState;Lio/grpc/z3/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L23b754.  v0:= v1.`io.grpc.z3.g.h` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b758.  if v2 != v0 then goto L23b76c;
  #L23b75c.  v0:= v1.`io.grpc.z3.g.i` @type ^`io.grpc.z3.e` @kind object;
  #L23b760.  call temp:= `b`(v3, v0) @signature `Lio/grpc/z3/e;.b:(Lio/grpc/z3/e;)Z` @kind virtual;
  #L23b766.  v0:= temp;
  #L23b768.  if v0 != 0 then goto L23b77e;
  #L23b76c.  v0:= v1.`io.grpc.z3.g.e` @type ^`io.grpc.n1` @kind object;
  #L23b770.  call `d`(v0, v2, v3) @signature `Lio/grpc/n1;.d:(Lio/grpc/ConnectivityState;Lio/grpc/t1;)V` @kind virtual;
  #L23b776.  v1.`io.grpc.z3.g.h` @type ^`io.grpc.ConnectivityState` := v2 @kind object;
  #L23b77a.  v1.`io.grpc.z3.g.i` @type ^`io.grpc.z3.e` := v3 @kind object;
  #L23b77e.  return @kind void;
}
procedure `void` `b`(`io.grpc.z3.g` v3 @kind this, `io.grpc.Status` v4 @kind object) @signature `Lio/grpc/z3/g;.b:(Lio/grpc/Status;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23b350.  v0:= `@@io.grpc.ConnectivityState.TRANSIENT_FAILURE` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b354.  v1:= v3.`io.grpc.z3.g.i` @type ^`io.grpc.z3.e` @kind object;
  #L23b358.  v2:= instanceof @variable v1 @type ^`io.grpc.z3.c` @kind boolean;
  #L23b35c.  if v2 == 0 then goto L23b362;
  #L23b360.  goto L23b36c;
  #L23b362.  v1:= new `io.grpc.z3.b`;
  #L23b366.  call `<init>`(v1, v4) @signature `Lio/grpc/z3/b;.<init>:(Lio/grpc/Status;)V` @kind direct;
  #L23b36c.  call `n`(v3, v0, v1) @signature `Lio/grpc/z3/g;.n:(Lio/grpc/ConnectivityState;Lio/grpc/z3/e;)V` @kind direct;
  #L23b372.  return @kind void;
}
procedure `void` `c`(`io.grpc.z3.g` v6 @kind this, `io.grpc.r1` v7 @kind object) @signature `Lio/grpc/z3/g;.c:(Lio/grpc/r1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23b384.  call temp:= `a`(v7) @signature `Lio/grpc/r1;.a:()Ljava/util/List;` @kind virtual;
  #L23b38a.  v0:= temp @kind object;
  #L23b38c.  call temp:= `b`(v7) @signature `Lio/grpc/r1;.b:()Lio/grpc/d;` @kind virtual;
  #L23b392.  v7:= temp @kind object;
  #L23b394.  v1:= v6.`io.grpc.z3.g.f` @type ^`java.util.Map` @kind object;
  #L23b398.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L23b39e.  v1:= temp @kind object;
  #L23b3a0.  call temp:= `l`(v0) @signature `Lio/grpc/z3/g;.l:(Ljava/util/List;)Ljava/util/Set;` @kind static;
  #L23b3a6.  v0:= temp @kind object;
  #L23b3a8.  call temp:= `j`(v0, v1) @signature `Lio/grpc/z3/g;.j:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L23b3ae.  v2:= temp @kind object;
  #L23b3b0.  call temp:= `j`(v1, v0) @signature `Lio/grpc/z3/g;.j:(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L23b3b6.  v0:= temp @kind object;
  #L23b3b8.  v1:= `@@io.grpc.internal.w3.a` @type ^`io.grpc.c` @kind object;
  #L23b3bc.  call temp:= `b`(v7, v1) @signature `Lio/grpc/d;.b:(Lio/grpc/c;)Ljava/lang/Object;` @kind virtual;
  #L23b3c2.  v7:= temp @kind object;
  #L23b3c4.  v7:= (`java.util.Map`) v7 @kind object;
  #L23b3c8.  if v7 == 0 then goto L23b43e;
  #L23b3cc.  call temp:= `y`(v7) @signature `Lio/grpc/internal/i9;.y:(Ljava/util/Map;)Ljava/lang/String;` @kind static;
  #L23b3d2.  v7:= temp @kind object;
  #L23b3d4.  if v7 == 0 then goto L23b43e;
  #L23b3d8.  v1:= "-bin" @kind object;
  #L23b3dc.  call temp:= `endsWith`(v7, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L23b3e2.  v1:= temp;
  #L23b3e4.  if v1 == 0 then goto L23b410;
  #L23b3e8.  v1:= v6.`io.grpc.z3.g.e` @type ^`io.grpc.n1` @kind object;
  #L23b3ec.  call temp:= `c`(v1) @signature `Lio/grpc/n1;.c:()Lio/grpc/ChannelLogger;` @kind virtual;
  #L23b3f2.  v1:= temp @kind object;
  #L23b3f4.  v3:= `@@io.grpc.ChannelLogger$ChannelLogLevel.WARNING` @type ^`io.grpc.ChannelLogger$ChannelLogLevel` @kind object;
  #L23b3f8.  v4:= 1I;
  #L23b3fa.  v4:= new `java.lang.Object`[v4];
  #L23b3fe.  v5:= 0I;
  #L23b400.  v4[v5]:= v7 @kind object;
  #L23b404.  v7:= "Binary stickiness header is not supported. The header \"{0}\" will be ignored" @kind object;
  #L23b408.  call `b`(v1, v3, v7, v4) @signature `Lio/grpc/ChannelLogger;.b:(Lio/grpc/ChannelLogger$ChannelLogLevel;Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L23b40e.  goto L23b43e;
  #L23b410.  v1:= v6.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` @kind object;
  #L23b414.  if v1 == 0 then goto L23b430;
  #L23b418.  v1:= v1.`io.grpc.z3.f.a` @type ^`io.grpc.j2` @kind object;
  #L23b41c.  call temp:= `c`(v1) @signature `Lio/grpc/j2;.c:()Ljava/lang/String;` @kind virtual;
  #L23b422.  v1:= temp @kind object;
  #L23b424.  call temp:= `equals`(v1, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23b42a.  v1:= temp;
  #L23b42c.  if v1 != 0 then goto L23b43e;
  #L23b430.  v1:= new `io.grpc.z3.f`;
  #L23b434.  call `<init>`(v1, v7) @signature `Lio/grpc/z3/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23b43a.  v6.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` := v1 @kind object;
  #L23b43e.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b444.  v7:= temp @kind object;
  #L23b446.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b44c.  v1:= temp;
  #L23b44e.  if v1 == 0 then goto L23b4e6;
  #L23b452.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b458.  v1:= temp @kind object;
  #L23b45a.  v1:= (`io.grpc.t0`) v1 @kind object;
  #L23b45e.  call temp:= `c`() @signature `Lio/grpc/d;.c:()Lio/grpc/b;` @kind static;
  #L23b464.  v2:= temp @kind object;
  #L23b466.  v3:= `@@io.grpc.z3.g.b` @type ^`io.grpc.c` @kind object;
  #L23b46a.  v4:= new `io.grpc.z3.d`;
  #L23b46e.  v5:= `@@io.grpc.ConnectivityState.IDLE` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b472.  call temp:= `a`(v5) @signature `Lio/grpc/b0;.a:(Lio/grpc/ConnectivityState;)Lio/grpc/b0;` @kind static;
  #L23b478.  v5:= temp @kind object;
  #L23b47a.  call `<init>`(v4, v5) @signature `Lio/grpc/z3/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L23b480.  call temp:= `c`(v2, v3, v4) @signature `Lio/grpc/b;.c:(Lio/grpc/c;Ljava/lang/Object;)Lio/grpc/b;` @kind virtual;
  #L23b486.  v2:= temp @kind object;
  #L23b488.  v3:= v6.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` @kind object;
  #L23b48c.  v4:= 0I;
  #L23b48e.  if v3 == 0 then goto L23b4a8;
  #L23b492.  v3:= `@@io.grpc.z3.g.c` @type ^`io.grpc.c` @kind object;
  #L23b496.  v5:= new `io.grpc.z3.d`;
  #L23b49a.  call `<init>`(v5, v4) @signature `Lio/grpc/z3/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L23b4a0.  call temp:= `c`(v2, v3, v5) @signature `Lio/grpc/b;.c:(Lio/grpc/c;Ljava/lang/Object;)Lio/grpc/b;` @kind virtual;
  #L23b4a6.  v4:= v5 @kind object;
  #L23b4a8.  v3:= v6.`io.grpc.z3.g.e` @type ^`io.grpc.n1` @kind object;
  #L23b4ac.  call temp:= `a`(v2) @signature `Lio/grpc/b;.a:()Lio/grpc/d;` @kind virtual;
  #L23b4b2.  v2:= temp @kind object;
  #L23b4b4.  call temp:= `a`(v3, v1, v2) @signature `Lio/grpc/n1;.a:(Lio/grpc/t0;Lio/grpc/d;)Lio/grpc/s1;` @kind virtual;
  #L23b4ba.  v2:= temp @kind object;
  #L23b4bc.  v3:= "subchannel" @kind object;
  #L23b4c0.  call temp:= `s`(v2, v3) @signature `Lcom/google/common/base/b0;.s:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23b4c6.  v2:= temp @kind object;
  #L23b4c8.  v2:= (`io.grpc.s1`) v2 @kind object;
  #L23b4cc.  if v4 == 0 then goto L23b4d4;
  #L23b4d0.  v4.`io.grpc.z3.d.a` @type ^`java.lang.Object` := v2 @kind object;
  #L23b4d4.  v3:= v6.`io.grpc.z3.g.f` @type ^`java.util.Map` @kind object;
  #L23b4d8.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23b4de.  call `d`(v2) @signature `Lio/grpc/s1;.d:()V` @kind virtual;
  #L23b4e4.  goto L23b446;
  #L23b4e6.  v7:= new `java.util.ArrayList`;
  #L23b4ea.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L23b4f0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b4f6.  v0:= temp @kind object;
  #L23b4f8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b4fe.  v1:= temp;
  #L23b500.  if v1 == 0 then goto L23b524;
  #L23b504.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b50a.  v1:= temp @kind object;
  #L23b50c.  v1:= (`io.grpc.t0`) v1 @kind object;
  #L23b510.  v2:= v6.`io.grpc.z3.g.f` @type ^`java.util.Map` @kind object;
  #L23b514.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23b51a.  v1:= temp @kind object;
  #L23b51c.  call temp:= `add`(v7, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L23b522.  goto L23b4f8;
  #L23b524.  call `m`(v6) @signature `Lio/grpc/z3/g;.m:()V` @kind direct;
  #L23b52a.  call temp:= `iterator`(v7) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L23b530.  v7:= temp @kind object;
  #L23b532.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b538.  v0:= temp;
  #L23b53a.  if v0 == 0 then goto L23b552;
  #L23b53e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b544.  v0:= temp @kind object;
  #L23b546.  v0:= (`io.grpc.s1`) v0 @kind object;
  #L23b54a.  call `k`(v6, v0) @signature `Lio/grpc/z3/g;.k:(Lio/grpc/s1;)V` @kind direct;
  #L23b550.  goto L23b532;
  #L23b552.  return @kind void;
}
procedure `void` `d`(`io.grpc.z3.g` v2 @kind this, `io.grpc.s1` v3 @kind object, `io.grpc.b0` v4 @kind object) @signature `Lio/grpc/z3/g;.d:(Lio/grpc/s1;Lio/grpc/b0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23b564.  v0:= v2.`io.grpc.z3.g.f` @type ^`java.util.Map` @kind object;
  #L23b568.  call temp:= `a`(v3) @signature `Lio/grpc/s1;.a:()Lio/grpc/t0;` @kind virtual;
  #L23b56e.  v1:= temp @kind object;
  #L23b570.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23b576.  v0:= temp @kind object;
  #L23b578.  if v0 == v3 then goto L23b57e;
  #L23b57c.  return @kind void;
  #L23b57e.  call temp:= `c`(v4) @signature `Lio/grpc/b0;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L23b584.  v0:= temp @kind object;
  #L23b586.  v1:= `@@io.grpc.ConnectivityState.SHUTDOWN` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b58a.  if v0 != v1 then goto L23b59c;
  #L23b58e.  v0:= v2.`io.grpc.z3.g.j` @type ^`io.grpc.z3.f` @kind object;
  #L23b592.  if v0 == 0 then goto L23b59c;
  #L23b596.  call `d`(v0, v3) @signature `Lio/grpc/z3/f;.d:(Lio/grpc/s1;)V` @kind virtual;
  #L23b59c.  call temp:= `c`(v4) @signature `Lio/grpc/b0;.c:()Lio/grpc/ConnectivityState;` @kind virtual;
  #L23b5a2.  v0:= temp @kind object;
  #L23b5a4.  v1:= `@@io.grpc.ConnectivityState.IDLE` @type ^`io.grpc.ConnectivityState` @kind object;
  #L23b5a8.  if v0 != v1 then goto L23b5b2;
  #L23b5ac.  call `d`(v3) @signature `Lio/grpc/s1;.d:()V` @kind virtual;
  #L23b5b2.  call temp:= `g`(v3) @signature `Lio/grpc/z3/g;.g:(Lio/grpc/s1;)Lio/grpc/z3/d;` @kind static;
  #L23b5b8.  v3:= temp @kind object;
  #L23b5ba.  v3.`io.grpc.z3.d.a` @type ^`java.lang.Object` := v4 @kind object;
  #L23b5be.  call `m`(v2) @signature `Lio/grpc/z3/g;.m:()V` @kind direct;
  #L23b5c4.  return @kind void;
}
procedure `void` `e`(`io.grpc.z3.g` v2 @kind this) @signature `Lio/grpc/z3/g;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23b5d8.  call temp:= `h`(v2) @signature `Lio/grpc/z3/g;.h:()Ljava/util/Collection;` @kind virtual;
  #L23b5de.  v0:= temp @kind object;
  #L23b5e0.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23b5e6.  v0:= temp @kind object;
  #L23b5e8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23b5ee.  v1:= temp;
  #L23b5f0.  if v1 == 0 then goto L23b608;
  #L23b5f4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23b5fa.  v1:= temp @kind object;
  #L23b5fc.  v1:= (`io.grpc.s1`) v1 @kind object;
  #L23b600.  call `k`(v2, v1) @signature `Lio/grpc/z3/g;.k:(Lio/grpc/s1;)V` @kind direct;
  #L23b606.  goto L23b5e8;
  #L23b608.  return @kind void;
}
procedure `java.util.Collection` `h`(`io.grpc.z3.g` v1 @kind this) @signature `Lio/grpc/z3/g;.h:()Ljava/util/Collection;` @AccessFlag  {
    temp;
    v0;

  #L23b1b0.  v0:= v1.`io.grpc.z3.g.f` @type ^`java.util.Map` @kind object;
  #L23b1b4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L23b1ba.  v0:= temp @kind object;
  #L23b1bc.  return v0 @kind object;
}
