record `io.opencensus.stats.k` @kind class @AccessFlag FINAL extends `io.opencensus.stats.p` @kind class {
}
global `io.opencensus.stats.p` `@@io.opencensus.stats.k.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/stats/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23ca0c.  v0:= new `io.opencensus.stats.k`;
  #L23ca10.  call `<init>`(v0) @signature `Lio/opencensus/stats/k;.<init>:()V` @kind direct;
  #L23ca16.  `@@io.opencensus.stats.k.a` @type ^`io.opencensus.stats.p` := v0 @kind object;
  #L23ca1a.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.stats.k` v0 @kind this) @signature `Lio/opencensus/stats/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23ca2c.  call `<init>`(v0) @signature `Lio/opencensus/stats/p;.<init>:()V` @kind direct;
  #L23ca32.  return @kind void;
}
procedure `io.opencensus.stats.g` `a`(`io.opencensus.stats.k` v1 @kind this) @signature `Lio/opencensus/stats/k;.a:()Lio/opencensus/stats/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23c9f0.  call temp:= `b`() @signature `Lio/opencensus/stats/m;.b:()Lio/opencensus/stats/g;` @kind static;
  #L23c9f6.  v0:= temp @kind object;
  #L23c9f8.  return v0 @kind object;
}
