record `io.opencensus.trace.i` @kind class @AccessFlag ABSTRACT {
}
global `char`[] `@@io.opencensus.trace.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@io.opencensus.trace.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23e15c.  call temp:= `b`() @signature `Lio/opencensus/trace/i;.b:()[C` @kind static;
  #L23e162.  v0:= temp @kind object;
  #L23e164.  `@@io.opencensus.trace.i.a` @type ^`char`[] := v0 @kind object;
  #L23e168.  call temp:= `a`() @signature `Lio/opencensus/trace/i;.a:()[B` @kind static;
  #L23e16e.  v0:= temp @kind object;
  #L23e170.  `@@io.opencensus.trace.i.b` @type ^`byte`[] := v0 @kind object;
  #L23e174.  return @kind void;
}
procedure `byte`[] `a`() @signature `Lio/opencensus/trace/i;.a:()[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23e0c4.  v0:= 128I;
  #L23e0c8.  v0:= new `byte`[v0];
  #L23e0cc.  v1:= -1I;
  #L23e0ce.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L23e0d4.  v1:= 0I;
  #L23e0d6.  v2:= 16I;
  #L23e0da.  if v1 >= v2 then goto L23e0f6;
  #L23e0de.  v2:= "0123456789abcdef" @kind object;
  #L23e0e2.  call temp:= `charAt`(v2, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23e0e8.  v2:= temp;
  #L23e0ea.  v3:= (`byte`) v1 @kind i2b;
  #L23e0ec.  v0[v2]:= v3 @kind byte;
  #L23e0f0.  v1:= v1 + 1;
  #L23e0f4.  goto L23e0d6;
  #L23e0f6.  return v0 @kind object;
}
procedure `char`[] `b`() @signature `Lio/opencensus/trace/i;.b:()[C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23e108.  v0:= 512I;
  #L23e10c.  v0:= new `char`[v0];
  #L23e110.  v1:= 0I;
  #L23e112.  v2:= 256I;
  #L23e116.  if v1 >= v2 then goto L23e148;
  #L23e11a.  v2:= v1 ^>> 4;
  #L23e11e.  v3:= "0123456789abcdef" @kind object;
  #L23e122.  call temp:= `charAt`(v3, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23e128.  v2:= temp;
  #L23e12a.  v0[v1]:= v2 @kind char;
  #L23e12e.  v2:= v1 ^| 256;
  #L23e132.  v4:= v1 ^& 15;
  #L23e136.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23e13c.  v3:= temp;
  #L23e13e.  v0[v2]:= v3 @kind char;
  #L23e142.  v1:= v1 + 1;
  #L23e146.  goto L23e112;
  #L23e148.  return v0 @kind object;
}
procedure `void` `c`(`byte` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L23e188.  v2:= v2 ^& 255;
  #L23e18c.  v0:= `@@io.opencensus.trace.i.a` @type ^`char`[] @kind object;
  #L23e190.  v1:= v0[v2] @kind char;
  #L23e194.  v3[v4]:= v1 @kind char;
  #L23e198.  v4:= v4 + 1;
  #L23e19c.  v2:= v2 ^| 256;
  #L23e1a0.  v2:= v0[v2] @kind char;
  #L23e1a4.  v3[v4]:= v2 @kind char;
  #L23e1a8.  return @kind void;
}
procedure `void` `d`(`long` v4 , `char`[] v6 @kind object, `int` v7 ) @signature `Lio/opencensus/trace/i;.d:(J[CI)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23e1bc.  v0:= 56I;
  #L23e1c0.  v0:= v4 ^> v0 @kind long;
  #L23e1c4.  v2:= 255L;
  #L23e1c8.  v0:= v0 ^& v2 @kind long;
  #L23e1ca.  v1:= (`int`) v0 @kind l2i;
  #L23e1cc.  v0:= (`byte`) v1 @kind i2b;
  #L23e1ce.  call `c`(v0, v6, v7) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e1d4.  v0:= 48I;
  #L23e1d8.  v0:= v4 ^> v0 @kind long;
  #L23e1dc.  v0:= v0 ^& v2 @kind long;
  #L23e1de.  v1:= (`int`) v0 @kind l2i;
  #L23e1e0.  v0:= (`byte`) v1 @kind i2b;
  #L23e1e2.  v1:= v7 + 2;
  #L23e1e6.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e1ec.  v0:= 40I;
  #L23e1f0.  v0:= v4 ^> v0 @kind long;
  #L23e1f4.  v0:= v0 ^& v2 @kind long;
  #L23e1f6.  v1:= (`int`) v0 @kind l2i;
  #L23e1f8.  v0:= (`byte`) v1 @kind i2b;
  #L23e1fa.  v1:= v7 + 4;
  #L23e1fe.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e204.  v0:= 32I;
  #L23e208.  v0:= v4 ^> v0 @kind long;
  #L23e20c.  v0:= v0 ^& v2 @kind long;
  #L23e20e.  v1:= (`int`) v0 @kind l2i;
  #L23e210.  v0:= (`byte`) v1 @kind i2b;
  #L23e212.  v1:= v7 + 6;
  #L23e216.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e21c.  v0:= 24I;
  #L23e220.  v0:= v4 ^> v0 @kind long;
  #L23e224.  v0:= v0 ^& v2 @kind long;
  #L23e226.  v1:= (`int`) v0 @kind l2i;
  #L23e228.  v0:= (`byte`) v1 @kind i2b;
  #L23e22a.  v1:= v7 + 8;
  #L23e22e.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e234.  v0:= 16I;
  #L23e238.  v0:= v4 ^> v0 @kind long;
  #L23e23c.  v0:= v0 ^& v2 @kind long;
  #L23e23e.  v1:= (`int`) v0 @kind l2i;
  #L23e240.  v0:= (`byte`) v1 @kind i2b;
  #L23e242.  v1:= v7 + 10;
  #L23e246.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e24c.  v0:= 8I;
  #L23e250.  v0:= v4 ^> v0 @kind long;
  #L23e254.  v0:= v0 ^& v2 @kind long;
  #L23e256.  v1:= (`int`) v0 @kind l2i;
  #L23e258.  v0:= (`byte`) v1 @kind i2b;
  #L23e25a.  v1:= v7 + 12;
  #L23e25e.  call `c`(v0, v6, v1) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e264.  v4:= v4 ^& v2 @kind long;
  #L23e266.  v5:= (`int`) v4 @kind l2i;
  #L23e268.  v4:= (`byte`) v5 @kind i2b;
  #L23e26a.  v7:= v7 + 14;
  #L23e26e.  call `c`(v4, v6, v7) @signature `Lio/opencensus/trace/i;.c:(B[CI)V` @kind static;
  #L23e274.  return @kind void;
}
