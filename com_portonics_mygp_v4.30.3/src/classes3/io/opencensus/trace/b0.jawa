record `io.opencensus.trace.b0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.opencensus.trace.b0` v0 @kind this) @signature `Lio/opencensus/trace/b0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23f7a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f7a6.  return @kind void;
}
procedure `io.opencensus.trace.b0` `a`(`java.util.List` v0 @kind object) @signature `Lio/opencensus/trace/b0;.a:(Ljava/util/List;)Lio/opencensus/trace/b0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23f718.  call temp:= `c`(v0) @signature `Lio/opencensus/trace/b0;.c:(Ljava/util/List;)Lio/opencensus/trace/b0;` @kind static;
  #L23f71e.  v0:= temp @kind object;
  #L23f720.  return v0 @kind object;
}
procedure `io.opencensus.trace.a0` `b`() @signature `Lio/opencensus/trace/b0;.b:()Lio/opencensus/trace/a0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23f778.  v0:= new `io.opencensus.trace.a0`;
  #L23f77c.  call temp:= `a`() @signature `Lio/opencensus/trace/a0;.a:()Lio/opencensus/trace/b0;` @kind static;
  #L23f782.  v1:= temp @kind object;
  #L23f784.  v2:= 0I;
  #L23f786.  call `<init>`(v0, v1, v2) @signature `Lio/opencensus/trace/a0;.<init>:(Lio/opencensus/trace/b0;Lio/opencensus/trace/z;)V` @kind direct;
  #L23f78c.  return v0 @kind object;
}
procedure `io.opencensus.trace.b0` `c`(`java.util.List` v2 @kind object) @signature `Lio/opencensus/trace/b0;.c:(Ljava/util/List;)Lio/opencensus/trace/b0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L23f734.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L23f73a.  v0:= temp;
  #L23f73c.  v1:= 32I;
  #L23f740.  if v0 > v1 then goto L23f748;
  #L23f744.  v0:= 1I;
  #L23f746.  goto L23f74a;
  #L23f748.  v0:= 0I;
  #L23f74a.  v1:= "Invalid size" @kind object;
  #L23f74e.  call `d`(v0, v1) @signature `Lk/a/b/c;.d:(ZLjava/lang/Object;)V` @kind static;
  #L23f754.  v0:= new `io.opencensus.trace.g`;
  #L23f758.  call temp:= `unmodifiableList`(v2) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L23f75e.  v2:= temp @kind object;
  #L23f760.  call `<init>`(v0, v2) @signature `Lio/opencensus/trace/g;.<init>:(Ljava/util/List;)V` @kind direct;
  #L23f766.  return v0 @kind object;
}
procedure `java.util.List` `d`() @signature `Lio/opencensus/trace/b0;.d:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
