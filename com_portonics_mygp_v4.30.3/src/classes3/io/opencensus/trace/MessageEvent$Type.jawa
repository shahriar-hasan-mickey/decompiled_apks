record `io.opencensus.trace.MessageEvent$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.opencensus.trace.MessageEvent$Type`[] `@@io.opencensus.trace.MessageEvent$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.opencensus.trace.MessageEvent$Type` `@@io.opencensus.trace.MessageEvent$Type.RECEIVED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.opencensus.trace.MessageEvent$Type` `@@io.opencensus.trace.MessageEvent$Type.SENT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/MessageEvent$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23e4a4.  v0:= new `io.opencensus.trace.MessageEvent$Type`;
  #L23e4a8.  v1:= "SENT" @kind object;
  #L23e4ac.  v2:= 0I;
  #L23e4ae.  call `<init>`(v0, v1, v2) @signature `Lio/opencensus/trace/MessageEvent$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23e4b4.  `@@io.opencensus.trace.MessageEvent$Type.SENT` @type ^`io.opencensus.trace.MessageEvent$Type` := v0 @kind object;
  #L23e4b8.  v1:= new `io.opencensus.trace.MessageEvent$Type`;
  #L23e4bc.  v3:= "RECEIVED" @kind object;
  #L23e4c0.  v4:= 1I;
  #L23e4c2.  call `<init>`(v1, v3, v4) @signature `Lio/opencensus/trace/MessageEvent$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23e4c8.  `@@io.opencensus.trace.MessageEvent$Type.RECEIVED` @type ^`io.opencensus.trace.MessageEvent$Type` := v1 @kind object;
  #L23e4cc.  v3:= 2I;
  #L23e4ce.  v3:= new `io.opencensus.trace.MessageEvent$Type`[v3];
  #L23e4d2.  v3[v2]:= v0 @kind object;
  #L23e4d6.  v3[v4]:= v1 @kind object;
  #L23e4da.  `@@io.opencensus.trace.MessageEvent$Type.$VALUES` @type ^`io.opencensus.trace.MessageEvent$Type`[] := v3 @kind object;
  #L23e4de.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.MessageEvent$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/opencensus/trace/MessageEvent$Type;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23e4f0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23e4f6.  return @kind void;
}
procedure `io.opencensus.trace.MessageEvent$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/opencensus/trace/MessageEvent$Type;.valueOf:(Ljava/lang/String;)Lio/opencensus/trace/MessageEvent$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23e45c.  v0:= constclass @type ^`io.opencensus.trace.MessageEvent$Type` @kind object;
  #L23e460.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23e466.  v1:= temp @kind object;
  #L23e468.  v1:= (`io.opencensus.trace.MessageEvent$Type`) v1 @kind object;
  #L23e46c.  return v1 @kind object;
}
procedure `io.opencensus.trace.MessageEvent$Type`[] `values`() @signature `Lio/opencensus/trace/MessageEvent$Type;.values:()[Lio/opencensus/trace/MessageEvent$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23e480.  v0:= `@@io.opencensus.trace.MessageEvent$Type.$VALUES` @type ^`io.opencensus.trace.MessageEvent$Type`[] @kind object;
  #L23e484.  call temp:= `clone`(v0) @signature `[Lio/opencensus/trace/MessageEvent$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23e48a.  v0:= temp @kind object;
  #L23e48c.  v0:= (`io.opencensus.trace.MessageEvent$Type`[]) v0 @kind object;
  #L23e490.  return v0 @kind object;
}
