record `io.opencensus.trace.q` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `io.opencensus.trace.q.c` @AccessFlag PRIVATE_FINAL;
}
global `io.opencensus.trace.q` `@@io.opencensus.trace.q.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L23eaa4.  v0:= new `io.opencensus.trace.q`;
  #L23eaa8.  v1:= 0L;
  #L23eaac.  call `<init>`(v0, v1) @signature `Lio/opencensus/trace/q;.<init>:(J)V` @kind direct;
  #L23eab2.  `@@io.opencensus.trace.q.b` @type ^`io.opencensus.trace.q` := v0 @kind object;
  #L23eab6.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.q` v0 @kind this, `long` v1 ) @signature `Lio/opencensus/trace/q;.<init>:(J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23eac8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23eace.  v0.`io.opencensus.trace.q.c` @type ^`long` := v1 @kind wide;
  #L23ead2.  return @kind void;
}
procedure `int` `a`(`io.opencensus.trace.q` v4 @kind this, `io.opencensus.trace.q` v5 @kind object) @signature `Lio/opencensus/trace/q;.a:(Lio/opencensus/trace/q;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23e9b8.  v0:= v4.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23e9bc.  v2:= v5.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23e9c0.  v5:= lcmp(v0, v2);
  #L23e9c4.  if v5 >= 0 then goto L23e9cc;
  #L23e9c8.  v5:= -1I;
  #L23e9ca.  goto L23e9da;
  #L23e9cc.  v5:= lcmp(v0, v2);
  #L23e9d0.  if v5 != 0 then goto L23e9d8;
  #L23e9d4.  v5:= 0I;
  #L23e9d6.  goto L23e9da;
  #L23e9d8.  v5:= 1I;
  #L23e9da.  return v5;
}
procedure `void` `b`(`io.opencensus.trace.q` v2 @kind this, `char`[] v3 @kind object, `int` v4 ) @signature `Lio/opencensus/trace/q;.b:([CI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23eae4.  v0:= v2.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23eae8.  call `d`(v0, v3, v4) @signature `Lio/opencensus/trace/i;.d:(J[CI)V` @kind static;
  #L23eaee.  return @kind void;
}
procedure `java.lang.String` `c`(`io.opencensus.trace.q` v2 @kind this) @signature `Lio/opencensus/trace/q;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ea30.  v0:= 16I;
  #L23ea34.  v0:= new `char`[v0];
  #L23ea38.  v1:= 0I;
  #L23ea3a.  call `b`(v2, v0, v1) @signature `Lio/opencensus/trace/q;.b:([CI)V` @kind virtual;
  #L23ea40.  v1:= new `java.lang.String`;
  #L23ea44.  call `<init>`(v1, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L23ea4a.  return v1 @kind object;
}
procedure `int` `compareTo`(`io.opencensus.trace.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/opencensus/trace/q;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L23e9ec.  v1:= (`io.opencensus.trace.q`) v1 @kind object;
  #L23e9f0.  call temp:= `a`(v0, v1) @signature `Lio/opencensus/trace/q;.a:(Lio/opencensus/trace/q;)I` @kind virtual;
  #L23e9f6.  v1:= temp;
  #L23e9f8.  return v1;
}
procedure `boolean` `equals`(`io.opencensus.trace.q` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lio/opencensus/trace/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23e978.  v0:= 1I;
  #L23e97a.  if v8 != v7 then goto L23e980;
  #L23e97e.  return v0;
  #L23e980.  v1:= instanceof @variable v8 @type ^`io.opencensus.trace.q` @kind boolean;
  #L23e984.  v2:= 0I;
  #L23e986.  if v1 != 0 then goto L23e98c;
  #L23e98a.  return v2;
  #L23e98c.  v8:= (`io.opencensus.trace.q`) v8 @kind object;
  #L23e990.  v3:= v7.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23e994.  v5:= v8.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23e998.  v8:= lcmp(v3, v5);
  #L23e99c.  if v8 != 0 then goto L23e9a2;
  #L23e9a0.  goto L23e9a4;
  #L23e9a2.  v0:= 0I;
  #L23e9a4.  return v0;
}
procedure `int` `hashCode`(`io.opencensus.trace.q` v4 @kind this) @signature `Lio/opencensus/trace/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23ea0c.  v0:= v4.`io.opencensus.trace.q.c` @type ^`long` @kind wide;
  #L23ea10.  v2:= 32I;
  #L23ea14.  v2:= v0 ^>> v2 @kind long;
  #L23ea18.  v0:= v0 ^~ v2 @kind long;
  #L23ea1a.  v1:= (`int`) v0 @kind l2i;
  #L23ea1c.  return v1;
}
procedure `java.lang.String` `toString`(`io.opencensus.trace.q` v2 @kind this) @signature `Lio/opencensus/trace/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ea5c.  v0:= new `java.lang.StringBuilder`;
  #L23ea60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23ea66.  v1:= "SpanId{spanId=" @kind object;
  #L23ea6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ea70.  call temp:= `c`(v2) @signature `Lio/opencensus/trace/q;.c:()Ljava/lang/String;` @kind virtual;
  #L23ea76.  v1:= temp @kind object;
  #L23ea78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ea7e.  v1:= "}" @kind object;
  #L23ea82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ea88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ea8e.  v0:= temp @kind object;
  #L23ea90.  return v0 @kind object;
}
