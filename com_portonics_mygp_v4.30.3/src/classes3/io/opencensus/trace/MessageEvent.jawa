record `io.opencensus.trace.MessageEvent` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.opencensus.trace.h` @kind class {
}
procedure `void` `<init>`(`io.opencensus.trace.MessageEvent` v0 @kind this) @signature `Lio/opencensus/trace/MessageEvent;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23e558.  call `<init>`(v0) @signature `Lio/opencensus/trace/h;.<init>:()V` @kind direct;
  #L23e55e.  return @kind void;
}
procedure `io.opencensus.trace.m` `a`(`io.opencensus.trace.MessageEvent$Type` v2 @kind object, `long` v3 ) @signature `Lio/opencensus/trace/MessageEvent;.a:(Lio/opencensus/trace/MessageEvent$Type;J)Lio/opencensus/trace/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L23e508.  v0:= new `io.opencensus.trace.e`;
  #L23e50c.  call `<init>`(v0) @signature `Lio/opencensus/trace/e;.<init>:()V` @kind direct;
  #L23e512.  v1:= "type" @kind object;
  #L23e516.  call temp:= `c`(v2, v1) @signature `Lk/a/b/c;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23e51c.  v2:= temp @kind object;
  #L23e51e.  v2:= (`io.opencensus.trace.MessageEvent$Type`) v2 @kind object;
  #L23e522.  call temp:= `e`(v0, v2) @signature `Lio/opencensus/trace/e;.e:(Lio/opencensus/trace/MessageEvent$Type;)Lio/opencensus/trace/m;` @kind virtual;
  #L23e528.  v2:= temp @kind object;
  #L23e52a.  call temp:= `c`(v2, v3) @signature `Lio/opencensus/trace/m;.c:(J)Lio/opencensus/trace/m;` @kind virtual;
  #L23e530.  v2:= temp @kind object;
  #L23e532.  v3:= 0L;
  #L23e536.  call temp:= `d`(v2, v3) @signature `Lio/opencensus/trace/m;.d:(J)Lio/opencensus/trace/m;` @kind virtual;
  #L23e53c.  v2:= temp @kind object;
  #L23e53e.  call temp:= `b`(v2, v3) @signature `Lio/opencensus/trace/m;.b:(J)Lio/opencensus/trace/m;` @kind virtual;
  #L23e544.  v2:= temp @kind object;
  #L23e546.  return v2 @kind object;
}
procedure `long` `b`() @signature `Lio/opencensus/trace/MessageEvent;.b:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `c`() @signature `Lio/opencensus/trace/MessageEvent;.c:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.opencensus.trace.MessageEvent$Type` `d`() @signature `Lio/opencensus/trace/MessageEvent;.d:()Lio/opencensus/trace/MessageEvent$Type;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `e`() @signature `Lio/opencensus/trace/MessageEvent;.e:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
