record `io.opencensus.trace.Status` @kind class @AccessFlag PUBLIC_FINAL {
  `io.opencensus.trace.Status$CanonicalCode` `io.opencensus.trace.Status.s` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `io.opencensus.trace.Status.t` @AccessFlag PRIVATE_FINAL;
}
global `java.util.List` `@@io.opencensus.trace.Status.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.i` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.j` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.k` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.l` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.m` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.n` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.o` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.p` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.opencensus.trace.Status` `@@io.opencensus.trace.Status.r` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/Status;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23f094.  call temp:= `b`() @signature `Lio/opencensus/trace/Status;.b:()Ljava/util/List;` @kind static;
  #L23f09a.  v0:= temp @kind object;
  #L23f09c.  `@@io.opencensus.trace.Status.a` @type ^`java.util.List` := v0 @kind object;
  #L23f0a0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.OK` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0a4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0aa.  v0:= temp @kind object;
  #L23f0ac.  `@@io.opencensus.trace.Status.b` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f0b0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.CANCELLED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0b4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0ba.  v0:= temp @kind object;
  #L23f0bc.  `@@io.opencensus.trace.Status.c` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f0c0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.UNKNOWN` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0c4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0ca.  v0:= temp @kind object;
  #L23f0cc.  `@@io.opencensus.trace.Status.d` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f0d0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.INVALID_ARGUMENT` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0d4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0da.  v0:= temp @kind object;
  #L23f0dc.  `@@io.opencensus.trace.Status.e` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f0e0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.DEADLINE_EXCEEDED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0e4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0ea.  v0:= temp @kind object;
  #L23f0ec.  `@@io.opencensus.trace.Status.f` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f0f0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.NOT_FOUND` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f0f4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f0fa.  v0:= temp @kind object;
  #L23f0fc.  `@@io.opencensus.trace.Status.g` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f100.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.ALREADY_EXISTS` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f104.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f10a.  v0:= temp @kind object;
  #L23f10c.  `@@io.opencensus.trace.Status.h` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f110.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.PERMISSION_DENIED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f114.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f11a.  v0:= temp @kind object;
  #L23f11c.  `@@io.opencensus.trace.Status.i` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f120.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.UNAUTHENTICATED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f124.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f12a.  v0:= temp @kind object;
  #L23f12c.  `@@io.opencensus.trace.Status.j` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f130.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.RESOURCE_EXHAUSTED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f134.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f13a.  v0:= temp @kind object;
  #L23f13c.  `@@io.opencensus.trace.Status.k` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f140.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.FAILED_PRECONDITION` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f144.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f14a.  v0:= temp @kind object;
  #L23f14c.  `@@io.opencensus.trace.Status.l` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f150.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.ABORTED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f154.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f15a.  v0:= temp @kind object;
  #L23f15c.  `@@io.opencensus.trace.Status.m` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f160.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.OUT_OF_RANGE` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f164.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f16a.  v0:= temp @kind object;
  #L23f16c.  `@@io.opencensus.trace.Status.n` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f170.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.UNIMPLEMENTED` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f174.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f17a.  v0:= temp @kind object;
  #L23f17c.  `@@io.opencensus.trace.Status.o` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f180.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.INTERNAL` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f184.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f18a.  v0:= temp @kind object;
  #L23f18c.  `@@io.opencensus.trace.Status.p` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f190.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.UNAVAILABLE` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f194.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f19a.  v0:= temp @kind object;
  #L23f19c.  `@@io.opencensus.trace.Status.q` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f1a0.  v0:= `@@io.opencensus.trace.Status$CanonicalCode.DATA_LOSS` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23f1a4.  call temp:= `toStatus`(v0) @signature `Lio/opencensus/trace/Status$CanonicalCode;.toStatus:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23f1aa.  v0:= temp @kind object;
  #L23f1ac.  `@@io.opencensus.trace.Status.r` @type ^`io.opencensus.trace.Status` := v0 @kind object;
  #L23f1b0.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.Status` v1 @kind this, `io.opencensus.trace.Status$CanonicalCode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lio/opencensus/trace/Status;.<init>:(Lio/opencensus/trace/Status$CanonicalCode;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23f1c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f1ca.  v0:= "canonicalCode" @kind object;
  #L23f1ce.  call temp:= `c`(v2, v0) @signature `Lk/a/b/c;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23f1d4.  v2:= temp @kind object;
  #L23f1d6.  v2:= (`io.opencensus.trace.Status$CanonicalCode`) v2 @kind object;
  #L23f1da.  v1.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` := v2 @kind object;
  #L23f1de.  v1.`io.opencensus.trace.Status.t` @type ^`java.lang.String` := v3 @kind object;
  #L23f1e2.  return @kind void;
}
procedure `java.util.List` `a`() @signature `Lio/opencensus/trace/Status;.a:()Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23efa8.  v0:= `@@io.opencensus.trace.Status.a` @type ^`java.util.List` @kind object;
  #L23efac.  return v0 @kind object;
}
procedure `java.util.List` `b`() @signature `Lio/opencensus/trace/Status;.b:()Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L23efc0.  v0:= new `java.util.TreeMap`;
  #L23efc4.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L23efca.  call temp:= `values`() @signature `Lio/opencensus/trace/Status$CanonicalCode;.values:()[Lio/opencensus/trace/Status$CanonicalCode;` @kind static;
  #L23efd0.  v1:= temp @kind object;
  #L23efd2.  v2:= length @variable v1;
  #L23efd4.  v3:= 0I;
  #L23efd6.  if v3 >= v2 then goto L23f066;
  #L23efda.  v4:= v1[v3] @kind object;
  #L23efde.  call temp:= `value`(v4) @signature `Lio/opencensus/trace/Status$CanonicalCode;.value:()I` @kind virtual;
  #L23efe4.  v5:= temp;
  #L23efe6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23efec.  v5:= temp @kind object;
  #L23efee.  v6:= new `io.opencensus.trace.Status`;
  #L23eff2.  v7:= 0I;
  #L23eff4.  call `<init>`(v6, v4, v7) @signature `Lio/opencensus/trace/Status;.<init>:(Lio/opencensus/trace/Status$CanonicalCode;Ljava/lang/String;)V` @kind direct;
  #L23effa.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23f000.  v5:= temp @kind object;
  #L23f002.  v5:= (`io.opencensus.trace.Status`) v5 @kind object;
  #L23f006.  if v5 != 0 then goto L23f010;
  #L23f00a.  v3:= v3 + 1;
  #L23f00e.  goto L23efd6;
  #L23f010.  v0:= new `java.lang.IllegalStateException`;
  #L23f014.  v1:= new `java.lang.StringBuilder`;
  #L23f018.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23f01e.  v2:= "Code value duplication between " @kind object;
  #L23f022.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f028.  call temp:= `c`(v5) @signature `Lio/opencensus/trace/Status;.c:()Lio/opencensus/trace/Status$CanonicalCode;` @kind virtual;
  #L23f02e.  v2:= temp @kind object;
  #L23f030.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L23f036.  v2:= temp @kind object;
  #L23f038.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f03e.  v2:= " & " @kind object;
  #L23f042.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f048.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L23f04e.  v2:= temp @kind object;
  #L23f050.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f056.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23f05c.  v1:= temp @kind object;
  #L23f05e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f064.  throw v0;
  #L23f066.  v1:= new `java.util.ArrayList`;
  #L23f06a.  call temp:= `values`(v0) @signature `Ljava/util/TreeMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L23f070.  v0:= temp @kind object;
  #L23f072.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L23f078.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L23f07e.  v0:= temp @kind object;
  #L23f080.  return v0 @kind object;
}
procedure `io.opencensus.trace.Status$CanonicalCode` `c`(`io.opencensus.trace.Status` v1 @kind this) @signature `Lio/opencensus/trace/Status;.c:()Lio/opencensus/trace/Status$CanonicalCode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23ef38.  v0:= v1.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23ef3c.  return v0 @kind object;
}
procedure `io.opencensus.trace.Status` `d`(`io.opencensus.trace.Status` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/opencensus/trace/Status;.d:(Ljava/lang/String;)Lio/opencensus/trace/Status;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ef04.  v0:= v2.`io.opencensus.trace.Status.t` @type ^`java.lang.String` @kind object;
  #L23ef08.  call temp:= `e`(v0, v3) @signature `Lk/a/b/c;.e:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L23ef0e.  v0:= temp;
  #L23ef10.  if v0 == 0 then goto L23ef16;
  #L23ef14.  return v2 @kind object;
  #L23ef16.  v0:= new `io.opencensus.trace.Status`;
  #L23ef1a.  v1:= v2.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23ef1e.  call `<init>`(v0, v1, v3) @signature `Lio/opencensus/trace/Status;.<init>:(Lio/opencensus/trace/Status$CanonicalCode;Ljava/lang/String;)V` @kind direct;
  #L23ef24.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.trace.Status` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/opencensus/trace/Status;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23ee80.  v0:= 1I;
  #L23ee82.  if v5 != v4 then goto L23ee88;
  #L23ee86.  return v0;
  #L23ee88.  v1:= instanceof @variable v5 @type ^`io.opencensus.trace.Status` @kind boolean;
  #L23ee8c.  v2:= 0I;
  #L23ee8e.  if v1 != 0 then goto L23ee94;
  #L23ee92.  return v2;
  #L23ee94.  v5:= (`io.opencensus.trace.Status`) v5 @kind object;
  #L23ee98.  v1:= v4.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23ee9c.  v3:= v5.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23eea0.  if v1 != v3 then goto L23eeba;
  #L23eea4.  v1:= v4.`io.opencensus.trace.Status.t` @type ^`java.lang.String` @kind object;
  #L23eea8.  v5:= v5.`io.opencensus.trace.Status.t` @type ^`java.lang.String` @kind object;
  #L23eeac.  call temp:= `e`(v1, v5) @signature `Lk/a/b/c;.e:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L23eeb2.  v5:= temp;
  #L23eeb4.  if v5 == 0 then goto L23eeba;
  #L23eeb8.  goto L23eebc;
  #L23eeba.  v0:= 0I;
  #L23eebc.  return v0;
}
procedure `int` `hashCode`(`io.opencensus.trace.Status` v3 @kind this) @signature `Lio/opencensus/trace/Status;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23eed0.  v0:= 2I;
  #L23eed2.  v0:= new `java.lang.Object`[v0];
  #L23eed6.  v1:= v3.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23eeda.  v2:= 0I;
  #L23eedc.  v0[v2]:= v1 @kind object;
  #L23eee0.  v1:= v3.`io.opencensus.trace.Status.t` @type ^`java.lang.String` @kind object;
  #L23eee4.  v2:= 1I;
  #L23eee6.  v0[v2]:= v1 @kind object;
  #L23eeea.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L23eef0.  v0:= temp;
  #L23eef2.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.trace.Status` v2 @kind this) @signature `Lio/opencensus/trace/Status;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ef50.  v0:= new `java.lang.StringBuilder`;
  #L23ef54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23ef5a.  v1:= "Status{canonicalCode=" @kind object;
  #L23ef5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ef64.  v1:= v2.`io.opencensus.trace.Status.s` @type ^`io.opencensus.trace.Status$CanonicalCode` @kind object;
  #L23ef68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ef6e.  v1:= ", description=" @kind object;
  #L23ef72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ef78.  v1:= v2.`io.opencensus.trace.Status.t` @type ^`java.lang.String` @kind object;
  #L23ef7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ef82.  v1:= "}" @kind object;
  #L23ef86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ef8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ef92.  v0:= temp @kind object;
  #L23ef94.  return v0 @kind object;
}
