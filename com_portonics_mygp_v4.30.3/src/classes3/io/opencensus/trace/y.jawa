record `io.opencensus.trace.y` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `io.opencensus.trace.x` `@@io.opencensus.trace.y.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/y;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23f630.  v0:= new `io.opencensus.trace.x`;
  #L23f634.  v1:= 0I;
  #L23f636.  call `<init>`(v0, v1) @signature `Lio/opencensus/trace/x;.<init>:(Lio/opencensus/trace/w;)V` @kind direct;
  #L23f63c.  `@@io.opencensus.trace.y.a` @type ^`io.opencensus.trace.x` := v0 @kind object;
  #L23f640.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.y` v0 @kind this) @signature `Lio/opencensus/trace/y;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L23f654.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f65a.  return @kind void;
}
procedure `io.opencensus.trace.y` `a`() @signature `Lio/opencensus/trace/y;.a:()Lio/opencensus/trace/y;` @AccessFlag STATIC {
    temp;
    v0;

  #L23f618.  v0:= `@@io.opencensus.trace.y.a` @type ^`io.opencensus.trace.x` @kind object;
  #L23f61c.  return v0 @kind object;
}
procedure `io.opencensus.trace.o` `b`(`java.lang.String` v0 @kind object, `io.opencensus.trace.Span` v1 @kind object) @signature `Lio/opencensus/trace/y;.b:(Ljava/lang/String;Lio/opencensus/trace/Span;)Lio/opencensus/trace/o;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
