record `io.opencensus.trace.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `io.opencensus.trace.l` `@@io.opencensus.trace.l.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23e358.  call temp:= `a`() @signature `Lio/opencensus/trace/l;.a:()Lio/opencensus/trace/k;` @kind static;
  #L23e35e.  v0:= temp @kind object;
  #L23e360.  call temp:= `a`(v0) @signature `Lio/opencensus/trace/k;.a:()Lio/opencensus/trace/l;` @kind virtual;
  #L23e366.  v0:= temp @kind object;
  #L23e368.  `@@io.opencensus.trace.l.a` @type ^`io.opencensus.trace.l` := v0 @kind object;
  #L23e36c.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.l` v0 @kind this) @signature `Lio/opencensus/trace/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23e380.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23e386.  return @kind void;
}
procedure `io.opencensus.trace.k` `a`() @signature `Lio/opencensus/trace/l;.a:()Lio/opencensus/trace/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L23e330.  v0:= new `io.opencensus.trace.b`;
  #L23e334.  call `<init>`(v0) @signature `Lio/opencensus/trace/b;.<init>:()V` @kind direct;
  #L23e33a.  v1:= 0I;
  #L23e33c.  call temp:= `b`(v0, v1) @signature `Lio/opencensus/trace/b;.b:(Z)Lio/opencensus/trace/k;` @kind virtual;
  #L23e342.  v0:= temp @kind object;
  #L23e344.  return v0 @kind object;
}
procedure `boolean` `b`() @signature `Lio/opencensus/trace/l;.b:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `io.opencensus.trace.Status` `c`() @signature `Lio/opencensus/trace/l;.c:()Lio/opencensus/trace/Status;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
