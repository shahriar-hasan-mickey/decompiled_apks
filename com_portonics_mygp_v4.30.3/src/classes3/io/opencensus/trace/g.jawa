record `io.opencensus.trace.g` @kind class @AccessFlag FINAL extends `io.opencensus.trace.b0` @kind class {
  `java.util.List` `io.opencensus.trace.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.opencensus.trace.g` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lio/opencensus/trace/g;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L23e084.  call `<init>`(v1) @signature `Lio/opencensus/trace/b0;.<init>:()V` @kind direct;
  #L23e08a.  v0:= "Null entries" @kind object;
  #L23e08e.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23e094.  v1.`io.opencensus.trace.g.a` @type ^`java.util.List` := v2 @kind object;
  #L23e098.  return @kind void;
}
procedure `java.util.List` `d`(`io.opencensus.trace.g` v1 @kind this) @signature `Lio/opencensus/trace/g;.d:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e06c.  v0:= v1.`io.opencensus.trace.g.a` @type ^`java.util.List` @kind object;
  #L23e070.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.trace.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/opencensus/trace/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23dfc0.  if v2 != v1 then goto L23dfc8;
  #L23dfc4.  v2:= 1I;
  #L23dfc6.  return v2;
  #L23dfc8.  v0:= instanceof @variable v2 @type ^`io.opencensus.trace.b0` @kind boolean;
  #L23dfcc.  if v0 == 0 then goto L23dfea;
  #L23dfd0.  v2:= (`io.opencensus.trace.b0`) v2 @kind object;
  #L23dfd4.  v0:= v1.`io.opencensus.trace.g.a` @type ^`java.util.List` @kind object;
  #L23dfd8.  call temp:= `d`(v2) @signature `Lio/opencensus/trace/b0;.d:()Ljava/util/List;` @kind virtual;
  #L23dfde.  v2:= temp @kind object;
  #L23dfe0.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L23dfe6.  v2:= temp;
  #L23dfe8.  return v2;
  #L23dfea.  v2:= 0I;
  #L23dfec.  return v2;
}
procedure `int` `hashCode`(`io.opencensus.trace.g` v2 @kind this) @signature `Lio/opencensus/trace/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e000.  v0:= v2.`io.opencensus.trace.g.a` @type ^`java.util.List` @kind object;
  #L23e004.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L23e00a.  v0:= temp;
  #L23e00c.  v1:= 1000003I;
  #L23e012.  v0:= v0 ^~ v1 @kind int;
  #L23e014.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.trace.g` v2 @kind this) @signature `Lio/opencensus/trace/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e028.  v0:= new `java.lang.StringBuilder`;
  #L23e02c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e032.  v1:= "Tracestate{entries=" @kind object;
  #L23e036.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e03c.  v1:= v2.`io.opencensus.trace.g.a` @type ^`java.util.List` @kind object;
  #L23e040.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e046.  v1:= "}" @kind object;
  #L23e04a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e050.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e056.  v0:= temp @kind object;
  #L23e058.  return v0 @kind object;
}
