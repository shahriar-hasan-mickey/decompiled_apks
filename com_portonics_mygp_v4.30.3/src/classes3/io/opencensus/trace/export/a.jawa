record `io.opencensus.trace.export.a` @kind class @AccessFlag FINAL extends `io.opencensus.trace.export.g` @kind class {
  `java.util.Map` `io.opencensus.trace.export.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `io.opencensus.trace.export.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.opencensus.trace.export.a` v1 @kind this, `java.util.Map` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lio/opencensus/trace/export/a;.<init>:(Ljava/util/Map;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L23f9f4.  call `<init>`(v1) @signature `Lio/opencensus/trace/export/g;.<init>:()V` @kind direct;
  #L23f9fa.  v0:= "Null numbersOfLatencySampledSpans" @kind object;
  #L23f9fe.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23fa04.  v1.`io.opencensus.trace.export.a.a` @type ^`java.util.Map` := v2 @kind object;
  #L23fa08.  v2:= "Null numbersOfErrorSampledSpans" @kind object;
  #L23fa0c.  call temp:= `requireNonNull`(v3, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23fa12.  v1.`io.opencensus.trace.export.a.b` @type ^`java.util.Map` := v3 @kind object;
  #L23fa16.  return @kind void;
}
procedure `java.util.Map` `b`(`io.opencensus.trace.export.a` v1 @kind this) @signature `Lio/opencensus/trace/export/a;.b:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f9c4.  v0:= v1.`io.opencensus.trace.export.a.b` @type ^`java.util.Map` @kind object;
  #L23f9c8.  return v0 @kind object;
}
procedure `java.util.Map` `c`(`io.opencensus.trace.export.a` v1 @kind this) @signature `Lio/opencensus/trace/export/a;.c:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f9dc.  v0:= v1.`io.opencensus.trace.export.a.a` @type ^`java.util.Map` @kind object;
  #L23f9e0.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.trace.export.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/opencensus/trace/export/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23f8d4.  v0:= 1I;
  #L23f8d6.  if v5 != v4 then goto L23f8dc;
  #L23f8da.  return v0;
  #L23f8dc.  v1:= instanceof @variable v5 @type ^`io.opencensus.trace.export.g` @kind boolean;
  #L23f8e0.  v2:= 0I;
  #L23f8e2.  if v1 == 0 then goto L23f920;
  #L23f8e6.  v5:= (`io.opencensus.trace.export.g`) v5 @kind object;
  #L23f8ea.  v1:= v4.`io.opencensus.trace.export.a.a` @type ^`java.util.Map` @kind object;
  #L23f8ee.  call temp:= `c`(v5) @signature `Lio/opencensus/trace/export/g;.c:()Ljava/util/Map;` @kind virtual;
  #L23f8f4.  v3:= temp @kind object;
  #L23f8f6.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L23f8fc.  v1:= temp;
  #L23f8fe.  if v1 == 0 then goto L23f91c;
  #L23f902.  v1:= v4.`io.opencensus.trace.export.a.b` @type ^`java.util.Map` @kind object;
  #L23f906.  call temp:= `b`(v5) @signature `Lio/opencensus/trace/export/g;.b:()Ljava/util/Map;` @kind virtual;
  #L23f90c.  v5:= temp @kind object;
  #L23f90e.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L23f914.  v5:= temp;
  #L23f916.  if v5 == 0 then goto L23f91c;
  #L23f91a.  goto L23f91e;
  #L23f91c.  v0:= 0I;
  #L23f91e.  return v0;
  #L23f920.  return v2;
}
procedure `int` `hashCode`(`io.opencensus.trace.export.a` v2 @kind this) @signature `Lio/opencensus/trace/export/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f934.  v0:= v2.`io.opencensus.trace.export.a.a` @type ^`java.util.Map` @kind object;
  #L23f938.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L23f93e.  v0:= temp;
  #L23f940.  v1:= 1000003I;
  #L23f946.  v0:= v0 ^~ v1 @kind int;
  #L23f948.  v0:= v0 * v1 @kind int;
  #L23f94c.  v1:= v2.`io.opencensus.trace.export.a.b` @type ^`java.util.Map` @kind object;
  #L23f950.  call temp:= `hashCode`(v1) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L23f956.  v1:= temp;
  #L23f958.  v0:= v0 ^~ v1 @kind int;
  #L23f95a.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.trace.export.a` v2 @kind this) @signature `Lio/opencensus/trace/export/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f96c.  v0:= new `java.lang.StringBuilder`;
  #L23f970.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23f976.  v1:= "PerSpanNameSummary{numbersOfLatencySampledSpans=" @kind object;
  #L23f97a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f980.  v1:= v2.`io.opencensus.trace.export.a.a` @type ^`java.util.Map` @kind object;
  #L23f984.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f98a.  v1:= ", numbersOfErrorSampledSpans=" @kind object;
  #L23f98e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f994.  v1:= v2.`io.opencensus.trace.export.a.b` @type ^`java.util.Map` @kind object;
  #L23f998.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f99e.  v1:= "}" @kind object;
  #L23f9a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f9a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23f9ae.  v0:= temp @kind object;
  #L23f9b0.  return v0 @kind object;
}
