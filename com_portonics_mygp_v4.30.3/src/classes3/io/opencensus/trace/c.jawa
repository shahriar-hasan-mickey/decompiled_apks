record `io.opencensus.trace.c` @kind class @AccessFlag FINAL extends `io.opencensus.trace.l` @kind class {
  `boolean` `io.opencensus.trace.c.b` @AccessFlag PRIVATE_FINAL;
  `io.opencensus.trace.Status` `io.opencensus.trace.c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.opencensus.trace.c` v0 @kind this, `boolean` v1 , `io.opencensus.trace.Status` v2 @kind object) @signature `Lio/opencensus/trace/c;.<init>:(ZLio/opencensus/trace/Status;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23dbb4.  call `<init>`(v0) @signature `Lio/opencensus/trace/l;.<init>:()V` @kind direct;
  #L23dbba.  v0.`io.opencensus.trace.c.b` @type ^`boolean` := v1 @kind boolean;
  #L23dbbe.  v0.`io.opencensus.trace.c.c` @type ^`io.opencensus.trace.Status` := v2 @kind object;
  #L23dbc2.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.c` v0 @kind this, `boolean` v1 , `io.opencensus.trace.Status` v2 @kind object, `io.opencensus.trace.a` v3 @kind object) @signature `Lio/opencensus/trace/c;.<init>:(ZLio/opencensus/trace/Status;Lio/opencensus/trace/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23dbd4.  call `<init>`(v0, v1, v2) @signature `Lio/opencensus/trace/c;.<init>:(ZLio/opencensus/trace/Status;)V` @kind direct;
  #L23dbda.  return @kind void;
}
procedure `boolean` `b`(`io.opencensus.trace.c` v1 @kind this) @signature `Lio/opencensus/trace/c;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23dae4.  v0:= v1.`io.opencensus.trace.c.b` @type ^`boolean` @kind boolean;
  #L23dae8.  return v0;
}
procedure `io.opencensus.trace.Status` `c`(`io.opencensus.trace.c` v1 @kind this) @signature `Lio/opencensus/trace/c;.c:()Lio/opencensus/trace/Status;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23db44.  v0:= v1.`io.opencensus.trace.c.c` @type ^`io.opencensus.trace.Status` @kind object;
  #L23db48.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.trace.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lio/opencensus/trace/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23da7c.  v0:= 1I;
  #L23da7e.  if v5 != v4 then goto L23da84;
  #L23da82.  return v0;
  #L23da84.  v1:= instanceof @variable v5 @type ^`io.opencensus.trace.l` @kind boolean;
  #L23da88.  v2:= 0I;
  #L23da8a.  if v1 == 0 then goto L23dad2;
  #L23da8e.  v5:= (`io.opencensus.trace.l`) v5 @kind object;
  #L23da92.  v1:= v4.`io.opencensus.trace.c.b` @type ^`boolean` @kind boolean;
  #L23da96.  call temp:= `b`(v5) @signature `Lio/opencensus/trace/l;.b:()Z` @kind virtual;
  #L23da9c.  v3:= temp;
  #L23da9e.  if v1 != v3 then goto L23dace;
  #L23daa2.  v1:= v4.`io.opencensus.trace.c.c` @type ^`io.opencensus.trace.Status` @kind object;
  #L23daa6.  if v1 != 0 then goto L23dab8;
  #L23daaa.  call temp:= `c`(v5) @signature `Lio/opencensus/trace/l;.c:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23dab0.  v5:= temp @kind object;
  #L23dab2.  if v5 != 0 then goto L23dace;
  #L23dab6.  goto L23dad0;
  #L23dab8.  call temp:= `c`(v5) @signature `Lio/opencensus/trace/l;.c:()Lio/opencensus/trace/Status;` @kind virtual;
  #L23dabe.  v5:= temp @kind object;
  #L23dac0.  call temp:= `equals`(v1, v5) @signature `Lio/opencensus/trace/Status;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23dac6.  v5:= temp;
  #L23dac8.  if v5 == 0 then goto L23dace;
  #L23dacc.  goto L23dad0;
  #L23dace.  v0:= 0I;
  #L23dad0.  return v0;
  #L23dad2.  return v2;
}
procedure `int` `hashCode`(`io.opencensus.trace.c` v2 @kind this) @signature `Lio/opencensus/trace/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23dafc.  v0:= v2.`io.opencensus.trace.c.b` @type ^`boolean` @kind boolean;
  #L23db00.  if v0 == 0 then goto L23db0a;
  #L23db04.  v0:= 1231I;
  #L23db08.  goto L23db0e;
  #L23db0a.  v0:= 1237I;
  #L23db0e.  v1:= 1000003I;
  #L23db14.  v0:= v0 ^~ v1 @kind int;
  #L23db16.  v0:= v0 * v1 @kind int;
  #L23db1a.  v1:= v2.`io.opencensus.trace.c.c` @type ^`io.opencensus.trace.Status` @kind object;
  #L23db1e.  if v1 != 0 then goto L23db26;
  #L23db22.  v1:= 0I;
  #L23db24.  goto L23db2e;
  #L23db26.  call temp:= `hashCode`(v1) @signature `Lio/opencensus/trace/Status;.hashCode:()I` @kind virtual;
  #L23db2c.  v1:= temp;
  #L23db2e.  v0:= v0 ^~ v1 @kind int;
  #L23db30.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.trace.c` v2 @kind this) @signature `Lio/opencensus/trace/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23db5c.  v0:= new `java.lang.StringBuilder`;
  #L23db60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23db66.  v1:= "EndSpanOptions{sampleToLocalSpanStore=" @kind object;
  #L23db6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23db70.  v1:= v2.`io.opencensus.trace.c.b` @type ^`boolean` @kind boolean;
  #L23db74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L23db7a.  v1:= ", status=" @kind object;
  #L23db7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23db84.  v1:= v2.`io.opencensus.trace.c.c` @type ^`io.opencensus.trace.Status` @kind object;
  #L23db88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23db8e.  v1:= "}" @kind object;
  #L23db92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23db98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23db9e.  v0:= temp @kind object;
  #L23dba0.  return v0 @kind object;
}
