record `io.opencensus.trace.e` @kind class @AccessFlag FINAL extends `io.opencensus.trace.m` @kind class {
  `io.opencensus.trace.MessageEvent$Type` `io.opencensus.trace.e.a` @AccessFlag PRIVATE;
  `java.lang.Long` `io.opencensus.trace.e.b` @AccessFlag PRIVATE;
  `java.lang.Long` `io.opencensus.trace.e.c` @AccessFlag PRIVATE;
  `java.lang.Long` `io.opencensus.trace.e.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.opencensus.trace.e` v0 @kind this) @signature `Lio/opencensus/trace/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23dd9c.  call `<init>`(v0) @signature `Lio/opencensus/trace/m;.<init>:()V` @kind direct;
  #L23dda2.  return @kind void;
}
procedure `io.opencensus.trace.MessageEvent` `a`(`io.opencensus.trace.e` v11 @kind this) @signature `Lio/opencensus/trace/e;.a:()Lio/opencensus/trace/MessageEvent;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L23dbec.  v0:= v11.`io.opencensus.trace.e.a` @type ^`io.opencensus.trace.MessageEvent$Type` @kind object;
  #L23dbf0.  v1:= "" @kind object;
  #L23dbf4.  if v0 != 0 then goto L23dc1a;
  #L23dbf8.  v0:= new `java.lang.StringBuilder`;
  #L23dbfc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23dc02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc08.  v1:= " type" @kind object;
  #L23dc0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23dc18.  v1:= temp @kind object;
  #L23dc1a.  v0:= v11.`io.opencensus.trace.e.b` @type ^`java.lang.Long` @kind object;
  #L23dc1e.  if v0 != 0 then goto L23dc44;
  #L23dc22.  v0:= new `java.lang.StringBuilder`;
  #L23dc26.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23dc2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc32.  v1:= " messageId" @kind object;
  #L23dc36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc3c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23dc42.  v1:= temp @kind object;
  #L23dc44.  v0:= v11.`io.opencensus.trace.e.c` @type ^`java.lang.Long` @kind object;
  #L23dc48.  if v0 != 0 then goto L23dc6e;
  #L23dc4c.  v0:= new `java.lang.StringBuilder`;
  #L23dc50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23dc56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc5c.  v1:= " uncompressedMessageSize" @kind object;
  #L23dc60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc66.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23dc6c.  v1:= temp @kind object;
  #L23dc6e.  v0:= v11.`io.opencensus.trace.e.d` @type ^`java.lang.Long` @kind object;
  #L23dc72.  if v0 != 0 then goto L23dc98;
  #L23dc76.  v0:= new `java.lang.StringBuilder`;
  #L23dc7a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23dc80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc86.  v1:= " compressedMessageSize" @kind object;
  #L23dc8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dc90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23dc96.  v1:= temp @kind object;
  #L23dc98.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L23dc9e.  v0:= temp;
  #L23dca0.  if v0 == 0 then goto L23dcdc;
  #L23dca4.  v0:= new `io.opencensus.trace.f`;
  #L23dca8.  v3:= v11.`io.opencensus.trace.e.a` @type ^`io.opencensus.trace.MessageEvent$Type` @kind object;
  #L23dcac.  v1:= v11.`io.opencensus.trace.e.b` @type ^`java.lang.Long` @kind object;
  #L23dcb0.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L23dcb6.  v4:= temp @kind wide;
  #L23dcb8.  v1:= v11.`io.opencensus.trace.e.c` @type ^`java.lang.Long` @kind object;
  #L23dcbc.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L23dcc2.  v6:= temp @kind wide;
  #L23dcc4.  v1:= v11.`io.opencensus.trace.e.d` @type ^`java.lang.Long` @kind object;
  #L23dcc8.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L23dcce.  v8:= temp @kind wide;
  #L23dcd0.  v10:= 0I;
  #L23dcd2.  v2:= v0 @kind object;
  #L23dcd4.  call `<init>`(v2, v3, v4, v6, v8, v10) @signature `Lio/opencensus/trace/f;.<init>:(Lio/opencensus/trace/MessageEvent$Type;JJJLio/opencensus/trace/d;)V` @kind direct;
  #L23dcda.  return v0 @kind object;
  #L23dcdc.  v0:= new `java.lang.IllegalStateException`;
  #L23dce0.  v2:= new `java.lang.StringBuilder`;
  #L23dce4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23dcea.  v3:= "Missing required properties:" @kind object;
  #L23dcee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dcf4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23dcfa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23dd00.  v1:= temp @kind object;
  #L23dd02.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23dd08.  throw v0;
}
procedure `io.opencensus.trace.m` `b`(`io.opencensus.trace.e` v0 @kind this, `long` v1 ) @signature `Lio/opencensus/trace/e;.b:(J)Lio/opencensus/trace/m;` @AccessFlag PUBLIC {
    temp;

  #L23dd1c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L23dd22.  v1:= temp @kind object;
  #L23dd24.  v0.`io.opencensus.trace.e.d` @type ^`java.lang.Long` := v1 @kind object;
  #L23dd28.  return v0 @kind object;
}
procedure `io.opencensus.trace.m` `c`(`io.opencensus.trace.e` v0 @kind this, `long` v1 ) @signature `Lio/opencensus/trace/e;.c:(J)Lio/opencensus/trace/m;` @AccessFlag  {
    temp;

  #L23dd3c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L23dd42.  v1:= temp @kind object;
  #L23dd44.  v0.`io.opencensus.trace.e.b` @type ^`java.lang.Long` := v1 @kind object;
  #L23dd48.  return v0 @kind object;
}
procedure `io.opencensus.trace.m` `d`(`io.opencensus.trace.e` v0 @kind this, `long` v1 ) @signature `Lio/opencensus/trace/e;.d:(J)Lio/opencensus/trace/m;` @AccessFlag PUBLIC {
    temp;

  #L23dd7c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L23dd82.  v1:= temp @kind object;
  #L23dd84.  v0.`io.opencensus.trace.e.c` @type ^`java.lang.Long` := v1 @kind object;
  #L23dd88.  return v0 @kind object;
}
procedure `io.opencensus.trace.m` `e`(`io.opencensus.trace.e` v1 @kind this, `io.opencensus.trace.MessageEvent$Type` v2 @kind object) @signature `Lio/opencensus/trace/e;.e:(Lio/opencensus/trace/MessageEvent$Type;)Lio/opencensus/trace/m;` @AccessFlag  {
    temp;
    v0;

  #L23dd5c.  v0:= "Null type" @kind object;
  #L23dd60.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23dd66.  v1.`io.opencensus.trace.e.a` @type ^`io.opencensus.trace.MessageEvent$Type` := v2 @kind object;
  #L23dd6a.  return v1 @kind object;
}
