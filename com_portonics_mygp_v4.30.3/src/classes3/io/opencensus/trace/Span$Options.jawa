record `io.opencensus.trace.Span$Options` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.opencensus.trace.Span$Options`[] `@@io.opencensus.trace.Span$Options.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.opencensus.trace.Span$Options` `@@io.opencensus.trace.Span$Options.RECORD_EVENTS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/Span$Options;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L23e710.  v0:= new `io.opencensus.trace.Span$Options`;
  #L23e714.  v1:= "RECORD_EVENTS" @kind object;
  #L23e718.  v2:= 0I;
  #L23e71a.  call `<init>`(v0, v1, v2) @signature `Lio/opencensus/trace/Span$Options;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23e720.  `@@io.opencensus.trace.Span$Options.RECORD_EVENTS` @type ^`io.opencensus.trace.Span$Options` := v0 @kind object;
  #L23e724.  v1:= 1I;
  #L23e726.  v1:= new `io.opencensus.trace.Span$Options`[v1];
  #L23e72a.  v1[v2]:= v0 @kind object;
  #L23e72e.  `@@io.opencensus.trace.Span$Options.$VALUES` @type ^`io.opencensus.trace.Span$Options`[] := v1 @kind object;
  #L23e732.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.Span$Options` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/opencensus/trace/Span$Options;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23e744.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23e74a.  return @kind void;
}
procedure `io.opencensus.trace.Span$Options` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/opencensus/trace/Span$Options;.valueOf:(Ljava/lang/String;)Lio/opencensus/trace/Span$Options;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23e6c8.  v0:= constclass @type ^`io.opencensus.trace.Span$Options` @kind object;
  #L23e6cc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23e6d2.  v1:= temp @kind object;
  #L23e6d4.  v1:= (`io.opencensus.trace.Span$Options`) v1 @kind object;
  #L23e6d8.  return v1 @kind object;
}
procedure `io.opencensus.trace.Span$Options`[] `values`() @signature `Lio/opencensus/trace/Span$Options;.values:()[Lio/opencensus/trace/Span$Options;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23e6ec.  v0:= `@@io.opencensus.trace.Span$Options.$VALUES` @type ^`io.opencensus.trace.Span$Options`[] @kind object;
  #L23e6f0.  call temp:= `clone`(v0) @signature `[Lio/opencensus/trace/Span$Options;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23e6f6.  v0:= temp @kind object;
  #L23e6f8.  v0:= (`io.opencensus.trace.Span$Options`[]) v0 @kind object;
  #L23e6fc.  return v0 @kind object;
}
