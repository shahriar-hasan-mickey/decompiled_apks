record `io.opencensus.trace.propagation.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `io.opencensus.trace.propagation.f` `@@io.opencensus.trace.propagation.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/propagation/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23ff58.  v0:= new `io.opencensus.trace.propagation.e`;
  #L23ff5c.  v1:= 0I;
  #L23ff5e.  call `<init>`(v0, v1) @signature `Lio/opencensus/trace/propagation/e;.<init>:(Lio/opencensus/trace/propagation/d;)V` @kind direct;
  #L23ff64.  `@@io.opencensus.trace.propagation.f.a` @type ^`io.opencensus.trace.propagation.f` := v0 @kind object;
  #L23ff68.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.propagation.f` v0 @kind this) @signature `Lio/opencensus/trace/propagation/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23ff7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23ff82.  return @kind void;
}
procedure `io.opencensus.trace.propagation.f` `b`() @signature `Lio/opencensus/trace/propagation/f;.b:()Lio/opencensus/trace/propagation/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23ff40.  v0:= `@@io.opencensus.trace.propagation.f.a` @type ^`io.opencensus.trace.propagation.f` @kind object;
  #L23ff44.  return v0 @kind object;
}
procedure `io.opencensus.trace.propagation.c` `a`() @signature `Lio/opencensus/trace/propagation/f;.a:()Lio/opencensus/trace/propagation/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
