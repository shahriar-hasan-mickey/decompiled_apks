record `io.opencensus.trace.propagation.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `io.opencensus.trace.propagation.b` `@@io.opencensus.trace.propagation.c.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/propagation/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23feb8.  v0:= new `io.opencensus.trace.propagation.b`;
  #L23febc.  v1:= 0I;
  #L23febe.  call `<init>`(v0, v1) @signature `Lio/opencensus/trace/propagation/b;.<init>:(Lio/opencensus/trace/propagation/a;)V` @kind direct;
  #L23fec4.  `@@io.opencensus.trace.propagation.c.a` @type ^`io.opencensus.trace.propagation.b` := v0 @kind object;
  #L23fec8.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.propagation.c` v0 @kind this) @signature `Lio/opencensus/trace/propagation/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23fedc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23fee2.  return @kind void;
}
procedure `io.opencensus.trace.propagation.c` `b`() @signature `Lio/opencensus/trace/propagation/c;.b:()Lio/opencensus/trace/propagation/c;` @AccessFlag STATIC {
    temp;
    v0;

  #L23fea0.  v0:= `@@io.opencensus.trace.propagation.c.a` @type ^`io.opencensus.trace.propagation.b` @kind object;
  #L23fea4.  return v0 @kind object;
}
procedure `io.opencensus.trace.p` `a`(`byte`[] v0 @kind object) @signature `Lio/opencensus/trace/propagation/c;.a:([B)Lio/opencensus/trace/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `c`(`io.opencensus.trace.p` v0 @kind object) @signature `Lio/opencensus/trace/propagation/c;.c:(Lio/opencensus/trace/p;)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
