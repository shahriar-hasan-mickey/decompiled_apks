record `io.opencensus.trace.propagation.SpanContextParseException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
}
global `long` `@@io.opencensus.trace.propagation.SpanContextParseException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.opencensus.trace.propagation.SpanContextParseException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lio/opencensus/trace/propagation/SpanContextParseException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23ff94.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23ff9a.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.trace.propagation.SpanContextParseException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lio/opencensus/trace/propagation/SpanContextParseException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23ffac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L23ffb2.  return @kind void;
}
