record `io.opencensus.trace.c0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.logging.Logger` `@@io.opencensus.trace.c0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `io.opencensus.trace.t` `@@io.opencensus.trace.c0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/trace/c0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23f890.  v0:= constclass @type ^`io.opencensus.trace.c0` @kind object;
  #L23f894.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L23f89a.  v0:= temp @kind object;
  #L23f89c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L23f8a2.  v0:= temp @kind object;
  #L23f8a4.  `@@io.opencensus.trace.c0.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L23f8a8.  v0:= constclass @type ^`io.opencensus.trace.t` @kind object;
  #L23f8ac.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L23f8b2.  v0:= temp @kind object;
  #L23f8b4.  call temp:= `c`(v0) @signature `Lio/opencensus/trace/c0;.c:(Ljava/lang/ClassLoader;)Lio/opencensus/trace/t;` @kind static;
  #L23f8ba.  v0:= temp @kind object;
  #L23f8bc.  `@@io.opencensus.trace.c0.b` @type ^`io.opencensus.trace.t` := v0 @kind object;
  #L23f8c0.  return @kind void;
}
procedure `io.opencensus.trace.propagation.f` `a`() @signature `Lio/opencensus/trace/c0;.a:()Lio/opencensus/trace/propagation/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23f870.  v0:= `@@io.opencensus.trace.c0.b` @type ^`io.opencensus.trace.t` @kind object;
  #L23f874.  call temp:= `a`(v0) @signature `Lio/opencensus/trace/t;.a:()Lio/opencensus/trace/propagation/f;` @kind virtual;
  #L23f87a.  v0:= temp @kind object;
  #L23f87c.  return v0 @kind object;
}
procedure `io.opencensus.trace.y` `b`() @signature `Lio/opencensus/trace/c0;.b:()Lio/opencensus/trace/y;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23f850.  v0:= `@@io.opencensus.trace.c0.b` @type ^`io.opencensus.trace.t` @kind object;
  #L23f854.  call temp:= `b`(v0) @signature `Lio/opencensus/trace/t;.b:()Lio/opencensus/trace/y;` @kind virtual;
  #L23f85a.  v0:= temp @kind object;
  #L23f85c.  return v0 @kind object;
}
procedure `io.opencensus.trace.t` `c`(`java.lang.ClassLoader` v6 @kind object) @signature `Lio/opencensus/trace/c0;.c:(Ljava/lang/ClassLoader;)Lio/opencensus/trace/t;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23f7b8.  v0:= constclass @type ^`io.opencensus.trace.t` @kind object;
  #L23f7bc.  v1:= 1I;
  #L23f7be.  v2:= "io.opencensus.impl.trace.TraceComponentImpl" @kind object;
  #L23f7c2.  call temp:= `forName`(v2, v1, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L23f7c8.  v2:= temp @kind object;
  #L23f7ca.  call temp:= `a`(v2, v0) @signature `Lk/a/b/a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L23f7d0.  v2:= temp @kind object;
  #L23f7d2.  v2:= (`io.opencensus.trace.t`) v2 @kind object;
  #L23f7d6.  return v2 @kind object;
  #L23f7d8.  v2:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L23f7da.  v3:= `@@io.opencensus.trace.c0.a` @type ^`java.util.logging.Logger` @kind object;
  #L23f7de.  v4:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L23f7e2.  v5:= "Couldn't load full implementation for TraceComponent, now trying to load lite implementation." @kind object;
  #L23f7e6.  call `log`(v3, v4, v5, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L23f7ec.  v2:= "io.opencensus.impllite.trace.TraceComponentImplLite" @kind object;
  #L23f7f0.  call temp:= `forName`(v2, v1, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L23f7f6.  v6:= temp @kind object;
  #L23f7f8.  call temp:= `a`(v6, v0) @signature `Lk/a/b/a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L23f7fe.  v6:= temp @kind object;
  #L23f800.  v6:= (`io.opencensus.trace.t`) v6 @kind object;
  #L23f804.  return v6 @kind object;
  #L23f806.  v6:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L23f808.  v0:= `@@io.opencensus.trace.c0.a` @type ^`java.util.logging.Logger` @kind object;
  #L23f80c.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L23f810.  v2:= "Couldn't load lite implementation for TraceComponent, now using default implementation for TraceComponent." @kind object;
  #L23f814.  call `log`(v0, v1, v2, v6) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L23f81a.  call temp:= `c`() @signature `Lio/opencensus/trace/t;.c:()Lio/opencensus/trace/t;` @kind static;
  #L23f820.  v6:= temp @kind object;
  #L23f822.  return v6 @kind object;
  catch `java.lang.ClassNotFoundException` @[L23f7be..L23f7d6] goto L23f7d8;
  catch `java.lang.ClassNotFoundException` @[L23f7ec..L23f804] goto L23f806;
}
