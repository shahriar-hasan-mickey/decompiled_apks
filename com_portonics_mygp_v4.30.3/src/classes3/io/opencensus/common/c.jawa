record `io.opencensus.common.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Comparable` @kind interface {
}
procedure `void` `<init>`(`io.opencensus.common.c` v0 @kind this) @signature `Lio/opencensus/common/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23bd6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23bd72.  return @kind void;
}
procedure `io.opencensus.common.c` `b`(`long` v3 , `int` v5 ) @signature `Lio/opencensus/common/c;.b:(JI)Lio/opencensus/common/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23bc64.  v0:= -315576000000L;
  #L23bc6e.  v2:= lcmp(v3, v0);
  #L23bc72.  if v2 < 0 then goto L23bd2c;
  #L23bc76.  v0:= 315576000000L;
  #L23bc80.  v2:= lcmp(v3, v0);
  #L23bc84.  if v2 > 0 then goto L23bcfe;
  #L23bc88.  if v5 < 0 then goto L23bcd0;
  #L23bc8c.  v0:= 999999999I;
  #L23bc92.  if v5 > v0 then goto L23bca2;
  #L23bc96.  v0:= new `io.opencensus.common.a`;
  #L23bc9a.  call `<init>`(v0, v3, v5) @signature `Lio/opencensus/common/a;.<init>:(JI)V` @kind direct;
  #L23bca0.  return v0 @kind object;
  #L23bca2.  v3:= new `java.lang.IllegalArgumentException`;
  #L23bca6.  v4:= new `java.lang.StringBuilder`;
  #L23bcaa.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bcb0.  v0:= "'nanos' is greater than maximum (999999999): " @kind object;
  #L23bcb4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bcba.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bcc0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bcc6.  v4:= temp @kind object;
  #L23bcc8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bcce.  throw v3;
  #L23bcd0.  v3:= new `java.lang.IllegalArgumentException`;
  #L23bcd4.  v4:= new `java.lang.StringBuilder`;
  #L23bcd8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bcde.  v0:= "'nanos' is less than zero: " @kind object;
  #L23bce2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bce8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bcee.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bcf4.  v4:= temp @kind object;
  #L23bcf6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bcfc.  throw v3;
  #L23bcfe.  v5:= new `java.lang.IllegalArgumentException`;
  #L23bd02.  v0:= new `java.lang.StringBuilder`;
  #L23bd06.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bd0c.  v1:= "'seconds' is greater than maximum (315576000000): " @kind object;
  #L23bd10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bd16.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bd1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bd22.  v3:= temp @kind object;
  #L23bd24.  call `<init>`(v5, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bd2a.  throw v5;
  #L23bd2c.  v5:= new `java.lang.IllegalArgumentException`;
  #L23bd30.  v0:= new `java.lang.StringBuilder`;
  #L23bd34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bd3a.  v1:= "'seconds' is less than minimum (-315576000000): " @kind object;
  #L23bd3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bd44.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bd4a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bd50.  v3:= temp @kind object;
  #L23bd52.  call `<init>`(v5, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bd58.  throw v5;
}
procedure `int` `a`(`io.opencensus.common.c` v4 @kind this, `io.opencensus.common.c` v5 @kind object) @signature `Lio/opencensus/common/c;.a:(Lio/opencensus/common/c;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23bbf8.  call temp:= `d`(v4) @signature `Lio/opencensus/common/c;.d:()J` @kind virtual;
  #L23bbfe.  v0:= temp @kind wide;
  #L23bc00.  call temp:= `d`(v5) @signature `Lio/opencensus/common/c;.d:()J` @kind virtual;
  #L23bc06.  v2:= temp @kind wide;
  #L23bc08.  call temp:= `a`(v0, v2) @signature `Lio/opencensus/common/b;.a:(JJ)I` @kind static;
  #L23bc0e.  v0:= temp;
  #L23bc10.  if v0 == 0 then goto L23bc16;
  #L23bc14.  return v0;
  #L23bc16.  call temp:= `c`(v4) @signature `Lio/opencensus/common/c;.c:()I` @kind virtual;
  #L23bc1c.  v0:= temp;
  #L23bc1e.  v0:= (`long`) v0 @kind i2l;
  #L23bc20.  call temp:= `c`(v5) @signature `Lio/opencensus/common/c;.c:()I` @kind virtual;
  #L23bc26.  v5:= temp;
  #L23bc28.  v2:= (`long`) v5 @kind i2l;
  #L23bc2a.  call temp:= `a`(v0, v2) @signature `Lio/opencensus/common/b;.a:(JJ)I` @kind static;
  #L23bc30.  v5:= temp;
  #L23bc32.  return v5;
}
procedure `int` `c`() @signature `Lio/opencensus/common/c;.c:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `compareTo`(`io.opencensus.common.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/opencensus/common/c;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L23bc44.  v1:= (`io.opencensus.common.c`) v1 @kind object;
  #L23bc48.  call temp:= `a`(v0, v1) @signature `Lio/opencensus/common/c;.a:(Lio/opencensus/common/c;)I` @kind virtual;
  #L23bc4e.  v1:= temp;
  #L23bc50.  return v1;
}
procedure `long` `d`() @signature `Lio/opencensus/common/c;.d:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
