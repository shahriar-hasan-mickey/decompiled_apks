record `io.opencensus.tags.p` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.opencensus.tags.p` v0 @kind this) @signature `Lio/opencensus/tags/p;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23d6f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23d6fa.  return @kind void;
}
procedure `io.opencensus.tags.p` `b`(`java.lang.String` v3 @kind object) @signature `Lio/opencensus/tags/p;.b:(Ljava/lang/String;)Lio/opencensus/tags/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23d6b8.  call temp:= `c`(v3) @signature `Lio/opencensus/tags/p;.c:(Ljava/lang/String;)Z` @kind static;
  #L23d6be.  v0:= temp;
  #L23d6c0.  v1:= 1I;
  #L23d6c2.  v1:= new `java.lang.Object`[v1];
  #L23d6c6.  v2:= 0I;
  #L23d6c8.  v1[v2]:= v3 @kind object;
  #L23d6cc.  v2:= "Invalid TagValue: %s" @kind object;
  #L23d6d0.  call `b`(v0, v2, v1) @signature `Lk/a/b/c;.b:(ZLjava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L23d6d6.  v0:= new `io.opencensus.tags.c`;
  #L23d6da.  call `<init>`(v0, v3) @signature `Lio/opencensus/tags/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d6e0.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.String` v2 @kind object) @signature `Lio/opencensus/tags/p;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L23d684.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23d68a.  v0:= temp;
  #L23d68c.  v1:= 255I;
  #L23d690.  if v0 > v1 then goto L23d6a4;
  #L23d694.  call temp:= `b`(v2) @signature `Lk/a/b/b;.b:(Ljava/lang/String;)Z` @kind static;
  #L23d69a.  v2:= temp;
  #L23d69c.  if v2 == 0 then goto L23d6a4;
  #L23d6a0.  v2:= 1I;
  #L23d6a2.  goto L23d6a6;
  #L23d6a4.  v2:= 0I;
  #L23d6a6.  return v2;
}
procedure `java.lang.String` `a`() @signature `Lio/opencensus/tags/p;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
