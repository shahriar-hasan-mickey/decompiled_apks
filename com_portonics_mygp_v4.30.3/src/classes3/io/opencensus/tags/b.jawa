record `io.opencensus.tags.b` @kind class @AccessFlag FINAL extends `io.opencensus.tags.TagMetadata` @kind class {
  `io.opencensus.tags.TagMetadata$TagTtl` `io.opencensus.tags.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.opencensus.tags.b` v1 @kind this, `io.opencensus.tags.TagMetadata$TagTtl` v2 @kind object) @signature `Lio/opencensus/tags/b;.<init>:(Lio/opencensus/tags/TagMetadata$TagTtl;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L23cec0.  call `<init>`(v1) @signature `Lio/opencensus/tags/TagMetadata;.<init>:()V` @kind direct;
  #L23cec6.  v0:= "Null tagTtl" @kind object;
  #L23ceca.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23ced0.  v1.`io.opencensus.tags.b.a` @type ^`io.opencensus.tags.TagMetadata$TagTtl` := v2 @kind object;
  #L23ced4.  return @kind void;
}
procedure `io.opencensus.tags.TagMetadata$TagTtl` `b`(`io.opencensus.tags.b` v1 @kind this) @signature `Lio/opencensus/tags/b;.b:()Lio/opencensus/tags/TagMetadata$TagTtl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23ce64.  v0:= v1.`io.opencensus.tags.b.a` @type ^`io.opencensus.tags.TagMetadata$TagTtl` @kind object;
  #L23ce68.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.tags.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/opencensus/tags/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23cdfc.  if v2 != v1 then goto L23ce04;
  #L23ce00.  v2:= 1I;
  #L23ce02.  return v2;
  #L23ce04.  v0:= instanceof @variable v2 @type ^`io.opencensus.tags.TagMetadata` @kind boolean;
  #L23ce08.  if v0 == 0 then goto L23ce26;
  #L23ce0c.  v2:= (`io.opencensus.tags.TagMetadata`) v2 @kind object;
  #L23ce10.  v0:= v1.`io.opencensus.tags.b.a` @type ^`io.opencensus.tags.TagMetadata$TagTtl` @kind object;
  #L23ce14.  call temp:= `b`(v2) @signature `Lio/opencensus/tags/TagMetadata;.b:()Lio/opencensus/tags/TagMetadata$TagTtl;` @kind virtual;
  #L23ce1a.  v2:= temp @kind object;
  #L23ce1c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23ce22.  v2:= temp;
  #L23ce24.  return v2;
  #L23ce26.  v2:= 0I;
  #L23ce28.  return v2;
}
procedure `int` `hashCode`(`io.opencensus.tags.b` v2 @kind this) @signature `Lio/opencensus/tags/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ce3c.  v0:= v2.`io.opencensus.tags.b.a` @type ^`io.opencensus.tags.TagMetadata$TagTtl` @kind object;
  #L23ce40.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L23ce46.  v0:= temp;
  #L23ce48.  v1:= 1000003I;
  #L23ce4e.  v0:= v0 ^~ v1 @kind int;
  #L23ce50.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.tags.b` v2 @kind this) @signature `Lio/opencensus/tags/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ce7c.  v0:= new `java.lang.StringBuilder`;
  #L23ce80.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23ce86.  v1:= "TagMetadata{tagTtl=" @kind object;
  #L23ce8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ce90.  v1:= v2.`io.opencensus.tags.b.a` @type ^`io.opencensus.tags.TagMetadata$TagTtl` @kind object;
  #L23ce94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ce9a.  v1:= "}" @kind object;
  #L23ce9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23cea4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ceaa.  v0:= temp @kind object;
  #L23ceac.  return v0 @kind object;
}
