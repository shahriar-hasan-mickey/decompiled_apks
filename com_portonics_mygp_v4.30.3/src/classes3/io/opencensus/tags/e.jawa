record `io.opencensus.tags.e` @kind class @AccessFlag FINAL extends `io.opencensus.tags.m` @kind class {
}
global `io.opencensus.tags.m` `@@io.opencensus.tags.e.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/opencensus/tags/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23d104.  v0:= new `io.opencensus.tags.e`;
  #L23d108.  call `<init>`(v0) @signature `Lio/opencensus/tags/e;.<init>:()V` @kind direct;
  #L23d10e.  `@@io.opencensus.tags.e.a` @type ^`io.opencensus.tags.m` := v0 @kind object;
  #L23d112.  return @kind void;
}
procedure `void` `<init>`(`io.opencensus.tags.e` v0 @kind this) @signature `Lio/opencensus/tags/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23d124.  call `<init>`(v0) @signature `Lio/opencensus/tags/m;.<init>:()V` @kind direct;
  #L23d12a.  return @kind void;
}
procedure `java.util.Iterator` `a`(`io.opencensus.tags.e` v1 @kind this) @signature `Lio/opencensus/tags/e;.a:()Ljava/util/Iterator;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L23d0e0.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L23d0e6.  v0:= temp @kind object;
  #L23d0e8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23d0ee.  v0:= temp @kind object;
  #L23d0f0.  return v0 @kind object;
}
