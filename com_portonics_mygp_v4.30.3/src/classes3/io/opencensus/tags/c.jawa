record `io.opencensus.tags.c` @kind class @AccessFlag FINAL extends `io.opencensus.tags.p` @kind class {
  `java.lang.String` `io.opencensus.tags.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.opencensus.tags.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/opencensus/tags/c;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L23cfac.  call `<init>`(v1) @signature `Lio/opencensus/tags/p;.<init>:()V` @kind direct;
  #L23cfb2.  v0:= "Null asString" @kind object;
  #L23cfb6.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L23cfbc.  v1.`io.opencensus.tags.c.a` @type ^`java.lang.String` := v2 @kind object;
  #L23cfc0.  return @kind void;
}
procedure `java.lang.String` `a`(`io.opencensus.tags.c` v1 @kind this) @signature `Lio/opencensus/tags/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23cf50.  v0:= v1.`io.opencensus.tags.c.a` @type ^`java.lang.String` @kind object;
  #L23cf54.  return v0 @kind object;
}
procedure `boolean` `equals`(`io.opencensus.tags.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/opencensus/tags/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23cee8.  if v2 != v1 then goto L23cef0;
  #L23ceec.  v2:= 1I;
  #L23ceee.  return v2;
  #L23cef0.  v0:= instanceof @variable v2 @type ^`io.opencensus.tags.p` @kind boolean;
  #L23cef4.  if v0 == 0 then goto L23cf12;
  #L23cef8.  v2:= (`io.opencensus.tags.p`) v2 @kind object;
  #L23cefc.  v0:= v1.`io.opencensus.tags.c.a` @type ^`java.lang.String` @kind object;
  #L23cf00.  call temp:= `a`(v2) @signature `Lio/opencensus/tags/p;.a:()Ljava/lang/String;` @kind virtual;
  #L23cf06.  v2:= temp @kind object;
  #L23cf08.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23cf0e.  v2:= temp;
  #L23cf10.  return v2;
  #L23cf12.  v2:= 0I;
  #L23cf14.  return v2;
}
procedure `int` `hashCode`(`io.opencensus.tags.c` v2 @kind this) @signature `Lio/opencensus/tags/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23cf28.  v0:= v2.`io.opencensus.tags.c.a` @type ^`java.lang.String` @kind object;
  #L23cf2c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L23cf32.  v0:= temp;
  #L23cf34.  v1:= 1000003I;
  #L23cf3a.  v0:= v0 ^~ v1 @kind int;
  #L23cf3c.  return v0;
}
procedure `java.lang.String` `toString`(`io.opencensus.tags.c` v2 @kind this) @signature `Lio/opencensus/tags/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23cf68.  v0:= new `java.lang.StringBuilder`;
  #L23cf6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23cf72.  v1:= "TagValue{asString=" @kind object;
  #L23cf76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23cf7c.  v1:= v2.`io.opencensus.tags.c.a` @type ^`java.lang.String` @kind object;
  #L23cf80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23cf86.  v1:= "}" @kind object;
  #L23cf8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23cf90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23cf96.  v0:= temp @kind object;
  #L23cf98.  return v0 @kind object;
}
