record `io.opencensus.tags.m` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`io.opencensus.tags.m` v0 @kind this) @signature `Lio/opencensus/tags/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23d4f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23d4f6.  return @kind void;
}
procedure `java.util.Iterator` `a`() @signature `Lio/opencensus/tags/m;.a:()Ljava/util/Iterator;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`io.opencensus.tags.m` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/opencensus/tags/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23d390.  v0:= instanceof @variable v7 @type ^`io.opencensus.tags.m` @kind boolean;
  #L23d394.  v1:= 0I;
  #L23d396.  if v0 != 0 then goto L23d39c;
  #L23d39a.  return v1;
  #L23d39c.  v7:= (`io.opencensus.tags.m`) v7 @kind object;
  #L23d3a0.  call temp:= `a`(v6) @signature `Lio/opencensus/tags/m;.a:()Ljava/util/Iterator;` @kind virtual;
  #L23d3a6.  v0:= temp @kind object;
  #L23d3a8.  call temp:= `a`(v7) @signature `Lio/opencensus/tags/m;.a:()Ljava/util/Iterator;` @kind virtual;
  #L23d3ae.  v7:= temp @kind object;
  #L23d3b0.  v2:= new `java.util.HashMap`;
  #L23d3b4.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L23d3ba.  v3:= 1I;
  #L23d3bc.  if v0 == 0 then goto L23d41a;
  #L23d3c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23d3c6.  v4:= temp;
  #L23d3c8.  if v4 == 0 then goto L23d41a;
  #L23d3cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23d3d2.  v4:= temp @kind object;
  #L23d3d4.  v4:= (`io.opencensus.tags.l`) v4 @kind object;
  #L23d3d8.  call temp:= `containsKey`(v2, v4) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L23d3de.  v5:= temp;
  #L23d3e0.  if v5 == 0 then goto L23d40a;
  #L23d3e4.  call temp:= `get`(v2, v4) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d3ea.  v5:= temp @kind object;
  #L23d3ec.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L23d3f0.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L23d3f6.  v5:= temp;
  #L23d3f8.  v5:= v5 + v3 @kind int;
  #L23d3fa.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23d400.  v3:= temp @kind object;
  #L23d402.  call temp:= `put`(v2, v4, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d408.  goto L23d3ba;
  #L23d40a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23d410.  v3:= temp @kind object;
  #L23d412.  call temp:= `put`(v2, v4, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d418.  goto L23d3ba;
  #L23d41a.  if v7 == 0 then goto L23d478;
  #L23d41e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23d424.  v0:= temp;
  #L23d426.  if v0 == 0 then goto L23d478;
  #L23d42a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23d430.  v0:= temp @kind object;
  #L23d432.  v0:= (`io.opencensus.tags.l`) v0 @kind object;
  #L23d436.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L23d43c.  v4:= temp;
  #L23d43e.  if v4 != 0 then goto L23d444;
  #L23d442.  return v1;
  #L23d444.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d44a.  v4:= temp @kind object;
  #L23d44c.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L23d450.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L23d456.  v4:= temp;
  #L23d458.  if v4 <= v3 then goto L23d470;
  #L23d45c.  v4:= v4 + -1;
  #L23d460.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23d466.  v4:= temp @kind object;
  #L23d468.  call temp:= `put`(v2, v0, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d46e.  goto L23d41a;
  #L23d470.  call temp:= `remove`(v2, v0) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23d476.  goto L23d41a;
  #L23d478.  call temp:= `isEmpty`(v2) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L23d47e.  v7:= temp;
  #L23d480.  return v7;
}
procedure `int` `hashCode`(`io.opencensus.tags.m` v3 @kind this) @signature `Lio/opencensus/tags/m;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23d494.  call temp:= `a`(v3) @signature `Lio/opencensus/tags/m;.a:()Ljava/util/Iterator;` @kind virtual;
  #L23d49a.  v0:= temp @kind object;
  #L23d49c.  v1:= 0I;
  #L23d49e.  if v0 != 0 then goto L23d4a4;
  #L23d4a2.  return v1;
  #L23d4a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23d4aa.  v2:= temp;
  #L23d4ac.  if v2 == 0 then goto L23d4c6;
  #L23d4b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23d4b6.  v2:= temp @kind object;
  #L23d4b8.  v2:= (`io.opencensus.tags.l`) v2 @kind object;
  #L23d4bc.  if v2 != 0 then goto L23d4c2;
  #L23d4c0.  goto L23d4a4;
  #L23d4c2.  v0:= 0I;
  #L23d4c4.  throw v0;
  #L23d4c6.  return v1;
}
procedure `java.lang.String` `toString`(`io.opencensus.tags.m` v1 @kind this) @signature `Lio/opencensus/tags/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d4d8.  v0:= "TagContext" @kind object;
  #L23d4dc.  return v0 @kind object;
}
