record `retrofit2.RequestFactory` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.RequestFactory.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `retrofit2.RequestFactory.contentType` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.RequestFactory.hasBody` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `retrofit2.RequestFactory.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestFactory.httpMethod` @AccessFlag FINAL;
  `boolean` `retrofit2.RequestFactory.isFormEncoded` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.RequestFactory.isKotlinSuspendFunction` @AccessFlag FINAL;
  `boolean` `retrofit2.RequestFactory.isMultipart` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `retrofit2.RequestFactory.method` @AccessFlag PRIVATE_FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.RequestFactory.parameterHandlers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestFactory.relativeUrl` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.RequestFactory` v1 @kind this, `retrofit2.RequestFactory$Builder` v2 @kind object) @signature `Lretrofit2/RequestFactory;.<init>:(Lretrofit2/RequestFactory$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L36ca50.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36ca56.  v0:= v2.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36ca5a.  v1.`retrofit2.RequestFactory.method` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L36ca5e.  v0:= v2.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36ca62.  v0:= v0.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L36ca66.  v1.`retrofit2.RequestFactory.baseUrl` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L36ca6a.  v0:= v2.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36ca6e.  v1.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` := v0 @kind object;
  #L36ca72.  v0:= v2.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36ca76.  v1.`retrofit2.RequestFactory.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L36ca7a.  v0:= v2.`retrofit2.RequestFactory$Builder.headers` @type ^`okhttp3.Headers` @kind object;
  #L36ca7e.  v1.`retrofit2.RequestFactory.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L36ca82.  v0:= v2.`retrofit2.RequestFactory$Builder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L36ca86.  v1.`retrofit2.RequestFactory.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L36ca8a.  v0:= v2.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L36ca8e.  v1.`retrofit2.RequestFactory.hasBody` @type ^`boolean` := v0 @kind boolean;
  #L36ca92.  v0:= v2.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36ca96.  v1.`retrofit2.RequestFactory.isFormEncoded` @type ^`boolean` := v0 @kind boolean;
  #L36ca9a.  v0:= v2.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36ca9e.  v1.`retrofit2.RequestFactory.isMultipart` @type ^`boolean` := v0 @kind boolean;
  #L36caa2.  v0:= v2.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L36caa6.  v1.`retrofit2.RequestFactory.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v0 @kind object;
  #L36caaa.  v2:= v2.`retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L36caae.  v1.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` := v2 @kind boolean;
  #L36cab2.  return @kind void;
}
procedure `retrofit2.RequestFactory` `parseAnnotations`(`retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lretrofit2/RequestFactory;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/RequestFactory;` @AccessFlag STATIC {
    temp;
    v0;

  #L36ca2c.  v0:= new `retrofit2.RequestFactory$Builder`;
  #L36ca30.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/RequestFactory$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L36ca36.  call temp:= `build`(v0) @signature `Lretrofit2/RequestFactory$Builder;.build:()Lretrofit2/RequestFactory;` @kind virtual;
  #L36ca3c.  v1:= temp @kind object;
  #L36ca3e.  return v1 @kind object;
}
procedure `okhttp3.Request` `create`(`retrofit2.RequestFactory` v12 @kind this, `java.lang.Object`[] v13 @kind object) @signature `Lretrofit2/RequestFactory;.create:([Ljava/lang/Object;)Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L36c930.  v0:= v12.`retrofit2.RequestFactory.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L36c934.  v1:= length @variable v13;
  #L36c936.  v2:= length @variable v0;
  #L36c938.  if v1 != v2 then goto L36c9ce;
  #L36c93c.  v2:= new `retrofit2.RequestBuilder`;
  #L36c940.  v4:= v12.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` @kind object;
  #L36c944.  v5:= v12.`retrofit2.RequestFactory.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L36c948.  v6:= v12.`retrofit2.RequestFactory.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36c94c.  v7:= v12.`retrofit2.RequestFactory.headers` @type ^`okhttp3.Headers` @kind object;
  #L36c950.  v8:= v12.`retrofit2.RequestFactory.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L36c954.  v9:= v12.`retrofit2.RequestFactory.hasBody` @type ^`boolean` @kind boolean;
  #L36c958.  v10:= v12.`retrofit2.RequestFactory.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36c95c.  v11:= v12.`retrofit2.RequestFactory.isMultipart` @type ^`boolean` @kind boolean;
  #L36c960.  v3:= v2 @kind object;
  #L36c962.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @kind direct;
  #L36c968.  v3:= v12.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L36c96c.  if v3 == 0 then goto L36c974;
  #L36c970.  v1:= v1 + -1;
  #L36c974.  v3:= new `java.util.ArrayList`;
  #L36c978.  call `<init>`(v3, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L36c97e.  v4:= 0I;
  #L36c980.  if v4 >= v1 then goto L36c9a2;
  #L36c984.  v5:= v13[v4] @kind object;
  #L36c988.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36c98e.  v5:= v0[v4] @kind object;
  #L36c992.  v6:= v13[v4] @kind object;
  #L36c996.  call `apply`(v5, v2, v6) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L36c99c.  v4:= v4 + 1;
  #L36c9a0.  goto L36c980;
  #L36c9a2.  call temp:= `get`(v2) @signature `Lretrofit2/RequestBuilder;.get:()Lokhttp3/Request$Builder;` @kind virtual;
  #L36c9a8.  v13:= temp @kind object;
  #L36c9aa.  v0:= constclass @type ^`retrofit2.Invocation` @kind object;
  #L36c9ae.  v1:= new `retrofit2.Invocation`;
  #L36c9b2.  v2:= v12.`retrofit2.RequestFactory.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c9b6.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/Invocation;.<init>:(Ljava/lang/reflect/Method;Ljava/util/List;)V` @kind direct;
  #L36c9bc.  call temp:= `tag`(v13, v0, v1) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @kind virtual;
  #L36c9c2.  v13:= temp @kind object;
  #L36c9c4.  call temp:= `build`(v13) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L36c9ca.  v13:= temp @kind object;
  #L36c9cc.  return v13 @kind object;
  #L36c9ce.  v13:= new `java.lang.IllegalArgumentException`;
  #L36c9d2.  v2:= new `java.lang.StringBuilder`;
  #L36c9d6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36c9dc.  v3:= "Argument count (" @kind object;
  #L36c9e0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c9e6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c9ec.  v1:= ") doesn't match expected count (" @kind object;
  #L36c9f0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c9f6.  v0:= length @variable v0;
  #L36c9f8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c9fe.  v0:= ")" @kind object;
  #L36ca02.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36ca08.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36ca0e.  v0:= temp @kind object;
  #L36ca10.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36ca16.  goto L36ca1a;
  #L36ca18.  throw v13;
  #L36ca1a.  goto L36ca18;
}
