record `retrofit2.HttpException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `int` `retrofit2.HttpException.code` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.HttpException.message` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Response` `retrofit2.HttpException.response` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`retrofit2.HttpException` v1 @kind this, `retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.<init>:(Lretrofit2/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36892c.  call temp:= `getMessage`(v2) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @kind static;
  #L368932.  v0:= temp @kind object;
  #L368934.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36893a.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L368940.  v0:= temp;
  #L368942.  v1.`retrofit2.HttpException.code` @type ^`int` := v0;
  #L368946.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L36894c.  v0:= temp @kind object;
  #L36894e.  v1.`retrofit2.HttpException.message` @type ^`java.lang.String` := v0 @kind object;
  #L368952.  v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` := v2 @kind object;
  #L368956.  return @kind void;
}
procedure `java.lang.String` `getMessage`(`retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L36889c.  v0:= "response == null" @kind object;
  #L3688a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3688a6.  v0:= new `java.lang.StringBuilder`;
  #L3688aa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3688b0.  v1:= "HTTP " @kind object;
  #L3688b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3688ba.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L3688c0.  v1:= temp;
  #L3688c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3688c8.  v1:= " " @kind object;
  #L3688cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3688d2.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L3688d8.  v2:= temp @kind object;
  #L3688da.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3688e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3688e6.  v2:= temp @kind object;
  #L3688e8.  return v2 @kind object;
}
procedure `int` `code`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368884.  v0:= v1.`retrofit2.HttpException.code` @type ^`int`;
  #L368888.  return v0;
}
procedure `java.lang.String` `message`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3688fc.  v0:= v1.`retrofit2.HttpException.message` @type ^`java.lang.String` @kind object;
  #L368900.  return v0 @kind object;
}
procedure `retrofit2.Response` `response`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.response:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368914.  v0:= v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` @kind object;
  #L368918.  return v0 @kind object;
}
