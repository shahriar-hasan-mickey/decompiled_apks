record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object, `okhttp3.HttpUrl` v3 @kind object, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object, `boolean` v7 ) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L36d954.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36d95a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L36d95e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L36d964.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L36d968.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L36d96c.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L36d970.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L36d974.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L36d978.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L36d97c.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L36d980.  return @kind void;
}
procedure `void` `validateServiceInterface`(`retrofit2.Retrofit` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lretrofit2/Retrofit;.validateServiceInterface:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36d994.  call temp:= `isInterface`(v6) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L36d99a.  v0:= temp;
  #L36d99c.  if v0 == 0 then goto L36da86;
  #L36d9a0.  v0:= new `java.util.ArrayDeque`;
  #L36d9a4.  v1:= 1I;
  #L36d9a6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayDeque;.<init>:(I)V` @kind direct;
  #L36d9ac.  call temp:= `add`(v0, v6) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36d9b2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L36d9b8.  v1:= temp;
  #L36d9ba.  if v1 != 0 then goto L36da34;
  #L36d9be.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L36d9c4.  v1:= temp @kind object;
  #L36d9c6.  v1:= (`java.lang.Class`) v1 @kind object;
  #L36d9ca.  call temp:= `getTypeParameters`(v1) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L36d9d0.  v2:= temp @kind object;
  #L36d9d2.  v2:= length @variable v2;
  #L36d9d4.  if v2 == 0 then goto L36da24;
  #L36d9d8.  v0:= new `java.lang.StringBuilder`;
  #L36d9dc.  v2:= "Type parameters are unsupported on " @kind object;
  #L36d9e0.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d9e6.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d9ec.  v2:= temp @kind object;
  #L36d9ee.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d9f4.  if v1 == v6 then goto L36da10;
  #L36d9f8.  v1:= " which is an interface of " @kind object;
  #L36d9fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36da02.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36da08.  v6:= temp @kind object;
  #L36da0a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36da10.  v6:= new `java.lang.IllegalArgumentException`;
  #L36da14.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36da1a.  v0:= temp @kind object;
  #L36da1c.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36da22.  throw v6;
  #L36da24.  call temp:= `getInterfaces`(v1) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L36da2a.  v1:= temp @kind object;
  #L36da2c.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L36da32.  goto L36d9b2;
  #L36da34.  v0:= v5.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L36da38.  if v0 == 0 then goto L36da84;
  #L36da3c.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L36da42.  v0:= temp @kind object;
  #L36da44.  call temp:= `getDeclaredMethods`(v6) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L36da4a.  v6:= temp @kind object;
  #L36da4c.  v1:= length @variable v6;
  #L36da4e.  v2:= 0I;
  #L36da50.  if v2 >= v1 then goto L36da84;
  #L36da54.  v3:= v6[v2] @kind object;
  #L36da58.  call temp:= `isDefaultMethod`(v0, v3) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L36da5e.  v4:= temp;
  #L36da60.  if v4 != 0 then goto L36da7e;
  #L36da64.  call temp:= `getModifiers`(v3) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L36da6a.  v4:= temp;
  #L36da6c.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L36da72.  v4:= temp;
  #L36da74.  if v4 != 0 then goto L36da7e;
  #L36da78.  call temp:= `loadServiceMethod`(v5, v3) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L36da7e.  v2:= v2 + 1;
  #L36da82.  goto L36da50;
  #L36da84.  return @kind void;
  #L36da86.  v6:= new `java.lang.IllegalArgumentException`;
  #L36da8a.  v0:= "API declarations must be interfaces." @kind object;
  #L36da8e.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36da94.  goto L36da98;
  #L36da96.  throw v6;
  #L36da98.  goto L36da96;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d438.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L36d43c.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d450.  v0:= 0I;
  #L36d452.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L36d458.  v2:= temp @kind object;
  #L36d45a.  return v2 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d3d8.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d3dc.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d420.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L36d424.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d408.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L36d40c.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d3f0.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d3f4.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36d398.  call `validateServiceInterface`(v3, v4) @signature `Lretrofit2/Retrofit;.validateServiceInterface:(Ljava/lang/Class;)V` @kind direct;
  #L36d39e.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L36d3a4.  v0:= temp @kind object;
  #L36d3a6.  v1:= 1I;
  #L36d3a8.  v1:= new `java.lang.Class`[v1];
  #L36d3ac.  v2:= 0I;
  #L36d3ae.  v1[v2]:= v4 @kind object;
  #L36d3b2.  v2:= new `retrofit2.Retrofit$1`;
  #L36d3b6.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L36d3bc.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L36d3c2.  v4:= temp @kind object;
  #L36d3c4.  return v4 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v3 @kind this, `java.lang.reflect.Method` v4 @kind object) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L36d8ec.  v0:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L36d8f0.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L36d8f6.  v0:= temp @kind object;
  #L36d8f8.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L36d8fc.  if v0 == 0 then goto L36d902;
  #L36d900.  return v0 @kind object;
  #L36d902.  v0:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L36d906.  @monitorenter v0
  #L36d908.  v1:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L36d90c.  call temp:= `get`(v1, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L36d912.  v1:= temp @kind object;
  #L36d914.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L36d918.  if v1 != 0 then goto L36d92e;
  #L36d91c.  call temp:= `parseAnnotations`(v3, v4) @signature `Lretrofit2/ServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind static;
  #L36d922.  v1:= temp @kind object;
  #L36d924.  v2:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L36d928.  call temp:= `put`(v2, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L36d92e.  @monitorexit v0
  #L36d930.  return v1 @kind object;
  #L36d932.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36d934.  @monitorexit v0
  #L36d936.  throw v4;
  catch `java.lang.Throwable` @[L36d908..L36d936] goto L36d932;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d8d0.  v0:= new `retrofit2.Retrofit$Builder`;
  #L36d8d4.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L36d8da.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.CallAdapter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d46c.  v0:= "returnType == null" @kind object;
  #L36d470.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d476.  v0:= "annotations == null" @kind object;
  #L36d47a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d480.  v0:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d484.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L36d48a.  v0:= temp;
  #L36d48c.  v0:= v0 + 1;
  #L36d490.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d494.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d49a.  v1:= temp;
  #L36d49c.  v2:= v0;
  #L36d49e.  if v2 >= v1 then goto L36d4c6;
  #L36d4a2.  v3:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d4a6.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d4ac.  v3:= temp @kind object;
  #L36d4ae.  v3:= (`retrofit2.CallAdapter$Factory`) v3 @kind object;
  #L36d4b2.  call temp:= `get`(v3, v6, v7, v4) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L36d4b8.  v3:= temp @kind object;
  #L36d4ba.  if v3 == 0 then goto L36d4c0;
  #L36d4be.  return v3 @kind object;
  #L36d4c0.  v2:= v2 + 1;
  #L36d4c4.  goto L36d49e;
  #L36d4c6.  v7:= new `java.lang.StringBuilder`;
  #L36d4ca.  v1:= "Could not locate call adapter for " @kind object;
  #L36d4ce.  call `<init>`(v7, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d4d4.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d4da.  v6:= ".\n" @kind object;
  #L36d4de.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d4e4.  v6:= "\n   * " @kind object;
  #L36d4e8.  if v5 == 0 then goto L36d538;
  #L36d4ec.  v5:= "  Skipped:" @kind object;
  #L36d4f0.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d4f6.  v5:= 0I;
  #L36d4f8.  if v5 >= v0 then goto L36d52e;
  #L36d4fc.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d502.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d506.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d50c.  v1:= temp @kind object;
  #L36d50e.  v1:= (`retrofit2.CallAdapter$Factory`) v1 @kind object;
  #L36d512.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d518.  v1:= temp @kind object;
  #L36d51a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d520.  v1:= temp @kind object;
  #L36d522.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d528.  v5:= v5 + 1;
  #L36d52c.  goto L36d4f8;
  #L36d52e.  v5:= 10I;
  #L36d532.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d538.  v5:= "  Tried:" @kind object;
  #L36d53c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d542.  v5:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d546.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d54c.  v5:= temp;
  #L36d54e.  if v0 >= v5 then goto L36d584;
  #L36d552.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d558.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L36d55c.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d562.  v1:= temp @kind object;
  #L36d564.  v1:= (`retrofit2.CallAdapter$Factory`) v1 @kind object;
  #L36d568.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d56e.  v1:= temp @kind object;
  #L36d570.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d576.  v1:= temp @kind object;
  #L36d578.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d57e.  v0:= v0 + 1;
  #L36d582.  goto L36d54e;
  #L36d584.  v5:= new `java.lang.IllegalArgumentException`;
  #L36d588.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36d58e.  v6:= temp @kind object;
  #L36d590.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d596.  goto L36d59a;
  #L36d598.  throw v5;
  #L36d59a.  goto L36d598;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.Converter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object, `java.lang.annotation.Annotation`[] v8 @kind object) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d5ac.  v0:= "type == null" @kind object;
  #L36d5b0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d5b6.  v0:= "parameterAnnotations == null" @kind object;
  #L36d5ba.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d5c0.  v0:= "methodAnnotations == null" @kind object;
  #L36d5c4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d5ca.  v0:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d5ce.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L36d5d4.  v0:= temp;
  #L36d5d6.  v0:= v0 + 1;
  #L36d5da.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d5de.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d5e4.  v1:= temp;
  #L36d5e6.  v2:= v0;
  #L36d5e8.  if v2 >= v1 then goto L36d610;
  #L36d5ec.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d5f0.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d5f6.  v3:= temp @kind object;
  #L36d5f8.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L36d5fc.  call temp:= `requestBodyConverter`(v3, v6, v7, v8, v4) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L36d602.  v3:= temp @kind object;
  #L36d604.  if v3 == 0 then goto L36d60a;
  #L36d608.  return v3 @kind object;
  #L36d60a.  v2:= v2 + 1;
  #L36d60e.  goto L36d5e8;
  #L36d610.  v7:= new `java.lang.StringBuilder`;
  #L36d614.  v8:= "Could not locate RequestBody converter for " @kind object;
  #L36d618.  call `<init>`(v7, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d61e.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d624.  v6:= ".\n" @kind object;
  #L36d628.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d62e.  v6:= "\n   * " @kind object;
  #L36d632.  if v5 == 0 then goto L36d682;
  #L36d636.  v5:= "  Skipped:" @kind object;
  #L36d63a.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d640.  v5:= 0I;
  #L36d642.  if v5 >= v0 then goto L36d678;
  #L36d646.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d64c.  v8:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d650.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d656.  v8:= temp @kind object;
  #L36d658.  v8:= (`retrofit2.Converter$Factory`) v8 @kind object;
  #L36d65c.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d662.  v8:= temp @kind object;
  #L36d664.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d66a.  v8:= temp @kind object;
  #L36d66c.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d672.  v5:= v5 + 1;
  #L36d676.  goto L36d642;
  #L36d678.  v5:= 10I;
  #L36d67c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d682.  v5:= "  Tried:" @kind object;
  #L36d686.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d68c.  v5:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d690.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d696.  v5:= temp;
  #L36d698.  if v0 >= v5 then goto L36d6ce;
  #L36d69c.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d6a2.  v8:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d6a6.  call temp:= `get`(v8, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d6ac.  v8:= temp @kind object;
  #L36d6ae.  v8:= (`retrofit2.Converter$Factory`) v8 @kind object;
  #L36d6b2.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d6b8.  v8:= temp @kind object;
  #L36d6ba.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d6c0.  v8:= temp @kind object;
  #L36d6c2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d6c8.  v0:= v0 + 1;
  #L36d6cc.  goto L36d698;
  #L36d6ce.  v5:= new `java.lang.IllegalArgumentException`;
  #L36d6d2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36d6d8.  v6:= temp @kind object;
  #L36d6da.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d6e0.  goto L36d6e4;
  #L36d6e2.  throw v5;
  #L36d6e4.  goto L36d6e2;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.Converter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36d6f8.  v0:= "type == null" @kind object;
  #L36d6fc.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d702.  v0:= "annotations == null" @kind object;
  #L36d706.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d70c.  v0:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d710.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L36d716.  v0:= temp;
  #L36d718.  v0:= v0 + 1;
  #L36d71c.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d720.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d726.  v1:= temp;
  #L36d728.  v2:= v0;
  #L36d72a.  if v2 >= v1 then goto L36d752;
  #L36d72e.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d732.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d738.  v3:= temp @kind object;
  #L36d73a.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L36d73e.  call temp:= `responseBodyConverter`(v3, v6, v7, v4) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L36d744.  v3:= temp @kind object;
  #L36d746.  if v3 == 0 then goto L36d74c;
  #L36d74a.  return v3 @kind object;
  #L36d74c.  v2:= v2 + 1;
  #L36d750.  goto L36d72a;
  #L36d752.  v7:= new `java.lang.StringBuilder`;
  #L36d756.  v1:= "Could not locate ResponseBody converter for " @kind object;
  #L36d75a.  call `<init>`(v7, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d760.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d766.  v6:= ".\n" @kind object;
  #L36d76a.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d770.  v6:= "\n   * " @kind object;
  #L36d774.  if v5 == 0 then goto L36d7c4;
  #L36d778.  v5:= "  Skipped:" @kind object;
  #L36d77c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d782.  v5:= 0I;
  #L36d784.  if v5 >= v0 then goto L36d7ba;
  #L36d788.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d78e.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d792.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d798.  v1:= temp @kind object;
  #L36d79a.  v1:= (`retrofit2.Converter$Factory`) v1 @kind object;
  #L36d79e.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d7a4.  v1:= temp @kind object;
  #L36d7a6.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d7ac.  v1:= temp @kind object;
  #L36d7ae.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d7b4.  v5:= v5 + 1;
  #L36d7b8.  goto L36d784;
  #L36d7ba.  v5:= 10I;
  #L36d7be.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d7c4.  v5:= "  Tried:" @kind object;
  #L36d7c8.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d7ce.  v5:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d7d2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d7d8.  v5:= temp;
  #L36d7da.  if v0 >= v5 then goto L36d810;
  #L36d7de.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d7e4.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d7e8.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d7ee.  v1:= temp @kind object;
  #L36d7f0.  v1:= (`retrofit2.Converter$Factory`) v1 @kind object;
  #L36d7f4.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36d7fa.  v1:= temp @kind object;
  #L36d7fc.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36d802.  v1:= temp @kind object;
  #L36d804.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36d80a.  v0:= v0 + 1;
  #L36d80e.  goto L36d7da;
  #L36d810.  v5:= new `java.lang.IllegalArgumentException`;
  #L36d814.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36d81a.  v6:= temp @kind object;
  #L36d81c.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d822.  goto L36d826;
  #L36d824.  throw v5;
  #L36d826.  goto L36d824;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d838.  v0:= 0I;
  #L36d83a.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36d840.  v2:= temp @kind object;
  #L36d842.  return v2 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d854.  v0:= 0I;
  #L36d856.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36d85c.  v2:= temp @kind object;
  #L36d85e.  return v2 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v3 @kind this, `java.lang.reflect.Type` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36d870.  v0:= "type == null" @kind object;
  #L36d874.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d87a.  v0:= "annotations == null" @kind object;
  #L36d87e.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36d884.  v0:= v3.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d888.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36d88e.  v0:= temp;
  #L36d890.  v1:= 0I;
  #L36d892.  if v1 >= v0 then goto L36d8ba;
  #L36d896.  v2:= v3.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L36d89a.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36d8a0.  v2:= temp @kind object;
  #L36d8a2.  v2:= (`retrofit2.Converter$Factory`) v2 @kind object;
  #L36d8a6.  call temp:= `stringConverter`(v2, v4, v5, v3) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L36d8ac.  v2:= temp @kind object;
  #L36d8ae.  if v2 == 0 then goto L36d8b4;
  #L36d8b2.  return v2 @kind object;
  #L36d8b4.  v1:= v1 + 1;
  #L36d8b8.  goto L36d892;
  #L36d8ba.  v4:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L36d8be.  return v4 @kind object;
}
