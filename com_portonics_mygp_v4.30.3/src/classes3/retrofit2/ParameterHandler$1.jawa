record `retrofit2.ParameterHandler$1` @kind class @AccessFlag  extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.ParameterHandler` `retrofit2.ParameterHandler$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$1` v0 @kind this, `retrofit2.ParameterHandler` v1 @kind object) @signature `Lretrofit2/ParameterHandler$1;.<init>:(Lretrofit2/ParameterHandler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L369c98.  v0.`retrofit2.ParameterHandler$1.this$0` @type ^`retrofit2.ParameterHandler` := v1 @kind object;
  #L369c9c.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L369ca2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$1` v2 @kind this, `retrofit2.RequestBuilder` v3 @kind object, `java.lang.Iterable` v4 @kind object) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Iterable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L369cb4.  if v4 != 0 then goto L369cba;
  #L369cb8.  return @kind void;
  #L369cba.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L369cc0.  v4:= temp @kind object;
  #L369cc2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L369cc8.  v0:= temp;
  #L369cca.  if v0 == 0 then goto L369ce2;
  #L369cce.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L369cd4.  v0:= temp @kind object;
  #L369cd6.  v1:= v2.`retrofit2.ParameterHandler$1.this$0` @type ^`retrofit2.ParameterHandler` @kind object;
  #L369cda.  call `apply`(v1, v3, v0) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L369ce0.  goto L369cc2;
  #L369ce2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$1` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L369cf4.  v2:= (`java.lang.Iterable`) v2 @kind object;
  #L369cf8.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Iterable;)V` @kind virtual;
  #L369cfe.  return @kind void;
}
