record `retrofit2.ParameterHandler$Body` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.Converter` `retrofit2.ParameterHandler$Body.converter` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `retrofit2.ParameterHandler$Body.method` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.ParameterHandler$Body.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$Body` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 , `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L369d6c.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L369d72.  v0.`retrofit2.ParameterHandler$Body.method` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L369d76.  v0.`retrofit2.ParameterHandler$Body.p` @type ^`int` := v2;
  #L369d7a.  v0.`retrofit2.ParameterHandler$Body.converter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L369d7e.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$Body` v5 @kind this, `retrofit2.RequestBuilder` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lretrofit2/ParameterHandler$Body;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L369d90.  v0:= 0I;
  #L369d92.  if v7 == 0 then goto L369df2;
  #L369d96.  v1:= v5.`retrofit2.ParameterHandler$Body.converter` @type ^`retrofit2.Converter` @kind object;
  #L369d9a.  call temp:= `convert`(v1, v7) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L369da0.  v1:= temp @kind object;
  #L369da2.  v1:= (`okhttp3.RequestBody`) v1 @kind object;
  #L369da6.  call `setBody`(v6, v1) @signature `Lretrofit2/RequestBuilder;.setBody:(Lokhttp3/RequestBody;)V` @kind virtual;
  #L369dac.  return @kind void;
  #L369dae.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L369db0.  v1:= v5.`retrofit2.ParameterHandler$Body.method` @type ^`java.lang.reflect.Method` @kind object;
  #L369db4.  v2:= v5.`retrofit2.ParameterHandler$Body.p` @type ^`int`;
  #L369db8.  v3:= new `java.lang.StringBuilder`;
  #L369dbc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L369dc2.  v4:= "Unable to convert " @kind object;
  #L369dc6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L369dcc.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L369dd2.  v7:= " to RequestBody" @kind object;
  #L369dd6.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L369ddc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L369de2.  v7:= temp @kind object;
  #L369de4.  v0:= new `java.lang.Object`[v0];
  #L369de8.  call temp:= `parameterError`(v1, v6, v2, v7, v0) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L369dee.  v6:= temp @kind object;
  #L369df0.  throw v6;
  #L369df2.  v6:= v5.`retrofit2.ParameterHandler$Body.method` @type ^`java.lang.reflect.Method` @kind object;
  #L369df6.  v7:= v5.`retrofit2.ParameterHandler$Body.p` @type ^`int`;
  #L369dfa.  v0:= new `java.lang.Object`[v0];
  #L369dfe.  v1:= "Body parameter value must not be null." @kind object;
  #L369e02.  call temp:= `parameterError`(v6, v7, v1, v0) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L369e08.  v6:= temp @kind object;
  #L369e0a.  throw v6;
  catch `java.io.IOException` @[L369d96..L369da6] goto L369dae;
}
