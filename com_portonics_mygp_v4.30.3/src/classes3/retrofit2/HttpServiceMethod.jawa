record `retrofit2.HttpServiceMethod` @kind class @AccessFlag ABSTRACT extends `retrofit2.ServiceMethod` @kind class {
  `okhttp3.Call$Factory` `retrofit2.HttpServiceMethod.callFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.RequestFactory` `retrofit2.HttpServiceMethod.requestFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.HttpServiceMethod.responseConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.HttpServiceMethod` v0 @kind this, `retrofit2.RequestFactory` v1 @kind object, `okhttp3.Call$Factory` v2 @kind object, `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/HttpServiceMethod;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L368cf0.  call `<init>`(v0) @signature `Lretrofit2/ServiceMethod;.<init>:()V` @kind direct;
  #L368cf6.  v0.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` := v1 @kind object;
  #L368cfa.  v0.`retrofit2.HttpServiceMethod.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L368cfe.  v0.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L368d02.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L368acc.  call temp:= `callAdapter`(v1, v3, v4) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L368ad2.  v1:= temp @kind object;
  #L368ad4.  return v1 @kind object;
  #L368ad6.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L368ad8.  v4:= 1I;
  #L368ada.  v4:= new `java.lang.Object`[v4];
  #L368ade.  v0:= 0I;
  #L368ae0.  v4[v0]:= v3 @kind object;
  #L368ae4.  v3:= "Unable to create call adapter for %s" @kind object;
  #L368ae8.  call temp:= `methodError`(v2, v1, v3, v4) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L368aee.  v1:= temp @kind object;
  #L368af0.  throw v1;
  catch `java.lang.RuntimeException` @[L368acc..L368ad4] goto L368ad6;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.Retrofit` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L368b14.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L368b1a.  v0:= temp @kind object;
  #L368b1c.  call temp:= `responseBodyConverter`(v2, v4, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L368b22.  v2:= temp @kind object;
  #L368b24.  return v2 @kind object;
  #L368b26.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L368b28.  v0:= 1I;
  #L368b2a.  v0:= new `java.lang.Object`[v0];
  #L368b2e.  v1:= 0I;
  #L368b30.  v0[v1]:= v4 @kind object;
  #L368b34.  v4:= "Unable to create converter for %s" @kind object;
  #L368b38.  call temp:= `methodError`(v3, v2, v4, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L368b3e.  v2:= temp @kind object;
  #L368b40.  throw v2;
  catch `java.lang.RuntimeException` @[L368b1c..L368b24] goto L368b26;
}
procedure `retrofit2.HttpServiceMethod` `parseAnnotations`(`retrofit2.Retrofit` v13 @kind object, `java.lang.reflect.Method` v14 @kind object, `retrofit2.RequestFactory` v15 @kind object) @signature `Lretrofit2/HttpServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Lretrofit2/RequestFactory;)Lretrofit2/HttpServiceMethod;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L368b64.  v3:= constclass @type ^`retrofit2.Response` @kind object;
  #L368b68.  v4:= v15.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L368b6c.  call temp:= `getAnnotations`(v14) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L368b72.  v5:= temp @kind object;
  #L368b74.  v6:= 0I;
  #L368b76.  if v4 == 0 then goto L368be0;
  #L368b7a.  call temp:= `getGenericParameterTypes`(v14) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L368b80.  v7:= temp @kind object;
  #L368b82.  v8:= length @variable v7;
  #L368b84.  v9:= 1I;
  #L368b86.  v8:= v8 - v9 @kind int;
  #L368b88.  v7:= v7[v8] @kind object;
  #L368b8c.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L368b90.  call temp:= `getParameterLowerBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterLowerBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L368b96.  v7:= temp @kind object;
  #L368b98.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L368b9e.  v8:= temp @kind object;
  #L368ba0.  if v8 != v3 then goto L368bbc;
  #L368ba4.  v8:= instanceof @variable v7 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L368ba8.  if v8 == 0 then goto L368bbc;
  #L368bac.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L368bb0.  call temp:= `getParameterUpperBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L368bb6.  v7:= temp @kind object;
  #L368bb8.  v8:= 1I;
  #L368bba.  goto L368bbe;
  #L368bbc.  v8:= 0I;
  #L368bbe.  v10:= new `retrofit2.Utils$ParameterizedTypeImpl`;
  #L368bc2.  v11:= 0I;
  #L368bc4.  v12:= constclass @type ^`retrofit2.Call` @kind object;
  #L368bc8.  v9:= new `java.lang.reflect.Type`[v9];
  #L368bcc.  v9[v6]:= v7 @kind object;
  #L368bd0.  call `<init>`(v10, v11, v12, v9) @signature `Lretrofit2/Utils$ParameterizedTypeImpl;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L368bd6.  call temp:= `ensurePresent`(v5) @signature `Lretrofit2/SkipCallbackExecutorImpl;.ensurePresent:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @kind static;
  #L368bdc.  v5:= temp @kind object;
  #L368bde.  goto L368bea;
  #L368be0.  call temp:= `getGenericReturnType`(v14) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L368be6.  v10:= temp @kind object;
  #L368be8.  v8:= 0I;
  #L368bea.  call temp:= `createCallAdapter`(v13, v14, v10, v5) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind static;
  #L368bf0.  v5:= temp @kind object;
  #L368bf2.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L368bf8.  v7:= temp @kind object;
  #L368bfa.  v9:= constclass @type ^`okhttp3.Response` @kind object;
  #L368bfe.  if v7 == v9 then goto L368c94;
  #L368c02.  if v7 == v3 then goto L368c82;
  #L368c06.  v3:= v15.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` @kind object;
  #L368c0a.  v9:= "HEAD" @kind object;
  #L368c0e.  call temp:= `equals`(v3, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368c14.  v3:= temp;
  #L368c16.  if v3 == 0 then goto L368c3e;
  #L368c1a.  v3:= constclass @type ^`java.lang.Void` @kind object;
  #L368c1e.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368c24.  v3:= temp;
  #L368c26.  if v3 == 0 then goto L368c2c;
  #L368c2a.  goto L368c3e;
  #L368c2c.  v0:= new `java.lang.Object`[v6];
  #L368c30.  v2:= "HEAD method must use Void as response type." @kind object;
  #L368c34.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L368c3a.  v0:= temp @kind object;
  #L368c3c.  throw v0;
  #L368c3e.  call temp:= `createResponseConverter`(v13, v14, v7) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @kind static;
  #L368c44.  v3:= temp @kind object;
  #L368c46.  v6:= v13.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L368c4a.  if v4 != 0 then goto L368c5a;
  #L368c4e.  v0:= new `retrofit2.HttpServiceMethod$CallAdapted`;
  #L368c52.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$CallAdapted;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L368c58.  return v0 @kind object;
  #L368c5a.  if v8 == 0 then goto L368c6a;
  #L368c5e.  v0:= new `retrofit2.HttpServiceMethod$SuspendForResponse`;
  #L368c62.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForResponse;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L368c68.  return v0 @kind object;
  #L368c6a.  v7:= new `retrofit2.HttpServiceMethod$SuspendForBody`;
  #L368c6e.  v8:= 0I;
  #L368c70.  v0:= v7 @kind object;
  #L368c72.  v1:= v15 @kind object;
  #L368c74.  v2:= v6 @kind object;
  #L368c76.  v4:= v5 @kind object;
  #L368c78.  v5:= v8;
  #L368c7a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForBody;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;Z)V` @kind direct;
  #L368c80.  return v7 @kind object;
  #L368c82.  v0:= new `java.lang.Object`[v6];
  #L368c86.  v2:= "Response must include generic type (e.g., Response<String>)" @kind object;
  #L368c8a.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L368c90.  v0:= temp @kind object;
  #L368c92.  throw v0;
  #L368c94.  v0:= new `java.lang.StringBuilder`;
  #L368c98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L368c9e.  v2:= "'" @kind object;
  #L368ca2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368ca8.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L368cae.  v2:= temp @kind object;
  #L368cb0.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L368cb6.  v2:= temp @kind object;
  #L368cb8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368cbe.  v2:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L368cc2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368cc8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L368cce.  v0:= temp @kind object;
  #L368cd0.  v2:= new `java.lang.Object`[v6];
  #L368cd4.  call temp:= `methodError`(v14, v0, v2) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L368cda.  v0:= temp @kind object;
  #L368cdc.  throw v0;
}
procedure `java.lang.Object` `adapt`(`retrofit2.Call` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `invoke`(`retrofit2.HttpServiceMethod` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lretrofit2/HttpServiceMethod;.invoke:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L368a9c.  v0:= new `retrofit2.OkHttpCall`;
  #L368aa0.  v1:= v4.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` @kind object;
  #L368aa4.  v2:= v4.`retrofit2.HttpServiceMethod.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L368aa8.  v3:= v4.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` @kind object;
  #L368aac.  call `<init>`(v0, v1, v5, v2, v3) @signature `Lretrofit2/OkHttpCall;.<init>:(Lretrofit2/RequestFactory;[Ljava/lang/Object;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @kind direct;
  #L368ab2.  call temp:= `adapt`(v4, v0, v5) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L368ab8.  v5:= temp @kind object;
  #L368aba.  return v5 @kind object;
}
