record `retrofit2.Retrofit$1` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `java.lang.Object`[] `retrofit2.Retrofit$1.emptyArgs` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Platform` `retrofit2.Retrofit$1.platform` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Retrofit` `retrofit2.Retrofit$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `retrofit2.Retrofit$1.val$service` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.Retrofit$1` v0 @kind this, `retrofit2.Retrofit` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36cf54.  v0.`retrofit2.Retrofit$1.this$0` @type ^`retrofit2.Retrofit` := v1 @kind object;
  #L36cf58.  v0.`retrofit2.Retrofit$1.val$service` @type ^`java.lang.Class` := v2 @kind object;
  #L36cf5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36cf62.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L36cf68.  v1:= temp @kind object;
  #L36cf6a.  v0.`retrofit2.Retrofit$1.platform` @type ^`retrofit2.Platform` := v1 @kind object;
  #L36cf6e.  v1:= 0I;
  #L36cf70.  v1:= new `java.lang.Object`[v1];
  #L36cf74.  v0.`retrofit2.Retrofit$1.emptyArgs` @type ^`java.lang.Object`[] := v1 @kind object;
  #L36cf78.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`retrofit2.Retrofit$1` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lretrofit2/Retrofit$1;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36cee8.  call temp:= `getDeclaringClass`(v4) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L36ceee.  v0:= temp @kind object;
  #L36cef0.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L36cef4.  if v0 != v1 then goto L36cf02;
  #L36cef8.  call temp:= `invoke`(v4, v2, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36cefe.  v3:= temp @kind object;
  #L36cf00.  return v3 @kind object;
  #L36cf02.  if v5 == 0 then goto L36cf08;
  #L36cf06.  goto L36cf0c;
  #L36cf08.  v5:= v2.`retrofit2.Retrofit$1.emptyArgs` @type ^`java.lang.Object`[] @kind object;
  #L36cf0c.  v0:= v2.`retrofit2.Retrofit$1.platform` @type ^`retrofit2.Platform` @kind object;
  #L36cf10.  call temp:= `isDefaultMethod`(v0, v4) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L36cf16.  v0:= temp;
  #L36cf18.  if v0 == 0 then goto L36cf2e;
  #L36cf1c.  v0:= v2.`retrofit2.Retrofit$1.platform` @type ^`retrofit2.Platform` @kind object;
  #L36cf20.  v1:= v2.`retrofit2.Retrofit$1.val$service` @type ^`java.lang.Class` @kind object;
  #L36cf24.  call temp:= `invokeDefaultMethod`(v0, v4, v1, v3, v5) @signature `Lretrofit2/Platform;.invokeDefaultMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36cf2a.  v3:= temp @kind object;
  #L36cf2c.  goto L36cf42;
  #L36cf2e.  v3:= v2.`retrofit2.Retrofit$1.this$0` @type ^`retrofit2.Retrofit` @kind object;
  #L36cf32.  call temp:= `loadServiceMethod`(v3, v4) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L36cf38.  v3:= temp @kind object;
  #L36cf3a.  call temp:= `invoke`(v3, v5) @signature `Lretrofit2/ServiceMethod;.invoke:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36cf40.  v3:= temp @kind object;
  #L36cf42.  return v3 @kind object;
}
