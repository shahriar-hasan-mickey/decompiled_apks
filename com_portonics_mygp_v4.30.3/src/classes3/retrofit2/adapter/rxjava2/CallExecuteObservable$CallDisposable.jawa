record `retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable` @kind class @AccessFlag FINAL extends `io.reactivex.disposables.b` @kind interface {
  `retrofit2.Call` `retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.call` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.disposed` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable` v0 @kind this, `retrofit2.Call` v1 @kind object) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.<init>:(Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36ee98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36ee9e.  v0.`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.call` @type ^`retrofit2.Call` := v1 @kind object;
  #L36eea2.  return @kind void;
}
procedure `void` `dispose`(`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable` v1 @kind this) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36eeb4.  v0:= 1I;
  #L36eeb6.  v1.`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.disposed` @type ^`boolean` := v0 @kind boolean;
  #L36eeba.  v0:= v1.`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.call` @type ^`retrofit2.Call` @kind object;
  #L36eebe.  call `cancel`(v0) @signature `Lretrofit2/Call;.cancel:()V` @kind interface;
  #L36eec4.  return @kind void;
}
procedure `boolean` `isDisposed`(`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable` v1 @kind this) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ee80.  v0:= v1.`retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable.disposed` @type ^`boolean` @kind boolean;
  #L36ee84.  return v0;
}
