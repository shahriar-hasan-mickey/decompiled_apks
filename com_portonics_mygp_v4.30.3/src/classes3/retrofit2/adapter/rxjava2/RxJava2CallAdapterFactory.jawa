record `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` @kind class @AccessFlag PUBLIC_FINAL extends `retrofit2.CallAdapter$Factory` @kind class {
  `boolean` `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.isAsync` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.x` `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.scheduler` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` v0 @kind this, `io.reactivex.x` v1 @kind object, `boolean` v2 ) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.<init>:(Lio/reactivex/x;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L36f40c.  call `<init>`(v0) @signature `Lretrofit2/CallAdapter$Factory;.<init>:()V` @kind direct;
  #L36f412.  v0.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.scheduler` @type ^`io.reactivex.x` := v1 @kind object;
  #L36f416.  v0.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.isAsync` @type ^`boolean` := v2 @kind boolean;
  #L36f41a.  return @kind void;
}
procedure `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` `create`() @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.create:()Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36f3a4.  v0:= new `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory`;
  #L36f3a8.  v1:= 0I;
  #L36f3aa.  v2:= 0I;
  #L36f3ac.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.<init>:(Lio/reactivex/x;Z)V` @kind direct;
  #L36f3b2.  return v0 @kind object;
}
procedure `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` `createAsync`() @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.createAsync:()Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36f3c4.  v0:= new `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory`;
  #L36f3c8.  v1:= 0I;
  #L36f3ca.  v2:= 1I;
  #L36f3cc.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.<init>:(Lio/reactivex/x;Z)V` @kind direct;
  #L36f3d2.  return v0 @kind object;
}
procedure `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` `createWithScheduler`(`io.reactivex.x` v2 @kind object) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.createWithScheduler:(Lio/reactivex/x;)Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L36f3e4.  v0:= "scheduler == null" @kind object;
  #L36f3e8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L36f3ee.  v0:= new `retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory`;
  #L36f3f2.  v1:= 0I;
  #L36f3f4.  call `<init>`(v0, v2, v1) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.<init>:(Lio/reactivex/x;Z)V` @kind direct;
  #L36f3fa.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `get`(`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory` v12 @kind this, `java.lang.reflect.Type` v13 @kind object, `java.lang.annotation.Annotation`[] v14 @kind object, `retrofit2.Retrofit` v15 @kind object) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapterFactory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L36f208.  call temp:= `getRawType`(v13) @signature `Lretrofit2/CallAdapter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36f20e.  v14:= temp @kind object;
  #L36f210.  v15:= constclass @type ^`io.reactivex.a` @kind object;
  #L36f214.  if v14 != v15 then goto L36f23e;
  #L36f218.  v13:= new `retrofit2.adapter.rxjava2.RxJava2CallAdapter`;
  #L36f21c.  v1:= constclass @type ^`java.lang.Void` @kind object;
  #L36f220.  v2:= v12.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.scheduler` @type ^`io.reactivex.x` @kind object;
  #L36f224.  v3:= v12.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.isAsync` @type ^`boolean` @kind boolean;
  #L36f228.  v4:= 0I;
  #L36f22a.  v5:= 1I;
  #L36f22c.  v6:= 0I;
  #L36f22e.  v7:= 0I;
  #L36f230.  v8:= 0I;
  #L36f232.  v9:= 1I;
  #L36f234.  v0:= v13 @kind object;
  #L36f236.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapter;.<init>:(Ljava/lang/reflect/Type;Lio/reactivex/x;ZZZZZZZ)V` @kind direct;
  #L36f23c.  return v13 @kind object;
  #L36f23e.  v15:= constclass @type ^`io.reactivex.e` @kind object;
  #L36f242.  v0:= 1I;
  #L36f244.  v1:= 0I;
  #L36f246.  if v14 != v15 then goto L36f24e;
  #L36f24a.  v8:= 1I;
  #L36f24c.  goto L36f250;
  #L36f24e.  v8:= 0I;
  #L36f250.  v15:= constclass @type ^`io.reactivex.y` @kind object;
  #L36f254.  if v14 != v15 then goto L36f25c;
  #L36f258.  v9:= 1I;
  #L36f25a.  goto L36f25e;
  #L36f25c.  v9:= 0I;
  #L36f25e.  v15:= constclass @type ^`io.reactivex.i` @kind object;
  #L36f262.  if v14 != v15 then goto L36f26a;
  #L36f266.  v10:= 1I;
  #L36f268.  goto L36f26c;
  #L36f26a.  v10:= 0I;
  #L36f26c.  v15:= constclass @type ^`io.reactivex.n` @kind object;
  #L36f270.  if v14 == v15 then goto L36f284;
  #L36f274.  if v8 != 0 then goto L36f284;
  #L36f278.  if v9 != 0 then goto L36f284;
  #L36f27c.  if v10 != 0 then goto L36f284;
  #L36f280.  v13:= 0I;
  #L36f282.  return v13 @kind object;
  #L36f284.  v14:= instanceof @variable v13 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36f288.  if v14 != 0 then goto L36f2fc;
  #L36f28c.  if v8 != 0 then goto L36f2aa;
  #L36f290.  if v9 != 0 then goto L36f2a4;
  #L36f294.  if v10 == 0 then goto L36f29e;
  #L36f298.  v13:= "Maybe" @kind object;
  #L36f29c.  goto L36f2ae;
  #L36f29e.  v13:= "Observable" @kind object;
  #L36f2a2.  goto L36f2ae;
  #L36f2a4.  v13:= "Single" @kind object;
  #L36f2a8.  goto L36f2ae;
  #L36f2aa.  v13:= "Flowable" @kind object;
  #L36f2ae.  v14:= new `java.lang.IllegalStateException`;
  #L36f2b2.  v15:= new `java.lang.StringBuilder`;
  #L36f2b6.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36f2bc.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2c2.  v0:= " return type must be parameterized as " @kind object;
  #L36f2c6.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2cc.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2d2.  v0:= "<Foo> or " @kind object;
  #L36f2d6.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2dc.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2e2.  v13:= "<? extends Foo>" @kind object;
  #L36f2e6.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2ec.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36f2f2.  v13:= temp @kind object;
  #L36f2f4.  call `<init>`(v14, v13) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f2fa.  throw v14;
  #L36f2fc.  v13:= (`java.lang.reflect.ParameterizedType`) v13 @kind object;
  #L36f300.  call temp:= `getParameterUpperBound`(v1, v13) @signature `Lretrofit2/CallAdapter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36f306.  v13:= temp @kind object;
  #L36f308.  call temp:= `getRawType`(v13) @signature `Lretrofit2/CallAdapter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36f30e.  v14:= temp @kind object;
  #L36f310.  v15:= constclass @type ^`retrofit2.Response` @kind object;
  #L36f314.  if v14 != v15 then goto L36f344;
  #L36f318.  v14:= instanceof @variable v13 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36f31c.  if v14 == 0 then goto L36f334;
  #L36f320.  v13:= (`java.lang.reflect.ParameterizedType`) v13 @kind object;
  #L36f324.  call temp:= `getParameterUpperBound`(v1, v13) @signature `Lretrofit2/CallAdapter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36f32a.  v13:= temp @kind object;
  #L36f32c.  v3:= v13 @kind object;
  #L36f32e.  v6:= 0I;
  #L36f330.  v7:= 0I;
  #L36f332.  goto L36f37c;
  #L36f334.  v13:= new `java.lang.IllegalStateException`;
  #L36f338.  v14:= "Response must be parameterized as Response<Foo> or Response<? extends Foo>" @kind object;
  #L36f33c.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f342.  throw v13;
  #L36f344.  v15:= constclass @type ^`retrofit2.adapter.rxjava2.Result` @kind object;
  #L36f348.  if v14 != v15 then goto L36f376;
  #L36f34c.  v14:= instanceof @variable v13 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36f350.  if v14 == 0 then goto L36f366;
  #L36f354.  v13:= (`java.lang.reflect.ParameterizedType`) v13 @kind object;
  #L36f358.  call temp:= `getParameterUpperBound`(v1, v13) @signature `Lretrofit2/CallAdapter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36f35e.  v13:= temp @kind object;
  #L36f360.  v3:= v13 @kind object;
  #L36f362.  v6:= 1I;
  #L36f364.  goto L36f330;
  #L36f366.  v13:= new `java.lang.IllegalStateException`;
  #L36f36a.  v14:= "Result must be parameterized as Result<Foo> or Result<? extends Foo>" @kind object;
  #L36f36e.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f374.  throw v13;
  #L36f376.  v3:= v13 @kind object;
  #L36f378.  v6:= 0I;
  #L36f37a.  v7:= 1I;
  #L36f37c.  v13:= new `retrofit2.adapter.rxjava2.RxJava2CallAdapter`;
  #L36f380.  v4:= v12.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.scheduler` @type ^`io.reactivex.x` @kind object;
  #L36f384.  v5:= v12.`retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory.isAsync` @type ^`boolean` @kind boolean;
  #L36f388.  v11:= 0I;
  #L36f38a.  v2:= v13 @kind object;
  #L36f38c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lretrofit2/adapter/rxjava2/RxJava2CallAdapter;.<init>:(Ljava/lang/reflect/Type;Lio/reactivex/x;ZZZZZZZ)V` @kind direct;
  #L36f392.  return v13 @kind object;
}
