record `retrofit2.adapter.rxjava2.CallExecuteObservable` @kind class @AccessFlag FINAL extends `io.reactivex.n` @kind class {
  `retrofit2.Call` `retrofit2.adapter.rxjava2.CallExecuteObservable.originalCall` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava2.CallExecuteObservable` v0 @kind this, `retrofit2.Call` v1 @kind object) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable;.<init>:(Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36eed8.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L36eede.  v0.`retrofit2.adapter.rxjava2.CallExecuteObservable.originalCall` @type ^`retrofit2.Call` := v1 @kind object;
  #L36eee2.  return @kind void;
}
procedure `void` `subscribeActual`(`retrofit2.adapter.rxjava2.CallExecuteObservable` v5 @kind this, `io.reactivex.t` v6 @kind object) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36eef4.  v0:= v5.`retrofit2.adapter.rxjava2.CallExecuteObservable.originalCall` @type ^`retrofit2.Call` @kind object;
  #L36eef8.  call temp:= `clone`(v0) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L36eefe.  v0:= temp @kind object;
  #L36ef00.  v1:= new `retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable`;
  #L36ef04.  call `<init>`(v1, v0) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L36ef0a.  call `onSubscribe`(v6, v1) @signature `Lio/reactivex/t;.onSubscribe:(Lio/reactivex/disposables/b;)V` @kind interface;
  #L36ef10.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.isDisposed:()Z` @kind virtual;
  #L36ef16.  v2:= temp;
  #L36ef18.  if v2 == 0 then goto L36ef1e;
  #L36ef1c.  return @kind void;
  #L36ef1e.  v2:= 1I;
  #L36ef20.  v3:= 0I;
  #L36ef22.  call temp:= `execute`(v0) @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @kind interface;
  #L36ef28.  v0:= temp @kind object;
  #L36ef2a.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.isDisposed:()Z` @kind virtual;
  #L36ef30.  v4:= temp;
  #L36ef32.  if v4 != 0 then goto L36ef3c;
  #L36ef36.  call `onNext`(v6, v0) @signature `Lio/reactivex/t;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L36ef3c.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.isDisposed:()Z` @kind virtual;
  #L36ef42.  v0:= temp;
  #L36ef44.  if v0 != 0 then goto L36efa6;
  #L36ef48.  call `onComplete`(v6) @signature `Lio/reactivex/t;.onComplete:()V` @kind interface;
  #L36ef4e.  goto L36efa6;
  #L36ef50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ef52.  v4:= 1I;
  #L36ef54.  goto L36ef5a;
  #L36ef56.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ef58.  v4:= 0I;
  #L36ef5a.  call `b`(v0) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L36ef60.  if v4 == 0 then goto L36ef6c;
  #L36ef64.  call `t`(v0) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L36ef6a.  goto L36efa6;
  #L36ef6c.  call temp:= `isDisposed`(v1) @signature `Lretrofit2/adapter/rxjava2/CallExecuteObservable$CallDisposable;.isDisposed:()Z` @kind virtual;
  #L36ef72.  v1:= temp;
  #L36ef74.  if v1 != 0 then goto L36efa6;
  #L36ef78.  call `onError`(v6, v0) @signature `Lio/reactivex/t;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L36ef7e.  goto L36efa6;
  #L36ef80.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ef82.  call `b`(v6) @signature `Lio/reactivex/exceptions/a;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L36ef88.  v1:= new `io.reactivex.exceptions.CompositeException`;
  #L36ef8c.  v4:= 2I;
  #L36ef8e.  v4:= new `java.lang.Throwable`[v4];
  #L36ef92.  v4[v3]:= v0 @kind object;
  #L36ef96.  v4[v2]:= v6 @kind object;
  #L36ef9a.  call `<init>`(v1, v4) @signature `Lio/reactivex/exceptions/CompositeException;.<init>:([Ljava/lang/Throwable;)V` @kind direct;
  #L36efa0.  call `t`(v1) @signature `Lio/reactivex/g0/a;.t:(Ljava/lang/Throwable;)V` @kind static;
  #L36efa6.  return @kind void;
  catch `java.lang.Throwable` @[L36ef22..L36ef44] goto L36ef56;
  catch `java.lang.Throwable` @[L36ef48..L36ef4e] goto L36ef50;
  catch `java.lang.Throwable` @[L36ef78..L36ef7e] goto L36ef80;
}
