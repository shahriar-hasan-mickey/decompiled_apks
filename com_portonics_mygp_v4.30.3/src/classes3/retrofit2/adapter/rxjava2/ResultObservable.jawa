record `retrofit2.adapter.rxjava2.ResultObservable` @kind class @AccessFlag FINAL extends `io.reactivex.n` @kind class {
  `io.reactivex.n` `retrofit2.adapter.rxjava2.ResultObservable.upstream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava2.ResultObservable` v0 @kind this, `io.reactivex.n` v1 @kind object) @signature `Lretrofit2/adapter/rxjava2/ResultObservable;.<init>:(Lio/reactivex/n;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36f104.  call `<init>`(v0) @signature `Lio/reactivex/n;.<init>:()V` @kind direct;
  #L36f10a.  v0.`retrofit2.adapter.rxjava2.ResultObservable.upstream` @type ^`io.reactivex.n` := v1 @kind object;
  #L36f10e.  return @kind void;
}
procedure `void` `subscribeActual`(`retrofit2.adapter.rxjava2.ResultObservable` v2 @kind this, `io.reactivex.t` v3 @kind object) @signature `Lretrofit2/adapter/rxjava2/ResultObservable;.subscribeActual:(Lio/reactivex/t;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L36f120.  v0:= v2.`retrofit2.adapter.rxjava2.ResultObservable.upstream` @type ^`io.reactivex.n` @kind object;
  #L36f124.  v1:= new `retrofit2.adapter.rxjava2.ResultObservable$ResultObserver`;
  #L36f128.  call `<init>`(v1, v3) @signature `Lretrofit2/adapter/rxjava2/ResultObservable$ResultObserver;.<init>:(Lio/reactivex/t;)V` @kind direct;
  #L36f12e.  call `subscribe`(v0, v1) @signature `Lio/reactivex/n;.subscribe:(Lio/reactivex/t;)V` @kind virtual;
  #L36f134.  return @kind void;
}
