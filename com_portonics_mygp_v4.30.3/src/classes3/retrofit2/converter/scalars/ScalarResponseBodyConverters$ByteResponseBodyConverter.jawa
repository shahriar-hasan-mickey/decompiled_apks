record `retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
}
global `retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` `@@retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L36f8e8.  v0:= new `retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter`;
  #L36f8ec.  call `<init>`(v0) @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.<init>:()V` @kind direct;
  #L36f8f2.  `@@retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter.INSTANCE` @type ^`retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` := v0 @kind object;
  #L36f8f6.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` v0 @kind this) @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36f908.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36f90e.  return @kind void;
}
procedure `java.lang.Byte` `convert`(`retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.convert:(Lokhttp3/ResponseBody;)Ljava/lang/Byte;` @AccessFlag PUBLIC {
    temp;

  #L36f8a4.  call temp:= `string`(v1) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @kind virtual;
  #L36f8aa.  v1:= temp @kind object;
  #L36f8ac.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;` @kind static;
  #L36f8b2.  v1:= temp @kind object;
  #L36f8b4.  return v1 @kind object;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.scalars.ScalarResponseBodyConverters$ByteResponseBodyConverter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L36f8c8.  v1:= (`okhttp3.ResponseBody`) v1 @kind object;
  #L36f8cc.  call temp:= `convert`(v0, v1) @signature `Lretrofit2/converter/scalars/ScalarResponseBodyConverters$ByteResponseBodyConverter;.convert:(Lokhttp3/ResponseBody;)Ljava/lang/Byte;` @kind virtual;
  #L36f8d2.  v1:= temp @kind object;
  #L36f8d4.  return v1 @kind object;
}
