record `retrofit2.CompletableFutureCallAdapterFactory` @kind class @AccessFlag FINAL extends `retrofit2.CallAdapter$Factory` @kind class {
}
global `retrofit2.CallAdapter$Factory` `@@retrofit2.CompletableFutureCallAdapterFactory.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/CompletableFutureCallAdapterFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L36844c.  v0:= new `retrofit2.CompletableFutureCallAdapterFactory`;
  #L368450.  call `<init>`(v0) @signature `Lretrofit2/CompletableFutureCallAdapterFactory;.<init>:()V` @kind direct;
  #L368456.  `@@retrofit2.CompletableFutureCallAdapterFactory.INSTANCE` @type ^`retrofit2.CallAdapter$Factory` := v0 @kind object;
  #L36845a.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.CompletableFutureCallAdapterFactory` v0 @kind this) @signature `Lretrofit2/CompletableFutureCallAdapterFactory;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36846c.  call `<init>`(v0) @signature `Lretrofit2/CallAdapter$Factory;.<init>:()V` @kind direct;
  #L368472.  return @kind void;
}
procedure `retrofit2.CallAdapter` `get`(`retrofit2.CompletableFutureCallAdapterFactory` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object, `retrofit2.Retrofit` v4 @kind object) @signature `Lretrofit2/CompletableFutureCallAdapterFactory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3683b4.  call temp:= `getRawType`(v2) @signature `Lretrofit2/CallAdapter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L3683ba.  v3:= temp @kind object;
  #L3683bc.  v4:= constclass @type ^`java.util.concurrent.CompletableFuture` @kind object;
  #L3683c0.  if v3 == v4 then goto L3683c8;
  #L3683c4.  v2:= 0I;
  #L3683c6.  return v2 @kind object;
  #L3683c8.  v3:= instanceof @variable v2 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L3683cc.  if v3 == 0 then goto L36842a;
  #L3683d0.  v2:= (`java.lang.reflect.ParameterizedType`) v2 @kind object;
  #L3683d4.  v3:= 0I;
  #L3683d6.  call temp:= `getParameterUpperBound`(v3, v2) @signature `Lretrofit2/CallAdapter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L3683dc.  v2:= temp @kind object;
  #L3683de.  call temp:= `getRawType`(v2) @signature `Lretrofit2/CallAdapter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L3683e4.  v4:= temp @kind object;
  #L3683e6.  v0:= constclass @type ^`retrofit2.Response` @kind object;
  #L3683ea.  if v4 == v0 then goto L3683fa;
  #L3683ee.  v3:= new `retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter`;
  #L3683f2.  call `<init>`(v3, v2) @signature `Lretrofit2/CompletableFutureCallAdapterFactory$BodyCallAdapter;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L3683f8.  return v3 @kind object;
  #L3683fa.  v4:= instanceof @variable v2 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L3683fe.  if v4 == 0 then goto L36841a;
  #L368402.  v2:= (`java.lang.reflect.ParameterizedType`) v2 @kind object;
  #L368406.  call temp:= `getParameterUpperBound`(v3, v2) @signature `Lretrofit2/CallAdapter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36840c.  v2:= temp @kind object;
  #L36840e.  v3:= new `retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter`;
  #L368412.  call `<init>`(v3, v2) @signature `Lretrofit2/CompletableFutureCallAdapterFactory$ResponseCallAdapter;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L368418.  return v3 @kind object;
  #L36841a.  v2:= new `java.lang.IllegalStateException`;
  #L36841e.  v3:= "Response must be parameterized as Response<Foo> or Response<? extends Foo>" @kind object;
  #L368422.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L368428.  throw v2;
  #L36842a.  v2:= new `java.lang.IllegalStateException`;
  #L36842e.  v3:= "CompletableFuture return type must be parameterized as CompletableFuture<Foo> or CompletableFuture<? extends Foo>" @kind object;
  #L368432.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L368438.  throw v2;
}
