record `retrofit2.RequestFactory$Builder` @kind class @AccessFlag FINAL {
  `okhttp3.MediaType` `retrofit2.RequestFactory$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQueryMap` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQueryName` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.RequestFactory$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.RequestFactory$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.RequestFactory$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.RequestFactory$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.RequestFactory$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.RequestFactory$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.RequestFactory$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.RequestFactory$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.RequestFactory$Builder.retrofit` @AccessFlag FINAL;
}
global `java.lang.String` `@@retrofit2.RequestFactory$Builder.PARAM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/RequestFactory$Builder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L36c56c.  v0:= "\\{([a-zA-Z][a-zA-Z0-9_-]*)\\}" @kind object;
  #L36c570.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L36c576.  v0:= temp @kind object;
  #L36c578.  `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L36c57c.  v0:= "[a-zA-Z][a-zA-Z0-9_-]*" @kind object;
  #L36c580.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L36c586.  v0:= temp @kind object;
  #L36c588.  `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L36c58c.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.RequestFactory$Builder` v0 @kind this, `retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36c5a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36c5a6.  v0.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` := v1 @kind object;
  #L36c5aa.  v0.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L36c5ae.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L36c5b4.  v1:= temp @kind object;
  #L36c5b6.  v0.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v1 @kind object;
  #L36c5ba.  call temp:= `getGenericParameterTypes`(v2) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L36c5c0.  v1:= temp @kind object;
  #L36c5c2.  v0.`retrofit2.RequestFactory$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v1 @kind object;
  #L36c5c6.  call temp:= `getParameterAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L36c5cc.  v1:= temp @kind object;
  #L36c5ce.  v0.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v1 @kind object;
  #L36c5d2.  return @kind void;
}
procedure `java.lang.Class` `boxIfPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L36b2a8.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2ac.  if v0 != v1 then goto L36b2b6;
  #L36b2b0.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L36b2b4.  return v1 @kind object;
  #L36b2b6.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2ba.  if v0 != v1 then goto L36b2c4;
  #L36b2be.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L36b2c2.  return v1 @kind object;
  #L36b2c4.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2c8.  if v0 != v1 then goto L36b2d2;
  #L36b2cc.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L36b2d0.  return v1 @kind object;
  #L36b2d2.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2d6.  if v0 != v1 then goto L36b2e0;
  #L36b2da.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L36b2de.  return v1 @kind object;
  #L36b2e0.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2e4.  if v0 != v1 then goto L36b2ee;
  #L36b2e8.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L36b2ec.  return v1 @kind object;
  #L36b2ee.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b2f2.  if v0 != v1 then goto L36b2fc;
  #L36b2f6.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L36b2fa.  return v1 @kind object;
  #L36b2fc.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b300.  if v0 != v1 then goto L36b30a;
  #L36b304.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L36b308.  return v1 @kind object;
  #L36b30a.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L36b30e.  if v0 != v1 then goto L36b316;
  #L36b312.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L36b316.  return v1 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.RequestFactory$Builder` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L36b370.  v0:= new `okhttp3.Headers$Builder`;
  #L36b374.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L36b37a.  v1:= length @variable v9;
  #L36b37c.  v2:= 0I;
  #L36b37e.  v3:= 0I;
  #L36b380.  if v3 >= v1 then goto L36b42a;
  #L36b384.  v4:= v9[v3] @kind object;
  #L36b388.  v5:= 58I;
  #L36b38c.  call temp:= `indexOf`(v4, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L36b392.  v5:= temp;
  #L36b394.  v6:= -1I;
  #L36b396.  v7:= 1I;
  #L36b398.  if v5 == v6 then goto L36b410;
  #L36b39c.  if v5 == 0 then goto L36b410;
  #L36b3a0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L36b3a6.  v6:= temp;
  #L36b3a8.  v6:= v6 - v7 @kind int;
  #L36b3aa.  if v5 == v6 then goto L36b410;
  #L36b3ae.  call temp:= `substring`(v4, v2, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L36b3b4.  v6:= temp @kind object;
  #L36b3b6.  v5:= v5 + 1;
  #L36b3ba.  call temp:= `substring`(v4, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L36b3c0.  v4:= temp @kind object;
  #L36b3c2.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L36b3c8.  v4:= temp @kind object;
  #L36b3ca.  v5:= "Content-Type" @kind object;
  #L36b3ce.  call temp:= `equalsIgnoreCase`(v5, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L36b3d4.  v5:= temp;
  #L36b3d6.  if v5 == 0 then goto L36b404;
  #L36b3da.  call temp:= `get`(v4) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L36b3e0.  v5:= temp @kind object;
  #L36b3e2.  v8.`retrofit2.RequestFactory$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L36b3e6.  goto L36b40a;
  #L36b3e8.  v9:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L36b3ea.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b3ee.  v1:= new `java.lang.Object`[v7];
  #L36b3f2.  v1[v2]:= v4 @kind object;
  #L36b3f6.  v2:= "Malformed content type: %s" @kind object;
  #L36b3fa.  call temp:= `methodError`(v0, v9, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b400.  v9:= temp @kind object;
  #L36b402.  throw v9;
  #L36b404.  call temp:= `add`(v0, v6, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L36b40a.  v3:= v3 + 1;
  #L36b40e.  goto L36b380;
  #L36b410.  v9:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b414.  v0:= new `java.lang.Object`[v7];
  #L36b418.  v0[v2]:= v4 @kind object;
  #L36b41c.  v1:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L36b420.  call temp:= `methodError`(v9, v1, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b426.  v9:= temp @kind object;
  #L36b428.  throw v9;
  #L36b42a.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L36b430.  v9:= temp @kind object;
  #L36b432.  return v9 @kind object;
  catch `java.lang.IllegalArgumentException` @[L36b3da..L36b3e6] goto L36b3e8;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.RequestFactory$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36c5e4.  v0:= v3.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36c5e8.  v1:= 0I;
  #L36c5ea.  v2:= 1I;
  #L36c5ec.  if v0 != 0 then goto L36c676;
  #L36c5f0.  v3.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` := v4 @kind object;
  #L36c5f4.  v3.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` := v6 @kind boolean;
  #L36c5f8.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L36c5fe.  v4:= temp;
  #L36c600.  if v4 == 0 then goto L36c606;
  #L36c604.  return @kind void;
  #L36c606.  v4:= 63I;
  #L36c60a.  call temp:= `indexOf`(v5, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L36c610.  v4:= temp;
  #L36c612.  v6:= -1I;
  #L36c614.  if v4 == v6 then goto L36c664;
  #L36c618.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L36c61e.  v6:= temp;
  #L36c620.  v6:= v6 - v2 @kind int;
  #L36c622.  if v4 >= v6 then goto L36c664;
  #L36c626.  v4:= v4 + v2 @kind int;
  #L36c628.  call temp:= `substring`(v5, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L36c62e.  v4:= temp @kind object;
  #L36c630.  v6:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L36c634.  call temp:= `matcher`(v6, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L36c63a.  v6:= temp @kind object;
  #L36c63c.  call temp:= `find`(v6) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L36c642.  v6:= temp;
  #L36c644.  if v6 != 0 then goto L36c64a;
  #L36c648.  goto L36c664;
  #L36c64a.  v5:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c64e.  v6:= new `java.lang.Object`[v2];
  #L36c652.  v6[v1]:= v4 @kind object;
  #L36c656.  v4:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L36c65a.  call temp:= `methodError`(v5, v4, v6) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c660.  v4:= temp @kind object;
  #L36c662.  throw v4;
  #L36c664.  v3.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` := v5 @kind object;
  #L36c668.  call temp:= `parsePathParameters`(v5) @signature `Lretrofit2/RequestFactory$Builder;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L36c66e.  v4:= temp @kind object;
  #L36c670.  v3.`retrofit2.RequestFactory$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v4 @kind object;
  #L36c674.  return @kind void;
  #L36c676.  v5:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c67a.  v6:= 2I;
  #L36c67c.  v6:= new `java.lang.Object`[v6];
  #L36c680.  v6[v1]:= v0 @kind object;
  #L36c684.  v6[v2]:= v4 @kind object;
  #L36c688.  v4:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L36c68c.  call temp:= `methodError`(v5, v4, v6) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c692.  v4:= temp @kind object;
  #L36c694.  throw v4;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.RequestFactory$Builder` v4 @kind this, `java.lang.annotation.Annotation` v5 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36c6a8.  v0:= instanceof @variable v5 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L36c6ac.  v1:= 0I;
  #L36c6ae.  if v0 == 0 then goto L36c6cc;
  #L36c6b2.  v5:= (`retrofit2.http.DELETE`) v5 @kind object;
  #L36c6b6.  call temp:= `value`(v5) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L36c6bc.  v5:= temp @kind object;
  #L36c6be.  v0:= "DELETE" @kind object;
  #L36c6c2.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c6c8.  goto L36c856;
  #L36c6cc.  v0:= instanceof @variable v5 @type ^`retrofit2.http.GET` @kind boolean;
  #L36c6d0.  if v0 == 0 then goto L36c6ee;
  #L36c6d4.  v5:= (`retrofit2.http.GET`) v5 @kind object;
  #L36c6d8.  call temp:= `value`(v5) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L36c6de.  v5:= temp @kind object;
  #L36c6e0.  v0:= "GET" @kind object;
  #L36c6e4.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c6ea.  goto L36c856;
  #L36c6ee.  v0:= instanceof @variable v5 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L36c6f2.  if v0 == 0 then goto L36c710;
  #L36c6f6.  v5:= (`retrofit2.http.HEAD`) v5 @kind object;
  #L36c6fa.  call temp:= `value`(v5) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L36c700.  v5:= temp @kind object;
  #L36c702.  v0:= "HEAD" @kind object;
  #L36c706.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c70c.  goto L36c856;
  #L36c710.  v0:= instanceof @variable v5 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L36c714.  v2:= 1I;
  #L36c716.  if v0 == 0 then goto L36c734;
  #L36c71a.  v5:= (`retrofit2.http.PATCH`) v5 @kind object;
  #L36c71e.  call temp:= `value`(v5) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L36c724.  v5:= temp @kind object;
  #L36c726.  v0:= "PATCH" @kind object;
  #L36c72a.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c730.  goto L36c856;
  #L36c734.  v0:= instanceof @variable v5 @type ^`retrofit2.http.POST` @kind boolean;
  #L36c738.  if v0 == 0 then goto L36c756;
  #L36c73c.  v5:= (`retrofit2.http.POST`) v5 @kind object;
  #L36c740.  call temp:= `value`(v5) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L36c746.  v5:= temp @kind object;
  #L36c748.  v0:= "POST" @kind object;
  #L36c74c.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c752.  goto L36c856;
  #L36c756.  v0:= instanceof @variable v5 @type ^`retrofit2.http.PUT` @kind boolean;
  #L36c75a.  if v0 == 0 then goto L36c778;
  #L36c75e.  v5:= (`retrofit2.http.PUT`) v5 @kind object;
  #L36c762.  call temp:= `value`(v5) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L36c768.  v5:= temp @kind object;
  #L36c76a.  v0:= "PUT" @kind object;
  #L36c76e.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c774.  goto L36c856;
  #L36c778.  v0:= instanceof @variable v5 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L36c77c.  if v0 == 0 then goto L36c798;
  #L36c780.  v5:= (`retrofit2.http.OPTIONS`) v5 @kind object;
  #L36c784.  call temp:= `value`(v5) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L36c78a.  v5:= temp @kind object;
  #L36c78c.  v0:= "OPTIONS" @kind object;
  #L36c790.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c796.  goto L36c856;
  #L36c798.  v0:= instanceof @variable v5 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L36c79c.  if v0 == 0 then goto L36c7c4;
  #L36c7a0.  v5:= (`retrofit2.http.HTTP`) v5 @kind object;
  #L36c7a4.  call temp:= `method`(v5) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L36c7aa.  v0:= temp @kind object;
  #L36c7ac.  call temp:= `path`(v5) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L36c7b2.  v1:= temp @kind object;
  #L36c7b4.  call temp:= `hasBody`(v5) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L36c7ba.  v5:= temp;
  #L36c7bc.  call `parseHttpMethodAndPath`(v4, v0, v1, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L36c7c2.  goto L36c856;
  #L36c7c4.  v0:= instanceof @variable v5 @type ^`retrofit2.http.Headers` @kind boolean;
  #L36c7c8.  if v0 == 0 then goto L36c802;
  #L36c7cc.  v5:= (`retrofit2.http.Headers`) v5 @kind object;
  #L36c7d0.  call temp:= `value`(v5) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L36c7d6.  v5:= temp @kind object;
  #L36c7d8.  v0:= length @variable v5;
  #L36c7da.  if v0 == 0 then goto L36c7ec;
  #L36c7de.  call temp:= `parseHeaders`(v4, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L36c7e4.  v5:= temp @kind object;
  #L36c7e6.  v4.`retrofit2.RequestFactory$Builder.headers` @type ^`okhttp3.Headers` := v5 @kind object;
  #L36c7ea.  goto L36c856;
  #L36c7ec.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c7f0.  v0:= new `java.lang.Object`[v1];
  #L36c7f4.  v1:= "@Headers annotation is empty." @kind object;
  #L36c7f8.  call temp:= `methodError`(v5, v1, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c7fe.  v5:= temp @kind object;
  #L36c800.  throw v5;
  #L36c802.  v0:= instanceof @variable v5 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L36c806.  v3:= "Only one encoding annotation is allowed." @kind object;
  #L36c80a.  if v0 == 0 then goto L36c82e;
  #L36c80e.  v5:= v4.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36c812.  if v5 != 0 then goto L36c81c;
  #L36c816.  v4.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` := v2 @kind boolean;
  #L36c81a.  goto L36c856;
  #L36c81c.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c820.  v0:= new `java.lang.Object`[v1];
  #L36c824.  call temp:= `methodError`(v5, v3, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c82a.  v5:= temp @kind object;
  #L36c82c.  throw v5;
  #L36c82e.  v5:= instanceof @variable v5 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L36c832.  if v5 == 0 then goto L36c856;
  #L36c836.  v5:= v4.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c83a.  if v5 != 0 then goto L36c844;
  #L36c83e.  v4.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` := v2 @kind boolean;
  #L36c842.  goto L36c856;
  #L36c844.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c848.  v0:= new `java.lang.Object`[v1];
  #L36c84c.  call temp:= `methodError`(v5, v3, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c852.  v5:= temp @kind object;
  #L36c854.  throw v5;
  #L36c856.  return @kind void;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.RequestFactory$Builder` v6 @kind this, `int` v7 , `java.lang.reflect.Type` v8 @kind object, `java.lang.annotation.Annotation`[] v9 @kind object, `boolean` v10 ) @signature `Lretrofit2/RequestFactory$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Z)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L36b454.  v0:= 0I;
  #L36b456.  v1:= 0I;
  #L36b458.  if v9 == 0 then goto L36b49a;
  #L36b45c.  v2:= length @variable v9;
  #L36b45e.  v4:= v0 @kind object;
  #L36b460.  v3:= 0I;
  #L36b462.  if v3 >= v2 then goto L36b49c;
  #L36b466.  v5:= v9[v3] @kind object;
  #L36b46a.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L36b470.  v5:= temp @kind object;
  #L36b472.  if v5 != 0 then goto L36b478;
  #L36b476.  goto L36b47e;
  #L36b478.  if v4 != 0 then goto L36b484;
  #L36b47c.  v4:= v5 @kind object;
  #L36b47e.  v3:= v3 + 1;
  #L36b482.  goto L36b462;
  #L36b484.  v8:= v6.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b488.  v9:= new `java.lang.Object`[v1];
  #L36b48c.  v10:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L36b490.  call temp:= `parameterError`(v8, v7, v10, v9) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b496.  v7:= temp @kind object;
  #L36b498.  throw v7;
  #L36b49a.  v4:= v0 @kind object;
  #L36b49c.  if v4 != 0 then goto L36b4d2;
  #L36b4a0.  if v10 == 0 then goto L36b4bc;
  #L36b4a4.  call temp:= `getRawType`(v8) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36b4aa.  v8:= temp @kind object;
  #L36b4ac.  v9:= constclass @type ^`kotlin.coroutines.Continuation` @kind object;
  #L36b4b0.  if v8 != v9 then goto L36b4bc;
  #L36b4b4.  v8:= 1I;
  #L36b4b6.  v6.`retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @type ^`boolean` := v8 @kind boolean;
  #L36b4ba.  return v0 @kind object;
  #L36b4bc.  v8:= v6.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b4c0.  v9:= new `java.lang.Object`[v1];
  #L36b4c4.  v10:= "No Retrofit annotation found." @kind object;
  #L36b4c8.  call temp:= `parameterError`(v8, v7, v10, v9) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b4ce.  v7:= temp @kind object;
  #L36b4d0.  throw v7;
  #L36b4d2.  return v4 @kind object;
  catch `java.lang.NoClassDefFoundError` @[L36b4a4..L36b4ba] goto L36b4bc;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.RequestFactory$Builder` v10 @kind this, `int` v11 , `java.lang.reflect.Type` v12 @kind object, `java.lang.annotation.Annotation`[] v13 @kind object, `java.lang.annotation.Annotation` v14 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L36b4f4.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L36b4f8.  v1:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L36b4fc.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Url` @kind boolean;
  #L36b500.  v3:= "@Path parameters may not be used with @Url." @kind object;
  #L36b504.  v4:= 1I;
  #L36b506.  v5:= 0I;
  #L36b508.  if v2 == 0 then goto L36b62e;
  #L36b50c.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36b512.  v13:= v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L36b516.  if v13 != 0 then goto L36b618;
  #L36b51a.  v13:= v10.`retrofit2.RequestFactory$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L36b51e.  if v13 != 0 then goto L36b606;
  #L36b522.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L36b526.  if v13 != 0 then goto L36b5f0;
  #L36b52a.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` @kind boolean;
  #L36b52e.  if v13 != 0 then goto L36b5da;
  #L36b532.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` @kind boolean;
  #L36b536.  if v13 != 0 then goto L36b5c4;
  #L36b53a.  v13:= v10.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36b53e.  if v13 != 0 then goto L36b5a6;
  #L36b542.  v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` := v4 @kind boolean;
  #L36b546.  v13:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L36b54a.  if v12 == v13 then goto L36b596;
  #L36b54e.  if v12 == v0 then goto L36b596;
  #L36b552.  v13:= constclass @type ^`java.net.URI` @kind object;
  #L36b556.  if v12 == v13 then goto L36b596;
  #L36b55a.  v13:= instanceof @variable v12 @type ^`java.lang.Class` @kind boolean;
  #L36b55e.  if v13 == 0 then goto L36b580;
  #L36b562.  v13:= "android.net.Uri" @kind object;
  #L36b566.  v12:= (`java.lang.Class`) v12 @kind object;
  #L36b56a.  call temp:= `getName`(v12) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36b570.  v12:= temp @kind object;
  #L36b572.  call temp:= `equals`(v13, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L36b578.  v12:= temp;
  #L36b57a.  if v12 == 0 then goto L36b580;
  #L36b57e.  goto L36b596;
  #L36b580.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b584.  v13:= new `java.lang.Object`[v5];
  #L36b588.  v14:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L36b58c.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b592.  v11:= temp @kind object;
  #L36b594.  throw v11;
  #L36b596.  v12:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L36b59a.  v13:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b59e.  call `<init>`(v12, v13, v11) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #L36b5a4.  return v12 @kind object;
  #L36b5a6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b5aa.  v13:= new `java.lang.Object`[v4];
  #L36b5ae.  v14:= v10.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36b5b2.  v13[v5]:= v14 @kind object;
  #L36b5b6.  v14:= "@Url cannot be used with @%s URL" @kind object;
  #L36b5ba.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b5c0.  v11:= temp @kind object;
  #L36b5c2.  throw v11;
  #L36b5c4.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b5c8.  v13:= new `java.lang.Object`[v5];
  #L36b5cc.  v14:= "A @Url parameter must not come after a @QueryMap." @kind object;
  #L36b5d0.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b5d6.  v11:= temp @kind object;
  #L36b5d8.  throw v11;
  #L36b5da.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b5de.  v13:= new `java.lang.Object`[v5];
  #L36b5e2.  v14:= "A @Url parameter must not come after a @QueryName." @kind object;
  #L36b5e6.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b5ec.  v11:= temp @kind object;
  #L36b5ee.  throw v11;
  #L36b5f0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b5f4.  v13:= new `java.lang.Object`[v5];
  #L36b5f8.  v14:= "A @Url parameter must not come after a @Query." @kind object;
  #L36b5fc.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b602.  v11:= temp @kind object;
  #L36b604.  throw v11;
  #L36b606.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b60a.  v13:= new `java.lang.Object`[v5];
  #L36b60e.  call temp:= `parameterError`(v12, v11, v3, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b614.  v11:= temp @kind object;
  #L36b616.  throw v11;
  #L36b618.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b61c.  v13:= new `java.lang.Object`[v5];
  #L36b620.  v14:= "Multiple @Url method annotations found." @kind object;
  #L36b624.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b62a.  v11:= temp @kind object;
  #L36b62c.  throw v11;
  #L36b62e.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Path` @kind boolean;
  #L36b632.  if v2 == 0 then goto L36b714;
  #L36b636.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36b63c.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L36b640.  if v0 != 0 then goto L36b6fe;
  #L36b644.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` @kind boolean;
  #L36b648.  if v0 != 0 then goto L36b6e8;
  #L36b64c.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` @kind boolean;
  #L36b650.  if v0 != 0 then goto L36b6d2;
  #L36b654.  v0:= v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L36b658.  if v0 != 0 then goto L36b6c0;
  #L36b65c.  v0:= v10.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36b660.  if v0 == 0 then goto L36b6a2;
  #L36b664.  v10.`retrofit2.RequestFactory$Builder.gotPath` @type ^`boolean` := v4 @kind boolean;
  #L36b668.  v14:= (`retrofit2.http.Path`) v14 @kind object;
  #L36b66c.  call temp:= `value`(v14) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L36b672.  v3:= temp @kind object;
  #L36b674.  call `validatePathName`(v10, v11, v3) @signature `Lretrofit2/RequestFactory$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L36b67a.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b67e.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b684.  v4:= temp @kind object;
  #L36b686.  v12:= new `retrofit2.ParameterHandler$Path`;
  #L36b68a.  v1:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b68e.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L36b694.  v5:= temp;
  #L36b696.  v0:= v12 @kind object;
  #L36b698.  v2:= v11;
  #L36b69a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/reflect/Method;ILjava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36b6a0.  return v12 @kind object;
  #L36b6a2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b6a6.  v13:= new `java.lang.Object`[v4];
  #L36b6aa.  v14:= v10.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36b6ae.  v13[v5]:= v14 @kind object;
  #L36b6b2.  v14:= "@Path can only be used with relative url on @%s" @kind object;
  #L36b6b6.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b6bc.  v11:= temp @kind object;
  #L36b6be.  throw v11;
  #L36b6c0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b6c4.  v13:= new `java.lang.Object`[v5];
  #L36b6c8.  call temp:= `parameterError`(v12, v11, v3, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b6ce.  v11:= temp @kind object;
  #L36b6d0.  throw v11;
  #L36b6d2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b6d6.  v13:= new `java.lang.Object`[v5];
  #L36b6da.  v14:= "A @Path parameter must not come after a @QueryMap." @kind object;
  #L36b6de.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b6e4.  v11:= temp @kind object;
  #L36b6e6.  throw v11;
  #L36b6e8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b6ec.  v13:= new `java.lang.Object`[v5];
  #L36b6f0.  v14:= "A @Path parameter must not come after a @QueryName." @kind object;
  #L36b6f4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b6fa.  v11:= temp @kind object;
  #L36b6fc.  throw v11;
  #L36b6fe.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b702.  v13:= new `java.lang.Object`[v5];
  #L36b706.  v14:= "A @Path parameter must not come after a @Query." @kind object;
  #L36b70a.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b710.  v11:= temp @kind object;
  #L36b712.  throw v11;
  #L36b714.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Query` @kind boolean;
  #L36b718.  v3:= "<String>)" @kind object;
  #L36b71c.  v6:= " must include generic type (e.g., " @kind object;
  #L36b720.  if v2 == 0 then goto L36b82e;
  #L36b724.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36b72a.  v14:= (`retrofit2.http.Query`) v14 @kind object;
  #L36b72e.  call temp:= `value`(v14) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L36b734.  v0:= temp @kind object;
  #L36b736.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L36b73c.  v14:= temp;
  #L36b73e.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36b744.  v1:= temp @kind object;
  #L36b746.  v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` := v4 @kind boolean;
  #L36b74a.  v2:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36b74e.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36b754.  v2:= temp;
  #L36b756.  if v2 == 0 then goto L36b7da;
  #L36b75a.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36b75e.  if v2 == 0 then goto L36b78e;
  #L36b762.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36b766.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36b76c.  v11:= temp @kind object;
  #L36b76e.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b772.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b778.  v11:= temp @kind object;
  #L36b77a.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L36b77e.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36b784.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36b78a.  v11:= temp @kind object;
  #L36b78c.  return v11 @kind object;
  #L36b78e.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b792.  v13:= new `java.lang.StringBuilder`;
  #L36b796.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36b79c.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36b7a2.  v14:= temp @kind object;
  #L36b7a4.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b7aa.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b7b0.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36b7b6.  v14:= temp @kind object;
  #L36b7b8.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b7be.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b7c4.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36b7ca.  v13:= temp @kind object;
  #L36b7cc.  v14:= new `java.lang.Object`[v5];
  #L36b7d0.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b7d6.  v11:= temp @kind object;
  #L36b7d8.  throw v11;
  #L36b7da.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36b7e0.  v11:= temp;
  #L36b7e2.  if v11 == 0 then goto L36b816;
  #L36b7e6.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36b7ec.  v11:= temp @kind object;
  #L36b7ee.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L36b7f4.  v11:= temp @kind object;
  #L36b7f6.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b7fa.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b800.  v11:= temp @kind object;
  #L36b802.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L36b806.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36b80c.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36b812.  v11:= temp @kind object;
  #L36b814.  return v11 @kind object;
  #L36b816.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b81a.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b820.  v11:= temp @kind object;
  #L36b822.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L36b826.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36b82c.  return v12 @kind object;
  #L36b82e.  v2:= instanceof @variable v14 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L36b832.  if v2 == 0 then goto L36b938;
  #L36b836.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36b83c.  v14:= (`retrofit2.http.QueryName`) v14 @kind object;
  #L36b840.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L36b846.  v14:= temp;
  #L36b848.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36b84e.  v0:= temp @kind object;
  #L36b850.  v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` := v4 @kind boolean;
  #L36b854.  v1:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36b858.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36b85e.  v1:= temp;
  #L36b860.  if v1 == 0 then goto L36b8e4;
  #L36b864.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36b868.  if v1 == 0 then goto L36b898;
  #L36b86c.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36b870.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36b876.  v11:= temp @kind object;
  #L36b878.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b87c.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b882.  v11:= temp @kind object;
  #L36b884.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L36b888.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L36b88e.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36b894.  v11:= temp @kind object;
  #L36b896.  return v11 @kind object;
  #L36b898.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b89c.  v13:= new `java.lang.StringBuilder`;
  #L36b8a0.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36b8a6.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36b8ac.  v14:= temp @kind object;
  #L36b8ae.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b8b4.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b8ba.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36b8c0.  v14:= temp @kind object;
  #L36b8c2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b8c8.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b8ce.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36b8d4.  v13:= temp @kind object;
  #L36b8d6.  v14:= new `java.lang.Object`[v5];
  #L36b8da.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b8e0.  v11:= temp @kind object;
  #L36b8e2.  throw v11;
  #L36b8e4.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36b8ea.  v11:= temp;
  #L36b8ec.  if v11 == 0 then goto L36b920;
  #L36b8f0.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36b8f6.  v11:= temp @kind object;
  #L36b8f8.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L36b8fe.  v11:= temp @kind object;
  #L36b900.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b904.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b90a.  v11:= temp @kind object;
  #L36b90c.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L36b910.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L36b916.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36b91c.  v11:= temp @kind object;
  #L36b91e.  return v11 @kind object;
  #L36b920.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b924.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b92a.  v11:= temp @kind object;
  #L36b92c.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L36b930.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L36b936.  return v12 @kind object;
  #L36b938.  v2:= instanceof @variable v14 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L36b93c.  v7:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L36b940.  if v2 == 0 then goto L36ba16;
  #L36b944.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36b94a.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36b950.  v1:= temp @kind object;
  #L36b952.  v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` := v4 @kind boolean;
  #L36b956.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L36b95a.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36b960.  v2:= temp;
  #L36b962.  if v2 == 0 then goto L36ba00;
  #L36b966.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L36b96a.  call temp:= `getSupertype`(v12, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L36b970.  v12:= temp @kind object;
  #L36b972.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36b976.  if v1 == 0 then goto L36b9ee;
  #L36b97a.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36b97e.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36b984.  v1:= temp @kind object;
  #L36b986.  if v0 != v1 then goto L36b9ba;
  #L36b98a.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36b990.  v12:= temp @kind object;
  #L36b992.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36b996.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36b99c.  v12:= temp @kind object;
  #L36b99e.  v13:= new `retrofit2.ParameterHandler$QueryMap`;
  #L36b9a2.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b9a6.  v14:= (`retrofit2.http.QueryMap`) v14 @kind object;
  #L36b9aa.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L36b9b0.  v14:= temp;
  #L36b9b2.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Z)V` @kind direct;
  #L36b9b8.  return v13 @kind object;
  #L36b9ba.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b9be.  v13:= new `java.lang.StringBuilder`;
  #L36b9c2.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36b9c8.  v14:= "@QueryMap keys must be of type String: " @kind object;
  #L36b9cc.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b9d2.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36b9d8.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36b9de.  v13:= temp @kind object;
  #L36b9e0.  v14:= new `java.lang.Object`[v5];
  #L36b9e4.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b9ea.  v11:= temp @kind object;
  #L36b9ec.  throw v11;
  #L36b9ee.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36b9f2.  v13:= new `java.lang.Object`[v5];
  #L36b9f6.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36b9fc.  v11:= temp @kind object;
  #L36b9fe.  throw v11;
  #L36ba00.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36ba04.  v13:= new `java.lang.Object`[v5];
  #L36ba08.  v14:= "@QueryMap parameter type must be Map." @kind object;
  #L36ba0c.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36ba12.  v11:= temp @kind object;
  #L36ba14.  throw v11;
  #L36ba16.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Header` @kind boolean;
  #L36ba1a.  if v2 == 0 then goto L36bb1c;
  #L36ba1e.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36ba24.  v14:= (`retrofit2.http.Header`) v14 @kind object;
  #L36ba28.  call temp:= `value`(v14) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L36ba2e.  v14:= temp @kind object;
  #L36ba30.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36ba36.  v0:= temp @kind object;
  #L36ba38.  v1:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36ba3c.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36ba42.  v1:= temp;
  #L36ba44.  if v1 == 0 then goto L36bac8;
  #L36ba48.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36ba4c.  if v1 == 0 then goto L36ba7c;
  #L36ba50.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36ba54.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36ba5a.  v11:= temp @kind object;
  #L36ba5c.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36ba60.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36ba66.  v11:= temp @kind object;
  #L36ba68.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L36ba6c.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L36ba72.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36ba78.  v11:= temp @kind object;
  #L36ba7a.  return v11 @kind object;
  #L36ba7c.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36ba80.  v13:= new `java.lang.StringBuilder`;
  #L36ba84.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36ba8a.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36ba90.  v14:= temp @kind object;
  #L36ba92.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36ba98.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36ba9e.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36baa4.  v14:= temp @kind object;
  #L36baa6.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36baac.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bab2.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bab8.  v13:= temp @kind object;
  #L36baba.  v14:= new `java.lang.Object`[v5];
  #L36babe.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bac4.  v11:= temp @kind object;
  #L36bac6.  throw v11;
  #L36bac8.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36bace.  v11:= temp;
  #L36bad0.  if v11 == 0 then goto L36bb04;
  #L36bad4.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36bada.  v11:= temp @kind object;
  #L36badc.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L36bae2.  v11:= temp @kind object;
  #L36bae4.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bae8.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36baee.  v11:= temp @kind object;
  #L36baf0.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L36baf4.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L36bafa.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36bb00.  v11:= temp @kind object;
  #L36bb02.  return v11 @kind object;
  #L36bb04.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bb08.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bb0e.  v11:= temp @kind object;
  #L36bb10.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L36bb14.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L36bb1a.  return v12 @kind object;
  #L36bb1c.  v2:= instanceof @variable v14 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L36bb20.  if v2 == 0 then goto L36bbfe;
  #L36bb24.  v14:= constclass @type ^`okhttp3.Headers` @kind object;
  #L36bb28.  if v12 != v14 then goto L36bb3c;
  #L36bb2c.  v12:= new `retrofit2.ParameterHandler$Headers`;
  #L36bb30.  v13:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bb34.  call `<init>`(v12, v13, v11) @signature `Lretrofit2/ParameterHandler$Headers;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #L36bb3a.  return v12 @kind object;
  #L36bb3c.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36bb42.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36bb48.  v14:= temp @kind object;
  #L36bb4a.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L36bb4e.  call temp:= `isAssignableFrom`(v1, v14) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bb54.  v1:= temp;
  #L36bb56.  if v1 == 0 then goto L36bbe8;
  #L36bb5a.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L36bb5e.  call temp:= `getSupertype`(v12, v14, v1) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L36bb64.  v12:= temp @kind object;
  #L36bb66.  v14:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36bb6a.  if v14 == 0 then goto L36bbd6;
  #L36bb6e.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36bb72.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bb78.  v14:= temp @kind object;
  #L36bb7a.  if v0 != v14 then goto L36bba2;
  #L36bb7e.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bb84.  v12:= temp @kind object;
  #L36bb86.  v14:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bb8a.  call temp:= `stringConverter`(v14, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bb90.  v12:= temp @kind object;
  #L36bb92.  v13:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L36bb96.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bb9a.  call `<init>`(v13, v14, v11, v12) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @kind direct;
  #L36bba0.  return v13 @kind object;
  #L36bba2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bba6.  v13:= new `java.lang.StringBuilder`;
  #L36bbaa.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36bbb0.  v0:= "@HeaderMap keys must be of type String: " @kind object;
  #L36bbb4.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bbba.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bbc0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bbc6.  v13:= temp @kind object;
  #L36bbc8.  v14:= new `java.lang.Object`[v5];
  #L36bbcc.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bbd2.  v11:= temp @kind object;
  #L36bbd4.  throw v11;
  #L36bbd6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bbda.  v13:= new `java.lang.Object`[v5];
  #L36bbde.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bbe4.  v11:= temp @kind object;
  #L36bbe6.  throw v11;
  #L36bbe8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bbec.  v13:= new `java.lang.Object`[v5];
  #L36bbf0.  v14:= "@HeaderMap parameter type must be Map." @kind object;
  #L36bbf4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bbfa.  v11:= temp @kind object;
  #L36bbfc.  throw v11;
  #L36bbfe.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Field` @kind boolean;
  #L36bc02.  if v2 == 0 then goto L36bd2e;
  #L36bc06.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36bc0c.  v0:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36bc10.  if v0 == 0 then goto L36bd18;
  #L36bc14.  v14:= (`retrofit2.http.Field`) v14 @kind object;
  #L36bc18.  call temp:= `value`(v14) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L36bc1e.  v0:= temp @kind object;
  #L36bc20.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L36bc26.  v14:= temp;
  #L36bc28.  v10.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` := v4 @kind boolean;
  #L36bc2c.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36bc32.  v1:= temp @kind object;
  #L36bc34.  v2:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36bc38.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bc3e.  v2:= temp;
  #L36bc40.  if v2 == 0 then goto L36bcc4;
  #L36bc44.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36bc48.  if v2 == 0 then goto L36bc78;
  #L36bc4c.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36bc50.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bc56.  v11:= temp @kind object;
  #L36bc58.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bc5c.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bc62.  v11:= temp @kind object;
  #L36bc64.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L36bc68.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36bc6e.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36bc74.  v11:= temp @kind object;
  #L36bc76.  return v11 @kind object;
  #L36bc78.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bc7c.  v13:= new `java.lang.StringBuilder`;
  #L36bc80.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36bc86.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36bc8c.  v14:= temp @kind object;
  #L36bc8e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bc94.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bc9a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36bca0.  v14:= temp @kind object;
  #L36bca2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bca8.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bcae.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bcb4.  v13:= temp @kind object;
  #L36bcb6.  v14:= new `java.lang.Object`[v5];
  #L36bcba.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bcc0.  v11:= temp @kind object;
  #L36bcc2.  throw v11;
  #L36bcc4.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36bcca.  v11:= temp;
  #L36bccc.  if v11 == 0 then goto L36bd00;
  #L36bcd0.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36bcd6.  v11:= temp @kind object;
  #L36bcd8.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L36bcde.  v11:= temp @kind object;
  #L36bce0.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bce4.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bcea.  v11:= temp @kind object;
  #L36bcec.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L36bcf0.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36bcf6.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36bcfc.  v11:= temp @kind object;
  #L36bcfe.  return v11 @kind object;
  #L36bd00.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bd04.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bd0a.  v11:= temp @kind object;
  #L36bd0c.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L36bd10.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L36bd16.  return v12 @kind object;
  #L36bd18.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bd1c.  v13:= new `java.lang.Object`[v5];
  #L36bd20.  v14:= "@Field parameters can only be used with form encoding." @kind object;
  #L36bd24.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bd2a.  v11:= temp @kind object;
  #L36bd2c.  throw v11;
  #L36bd2e.  v2:= instanceof @variable v14 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L36bd32.  if v2 == 0 then goto L36be26;
  #L36bd36.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36bd3c.  v1:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36bd40.  if v1 == 0 then goto L36be10;
  #L36bd44.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36bd4a.  v1:= temp @kind object;
  #L36bd4c.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L36bd50.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bd56.  v2:= temp;
  #L36bd58.  if v2 == 0 then goto L36bdfa;
  #L36bd5c.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L36bd60.  call temp:= `getSupertype`(v12, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L36bd66.  v12:= temp @kind object;
  #L36bd68.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36bd6c.  if v1 == 0 then goto L36bde8;
  #L36bd70.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36bd74.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bd7a.  v1:= temp @kind object;
  #L36bd7c.  if v0 != v1 then goto L36bdb4;
  #L36bd80.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bd86.  v12:= temp @kind object;
  #L36bd88.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36bd8c.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36bd92.  v12:= temp @kind object;
  #L36bd94.  v10.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` := v4 @kind boolean;
  #L36bd98.  v13:= new `retrofit2.ParameterHandler$FieldMap`;
  #L36bd9c.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bda0.  v14:= (`retrofit2.http.FieldMap`) v14 @kind object;
  #L36bda4.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L36bdaa.  v14:= temp;
  #L36bdac.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Z)V` @kind direct;
  #L36bdb2.  return v13 @kind object;
  #L36bdb4.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bdb8.  v13:= new `java.lang.StringBuilder`;
  #L36bdbc.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36bdc2.  v14:= "@FieldMap keys must be of type String: " @kind object;
  #L36bdc6.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bdcc.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bdd2.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bdd8.  v13:= temp @kind object;
  #L36bdda.  v14:= new `java.lang.Object`[v5];
  #L36bdde.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bde4.  v11:= temp @kind object;
  #L36bde6.  throw v11;
  #L36bde8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bdec.  v13:= new `java.lang.Object`[v5];
  #L36bdf0.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bdf6.  v11:= temp @kind object;
  #L36bdf8.  throw v11;
  #L36bdfa.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bdfe.  v13:= new `java.lang.Object`[v5];
  #L36be02.  v14:= "@FieldMap parameter type must be Map." @kind object;
  #L36be06.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36be0c.  v11:= temp @kind object;
  #L36be0e.  throw v11;
  #L36be10.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36be14.  v13:= new `java.lang.Object`[v5];
  #L36be18.  v14:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L36be1c.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36be22.  v11:= temp @kind object;
  #L36be24.  throw v11;
  #L36be26.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Part` @kind boolean;
  #L36be2a.  if v2 == 0 then goto L36c142;
  #L36be2e.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36be34.  v0:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36be38.  if v0 == 0 then goto L36c12c;
  #L36be3c.  v14:= (`retrofit2.http.Part`) v14 @kind object;
  #L36be40.  v10.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` := v4 @kind boolean;
  #L36be44.  call temp:= `value`(v14) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L36be4a.  v0:= temp @kind object;
  #L36be4c.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36be52.  v2:= temp @kind object;
  #L36be54.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L36be5a.  v7:= temp;
  #L36be5c.  if v7 == 0 then goto L36bf6c;
  #L36be60.  v13:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36be64.  call temp:= `isAssignableFrom`(v13, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36be6a.  v13:= temp;
  #L36be6c.  v14:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L36be70.  if v13 == 0 then goto L36bf08;
  #L36be74.  v13:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36be78.  if v13 == 0 then goto L36bebc;
  #L36be7c.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36be80.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36be86.  v12:= temp @kind object;
  #L36be88.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36be8e.  v12:= temp @kind object;
  #L36be90.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36be96.  v12:= temp;
  #L36be98.  if v12 == 0 then goto L36beaa;
  #L36be9c.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L36bea0.  call temp:= `iterable`(v11) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36bea6.  v11:= temp @kind object;
  #L36bea8.  return v11 @kind object;
  #L36beaa.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36beae.  v13:= new `java.lang.Object`[v5];
  #L36beb2.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36beb8.  v11:= temp @kind object;
  #L36beba.  throw v11;
  #L36bebc.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bec0.  v13:= new `java.lang.StringBuilder`;
  #L36bec4.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36beca.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36bed0.  v14:= temp @kind object;
  #L36bed2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bed8.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bede.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36bee4.  v14:= temp @kind object;
  #L36bee6.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36beec.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bef2.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bef8.  v13:= temp @kind object;
  #L36befa.  v14:= new `java.lang.Object`[v5];
  #L36befe.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bf04.  v11:= temp @kind object;
  #L36bf06.  throw v11;
  #L36bf08.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36bf0e.  v12:= temp;
  #L36bf10.  if v12 == 0 then goto L36bf48;
  #L36bf14.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36bf1a.  v12:= temp @kind object;
  #L36bf1c.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bf22.  v12:= temp;
  #L36bf24.  if v12 == 0 then goto L36bf36;
  #L36bf28.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L36bf2c.  call temp:= `array`(v11) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36bf32.  v11:= temp @kind object;
  #L36bf34.  return v11 @kind object;
  #L36bf36.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bf3a.  v13:= new `java.lang.Object`[v5];
  #L36bf3e.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bf44.  v11:= temp @kind object;
  #L36bf46.  throw v11;
  #L36bf48.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bf4e.  v12:= temp;
  #L36bf50.  if v12 == 0 then goto L36bf5a;
  #L36bf54.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L36bf58.  return v11 @kind object;
  #L36bf5a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36bf5e.  v13:= new `java.lang.Object`[v5];
  #L36bf62.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36bf68.  v11:= temp @kind object;
  #L36bf6a.  throw v11;
  #L36bf6c.  v7:= 4I;
  #L36bf6e.  v7:= new `java.lang.String`[v7];
  #L36bf72.  v8:= "Content-Disposition" @kind object;
  #L36bf76.  v7[v5]:= v8 @kind object;
  #L36bf7a.  v8:= new `java.lang.StringBuilder`;
  #L36bf7e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36bf84.  v9:= "form-data; name=\"" @kind object;
  #L36bf88.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bf8e.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bf94.  v0:= "\"" @kind object;
  #L36bf98.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36bf9e.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36bfa4.  v0:= temp @kind object;
  #L36bfa6.  v7[v4]:= v0 @kind object;
  #L36bfaa.  v0:= 2I;
  #L36bfac.  v4:= "Content-Transfer-Encoding" @kind object;
  #L36bfb0.  v7[v0]:= v4 @kind object;
  #L36bfb4.  v0:= 3I;
  #L36bfb6.  call temp:= `encoding`(v14) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L36bfbc.  v14:= temp @kind object;
  #L36bfbe.  v7[v0]:= v14 @kind object;
  #L36bfc2.  call temp:= `of`(v7) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L36bfc8.  v14:= temp @kind object;
  #L36bfca.  v0:= constclass @type ^`java.lang.Iterable` @kind object;
  #L36bfce.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36bfd4.  v0:= temp;
  #L36bfd6.  v4:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L36bfda.  if v0 == 0 then goto L36c08c;
  #L36bfde.  v0:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36bfe2.  if v0 == 0 then goto L36c040;
  #L36bfe6.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36bfea.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36bff0.  v12:= temp @kind object;
  #L36bff2.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36bff8.  v0:= temp @kind object;
  #L36bffa.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36c000.  v0:= temp;
  #L36c002.  if v0 != 0 then goto L36c02e;
  #L36c006.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36c00a.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c00e.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36c014.  v12:= temp @kind object;
  #L36c016.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L36c01a.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c01e.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L36c024.  call temp:= `iterable`(v13) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36c02a.  v11:= temp @kind object;
  #L36c02c.  return v11 @kind object;
  #L36c02e.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c032.  v13:= new `java.lang.Object`[v5];
  #L36c036.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c03c.  v11:= temp @kind object;
  #L36c03e.  throw v11;
  #L36c040.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c044.  v13:= new `java.lang.StringBuilder`;
  #L36c048.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36c04e.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36c054.  v14:= temp @kind object;
  #L36c056.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c05c.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c062.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L36c068.  v14:= temp @kind object;
  #L36c06a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c070.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c076.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36c07c.  v13:= temp @kind object;
  #L36c07e.  v14:= new `java.lang.Object`[v5];
  #L36c082.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c088.  v11:= temp @kind object;
  #L36c08a.  throw v11;
  #L36c08c.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L36c092.  v0:= temp;
  #L36c094.  if v0 == 0 then goto L36c0ee;
  #L36c098.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L36c09e.  v12:= temp @kind object;
  #L36c0a0.  call temp:= `boxIfPrimitive`(v12) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L36c0a6.  v12:= temp @kind object;
  #L36c0a8.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36c0ae.  v0:= temp;
  #L36c0b0.  if v0 != 0 then goto L36c0dc;
  #L36c0b4.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36c0b8.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c0bc.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36c0c2.  v12:= temp @kind object;
  #L36c0c4.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L36c0c8.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c0cc.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L36c0d2.  call temp:= `array`(v13) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L36c0d8.  v11:= temp @kind object;
  #L36c0da.  return v11 @kind object;
  #L36c0dc.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c0e0.  v13:= new `java.lang.Object`[v5];
  #L36c0e4.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c0ea.  v11:= temp @kind object;
  #L36c0ec.  throw v11;
  #L36c0ee.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36c0f4.  v0:= temp;
  #L36c0f6.  if v0 != 0 then goto L36c11a;
  #L36c0fa.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36c0fe.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c102.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36c108.  v12:= temp @kind object;
  #L36c10a.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L36c10e.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c112.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L36c118.  return v13 @kind object;
  #L36c11a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c11e.  v13:= new `java.lang.Object`[v5];
  #L36c122.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c128.  v11:= temp @kind object;
  #L36c12a.  throw v11;
  #L36c12c.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c130.  v13:= new `java.lang.Object`[v5];
  #L36c134.  v14:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L36c138.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c13e.  v11:= temp @kind object;
  #L36c140.  throw v11;
  #L36c142.  v2:= instanceof @variable v14 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L36c146.  if v2 == 0 then goto L36c268;
  #L36c14a.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36c150.  v2:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c154.  if v2 == 0 then goto L36c252;
  #L36c158.  v10.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` := v4 @kind boolean;
  #L36c15c.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36c162.  v2:= temp @kind object;
  #L36c164.  v3:= constclass @type ^`java.util.Map` @kind object;
  #L36c168.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36c16e.  v3:= temp;
  #L36c170.  if v3 == 0 then goto L36c23c;
  #L36c174.  v3:= constclass @type ^`java.util.Map` @kind object;
  #L36c178.  call temp:= `getSupertype`(v12, v2, v3) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L36c17e.  v12:= temp @kind object;
  #L36c180.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L36c184.  if v2 == 0 then goto L36c22a;
  #L36c188.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L36c18c.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36c192.  v2:= temp @kind object;
  #L36c194.  if v0 != v2 then goto L36c1f6;
  #L36c198.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L36c19e.  v12:= temp @kind object;
  #L36c1a0.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36c1a6.  v0:= temp @kind object;
  #L36c1a8.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L36c1ae.  v0:= temp;
  #L36c1b0.  if v0 != 0 then goto L36c1e0;
  #L36c1b4.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36c1b8.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c1bc.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36c1c2.  v12:= temp @kind object;
  #L36c1c4.  v14:= (`retrofit2.http.PartMap`) v14 @kind object;
  #L36c1c8.  v13:= new `retrofit2.ParameterHandler$PartMap`;
  #L36c1cc.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c1d0.  call temp:= `encoding`(v14) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L36c1d6.  v14:= temp @kind object;
  #L36c1d8.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L36c1de.  return v13 @kind object;
  #L36c1e0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c1e4.  v13:= new `java.lang.Object`[v5];
  #L36c1e8.  v14:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L36c1ec.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c1f2.  v11:= temp @kind object;
  #L36c1f4.  throw v11;
  #L36c1f6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c1fa.  v13:= new `java.lang.StringBuilder`;
  #L36c1fe.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36c204.  v14:= "@PartMap keys must be of type String: " @kind object;
  #L36c208.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c20e.  call temp:= `append`(v13, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c214.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36c21a.  v13:= temp @kind object;
  #L36c21c.  v14:= new `java.lang.Object`[v5];
  #L36c220.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c226.  v11:= temp @kind object;
  #L36c228.  throw v11;
  #L36c22a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c22e.  v13:= new `java.lang.Object`[v5];
  #L36c232.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c238.  v11:= temp @kind object;
  #L36c23a.  throw v11;
  #L36c23c.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c240.  v13:= new `java.lang.Object`[v5];
  #L36c244.  v14:= "@PartMap parameter type must be Map." @kind object;
  #L36c248.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c24e.  v11:= temp @kind object;
  #L36c250.  throw v11;
  #L36c252.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c256.  v13:= new `java.lang.Object`[v5];
  #L36c25a.  v14:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L36c25e.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c264.  v11:= temp @kind object;
  #L36c266.  throw v11;
  #L36c268.  v0:= instanceof @variable v14 @type ^`retrofit2.http.Body` @kind boolean;
  #L36c26c.  if v0 == 0 then goto L36c2fa;
  #L36c270.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36c276.  v14:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36c27a.  if v14 != 0 then goto L36c2e4;
  #L36c27e.  v14:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c282.  if v14 != 0 then goto L36c2e4;
  #L36c286.  v14:= v10.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L36c28a.  if v14 != 0 then goto L36c2ce;
  #L36c28e.  v14:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L36c292.  v0:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c296.  call temp:= `requestBodyConverter`(v14, v12, v13, v0) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L36c29c.  v12:= temp @kind object;
  #L36c29e.  v10.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` := v4 @kind boolean;
  #L36c2a2.  v13:= new `retrofit2.ParameterHandler$Body`;
  #L36c2a6.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c2aa.  call `<init>`(v13, v14, v11, v12) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @kind direct;
  #L36c2b0.  return v13 @kind object;
  #L36c2b2.  v13:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L36c2b4.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c2b8.  v0:= new `java.lang.Object`[v4];
  #L36c2bc.  v0[v5]:= v12 @kind object;
  #L36c2c0.  v12:= "Unable to create @Body converter for %s" @kind object;
  #L36c2c4.  call temp:= `parameterError`(v14, v13, v11, v12, v0) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c2ca.  v11:= temp @kind object;
  #L36c2cc.  throw v11;
  #L36c2ce.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c2d2.  v13:= new `java.lang.Object`[v5];
  #L36c2d6.  v14:= "Multiple @Body method annotations found." @kind object;
  #L36c2da.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c2e0.  v11:= temp @kind object;
  #L36c2e2.  throw v11;
  #L36c2e4.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c2e8.  v13:= new `java.lang.Object`[v5];
  #L36c2ec.  v14:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L36c2f0.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c2f6.  v11:= temp @kind object;
  #L36c2f8.  throw v11;
  #L36c2fa.  v13:= instanceof @variable v14 @type ^`retrofit2.http.Tag` @kind boolean;
  #L36c2fe.  if v13 == 0 then goto L36c3a8;
  #L36c302.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L36c308.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L36c30e.  v12:= temp @kind object;
  #L36c310.  v13:= v11 + -1;
  #L36c314.  if v13 < 0 then goto L36c39c;
  #L36c318.  v14:= v10.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L36c31c.  v14:= v14[v13] @kind object;
  #L36c320.  v0:= instanceof @variable v14 @type ^`retrofit2.ParameterHandler$Tag` @kind boolean;
  #L36c324.  if v0 == 0 then goto L36c396;
  #L36c328.  v14:= (`retrofit2.ParameterHandler$Tag`) v14 @kind object;
  #L36c32c.  v14:= v14.`retrofit2.ParameterHandler$Tag.cls` @type ^`java.lang.Class` @kind object;
  #L36c330.  call temp:= `equals`(v14, v12) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L36c336.  v14:= temp;
  #L36c338.  if v14 != 0 then goto L36c33e;
  #L36c33c.  goto L36c396;
  #L36c33e.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c342.  v0:= new `java.lang.StringBuilder`;
  #L36c346.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36c34c.  v1:= "@Tag type " @kind object;
  #L36c350.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c356.  call temp:= `getName`(v12) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36c35c.  v12:= temp @kind object;
  #L36c35e.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c364.  v12:= " is duplicate of parameter #" @kind object;
  #L36c368.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c36e.  v13:= v13 + v4 @kind int;
  #L36c370.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c376.  v12:= " and would always overwrite its value." @kind object;
  #L36c37a.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36c380.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36c386.  v12:= temp @kind object;
  #L36c388.  v13:= new `java.lang.Object`[v5];
  #L36c38c.  call temp:= `parameterError`(v14, v11, v12, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c392.  v11:= temp @kind object;
  #L36c394.  throw v11;
  #L36c396.  v13:= v13 + -1;
  #L36c39a.  goto L36c314;
  #L36c39c.  v11:= new `retrofit2.ParameterHandler$Tag`;
  #L36c3a0.  call `<init>`(v11, v12) @signature `Lretrofit2/ParameterHandler$Tag;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L36c3a6.  return v11 @kind object;
  #L36c3a8.  v11:= 0I;
  #L36c3aa.  return v11 @kind object;
  catch `java.lang.RuntimeException` @[L36c28e..L36c29e] goto L36c2b2;
}
procedure `java.util.Set` `parsePathParameters`(`java.lang.String` v2 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L36b328.  v0:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L36b32c.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L36b332.  v2:= temp @kind object;
  #L36b334.  v0:= new `java.util.LinkedHashSet`;
  #L36b338.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L36b33e.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L36b344.  v1:= temp;
  #L36b346.  if v1 == 0 then goto L36b35c;
  #L36b34a.  v1:= 1I;
  #L36b34c.  call temp:= `group`(v2, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L36b352.  v1:= temp @kind object;
  #L36b354.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36b35a.  goto L36b33e;
  #L36b35c.  return v0 @kind object;
}
procedure `void` `validatePathName`(`retrofit2.RequestFactory$Builder` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36c868.  v0:= `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L36c86c.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L36c872.  v0:= temp @kind object;
  #L36c874.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L36c87a.  v0:= temp;
  #L36c87c.  v1:= 1I;
  #L36c87e.  v2:= 0I;
  #L36c880.  v3:= 2I;
  #L36c882.  if v0 == 0 then goto L36c8ba;
  #L36c886.  v0:= v5.`retrofit2.RequestFactory$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L36c88a.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L36c890.  v0:= temp;
  #L36c892.  if v0 == 0 then goto L36c898;
  #L36c896.  return @kind void;
  #L36c898.  v0:= v5.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c89c.  v3:= new `java.lang.Object`[v3];
  #L36c8a0.  v4:= v5.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36c8a4.  v3[v2]:= v4 @kind object;
  #L36c8a8.  v3[v1]:= v7 @kind object;
  #L36c8ac.  v7:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L36c8b0.  call temp:= `parameterError`(v0, v6, v7, v3) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c8b6.  v6:= temp @kind object;
  #L36c8b8.  throw v6;
  #L36c8ba.  v0:= v5.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c8be.  v3:= new `java.lang.Object`[v3];
  #L36c8c2.  v4:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L36c8c6.  call temp:= `pattern`(v4) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L36c8cc.  v4:= temp @kind object;
  #L36c8ce.  v3[v2]:= v4 @kind object;
  #L36c8d2.  v3[v1]:= v7 @kind object;
  #L36c8d6.  v7:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L36c8da.  call temp:= `parameterError`(v0, v6, v7, v3) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c8e0.  v6:= temp @kind object;
  #L36c8e2.  throw v6;
}
procedure `void` `validateResolvableType`(`retrofit2.RequestFactory$Builder` v3 @kind this, `int` v4 , `java.lang.reflect.Type` v5 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L36c8f4.  call temp:= `hasUnresolvableType`(v5) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L36c8fa.  v0:= temp;
  #L36c8fc.  if v0 != 0 then goto L36c902;
  #L36c900.  return @kind void;
  #L36c902.  v0:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c906.  v1:= 1I;
  #L36c908.  v1:= new `java.lang.Object`[v1];
  #L36c90c.  v2:= 0I;
  #L36c90e.  v1[v2]:= v5 @kind object;
  #L36c912.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L36c916.  call temp:= `parameterError`(v0, v4, v5, v1) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c91c.  v4:= temp @kind object;
  #L36c91e.  throw v4;
}
procedure `retrofit2.RequestFactory` `build`(`retrofit2.RequestFactory$Builder` v8 @kind this) @signature `Lretrofit2/RequestFactory$Builder;.build:()Lretrofit2/RequestFactory;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L36c3cc.  v0:= v8.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L36c3d0.  v1:= length @variable v0;
  #L36c3d2.  v2:= 0I;
  #L36c3d4.  v3:= 0I;
  #L36c3d6.  if v3 >= v1 then goto L36c3ea;
  #L36c3da.  v4:= v0[v3] @kind object;
  #L36c3de.  call `parseMethodAnnotation`(v8, v4) @signature `Lretrofit2/RequestFactory$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L36c3e4.  v3:= v3 + 1;
  #L36c3e8.  goto L36c3d6;
  #L36c3ea.  v0:= v8.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36c3ee.  if v0 == 0 then goto L36c540;
  #L36c3f2.  v0:= v8.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L36c3f6.  if v0 != 0 then goto L36c438;
  #L36c3fa.  v0:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c3fe.  if v0 != 0 then goto L36c422;
  #L36c402.  v0:= v8.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36c406.  if v0 != 0 then goto L36c40c;
  #L36c40a.  goto L36c438;
  #L36c40c.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c410.  v1:= new `java.lang.Object`[v2];
  #L36c414.  v2:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L36c418.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c41e.  v0:= temp @kind object;
  #L36c420.  throw v0;
  #L36c422.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c426.  v1:= new `java.lang.Object`[v2];
  #L36c42a.  v2:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L36c42e.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c434.  v0:= temp @kind object;
  #L36c436.  throw v0;
  #L36c438.  v0:= v8.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L36c43c.  v0:= length @variable v0;
  #L36c43e.  v1:= new `retrofit2.ParameterHandler`[v0];
  #L36c442.  v8.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v1 @kind object;
  #L36c446.  v1:= v0 + -1;
  #L36c44a.  v3:= 0I;
  #L36c44c.  v4:= 1I;
  #L36c44e.  if v3 >= v0 then goto L36c480;
  #L36c452.  v5:= v8.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L36c456.  v6:= v8.`retrofit2.RequestFactory$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L36c45a.  v6:= v6[v3] @kind object;
  #L36c45e.  v7:= v8.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L36c462.  v7:= v7[v3] @kind object;
  #L36c466.  if v3 != v1 then goto L36c46c;
  #L36c46a.  goto L36c46e;
  #L36c46c.  v4:= 0I;
  #L36c46e.  call temp:= `parseParameter`(v8, v3, v6, v7, v4) @signature `Lretrofit2/RequestFactory$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Z)Lretrofit2/ParameterHandler;` @kind direct;
  #L36c474.  v4:= temp @kind object;
  #L36c476.  v5[v3]:= v4 @kind object;
  #L36c47a.  v3:= v3 + 1;
  #L36c47e.  goto L36c44c;
  #L36c480.  v0:= v8.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L36c484.  if v0 != 0 then goto L36c4b0;
  #L36c488.  v0:= v8.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L36c48c.  if v0 == 0 then goto L36c492;
  #L36c490.  goto L36c4b0;
  #L36c492.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c496.  v1:= new `java.lang.Object`[v4];
  #L36c49a.  v3:= v8.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L36c49e.  v1[v2]:= v3 @kind object;
  #L36c4a2.  v2:= "Missing either @%s URL or @Url parameter." @kind object;
  #L36c4a6.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c4ac.  v0:= temp @kind object;
  #L36c4ae.  throw v0;
  #L36c4b0.  v0:= v8.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L36c4b4.  if v0 != 0 then goto L36c4e8;
  #L36c4b8.  v1:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c4bc.  if v1 != 0 then goto L36c4e8;
  #L36c4c0.  v1:= v8.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L36c4c4.  if v1 != 0 then goto L36c4e8;
  #L36c4c8.  v1:= v8.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L36c4cc.  if v1 != 0 then goto L36c4d2;
  #L36c4d0.  goto L36c4e8;
  #L36c4d2.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c4d6.  v1:= new `java.lang.Object`[v2];
  #L36c4da.  v2:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L36c4de.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c4e4.  v0:= temp @kind object;
  #L36c4e6.  throw v0;
  #L36c4e8.  if v0 == 0 then goto L36c50c;
  #L36c4ec.  v0:= v8.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` @kind boolean;
  #L36c4f0.  if v0 == 0 then goto L36c4f6;
  #L36c4f4.  goto L36c50c;
  #L36c4f6.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c4fa.  v1:= new `java.lang.Object`[v2];
  #L36c4fe.  v2:= "Form-encoded method must contain at least one @Field." @kind object;
  #L36c502.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c508.  v0:= temp @kind object;
  #L36c50a.  throw v0;
  #L36c50c.  v0:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L36c510.  if v0 == 0 then goto L36c534;
  #L36c514.  v0:= v8.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L36c518.  if v0 == 0 then goto L36c51e;
  #L36c51c.  goto L36c534;
  #L36c51e.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c522.  v1:= new `java.lang.Object`[v2];
  #L36c526.  v2:= "Multipart method must contain at least one @Part." @kind object;
  #L36c52a.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c530.  v0:= temp @kind object;
  #L36c532.  throw v0;
  #L36c534.  v0:= new `retrofit2.RequestFactory`;
  #L36c538.  call `<init>`(v0, v8) @signature `Lretrofit2/RequestFactory;.<init>:(Lretrofit2/RequestFactory$Builder;)V` @kind direct;
  #L36c53e.  return v0 @kind object;
  #L36c540.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L36c544.  v1:= new `java.lang.Object`[v2];
  #L36c548.  v2:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L36c54c.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L36c552.  v0:= temp @kind object;
  #L36c554.  goto L36c558;
  #L36c556.  throw v0;
  #L36c558.  goto L36c556;
}
