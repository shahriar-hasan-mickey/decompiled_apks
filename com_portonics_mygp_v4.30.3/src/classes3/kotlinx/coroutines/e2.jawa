record `kotlinx.coroutines.e2` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
procedure `kotlinx.coroutines.y` `a`(`kotlinx.coroutines.z1` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.a:(Lkotlinx/coroutines/z1;)Lkotlinx/coroutines/y;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cf5d8.  v0:= new `kotlinx.coroutines.b2`;
  #L2cf5dc.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/b2;.<init>:(Lkotlinx/coroutines/z1;)V` @kind direct;
  #L2cf5e2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.y` `b`(`kotlinx.coroutines.z1` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.b:(Lkotlinx/coroutines/z1;ILjava/lang/Object;)Lkotlinx/coroutines/y;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2cf5b4.  v1:= v1 ^& 1;
  #L2cf5b8.  if v1 == 0 then goto L2cf5be;
  #L2cf5bc.  v0:= 0I;
  #L2cf5be.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/c2;.a:(Lkotlinx/coroutines/z1;)Lkotlinx/coroutines/y;` @kind static;
  #L2cf5c4.  v0:= temp @kind object;
  #L2cf5c6.  return v0 @kind object;
}
procedure `void` `c`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.c:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cf684.  v0:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2cf688.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2cf68e.  v1:= temp @kind object;
  #L2cf690.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2cf694.  if v1 != 0 then goto L2cf69a;
  #L2cf698.  goto L2cf6a0;
  #L2cf69a.  call `d`(v1, v2) @signature `Lkotlinx/coroutines/z1;.d:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L2cf6a0.  return @kind void;
}
procedure `void` `d`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.d:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2cf660.  v2:= v2 ^& 1;
  #L2cf664.  if v2 == 0 then goto L2cf66a;
  #L2cf668.  v1:= 0I;
  #L2cf66a.  call `c`(v0, v1) @signature `Lkotlinx/coroutines/c2;.c:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L2cf670.  return @kind void;
}
procedure `kotlinx.coroutines.z0` `e`(`kotlinx.coroutines.z1` v1 @kind object, `kotlinx.coroutines.z0` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.e:(Lkotlinx/coroutines/z1;Lkotlinx/coroutines/z0;)Lkotlinx/coroutines/z0;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cf5f4.  v0:= new `kotlinx.coroutines.b1`;
  #L2cf5f8.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/b1;.<init>:(Lkotlinx/coroutines/z0;)V` @kind direct;
  #L2cf5fe.  call temp:= `x`(v1, v0) @signature `Lkotlinx/coroutines/z1;.x:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/z0;` @kind interface;
  #L2cf604.  v1:= temp @kind object;
  #L2cf606.  return v1 @kind object;
}
procedure `void` `f`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.f:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cf6b4.  v0:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2cf6b8.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2cf6be.  v1:= temp @kind object;
  #L2cf6c0.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2cf6c4.  if v1 != 0 then goto L2cf6ca;
  #L2cf6c8.  goto L2cf6d0;
  #L2cf6ca.  call `h`(v1) @signature `Lkotlinx/coroutines/c2;.h:(Lkotlinx/coroutines/z1;)V` @kind static;
  #L2cf6d0.  return @kind void;
}
procedure `void` `g`(`kotlinx.coroutines.z1` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.g:(Lkotlinx/coroutines/z1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cf6e4.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/z1;.a:()Z` @kind interface;
  #L2cf6ea.  v0:= temp;
  #L2cf6ec.  if v0 == 0 then goto L2cf6f2;
  #L2cf6f0.  return @kind void;
  #L2cf6f2.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/z1;.o:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L2cf6f8.  v1:= temp @kind object;
  #L2cf6fa.  throw v1;
}
procedure `kotlinx.coroutines.z1` `h`(`kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.h:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z1;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2cf618.  v0:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2cf61c.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2cf622.  v0:= temp @kind object;
  #L2cf624.  v0:= (`kotlinx.coroutines.z1`) v0 @kind object;
  #L2cf628.  if v0 == 0 then goto L2cf62e;
  #L2cf62c.  return v0 @kind object;
  #L2cf62e.  v0:= new `java.lang.IllegalStateException`;
  #L2cf632.  v1:= "Current context doesn't contain Job in it: " @kind object;
  #L2cf636.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cf63c.  v2:= temp @kind object;
  #L2cf63e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cf644.  v2:= temp @kind object;
  #L2cf646.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cf64c.  throw v0;
}
