record `kotlinx.coroutines.CoroutineStart$a` @kind class @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.CoroutineStart$a.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineStart$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2cc4c0.  call temp:= `values`() @signature `Lkotlinx/coroutines/CoroutineStart;.values:()[Lkotlinx/coroutines/CoroutineStart;` @kind static;
  #L2cc4c6.  v0:= temp @kind object;
  #L2cc4c8.  v0:= length @variable v0;
  #L2cc4ca.  v0:= new `int`[v0];
  #L2cc4ce.  v1:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L2cc4d2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2cc4d8.  v1:= temp;
  #L2cc4da.  v2:= 1I;
  #L2cc4dc.  v0[v1]:= v2;
  #L2cc4e0.  v1:= `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L2cc4e4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2cc4ea.  v1:= temp;
  #L2cc4ec.  v2:= 2I;
  #L2cc4ee.  v0[v1]:= v2;
  #L2cc4f2.  v1:= `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L2cc4f6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2cc4fc.  v1:= temp;
  #L2cc4fe.  v2:= 3I;
  #L2cc500.  v0[v1]:= v2;
  #L2cc504.  v1:= `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L2cc508.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2cc50e.  v1:= temp;
  #L2cc510.  v2:= 4I;
  #L2cc512.  v0[v1]:= v2;
  #L2cc516.  `@@kotlinx.coroutines.CoroutineStart$a.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L2cc51a.  return @kind void;
}
