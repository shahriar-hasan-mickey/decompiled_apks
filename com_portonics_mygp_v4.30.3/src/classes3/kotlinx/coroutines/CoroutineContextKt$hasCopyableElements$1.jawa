record `kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` `@@kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cbb00.  v0:= new `kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1`;
  #L2cbb04.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.<init>:()V` @kind direct;
  #L2cbb0a.  `@@kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1.INSTANCE` @type ^`kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` := v0 @kind object;
  #L2cbb0e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2cbb20.  v0:= 2I;
  #L2cbb22.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2cbb28.  return @kind void;
}
procedure `java.lang.Boolean` `invoke`(`kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` v0 @kind this, `boolean` v1 , `kotlin.coroutines.CoroutineContext$Element` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.invoke:(ZLkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2cbab0.  if v1 != 0 then goto L2cbab8;
  #L2cbab4.  v1:= 0I;
  #L2cbab6.  goto L2cbaba;
  #L2cbab8.  v1:= 1I;
  #L2cbaba.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2cbac0.  v1:= temp @kind object;
  #L2cbac2.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cbad4.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L2cbad8.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2cbade.  v1:= temp;
  #L2cbae0.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2cbae4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt$hasCopyableElements$1;.invoke:(ZLkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Boolean;` @kind virtual;
  #L2cbaea.  v1:= temp @kind object;
  #L2cbaec.  return v1 @kind object;
}
