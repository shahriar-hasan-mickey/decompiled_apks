record `kotlinx.coroutines.sync.MutexKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.MutexKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.MutexKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.MutexKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.MutexKt.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.a` `@@kotlinx.coroutines.sync.MutexKt.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.a` `@@kotlinx.coroutines.sync.MutexKt.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/sync/MutexKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2f0204.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f0208.  v1:= "LOCK_FAIL" @kind object;
  #L2f020c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0212.  `@@kotlinx.coroutines.sync.MutexKt.a` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f0216.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f021a.  v1:= "UNLOCK_FAIL" @kind object;
  #L2f021e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0224.  `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f0228.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f022c.  v1:= "LOCKED" @kind object;
  #L2f0230.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0236.  `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f023a.  v1:= new `kotlinx.coroutines.internal.k0`;
  #L2f023e.  v2:= "UNLOCKED" @kind object;
  #L2f0242.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0248.  `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.k0` := v1 @kind object;
  #L2f024c.  v2:= new `kotlinx.coroutines.sync.a`;
  #L2f0250.  call `<init>`(v2, v0) @signature `Lkotlinx/coroutines/sync/a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2f0256.  `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.sync.a` := v2 @kind object;
  #L2f025a.  v0:= new `kotlinx.coroutines.sync.a`;
  #L2f025e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2f0264.  `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.a` := v0 @kind object;
  #L2f0268.  return @kind void;
}
procedure `kotlinx.coroutines.sync.b` `a`(`boolean` v1 ) @signature `Lkotlinx/coroutines/sync/MutexKt;.a:(Z)Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2f01e8.  v0:= new `kotlinx.coroutines.sync.MutexImpl`;
  #L2f01ec.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/MutexImpl;.<init>:(Z)V` @kind direct;
  #L2f01f2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.b` `b`(`boolean` v0 , `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.b:(ZILjava/lang/Object;)Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2f01c4.  v1:= v1 ^& 1;
  #L2f01c8.  if v1 == 0 then goto L2f01ce;
  #L2f01cc.  v0:= 0I;
  #L2f01ce.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/sync/MutexKt;.a:(Z)Lkotlinx/coroutines/sync/b;` @kind static;
  #L2f01d4.  v0:= temp @kind object;
  #L2f01d6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.a` `c`() @signature `Lkotlinx/coroutines/sync/MutexKt;.c:()Lkotlinx/coroutines/sync/a;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2f0194.  v0:= `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.sync.a` @kind object;
  #L2f0198.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.a` `d`() @signature `Lkotlinx/coroutines/sync/MutexKt;.d:()Lkotlinx/coroutines/sync/a;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2f01ac.  v0:= `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.a` @kind object;
  #L2f01b0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.k0` `e`() @signature `Lkotlinx/coroutines/sync/MutexKt;.e:()Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2f014c.  v0:= `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2f0150.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.k0` `f`() @signature `Lkotlinx/coroutines/sync/MutexKt;.f:()Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2f0164.  v0:= `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2f0168.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.k0` `g`() @signature `Lkotlinx/coroutines/sync/MutexKt;.g:()Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2f017c.  v0:= `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2f0180.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`kotlinx.coroutines.sync.b` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlin.jvm.functions.Function0` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.h:(Lkotlinx/coroutines/sync/b;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f0060.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.sync.MutexKt$withLock$1` @kind boolean;
  #L2f0064.  if v0 == 0 then goto L2f0086;
  #L2f0068.  v0:= v7 @kind object;
  #L2f006a.  v0:= (`kotlinx.coroutines.sync.MutexKt$withLock$1`) v0 @kind object;
  #L2f006e.  v1:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.label` @type ^`int`;
  #L2f0072.  v2:= -2147483648I;
  #L2f0076.  v3:= v1 ^& v2 @kind int;
  #L2f007a.  if v3 == 0 then goto L2f0086;
  #L2f007e.  v1:= v1 - v2 @kind int;
  #L2f0080.  v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.label` @type ^`int` := v1;
  #L2f0084.  goto L2f0090;
  #L2f0086.  v0:= new `kotlinx.coroutines.sync.MutexKt$withLock$1`;
  #L2f008a.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/sync/MutexKt$withLock$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2f0090.  v7:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.result` @type ^`java.lang.Object` @kind object;
  #L2f0094.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2f009a.  v1:= temp @kind object;
  #L2f009c.  v2:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.label` @type ^`int`;
  #L2f00a0.  v3:= 1I;
  #L2f00a2.  if v2 == 0 then goto L2f00d8;
  #L2f00a6.  if v2 != v3 then goto L2f00c8;
  #L2f00aa.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$2` @type ^`java.lang.Object` @kind object;
  #L2f00ae.  v6:= v4 @kind object;
  #L2f00b0.  v6:= (`kotlin.jvm.functions.Function0`) v6 @kind object;
  #L2f00b4.  v5:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2f00b8.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2f00bc.  v4:= (`kotlinx.coroutines.sync.b`) v4 @kind object;
  #L2f00c0.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2f00c6.  goto L2f00fc;
  #L2f00c8.  v4:= new `java.lang.IllegalStateException`;
  #L2f00cc.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2f00d0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f00d6.  throw v4;
  #L2f00d8.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2f00de.  v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2f00e2.  v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$1` @type ^`java.lang.Object` := v5 @kind object;
  #L2f00e6.  v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.L$2` @type ^`java.lang.Object` := v6 @kind object;
  #L2f00ea.  v0.`kotlinx.coroutines.sync.MutexKt$withLock$1.label` @type ^`int` := v3;
  #L2f00ee.  call temp:= `a`(v4, v5, v0) @signature `Lkotlinx/coroutines/sync/b;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2f00f4.  v7:= temp @kind object;
  #L2f00f6.  if v7 != v1 then goto L2f00fc;
  #L2f00fa.  return v1 @kind object;
  #L2f00fc.  call temp:= `invoke`(v6) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2f0102.  v6:= temp @kind object;
  #L2f0104.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L2f010a.  call `b`(v4, v5) @signature `Lkotlinx/coroutines/sync/b;.b:(Ljava/lang/Object;)V` @kind interface;
  #L2f0110.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L2f0116.  return v6 @kind object;
  #L2f0118.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f011a.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L2f0120.  call `b`(v4, v5) @signature `Lkotlinx/coroutines/sync/b;.b:(Ljava/lang/Object;)V` @kind interface;
  #L2f0126.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L2f012c.  throw v6;
  catch `java.lang.Throwable` @[L2f00fc..L2f0104] goto L2f0118;
}
