record `kotlinx.coroutines.sync.SemaphoreKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int` `@@kotlinx.coroutines.sync.SemaphoreKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.SemaphoreKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.SemaphoreKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.SemaphoreKt.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.sync.SemaphoreKt.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlinx.coroutines.sync.SemaphoreKt.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/sync/SemaphoreKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2f03f8.  v0:= "kotlinx.coroutines.semaphore.maxSpinCycles" @kind object;
  #L2f03fc.  v1:= 100I;
  #L2f0400.  v2:= 0I;
  #L2f0402.  v3:= 0I;
  #L2f0404.  v4:= 12I;
  #L2f0408.  v5:= 0I;
  #L2f040a.  call temp:= `f`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/internal/l0;.f:(Ljava/lang/String;IIIILjava/lang/Object;)I` @kind static;
  #L2f0410.  v0:= temp;
  #L2f0412.  `@@kotlinx.coroutines.sync.SemaphoreKt.a` @type ^`int` := v0;
  #L2f0416.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f041a.  v1:= "PERMIT" @kind object;
  #L2f041e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0424.  `@@kotlinx.coroutines.sync.SemaphoreKt.b` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f0428.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f042c.  v1:= "TAKEN" @kind object;
  #L2f0430.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0436.  `@@kotlinx.coroutines.sync.SemaphoreKt.c` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f043a.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f043e.  v1:= "BROKEN" @kind object;
  #L2f0442.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0448.  `@@kotlinx.coroutines.sync.SemaphoreKt.d` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f044c.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2f0450.  v1:= "CANCELLED" @kind object;
  #L2f0454.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f045a.  `@@kotlinx.coroutines.sync.SemaphoreKt.e` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2f045e.  v2:= "kotlinx.coroutines.semaphore.segmentSize" @kind object;
  #L2f0462.  v3:= 16I;
  #L2f0466.  v4:= 0I;
  #L2f0468.  v5:= 0I;
  #L2f046a.  v6:= 12I;
  #L2f046e.  v7:= 0I;
  #L2f0470.  call temp:= `f`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/internal/l0;.f:(Ljava/lang/String;IIIILjava/lang/Object;)I` @kind static;
  #L2f0476.  v0:= temp;
  #L2f0478.  `@@kotlinx.coroutines.sync.SemaphoreKt.f` @type ^`int` := v0;
  #L2f047c.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.sync.e` v4 @kind object, `kotlin.jvm.functions.Function0` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreKt;.a:(Lkotlinx/coroutines/sync/e;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f0314.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1` @kind boolean;
  #L2f0318.  if v0 == 0 then goto L2f033a;
  #L2f031c.  v0:= v6 @kind object;
  #L2f031e.  v0:= (`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1`) v0 @kind object;
  #L2f0322.  v1:= v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label` @type ^`int`;
  #L2f0326.  v2:= -2147483648I;
  #L2f032a.  v3:= v1 ^& v2 @kind int;
  #L2f032e.  if v3 == 0 then goto L2f033a;
  #L2f0332.  v1:= v1 - v2 @kind int;
  #L2f0334.  v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label` @type ^`int` := v1;
  #L2f0338.  goto L2f0344;
  #L2f033a.  v0:= new `kotlinx.coroutines.sync.SemaphoreKt$withPermit$1`;
  #L2f033e.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/sync/SemaphoreKt$withPermit$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2f0344.  v6:= v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.result` @type ^`java.lang.Object` @kind object;
  #L2f0348.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2f034e.  v1:= temp @kind object;
  #L2f0350.  v2:= v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label` @type ^`int`;
  #L2f0354.  v3:= 1I;
  #L2f0356.  if v2 == 0 then goto L2f0388;
  #L2f035a.  if v2 != v3 then goto L2f0378;
  #L2f035e.  v4:= v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2f0362.  v5:= v4 @kind object;
  #L2f0364.  v5:= (`kotlin.jvm.functions.Function0`) v5 @kind object;
  #L2f0368.  v4:= v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2f036c.  v4:= (`kotlinx.coroutines.sync.e`) v4 @kind object;
  #L2f0370.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2f0376.  goto L2f03a8;
  #L2f0378.  v4:= new `java.lang.IllegalStateException`;
  #L2f037c.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2f0380.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f0386.  throw v4;
  #L2f0388.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2f038e.  v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2f0392.  v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.L$1` @type ^`java.lang.Object` := v5 @kind object;
  #L2f0396.  v0.`kotlinx.coroutines.sync.SemaphoreKt$withPermit$1.label` @type ^`int` := v3;
  #L2f039a.  call temp:= `a`(v4, v0) @signature `Lkotlinx/coroutines/sync/e;.a:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2f03a0.  v6:= temp @kind object;
  #L2f03a2.  if v6 != v1 then goto L2f03a8;
  #L2f03a6.  return v1 @kind object;
  #L2f03a8.  call temp:= `invoke`(v5) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2f03ae.  v5:= temp @kind object;
  #L2f03b0.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L2f03b6.  call `release`(v4) @signature `Lkotlinx/coroutines/sync/e;.release:()V` @kind interface;
  #L2f03bc.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L2f03c2.  return v5 @kind object;
  #L2f03c4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f03c6.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L2f03cc.  call `release`(v4) @signature `Lkotlinx/coroutines/sync/e;.release:()V` @kind interface;
  #L2f03d2.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L2f03d8.  throw v5;
  catch `java.lang.Throwable` @[L2f03a8..L2f03b0] goto L2f03c4;
}
