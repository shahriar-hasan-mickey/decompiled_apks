record `kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlinx.coroutines.sync.f` `kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1` v0 @kind this, `kotlinx.coroutines.sync.f` v1 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreImpl$onCancellationRelease$1;.<init>:(Lkotlinx/coroutines/sync/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f029c.  v1:= 1I;
  #L2f029e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2f02a4.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreImpl$onCancellationRelease$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f027c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2f0280.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/sync/SemaphoreImpl$onCancellationRelease$1;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2f0286.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2f028a.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreImpl$onCancellationRelease$1;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f02b8.  v1:= 0I;
  #L2f02ba.  throw v1;
}
