record `kotlinx.coroutines.h0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cc118.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandler.l0` @type ^`kotlinx.coroutines.f0` @kind object;
  #L2cc11c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2cc122.  v0:= temp @kind object;
  #L2cc124.  v0:= (`kotlinx.coroutines.CoroutineExceptionHandler`) v0 @kind object;
  #L2cc128.  if v0 != 0 then goto L2cc134;
  #L2cc12c.  call `a`(v1, v2) @signature `Lkotlinx/coroutines/g0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2cc132.  return @kind void;
  #L2cc134.  call `handleException`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler;.handleException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind interface;
  #L2cc13a.  return @kind void;
  #L2cc13c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cc13e.  call temp:= `b`(v2, v0) @signature `Lkotlinx/coroutines/h0;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2cc144.  v2:= temp @kind object;
  #L2cc146.  call `a`(v1, v2) @signature `Lkotlinx/coroutines/g0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2cc14c.  return @kind void;
  catch `java.lang.Throwable` @[L2cc118..L2cc128] goto L2cc13c;
  catch `java.lang.Throwable` @[L2cc134..L2cc13a] goto L2cc13c;
}
procedure `java.lang.Throwable` `b`(`java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/h0;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2cc0ec.  if v2 != v3 then goto L2cc0f2;
  #L2cc0f0.  return v2 @kind object;
  #L2cc0f2.  v0:= new `java.lang.RuntimeException`;
  #L2cc0f6.  v1:= "Exception while trying to handle coroutine exception" @kind object;
  #L2cc0fa.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2cc100.  call `addSuppressed`(v0, v2) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L2cc106.  return v0 @kind object;
}
