record `kotlinx.coroutines.selects.d` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.f0` @kind class {
  `kotlinx.coroutines.internal.v` `kotlinx.coroutines.selects.d.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.selects.d` v0 @kind this, `kotlinx.coroutines.internal.v` v1 @kind object) @signature `Lkotlinx/coroutines/selects/d;.<init>:(Lkotlinx/coroutines/internal/v;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ee9a0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/f0;.<init>:()V` @kind direct;
  #L2ee9a6.  v0.`kotlinx.coroutines.selects.d.a` @type ^`kotlinx.coroutines.internal.v` := v1 @kind object;
  #L2ee9aa.  return @kind void;
}
procedure `kotlinx.coroutines.internal.d` `a`(`kotlinx.coroutines.selects.d` v1 @kind this) @signature `Lkotlinx/coroutines/selects/d;.a:()Lkotlinx/coroutines/internal/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ee980.  v0:= v1.`kotlinx.coroutines.selects.d.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L2ee984.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2ee98a.  v0:= temp @kind object;
  #L2ee98c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.selects.d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/selects/d;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ee920.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.selects.SelectBuilderImpl<*>" @kind object;
  #L2ee924.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2ee92a.  v4:= (`kotlinx.coroutines.selects.e`) v4 @kind object;
  #L2ee92e.  v0:= v3.`kotlinx.coroutines.selects.d.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L2ee932.  call `d`(v0) @signature `Lkotlinx/coroutines/internal/v;.d:()V` @kind virtual;
  #L2ee938.  v0:= v3.`kotlinx.coroutines.selects.d.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L2ee93c.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2ee942.  v0:= temp @kind object;
  #L2ee944.  v1:= 0I;
  #L2ee946.  call temp:= `e`(v0, v1) @signature `Lkotlinx/coroutines/internal/d;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ee94c.  v0:= temp @kind object;
  #L2ee94e.  if v0 != 0 then goto L2ee95c;
  #L2ee952.  v1:= v3.`kotlinx.coroutines.selects.d.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L2ee956.  v1:= v1.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2ee95a.  goto L2ee964;
  #L2ee95c.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2ee962.  v1:= temp @kind object;
  #L2ee964.  v2:= `@@kotlinx.coroutines.selects.e.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ee968.  call temp:= `compareAndSet`(v2, v4, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ee96e.  return v0 @kind object;
}
