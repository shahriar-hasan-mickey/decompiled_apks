record `kotlinx.coroutines.selects.e` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.r` @kind class, `kotlinx.coroutines.selects.a` @kind interface, `kotlinx.coroutines.selects.j` @kind interface, `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.selects.e._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.e._result` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.e._state` @AccessFlag VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.selects.e.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.e.e` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.e.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/selects/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2eedb0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L2eedb4.  v1:= constclass @type ^`kotlinx.coroutines.selects.e` @kind object;
  #L2eedb8.  v2:= "_state" @kind object;
  #L2eedbc.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L2eedc2.  v2:= temp @kind object;
  #L2eedc4.  `@@kotlinx.coroutines.selects.e.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L2eedc8.  v2:= "_result" @kind object;
  #L2eedcc.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L2eedd2.  v0:= temp @kind object;
  #L2eedd4.  `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L2eedd8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.selects.e` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/selects/e;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2eedec.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/r;.<init>:()V` @kind direct;
  #L2eedf2.  v0.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L2eedf6.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2eedfc.  v1:= temp @kind object;
  #L2eedfe.  v0.`kotlinx.coroutines.selects.e._state` @type ^`java.lang.Object` := v1 @kind object;
  #L2eee02.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2eee08.  v1:= temp @kind object;
  #L2eee0a.  v0.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` := v1 @kind object;
  #L2eee0e.  v1:= 0I;
  #L2eee10.  v0.`kotlinx.coroutines.selects.e._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L2eee14.  return @kind void;
}
procedure `void` `T`(`kotlinx.coroutines.selects.e` v0 @kind object) @signature `Lkotlinx/coroutines/selects/e;.T:(Lkotlinx/coroutines/selects/e;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2eee28.  call `U`(v0) @signature `Lkotlinx/coroutines/selects/e;.U:()V` @kind direct;
  #L2eee2e.  return @kind void;
}
procedure `void` `U`(`kotlinx.coroutines.selects.e` v2 @kind this) @signature `Lkotlinx/coroutines/selects/e;.U:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2eee84.  call temp:= `V`(v2) @signature `Lkotlinx/coroutines/selects/e;.V:()Lkotlinx/coroutines/z0;` @kind direct;
  #L2eee8a.  v0:= temp @kind object;
  #L2eee8c.  if v0 != 0 then goto L2eee92;
  #L2eee90.  goto L2eee98;
  #L2eee92.  call `dispose`(v0) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2eee98.  call temp:= `G`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.G:()Ljava/lang/Object;` @kind virtual;
  #L2eee9e.  v0:= temp @kind object;
  #L2eeea0.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L2eeea4.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2eeeaa.  v1:= temp;
  #L2eeeac.  if v1 != 0 then goto L2eeed2;
  #L2eeeb0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.selects.c` @kind boolean;
  #L2eeeb4.  if v1 == 0 then goto L2eeec8;
  #L2eeeb8.  v1:= v0 @kind object;
  #L2eeeba.  v1:= (`kotlinx.coroutines.selects.c`) v1 @kind object;
  #L2eeebe.  v1:= v1.`kotlinx.coroutines.selects.c.e` @type ^`kotlinx.coroutines.z0` @kind object;
  #L2eeec2.  call `dispose`(v1) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2eeec8.  call temp:= `H`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.H:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L2eeece.  v0:= temp @kind object;
  #L2eeed0.  goto L2eeea4;
  #L2eeed2.  return @kind void;
}
procedure `kotlinx.coroutines.z0` `V`(`kotlinx.coroutines.selects.e` v1 @kind this) @signature `Lkotlinx/coroutines/selects/e;.V:()Lkotlinx/coroutines/z0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2eed94.  v0:= v1.`kotlinx.coroutines.selects.e._parentHandle` @type ^`java.lang.Object` @kind object;
  #L2eed98.  v0:= (`kotlinx.coroutines.z0`) v0 @kind object;
  #L2eed9c.  return v0 @kind object;
}
procedure `void` `Y`(`kotlinx.coroutines.selects.e` v7 @kind this) @signature `Lkotlinx/coroutines/selects/e;.Y:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2eef80.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/selects/e;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2eef86.  v0:= temp @kind object;
  #L2eef88.  v1:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2eef8c.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2eef92.  v0:= temp @kind object;
  #L2eef94.  v1:= v0 @kind object;
  #L2eef96.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2eef9a.  if v1 != 0 then goto L2eefa0;
  #L2eef9e.  return @kind void;
  #L2eefa0.  v2:= 1I;
  #L2eefa2.  v3:= 0I;
  #L2eefa4.  v4:= new `kotlinx.coroutines.selects.e$a`;
  #L2eefa8.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/selects/e$a;.<init>:(Lkotlinx/coroutines/selects/e;)V` @kind direct;
  #L2eefae.  v5:= 2I;
  #L2eefb0.  v6:= 0I;
  #L2eefb2.  call temp:= `d`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/x1;.d:(Lkotlinx/coroutines/z1;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/z0;` @kind static;
  #L2eefb8.  v0:= temp @kind object;
  #L2eefba.  call `Z`(v7, v0) @signature `Lkotlinx/coroutines/selects/e;.Z:(Lkotlinx/coroutines/z0;)V` @kind direct;
  #L2eefc0.  call temp:= `h`(v7) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2eefc6.  v1:= temp;
  #L2eefc8.  if v1 == 0 then goto L2eefd2;
  #L2eefcc.  call `dispose`(v0) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2eefd2.  return @kind void;
}
procedure `void` `Z`(`kotlinx.coroutines.selects.e` v0 @kind this, `kotlinx.coroutines.z0` v1 @kind object) @signature `Lkotlinx/coroutines/selects/e;.Z:(Lkotlinx/coroutines/z0;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L2ef284.  v0.`kotlinx.coroutines.selects.e._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L2ef288.  return @kind void;
}
procedure `java.lang.Object` `W`(`kotlinx.coroutines.selects.e` v3 @kind this) @signature `Lkotlinx/coroutines/selects/e;.W:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2eeb18.  call temp:= `h`(v3) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2eeb1e.  v0:= temp;
  #L2eeb20.  if v0 != 0 then goto L2eeb2a;
  #L2eeb24.  call `Y`(v3) @signature `Lkotlinx/coroutines/selects/e;.Y:()V` @kind direct;
  #L2eeb2a.  v0:= v3.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` @kind object;
  #L2eeb2e.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2eeb34.  v1:= temp @kind object;
  #L2eeb36.  if v0 != v1 then goto L2eeb68;
  #L2eeb3a.  v0:= `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2eeb3e.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2eeb44.  v1:= temp @kind object;
  #L2eeb46.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2eeb4c.  v2:= temp @kind object;
  #L2eeb4e.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2eeb54.  v0:= temp;
  #L2eeb56.  if v0 == 0 then goto L2eeb64;
  #L2eeb5a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2eeb60.  v0:= temp @kind object;
  #L2eeb62.  return v0 @kind object;
  #L2eeb64.  v0:= v3.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` @kind object;
  #L2eeb68.  call temp:= `a`() @signature `Lkotlinx/coroutines/selects/k;.a:()Ljava/lang/Object;` @kind static;
  #L2eeb6e.  v1:= temp @kind object;
  #L2eeb70.  if v0 == v1 then goto L2eeb88;
  #L2eeb74.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2eeb78.  if v1 != 0 then goto L2eeb7e;
  #L2eeb7c.  return v0 @kind object;
  #L2eeb7e.  v0:= (`kotlinx.coroutines.a0`) v0 @kind object;
  #L2eeb82.  v0:= v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2eeb86.  throw v0;
  #L2eeb88.  v0:= new `java.lang.IllegalStateException`;
  #L2eeb8c.  v1:= "Already resumed" @kind object;
  #L2eeb90.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2eeb96.  throw v0;
}
procedure `void` `X`(`kotlinx.coroutines.selects.e` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/selects/e;.X:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2eeee4.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/selects/e;.e:()Z` @kind virtual;
  #L2eeeea.  v0:= temp;
  #L2eeeec.  if v0 == 0 then goto L2eef0c;
  #L2eeef0.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2eeef4.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2eeefa.  v3:= temp @kind object;
  #L2eeefc.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eef02.  v3:= temp @kind object;
  #L2eef04.  call `resumeWith`(v2, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2eef0a.  goto L2eef6c;
  #L2eef0c.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L2eef10.  if v0 != 0 then goto L2eef6c;
  #L2eef14.  call temp:= `W`(v2) @signature `Lkotlinx/coroutines/selects/e;.W:()Ljava/lang/Object;` @kind virtual;
  #L2eef1a.  v0:= temp @kind object;
  #L2eef1c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2eef20.  if v1 == 0 then goto L2eef5e;
  #L2eef24.  v0:= (`kotlinx.coroutines.a0`) v0 @kind object;
  #L2eef28.  v0:= v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2eef2c.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2eef32.  v1:= temp;
  #L2eef34.  if v1 != 0 then goto L2eef3a;
  #L2eef38.  goto L2eef42;
  #L2eef3a.  call temp:= `n`(v0) @signature `Lkotlinx/coroutines/internal/j0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eef40.  v0:= temp @kind object;
  #L2eef42.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2eef48.  v1:= temp;
  #L2eef4a.  if v1 != 0 then goto L2eef52;
  #L2eef4e.  v1:= v3 @kind object;
  #L2eef50.  goto L2eef5a;
  #L2eef52.  call temp:= `n`(v3) @signature `Lkotlinx/coroutines/internal/j0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eef58.  v1:= temp @kind object;
  #L2eef5a.  if v0 == v1 then goto L2eef6c;
  #L2eef5e.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/selects/e;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2eef64.  v0:= temp @kind object;
  #L2eef66.  call `a`(v0, v3) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2eef6c.  return @kind void;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.selects.e` v3 @kind this, `kotlinx.coroutines.internal.v` v4 @kind object) @signature `Lkotlinx/coroutines/selects/e;.c:(Lkotlinx/coroutines/internal/v;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2eebd0.  v0:= v3.`kotlinx.coroutines.selects.e._state` @type ^`java.lang.Object` @kind object;
  #L2eebd4.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2eebda.  v1:= temp @kind object;
  #L2eebdc.  v2:= 0I;
  #L2eebde.  if v0 != v1 then goto L2eec3e;
  #L2eebe2.  if v4 != 0 then goto L2eec00;
  #L2eebe6.  v0:= `@@kotlinx.coroutines.selects.e.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2eebea.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2eebf0.  v1:= temp @kind object;
  #L2eebf2.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2eebf8.  v0:= temp;
  #L2eebfa.  if v0 != 0 then goto L2eec32;
  #L2eebfe.  goto L2eebd0;
  #L2eec00.  v0:= new `kotlinx.coroutines.selects.d`;
  #L2eec04.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/selects/d;.<init>:(Lkotlinx/coroutines/internal/v;)V` @kind direct;
  #L2eec0a.  v1:= `@@kotlinx.coroutines.selects.e.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2eec0e.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2eec14.  v2:= temp @kind object;
  #L2eec16.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2eec1c.  v1:= temp;
  #L2eec1e.  if v1 != 0 then goto L2eec24;
  #L2eec22.  goto L2eebd0;
  #L2eec24.  call temp:= `c`(v0, v3) @signature `Lkotlinx/coroutines/selects/d;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2eec2a.  v4:= temp @kind object;
  #L2eec2c.  if v4 == 0 then goto L2eec32;
  #L2eec30.  return v4 @kind object;
  #L2eec32.  call `U`(v3) @signature `Lkotlinx/coroutines/selects/e;.U:()V` @kind direct;
  #L2eec38.  v4:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2eec3c.  return v4 @kind object;
  #L2eec3e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.f0` @kind boolean;
  #L2eec42.  if v1 == 0 then goto L2eeca6;
  #L2eec46.  if v4 == 0 then goto L2eec9a;
  #L2eec4a.  call temp:= `a`(v4) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2eec50.  v1:= temp @kind object;
  #L2eec52.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.selects.b` @kind boolean;
  #L2eec56.  if v2 == 0 then goto L2eec82;
  #L2eec5a.  v2:= v1 @kind object;
  #L2eec5c.  v2:= (`kotlinx.coroutines.selects.b`) v2 @kind object;
  #L2eec60.  v2:= v2.`kotlinx.coroutines.selects.b.b` @type ^`kotlinx.coroutines.selects.e` @kind object;
  #L2eec64.  if v2 == v3 then goto L2eec6a;
  #L2eec68.  goto L2eec82;
  #L2eec6a.  v4:= new `java.lang.IllegalStateException`;
  #L2eec6e.  v0:= "Cannot use matching select clauses on the same object" @kind object;
  #L2eec72.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2eec78.  v0:= temp @kind object;
  #L2eec7a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2eec80.  throw v4;
  #L2eec82.  v2:= v0 @kind object;
  #L2eec84.  v2:= (`kotlinx.coroutines.internal.f0`) v2 @kind object;
  #L2eec88.  call temp:= `b`(v1, v2) @signature `Lkotlinx/coroutines/internal/f0;.b:(Lkotlinx/coroutines/internal/f0;)Z` @kind virtual;
  #L2eec8e.  v1:= temp;
  #L2eec90.  if v1 == 0 then goto L2eec9a;
  #L2eec94.  v4:= `@@kotlinx.coroutines.internal.c.b` @type ^`java.lang.Object` @kind object;
  #L2eec98.  return v4 @kind object;
  #L2eec9a.  v0:= (`kotlinx.coroutines.internal.f0`) v0 @kind object;
  #L2eec9e.  call temp:= `c`(v0, v3) @signature `Lkotlinx/coroutines/internal/f0;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2eeca4.  goto L2eebd0;
  #L2eeca6.  if v4 != 0 then goto L2eecac;
  #L2eecaa.  return v2 @kind object;
  #L2eecac.  v4:= v4.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2eecb0.  if v0 != v4 then goto L2eecba;
  #L2eecb4.  v4:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2eecb8.  return v4 @kind object;
  #L2eecba.  return v2 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.selects.e` v3 @kind this) @signature `Lkotlinx/coroutines/selects/e;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2eeac8.  v0:= 0I;
  #L2eeaca.  call temp:= `c`(v3, v0) @signature `Lkotlinx/coroutines/selects/e;.c:(Lkotlinx/coroutines/internal/v;)Ljava/lang/Object;` @kind virtual;
  #L2eead0.  v0:= temp @kind object;
  #L2eead2.  v1:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2eead6.  if v0 != v1 then goto L2eeade;
  #L2eeada.  v0:= 1I;
  #L2eeadc.  goto L2eeae4;
  #L2eeade.  if v0 != 0 then goto L2eeae6;
  #L2eeae2.  v0:= 0I;
  #L2eeae4.  return v0;
  #L2eeae6.  v1:= new `java.lang.IllegalStateException`;
  #L2eeaea.  v2:= "Unexpected trySelectIdempotent result " @kind object;
  #L2eeaee.  call temp:= `stringPlus`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2eeaf4.  v0:= temp @kind object;
  #L2eeaf6.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2eeafc.  v0:= temp @kind object;
  #L2eeafe.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2eeb04.  throw v1;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.selects.e` v2 @kind this) @signature `Lkotlinx/coroutines/selects/e;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eed6c.  v0:= v2.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2eed70.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2eed74.  if v1 == 0 then goto L2eed7e;
  #L2eed78.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L2eed7c.  goto L2eed80;
  #L2eed7e.  v0:= 0I;
  #L2eed80.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.selects.e` v1 @kind this) @signature `Lkotlinx/coroutines/selects/e;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eed4c.  v0:= v1.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2eed50.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2eed56.  v0:= temp @kind object;
  #L2eed58.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.selects.e` v1 @kind this) @signature `Lkotlinx/coroutines/selects/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eeccc.  v0:= 0I;
  #L2eecce.  return v0 @kind object;
}
procedure `boolean` `h`(`kotlinx.coroutines.selects.e` v2 @kind this) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eea8c.  v0:= v2.`kotlinx.coroutines.selects.e._state` @type ^`java.lang.Object` @kind object;
  #L2eea90.  call temp:= `e`() @signature `Lkotlinx/coroutines/selects/k;.e:()Ljava/lang/Object;` @kind static;
  #L2eea96.  v1:= temp @kind object;
  #L2eea98.  if v0 != v1 then goto L2eeaa0;
  #L2eea9c.  v0:= 0I;
  #L2eea9e.  return v0;
  #L2eeaa0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.f0` @kind boolean;
  #L2eeaa4.  if v1 == 0 then goto L2eeab4;
  #L2eeaa8.  v0:= (`kotlinx.coroutines.internal.f0`) v0 @kind object;
  #L2eeaac.  call temp:= `c`(v0, v2) @signature `Lkotlinx/coroutines/internal/f0;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2eeab2.  goto L2eea8c;
  #L2eeab4.  v0:= 1I;
  #L2eeab6.  return v0;
}
procedure `kotlin.coroutines.Continuation` `k`(`kotlinx.coroutines.selects.e` v0 @kind this) @signature `Lkotlinx/coroutines/selects/e;.k:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L2eed38.  return v0 @kind object;
}
procedure `void` `m`(`kotlinx.coroutines.selects.e` v3 @kind this, `long` v4 , `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlinx/coroutines/selects/e;.m:(JLkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2eeffc.  v0:= 0L;
  #L2ef000.  v2:= lcmp(v4, v0);
  #L2ef004.  if v2 > 0 then goto L2ef024;
  #L2ef008.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/selects/e;.e:()Z` @kind virtual;
  #L2ef00e.  v4:= temp;
  #L2ef010.  if v4 == 0 then goto L2ef022;
  #L2ef014.  call temp:= `k`(v3) @signature `Lkotlinx/coroutines/selects/e;.k:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2ef01a.  v4:= temp @kind object;
  #L2ef01c.  call `c`(v6, v4) @signature `Lkotlinx/coroutines/j3/b;.c:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2ef022.  return @kind void;
  #L2ef024.  v0:= new `kotlinx.coroutines.selects.f`;
  #L2ef028.  call `<init>`(v0, v3, v6) @signature `Lkotlinx/coroutines/selects/f;.<init>:(Lkotlinx/coroutines/selects/e;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2ef02e.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/e;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2ef034.  v6:= temp @kind object;
  #L2ef036.  call temp:= `c`(v6) @signature `Lkotlinx/coroutines/DelayKt;.c:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/t0;` @kind static;
  #L2ef03c.  v6:= temp @kind object;
  #L2ef03e.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/e;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2ef044.  v1:= temp @kind object;
  #L2ef046.  call temp:= `v`(v6, v4, v0, v1) @signature `Lkotlinx/coroutines/t0;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @kind interface;
  #L2ef04c.  v4:= temp @kind object;
  #L2ef04e.  call `u`(v3, v4) @signature `Lkotlinx/coroutines/selects/e;.u:(Lkotlinx/coroutines/z0;)V` @kind virtual;
  #L2ef054.  return @kind void;
}
procedure `void` `p`(`kotlinx.coroutines.selects.e` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/selects/e;.p:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ef068.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ef06e.  v0:= temp;
  #L2ef070.  if v0 == 0 then goto L2ef08e;
  #L2ef074.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2ef07a.  v0:= temp;
  #L2ef07c.  if v0 == 0 then goto L2ef082;
  #L2ef080.  goto L2ef08e;
  #L2ef082.  v6:= new `java.lang.AssertionError`;
  #L2ef086.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ef08c.  throw v6;
  #L2ef08e.  v0:= v5.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` @kind object;
  #L2ef092.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2ef098.  v1:= temp @kind object;
  #L2ef09a.  if v0 != v1 then goto L2ef0f2;
  #L2ef09e.  v0:= new `kotlinx.coroutines.a0`;
  #L2ef0a2.  v1:= v5.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ef0a6.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2ef0ac.  v2:= temp;
  #L2ef0ae.  if v2 == 0 then goto L2ef0ca;
  #L2ef0b2.  v2:= instanceof @variable v1 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2ef0b6.  if v2 != 0 then goto L2ef0bc;
  #L2ef0ba.  goto L2ef0ca;
  #L2ef0bc.  v1:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v1 @kind object;
  #L2ef0c0.  call temp:= `a`(v6, v1) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2ef0c6.  v1:= temp @kind object;
  #L2ef0c8.  goto L2ef0cc;
  #L2ef0ca.  v1:= v6 @kind object;
  #L2ef0cc.  v2:= 0I;
  #L2ef0ce.  v3:= 2I;
  #L2ef0d0.  v4:= 0I;
  #L2ef0d2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/a0;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2ef0d8.  v1:= `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ef0dc.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2ef0e2.  v2:= temp @kind object;
  #L2ef0e4.  call temp:= `compareAndSet`(v1, v5, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ef0ea.  v0:= temp;
  #L2ef0ec.  if v0 == 0 then goto L2ef08e;
  #L2ef0f0.  goto L2ef144;
  #L2ef0f2.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ef0f8.  v1:= temp @kind object;
  #L2ef0fa.  if v0 != v1 then goto L2ef146;
  #L2ef0fe.  v0:= `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ef102.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ef108.  v1:= temp @kind object;
  #L2ef10a.  call temp:= `a`() @signature `Lkotlinx/coroutines/selects/k;.a:()Ljava/lang/Object;` @kind static;
  #L2ef110.  v2:= temp @kind object;
  #L2ef112.  call temp:= `compareAndSet`(v0, v5, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ef118.  v0:= temp;
  #L2ef11a.  if v0 == 0 then goto L2ef08e;
  #L2ef11e.  v0:= v5.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ef122.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2ef128.  v0:= temp @kind object;
  #L2ef12a.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2ef12e.  call temp:= `createFailure`(v6) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2ef134.  v6:= temp @kind object;
  #L2ef136.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2ef13c.  v6:= temp @kind object;
  #L2ef13e.  call `resumeWith`(v0, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2ef144.  return @kind void;
  #L2ef146.  v6:= new `java.lang.IllegalStateException`;
  #L2ef14a.  v0:= "Already resumed" @kind object;
  #L2ef14e.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ef154.  goto L2ef158;
  #L2ef156.  throw v6;
  #L2ef158.  goto L2ef156;
}
procedure `java.lang.Object` `q`(`kotlinx.coroutines.selects.e` v1 @kind this, `kotlinx.coroutines.internal.b` v2 @kind object) @signature `Lkotlinx/coroutines/selects/e;.q:(Lkotlinx/coroutines/internal/b;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eeba8.  v0:= new `kotlinx.coroutines.selects.b`;
  #L2eebac.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/selects/b;.<init>:(Lkotlinx/coroutines/selects/e;Lkotlinx/coroutines/internal/b;)V` @kind direct;
  #L2eebb2.  v2:= 0I;
  #L2eebb4.  call temp:= `c`(v0, v2) @signature `Lkotlinx/coroutines/internal/d;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2eebba.  v2:= temp @kind object;
  #L2eebbc.  return v2 @kind object;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.selects.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/selects/e;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ef16c.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ef172.  v0:= temp;
  #L2ef174.  if v0 == 0 then goto L2ef192;
  #L2ef178.  call temp:= `h`(v3) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2ef17e.  v0:= temp;
  #L2ef180.  if v0 == 0 then goto L2ef186;
  #L2ef184.  goto L2ef192;
  #L2ef186.  v4:= new `java.lang.AssertionError`;
  #L2ef18a.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ef190.  throw v4;
  #L2ef192.  v0:= v3.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` @kind object;
  #L2ef196.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2ef19c.  v1:= temp @kind object;
  #L2ef19e.  if v0 != v1 then goto L2ef1c8;
  #L2ef1a2.  v0:= 1I;
  #L2ef1a4.  v1:= 0I;
  #L2ef1a6.  call temp:= `d`(v4, v1, v0, v1) @signature `Lkotlinx/coroutines/d0;.d:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2ef1ac.  v0:= temp @kind object;
  #L2ef1ae.  v1:= `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ef1b2.  call temp:= `c`() @signature `Lkotlinx/coroutines/selects/k;.c:()Ljava/lang/Object;` @kind static;
  #L2ef1b8.  v2:= temp @kind object;
  #L2ef1ba.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ef1c0.  v0:= temp;
  #L2ef1c2.  if v0 == 0 then goto L2ef192;
  #L2ef1c6.  goto L2ef25c;
  #L2ef1c8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ef1ce.  v1:= temp @kind object;
  #L2ef1d0.  if v0 != v1 then goto L2ef25e;
  #L2ef1d4.  v0:= `@@kotlinx.coroutines.selects.e.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ef1d8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ef1de.  v1:= temp @kind object;
  #L2ef1e0.  call temp:= `a`() @signature `Lkotlinx/coroutines/selects/k;.a:()Ljava/lang/Object;` @kind static;
  #L2ef1e6.  v2:= temp @kind object;
  #L2ef1e8.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ef1ee.  v0:= temp;
  #L2ef1f0.  if v0 == 0 then goto L2ef192;
  #L2ef1f4.  call temp:= `isFailure-impl`(v4) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L2ef1fa.  v0:= temp;
  #L2ef1fc.  if v0 == 0 then goto L2ef252;
  #L2ef200.  v0:= v3.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ef204.  call temp:= `exceptionOrNull-impl`(v4) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L2ef20a.  v4:= temp @kind object;
  #L2ef20c.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2ef212.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2ef216.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2ef21c.  v1:= temp;
  #L2ef21e.  if v1 == 0 then goto L2ef23a;
  #L2ef222.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2ef226.  if v1 != 0 then goto L2ef22c;
  #L2ef22a.  goto L2ef23a;
  #L2ef22c.  v1:= v0 @kind object;
  #L2ef22e.  v1:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v1 @kind object;
  #L2ef232.  call temp:= `a`(v4, v1) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2ef238.  v4:= temp @kind object;
  #L2ef23a.  call temp:= `createFailure`(v4) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2ef240.  v4:= temp @kind object;
  #L2ef242.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2ef248.  v4:= temp @kind object;
  #L2ef24a.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2ef250.  goto L2ef25c;
  #L2ef252.  v0:= v3.`kotlinx.coroutines.selects.e.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ef256.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2ef25c.  return @kind void;
  #L2ef25e.  v4:= new `java.lang.IllegalStateException`;
  #L2ef262.  v0:= "Already resumed" @kind object;
  #L2ef266.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ef26c.  goto L2ef270;
  #L2ef26e.  throw v4;
  #L2ef270.  goto L2ef26e;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.selects.e` v2 @kind this) @signature `Lkotlinx/coroutines/selects/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eece0.  v0:= new `java.lang.StringBuilder`;
  #L2eece4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2eecea.  v1:= "SelectInstance(state=" @kind object;
  #L2eecee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eecf4.  v1:= v2.`kotlinx.coroutines.selects.e._state` @type ^`java.lang.Object` @kind object;
  #L2eecf8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eecfe.  v1:= ", result=" @kind object;
  #L2eed02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eed08.  v1:= v2.`kotlinx.coroutines.selects.e._result` @type ^`java.lang.Object` @kind object;
  #L2eed0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eed12.  v1:= 41I;
  #L2eed16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eed1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2eed22.  v0:= temp @kind object;
  #L2eed24.  return v0 @kind object;
}
procedure `void` `u`(`kotlinx.coroutines.selects.e` v2 @kind this, `kotlinx.coroutines.z0` v3 @kind object) @signature `Lkotlinx/coroutines/selects/e;.u:(Lkotlinx/coroutines/z0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eee40.  v0:= new `kotlinx.coroutines.selects.c`;
  #L2eee44.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/selects/c;.<init>:(Lkotlinx/coroutines/z0;)V` @kind direct;
  #L2eee4a.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2eee50.  v1:= temp;
  #L2eee52.  if v1 != 0 then goto L2eee6a;
  #L2eee56.  call `A`(v2, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.A:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind virtual;
  #L2eee5c.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/selects/e;.h:()Z` @kind virtual;
  #L2eee62.  v0:= temp;
  #L2eee64.  if v0 != 0 then goto L2eee6a;
  #L2eee68.  return @kind void;
  #L2eee6a.  call `dispose`(v3) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2eee70.  return @kind void;
}
procedure `void` `v`(`kotlinx.coroutines.selects.e` v0 @kind this, `kotlinx.coroutines.selects.h` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/selects/e;.v:(Lkotlinx/coroutines/selects/h;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L2eefe4.  call `a`(v1, v0, v2) @signature `Lkotlinx/coroutines/selects/h;.a:(Lkotlinx/coroutines/selects/j;Lkotlin/jvm/functions/Function2;)V` @kind interface;
  #L2eefea.  return @kind void;
}
