record `kotlinx.coroutines.q1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.r1` @kind interface {
  `kotlinx.coroutines.n2` `kotlinx.coroutines.q1.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.q1` v0 @kind this, `kotlinx.coroutines.n2` v1 @kind object) @signature `Lkotlinx/coroutines/q1;.<init>:(Lkotlinx/coroutines/n2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cee44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cee4a.  v0.`kotlinx.coroutines.q1.b` @type ^`kotlinx.coroutines.n2` := v1 @kind object;
  #L2cee4e.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.q1` v1 @kind this) @signature `Lkotlinx/coroutines/q1;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ceddc.  v0:= 0I;
  #L2cedde.  return v0;
}
procedure `kotlinx.coroutines.n2` `g`(`kotlinx.coroutines.q1` v1 @kind this) @signature `Lkotlinx/coroutines/q1;.g:()Lkotlinx/coroutines/n2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cee2c.  v0:= v1.`kotlinx.coroutines.q1.b` @type ^`kotlinx.coroutines.n2` @kind object;
  #L2cee30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.q1` v2 @kind this) @signature `Lkotlinx/coroutines/q1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cedf0.  call temp:= `c`() @signature `Lkotlinx/coroutines/o0;.c:()Z` @kind static;
  #L2cedf6.  v0:= temp;
  #L2cedf8.  if v0 == 0 then goto L2cee12;
  #L2cedfc.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/q1;.g:()Lkotlinx/coroutines/n2;` @kind virtual;
  #L2cee02.  v0:= temp @kind object;
  #L2cee04.  v1:= "New" @kind object;
  #L2cee08.  call temp:= `T`(v0, v1) @signature `Lkotlinx/coroutines/n2;.T:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2cee0e.  v0:= temp @kind object;
  #L2cee10.  goto L2cee1a;
  #L2cee12.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L2cee18.  v0:= temp @kind object;
  #L2cee1a.  return v0 @kind object;
}
