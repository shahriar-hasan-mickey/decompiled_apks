record `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d97ec.  v0:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2`;
  #L2d97f0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.<init>:()V` @kind direct;
  #L2d97f6.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` := v0 @kind object;
  #L2d97fa.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2d980c.  v0:= 1I;
  #L2d980e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2d9814.  return @kind void;
}
procedure `java.lang.Boolean` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` v1 @kind this, `kotlinx.coroutines.debug.internal.d` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.invoke:(Lkotlinx/coroutines/debug/internal/d;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d97a0.  v0:= `@@kotlinx.coroutines.debug.internal.f.a` @type ^`kotlinx.coroutines.debug.internal.f` @kind object;
  #L2d97a4.  call temp:= `b`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/f;.b:(Lkotlinx/coroutines/debug/internal/f;Lkotlinx/coroutines/debug/internal/d;)Z` @kind static;
  #L2d97aa.  v2:= temp;
  #L2d97ac.  v2:= v2 ^~ 1;
  #L2d97b0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2d97b6.  v2:= temp @kind object;
  #L2d97b8.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$1$2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2d97cc.  v1:= (`kotlinx.coroutines.debug.internal.d`) v1 @kind object;
  #L2d97d0.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$1$2;.invoke:(Lkotlinx/coroutines/debug/internal/d;)Ljava/lang/Boolean;` @kind virtual;
  #L2d97d6.  v1:= temp @kind object;
  #L2d97d8.  return v1 @kind object;
}
