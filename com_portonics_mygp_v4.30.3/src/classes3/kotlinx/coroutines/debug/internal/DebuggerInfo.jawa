record `kotlinx.coroutines.debug.internal.DebuggerInfo` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.Long` `kotlinx.coroutines.debug.internal.DebuggerInfo.coroutineId` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.dispatcher` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedStackTrace` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadName` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadState` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.name` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.debug.internal.DebuggerInfo.sequenceNumber` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.state` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v3 @kind this, `kotlinx.coroutines.debug.internal.c` v4 @kind object, `kotlin.coroutines.CoroutineContext` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.<init>:(Lkotlinx/coroutines/debug/internal/c;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d9b5c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d9b62.  v4:= `@@kotlinx.coroutines.j0.b` @type ^`kotlinx.coroutines.i0` @kind object;
  #L2d9b66.  call temp:= `get`(v5, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2d9b6c.  v4:= temp @kind object;
  #L2d9b6e.  v4:= (`kotlinx.coroutines.j0`) v4 @kind object;
  #L2d9b72.  v0:= 0I;
  #L2d9b74.  if v4 != 0 then goto L2d9b7c;
  #L2d9b78.  v4:= v0 @kind object;
  #L2d9b7a.  goto L2d9b8c;
  #L2d9b7c.  call temp:= `N0`(v4) @signature `Lkotlinx/coroutines/j0;.N0:()J` @kind virtual;
  #L2d9b82.  v1:= temp @kind wide;
  #L2d9b84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2d9b8a.  v4:= temp @kind object;
  #L2d9b8c.  v3.`kotlinx.coroutines.debug.internal.DebuggerInfo.coroutineId` @type ^`java.lang.Long` := v4 @kind object;
  #L2d9b90.  v4:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L2d9b94.  call temp:= `get`(v5, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2d9b9a.  v4:= temp @kind object;
  #L2d9b9c.  v4:= (`kotlin.coroutines.ContinuationInterceptor`) v4 @kind object;
  #L2d9ba0.  if v4 != 0 then goto L2d9ba8;
  #L2d9ba4.  v4:= v0 @kind object;
  #L2d9ba6.  goto L2d9bb0;
  #L2d9ba8.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d9bae.  v4:= temp @kind object;
  #L2d9bb0.  v3.`kotlinx.coroutines.debug.internal.DebuggerInfo.dispatcher` @type ^`java.lang.String` := v4 @kind object;
  #L2d9bb4.  v4:= `@@kotlinx.coroutines.l0.b` @type ^`kotlinx.coroutines.k0` @kind object;
  #L2d9bb8.  call temp:= `get`(v5, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2d9bbe.  v4:= temp @kind object;
  #L2d9bc0.  v4:= (`kotlinx.coroutines.l0`) v4 @kind object;
  #L2d9bc4.  if v4 != 0 then goto L2d9bce;
  #L2d9bc8.  v3.`kotlinx.coroutines.debug.internal.DebuggerInfo.name` @type ^`java.lang.String` := v0 @kind object;
  #L2d9bcc.  throw v0;
  #L2d9bce.  throw v0;
}
procedure `java.lang.Long` `getCoroutineId`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getCoroutineId:()Ljava/lang/Long;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9a9c.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.coroutineId` @type ^`java.lang.Long` @kind object;
  #L2d9aa0.  return v0 @kind object;
}
procedure `java.lang.String` `getDispatcher`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getDispatcher:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9ab4.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.dispatcher` @type ^`java.lang.String` @kind object;
  #L2d9ab8.  return v0 @kind object;
}
procedure `java.util.List` `getLastObservedStackTrace`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedStackTrace:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9b2c.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedStackTrace` @type ^`java.util.List` @kind object;
  #L2d9b30.  return v0 @kind object;
}
procedure `java.lang.String` `getLastObservedThreadName`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedThreadName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9acc.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadName` @type ^`java.lang.String` @kind object;
  #L2d9ad0.  return v0 @kind object;
}
procedure `java.lang.String` `getLastObservedThreadState`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedThreadState:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9ae4.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.lastObservedThreadState` @type ^`java.lang.String` @kind object;
  #L2d9ae8.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9afc.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.name` @type ^`java.lang.String` @kind object;
  #L2d9b00.  return v0 @kind object;
}
procedure `long` `getSequenceNumber`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v2 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getSequenceNumber:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d9b44.  v0:= v2.`kotlinx.coroutines.debug.internal.DebuggerInfo.sequenceNumber` @type ^`long` @kind wide;
  #L2d9b48.  return v0 @kind wide;
}
procedure `java.lang.String` `getState`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getState:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2d9b14.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.state` @type ^`java.lang.String` @kind object;
  #L2d9b18.  return v0 @kind object;
}
