record `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.debug.internal.i` `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.$bottom` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.label` @AccessFlag ;
  `kotlinx.coroutines.debug.internal.c` `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` v0 @kind this, `kotlinx.coroutines.debug.internal.c` v1 @kind object, `kotlinx.coroutines.debug.internal.i` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.<init>:(Lkotlinx/coroutines/debug/internal/c;Lkotlinx/coroutines/debug/internal/i;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d963c.  v1:= 2I;
  #L2d963e.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2d9644.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2d9614.  v0:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1`;
  #L2d9618.  v1:= v3.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.this$0` @type ^`kotlinx.coroutines.debug.internal.c` @kind object;
  #L2d961c.  v2:= v3.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.$bottom` @type ^`kotlinx.coroutines.debug.internal.i` @kind object;
  #L2d9620.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.<init>:(Lkotlinx/coroutines/debug/internal/c;Lkotlinx/coroutines/debug/internal/i;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2d9626.  v0.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2d962a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2d9570.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2d9574.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2d9578.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2d957e.  v1:= temp @kind object;
  #L2d9580.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2d9594.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2d959a.  v1:= temp @kind object;
  #L2d959c.  v1:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1`) v1 @kind object;
  #L2d95a0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d95a4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2d95aa.  v1:= temp @kind object;
  #L2d95ac.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl$creationStackTrace$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2d95c0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2d95c6.  v0:= v2.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.label` @type ^`int`;
  #L2d95ca.  if v0 == 0 then goto L2d95f0;
  #L2d95ce.  v1:= 1I;
  #L2d95d0.  if v0 != v1 then goto L2d95e0;
  #L2d95d4.  call `throwOnFailure`(v3) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2d95da.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d95de.  return v3 @kind object;
  #L2d95e0.  v3:= new `java.lang.IllegalStateException`;
  #L2d95e4.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2d95e8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d95ee.  throw v3;
  #L2d95f0.  call `throwOnFailure`(v3) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2d95f6.  v3:= v2.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2d95fa.  v3:= (`kotlin.sequences.SequenceScope`) v3 @kind object;
  #L2d95fe.  v3:= 0I;
  #L2d9600.  throw v3;
}
