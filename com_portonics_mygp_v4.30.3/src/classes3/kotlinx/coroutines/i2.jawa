record `kotlinx.coroutines.i2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.u` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.i2.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.j2` `kotlinx.coroutines.i2.e` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.i2.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.i2` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.j2` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/i2;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/j2;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cfd2c.  v0.`kotlinx.coroutines.i2.d` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L2cfd30.  v0.`kotlinx.coroutines.i2.e` @type ^`kotlinx.coroutines.j2` := v2 @kind object;
  #L2cfd34.  v0.`kotlinx.coroutines.i2.f` @type ^`java.lang.Object` := v3 @kind object;
  #L2cfd38.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/u;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L2cfd3e.  return @kind void;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.i2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/i2;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cfcd0.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L2cfcd4.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/i2;.k:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L2cfcda.  v1:= temp @kind object;
  #L2cfcdc.  return v1 @kind object;
}
procedure `java.lang.Object` `k`(`kotlinx.coroutines.i2` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/i2;.k:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfcf0.  v2:= v1.`kotlinx.coroutines.i2.e` @type ^`kotlinx.coroutines.j2` @kind object;
  #L2cfcf4.  call temp:= `Y`(v2) @signature `Lkotlinx/coroutines/j2;.Y:()Ljava/lang/Object;` @kind virtual;
  #L2cfcfa.  v2:= temp @kind object;
  #L2cfcfc.  v0:= v1.`kotlinx.coroutines.i2.f` @type ^`java.lang.Object` @kind object;
  #L2cfd00.  if v2 != v0 then goto L2cfd08;
  #L2cfd04.  v2:= 1I;
  #L2cfd06.  goto L2cfd0a;
  #L2cfd08.  v2:= 0I;
  #L2cfd0a.  if v2 == 0 then goto L2cfd12;
  #L2cfd0e.  v2:= 0I;
  #L2cfd10.  goto L2cfd1a;
  #L2cfd12.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/s;.a:()Ljava/lang/Object;` @kind static;
  #L2cfd18.  v2:= temp @kind object;
  #L2cfd1a.  return v2 @kind object;
}
