record `kotlinx.coroutines.p` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.v0` @kind class, `kotlinx.coroutines.o` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `int` `kotlinx.coroutines.p._decision` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.p._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.p.g` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.p.h` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.z0` `kotlinx.coroutines.p.i` @AccessFlag PRIVATE;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.p.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.p.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2caa50.  v0:= constclass @type ^`kotlinx.coroutines.p` @kind object;
  #L2caa54.  v1:= "_decision" @kind object;
  #L2caa58.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L2caa5e.  v0:= temp @kind object;
  #L2caa60.  `@@kotlinx.coroutines.p.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L2caa64.  v0:= constclass @type ^`kotlinx.coroutines.p` @kind object;
  #L2caa68.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L2caa6c.  v2:= "_state" @kind object;
  #L2caa70.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L2caa76.  v0:= temp @kind object;
  #L2caa78.  `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L2caa7c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.p` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/p;.<init>:(Lkotlin/coroutines/Continuation;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2caa90.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/v0;.<init>:(I)V` @kind direct;
  #L2caa96.  v2.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L2caa9a.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2caaa0.  v0:= temp;
  #L2caaa2.  v1:= 0I;
  #L2caaa4.  if v0 == 0 then goto L2caac6;
  #L2caaa8.  v0:= -1I;
  #L2caaaa.  if v4 == v0 then goto L2caab2;
  #L2caaae.  v4:= 1I;
  #L2caab0.  goto L2caab4;
  #L2caab2.  v4:= 0I;
  #L2caab4.  if v4 == 0 then goto L2caaba;
  #L2caab8.  goto L2caac6;
  #L2caaba.  v3:= new `java.lang.AssertionError`;
  #L2caabe.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2caac4.  throw v3;
  #L2caac6.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2caacc.  v3:= temp @kind object;
  #L2caace.  v2.`kotlinx.coroutines.p.h` @type ^`kotlin.coroutines.CoroutineContext` := v3 @kind object;
  #L2caad2.  v2.`kotlinx.coroutines.p._decision` @type ^`int` := v1;
  #L2caad6.  v3:= `@@kotlinx.coroutines.d.b` @type ^`kotlinx.coroutines.d` @kind object;
  #L2caada.  v2.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` := v3 @kind object;
  #L2caade.  return @kind void;
}
procedure `kotlinx.coroutines.z0` `B`(`kotlinx.coroutines.p` v7 @kind this) @signature `Lkotlinx/coroutines/p;.B:()Lkotlinx/coroutines/z0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ca95c.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2ca962.  v0:= temp @kind object;
  #L2ca964.  v1:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2ca968.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2ca96e.  v0:= temp @kind object;
  #L2ca970.  v1:= v0 @kind object;
  #L2ca972.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2ca976.  if v1 != 0 then goto L2ca97e;
  #L2ca97a.  v0:= 0I;
  #L2ca97c.  return v0 @kind object;
  #L2ca97e.  v2:= 1I;
  #L2ca980.  v3:= 0I;
  #L2ca982.  v4:= new `kotlinx.coroutines.t`;
  #L2ca986.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/t;.<init>:(Lkotlinx/coroutines/p;)V` @kind direct;
  #L2ca98c.  v5:= 2I;
  #L2ca98e.  v6:= 0I;
  #L2ca990.  call temp:= `d`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/x1;.d:(Lkotlinx/coroutines/z1;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/z0;` @kind static;
  #L2ca996.  v0:= temp @kind object;
  #L2ca998.  v7.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` := v0 @kind object;
  #L2ca99c.  return v0 @kind object;
}
procedure `boolean` `D`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.D:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ca354.  v0:= v1.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2ca358.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/w0;.c:(I)Z` @kind static;
  #L2ca35e.  v0:= temp;
  #L2ca360.  if v0 == 0 then goto L2ca37c;
  #L2ca364.  v0:= v1.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ca368.  v0:= (`kotlinx.coroutines.internal.j`) v0 @kind object;
  #L2ca36c.  call temp:= `p`(v0) @signature `Lkotlinx/coroutines/internal/j;.p:()Z` @kind virtual;
  #L2ca372.  v0:= temp;
  #L2ca374.  if v0 == 0 then goto L2ca37c;
  #L2ca378.  v0:= 1I;
  #L2ca37a.  goto L2ca37e;
  #L2ca37c.  v0:= 0I;
  #L2ca37e.  return v0;
}
procedure `kotlinx.coroutines.l` `E`(`kotlinx.coroutines.p` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/p;.E:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/l;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ca930.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.l` @kind boolean;
  #L2ca934.  if v0 == 0 then goto L2ca93e;
  #L2ca938.  v2:= (`kotlinx.coroutines.l`) v2 @kind object;
  #L2ca93c.  goto L2ca94a;
  #L2ca93e.  v0:= new `kotlinx.coroutines.u1`;
  #L2ca942.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/u1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2ca948.  v2:= v0 @kind object;
  #L2ca94a.  return v2 @kind object;
}
procedure `void` `F`(`kotlinx.coroutines.p` v3 @kind this, `kotlin.jvm.functions.Function1` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/p;.F:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2caed4.  v0:= new `java.lang.IllegalStateException`;
  #L2caed8.  v1:= new `java.lang.StringBuilder`;
  #L2caedc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2caee2.  v2:= "It's prohibited to register multiple handlers, tried to register " @kind object;
  #L2caee6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2caeec.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2caef2.  v4:= ", already has " @kind object;
  #L2caef6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2caefc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2caf02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2caf08.  v4:= temp @kind object;
  #L2caf0a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2caf10.  v4:= temp @kind object;
  #L2caf12.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2caf18.  throw v0;
}
procedure `void` `I`(`kotlinx.coroutines.p` v3 @kind this) @signature `Lkotlinx/coroutines/p;.I:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2caf58.  v0:= v3.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2caf5c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.j` @kind boolean;
  #L2caf60.  v2:= 0I;
  #L2caf62.  if v1 == 0 then goto L2caf6c;
  #L2caf66.  v0:= (`kotlinx.coroutines.internal.j`) v0 @kind object;
  #L2caf6a.  goto L2caf6e;
  #L2caf6c.  v0:= v2 @kind object;
  #L2caf6e.  if v0 != 0 then goto L2caf74;
  #L2caf72.  goto L2caf7c;
  #L2caf74.  call temp:= `u`(v0, v3) @signature `Lkotlinx/coroutines/internal/j;.u:(Lkotlinx/coroutines/o;)Ljava/lang/Throwable;` @kind virtual;
  #L2caf7a.  v2:= temp @kind object;
  #L2caf7c.  if v2 != 0 then goto L2caf82;
  #L2caf80.  return @kind void;
  #L2caf82.  call `q`(v3) @signature `Lkotlinx/coroutines/p;.q:()V` @kind virtual;
  #L2caf88.  call temp:= `t`(v3, v2) @signature `Lkotlinx/coroutines/p;.t:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L2caf8e.  return @kind void;
}
procedure `void` `K`(`kotlinx.coroutines.p` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/p;.K:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2caff4.  v0:= v8.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2caff8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2caffc.  if v1 == 0 then goto L2cb038;
  #L2cb000.  v3:= v0 @kind object;
  #L2cb002.  v3:= (`kotlinx.coroutines.p2`) v3 @kind object;
  #L2cb006.  v7:= 0I;
  #L2cb008.  v2:= v8 @kind object;
  #L2cb00a.  v4:= v9 @kind object;
  #L2cb00c.  v5:= v10;
  #L2cb00e.  v6:= v11 @kind object;
  #L2cb010.  call temp:= `M`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/p;.M:(Lkotlinx/coroutines/p2;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2cb016.  v1:= temp @kind object;
  #L2cb018.  v2:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2cb01c.  call temp:= `compareAndSet`(v2, v8, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2cb022.  v0:= temp;
  #L2cb024.  if v0 != 0 then goto L2cb02a;
  #L2cb028.  goto L2caff4;
  #L2cb02a.  call `s`(v8) @signature `Lkotlinx/coroutines/p;.s:()V` @kind direct;
  #L2cb030.  call `u`(v8, v10) @signature `Lkotlinx/coroutines/p;.u:(I)V` @kind direct;
  #L2cb036.  return @kind void;
  #L2cb038.  v10:= instanceof @variable v0 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L2cb03c.  if v10 == 0 then goto L2cb062;
  #L2cb040.  v0:= (`kotlinx.coroutines.s`) v0 @kind object;
  #L2cb044.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/s;.c:()Z` @kind virtual;
  #L2cb04a.  v10:= temp;
  #L2cb04c.  if v10 == 0 then goto L2cb062;
  #L2cb050.  if v11 != 0 then goto L2cb056;
  #L2cb054.  goto L2cb060;
  #L2cb056.  v9:= v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2cb05a.  call `o`(v8, v11, v9) @signature `Lkotlinx/coroutines/p;.o:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind virtual;
  #L2cb060.  return @kind void;
  #L2cb062.  call temp:= `h`(v8, v9) @signature `Lkotlinx/coroutines/p;.h:(Ljava/lang/Object;)Ljava/lang/Void;` @kind direct;
  #L2cb068.  v9:= new `kotlin.KotlinNothingValueException`;
  #L2cb06c.  call `<init>`(v9) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2cb072.  goto L2cb076;
  #L2cb074.  throw v9;
  #L2cb076.  goto L2cb074;
}
procedure `void` `L`(`kotlinx.coroutines.p` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/p;.L:(Lkotlinx/coroutines/p;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2cafbc.  if v5 != 0 then goto L2cafd2;
  #L2cafc0.  v4:= v4 ^& 4;
  #L2cafc4.  if v4 == 0 then goto L2cafca;
  #L2cafc8.  v3:= 0I;
  #L2cafca.  call `K`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/p;.K:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2cafd0.  return @kind void;
  #L2cafd2.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2cafd6.  v1:= "Super calls with default arguments not supported in this target, function: resumeImpl" @kind object;
  #L2cafda.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cafe0.  throw v0;
}
procedure `java.lang.Object` `M`(`kotlinx.coroutines.p` v8 @kind this, `kotlinx.coroutines.p2` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `kotlin.jvm.functions.Function1` v12 @kind object, `java.lang.Object` v13 @kind object) @signature `Lkotlinx/coroutines/p;.M:(Lkotlinx/coroutines/p2;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ca614.  v0:= instanceof @variable v10 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2ca618.  if v0 == 0 then goto L2ca66e;
  #L2ca61c.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ca622.  v9:= temp;
  #L2ca624.  v11:= 1I;
  #L2ca626.  v0:= 0I;
  #L2ca628.  if v9 == 0 then goto L2ca648;
  #L2ca62c.  if v13 != 0 then goto L2ca634;
  #L2ca630.  v9:= 1I;
  #L2ca632.  goto L2ca636;
  #L2ca634.  v9:= 0I;
  #L2ca636.  if v9 == 0 then goto L2ca63c;
  #L2ca63a.  goto L2ca648;
  #L2ca63c.  v9:= new `java.lang.AssertionError`;
  #L2ca640.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ca646.  throw v9;
  #L2ca648.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ca64e.  v9:= temp;
  #L2ca650.  if v9 == 0 then goto L2ca6c6;
  #L2ca654.  if v12 != 0 then goto L2ca65a;
  #L2ca658.  goto L2ca65c;
  #L2ca65a.  v11:= 0I;
  #L2ca65c.  if v11 == 0 then goto L2ca662;
  #L2ca660.  goto L2ca6c6;
  #L2ca662.  v9:= new `java.lang.AssertionError`;
  #L2ca666.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ca66c.  throw v9;
  #L2ca66e.  call temp:= `b`(v11) @signature `Lkotlinx/coroutines/w0;.b:(I)Z` @kind static;
  #L2ca674.  v11:= temp;
  #L2ca676.  if v11 != 0 then goto L2ca680;
  #L2ca67a.  if v13 != 0 then goto L2ca680;
  #L2ca67e.  goto L2ca6c6;
  #L2ca680.  if v12 != 0 then goto L2ca698;
  #L2ca684.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.l` @kind boolean;
  #L2ca688.  if v11 == 0 then goto L2ca694;
  #L2ca68c.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.e` @kind boolean;
  #L2ca690.  if v11 == 0 then goto L2ca698;
  #L2ca694.  if v13 == 0 then goto L2ca6c6;
  #L2ca698.  v11:= new `kotlinx.coroutines.z`;
  #L2ca69c.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.l` @kind boolean;
  #L2ca6a0.  if v0 == 0 then goto L2ca6aa;
  #L2ca6a4.  v9:= (`kotlinx.coroutines.l`) v9 @kind object;
  #L2ca6a8.  goto L2ca6ac;
  #L2ca6aa.  v9:= 0I;
  #L2ca6ac.  v2:= v9 @kind object;
  #L2ca6ae.  v5:= 0I;
  #L2ca6b0.  v6:= 16I;
  #L2ca6b4.  v7:= 0I;
  #L2ca6b6.  v0:= v11 @kind object;
  #L2ca6b8.  v1:= v10 @kind object;
  #L2ca6ba.  v3:= v12 @kind object;
  #L2ca6bc.  v4:= v13 @kind object;
  #L2ca6be.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/l;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2ca6c4.  v10:= v11 @kind object;
  #L2ca6c6.  return v10 @kind object;
}
procedure `boolean` `N`(`kotlinx.coroutines.p` v4 @kind this) @signature `Lkotlinx/coroutines/p;.N:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca454.  v0:= v4.`kotlinx.coroutines.p._decision` @type ^`int`;
  #L2ca458.  v1:= 0I;
  #L2ca45a.  v2:= 1I;
  #L2ca45c.  if v0 == 0 then goto L2ca47e;
  #L2ca460.  if v0 != v2 then goto L2ca466;
  #L2ca464.  return v1;
  #L2ca466.  v0:= new `java.lang.IllegalStateException`;
  #L2ca46a.  v1:= "Already resumed" @kind object;
  #L2ca46e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca474.  v1:= temp @kind object;
  #L2ca476.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca47c.  throw v0;
  #L2ca47e.  v0:= `@@kotlinx.coroutines.p.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2ca482.  v3:= 2I;
  #L2ca484.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2ca48a.  v0:= temp;
  #L2ca48c.  if v0 == 0 then goto L2ca454;
  #L2ca490.  return v2;
}
procedure `kotlinx.coroutines.internal.k0` `O`(`kotlinx.coroutines.p` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/p;.O:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/k0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ca9b0.  v0:= v8.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2ca9b4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2ca9b8.  if v1 == 0 then goto L2ca9f4;
  #L2ca9bc.  v3:= v0 @kind object;
  #L2ca9be.  v3:= (`kotlinx.coroutines.p2`) v3 @kind object;
  #L2ca9c2.  v5:= v8.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2ca9c6.  v2:= v8 @kind object;
  #L2ca9c8.  v4:= v9 @kind object;
  #L2ca9ca.  v6:= v11 @kind object;
  #L2ca9cc.  v7:= v10 @kind object;
  #L2ca9ce.  call temp:= `M`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/p;.M:(Lkotlinx/coroutines/p2;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L2ca9d4.  v1:= temp @kind object;
  #L2ca9d6.  v2:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ca9da.  call temp:= `compareAndSet`(v2, v8, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ca9e0.  v0:= temp;
  #L2ca9e2.  if v0 != 0 then goto L2ca9e8;
  #L2ca9e6.  goto L2ca9b0;
  #L2ca9e8.  call `s`(v8) @signature `Lkotlinx/coroutines/p;.s:()V` @kind direct;
  #L2ca9ee.  v9:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2ca9f2.  return v9 @kind object;
  #L2ca9f4.  v11:= instanceof @variable v0 @type ^`kotlinx.coroutines.z` @kind boolean;
  #L2ca9f8.  v1:= 0I;
  #L2ca9fa.  if v11 == 0 then goto L2caa3c;
  #L2ca9fe.  if v10 == 0 then goto L2caa3c;
  #L2caa02.  v0:= (`kotlinx.coroutines.z`) v0 @kind object;
  #L2caa06.  v11:= v0.`kotlinx.coroutines.z.d` @type ^`java.lang.Object` @kind object;
  #L2caa0a.  if v11 != v10 then goto L2caa3c;
  #L2caa0e.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2caa14.  v10:= temp;
  #L2caa16.  if v10 == 0 then goto L2caa38;
  #L2caa1a.  v10:= v0.`kotlinx.coroutines.z.a` @type ^`java.lang.Object` @kind object;
  #L2caa1e.  call temp:= `areEqual`(v10, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2caa24.  v9:= temp;
  #L2caa26.  if v9 == 0 then goto L2caa2c;
  #L2caa2a.  goto L2caa38;
  #L2caa2c.  v9:= new `java.lang.AssertionError`;
  #L2caa30.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2caa36.  throw v9;
  #L2caa38.  v1:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2caa3c.  return v1 @kind object;
}
procedure `boolean` `P`(`kotlinx.coroutines.p` v3 @kind this) @signature `Lkotlinx/coroutines/p;.P:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ca4a4.  v0:= v3.`kotlinx.coroutines.p._decision` @type ^`int`;
  #L2ca4a8.  v1:= 0I;
  #L2ca4aa.  if v0 == 0 then goto L2ca4ce;
  #L2ca4ae.  v2:= 2I;
  #L2ca4b0.  if v0 != v2 then goto L2ca4b6;
  #L2ca4b4.  return v1;
  #L2ca4b6.  v0:= new `java.lang.IllegalStateException`;
  #L2ca4ba.  v1:= "Already suspended" @kind object;
  #L2ca4be.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca4c4.  v1:= temp @kind object;
  #L2ca4c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca4cc.  throw v0;
  #L2ca4ce.  v0:= `@@kotlinx.coroutines.p.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2ca4d2.  v2:= 1I;
  #L2ca4d4.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2ca4da.  v0:= temp;
  #L2ca4dc.  if v0 == 0 then goto L2ca4a4;
  #L2ca4e0.  return v2;
}
procedure `java.lang.Void` `h`(`kotlinx.coroutines.p` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/p;.h:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2ca8a8.  v0:= new `java.lang.IllegalStateException`;
  #L2ca8ac.  v1:= "Already resumed, but proposed with update " @kind object;
  #L2ca8b0.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ca8b6.  v3:= temp @kind object;
  #L2ca8b8.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca8be.  v3:= temp @kind object;
  #L2ca8c0.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ca8c6.  throw v0;
}
procedure `void` `k`(`kotlinx.coroutines.p` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/p;.k:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2caaf0.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2caaf6.  goto L2cab1e;
  #L2caaf8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2caafa.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2cab00.  v4:= temp @kind object;
  #L2cab02.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L2cab06.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L2cab0a.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cab10.  v1:= temp @kind object;
  #L2cab12.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2cab18.  call `a`(v4, v0) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2cab1e.  return @kind void;
  catch `java.lang.Throwable` @[L2caaf0..L2caaf6] goto L2caaf8;
}
procedure `boolean` `p`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/p;.p:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ca2fc.  call temp:= `D`(v1) @signature `Lkotlinx/coroutines/p;.D:()Z` @kind direct;
  #L2ca302.  v0:= temp;
  #L2ca304.  if v0 != 0 then goto L2ca30c;
  #L2ca308.  v2:= 0I;
  #L2ca30a.  return v2;
  #L2ca30c.  v0:= v1.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ca310.  v0:= (`kotlinx.coroutines.internal.j`) v0 @kind object;
  #L2ca314.  call temp:= `q`(v0, v2) @signature `Lkotlinx/coroutines/internal/j;.q:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L2ca31a.  v2:= temp;
  #L2ca31c.  return v2;
}
procedure `void` `s`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.s:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2cad20.  call temp:= `D`(v1) @signature `Lkotlinx/coroutines/p;.D:()Z` @kind direct;
  #L2cad26.  v0:= temp;
  #L2cad28.  if v0 != 0 then goto L2cad32;
  #L2cad2c.  call `q`(v1) @signature `Lkotlinx/coroutines/p;.q:()V` @kind virtual;
  #L2cad32.  return @kind void;
}
procedure `void` `u`(`kotlinx.coroutines.p` v1 @kind this, `int` v2 ) @signature `Lkotlinx/coroutines/p;.u:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2cad44.  call temp:= `N`(v1) @signature `Lkotlinx/coroutines/p;.N:()Z` @kind direct;
  #L2cad4a.  v0:= temp;
  #L2cad4c.  if v0 == 0 then goto L2cad52;
  #L2cad50.  return @kind void;
  #L2cad52.  call `a`(v1, v2) @signature `Lkotlinx/coroutines/w0;.a:(Lkotlinx/coroutines/v0;I)V` @kind static;
  #L2cad58.  return @kind void;
}
procedure `java.lang.String` `y`(`kotlinx.coroutines.p` v2 @kind this) @signature `Lkotlinx/coroutines/p;.y:()Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2ca76c.  call temp:= `x`(v2) @signature `Lkotlinx/coroutines/p;.x:()Ljava/lang/Object;` @kind virtual;
  #L2ca772.  v0:= temp @kind object;
  #L2ca774.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2ca778.  if v1 == 0 then goto L2ca782;
  #L2ca77c.  v0:= "Active" @kind object;
  #L2ca780.  goto L2ca794;
  #L2ca782.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L2ca786.  if v0 == 0 then goto L2ca790;
  #L2ca78a.  v0:= "Cancelled" @kind object;
  #L2ca78e.  goto L2ca794;
  #L2ca790.  v0:= "Completed" @kind object;
  #L2ca794.  return v0 @kind object;
}
procedure `void` `A`(`kotlinx.coroutines.p` v2 @kind this) @signature `Lkotlinx/coroutines/p;.A:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cad6c.  call temp:= `B`(v2) @signature `Lkotlinx/coroutines/p;.B:()Lkotlinx/coroutines/z0;` @kind direct;
  #L2cad72.  v0:= temp @kind object;
  #L2cad74.  if v0 != 0 then goto L2cad7a;
  #L2cad78.  return @kind void;
  #L2cad7a.  call temp:= `C`(v2) @signature `Lkotlinx/coroutines/p;.C:()Z` @kind virtual;
  #L2cad80.  v1:= temp;
  #L2cad82.  if v1 == 0 then goto L2cad94;
  #L2cad86.  call `dispose`(v0) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2cad8c.  v0:= `@@kotlinx.coroutines.o2.b` @type ^`kotlinx.coroutines.o2` @kind object;
  #L2cad90.  v2.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` := v0 @kind object;
  #L2cad94.  return @kind void;
}
procedure `boolean` `C`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.C:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca330.  call temp:= `x`(v1) @signature `Lkotlinx/coroutines/p;.x:()Ljava/lang/Object;` @kind virtual;
  #L2ca336.  v0:= temp @kind object;
  #L2ca338.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2ca33c.  v0:= v0 ^~ 1;
  #L2ca340.  return v0;
}
procedure `java.lang.String` `G`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.G:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2ca7a8.  v0:= "CancellableContinuation" @kind object;
  #L2ca7ac.  return v0 @kind object;
}
procedure `void` `H`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/p;.H:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2caf2c.  call temp:= `p`(v1, v2) @signature `Lkotlinx/coroutines/p;.p:(Ljava/lang/Throwable;)Z` @kind direct;
  #L2caf32.  v0:= temp;
  #L2caf34.  if v0 == 0 then goto L2caf3a;
  #L2caf38.  return @kind void;
  #L2caf3a.  call temp:= `t`(v1, v2) @signature `Lkotlinx/coroutines/p;.t:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L2caf40.  call `s`(v1) @signature `Lkotlinx/coroutines/p;.s:()V` @kind direct;
  #L2caf46.  return @kind void;
}
procedure `boolean` `J`(`kotlinx.coroutines.p` v4 @kind this) @signature `Lkotlinx/coroutines/p;.J:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca390.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ca396.  v0:= temp;
  #L2ca398.  v1:= 1I;
  #L2ca39a.  v2:= 0I;
  #L2ca39c.  if v0 == 0 then goto L2ca3c2;
  #L2ca3a0.  v0:= v4.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2ca3a4.  v3:= 2I;
  #L2ca3a6.  if v0 != v3 then goto L2ca3ae;
  #L2ca3aa.  v0:= 1I;
  #L2ca3ac.  goto L2ca3b0;
  #L2ca3ae.  v0:= 0I;
  #L2ca3b0.  if v0 == 0 then goto L2ca3b6;
  #L2ca3b4.  goto L2ca3c2;
  #L2ca3b6.  v0:= new `java.lang.AssertionError`;
  #L2ca3ba.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ca3c0.  throw v0;
  #L2ca3c2.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ca3c8.  v0:= temp;
  #L2ca3ca.  if v0 == 0 then goto L2ca3f2;
  #L2ca3ce.  v0:= v4.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` @kind object;
  #L2ca3d2.  v3:= `@@kotlinx.coroutines.o2.b` @type ^`kotlinx.coroutines.o2` @kind object;
  #L2ca3d6.  if v0 == v3 then goto L2ca3de;
  #L2ca3da.  v0:= 1I;
  #L2ca3dc.  goto L2ca3e0;
  #L2ca3de.  v0:= 0I;
  #L2ca3e0.  if v0 == 0 then goto L2ca3e6;
  #L2ca3e4.  goto L2ca3f2;
  #L2ca3e6.  v0:= new `java.lang.AssertionError`;
  #L2ca3ea.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ca3f0.  throw v0;
  #L2ca3f2.  v0:= v4.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2ca3f6.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ca3fc.  v3:= temp;
  #L2ca3fe.  if v3 == 0 then goto L2ca41a;
  #L2ca402.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2ca406.  v3:= v3 ^~ v1 @kind int;
  #L2ca408.  if v3 == 0 then goto L2ca40e;
  #L2ca40c.  goto L2ca41a;
  #L2ca40e.  v0:= new `java.lang.AssertionError`;
  #L2ca412.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ca418.  throw v0;
  #L2ca41a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.z` @kind boolean;
  #L2ca41e.  if v3 == 0 then goto L2ca436;
  #L2ca422.  v0:= (`kotlinx.coroutines.z`) v0 @kind object;
  #L2ca426.  v0:= v0.`kotlinx.coroutines.z.d` @type ^`java.lang.Object` @kind object;
  #L2ca42a.  if v0 == 0 then goto L2ca436;
  #L2ca42e.  call `q`(v4) @signature `Lkotlinx/coroutines/p;.q:()V` @kind virtual;
  #L2ca434.  return v2;
  #L2ca436.  v4.`kotlinx.coroutines.p._decision` @type ^`int` := v2;
  #L2ca43a.  v0:= `@@kotlinx.coroutines.d.b` @type ^`kotlinx.coroutines.d` @kind object;
  #L2ca43e.  v4.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` := v0 @kind object;
  #L2ca442.  return v1;
}
procedure `void` `a`(`kotlinx.coroutines.p` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object) @signature `Lkotlinx/coroutines/p;.a:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2cabd4.  v11:= v10.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2cabd8.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2cabdc.  if v0 != 0 then goto L2cac80;
  #L2cabe0.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2cabe4.  if v0 == 0 then goto L2cabea;
  #L2cabe8.  return @kind void;
  #L2cabea.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.z` @kind boolean;
  #L2cabee.  if v0 == 0 then goto L2cac52;
  #L2cabf2.  v0:= v11 @kind object;
  #L2cabf4.  v0:= (`kotlinx.coroutines.z`) v0 @kind object;
  #L2cabf8.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/z;.c:()Z` @kind virtual;
  #L2cabfe.  v1:= temp;
  #L2cac00.  v1:= v1 ^~ 1;
  #L2cac04.  if v1 == 0 then goto L2cac3a;
  #L2cac08.  v2:= 0I;
  #L2cac0a.  v3:= 0I;
  #L2cac0c.  v4:= 0I;
  #L2cac0e.  v5:= 0I;
  #L2cac10.  v7:= 15I;
  #L2cac14.  v8:= 0I;
  #L2cac16.  v1:= v0 @kind object;
  #L2cac18.  v6:= v12 @kind object;
  #L2cac1a.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/z;.b:(Lkotlinx/coroutines/z;Ljava/lang/Object;Lkotlinx/coroutines/l;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/z;` @kind static;
  #L2cac20.  v1:= temp @kind object;
  #L2cac22.  v2:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2cac26.  call temp:= `compareAndSet`(v2, v10, v11, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2cac2c.  v11:= temp;
  #L2cac2e.  if v11 == 0 then goto L2cabd4;
  #L2cac32.  call `d`(v0, v10, v12) @signature `Lkotlinx/coroutines/z;.d:(Lkotlinx/coroutines/p;Ljava/lang/Throwable;)V` @kind virtual;
  #L2cac38.  return @kind void;
  #L2cac3a.  v11:= new `java.lang.IllegalStateException`;
  #L2cac3e.  v12:= "Must be called at most once" @kind object;
  #L2cac42.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cac48.  v12:= temp @kind object;
  #L2cac4a.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cac50.  throw v11;
  #L2cac52.  v8:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2cac56.  v9:= new `kotlinx.coroutines.z`;
  #L2cac5a.  v2:= 0I;
  #L2cac5c.  v3:= 0I;
  #L2cac5e.  v4:= 0I;
  #L2cac60.  v6:= 14I;
  #L2cac64.  v7:= 0I;
  #L2cac66.  v0:= v9 @kind object;
  #L2cac68.  v1:= v11 @kind object;
  #L2cac6a.  v5:= v12 @kind object;
  #L2cac6c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/l;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2cac72.  call temp:= `compareAndSet`(v8, v10, v11, v9) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2cac78.  v11:= temp;
  #L2cac7a.  if v11 == 0 then goto L2cabd4;
  #L2cac7e.  return @kind void;
  #L2cac80.  v11:= new `java.lang.IllegalStateException`;
  #L2cac84.  v12:= "Not completed" @kind object;
  #L2cac88.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cac8e.  v12:= temp @kind object;
  #L2cac90.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cac96.  goto L2cac9a;
  #L2cac98.  throw v11;
  #L2cac9a.  goto L2cac98;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/p;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca6f4.  v0:= 0I;
  #L2ca6f6.  call temp:= `O`(v1, v2, v3, v0) @signature `Lkotlinx/coroutines/p;.O:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/k0;` @kind direct;
  #L2ca6fc.  v2:= temp @kind object;
  #L2ca6fe.  return v2 @kind object;
}
procedure `kotlin.coroutines.Continuation` `c`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.c:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ca8d8.  v0:= v1.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ca8dc.  return v0 @kind object;
}
procedure `java.lang.Throwable` `d`(`kotlinx.coroutines.p` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/p;.d:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca85c.  call temp:= `d`(v2, v3) @signature `Lkotlinx/coroutines/v0;.d:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind super;
  #L2ca862.  v3:= temp @kind object;
  #L2ca864.  if v3 != 0 then goto L2ca86c;
  #L2ca868.  v3:= 0I;
  #L2ca86a.  goto L2ca896;
  #L2ca86c.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/p;.c:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2ca872.  v0:= temp @kind object;
  #L2ca874.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2ca87a.  v1:= temp;
  #L2ca87c.  if v1 == 0 then goto L2ca896;
  #L2ca880.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2ca884.  if v1 != 0 then goto L2ca88a;
  #L2ca888.  goto L2ca896;
  #L2ca88a.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L2ca88e.  call temp:= `a`(v3, v0) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2ca894.  v3:= temp @kind object;
  #L2ca896.  return v3 @kind object;
}
procedure `java.lang.Object` `e`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/p;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca5f0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.z` @kind boolean;
  #L2ca5f4.  if v0 == 0 then goto L2ca600;
  #L2ca5f8.  v2:= (`kotlinx.coroutines.z`) v2 @kind object;
  #L2ca5fc.  v2:= v2.`kotlinx.coroutines.z.a` @type ^`java.lang.Object` @kind object;
  #L2ca600.  return v2 @kind object;
}
procedure `java.lang.Object` `g`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.g:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca6d8.  call temp:= `x`(v1) @signature `Lkotlinx/coroutines/p;.x:()Ljava/lang/Object;` @kind virtual;
  #L2ca6de.  v0:= temp @kind object;
  #L2ca6e0.  return v0 @kind object;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.p` v2 @kind this) @signature `Lkotlinx/coroutines/p;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca908.  v0:= v2.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ca90c.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2ca910.  if v1 == 0 then goto L2ca91a;
  #L2ca914.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L2ca918.  goto L2ca91c;
  #L2ca91a.  v0:= 0I;
  #L2ca91c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca8f0.  v0:= v1.`kotlinx.coroutines.p.h` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2ca8f4.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca758.  v0:= 0I;
  #L2ca75a.  return v0 @kind object;
}
procedure `void` `i`(`kotlinx.coroutines.p` v11 @kind this, `kotlin.jvm.functions.Function1` v12 @kind object) @signature `Lkotlinx/coroutines/p;.i:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2cada8.  call temp:= `E`(v11, v12) @signature `Lkotlinx/coroutines/p;.E:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/l;` @kind direct;
  #L2cadae.  v8:= temp @kind object;
  #L2cadb0.  v9:= v11.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2cadb4.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.d` @kind boolean;
  #L2cadb8.  if v0 == 0 then goto L2cadce;
  #L2cadbc.  v0:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2cadc0.  call temp:= `compareAndSet`(v0, v11, v9, v8) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2cadc6.  v0:= temp;
  #L2cadc8.  if v0 == 0 then goto L2cadb0;
  #L2cadcc.  return @kind void;
  #L2cadce.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.l` @kind boolean;
  #L2cadd2.  if v0 == 0 then goto L2cadde;
  #L2cadd6.  call `F`(v11, v12, v9) @signature `Lkotlinx/coroutines/p;.F:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L2caddc.  goto L2cadb0;
  #L2cadde.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2cade2.  if v0 == 0 then goto L2cae22;
  #L2cade6.  v1:= v9 @kind object;
  #L2cade8.  v1:= (`kotlinx.coroutines.a0`) v1 @kind object;
  #L2cadec.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/a0;.b:()Z` @kind virtual;
  #L2cadf2.  v2:= temp;
  #L2cadf4.  if v2 != 0 then goto L2cadfe;
  #L2cadf8.  call `F`(v11, v12, v9) @signature `Lkotlinx/coroutines/p;.F:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L2cadfe.  v2:= instanceof @variable v9 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L2cae02.  if v2 == 0 then goto L2cae20;
  #L2cae06.  v2:= 0I;
  #L2cae08.  if v0 == 0 then goto L2cae0e;
  #L2cae0c.  goto L2cae10;
  #L2cae0e.  v1:= v2 @kind object;
  #L2cae10.  if v1 != 0 then goto L2cae16;
  #L2cae14.  goto L2cae1a;
  #L2cae16.  v2:= v1.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2cae1a.  call `k`(v11, v12, v2) @signature `Lkotlinx/coroutines/p;.k:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L2cae20.  return @kind void;
  #L2cae22.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.z` @kind boolean;
  #L2cae26.  if v0 == 0 then goto L2cae8a;
  #L2cae2a.  v0:= v9 @kind object;
  #L2cae2c.  v0:= (`kotlinx.coroutines.z`) v0 @kind object;
  #L2cae30.  v1:= v0.`kotlinx.coroutines.z.b` @type ^`kotlinx.coroutines.l` @kind object;
  #L2cae34.  if v1 == 0 then goto L2cae3e;
  #L2cae38.  call `F`(v11, v12, v9) @signature `Lkotlinx/coroutines/p;.F:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L2cae3e.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.e` @kind boolean;
  #L2cae42.  if v1 == 0 then goto L2cae48;
  #L2cae46.  return @kind void;
  #L2cae48.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/z;.c:()Z` @kind virtual;
  #L2cae4e.  v1:= temp;
  #L2cae50.  if v1 == 0 then goto L2cae60;
  #L2cae54.  v0:= v0.`kotlinx.coroutines.z.e` @type ^`java.lang.Throwable` @kind object;
  #L2cae58.  call `k`(v11, v12, v0) @signature `Lkotlinx/coroutines/p;.k:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L2cae5e.  return @kind void;
  #L2cae60.  v1:= 0I;
  #L2cae62.  v3:= 0I;
  #L2cae64.  v4:= 0I;
  #L2cae66.  v5:= 0I;
  #L2cae68.  v6:= 29I;
  #L2cae6c.  v7:= 0I;
  #L2cae6e.  v2:= v8 @kind object;
  #L2cae70.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/z;.b:(Lkotlinx/coroutines/z;Ljava/lang/Object;Lkotlinx/coroutines/l;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/z;` @kind static;
  #L2cae76.  v0:= temp @kind object;
  #L2cae78.  v1:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2cae7c.  call temp:= `compareAndSet`(v1, v11, v9, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2cae82.  v0:= temp;
  #L2cae84.  if v0 == 0 then goto L2cadb0;
  #L2cae88.  return @kind void;
  #L2cae8a.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.e` @kind boolean;
  #L2cae8e.  if v0 == 0 then goto L2cae94;
  #L2cae92.  return @kind void;
  #L2cae94.  v10:= new `kotlinx.coroutines.z`;
  #L2cae98.  v3:= 0I;
  #L2cae9a.  v4:= 0I;
  #L2cae9c.  v5:= 0I;
  #L2cae9e.  v6:= 28I;
  #L2caea2.  v7:= 0I;
  #L2caea4.  v0:= v10 @kind object;
  #L2caea6.  v1:= v9 @kind object;
  #L2caea8.  v2:= v8 @kind object;
  #L2caeaa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/l;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2caeb0.  v0:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2caeb4.  call temp:= `compareAndSet`(v0, v11, v9, v10) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2caeba.  v0:= temp;
  #L2caebc.  if v0 == 0 then goto L2cadb0;
  #L2caec0.  return @kind void;
}
procedure `java.lang.Object` `j`(`kotlinx.coroutines.p` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/p;.j:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca72c.  v0:= new `kotlinx.coroutines.a0`;
  #L2ca730.  v1:= 0I;
  #L2ca732.  v2:= 2I;
  #L2ca734.  v3:= 0I;
  #L2ca736.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/a0;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2ca73c.  call temp:= `O`(v4, v0, v3, v3) @signature `Lkotlinx/coroutines/p;.O:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/k0;` @kind direct;
  #L2ca742.  v5:= temp @kind object;
  #L2ca744.  return v5 @kind object;
}
procedure `java.lang.Object` `l`(`kotlinx.coroutines.p` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/p;.l:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2ca710.  call temp:= `O`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/p;.O:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/k0;` @kind direct;
  #L2ca716.  v1:= temp @kind object;
  #L2ca718.  return v1 @kind object;
}
procedure `void` `m`(`kotlinx.coroutines.p` v2 @kind this, `kotlinx.coroutines.l` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/p;.m:(Lkotlinx/coroutines/l;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cab3c.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/m;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2cab42.  goto L2cab6a;
  #L2cab44.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cab46.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2cab4c.  v4:= temp @kind object;
  #L2cab4e.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L2cab52.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L2cab56.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cab5c.  v1:= temp @kind object;
  #L2cab5e.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2cab64.  call `a`(v4, v0) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2cab6a.  return @kind void;
  catch `java.lang.Throwable` @[L2cab3c..L2cab42] goto L2cab44;
}
procedure `void` `n`(`kotlinx.coroutines.p` v6 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/p;.n:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2cb088.  v0:= v6.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2cb08c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.j` @kind boolean;
  #L2cb090.  v2:= 0I;
  #L2cb092.  if v1 == 0 then goto L2cb09c;
  #L2cb096.  v0:= (`kotlinx.coroutines.internal.j`) v0 @kind object;
  #L2cb09a.  goto L2cb09e;
  #L2cb09c.  v0:= v2 @kind object;
  #L2cb09e.  if v0 != 0 then goto L2cb0a4;
  #L2cb0a2.  goto L2cb0a8;
  #L2cb0a4.  v2:= v0.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2cb0a8.  if v2 != v7 then goto L2cb0b2;
  #L2cb0ac.  v7:= 4I;
  #L2cb0ae.  v2:= 4I;
  #L2cb0b0.  goto L2cb0b8;
  #L2cb0b2.  v7:= v6.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2cb0b6.  v2:= v7;
  #L2cb0b8.  v3:= 0I;
  #L2cb0ba.  v4:= 4I;
  #L2cb0bc.  v5:= 0I;
  #L2cb0be.  v0:= v6 @kind object;
  #L2cb0c0.  v1:= v8 @kind object;
  #L2cb0c2.  call `L`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/p;.L:(Lkotlinx/coroutines/p;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L2cb0c8.  return @kind void;
}
procedure `void` `o`(`kotlinx.coroutines.p` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/p;.o:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cab88.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2cab8e.  goto L2cabb6;
  #L2cab90.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cab92.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2cab98.  v4:= temp @kind object;
  #L2cab9a.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L2cab9e.  v1:= "Exception in resume onCancellation handler for " @kind object;
  #L2caba2.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2caba8.  v1:= temp @kind object;
  #L2cabaa.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2cabb0.  call `a`(v4, v0) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2cabb6.  return @kind void;
  catch `java.lang.Throwable` @[L2cab88..L2cab8e] goto L2cab90;
}
procedure `void` `q`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.q:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cacf4.  v0:= v1.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` @kind object;
  #L2cacf8.  if v0 != 0 then goto L2cacfe;
  #L2cacfc.  return @kind void;
  #L2cacfe.  call `dispose`(v0) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2cad04.  v0:= `@@kotlinx.coroutines.o2.b` @type ^`kotlinx.coroutines.o2` @kind object;
  #L2cad08.  v1.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` := v0 @kind object;
  #L2cad0c.  return @kind void;
}
procedure `void` `r`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/p;.r:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cafa0.  v0:= v1.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2cafa4.  call `K`(v1, v2, v0, v3) @signature `Lkotlinx/coroutines/p;.K:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2cafaa.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.p` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/p;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2cb0dc.  call temp:= `c`(v7, v6) @signature `Lkotlinx/coroutines/d0;.c:(Ljava/lang/Object;Lkotlinx/coroutines/o;)Ljava/lang/Object;` @kind static;
  #L2cb0e2.  v1:= temp @kind object;
  #L2cb0e4.  v2:= v6.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2cb0e8.  v3:= 0I;
  #L2cb0ea.  v4:= 4I;
  #L2cb0ec.  v5:= 0I;
  #L2cb0ee.  v0:= v6 @kind object;
  #L2cb0f0.  call `L`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/p;.L:(Lkotlinx/coroutines/p;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L2cb0f6.  return @kind void;
}
procedure `boolean` `t`(`kotlinx.coroutines.p` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/p;.t:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca290.  v0:= v4.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2ca294.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p2` @kind boolean;
  #L2ca298.  if v1 != 0 then goto L2ca2a0;
  #L2ca29c.  v5:= 0I;
  #L2ca29e.  return v5;
  #L2ca2a0.  v1:= new `kotlinx.coroutines.s`;
  #L2ca2a4.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.l` @kind boolean;
  #L2ca2a8.  call `<init>`(v1, v4, v5, v2) @signature `Lkotlinx/coroutines/s;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;Z)V` @kind direct;
  #L2ca2ae.  v3:= `@@kotlinx.coroutines.p.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2ca2b2.  call temp:= `compareAndSet`(v3, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2ca2b8.  v1:= temp;
  #L2ca2ba.  if v1 != 0 then goto L2ca2c0;
  #L2ca2be.  goto L2ca290;
  #L2ca2c0.  if v2 == 0 then goto L2ca2ca;
  #L2ca2c4.  v0:= (`kotlinx.coroutines.l`) v0 @kind object;
  #L2ca2c8.  goto L2ca2cc;
  #L2ca2ca.  v0:= 0I;
  #L2ca2cc.  if v0 != 0 then goto L2ca2d2;
  #L2ca2d0.  goto L2ca2d8;
  #L2ca2d2.  call `m`(v4, v0, v5) @signature `Lkotlinx/coroutines/p;.m:(Lkotlinx/coroutines/l;Ljava/lang/Throwable;)V` @kind virtual;
  #L2ca2d8.  call `s`(v4) @signature `Lkotlinx/coroutines/p;.s:()V` @kind direct;
  #L2ca2de.  v5:= v4.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2ca2e2.  call `u`(v4, v5) @signature `Lkotlinx/coroutines/p;.u:(I)V` @kind direct;
  #L2ca2e8.  v5:= 1I;
  #L2ca2ea.  return v5;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.p` v2 @kind this) @signature `Lkotlinx/coroutines/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca7c0.  v0:= new `java.lang.StringBuilder`;
  #L2ca7c4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ca7ca.  call temp:= `G`(v2) @signature `Lkotlinx/coroutines/p;.G:()Ljava/lang/String;` @kind virtual;
  #L2ca7d0.  v1:= temp @kind object;
  #L2ca7d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca7d8.  v1:= 40I;
  #L2ca7dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca7e2.  v1:= v2.`kotlinx.coroutines.p.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2ca7e6.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/p0;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L2ca7ec.  v1:= temp @kind object;
  #L2ca7ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca7f4.  v1:= "){" @kind object;
  #L2ca7f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca7fe.  call temp:= `y`(v2) @signature `Lkotlinx/coroutines/p;.y:()Ljava/lang/String;` @kind direct;
  #L2ca804.  v1:= temp @kind object;
  #L2ca806.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca80c.  v1:= "}@" @kind object;
  #L2ca810.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca816.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ca81c.  v1:= temp @kind object;
  #L2ca81e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca824.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca82a.  v0:= temp @kind object;
  #L2ca82c.  return v0 @kind object;
}
procedure `java.lang.Throwable` `v`(`kotlinx.coroutines.p` v0 @kind this, `kotlinx.coroutines.z1` v1 @kind object) @signature `Lkotlinx/coroutines/p;.v:(Lkotlinx/coroutines/z1;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L2ca840.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/z1;.o:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L2ca846.  v1:= temp @kind object;
  #L2ca848.  return v1 @kind object;
}
procedure `java.lang.Object` `w`(`kotlinx.coroutines.p` v3 @kind this) @signature `Lkotlinx/coroutines/p;.w:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ca4f4.  call temp:= `D`(v3) @signature `Lkotlinx/coroutines/p;.D:()Z` @kind direct;
  #L2ca4fa.  v0:= temp;
  #L2ca4fc.  call temp:= `P`(v3) @signature `Lkotlinx/coroutines/p;.P:()Z` @kind direct;
  #L2ca502.  v1:= temp;
  #L2ca504.  if v1 == 0 then goto L2ca52a;
  #L2ca508.  v1:= v3.`kotlinx.coroutines.p.i` @type ^`kotlinx.coroutines.z0` @kind object;
  #L2ca50c.  if v1 != 0 then goto L2ca516;
  #L2ca510.  call temp:= `B`(v3) @signature `Lkotlinx/coroutines/p;.B:()Lkotlinx/coroutines/z0;` @kind direct;
  #L2ca516.  if v0 == 0 then goto L2ca520;
  #L2ca51a.  call `I`(v3) @signature `Lkotlinx/coroutines/p;.I:()V` @kind direct;
  #L2ca520.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ca526.  v0:= temp @kind object;
  #L2ca528.  return v0 @kind object;
  #L2ca52a.  if v0 == 0 then goto L2ca534;
  #L2ca52e.  call `I`(v3) @signature `Lkotlinx/coroutines/p;.I:()V` @kind direct;
  #L2ca534.  call temp:= `x`(v3) @signature `Lkotlinx/coroutines/p;.x:()Ljava/lang/Object;` @kind virtual;
  #L2ca53a.  v0:= temp @kind object;
  #L2ca53c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2ca540.  if v1 == 0 then goto L2ca562;
  #L2ca544.  v0:= (`kotlinx.coroutines.a0`) v0 @kind object;
  #L2ca548.  v0:= v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2ca54c.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2ca552.  v1:= temp;
  #L2ca554.  if v1 == 0 then goto L2ca560;
  #L2ca558.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2ca55e.  v0:= temp @kind object;
  #L2ca560.  throw v0;
  #L2ca562.  v1:= v3.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2ca566.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/w0;.b:(I)Z` @kind static;
  #L2ca56c.  v1:= temp;
  #L2ca56e.  if v1 == 0 then goto L2ca5be;
  #L2ca572.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/p;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2ca578.  v1:= temp @kind object;
  #L2ca57a.  v2:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2ca57e.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2ca584.  v1:= temp @kind object;
  #L2ca586.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2ca58a.  if v1 == 0 then goto L2ca5be;
  #L2ca58e.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/z1;.a:()Z` @kind interface;
  #L2ca594.  v2:= temp;
  #L2ca596.  if v2 != 0 then goto L2ca5be;
  #L2ca59a.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/z1;.o:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L2ca5a0.  v1:= temp @kind object;
  #L2ca5a2.  call `a`(v3, v0, v1) @signature `Lkotlinx/coroutines/p;.a:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L2ca5a8.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2ca5ae.  v0:= temp;
  #L2ca5b0.  if v0 == 0 then goto L2ca5bc;
  #L2ca5b4.  call temp:= `a`(v1, v3) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2ca5ba.  v1:= temp @kind object;
  #L2ca5bc.  throw v1;
  #L2ca5be.  call temp:= `e`(v3, v0) @signature `Lkotlinx/coroutines/p;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ca5c4.  v0:= temp @kind object;
  #L2ca5c6.  return v0 @kind object;
}
procedure `java.lang.Object` `x`(`kotlinx.coroutines.p` v1 @kind this) @signature `Lkotlinx/coroutines/p;.x:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ca5d8.  v0:= v1.`kotlinx.coroutines.p._state` @type ^`java.lang.Object` @kind object;
  #L2ca5dc.  return v0 @kind object;
}
procedure `void` `z`(`kotlinx.coroutines.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/p;.z:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cacac.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2cacb2.  v0:= temp;
  #L2cacb4.  if v0 == 0 then goto L2cacd8;
  #L2cacb8.  v0:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2cacbc.  if v2 != v0 then goto L2cacc4;
  #L2cacc0.  v2:= 1I;
  #L2cacc2.  goto L2cacc6;
  #L2cacc4.  v2:= 0I;
  #L2cacc6.  if v2 == 0 then goto L2caccc;
  #L2cacca.  goto L2cacd8;
  #L2caccc.  v2:= new `java.lang.AssertionError`;
  #L2cacd0.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2cacd6.  throw v2;
  #L2cacd8.  v2:= v1.`kotlinx.coroutines.v0.d` @type ^`int`;
  #L2cacdc.  call `u`(v1, v2) @signature `Lkotlinx/coroutines/p;.u:(I)V` @kind direct;
  #L2cace2.  return @kind void;
}
