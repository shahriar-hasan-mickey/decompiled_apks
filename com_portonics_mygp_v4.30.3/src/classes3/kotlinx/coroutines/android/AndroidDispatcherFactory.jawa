record `kotlinx.coroutines.android.AndroidDispatcherFactory` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.MainDispatcherFactory` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.android.AndroidDispatcherFactory` v0 @kind this) @signature `Lkotlinx/coroutines/android/AndroidDispatcherFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d0f84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d0f8a.  return @kind void;
}
procedure `kotlinx.coroutines.m2` `createDispatcher`(`kotlinx.coroutines.android.AndroidDispatcherFactory` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/android/AndroidDispatcherFactory;.createDispatcher:(Ljava/util/List;)Lkotlinx/coroutines/m2;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d0f3c.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L2d0f42.  v4:= temp @kind object;
  #L2d0f44.  if v4 == 0 then goto L2d0f62;
  #L2d0f48.  v0:= new `kotlinx.coroutines.android.HandlerContext`;
  #L2d0f4c.  v1:= 1I;
  #L2d0f4e.  call temp:= `a`(v4, v1) @signature `Lkotlinx/coroutines/android/d;.a:(Landroid/os/Looper;Z)Landroid/os/Handler;` @kind static;
  #L2d0f54.  v4:= temp @kind object;
  #L2d0f56.  v1:= 2I;
  #L2d0f58.  v2:= 0I;
  #L2d0f5a.  call `<init>`(v0, v4, v2, v1, v2) @signature `Lkotlinx/coroutines/android/HandlerContext;.<init>:(Landroid/os/Handler;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2d0f60.  return v0 @kind object;
  #L2d0f62.  v4:= new `java.lang.IllegalStateException`;
  #L2d0f66.  v0:= "The main looper is not available" @kind object;
  #L2d0f6a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d0f70.  throw v4;
}
procedure `int` `getLoadPriority`(`kotlinx.coroutines.android.AndroidDispatcherFactory` v1 @kind this) @signature `Lkotlinx/coroutines/android/AndroidDispatcherFactory;.getLoadPriority:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0f0c.  v0:= 1073741823I;
  #L2d0f12.  return v0;
}
procedure `java.lang.String` `hintOnError`(`kotlinx.coroutines.android.AndroidDispatcherFactory` v1 @kind this) @signature `Lkotlinx/coroutines/android/AndroidDispatcherFactory;.hintOnError:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0f24.  v0:= "For tests Dispatchers.setMain from kotlinx-coroutines-test module can be used" @kind object;
  #L2d0f28.  return v0 @kind object;
}
