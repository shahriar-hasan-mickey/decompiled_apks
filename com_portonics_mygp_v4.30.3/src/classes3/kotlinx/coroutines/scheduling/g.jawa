record `kotlinx.coroutines.scheduling.g` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.scheduling.i` @kind class {
}
global `kotlinx.coroutines.scheduling.g` `@@kotlinx.coroutines.scheduling.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ede24.  v0:= new `kotlinx.coroutines.scheduling.g`;
  #L2ede28.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/g;.<init>:()V` @kind direct;
  #L2ede2e.  `@@kotlinx.coroutines.scheduling.g.a` @type ^`kotlinx.coroutines.scheduling.g` := v0 @kind object;
  #L2ede32.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.g` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ede44.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.<init>:()V` @kind direct;
  #L2ede4a.  return @kind void;
}
procedure `long` `a`(`kotlinx.coroutines.scheduling.g` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/g;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ede08.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L2ede0e.  v0:= temp @kind wide;
  #L2ede10.  return v0 @kind wide;
}
