record `kotlinx.coroutines.scheduling.CoroutineScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface, `java.io.Closeable` @kind interface {
  `int` `kotlinx.coroutines.scheduling.CoroutineScheduler._isTerminated` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @AccessFlag VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.scheduling.CoroutineScheduler.g` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.scheduling.CoroutineScheduler.h` @AccessFlag PUBLIC_FINAL;
  `long` `kotlinx.coroutines.scheduling.CoroutineScheduler.i` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.CoroutineScheduler.j` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.f` `kotlinx.coroutines.scheduling.CoroutineScheduler.k` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.f` `kotlinx.coroutines.scheduling.CoroutineScheduler.l` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.h0` `kotlinx.coroutines.scheduling.CoroutineScheduler.m` @AccessFlag PUBLIC_FINAL;
  `long` `kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `kotlinx.coroutines.scheduling.a` `@@kotlinx.coroutines.scheduling.CoroutineScheduler.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.CoroutineScheduler.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.CoroutineScheduler.d` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.scheduling.CoroutineScheduler.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.scheduling.CoroutineScheduler.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2ed634.  v0:= new `kotlinx.coroutines.scheduling.a`;
  #L2ed638.  v1:= 0I;
  #L2ed63a.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2ed640.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler.b` @type ^`kotlinx.coroutines.scheduling.a` := v0 @kind object;
  #L2ed644.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2ed648.  v1:= "NOT_IN_STACK" @kind object;
  #L2ed64c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed652.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler.f` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2ed656.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2ed65a.  v1:= "parkedWorkersStack" @kind object;
  #L2ed65e.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L2ed664.  v0:= temp @kind object;
  #L2ed666.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler.c` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L2ed66a.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2ed66e.  v1:= "controlState" @kind object;
  #L2ed672.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L2ed678.  v0:= temp @kind object;
  #L2ed67a.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler.d` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L2ed67e.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2ed682.  v1:= "_isTerminated" @kind object;
  #L2ed686.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L2ed68c.  v0:= temp @kind object;
  #L2ed68e.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L2ed692.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v3 @kind this, `int` v4 , `int` v5 , `long` v6 , `java.lang.String` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ed6a4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ed6aa.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int` := v4;
  #L2ed6ae.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.h` @type ^`int` := v5;
  #L2ed6b2.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.i` @type ^`long` := v6 @kind wide;
  #L2ed6b6.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.j` @type ^`java.lang.String` := v8 @kind object;
  #L2ed6ba.  v8:= 0I;
  #L2ed6bc.  v0:= 1I;
  #L2ed6be.  if v4 < v0 then goto L2ed6c6;
  #L2ed6c2.  v1:= 1I;
  #L2ed6c4.  goto L2ed6c8;
  #L2ed6c6.  v1:= 0I;
  #L2ed6c8.  if v1 == 0 then goto L2ed808;
  #L2ed6cc.  if v5 < v4 then goto L2ed6d4;
  #L2ed6d0.  v1:= 1I;
  #L2ed6d2.  goto L2ed6d6;
  #L2ed6d4.  v1:= 0I;
  #L2ed6d6.  v2:= "Max pool size " @kind object;
  #L2ed6da.  if v1 == 0 then goto L2ed7c6;
  #L2ed6de.  v1:= 2097150I;
  #L2ed6e4.  if v5 > v1 then goto L2ed6ec;
  #L2ed6e8.  v1:= 1I;
  #L2ed6ea.  goto L2ed6ee;
  #L2ed6ec.  v1:= 0I;
  #L2ed6ee.  if v1 == 0 then goto L2ed78a;
  #L2ed6f2.  v1:= 0L;
  #L2ed6f6.  v5:= lcmp(v6, v1);
  #L2ed6fa.  if v5 <= 0 then goto L2ed700;
  #L2ed6fe.  goto L2ed702;
  #L2ed700.  v0:= 0I;
  #L2ed702.  if v0 == 0 then goto L2ed74a;
  #L2ed706.  v5:= new `kotlinx.coroutines.scheduling.f`;
  #L2ed70a.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/f;.<init>:()V` @kind direct;
  #L2ed710.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.k` @type ^`kotlinx.coroutines.scheduling.f` := v5 @kind object;
  #L2ed714.  v5:= new `kotlinx.coroutines.scheduling.f`;
  #L2ed718.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/f;.<init>:()V` @kind direct;
  #L2ed71e.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` := v5 @kind object;
  #L2ed722.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @type ^`long` := v1 @kind wide;
  #L2ed726.  v5:= new `kotlinx.coroutines.internal.h0`;
  #L2ed72a.  v6:= v4 + 1;
  #L2ed72e.  call `<init>`(v5, v6) @signature `Lkotlinx/coroutines/internal/h0;.<init>:(I)V` @kind direct;
  #L2ed734.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` := v5 @kind object;
  #L2ed738.  v4:= (`long`) v4 @kind i2l;
  #L2ed73a.  v6:= 42I;
  #L2ed73e.  v4:= v4 ^< v6 @kind long;
  #L2ed740.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` := v4 @kind wide;
  #L2ed744.  v3.`kotlinx.coroutines.scheduling.CoroutineScheduler._isTerminated` @type ^`int` := v8;
  #L2ed748.  return @kind void;
  #L2ed74a.  v4:= new `java.lang.StringBuilder`;
  #L2ed74e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed754.  v5:= "Idle worker keep alive time " @kind object;
  #L2ed758.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed75e.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed764.  v5:= " must be positive" @kind object;
  #L2ed768.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed76e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed774.  v4:= temp @kind object;
  #L2ed776.  v5:= new `java.lang.IllegalArgumentException`;
  #L2ed77a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed780.  v4:= temp @kind object;
  #L2ed782.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed788.  throw v5;
  #L2ed78a.  v4:= new `java.lang.StringBuilder`;
  #L2ed78e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed794.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed79a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7a0.  v5:= " should not exceed maximal supported number of threads 2097150" @kind object;
  #L2ed7a4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7aa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed7b0.  v4:= temp @kind object;
  #L2ed7b2.  v5:= new `java.lang.IllegalArgumentException`;
  #L2ed7b6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed7bc.  v4:= temp @kind object;
  #L2ed7be.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed7c4.  throw v5;
  #L2ed7c6.  v6:= new `java.lang.StringBuilder`;
  #L2ed7ca.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed7d0.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7d6.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7dc.  v5:= " should be greater than or equals to core pool size " @kind object;
  #L2ed7e0.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7e6.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed7ec.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed7f2.  v4:= temp @kind object;
  #L2ed7f4.  v5:= new `java.lang.IllegalArgumentException`;
  #L2ed7f8.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed7fe.  v4:= temp @kind object;
  #L2ed800.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed806.  throw v5;
  #L2ed808.  v5:= new `java.lang.StringBuilder`;
  #L2ed80c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed812.  v6:= "Core pool size " @kind object;
  #L2ed816.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed81c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed822.  v4:= " should be at least 1" @kind object;
  #L2ed826.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed82c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed832.  v4:= temp @kind object;
  #L2ed834.  v5:= new `java.lang.IllegalArgumentException`;
  #L2ed838.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed83e.  v4:= temp @kind object;
  #L2ed840.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed846.  throw v5;
}
procedure `kotlinx.coroutines.scheduling.j` `G0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v2 @kind this, `kotlinx.coroutines.scheduling.c` v3 @kind object, `kotlinx.coroutines.scheduling.j` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.G0:(Lkotlinx/coroutines/scheduling/c;Lkotlinx/coroutines/scheduling/j;Z)Lkotlinx/coroutines/scheduling/j;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2ed5dc.  if v3 != 0 then goto L2ed5e2;
  #L2ed5e0.  return v4 @kind object;
  #L2ed5e2.  v0:= v3.`kotlinx.coroutines.scheduling.c.d` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ed5e6.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ed5ea.  if v0 != v1 then goto L2ed5f0;
  #L2ed5ee.  return v4 @kind object;
  #L2ed5f0.  v0:= v4.`kotlinx.coroutines.scheduling.j.c` @type ^`kotlinx.coroutines.scheduling.k` @kind object;
  #L2ed5f4.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/k;.b:()I` @kind interface;
  #L2ed5fa.  v0:= temp;
  #L2ed5fc.  if v0 != 0 then goto L2ed60e;
  #L2ed600.  v0:= v3.`kotlinx.coroutines.scheduling.c.d` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ed604.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ed608.  if v0 != v1 then goto L2ed60e;
  #L2ed60c.  return v4 @kind object;
  #L2ed60e.  v0:= 1I;
  #L2ed610.  v3.`kotlinx.coroutines.scheduling.c.h` @type ^`boolean` := v0 @kind boolean;
  #L2ed614.  v3:= v3.`kotlinx.coroutines.scheduling.c.c` @type ^`kotlinx.coroutines.scheduling.p` @kind object;
  #L2ed618.  call temp:= `a`(v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/p;.a:(Lkotlinx/coroutines/scheduling/j;Z)Lkotlinx/coroutines/scheduling/j;` @kind virtual;
  #L2ed61e.  v3:= temp @kind object;
  #L2ed620.  return v3 @kind object;
}
procedure `boolean` `K0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v4 @kind this, `long` v5 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.K0:(J)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ed01c.  v0:= 2097151L;
  #L2ed022.  v0:= v0 ^& v5 @kind long;
  #L2ed024.  v1:= (`int`) v0 @kind l2i;
  #L2ed026.  v2:= 4398044413952L;
  #L2ed030.  v5:= v5 ^& v2 @kind long;
  #L2ed032.  v0:= 21I;
  #L2ed036.  v5:= v5 ^> v0 @kind long;
  #L2ed038.  v6:= (`int`) v5 @kind l2i;
  #L2ed03a.  v1:= v1 - v6 @kind int;
  #L2ed03c.  v5:= 0I;
  #L2ed03e.  call temp:= `coerceAtLeast`(v1, v5) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L2ed044.  v6:= temp;
  #L2ed046.  v0:= v4.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2ed04a.  if v6 >= v0 then goto L2ed070;
  #L2ed04e.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.c:()I` @kind direct;
  #L2ed054.  v6:= temp;
  #L2ed056.  v0:= 1I;
  #L2ed058.  if v6 != v0 then goto L2ed06a;
  #L2ed05c.  v1:= v4.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2ed060.  if v1 <= v0 then goto L2ed06a;
  #L2ed064.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.c:()I` @kind direct;
  #L2ed06a.  if v6 <= 0 then goto L2ed070;
  #L2ed06e.  return v0;
  #L2ed070.  return v5;
}
procedure `boolean` `N0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v0 @kind object, `long` v1 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.N0:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;JILjava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2ecff4.  v3:= v3 ^& 1;
  #L2ecff8.  if v3 == 0 then goto L2ed000;
  #L2ecffc.  v1:= v0.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2ed000.  call temp:= `K0`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.K0:(J)Z` @kind direct;
  #L2ed006.  v0:= temp;
  #L2ed008.  return v0;
}
procedure `boolean` `O0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.O0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ed084.  call temp:= `v`(v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.v:()Lkotlinx/coroutines/scheduling/c;` @kind direct;
  #L2ed08a.  v0:= temp @kind object;
  #L2ed08c.  v1:= 0I;
  #L2ed08e.  if v0 != 0 then goto L2ed094;
  #L2ed092.  return v1;
  #L2ed094.  v2:= `@@kotlinx.coroutines.scheduling.c.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2ed098.  v3:= -1I;
  #L2ed09a.  call temp:= `compareAndSet`(v2, v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2ed0a0.  v1:= temp;
  #L2ed0a2.  if v1 == 0 then goto L2ed084;
  #L2ed0a6.  call `unpark`(v0) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L2ed0ac.  v0:= 1I;
  #L2ed0ae.  return v0;
}
procedure `boolean` `a`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v2 @kind this, `kotlinx.coroutines.scheduling.j` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.a:(Lkotlinx/coroutines/scheduling/j;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2ecef4.  v0:= v3.`kotlinx.coroutines.scheduling.j.c` @type ^`kotlinx.coroutines.scheduling.k` @kind object;
  #L2ecef8.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/k;.b:()I` @kind interface;
  #L2ecefe.  v0:= temp;
  #L2ecf00.  v1:= 1I;
  #L2ecf02.  if v0 != v1 then goto L2ecf08;
  #L2ecf06.  goto L2ecf0a;
  #L2ecf08.  v1:= 0I;
  #L2ecf0a.  if v1 == 0 then goto L2ecf1c;
  #L2ecf0e.  v0:= v2.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2ecf12.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/y;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ecf18.  v3:= temp;
  #L2ecf1a.  goto L2ecf28;
  #L2ecf1c.  v0:= v2.`kotlinx.coroutines.scheduling.CoroutineScheduler.k` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2ecf20.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/y;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ecf26.  v3:= temp;
  #L2ecf28.  return v3;
}
procedure `int` `c`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v10 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.c:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2ed0c0.  v0:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed0c4.  @monitorenter v0
  #L2ed0c6.  call temp:= `isTerminated`(v10) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.isTerminated:()Z` @kind virtual;
  #L2ed0cc.  v1:= temp;
  #L2ed0ce.  if v1 == 0 then goto L2ed0d8;
  #L2ed0d2.  v1:= -1I;
  #L2ed0d4.  @monitorexit v0
  #L2ed0d6.  return v1;
  #L2ed0d8.  v1:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2ed0dc.  v3:= 2097151L;
  #L2ed0e2.  v5:= v1 ^& v3 @kind long;
  #L2ed0e6.  v6:= (`int`) v5 @kind l2i;
  #L2ed0e8.  v7:= 4398044413952L;
  #L2ed0f2.  v1:= v1 ^& v7 @kind long;
  #L2ed0f4.  v5:= 21I;
  #L2ed0f8.  v1:= v1 ^> v5 @kind long;
  #L2ed0fa.  v2:= (`int`) v1 @kind l2i;
  #L2ed0fc.  v1:= v6 - v2 @kind int;
  #L2ed100.  v2:= 0I;
  #L2ed102.  call temp:= `coerceAtLeast`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L2ed108.  v1:= temp;
  #L2ed10a.  v5:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2ed10e.  if v1 < v5 then goto L2ed116;
  #L2ed112.  @monitorexit v0
  #L2ed114.  return v2;
  #L2ed116.  v5:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.h` @type ^`int`;
  #L2ed11a.  if v6 < v5 then goto L2ed122;
  #L2ed11e.  @monitorexit v0
  #L2ed120.  return v2;
  #L2ed122.  v5:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2ed126.  v5:= v5 ^& v3 @kind long;
  #L2ed128.  v6:= (`int`) v5 @kind l2i;
  #L2ed12a.  v5:= 1I;
  #L2ed12c.  v6:= v6 + v5 @kind int;
  #L2ed12e.  if v6 <= 0 then goto L2ed146;
  #L2ed132.  v7:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed136.  call temp:= `b`(v7, v6) @signature `Lkotlinx/coroutines/internal/h0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L2ed13c.  v7:= temp @kind object;
  #L2ed13e.  if v7 != 0 then goto L2ed146;
  #L2ed142.  v7:= 1I;
  #L2ed144.  goto L2ed148;
  #L2ed146.  v7:= 0I;
  #L2ed148.  if v7 == 0 then goto L2ed19e;
  #L2ed14c.  v7:= new `kotlinx.coroutines.scheduling.c`;
  #L2ed150.  call `<init>`(v7, v10, v6) @signature `Lkotlinx/coroutines/scheduling/c;.<init>:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;I)V` @kind direct;
  #L2ed156.  v8:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed15a.  call `c`(v8, v6, v7) @signature `Lkotlinx/coroutines/internal/h0;.c:(ILjava/lang/Object;)V` @kind virtual;
  #L2ed160.  v8:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.d` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L2ed164.  call temp:= `incrementAndGet`(v8, v10) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J` @kind virtual;
  #L2ed16a.  v8:= temp @kind wide;
  #L2ed16c.  v3:= v3 ^& v8 @kind long;
  #L2ed16e.  v4:= (`int`) v3 @kind l2i;
  #L2ed170.  if v6 != v4 then goto L2ed176;
  #L2ed174.  v2:= 1I;
  #L2ed176.  if v2 == 0 then goto L2ed186;
  #L2ed17a.  call `start`(v7) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L2ed180.  v1:= v1 + v5 @kind int;
  #L2ed182.  @monitorexit v0
  #L2ed184.  return v1;
  #L2ed186.  v1:= "Failed requirement." @kind object;
  #L2ed18a.  v2:= new `java.lang.IllegalArgumentException`;
  #L2ed18e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed194.  v1:= temp @kind object;
  #L2ed196.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed19c.  throw v2;
  #L2ed19e.  v1:= "Failed requirement." @kind object;
  #L2ed1a2.  v2:= new `java.lang.IllegalArgumentException`;
  #L2ed1a6.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed1ac.  v1:= temp @kind object;
  #L2ed1ae.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed1b4.  throw v2;
  #L2ed1b6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ed1b8.  @monitorexit v0
  #L2ed1ba.  throw v1;
  catch `java.lang.Throwable` @[L2ed0c6..L2ed0ce] goto L2ed1b6;
  catch `java.lang.Throwable` @[L2ed0d8..L2ed10e] goto L2ed1b6;
  catch `java.lang.Throwable` @[L2ed116..L2ed11a] goto L2ed1b6;
  catch `java.lang.Throwable` @[L2ed122..L2ed180] goto L2ed1b6;
  catch `java.lang.Throwable` @[L2ed186..L2ed1b6] goto L2ed1b6;
}
procedure `kotlinx.coroutines.scheduling.c` `k`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v3 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.k:()Lkotlinx/coroutines/scheduling/c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ed4d8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ed4de.  v0:= temp @kind object;
  #L2ed4e0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.scheduling.c` @kind boolean;
  #L2ed4e4.  v2:= 0I;
  #L2ed4e6.  if v1 == 0 then goto L2ed4f0;
  #L2ed4ea.  v0:= (`kotlinx.coroutines.scheduling.c`) v0 @kind object;
  #L2ed4ee.  goto L2ed4f2;
  #L2ed4f0.  v0:= v2 @kind object;
  #L2ed4f2.  if v0 != 0 then goto L2ed4f8;
  #L2ed4f6.  goto L2ed50e;
  #L2ed4f8.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/c;.a:(Lkotlinx/coroutines/scheduling/c;)Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind static;
  #L2ed4fe.  v1:= temp @kind object;
  #L2ed500.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ed506.  v1:= temp;
  #L2ed508.  if v1 == 0 then goto L2ed50e;
  #L2ed50c.  v2:= v0 @kind object;
  #L2ed50e.  return v2 @kind object;
}
procedure `void` `o`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v0 @kind object, `java.lang.Runnable` v1 @kind object, `kotlinx.coroutines.scheduling.k` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;ZILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2ed874.  v5:= v4 ^& 2;
  #L2ed878.  if v5 == 0 then goto L2ed880;
  #L2ed87c.  v2:= `@@kotlinx.coroutines.scheduling.n.f` @type ^`kotlinx.coroutines.scheduling.k` @kind object;
  #L2ed880.  v4:= v4 ^& 4;
  #L2ed884.  if v4 == 0 then goto L2ed88a;
  #L2ed888.  v3:= 0I;
  #L2ed88a.  call `m`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.m:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;Z)V` @kind virtual;
  #L2ed890.  return @kind void;
}
procedure `int` `s`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v1 @kind this, `kotlinx.coroutines.scheduling.c` v2 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.s:(Lkotlinx/coroutines/scheduling/c;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ed1f8.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/scheduling/c;.h:()Ljava/lang/Object;` @kind virtual;
  #L2ed1fe.  v2:= temp @kind object;
  #L2ed200.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.f` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2ed204.  if v2 != v0 then goto L2ed20c;
  #L2ed208.  v2:= -1I;
  #L2ed20a.  return v2;
  #L2ed20c.  if v2 != 0 then goto L2ed214;
  #L2ed210.  v2:= 0I;
  #L2ed212.  return v2;
  #L2ed214.  v2:= (`kotlinx.coroutines.scheduling.c`) v2 @kind object;
  #L2ed218.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/scheduling/c;.g:()I` @kind virtual;
  #L2ed21e.  v0:= temp;
  #L2ed220.  if v0 == 0 then goto L2ed226;
  #L2ed224.  return v0;
  #L2ed226.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/scheduling/c;.h:()Ljava/lang/Object;` @kind virtual;
  #L2ed22c.  v2:= temp @kind object;
  #L2ed22e.  goto L2ed200;
}
procedure `void` `u0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.u0:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2edbd8.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.d` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L2edbdc.  v1:= 2097152L;
  #L2edbe2.  call temp:= `addAndGet`(v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.addAndGet:(Ljava/lang/Object;J)J` @kind virtual;
  #L2edbe8.  v0:= temp @kind wide;
  #L2edbea.  if v4 == 0 then goto L2edbf0;
  #L2edbee.  return @kind void;
  #L2edbf0.  call temp:= `O0`(v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.O0:()Z` @kind direct;
  #L2edbf6.  v4:= temp;
  #L2edbf8.  if v4 == 0 then goto L2edbfe;
  #L2edbfc.  return @kind void;
  #L2edbfe.  call temp:= `K0`(v3, v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.K0:(J)Z` @kind direct;
  #L2edc04.  v4:= temp;
  #L2edc06.  if v4 == 0 then goto L2edc0c;
  #L2edc0a.  return @kind void;
  #L2edc0c.  call temp:= `O0`(v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.O0:()Z` @kind direct;
  #L2edc12.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.c` `v`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v9 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.v:()Lkotlinx/coroutines/scheduling/c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2ed520.  v2:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @type ^`long` @kind wide;
  #L2ed524.  v0:= 2097151L;
  #L2ed52a.  v0:= v0 ^& v2 @kind long;
  #L2ed52c.  v1:= (`int`) v0 @kind l2i;
  #L2ed52e.  v0:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed532.  call temp:= `b`(v0, v1) @signature `Lkotlinx/coroutines/internal/h0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L2ed538.  v0:= temp @kind object;
  #L2ed53a.  v6:= v0 @kind object;
  #L2ed53c.  v6:= (`kotlinx.coroutines.scheduling.c`) v6 @kind object;
  #L2ed540.  if v6 != 0 then goto L2ed548;
  #L2ed544.  v0:= 0I;
  #L2ed546.  return v0 @kind object;
  #L2ed548.  v0:= 2097152L;
  #L2ed54e.  v0:= v0 + v2 @kind long;
  #L2ed550.  v4:= -2097152L;
  #L2ed556.  v0:= v0 ^& v4 @kind long;
  #L2ed558.  call temp:= `s`(v9, v6) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.s:(Lkotlinx/coroutines/scheduling/c;)I` @kind direct;
  #L2ed55e.  v4:= temp;
  #L2ed560.  if v4 >= 0 then goto L2ed566;
  #L2ed564.  goto L2ed520;
  #L2ed566.  v5:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.c` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L2ed56a.  v7:= (`long`) v4 @kind i2l;
  #L2ed56c.  v7:= v7 ^| v0 @kind long;
  #L2ed56e.  v0:= v5 @kind object;
  #L2ed570.  v1:= v9 @kind object;
  #L2ed572.  v4:= v7 @kind wide;
  #L2ed574.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L2ed57a.  v0:= temp;
  #L2ed57c.  if v0 == 0 then goto L2ed520;
  #L2ed580.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.f` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2ed584.  call `p`(v6, v0) @signature `Lkotlinx/coroutines/scheduling/c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L2ed58a.  return v6 @kind object;
}
procedure `void` `A0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.A0:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2edc24.  call temp:= `O0`(v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.O0:()Z` @kind direct;
  #L2edc2a.  v0:= temp;
  #L2edc2c.  if v0 == 0 then goto L2edc32;
  #L2edc30.  return @kind void;
  #L2edc32.  v0:= 0L;
  #L2edc36.  v2:= 1I;
  #L2edc38.  v3:= 0I;
  #L2edc3a.  call temp:= `N0`(v4, v0, v2, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.N0:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;JILjava/lang/Object;)Z` @kind static;
  #L2edc40.  v0:= temp;
  #L2edc42.  if v0 == 0 then goto L2edc48;
  #L2edc46.  return @kind void;
  #L2edc48.  call temp:= `O0`(v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.O0:()Z` @kind direct;
  #L2edc4e.  return @kind void;
}
procedure `void` `C`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v8 @kind this, `kotlinx.coroutines.scheduling.c` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.C:(Lkotlinx/coroutines/scheduling/c;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ed964.  v2:= v8.`kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @type ^`long` @kind wide;
  #L2ed968.  v0:= 2097151L;
  #L2ed96e.  v0:= v0 ^& v2 @kind long;
  #L2ed970.  v1:= (`int`) v0 @kind l2i;
  #L2ed972.  v4:= 2097152L;
  #L2ed978.  v4:= v4 + v2 @kind long;
  #L2ed97a.  v6:= -2097152L;
  #L2ed980.  v4:= v4 ^& v6 @kind long;
  #L2ed982.  if v1 != v10 then goto L2ed996;
  #L2ed986.  if v11 != 0 then goto L2ed994;
  #L2ed98a.  call temp:= `s`(v8, v9) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.s:(Lkotlinx/coroutines/scheduling/c;)I` @kind direct;
  #L2ed990.  v1:= temp;
  #L2ed992.  goto L2ed996;
  #L2ed994.  v1:= v11;
  #L2ed996.  if v1 >= 0 then goto L2ed99c;
  #L2ed99a.  goto L2ed964;
  #L2ed99c.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.c` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L2ed9a0.  v6:= (`long`) v1 @kind i2l;
  #L2ed9a2.  v4:= v4 ^| v6 @kind long;
  #L2ed9a4.  v1:= v8 @kind object;
  #L2ed9a6.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L2ed9ac.  v0:= temp;
  #L2ed9ae.  if v0 == 0 then goto L2ed964;
  #L2ed9b2.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ed858.  v0:= 10000L;
  #L2ed85c.  call `o0`(v2, v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o0:(J)V` @kind virtual;
  #L2ed862.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.j` `d`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object, `kotlinx.coroutines.scheduling.k` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.d:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;)Lkotlinx/coroutines/scheduling/j;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ed59c.  v0:= `@@kotlinx.coroutines.scheduling.n.e` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L2ed5a0.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.a:()J` @kind virtual;
  #L2ed5a6.  v0:= temp @kind wide;
  #L2ed5a8.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.scheduling.j` @kind boolean;
  #L2ed5ac.  if v2 == 0 then goto L2ed5be;
  #L2ed5b0.  v4:= (`kotlinx.coroutines.scheduling.j`) v4 @kind object;
  #L2ed5b4.  v4.`kotlinx.coroutines.scheduling.j.b` @type ^`long` := v0 @kind wide;
  #L2ed5b8.  v4.`kotlinx.coroutines.scheduling.j.c` @type ^`kotlinx.coroutines.scheduling.k` := v5 @kind object;
  #L2ed5bc.  return v4 @kind object;
  #L2ed5be.  v2:= new `kotlinx.coroutines.scheduling.m`;
  #L2ed5c2.  call `<init>`(v2, v4, v0, v5) @signature `Lkotlinx/coroutines/scheduling/m;.<init>:(Ljava/lang/Runnable;JLkotlinx/coroutines/scheduling/k;)V` @kind direct;
  #L2ed5c8.  return v2 @kind object;
}
procedure `void` `execute`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v6 @kind this, `java.lang.Runnable` v7 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ed940.  v2:= 0I;
  #L2ed942.  v3:= 0I;
  #L2ed944.  v4:= 6I;
  #L2ed946.  v5:= 0I;
  #L2ed948.  v0:= v6 @kind object;
  #L2ed94a.  v1:= v7 @kind object;
  #L2ed94c.  call `o`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;ZILjava/lang/Object;)V` @kind static;
  #L2ed952.  return @kind void;
}
procedure `boolean` `isTerminated`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.isTerminated:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ecf3c.  v0:= v1.`kotlinx.coroutines.scheduling.CoroutineScheduler._isTerminated` @type ^`int`;
  #L2ecf40.  return v0;
}
procedure `void` `m`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.k` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.m:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2ed8a4.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ed8aa.  v0:= temp @kind object;
  #L2ed8ac.  if v0 != 0 then goto L2ed92a;
  #L2ed8b0.  call temp:= `d`(v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.d:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;)Lkotlinx/coroutines/scheduling/j;` @kind virtual;
  #L2ed8b6.  v2:= temp @kind object;
  #L2ed8b8.  call temp:= `k`(v1) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.k:()Lkotlinx/coroutines/scheduling/c;` @kind direct;
  #L2ed8be.  v3:= temp @kind object;
  #L2ed8c0.  call temp:= `G0`(v1, v3, v2, v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.G0:(Lkotlinx/coroutines/scheduling/c;Lkotlinx/coroutines/scheduling/j;Z)Lkotlinx/coroutines/scheduling/j;` @kind direct;
  #L2ed8c6.  v0:= temp @kind object;
  #L2ed8c8.  if v0 == 0 then goto L2ed8f6;
  #L2ed8cc.  call temp:= `a`(v1, v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.a:(Lkotlinx/coroutines/scheduling/j;)Z` @kind direct;
  #L2ed8d2.  v0:= temp;
  #L2ed8d4.  if v0 == 0 then goto L2ed8da;
  #L2ed8d8.  goto L2ed8f6;
  #L2ed8da.  v2:= new `java.util.concurrent.RejectedExecutionException`;
  #L2ed8de.  v3:= v1.`kotlinx.coroutines.scheduling.CoroutineScheduler.j` @type ^`java.lang.String` @kind object;
  #L2ed8e2.  v4:= " was terminated" @kind object;
  #L2ed8e6.  call temp:= `stringPlus`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ed8ec.  v3:= temp @kind object;
  #L2ed8ee.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ed8f4.  throw v2;
  #L2ed8f6.  if v4 == 0 then goto L2ed902;
  #L2ed8fa.  if v3 == 0 then goto L2ed902;
  #L2ed8fe.  v3:= 1I;
  #L2ed900.  goto L2ed904;
  #L2ed902.  v3:= 0I;
  #L2ed904.  v2:= v2.`kotlinx.coroutines.scheduling.j.c` @type ^`kotlinx.coroutines.scheduling.k` @kind object;
  #L2ed908.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/scheduling/k;.b:()I` @kind interface;
  #L2ed90e.  v2:= temp;
  #L2ed910.  if v2 != 0 then goto L2ed922;
  #L2ed914.  if v3 == 0 then goto L2ed91a;
  #L2ed918.  return @kind void;
  #L2ed91a.  call `A0`(v1) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.A0:()V` @kind virtual;
  #L2ed920.  goto L2ed928;
  #L2ed922.  call `u0`(v1, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.u0:(Z)V` @kind direct;
  #L2ed928.  return @kind void;
  #L2ed92a.  v2:= 0I;
  #L2ed92c.  throw v2;
}
procedure `void` `m0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v3 @kind this, `kotlinx.coroutines.scheduling.j` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.m0:(Lkotlinx/coroutines/scheduling/j;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ed9c4.  v0:= 0I;
  #L2ed9c6.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2ed9cc.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ed9d2.  v4:= temp @kind object;
  #L2ed9d4.  if v4 != 0 then goto L2ed9da;
  #L2ed9d8.  goto L2eda00;
  #L2ed9da.  throw v0;
  #L2ed9dc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ed9de.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ed9e4.  v1:= temp @kind object;
  #L2ed9e6.  call temp:= `getUncaughtExceptionHandler`(v1) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L2ed9ec.  v2:= temp @kind object;
  #L2ed9ee.  call `uncaughtException`(v2, v1, v4) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L2ed9f4.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ed9fa.  v4:= temp @kind object;
  #L2ed9fc.  if v4 != 0 then goto L2eda02;
  #L2eda00.  return @kind void;
  #L2eda02.  throw v0;
  #L2eda04.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eda06.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2eda0c.  v1:= temp @kind object;
  #L2eda0e.  if v1 != 0 then goto L2eda14;
  #L2eda12.  throw v4;
  #L2eda14.  throw v0;
  catch `java.lang.Throwable` @[L2ed9c6..L2ed9cc] goto L2ed9dc;
  catch `java.lang.Throwable` @[L2ed9de..L2ed9f4] goto L2eda04;
}
procedure `void` `o0`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v9 @kind this, `long` v10 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o0:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2eda40.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2eda44.  v1:= 0I;
  #L2eda46.  v2:= 1I;
  #L2eda48.  call temp:= `compareAndSet`(v0, v9, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2eda4e.  v0:= temp;
  #L2eda50.  if v0 != 0 then goto L2eda56;
  #L2eda54.  return @kind void;
  #L2eda56.  call temp:= `k`(v9) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.k:()Lkotlinx/coroutines/scheduling/c;` @kind direct;
  #L2eda5c.  v0:= temp @kind object;
  #L2eda5e.  v3:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2eda62.  @monitorenter v3
  #L2eda64.  v4:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2eda68.  v6:= 2097151L;
  #L2eda6e.  v4:= v4 ^& v6 @kind long;
  #L2eda70.  v5:= (`int`) v4 @kind l2i;
  #L2eda72.  @monitorexit v3
  #L2eda74.  if v2 > v5 then goto L2edafa;
  #L2eda78.  v3:= 1I;
  #L2eda7a.  v4:= v3 + 1;
  #L2eda7e.  v6:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2eda82.  call temp:= `b`(v6, v3) @signature `Lkotlinx/coroutines/internal/h0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L2eda88.  v6:= temp @kind object;
  #L2eda8a.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2eda90.  v6:= (`kotlinx.coroutines.scheduling.c`) v6 @kind object;
  #L2eda94.  if v6 == v0 then goto L2edaf0;
  #L2eda98.  call temp:= `isAlive`(v6) @signature `Ljava/lang/Thread;.isAlive:()Z` @kind virtual;
  #L2eda9e.  v7:= temp;
  #L2edaa0.  if v7 == 0 then goto L2edab2;
  #L2edaa4.  call `unpark`(v6) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L2edaaa.  call `join`(v6, v10) @signature `Ljava/lang/Thread;.join:(J)V` @kind virtual;
  #L2edab0.  goto L2eda98;
  #L2edab2.  v7:= v6.`kotlinx.coroutines.scheduling.c.d` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2edab6.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2edabc.  v8:= temp;
  #L2edabe.  if v8 == 0 then goto L2edae2;
  #L2edac2.  v8:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2edac6.  if v7 != v8 then goto L2edace;
  #L2edaca.  v7:= 1I;
  #L2edacc.  goto L2edad0;
  #L2edace.  v7:= 0I;
  #L2edad0.  if v7 == 0 then goto L2edad6;
  #L2edad4.  goto L2edae2;
  #L2edad6.  v10:= new `java.lang.AssertionError`;
  #L2edada.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2edae0.  throw v10;
  #L2edae2.  v6:= v6.`kotlinx.coroutines.scheduling.c.c` @type ^`kotlinx.coroutines.scheduling.p` @kind object;
  #L2edae6.  v7:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2edaea.  call `g`(v6, v7) @signature `Lkotlinx/coroutines/scheduling/p;.g:(Lkotlinx/coroutines/scheduling/f;)V` @kind virtual;
  #L2edaf0.  if v3 != v5 then goto L2edaf6;
  #L2edaf4.  goto L2edafa;
  #L2edaf6.  v3:= v4;
  #L2edaf8.  goto L2eda7a;
  #L2edafa.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2edafe.  call `b`(v10) @signature `Lkotlinx/coroutines/internal/y;.b:()V` @kind virtual;
  #L2edb04.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.k` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2edb08.  call `b`(v10) @signature `Lkotlinx/coroutines/internal/y;.b:()V` @kind virtual;
  #L2edb0e.  if v0 != 0 then goto L2edb16;
  #L2edb12.  v10:= 0I;
  #L2edb14.  goto L2edb1e;
  #L2edb16.  call temp:= `f`(v0, v2) @signature `Lkotlinx/coroutines/scheduling/c;.f:(Z)Lkotlinx/coroutines/scheduling/j;` @kind virtual;
  #L2edb1c.  v10:= temp @kind object;
  #L2edb1e.  if v10 != 0 then goto L2edba8;
  #L2edb22.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.k` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2edb26.  call temp:= `d`(v10) @signature `Lkotlinx/coroutines/internal/y;.d:()Ljava/lang/Object;` @kind virtual;
  #L2edb2c.  v10:= temp @kind object;
  #L2edb2e.  v10:= (`kotlinx.coroutines.scheduling.j`) v10 @kind object;
  #L2edb32.  if v10 != 0 then goto L2edba8;
  #L2edb36.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2edb3a.  call temp:= `d`(v10) @signature `Lkotlinx/coroutines/internal/y;.d:()Ljava/lang/Object;` @kind virtual;
  #L2edb40.  v10:= temp @kind object;
  #L2edb42.  v10:= (`kotlinx.coroutines.scheduling.j`) v10 @kind object;
  #L2edb46.  if v10 != 0 then goto L2edba8;
  #L2edb4a.  if v0 != 0 then goto L2edb50;
  #L2edb4e.  goto L2edb5a;
  #L2edb50.  v10:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2edb54.  call temp:= `s`(v0, v10) @signature `Lkotlinx/coroutines/scheduling/c;.s:(Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;)Z` @kind virtual;
  #L2edb5a.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2edb60.  v10:= temp;
  #L2edb62.  if v10 == 0 then goto L2edb9a;
  #L2edb66.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2edb6a.  v3:= 9223367638808264704L;
  #L2edb74.  v10:= v10 ^& v3 @kind long;
  #L2edb76.  v0:= 42I;
  #L2edb7a.  v10:= v10 ^> v0 @kind long;
  #L2edb7c.  v11:= (`int`) v10 @kind l2i;
  #L2edb7e.  v10:= v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2edb82.  if v11 != v10 then goto L2edb88;
  #L2edb86.  v1:= 1I;
  #L2edb88.  if v1 == 0 then goto L2edb8e;
  #L2edb8c.  goto L2edb9a;
  #L2edb8e.  v10:= new `java.lang.AssertionError`;
  #L2edb92.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2edb98.  throw v10;
  #L2edb9a.  v10:= 0L;
  #L2edb9e.  v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @type ^`long` := v10 @kind wide;
  #L2edba2.  v9.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` := v10 @kind wide;
  #L2edba6.  return @kind void;
  #L2edba8.  call `m0`(v9, v10) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.m0:(Lkotlinx/coroutines/scheduling/j;)V` @kind virtual;
  #L2edbae.  goto L2edb0e;
  #L2edbb0.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2edbb2.  @monitorexit v3
  #L2edbb4.  goto L2edbb8;
  #L2edbb6.  throw v10;
  #L2edbb8.  goto L2edbb6;
  catch `java.lang.Throwable` @[L2eda64..L2eda68] goto L2edbb0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v12 @kind this) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2ed240.  v0:= new `java.util.ArrayList`;
  #L2ed244.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2ed24a.  v1:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed24e.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/internal/h0;.a:()I` @kind virtual;
  #L2ed254.  v1:= temp;
  #L2ed256.  v2:= 0I;
  #L2ed258.  v3:= 1I;
  #L2ed25a.  v4:= 0I;
  #L2ed25c.  v5:= 0I;
  #L2ed25e.  v6:= 0I;
  #L2ed260.  v7:= 0I;
  #L2ed262.  v8:= 1I;
  #L2ed264.  if v8 >= v1 then goto L2ed35c;
  #L2ed268.  v9:= v8 + 1;
  #L2ed26c.  v10:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ed270.  call temp:= `b`(v10, v8) @signature `Lkotlinx/coroutines/internal/h0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L2ed276.  v8:= temp @kind object;
  #L2ed278.  v8:= (`kotlinx.coroutines.scheduling.c`) v8 @kind object;
  #L2ed27c.  if v8 != 0 then goto L2ed284;
  #L2ed280.  v8:= v9;
  #L2ed282.  goto L2ed264;
  #L2ed284.  v10:= v8.`kotlinx.coroutines.scheduling.c.c` @type ^`kotlinx.coroutines.scheduling.p` @kind object;
  #L2ed288.  call temp:= `f`(v10) @signature `Lkotlinx/coroutines/scheduling/p;.f:()I` @kind virtual;
  #L2ed28e.  v10:= temp;
  #L2ed290.  v8:= v8.`kotlinx.coroutines.scheduling.c.d` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ed294.  v11:= `@@kotlinx.coroutines.scheduling.b.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L2ed298.  call temp:= `ordinal`(v8) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2ed29e.  v8:= temp;
  #L2ed2a0.  v8:= v11[v8];
  #L2ed2a4.  if v8 == v3 then goto L2ed356;
  #L2ed2a8.  v11:= 2I;
  #L2ed2aa.  if v8 == v11 then goto L2ed328;
  #L2ed2ae.  v11:= 3I;
  #L2ed2b0.  if v8 == v11 then goto L2ed2fa;
  #L2ed2b4.  v11:= 4I;
  #L2ed2b6.  if v8 == v11 then goto L2ed2c8;
  #L2ed2ba.  v10:= 5I;
  #L2ed2bc.  if v8 == v10 then goto L2ed2c2;
  #L2ed2c0.  goto L2ed280;
  #L2ed2c2.  v7:= v7 + 1;
  #L2ed2c6.  goto L2ed280;
  #L2ed2c8.  v6:= v6 + 1;
  #L2ed2cc.  if v10 <= 0 then goto L2ed280;
  #L2ed2d0.  v8:= new `java.lang.StringBuilder`;
  #L2ed2d4.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed2da.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed2e0.  v10:= 100I;
  #L2ed2e4.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed2ea.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed2f0.  v8:= temp @kind object;
  #L2ed2f2.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ed2f8.  goto L2ed280;
  #L2ed2fa.  v2:= v2 + 1;
  #L2ed2fe.  v8:= new `java.lang.StringBuilder`;
  #L2ed302.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed308.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed30e.  v10:= 99I;
  #L2ed312.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed318.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed31e.  v8:= temp @kind object;
  #L2ed320.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ed326.  goto L2ed280;
  #L2ed328.  v4:= v4 + 1;
  #L2ed32c.  v8:= new `java.lang.StringBuilder`;
  #L2ed330.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed336.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed33c.  v10:= 98I;
  #L2ed340.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed346.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed34c.  v8:= temp @kind object;
  #L2ed34e.  call temp:= `add`(v0, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ed354.  goto L2ed280;
  #L2ed356.  v5:= v5 + 1;
  #L2ed35a.  goto L2ed280;
  #L2ed35c.  v8:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.controlState` @type ^`long` @kind wide;
  #L2ed360.  v1:= new `java.lang.StringBuilder`;
  #L2ed364.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ed36a.  v3:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.j` @type ^`java.lang.String` @kind object;
  #L2ed36e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed374.  v3:= 64I;
  #L2ed378.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed37e.  call temp:= `b`(v12) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ed384.  v3:= temp @kind object;
  #L2ed386.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed38c.  v3:= "[Pool Size {core = " @kind object;
  #L2ed390.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed396.  v3:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2ed39a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3a0.  v3:= ", max = " @kind object;
  #L2ed3a4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3aa.  v3:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.h` @type ^`int`;
  #L2ed3ae.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3b4.  v3:= "}, Worker States {CPU = " @kind object;
  #L2ed3b8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3c4.  v2:= ", blocking = " @kind object;
  #L2ed3c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3ce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3d4.  v2:= ", parked = " @kind object;
  #L2ed3d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3de.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3e4.  v2:= ", dormant = " @kind object;
  #L2ed3e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3ee.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3f4.  v2:= ", terminated = " @kind object;
  #L2ed3f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed3fe.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed404.  v2:= "}, running workers queues = " @kind object;
  #L2ed408.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed40e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed414.  v0:= ", global CPU queue size = " @kind object;
  #L2ed418.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed41e.  v0:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.k` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2ed422.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/y;.c:()I` @kind virtual;
  #L2ed428.  v0:= temp;
  #L2ed42a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed430.  v0:= ", global blocking queue size = " @kind object;
  #L2ed434.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed43a.  v0:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.l` @type ^`kotlinx.coroutines.scheduling.f` @kind object;
  #L2ed43e.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/y;.c:()I` @kind virtual;
  #L2ed444.  v0:= temp;
  #L2ed446.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed44c.  v0:= ", Control State {created workers= " @kind object;
  #L2ed450.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed456.  v2:= 2097151L;
  #L2ed45c.  v2:= v2 ^& v8 @kind long;
  #L2ed45e.  v0:= (`int`) v2 @kind l2i;
  #L2ed460.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed466.  v0:= ", blocking tasks = " @kind object;
  #L2ed46a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed470.  v2:= 4398044413952L;
  #L2ed47a.  v2:= v2 ^& v8 @kind long;
  #L2ed47c.  v0:= 21I;
  #L2ed480.  v2:= v2 ^> v0 @kind long;
  #L2ed482.  v0:= (`int`) v2 @kind l2i;
  #L2ed484.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed48a.  v0:= ", CPUs acquired = " @kind object;
  #L2ed48e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed494.  v0:= v12.`kotlinx.coroutines.scheduling.CoroutineScheduler.g` @type ^`int`;
  #L2ed498.  v2:= 9223367638808264704L;
  #L2ed4a2.  v2:= v2 ^& v8 @kind long;
  #L2ed4a4.  v4:= 42I;
  #L2ed4a8.  v2:= v2 ^> v4 @kind long;
  #L2ed4aa.  v3:= (`int`) v2 @kind l2i;
  #L2ed4ac.  v0:= v0 - v3 @kind int;
  #L2ed4ae.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed4b4.  v0:= "}]" @kind object;
  #L2ed4b8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ed4be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ed4c4.  v0:= temp @kind object;
  #L2ed4c6.  return v0 @kind object;
}
procedure `boolean` `x`(`kotlinx.coroutines.scheduling.CoroutineScheduler` v10 @kind this, `kotlinx.coroutines.scheduling.c` v11 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.x:(Lkotlinx/coroutines/scheduling/c;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2ecf54.  call temp:= `h`(v11) @signature `Lkotlinx/coroutines/scheduling/c;.h:()Ljava/lang/Object;` @kind virtual;
  #L2ecf5a.  v0:= temp @kind object;
  #L2ecf5c.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.f` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2ecf60.  v2:= 0I;
  #L2ecf62.  if v0 == v1 then goto L2ecf68;
  #L2ecf66.  return v2;
  #L2ecf68.  v5:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.parkedWorkersStack` @type ^`long` @kind wide;
  #L2ecf6c.  v0:= 2097151L;
  #L2ecf72.  v0:= v0 ^& v5 @kind long;
  #L2ecf74.  v1:= (`int`) v0 @kind l2i;
  #L2ecf76.  v3:= 2097152L;
  #L2ecf7c.  v3:= v3 + v5 @kind long;
  #L2ecf7e.  v7:= -2097152L;
  #L2ecf84.  v3:= v3 ^& v7 @kind long;
  #L2ecf86.  call temp:= `g`(v11) @signature `Lkotlinx/coroutines/scheduling/c;.g:()I` @kind virtual;
  #L2ecf8c.  v0:= temp;
  #L2ecf8e.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2ecf94.  v7:= temp;
  #L2ecf96.  v9:= 1I;
  #L2ecf98.  if v7 == 0 then goto L2ecfb8;
  #L2ecf9c.  if v0 == 0 then goto L2ecfa4;
  #L2ecfa0.  v7:= 1I;
  #L2ecfa2.  goto L2ecfa6;
  #L2ecfa4.  v7:= 0I;
  #L2ecfa6.  if v7 == 0 then goto L2ecfac;
  #L2ecfaa.  goto L2ecfb8;
  #L2ecfac.  v11:= new `java.lang.AssertionError`;
  #L2ecfb0.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ecfb6.  throw v11;
  #L2ecfb8.  v7:= v10.`kotlinx.coroutines.scheduling.CoroutineScheduler.m` @type ^`kotlinx.coroutines.internal.h0` @kind object;
  #L2ecfbc.  call temp:= `b`(v7, v1) @signature `Lkotlinx/coroutines/internal/h0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L2ecfc2.  v1:= temp @kind object;
  #L2ecfc4.  call `p`(v11, v1) @signature `Lkotlinx/coroutines/scheduling/c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L2ecfca.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler.c` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L2ecfce.  v7:= (`long`) v0 @kind i2l;
  #L2ecfd0.  v7:= v7 ^| v3 @kind long;
  #L2ecfd2.  v3:= v1 @kind object;
  #L2ecfd4.  v4:= v10 @kind object;
  #L2ecfd6.  call temp:= `compareAndSet`(v3, v4, v5, v7) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L2ecfdc.  v0:= temp;
  #L2ecfde.  if v0 == 0 then goto L2ecf68;
  #L2ecfe2.  return v9;
}
