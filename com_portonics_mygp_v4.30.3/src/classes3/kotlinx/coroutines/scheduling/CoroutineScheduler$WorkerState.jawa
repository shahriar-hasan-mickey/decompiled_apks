record `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `$values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.$values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2ec4a0.  v0:= 5I;
  #L2ec4a2.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[v0];
  #L2ec4a6.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec4aa.  v2:= 0I;
  #L2ec4ac.  v0[v2]:= v1 @kind object;
  #L2ec4b0.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec4b4.  v2:= 1I;
  #L2ec4b6.  v0[v2]:= v1 @kind object;
  #L2ec4ba.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec4be.  v2:= 2I;
  #L2ec4c0.  v0[v2]:= v1 @kind object;
  #L2ec4c4.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec4c8.  v2:= 3I;
  #L2ec4ca.  v0[v2]:= v1 @kind object;
  #L2ec4ce.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec4d2.  v2:= 4I;
  #L2ec4d4.  v0[v2]:= v1 @kind object;
  #L2ec4d8.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ec510.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L2ec514.  v1:= "CPU_ACQUIRED" @kind object;
  #L2ec518.  v2:= 0I;
  #L2ec51a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec520.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L2ec524.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L2ec528.  v1:= "BLOCKING" @kind object;
  #L2ec52c.  v2:= 1I;
  #L2ec52e.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec534.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L2ec538.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L2ec53c.  v1:= "PARKING" @kind object;
  #L2ec540.  v2:= 2I;
  #L2ec542.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec548.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L2ec54c.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L2ec550.  v1:= "DORMANT" @kind object;
  #L2ec554.  v2:= 3I;
  #L2ec556.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec55c.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L2ec560.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L2ec564.  v1:= "TERMINATED" @kind object;
  #L2ec568.  v2:= 4I;
  #L2ec56a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec570.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L2ec574.  call temp:= `$values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.$values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @kind static;
  #L2ec57a.  v0:= temp @kind object;
  #L2ec57c.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] := v0 @kind object;
  #L2ec580.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ec594.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ec59a.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ec47c.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L2ec480.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2ec486.  v1:= temp @kind object;
  #L2ec488.  v1:= (`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`) v1 @kind object;
  #L2ec48c.  return v1 @kind object;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ec4ec.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] @kind object;
  #L2ec4f0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ec4f6.  v0:= temp @kind object;
  #L2ec4f8.  v0:= (`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[]) v0 @kind object;
  #L2ec4fc.  return v0 @kind object;
}
