record `kotlinx.coroutines.scheduling.h` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class {
  `int` `kotlinx.coroutines.scheduling.h.d` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.scheduling.h.e` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.scheduling.h.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.h.g` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.scheduling.CoroutineScheduler` `kotlinx.coroutines.scheduling.h.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.h` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/h;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ede8c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L2ede92.  v0.`kotlinx.coroutines.scheduling.h.d` @type ^`int` := v1;
  #L2ede96.  v0.`kotlinx.coroutines.scheduling.h.e` @type ^`int` := v2;
  #L2ede9a.  v0.`kotlinx.coroutines.scheduling.h.f` @type ^`long` := v3 @kind wide;
  #L2ede9e.  v0.`kotlinx.coroutines.scheduling.h.g` @type ^`java.lang.String` := v5 @kind object;
  #L2edea2.  call temp:= `R0`(v0) @signature `Lkotlinx/coroutines/scheduling/h;.R0:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L2edea8.  v1:= temp @kind object;
  #L2edeaa.  v0.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v1 @kind object;
  #L2edeae.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler` `R0`(`kotlinx.coroutines.scheduling.h` v7 @kind this) @signature `Lkotlinx/coroutines/scheduling/h;.R0:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ede5c.  v6:= new `kotlinx.coroutines.scheduling.CoroutineScheduler`;
  #L2ede60.  v1:= v7.`kotlinx.coroutines.scheduling.h.d` @type ^`int`;
  #L2ede64.  v2:= v7.`kotlinx.coroutines.scheduling.h.e` @type ^`int`;
  #L2ede68.  v3:= v7.`kotlinx.coroutines.scheduling.h.f` @type ^`long` @kind wide;
  #L2ede6c.  v5:= v7.`kotlinx.coroutines.scheduling.h.g` @type ^`java.lang.String` @kind object;
  #L2ede70.  v0:= v6 @kind object;
  #L2ede72.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L2ede78.  return v6 @kind object;
}
procedure `void` `N0`(`kotlinx.coroutines.scheduling.h` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/h;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2edec0.  v0:= v6.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2edec4.  v2:= 0I;
  #L2edec6.  v3:= 0I;
  #L2edec8.  v4:= 6I;
  #L2edeca.  v5:= 0I;
  #L2edecc.  v1:= v8 @kind object;
  #L2edece.  call `o`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;ZILjava/lang/Object;)V` @kind static;
  #L2eded4.  return @kind void;
}
procedure `void` `O0`(`kotlinx.coroutines.scheduling.h` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/h;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2edf04.  v0:= v6.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2edf08.  v2:= 0I;
  #L2edf0a.  v3:= 1I;
  #L2edf0c.  v4:= 2I;
  #L2edf0e.  v5:= 0I;
  #L2edf10.  v1:= v8 @kind object;
  #L2edf12.  call `o`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.o:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;ZILjava/lang/Object;)V` @kind static;
  #L2edf18.  return @kind void;
}
procedure `void` `S0`(`kotlinx.coroutines.scheduling.h` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.k` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/h;.S0:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2edee8.  v0:= v1.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L2edeec.  call `m`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.m:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/k;Z)V` @kind virtual;
  #L2edef2.  return @kind void;
}
