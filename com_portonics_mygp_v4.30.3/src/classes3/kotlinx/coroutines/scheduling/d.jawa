record `kotlinx.coroutines.scheduling.d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class, `java.util.concurrent.Executor` @kind interface {
}
global `kotlinx.coroutines.scheduling.d` `@@kotlinx.coroutines.scheduling.d.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlinx.coroutines.CoroutineDispatcher` `@@kotlinx.coroutines.scheduling.d.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2edc78.  v0:= new `kotlinx.coroutines.scheduling.d`;
  #L2edc7c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @kind direct;
  #L2edc82.  `@@kotlinx.coroutines.scheduling.d.d` @type ^`kotlinx.coroutines.scheduling.d` := v0 @kind object;
  #L2edc86.  v0:= `@@kotlinx.coroutines.scheduling.o.c` @type ^`kotlinx.coroutines.scheduling.o` @kind object;
  #L2edc8a.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/l0;.a:()I` @kind static;
  #L2edc90.  v1:= temp;
  #L2edc92.  v2:= 64I;
  #L2edc96.  call temp:= `coerceAtLeast`(v2, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L2edc9c.  v4:= temp;
  #L2edc9e.  v3:= "kotlinx.coroutines.io.parallelism" @kind object;
  #L2edca2.  v5:= 0I;
  #L2edca4.  v6:= 0I;
  #L2edca6.  v7:= 12I;
  #L2edcaa.  v8:= 0I;
  #L2edcac.  call temp:= `f`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/internal/l0;.f:(Ljava/lang/String;IIIILjava/lang/Object;)I` @kind static;
  #L2edcb2.  v1:= temp;
  #L2edcb4.  call temp:= `Q0`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.Q0:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @kind virtual;
  #L2edcba.  v0:= temp @kind object;
  #L2edcbc.  `@@kotlinx.coroutines.scheduling.d.e` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v0 @kind object;
  #L2edcc0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.d` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2edcd4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L2edcda.  return @kind void;
}
procedure `void` `N0`(`kotlinx.coroutines.scheduling.d` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/d;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2edd14.  v0:= `@@kotlinx.coroutines.scheduling.d.e` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2edd18.  call `N0`(v0, v2, v3) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2edd1e.  return @kind void;
}
procedure `void` `O0`(`kotlinx.coroutines.scheduling.d` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/d;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2edd30.  v0:= `@@kotlinx.coroutines.scheduling.d.e` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2edd34.  call `O0`(v0, v2, v3) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2edd3a.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.d` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2edcec.  v0:= new `java.lang.IllegalStateException`;
  #L2edcf0.  v1:= "Cannot be invoked on Dispatchers.IO" @kind object;
  #L2edcf4.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2edcfa.  v1:= temp @kind object;
  #L2edcfc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2edd02.  throw v0;
}
procedure `void` `execute`(`kotlinx.coroutines.scheduling.d` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/scheduling/d;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2edd4c.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2edd50.  call `N0`(v1, v0, v2) @signature `Lkotlinx/coroutines/scheduling/d;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2edd56.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.d` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2edc60.  v0:= "Dispatchers.IO" @kind object;
  #L2edc64.  return v0 @kind object;
}
