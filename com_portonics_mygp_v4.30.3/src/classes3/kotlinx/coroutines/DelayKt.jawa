record `kotlinx.coroutines.DelayKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.Object` `a`(`kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.a:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ccf08.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.DelayKt$awaitCancellation$1` @kind boolean;
  #L2ccf0c.  if v0 == 0 then goto L2ccf2e;
  #L2ccf10.  v0:= v4 @kind object;
  #L2ccf12.  v0:= (`kotlinx.coroutines.DelayKt$awaitCancellation$1`) v0 @kind object;
  #L2ccf16.  v1:= v0.`kotlinx.coroutines.DelayKt$awaitCancellation$1.label` @type ^`int`;
  #L2ccf1a.  v2:= -2147483648I;
  #L2ccf1e.  v3:= v1 ^& v2 @kind int;
  #L2ccf22.  if v3 == 0 then goto L2ccf2e;
  #L2ccf26.  v1:= v1 - v2 @kind int;
  #L2ccf28.  v0.`kotlinx.coroutines.DelayKt$awaitCancellation$1.label` @type ^`int` := v1;
  #L2ccf2c.  goto L2ccf38;
  #L2ccf2e.  v0:= new `kotlinx.coroutines.DelayKt$awaitCancellation$1`;
  #L2ccf32.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/DelayKt$awaitCancellation$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2ccf38.  v4:= v0.`kotlinx.coroutines.DelayKt$awaitCancellation$1.result` @type ^`java.lang.Object` @kind object;
  #L2ccf3c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ccf42.  v1:= temp @kind object;
  #L2ccf44.  v2:= v0.`kotlinx.coroutines.DelayKt$awaitCancellation$1.label` @type ^`int`;
  #L2ccf48.  v3:= 1I;
  #L2ccf4a.  if v2 == 0 then goto L2ccf6a;
  #L2ccf4e.  if v2 == v3 then goto L2ccf62;
  #L2ccf52.  v4:= new `java.lang.IllegalStateException`;
  #L2ccf56.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2ccf5a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ccf60.  throw v4;
  #L2ccf62.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2ccf68.  goto L2ccfac;
  #L2ccf6a.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2ccf70.  v0.`kotlinx.coroutines.DelayKt$awaitCancellation$1.label` @type ^`int` := v3;
  #L2ccf74.  v4:= new `kotlinx.coroutines.p`;
  #L2ccf78.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2ccf7e.  v2:= temp @kind object;
  #L2ccf80.  call `<init>`(v4, v2, v3) @signature `Lkotlinx/coroutines/p;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L2ccf86.  call `A`(v4) @signature `Lkotlinx/coroutines/p;.A:()V` @kind virtual;
  #L2ccf8c.  call temp:= `w`(v4) @signature `Lkotlinx/coroutines/p;.w:()Ljava/lang/Object;` @kind virtual;
  #L2ccf92.  v4:= temp @kind object;
  #L2ccf94.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ccf9a.  v2:= temp @kind object;
  #L2ccf9c.  if v4 != v2 then goto L2ccfa6;
  #L2ccfa0.  call `probeCoroutineSuspended`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2ccfa6.  if v4 != v1 then goto L2ccfac;
  #L2ccfaa.  return v1 @kind object;
  #L2ccfac.  v4:= new `kotlin.KotlinNothingValueException`;
  #L2ccfb0.  call `<init>`(v4) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2ccfb6.  throw v4;
}
procedure `java.lang.Object` `b`(`long` v4 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.b:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ccfc8.  v0:= 0L;
  #L2ccfcc.  v2:= lcmp(v4, v0);
  #L2ccfd0.  if v2 > 0 then goto L2ccfda;
  #L2ccfd4.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2ccfd8.  return v4 @kind object;
  #L2ccfda.  v0:= new `kotlinx.coroutines.p`;
  #L2ccfde.  call temp:= `intercepted`(v6) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2ccfe4.  v1:= temp @kind object;
  #L2ccfe6.  v2:= 1I;
  #L2ccfe8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/p;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L2ccfee.  call `A`(v0) @signature `Lkotlinx/coroutines/p;.A:()V` @kind virtual;
  #L2ccff4.  v1:= 9223372036854775807L;
  #L2ccffe.  v3:= lcmp(v4, v1);
  #L2cd002.  if v3 >= 0 then goto L2cd01c;
  #L2cd006.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2cd00c.  v1:= temp @kind object;
  #L2cd00e.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/DelayKt;.c:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/t0;` @kind static;
  #L2cd014.  v1:= temp @kind object;
  #L2cd016.  call `c`(v1, v4, v0) @signature `Lkotlinx/coroutines/t0;.c:(JLkotlinx/coroutines/o;)V` @kind interface;
  #L2cd01c.  call temp:= `w`(v0) @signature `Lkotlinx/coroutines/p;.w:()Ljava/lang/Object;` @kind virtual;
  #L2cd022.  v4:= temp @kind object;
  #L2cd024.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2cd02a.  v5:= temp @kind object;
  #L2cd02c.  if v4 != v5 then goto L2cd036;
  #L2cd030.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2cd036.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2cd03c.  v5:= temp @kind object;
  #L2cd03e.  if v4 != v5 then goto L2cd044;
  #L2cd042.  return v4 @kind object;
  #L2cd044.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2cd048.  return v4 @kind object;
}
procedure `kotlinx.coroutines.t0` `c`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.c:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/t0;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cd05c.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L2cd060.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2cd066.  v1:= temp @kind object;
  #L2cd068.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.t0` @kind boolean;
  #L2cd06c.  if v0 == 0 then goto L2cd076;
  #L2cd070.  v1:= (`kotlinx.coroutines.t0`) v1 @kind object;
  #L2cd074.  goto L2cd078;
  #L2cd076.  v1:= 0I;
  #L2cd078.  if v1 != 0 then goto L2cd084;
  #L2cd07c.  call temp:= `a`() @signature `Lkotlinx/coroutines/r0;.a:()Lkotlinx/coroutines/t0;` @kind static;
  #L2cd082.  v1:= temp @kind object;
  #L2cd084.  return v1 @kind object;
}
procedure `long` `d`(`long` v2 ) @signature `Lkotlinx/coroutines/DelayKt;.d:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2cd098.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L2cd09c.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L2cd0a2.  v0:= temp @kind wide;
  #L2cd0a4.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L2cd0aa.  v0:= temp;
  #L2cd0ac.  if v0 <= 0 then goto L2cd0c6;
  #L2cd0b0.  call temp:= `getInWholeMilliseconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @kind static;
  #L2cd0b6.  v2:= temp @kind wide;
  #L2cd0b8.  v0:= 1L;
  #L2cd0bc.  call temp:= `coerceAtLeast`(v2, v0) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(JJ)J` @kind static;
  #L2cd0c2.  v2:= temp @kind wide;
  #L2cd0c4.  goto L2cd0ca;
  #L2cd0c6.  v2:= 0L;
  #L2cd0ca.  return v2 @kind wide;
}
