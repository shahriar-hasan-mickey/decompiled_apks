record `kotlinx.coroutines.g1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface, `java.lang.Comparable` @kind interface, `kotlinx.coroutines.z0` @kind interface, `kotlinx.coroutines.internal.r0` @kind interface {
  `long` `kotlinx.coroutines.g1.b` @AccessFlag PUBLIC;
  `java.lang.Object` `kotlinx.coroutines.g1.c` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.g1.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.g1` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/g1;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cddc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cddce.  v0.`kotlinx.coroutines.g1.b` @type ^`long` := v1 @kind wide;
  #L2cddd2.  v1:= -1I;
  #L2cddd4.  v0.`kotlinx.coroutines.g1.d` @type ^`int` := v1;
  #L2cddd8.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.g1` v2 @kind this, `kotlinx.coroutines.internal.q0` v3 @kind object) @signature `Lkotlinx/coroutines/g1;.a:(Lkotlinx/coroutines/internal/q0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cde58.  v0:= v2.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` @kind object;
  #L2cde5c.  call temp:= `b`() @signature `Lkotlinx/coroutines/l1;.b:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cde62.  v1:= temp @kind object;
  #L2cde64.  if v0 == v1 then goto L2cde6c;
  #L2cde68.  v0:= 1I;
  #L2cde6a.  goto L2cde6e;
  #L2cde6c.  v0:= 0I;
  #L2cde6e.  if v0 == 0 then goto L2cde78;
  #L2cde72.  v2.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` := v3 @kind object;
  #L2cde76.  return @kind void;
  #L2cde78.  v3:= new `java.lang.IllegalArgumentException`;
  #L2cde7c.  v0:= "Failed requirement." @kind object;
  #L2cde80.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cde86.  v0:= temp @kind object;
  #L2cde88.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cde8e.  throw v3;
}
procedure `kotlinx.coroutines.internal.q0` `b`(`kotlinx.coroutines.g1` v2 @kind this) @signature `Lkotlinx/coroutines/g1;.b:()Lkotlinx/coroutines/internal/q0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cdda0.  v0:= v2.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` @kind object;
  #L2cdda4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.q0` @kind boolean;
  #L2cdda8.  if v1 == 0 then goto L2cddb2;
  #L2cddac.  v0:= (`kotlinx.coroutines.internal.q0`) v0 @kind object;
  #L2cddb0.  goto L2cddb4;
  #L2cddb2.  v0:= 0I;
  #L2cddb4.  return v0 @kind object;
}
procedure `int` `c`(`kotlinx.coroutines.g1` v4 @kind this, `kotlinx.coroutines.g1` v5 @kind object) @signature `Lkotlinx/coroutines/g1;.c:(Lkotlinx/coroutines/g1;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cdc18.  v0:= v4.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdc1c.  v2:= v5.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdc20.  v0:= v0 - v2 @kind long;
  #L2cdc22.  v2:= 0L;
  #L2cdc26.  v5:= lcmp(v0, v2);
  #L2cdc2a.  if v5 <= 0 then goto L2cdc32;
  #L2cdc2e.  v5:= 1I;
  #L2cdc30.  goto L2cdc40;
  #L2cdc32.  v5:= lcmp(v0, v2);
  #L2cdc36.  if v5 >= 0 then goto L2cdc3e;
  #L2cdc3a.  v5:= -1I;
  #L2cdc3c.  goto L2cdc40;
  #L2cdc3e.  v5:= 0I;
  #L2cdc40.  return v5;
}
procedure `int` `compareTo`(`kotlinx.coroutines.g1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/g1;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cdbf8.  v1:= (`kotlinx.coroutines.g1`) v1 @kind object;
  #L2cdbfc.  call temp:= `c`(v0, v1) @signature `Lkotlinx/coroutines/g1;.c:(Lkotlinx/coroutines/g1;)I` @kind virtual;
  #L2cdc02.  v1:= temp;
  #L2cdc04.  return v1;
}
procedure `int` `d`(`kotlinx.coroutines.g1` v7 @kind this, `long` v8 , `kotlinx.coroutines.h1` v10 @kind object, `kotlinx.coroutines.i1` v11 @kind object) @signature `Lkotlinx/coroutines/g1;.d:(JLkotlinx/coroutines/h1;Lkotlinx/coroutines/i1;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2cdc6c.  @monitorenter v7
  #L2cdc6e.  v0:= v7.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` @kind object;
  #L2cdc72.  call temp:= `b`() @signature `Lkotlinx/coroutines/l1;.b:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cdc78.  v1:= temp @kind object;
  #L2cdc7a.  if v0 != v1 then goto L2cdc84;
  #L2cdc7e.  v8:= 2I;
  #L2cdc80.  @monitorexit v7
  #L2cdc82.  return v8;
  #L2cdc84.  @monitorenter v10
  #L2cdc86.  call temp:= `b`(v10) @signature `Lkotlinx/coroutines/internal/q0;.b:()Lkotlinx/coroutines/internal/r0;` @kind virtual;
  #L2cdc8c.  v0:= temp @kind object;
  #L2cdc8e.  v0:= (`kotlinx.coroutines.g1`) v0 @kind object;
  #L2cdc92.  call temp:= `g1`(v11) @signature `Lkotlinx/coroutines/i1;.g1:(Lkotlinx/coroutines/i1;)Z` @kind static;
  #L2cdc98.  v11:= temp;
  #L2cdc9a.  if v11 == 0 then goto L2cdca6;
  #L2cdc9e.  v8:= 1I;
  #L2cdca0.  @monitorexit v10
  #L2cdca2.  @monitorexit v7
  #L2cdca4.  return v8;
  #L2cdca6.  v1:= 0L;
  #L2cdcaa.  if v0 != 0 then goto L2cdcb4;
  #L2cdcae.  v10.`kotlinx.coroutines.h1.b` @type ^`long` := v8 @kind wide;
  #L2cdcb2.  goto L2cdcdc;
  #L2cdcb4.  v3:= v0.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdcb8.  v5:= v3 - v8 @kind long;
  #L2cdcbc.  v11:= lcmp(v5, v1);
  #L2cdcc0.  if v11 < 0 then goto L2cdcc6;
  #L2cdcc4.  goto L2cdcc8;
  #L2cdcc6.  v8:= v3 @kind wide;
  #L2cdcc8.  v3:= v10.`kotlinx.coroutines.h1.b` @type ^`long` @kind wide;
  #L2cdccc.  v3:= v8 - v3 @kind long;
  #L2cdcd0.  v11:= lcmp(v3, v1);
  #L2cdcd4.  if v11 <= 0 then goto L2cdcdc;
  #L2cdcd8.  v10.`kotlinx.coroutines.h1.b` @type ^`long` := v8 @kind wide;
  #L2cdcdc.  v8:= v7.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdce0.  v3:= v10.`kotlinx.coroutines.h1.b` @type ^`long` @kind wide;
  #L2cdce4.  v8:= v8 - v3 @kind long;
  #L2cdce6.  v11:= lcmp(v8, v1);
  #L2cdcea.  if v11 >= 0 then goto L2cdcf2;
  #L2cdcee.  v7.`kotlinx.coroutines.g1.b` @type ^`long` := v3 @kind wide;
  #L2cdcf2.  call `a`(v10, v7) @signature `Lkotlinx/coroutines/internal/q0;.a:(Lkotlinx/coroutines/internal/r0;)V` @kind virtual;
  #L2cdcf8.  @monitorexit v10
  #L2cdcfa.  v8:= 0I;
  #L2cdcfc.  @monitorexit v7
  #L2cdcfe.  return v8;
  #L2cdd00.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cdd02.  @monitorexit v10
  #L2cdd04.  throw v8;
  #L2cdd06.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cdd08.  @monitorexit v7
  #L2cdd0a.  throw v8;
  catch `java.lang.Throwable` @[L2cdc6e..L2cdc7a] goto L2cdd06;
  catch `java.lang.Throwable` @[L2cdc84..L2cdc86] goto L2cdd06;
  catch `java.lang.Throwable` @[L2cdc86..L2cdc9a] goto L2cdd00;
  catch `java.lang.Throwable` @[L2cdca0..L2cdca2] goto L2cdd06;
  catch `java.lang.Throwable` @[L2cdcae..L2cdcf8] goto L2cdd00;
  catch `java.lang.Throwable` @[L2cdcf8..L2cdcfa] goto L2cdd06;
  catch `java.lang.Throwable` @[L2cdd02..L2cdd06] goto L2cdd06;
}
procedure `void` `dispose`(`kotlinx.coroutines.g1` v2 @kind this) @signature `Lkotlinx/coroutines/g1;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cddec.  @monitorenter v2
  #L2cddee.  v0:= v2.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` @kind object;
  #L2cddf2.  call temp:= `b`() @signature `Lkotlinx/coroutines/l1;.b:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cddf8.  v1:= temp @kind object;
  #L2cddfa.  if v0 != v1 then goto L2cde02;
  #L2cddfe.  @monitorexit v2
  #L2cde00.  return @kind void;
  #L2cde02.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.h1` @kind boolean;
  #L2cde06.  if v1 == 0 then goto L2cde10;
  #L2cde0a.  v0:= (`kotlinx.coroutines.h1`) v0 @kind object;
  #L2cde0e.  goto L2cde12;
  #L2cde10.  v0:= 0I;
  #L2cde12.  if v0 != 0 then goto L2cde18;
  #L2cde16.  goto L2cde1e;
  #L2cde18.  call temp:= `g`(v0, v2) @signature `Lkotlinx/coroutines/internal/q0;.g:(Lkotlinx/coroutines/internal/r0;)Z` @kind virtual;
  #L2cde1e.  call temp:= `b`() @signature `Lkotlinx/coroutines/l1;.b:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cde24.  v0:= temp @kind object;
  #L2cde26.  v2.`kotlinx.coroutines.g1.c` @type ^`java.lang.Object` := v0 @kind object;
  #L2cde2a.  @monitorexit v2
  #L2cde2c.  return @kind void;
  #L2cde2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cde30.  @monitorexit v2
  #L2cde32.  throw v0;
  catch `java.lang.Throwable` @[L2cddee..L2cddfa] goto L2cde2e;
  catch `java.lang.Throwable` @[L2cde02..L2cde2a] goto L2cde2e;
}
procedure `void` `g`(`kotlinx.coroutines.g1` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/g1;.g:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2cdea0.  v0.`kotlinx.coroutines.g1.d` @type ^`int` := v1;
  #L2cdea4.  return @kind void;
}
procedure `int` `getIndex`(`kotlinx.coroutines.g1` v1 @kind this) @signature `Lkotlinx/coroutines/g1;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cdc54.  v0:= v1.`kotlinx.coroutines.g1.d` @type ^`int`;
  #L2cdc58.  return v0;
}
procedure `boolean` `i`(`kotlinx.coroutines.g1` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/g1;.i:(J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2cdbcc.  v0:= v3.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdbd0.  v4:= v4 - v0 @kind long;
  #L2cdbd2.  v0:= 0L;
  #L2cdbd6.  v2:= lcmp(v4, v0);
  #L2cdbda.  if v2 < 0 then goto L2cdbe2;
  #L2cdbde.  v4:= 1I;
  #L2cdbe0.  goto L2cdbe4;
  #L2cdbe2.  v4:= 0I;
  #L2cdbe4.  return v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.g1` v3 @kind this) @signature `Lkotlinx/coroutines/g1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cdd5c.  v0:= new `java.lang.StringBuilder`;
  #L2cdd60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cdd66.  v1:= "Delayed[nanos=" @kind object;
  #L2cdd6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cdd70.  v1:= v3.`kotlinx.coroutines.g1.b` @type ^`long` @kind wide;
  #L2cdd74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cdd7a.  v1:= 93I;
  #L2cdd7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cdd84.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cdd8a.  v0:= temp @kind object;
  #L2cdd8c.  return v0 @kind object;
}
