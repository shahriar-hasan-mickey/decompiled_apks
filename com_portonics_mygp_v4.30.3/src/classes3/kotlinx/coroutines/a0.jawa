record `kotlinx.coroutines.a0` @kind class @AccessFlag PUBLIC {
  `int` `kotlinx.coroutines.a0._handled` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Throwable` `kotlinx.coroutines.a0.b` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.a0.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2cb70c.  v0:= constclass @type ^`kotlinx.coroutines.a0` @kind object;
  #L2cb710.  v1:= "_handled" @kind object;
  #L2cb714.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L2cb71a.  v0:= temp @kind object;
  #L2cb71c.  `@@kotlinx.coroutines.a0.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L2cb720.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.a0` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 ) @signature `Lkotlinx/coroutines/a0;.<init>:(Ljava/lang/Throwable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cb734.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cb73a.  v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` := v1 @kind object;
  #L2cb73e.  v0.`kotlinx.coroutines.a0._handled` @type ^`int` := v2;
  #L2cb742.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.a0` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 , `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlinx/coroutines/a0;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2cb754.  v3:= v3 ^& 2;
  #L2cb758.  if v3 == 0 then goto L2cb75e;
  #L2cb75c.  v2:= 0I;
  #L2cb75e.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/a0;.<init>:(Ljava/lang/Throwable;Z)V` @kind direct;
  #L2cb764.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.a0` v1 @kind this) @signature `Lkotlinx/coroutines/a0;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cb680.  v0:= v1.`kotlinx.coroutines.a0._handled` @type ^`int`;
  #L2cb684.  return v0;
}
procedure `boolean` `b`(`kotlinx.coroutines.a0` v3 @kind this) @signature `Lkotlinx/coroutines/a0;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2cb698.  v0:= `@@kotlinx.coroutines.a0.a` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2cb69c.  v1:= 0I;
  #L2cb69e.  v2:= 1I;
  #L2cb6a0.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2cb6a6.  v0:= temp;
  #L2cb6a8.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.a0` v2 @kind this) @signature `Lkotlinx/coroutines/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cb6bc.  v0:= new `java.lang.StringBuilder`;
  #L2cb6c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cb6c6.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/p0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cb6cc.  v1:= temp @kind object;
  #L2cb6ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cb6d4.  v1:= 91I;
  #L2cb6d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cb6de.  v1:= v2.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2cb6e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cb6e8.  v1:= 93I;
  #L2cb6ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cb6f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cb6f8.  v0:= temp @kind object;
  #L2cb6fa.  return v0 @kind object;
}
