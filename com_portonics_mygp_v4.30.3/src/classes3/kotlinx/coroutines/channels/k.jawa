record `kotlinx.coroutines.channels.k` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.channels.g0` @kind class {
  `java.lang.Object` `kotlinx.coroutines.channels.k.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/k;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d2994.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/g0;.<init>:()V` @kind direct;
  #L2d299a.  v0.`kotlinx.coroutines.channels.k.e` @type ^`java.lang.Object` := v1 @kind object;
  #L2d299e.  return @kind void;
}
procedure `void` `R`(`kotlinx.coroutines.channels.k` v0 @kind this) @signature `Lkotlinx/coroutines/channels/k;.R:()V` @AccessFlag PUBLIC {
    temp;

  #L2d29b0.  return @kind void;
}
procedure `java.lang.Object` `S`(`kotlinx.coroutines.channels.k` v1 @kind this) @signature `Lkotlinx/coroutines/channels/k;.S:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d28fc.  v0:= v1.`kotlinx.coroutines.channels.k.e` @type ^`java.lang.Object` @kind object;
  #L2d2900.  return v0 @kind object;
}
procedure `void` `T`(`kotlinx.coroutines.channels.k` v0 @kind this, `kotlinx.coroutines.channels.y` v1 @kind object) @signature `Lkotlinx/coroutines/channels/k;.T:(Lkotlinx/coroutines/channels/y;)V` @AccessFlag PUBLIC {
    temp;

  #L2d29c4.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2d29ca.  v1:= temp;
  #L2d29cc.  if v1 == 0 then goto L2d29dc;
  #L2d29d0.  v1:= new `java.lang.AssertionError`;
  #L2d29d4.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d29da.  throw v1;
  #L2d29dc.  return @kind void;
}
procedure `kotlinx.coroutines.internal.k0` `U`(`kotlinx.coroutines.channels.k` v1 @kind this, `kotlinx.coroutines.internal.v` v2 @kind object) @signature `Lkotlinx/coroutines/channels/k;.U:(Lkotlinx/coroutines/internal/v;)Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d2970.  v0:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d2974.  if v2 != 0 then goto L2d297a;
  #L2d2978.  goto L2d2980;
  #L2d297a.  call `d`(v2) @signature `Lkotlinx/coroutines/internal/v;.d:()V` @kind virtual;
  #L2d2980.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.k` v2 @kind this) @signature `Lkotlinx/coroutines/channels/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d2914.  v0:= new `java.lang.StringBuilder`;
  #L2d2918.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d291e.  v1:= "SendBuffered@" @kind object;
  #L2d2922.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2928.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d292e.  v1:= temp @kind object;
  #L2d2930.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2936.  v1:= 40I;
  #L2d293a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2940.  v1:= v2.`kotlinx.coroutines.channels.k.e` @type ^`java.lang.Object` @kind object;
  #L2d2944.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d294a.  v1:= 41I;
  #L2d294e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2954.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d295a.  v0:= temp @kind object;
  #L2d295c.  return v0 @kind object;
}
