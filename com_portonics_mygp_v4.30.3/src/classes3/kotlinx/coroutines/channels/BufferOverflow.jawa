record `kotlinx.coroutines.channels.BufferOverflow` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.channels.BufferOverflow`[] `@@kotlinx.coroutines.channels.BufferOverflow.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.channels.BufferOverflow` `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.channels.BufferOverflow`[] `$values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.$values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2d3f18.  v0:= 3I;
  #L2d3f1a.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`[v0];
  #L2d3f1e.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d3f22.  v2:= 0I;
  #L2d3f24.  v0[v2]:= v1 @kind object;
  #L2d3f28.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d3f2c.  v2:= 1I;
  #L2d3f2e.  v0[v2]:= v1 @kind object;
  #L2d3f32.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d3f36.  v2:= 2I;
  #L2d3f38.  v0[v2]:= v1 @kind object;
  #L2d3f3c.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d3f74.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L2d3f78.  v1:= "SUSPEND" @kind object;
  #L2d3f7c.  v2:= 0I;
  #L2d3f7e.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d3f84.  `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L2d3f88.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L2d3f8c.  v1:= "DROP_OLDEST" @kind object;
  #L2d3f90.  v2:= 1I;
  #L2d3f92.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d3f98.  `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L2d3f9c.  v0:= new `kotlinx.coroutines.channels.BufferOverflow`;
  #L2d3fa0.  v1:= "DROP_LATEST" @kind object;
  #L2d3fa4.  v2:= 2I;
  #L2d3fa6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d3fac.  `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v0 @kind object;
  #L2d3fb0.  call temp:= `$values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.$values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @kind static;
  #L2d3fb6.  v0:= temp @kind object;
  #L2d3fb8.  `@@kotlinx.coroutines.channels.BufferOverflow.$VALUES` @type ^`kotlinx.coroutines.channels.BufferOverflow`[] := v0 @kind object;
  #L2d3fbc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.BufferOverflow` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d3fd0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d3fd6.  return @kind void;
}
procedure `kotlinx.coroutines.channels.BufferOverflow` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/channels/BufferOverflow;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3ef4.  v0:= constclass @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d3ef8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2d3efe.  v1:= temp @kind object;
  #L2d3f00.  v1:= (`kotlinx.coroutines.channels.BufferOverflow`) v1 @kind object;
  #L2d3f04.  return v1 @kind object;
}
procedure `kotlinx.coroutines.channels.BufferOverflow`[] `values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3f50.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.$VALUES` @type ^`kotlinx.coroutines.channels.BufferOverflow`[] @kind object;
  #L2d3f54.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d3f5a.  v0:= temp @kind object;
  #L2d3f5c.  v0:= (`kotlinx.coroutines.channels.BufferOverflow`[]) v0 @kind object;
  #L2d3f60.  return v0 @kind object;
}
