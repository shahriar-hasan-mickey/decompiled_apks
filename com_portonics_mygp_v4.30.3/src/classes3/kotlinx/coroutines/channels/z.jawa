record `kotlinx.coroutines.channels.z` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.channels.AbstractChannel` @kind class {
  `java.util.concurrent.locks.ReentrantLock` `kotlinx.coroutines.channels.z.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.channels.z.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.z` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/channels/z;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d789c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d78a2.  v1:= new `java.util.concurrent.locks.ReentrantLock`;
  #L2d78a6.  call `<init>`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L2d78ac.  v0.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` := v1 @kind object;
  #L2d78b0.  v1:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d78b4.  v0.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` := v1 @kind object;
  #L2d78b8.  return @kind void;
}
procedure `kotlinx.coroutines.internal.UndeliveredElementException` `d0`(`kotlinx.coroutines.channels.z` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/z;.d0:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d7860.  v0:= v4.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d7864.  v1:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d7868.  v2:= 0I;
  #L2d786a.  if v0 != v1 then goto L2d7870;
  #L2d786e.  goto L2d7884;
  #L2d7870.  v1:= v4.`kotlinx.coroutines.channels.m.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2d7874.  if v1 != 0 then goto L2d787a;
  #L2d7878.  goto L2d7884;
  #L2d787a.  v3:= 2I;
  #L2d787c.  call temp:= `d`(v1, v0, v2, v3, v2) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.d:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;ILjava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L2d7882.  v2:= temp @kind object;
  #L2d7884.  v4.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` := v5 @kind object;
  #L2d7888.  return v2 @kind object;
}
procedure `java.lang.Object` `B`(`kotlinx.coroutines.channels.z` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/z;.B:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d7624.  v0:= v4.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L2d7628.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L2d762e.  call temp:= `m`(v4) @signature `Lkotlinx/coroutines/channels/m;.m:()Lkotlinx/coroutines/channels/y;` @kind virtual;
  #L2d7634.  v1:= temp @kind object;
  #L2d7636.  if v1 != 0 then goto L2d76d2;
  #L2d763a.  v1:= v4.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d763e.  v2:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d7642.  if v1 != v2 then goto L2d76b8;
  #L2d7646.  call temp:= `F`(v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.F:()Lkotlinx/coroutines/channels/e0;` @kind virtual;
  #L2d764c.  v1:= temp @kind object;
  #L2d764e.  if v1 != 0 then goto L2d7654;
  #L2d7652.  goto L2d76b8;
  #L2d7654.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.y` @kind boolean;
  #L2d7658.  if v2 == 0 then goto L2d7664;
  #L2d765c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d7662.  return v1 @kind object;
  #L2d7664.  v2:= 0I;
  #L2d7666.  call temp:= `s`(v1, v5, v2) @signature `Lkotlinx/coroutines/channels/e0;.s:(Ljava/lang/Object;Lkotlinx/coroutines/internal/v;)Lkotlinx/coroutines/internal/k0;` @kind interface;
  #L2d766c.  v2:= temp @kind object;
  #L2d766e.  if v2 == 0 then goto L2d7646;
  #L2d7672.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2d7678.  v3:= temp;
  #L2d767a.  if v3 == 0 then goto L2d769e;
  #L2d767e.  v3:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d7682.  if v2 != v3 then goto L2d768a;
  #L2d7686.  v2:= 1I;
  #L2d7688.  goto L2d768c;
  #L2d768a.  v2:= 0I;
  #L2d768c.  if v2 == 0 then goto L2d7692;
  #L2d7690.  goto L2d769e;
  #L2d7692.  v5:= new `java.lang.AssertionError`;
  #L2d7696.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d769c.  throw v5;
  #L2d769e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d76a2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d76a8.  call `o`(v1, v5) @signature `Lkotlinx/coroutines/channels/e0;.o:(Ljava/lang/Object;)V` @kind interface;
  #L2d76ae.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/channels/e0;.d:()Ljava/lang/Object;` @kind interface;
  #L2d76b4.  v5:= temp @kind object;
  #L2d76b6.  return v5 @kind object;
  #L2d76b8.  call temp:= `d0`(v4, v5) @signature `Lkotlinx/coroutines/channels/z;.d0:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind direct;
  #L2d76be.  v5:= temp @kind object;
  #L2d76c0.  if v5 != 0 then goto L2d76d0;
  #L2d76c4.  v5:= `@@kotlinx.coroutines.channels.j.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d76c8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d76ce.  return v5 @kind object;
  #L2d76d0.  throw v5;
  #L2d76d2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d76d8.  return v1 @kind object;
  #L2d76da.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d76dc.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d76e2.  goto L2d76e6;
  #L2d76e4.  throw v5;
  #L2d76e6.  goto L2d76e4;
  catch `java.lang.Throwable` @[L2d762e..L2d7658] goto L2d76da;
  catch `java.lang.Throwable` @[L2d7666..L2d76a2] goto L2d76da;
  catch `java.lang.Throwable` @[L2d76b8..L2d76c8] goto L2d76da;
  catch `java.lang.Throwable` @[L2d76d0..L2d76d2] goto L2d76da;
}
procedure `boolean` `N`(`kotlinx.coroutines.channels.z` v1 @kind this, `kotlinx.coroutines.channels.d0` v2 @kind object) @signature `Lkotlinx/coroutines/channels/z;.N:(Lkotlinx/coroutines/channels/d0;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2d7584.  v0:= v1.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L2d7588.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L2d758e.  call temp:= `N`(v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.N:(Lkotlinx/coroutines/channels/d0;)Z` @kind super;
  #L2d7594.  v2:= temp;
  #L2d7596.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d759c.  return v2;
  #L2d759e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d75a0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d75a6.  throw v2;
  catch `java.lang.Throwable` @[L2d758e..L2d7596] goto L2d759e;
}
procedure `boolean` `P`(`kotlinx.coroutines.channels.z` v1 @kind this) @signature `Lkotlinx/coroutines/channels/z;.P:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2d75c4.  v0:= 0I;
  #L2d75c6.  return v0;
}
procedure `boolean` `Q`(`kotlinx.coroutines.channels.z` v2 @kind this) @signature `Lkotlinx/coroutines/channels/z;.Q:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L2d75ec.  v0:= v2.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d75f0.  v1:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d75f4.  if v0 != v1 then goto L2d75fc;
  #L2d75f8.  v0:= 1I;
  #L2d75fa.  goto L2d75fe;
  #L2d75fc.  v0:= 0I;
  #L2d75fe.  return v0;
}
procedure `void` `T`(`kotlinx.coroutines.channels.z` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/z;.T:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2d78cc.  v0:= v3.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L2d78d0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L2d78d6.  v1:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d78da.  call temp:= `d0`(v3, v1) @signature `Lkotlinx/coroutines/channels/z;.d0:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind direct;
  #L2d78e0.  v1:= temp @kind object;
  #L2d78e2.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d78e6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d78ec.  call `T`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.T:(Z)V` @kind super;
  #L2d78f2.  if v1 != 0 then goto L2d78f8;
  #L2d78f6.  return @kind void;
  #L2d78f8.  throw v1;
  #L2d78fa.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d78fc.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d7902.  throw v4;
  catch `java.lang.Throwable` @[L2d78d6..L2d78e6] goto L2d78fa;
}
procedure `java.lang.Object` `X`(`kotlinx.coroutines.channels.z` v3 @kind this) @signature `Lkotlinx/coroutines/channels/z;.X:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2d771c.  v0:= v3.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L2d7720.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L2d7726.  v1:= v3.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d772a.  v2:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d772e.  if v1 != v2 then goto L2d774a;
  #L2d7732.  call temp:= `m`(v3) @signature `Lkotlinx/coroutines/channels/m;.m:()Lkotlinx/coroutines/channels/y;` @kind virtual;
  #L2d7738.  v1:= temp @kind object;
  #L2d773a.  if v1 != 0 then goto L2d7742;
  #L2d773e.  v1:= `@@kotlinx.coroutines.channels.j.d` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d7742.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d7748.  return v1 @kind object;
  #L2d774a.  v3.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` := v2 @kind object;
  #L2d774e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d7752.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d7758.  return v1 @kind object;
  #L2d775a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d775c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d7762.  throw v1;
  catch `java.lang.Throwable` @[L2d7726..L2d7742] goto L2d775a;
  catch `java.lang.Throwable` @[L2d774a..L2d7752] goto L2d775a;
}
procedure `java.lang.Object` `Y`(`kotlinx.coroutines.channels.z` v3 @kind this, `kotlinx.coroutines.selects.j` v4 @kind object) @signature `Lkotlinx/coroutines/channels/z;.Y:(Lkotlinx/coroutines/selects/j;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2d7788.  v0:= v3.`kotlinx.coroutines.channels.z.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L2d778c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L2d7792.  v1:= v3.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d7796.  v2:= `@@kotlinx.coroutines.channels.j.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d779a.  if v1 != v2 then goto L2d77b6;
  #L2d779e.  call temp:= `m`(v3) @signature `Lkotlinx/coroutines/channels/m;.m:()Lkotlinx/coroutines/channels/y;` @kind virtual;
  #L2d77a4.  v4:= temp @kind object;
  #L2d77a6.  if v4 != 0 then goto L2d77ae;
  #L2d77aa.  v4:= `@@kotlinx.coroutines.channels.j.d` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d77ae.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d77b4.  return v4 @kind object;
  #L2d77b6.  call temp:= `e`(v4) @signature `Lkotlinx/coroutines/selects/j;.e:()Z` @kind interface;
  #L2d77bc.  v4:= temp;
  #L2d77be.  if v4 != 0 then goto L2d77d2;
  #L2d77c2.  call temp:= `d`() @signature `Lkotlinx/coroutines/selects/k;.d:()Ljava/lang/Object;` @kind static;
  #L2d77c8.  v4:= temp @kind object;
  #L2d77ca.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d77d0.  return v4 @kind object;
  #L2d77d2.  v4:= v3.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d77d6.  v3.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` := v2 @kind object;
  #L2d77da.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d77de.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d77e4.  return v4 @kind object;
  #L2d77e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d77e8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L2d77ee.  throw v4;
  catch `java.lang.Throwable` @[L2d7792..L2d77ae] goto L2d77e6;
  catch `java.lang.Throwable` @[L2d77b6..L2d77ca] goto L2d77e6;
  catch `java.lang.Throwable` @[L2d77d2..L2d77de] goto L2d77e6;
}
procedure `java.lang.String` `k`(`kotlinx.coroutines.channels.z` v2 @kind this) @signature `Lkotlinx/coroutines/channels/z;.k:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2d781c.  v0:= new `java.lang.StringBuilder`;
  #L2d7820.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d7826.  v1:= "(value=" @kind object;
  #L2d782a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7830.  v1:= v2.`kotlinx.coroutines.channels.z.f` @type ^`java.lang.Object` @kind object;
  #L2d7834.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d783a.  v1:= 41I;
  #L2d783e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d7844.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d784a.  v0:= temp @kind object;
  #L2d784c.  return v0 @kind object;
}
procedure `boolean` `x`(`kotlinx.coroutines.channels.z` v1 @kind this) @signature `Lkotlinx/coroutines/channels/z;.x:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2d75d8.  v0:= 0I;
  #L2d75da.  return v0;
}
procedure `boolean` `z`(`kotlinx.coroutines.channels.z` v1 @kind this) @signature `Lkotlinx/coroutines/channels/z;.z:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2d7610.  v0:= 0I;
  #L2d7612.  return v0;
}
