record `kotlinx.coroutines.channels.d` @kind class @AccessFlag  extends `kotlinx.coroutines.channels.d0` @kind class {
  `kotlinx.coroutines.channels.a` `kotlinx.coroutines.channels.d.e` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.o` `kotlinx.coroutines.channels.d.f` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.d` v0 @kind this, `kotlinx.coroutines.channels.a` v1 @kind object, `kotlinx.coroutines.o` v2 @kind object) @signature `Lkotlinx/coroutines/channels/d;.<init>:(Lkotlinx/coroutines/channels/a;Lkotlinx/coroutines/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d1b4c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/d0;.<init>:()V` @kind direct;
  #L2d1b52.  v0.`kotlinx.coroutines.channels.d.e` @type ^`kotlinx.coroutines.channels.a` := v1 @kind object;
  #L2d1b56.  v0.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` := v2 @kind object;
  #L2d1b5a.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `S`(`kotlinx.coroutines.channels.d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/d;.S:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d1a94.  v0:= v2.`kotlinx.coroutines.channels.d.e` @type ^`kotlinx.coroutines.channels.a` @kind object;
  #L2d1a98.  v0:= v0.`kotlinx.coroutines.channels.a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L2d1a9c.  v0:= v0.`kotlinx.coroutines.channels.m.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2d1aa0.  if v0 != 0 then goto L2d1aa8;
  #L2d1aa4.  v3:= 0I;
  #L2d1aa6.  goto L2d1abc;
  #L2d1aa8.  v1:= v2.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1aac.  call temp:= `getContext`(v1) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2d1ab2.  v1:= temp @kind object;
  #L2d1ab4.  call temp:= `a`(v0, v3, v1) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.a:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2d1aba.  v3:= temp @kind object;
  #L2d1abc.  return v3 @kind object;
}
procedure `void` `T`(`kotlinx.coroutines.channels.d` v4 @kind this, `kotlinx.coroutines.channels.y` v5 @kind object) @signature `Lkotlinx/coroutines/channels/d;.T:(Lkotlinx/coroutines/channels/y;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d1b98.  v0:= v5.`kotlinx.coroutines.channels.y.e` @type ^`java.lang.Throwable` @kind object;
  #L2d1b9c.  if v0 != 0 then goto L2d1bb6;
  #L2d1ba0.  v0:= v4.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1ba4.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L2d1ba8.  v2:= 2I;
  #L2d1baa.  v3:= 0I;
  #L2d1bac.  call temp:= `a`(v0, v1, v3, v2, v3) @signature `Lkotlinx/coroutines/n;.a:(Lkotlinx/coroutines/o;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d1bb2.  v0:= temp @kind object;
  #L2d1bb4.  goto L2d1bca;
  #L2d1bb6.  v0:= v4.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1bba.  call temp:= `Y`(v5) @signature `Lkotlinx/coroutines/channels/y;.Y:()Ljava/lang/Throwable;` @kind virtual;
  #L2d1bc0.  v1:= temp @kind object;
  #L2d1bc2.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/o;.j:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind interface;
  #L2d1bc8.  v0:= temp @kind object;
  #L2d1bca.  if v0 == 0 then goto L2d1be2;
  #L2d1bce.  v1:= v4.`kotlinx.coroutines.channels.d.e` @type ^`kotlinx.coroutines.channels.a` @kind object;
  #L2d1bd2.  call `e`(v1, v5) @signature `Lkotlinx/coroutines/channels/a;.e:(Ljava/lang/Object;)V` @kind virtual;
  #L2d1bd8.  v5:= v4.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1bdc.  call `z`(v5, v0) @signature `Lkotlinx/coroutines/o;.z:(Ljava/lang/Object;)V` @kind interface;
  #L2d1be2.  return @kind void;
}
procedure `void` `o`(`kotlinx.coroutines.channels.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/d;.o:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d1b6c.  v0:= v1.`kotlinx.coroutines.channels.d.e` @type ^`kotlinx.coroutines.channels.a` @kind object;
  #L2d1b70.  call `e`(v0, v2) @signature `Lkotlinx/coroutines/channels/a;.e:(Ljava/lang/Object;)V` @kind virtual;
  #L2d1b76.  v2:= v1.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1b7a.  v0:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d1b7e.  call `z`(v2, v0) @signature `Lkotlinx/coroutines/o;.z:(Ljava/lang/Object;)V` @kind interface;
  #L2d1b84.  return @kind void;
}
procedure `kotlinx.coroutines.internal.k0` `s`(`kotlinx.coroutines.channels.d` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.internal.v` v6 @kind object) @signature `Lkotlinx/coroutines/channels/d;.s:(Ljava/lang/Object;Lkotlinx/coroutines/internal/v;)Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d1ad0.  v0:= v4.`kotlinx.coroutines.channels.d.f` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d1ad4.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2d1ad8.  v2:= 0I;
  #L2d1ada.  if v6 != 0 then goto L2d1ae2;
  #L2d1ade.  v3:= v2 @kind object;
  #L2d1ae0.  goto L2d1ae6;
  #L2d1ae2.  v3:= v6.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2d1ae6.  call temp:= `S`(v4, v5) @signature `Lkotlinx/coroutines/channels/d;.S:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L2d1aec.  v5:= temp @kind object;
  #L2d1aee.  call temp:= `l`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/o;.l:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L2d1af4.  v5:= temp @kind object;
  #L2d1af6.  if v5 != 0 then goto L2d1afc;
  #L2d1afa.  return v2 @kind object;
  #L2d1afc.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2d1b02.  v0:= temp;
  #L2d1b04.  if v0 == 0 then goto L2d1b28;
  #L2d1b08.  v0:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d1b0c.  if v5 != v0 then goto L2d1b14;
  #L2d1b10.  v5:= 1I;
  #L2d1b12.  goto L2d1b16;
  #L2d1b14.  v5:= 0I;
  #L2d1b16.  if v5 == 0 then goto L2d1b1c;
  #L2d1b1a.  goto L2d1b28;
  #L2d1b1c.  v5:= new `java.lang.AssertionError`;
  #L2d1b20.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d1b26.  throw v5;
  #L2d1b28.  if v6 != 0 then goto L2d1b2e;
  #L2d1b2c.  goto L2d1b34;
  #L2d1b2e.  call `d`(v6) @signature `Lkotlinx/coroutines/internal/v;.d:()V` @kind virtual;
  #L2d1b34.  v5:= `@@kotlinx.coroutines.q.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2d1b38.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.d` v2 @kind this) @signature `Lkotlinx/coroutines/channels/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d1a6c.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d1a72.  v0:= temp @kind object;
  #L2d1a74.  v1:= "ReceiveHasNext@" @kind object;
  #L2d1a78.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d1a7e.  v0:= temp @kind object;
  #L2d1a80.  return v0 @kind object;
}
