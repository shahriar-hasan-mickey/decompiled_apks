record `kotlinx.coroutines.channels.s` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `kotlinx.coroutines.channels.q` `a`(`int` v2 , `kotlinx.coroutines.channels.BufferOverflow` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/channels/s;.a:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/channels/q;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2d40d8.  v0:= -2I;
  #L2d40da.  v1:= 1I;
  #L2d40dc.  if v2 == v0 then goto L2d417a;
  #L2d40e0.  v0:= -1I;
  #L2d40e2.  if v2 == v0 then goto L2d4146;
  #L2d40e6.  if v2 == 0 then goto L2d4126;
  #L2d40ea.  v0:= 2147483647I;
  #L2d40f0.  if v2 == v0 then goto L2d411a;
  #L2d40f4.  if v2 != v1 then goto L2d410c;
  #L2d40f8.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d40fc.  if v3 != v0 then goto L2d410c;
  #L2d4100.  v2:= new `kotlinx.coroutines.channels.z`;
  #L2d4104.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/channels/z;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d410a.  goto L2d4198;
  #L2d410c.  v0:= new `kotlinx.coroutines.channels.n`;
  #L2d4110.  call `<init>`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/channels/n;.<init>:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4116.  v2:= v0 @kind object;
  #L2d4118.  goto L2d4198;
  #L2d411a.  v2:= new `kotlinx.coroutines.channels.a0`;
  #L2d411e.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/channels/a0;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4124.  goto L2d4198;
  #L2d4126.  v2:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d412a.  if v3 != v2 then goto L2d413a;
  #L2d412e.  v2:= new `kotlinx.coroutines.channels.f0`;
  #L2d4132.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/channels/f0;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4138.  goto L2d4198;
  #L2d413a.  v2:= new `kotlinx.coroutines.channels.n`;
  #L2d413e.  call `<init>`(v2, v1, v3, v4) @signature `Lkotlinx/coroutines/channels/n;.<init>:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4144.  goto L2d4198;
  #L2d4146.  v2:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d414a.  if v3 != v2 then goto L2d4150;
  #L2d414e.  goto L2d4152;
  #L2d4150.  v1:= 0I;
  #L2d4152.  if v1 == 0 then goto L2d4162;
  #L2d4156.  v2:= new `kotlinx.coroutines.channels.z`;
  #L2d415a.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/channels/z;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4160.  goto L2d4198;
  #L2d4162.  v2:= new `java.lang.IllegalArgumentException`;
  #L2d4166.  v3:= "CONFLATED capacity cannot be used with non-default onBufferOverflow" @kind object;
  #L2d416a.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4170.  v3:= temp @kind object;
  #L2d4172.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4178.  throw v2;
  #L2d417a.  v2:= new `kotlinx.coroutines.channels.n`;
  #L2d417e.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d4182.  if v3 != v0 then goto L2d4192;
  #L2d4186.  v0:= `@@kotlinx.coroutines.channels.q.n0` @type ^`kotlinx.coroutines.channels.p` @kind object;
  #L2d418a.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/channels/p;.a:()I` @kind virtual;
  #L2d4190.  v1:= temp;
  #L2d4192.  call `<init>`(v2, v1, v3, v4) @signature `Lkotlinx/coroutines/channels/n;.<init>:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2d4198.  return v2 @kind object;
}
procedure `kotlinx.coroutines.channels.q` `b`(`int` v0 , `kotlinx.coroutines.channels.BufferOverflow` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/channels/s;.b:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/channels/q;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2d409c.  v4:= v3 ^& 1;
  #L2d40a0.  if v4 == 0 then goto L2d40a6;
  #L2d40a4.  v0:= 0I;
  #L2d40a6.  v4:= v3 ^& 2;
  #L2d40aa.  if v4 == 0 then goto L2d40b2;
  #L2d40ae.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2d40b2.  v3:= v3 ^& 4;
  #L2d40b6.  if v3 == 0 then goto L2d40bc;
  #L2d40ba.  v2:= 0I;
  #L2d40bc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/s;.a:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/channels/q;` @kind static;
  #L2d40c2.  v0:= temp @kind object;
  #L2d40c4.  return v0 @kind object;
}
