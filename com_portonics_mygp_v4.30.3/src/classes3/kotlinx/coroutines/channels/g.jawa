record `kotlinx.coroutines.channels.g` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.u` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.channels.g.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.g.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.g` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.channels.AbstractChannel` v2 @kind object) @signature `Lkotlinx/coroutines/channels/g;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d1fac.  v0.`kotlinx.coroutines.channels.g.d` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L2d1fb0.  v0.`kotlinx.coroutines.channels.g.e` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v2 @kind object;
  #L2d1fb4.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/u;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L2d1fba.  return @kind void;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.channels.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/g;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2d1f5c.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L2d1f60.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/channels/g;.k:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L2d1f66.  v1:= temp @kind object;
  #L2d1f68.  return v1 @kind object;
}
procedure `java.lang.Object` `k`(`kotlinx.coroutines.channels.g` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object) @signature `Lkotlinx/coroutines/channels/g;.k:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2d1f7c.  v1:= v0.`kotlinx.coroutines.channels.g.e` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L2d1f80.  call temp:= `Q`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.Q:()Z` @kind virtual;
  #L2d1f86.  v1:= temp;
  #L2d1f88.  if v1 == 0 then goto L2d1f90;
  #L2d1f8c.  v1:= 0I;
  #L2d1f8e.  goto L2d1f98;
  #L2d1f90.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/s;.a:()Ljava/lang/Object;` @kind static;
  #L2d1f96.  v1:= temp @kind object;
  #L2d1f98.  return v1 @kind object;
}
