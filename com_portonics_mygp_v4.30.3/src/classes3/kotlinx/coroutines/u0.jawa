record `kotlinx.coroutines.u0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.i0` @kind class {
  `int` `kotlinx.coroutines.u0._decision` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.u0.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/u0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2cd224.  v0:= constclass @type ^`kotlinx.coroutines.u0` @kind object;
  #L2cd228.  v1:= "_decision" @kind object;
  #L2cd22c.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L2cd232.  v0:= temp @kind object;
  #L2cd234.  `@@kotlinx.coroutines.u0.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L2cd238.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.u0` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/u0;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cd24c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/i0;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2cd252.  v1:= 0I;
  #L2cd254.  v0.`kotlinx.coroutines.u0._decision` @type ^`int` := v1;
  #L2cd258.  return @kind void;
}
procedure `boolean` `P0`(`kotlinx.coroutines.u0` v4 @kind this) @signature `Lkotlinx/coroutines/u0;.P0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cd138.  v0:= v4.`kotlinx.coroutines.u0._decision` @type ^`int`;
  #L2cd13c.  v1:= 0I;
  #L2cd13e.  v2:= 1I;
  #L2cd140.  if v0 == 0 then goto L2cd162;
  #L2cd144.  if v0 != v2 then goto L2cd14a;
  #L2cd148.  return v1;
  #L2cd14a.  v0:= new `java.lang.IllegalStateException`;
  #L2cd14e.  v1:= "Already resumed" @kind object;
  #L2cd152.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cd158.  v1:= temp @kind object;
  #L2cd15a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cd160.  throw v0;
  #L2cd162.  v0:= `@@kotlinx.coroutines.u0.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2cd166.  v3:= 2I;
  #L2cd168.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2cd16e.  v0:= temp;
  #L2cd170.  if v0 == 0 then goto L2cd138;
  #L2cd174.  return v2;
}
procedure `boolean` `Q0`(`kotlinx.coroutines.u0` v3 @kind this) @signature `Lkotlinx/coroutines/u0;.Q0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2cd188.  v0:= v3.`kotlinx.coroutines.u0._decision` @type ^`int`;
  #L2cd18c.  v1:= 0I;
  #L2cd18e.  if v0 == 0 then goto L2cd1b2;
  #L2cd192.  v2:= 2I;
  #L2cd194.  if v0 != v2 then goto L2cd19a;
  #L2cd198.  return v1;
  #L2cd19a.  v0:= new `java.lang.IllegalStateException`;
  #L2cd19e.  v1:= "Already suspended" @kind object;
  #L2cd1a2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cd1a8.  v1:= temp @kind object;
  #L2cd1aa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cd1b0.  throw v0;
  #L2cd1b2.  v0:= `@@kotlinx.coroutines.u0.e` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L2cd1b6.  v2:= 1I;
  #L2cd1b8.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L2cd1be.  v0:= temp;
  #L2cd1c0.  if v0 == 0 then goto L2cd188;
  #L2cd1c4.  return v2;
}
procedure `void` `F`(`kotlinx.coroutines.u0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/u0;.F:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L2cd26c.  call `I0`(v0, v1) @signature `Lkotlinx/coroutines/u0;.I0:(Ljava/lang/Object;)V` @kind virtual;
  #L2cd272.  return @kind void;
}
procedure `void` `I0`(`kotlinx.coroutines.u0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/u0;.I0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2cd284.  call temp:= `P0`(v3) @signature `Lkotlinx/coroutines/u0;.P0:()Z` @kind direct;
  #L2cd28a.  v0:= temp;
  #L2cd28c.  if v0 == 0 then goto L2cd292;
  #L2cd290.  return @kind void;
  #L2cd292.  v0:= v3.`kotlinx.coroutines.internal.i0.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2cd296.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2cd29c.  v0:= temp @kind object;
  #L2cd29e.  v1:= v3.`kotlinx.coroutines.internal.i0.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2cd2a2.  call temp:= `a`(v4, v1) @signature `Lkotlinx/coroutines/d0;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2cd2a8.  v4:= temp @kind object;
  #L2cd2aa.  v1:= 2I;
  #L2cd2ac.  v2:= 0I;
  #L2cd2ae.  call `c`(v0, v4, v2, v1, v2) @signature `Lkotlinx/coroutines/internal/k;.c:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L2cd2b4.  return @kind void;
}
procedure `java.lang.Object` `O0`(`kotlinx.coroutines.u0` v2 @kind this) @signature `Lkotlinx/coroutines/u0;.O0:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cd1d8.  call temp:= `Q0`(v2) @signature `Lkotlinx/coroutines/u0;.Q0:()Z` @kind direct;
  #L2cd1de.  v0:= temp;
  #L2cd1e0.  if v0 == 0 then goto L2cd1ee;
  #L2cd1e4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2cd1ea.  v0:= temp @kind object;
  #L2cd1ec.  return v0 @kind object;
  #L2cd1ee.  call temp:= `Y`(v2) @signature `Lkotlinx/coroutines/j2;.Y:()Ljava/lang/Object;` @kind virtual;
  #L2cd1f4.  v0:= temp @kind object;
  #L2cd1f6.  call temp:= `h`(v0) @signature `Lkotlinx/coroutines/k2;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2cd1fc.  v0:= temp @kind object;
  #L2cd1fe.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L2cd202.  if v1 != 0 then goto L2cd208;
  #L2cd206.  return v0 @kind object;
  #L2cd208.  v0:= (`kotlinx.coroutines.a0`) v0 @kind object;
  #L2cd20c.  v0:= v0.`kotlinx.coroutines.a0.b` @type ^`java.lang.Throwable` @kind object;
  #L2cd210.  throw v0;
}
