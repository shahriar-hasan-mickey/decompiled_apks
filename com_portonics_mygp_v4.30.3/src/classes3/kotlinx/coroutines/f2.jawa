record `kotlinx.coroutines.f2` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.c0` @kind class, `kotlinx.coroutines.z0` @kind interface, `kotlinx.coroutines.r1` @kind interface {
  `kotlinx.coroutines.j2` `kotlinx.coroutines.f2.e` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.f2` v0 @kind this) @signature `Lkotlinx/coroutines/f2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cf8b8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/c0;.<init>:()V` @kind direct;
  #L2cf8be.  return @kind void;
}
procedure `kotlinx.coroutines.j2` `S`(`kotlinx.coroutines.f2` v1 @kind this) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf87c.  v0:= v1.`kotlinx.coroutines.f2.e` @type ^`kotlinx.coroutines.j2` @kind object;
  #L2cf880.  if v0 == 0 then goto L2cf886;
  #L2cf884.  return v0 @kind object;
  #L2cf886.  v0:= "job" @kind object;
  #L2cf88a.  call `throwUninitializedPropertyAccessException`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L2cf890.  v0:= 0I;
  #L2cf892.  return v0 @kind object;
}
procedure `void` `T`(`kotlinx.coroutines.f2` v0 @kind this, `kotlinx.coroutines.j2` v1 @kind object) @signature `Lkotlinx/coroutines/f2;.T:(Lkotlinx/coroutines/j2;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2cf8f0.  v0.`kotlinx.coroutines.f2.e` @type ^`kotlinx.coroutines.j2` := v1 @kind object;
  #L2cf8f4.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.f2` v1 @kind this) @signature `Lkotlinx/coroutines/f2;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf7f4.  v0:= 1I;
  #L2cf7f6.  return v0;
}
procedure `void` `dispose`(`kotlinx.coroutines.f2` v1 @kind this) @signature `Lkotlinx/coroutines/f2;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf8d0.  call temp:= `S`(v1) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cf8d6.  v0:= temp @kind object;
  #L2cf8d8.  call `t0`(v0, v1) @signature `Lkotlinx/coroutines/j2;.t0:(Lkotlinx/coroutines/f2;)V` @kind virtual;
  #L2cf8de.  return @kind void;
}
procedure `kotlinx.coroutines.n2` `g`(`kotlinx.coroutines.f2` v1 @kind this) @signature `Lkotlinx/coroutines/f2;.g:()Lkotlinx/coroutines/n2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf8a4.  v0:= 0I;
  #L2cf8a6.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.f2` v2 @kind this) @signature `Lkotlinx/coroutines/f2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cf808.  v0:= new `java.lang.StringBuilder`;
  #L2cf80c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cf812.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/p0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cf818.  v1:= temp @kind object;
  #L2cf81a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf820.  v1:= 64I;
  #L2cf824.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf82a.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cf830.  v1:= temp @kind object;
  #L2cf832.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf838.  v1:= "[job@" @kind object;
  #L2cf83c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf842.  call temp:= `S`(v2) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cf848.  v1:= temp @kind object;
  #L2cf84a.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cf850.  v1:= temp @kind object;
  #L2cf852.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf858.  v1:= 93I;
  #L2cf85c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf862.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cf868.  v0:= temp @kind object;
  #L2cf86a.  return v0 @kind object;
}
