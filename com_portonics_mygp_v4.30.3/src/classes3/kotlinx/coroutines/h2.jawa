record `kotlinx.coroutines.h2` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.r1` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.h2._exceptionsHolder` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.h2._isCompleting` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.h2._rootCause` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.n2` `kotlinx.coroutines.h2.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.h2` v0 @kind this, `kotlinx.coroutines.n2` v1 @kind object, `boolean` v2 , `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/h2;.<init>:(Lkotlinx/coroutines/n2;ZLjava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cfbc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cfbc6.  v0.`kotlinx.coroutines.h2.b` @type ^`kotlinx.coroutines.n2` := v1 @kind object;
  #L2cfbca.  v0.`kotlinx.coroutines.h2._isCompleting` @type ^`int` := v2;
  #L2cfbce.  v0.`kotlinx.coroutines.h2._rootCause` @type ^`java.lang.Object` := v3 @kind object;
  #L2cfbd2.  v1:= 0I;
  #L2cfbd4.  v0.`kotlinx.coroutines.h2._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L2cfbd8.  return @kind void;
}
procedure `java.util.ArrayList` `c`(`kotlinx.coroutines.h2` v2 @kind this) @signature `Lkotlinx/coroutines/h2;.c:()Ljava/util/ArrayList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2cfae0.  v0:= new `java.util.ArrayList`;
  #L2cfae4.  v1:= 4I;
  #L2cfae6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2cfaec.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.d:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2cfa04.  v0:= v1.`kotlinx.coroutines.h2._exceptionsHolder` @type ^`java.lang.Object` @kind object;
  #L2cfa08.  return v0 @kind object;
}
procedure `void` `l`(`kotlinx.coroutines.h2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/h2;.l:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L2cfca0.  v0.`kotlinx.coroutines.h2._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L2cfca4.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf978.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @kind virtual;
  #L2cf97e.  v0:= temp @kind object;
  #L2cf980.  if v0 != 0 then goto L2cf988;
  #L2cf984.  v0:= 1I;
  #L2cf986.  goto L2cf98a;
  #L2cf988.  v0:= 0I;
  #L2cf98a.  return v0;
}
procedure `void` `b`(`kotlinx.coroutines.h2` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/h2;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cfbec.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @kind virtual;
  #L2cfbf2.  v0:= temp @kind object;
  #L2cfbf4.  if v0 != 0 then goto L2cfc00;
  #L2cfbf8.  call `m`(v2, v3) @signature `Lkotlinx/coroutines/h2;.m:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2cfbfe.  return @kind void;
  #L2cfc00.  if v3 != v0 then goto L2cfc06;
  #L2cfc04.  return @kind void;
  #L2cfc06.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/h2;.d:()Ljava/lang/Object;` @kind direct;
  #L2cfc0c.  v0:= temp @kind object;
  #L2cfc0e.  if v0 != 0 then goto L2cfc1a;
  #L2cfc12.  call `l`(v2, v3) @signature `Lkotlinx/coroutines/h2;.l:(Ljava/lang/Object;)V` @kind direct;
  #L2cfc18.  goto L2cfc56;
  #L2cfc1a.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L2cfc1e.  if v1 == 0 then goto L2cfc44;
  #L2cfc22.  if v3 != v0 then goto L2cfc28;
  #L2cfc26.  return @kind void;
  #L2cfc28.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/h2;.c:()Ljava/util/ArrayList;` @kind direct;
  #L2cfc2e.  v1:= temp @kind object;
  #L2cfc30.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cfc36.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cfc3c.  call `l`(v2, v1) @signature `Lkotlinx/coroutines/h2;.l:(Ljava/lang/Object;)V` @kind direct;
  #L2cfc42.  goto L2cfc56;
  #L2cfc44.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L2cfc48.  if v1 == 0 then goto L2cfc58;
  #L2cfc4c.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L2cfc50.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cfc56.  return @kind void;
  #L2cfc58.  v3:= new `java.lang.IllegalStateException`;
  #L2cfc5c.  v1:= "State is " @kind object;
  #L2cfc60.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cfc66.  v0:= temp @kind object;
  #L2cfc68.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cfc6e.  v0:= temp @kind object;
  #L2cfc70.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cfc76.  throw v3;
}
procedure `java.lang.Throwable` `e`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cfac4.  v0:= v1.`kotlinx.coroutines.h2._rootCause` @type ^`java.lang.Object` @kind object;
  #L2cfac8.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L2cfacc.  return v0 @kind object;
}
procedure `boolean` `f`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.f:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf99c.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @kind virtual;
  #L2cf9a2.  v0:= temp @kind object;
  #L2cf9a4.  if v0 == 0 then goto L2cf9ac;
  #L2cf9a8.  v0:= 1I;
  #L2cf9aa.  goto L2cf9ae;
  #L2cf9ac.  v0:= 0I;
  #L2cf9ae.  return v0;
}
procedure `kotlinx.coroutines.n2` `g`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.g:()Lkotlinx/coroutines/n2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfba8.  v0:= v1.`kotlinx.coroutines.h2.b` @type ^`kotlinx.coroutines.n2` @kind object;
  #L2cfbac.  return v0 @kind object;
}
procedure `boolean` `h`(`kotlinx.coroutines.h2` v1 @kind this) @signature `Lkotlinx/coroutines/h2;.h:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cf9c0.  v0:= v1.`kotlinx.coroutines.h2._isCompleting` @type ^`int`;
  #L2cf9c4.  return v0;
}
procedure `boolean` `i`(`kotlinx.coroutines.h2` v2 @kind this) @signature `Lkotlinx/coroutines/h2;.i:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2cf9d8.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/h2;.d:()Ljava/lang/Object;` @kind direct;
  #L2cf9de.  v0:= temp @kind object;
  #L2cf9e0.  call temp:= `e`() @signature `Lkotlinx/coroutines/k2;.e:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cf9e6.  v1:= temp @kind object;
  #L2cf9e8.  if v0 != v1 then goto L2cf9f0;
  #L2cf9ec.  v0:= 1I;
  #L2cf9ee.  goto L2cf9f2;
  #L2cf9f0.  v0:= 0I;
  #L2cf9f2.  return v0;
}
procedure `java.util.List` `j`(`kotlinx.coroutines.h2` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/h2;.j:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2cfb00.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/h2;.d:()Ljava/lang/Object;` @kind direct;
  #L2cfb06.  v0:= temp @kind object;
  #L2cfb08.  if v0 != 0 then goto L2cfb16;
  #L2cfb0c.  call temp:= `c`(v3) @signature `Lkotlinx/coroutines/h2;.c:()Ljava/util/ArrayList;` @kind direct;
  #L2cfb12.  v0:= temp @kind object;
  #L2cfb14.  goto L2cfb3c;
  #L2cfb16.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L2cfb1a.  if v1 == 0 then goto L2cfb30;
  #L2cfb1e.  call temp:= `c`(v3) @signature `Lkotlinx/coroutines/h2;.c:()Ljava/util/ArrayList;` @kind direct;
  #L2cfb24.  v1:= temp @kind object;
  #L2cfb26.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cfb2c.  v0:= v1 @kind object;
  #L2cfb2e.  goto L2cfb3c;
  #L2cfb30.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L2cfb34.  if v1 == 0 then goto L2cfb78;
  #L2cfb38.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L2cfb3c.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @kind virtual;
  #L2cfb42.  v1:= temp @kind object;
  #L2cfb44.  if v1 != 0 then goto L2cfb4a;
  #L2cfb48.  goto L2cfb52;
  #L2cfb4a.  v2:= 0I;
  #L2cfb4c.  call `add`(v0, v2, v1) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L2cfb52.  if v4 == 0 then goto L2cfb68;
  #L2cfb56.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2cfb5c.  v1:= temp;
  #L2cfb5e.  if v1 != 0 then goto L2cfb68;
  #L2cfb62.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cfb68.  call temp:= `e`() @signature `Lkotlinx/coroutines/k2;.e:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2cfb6e.  v4:= temp @kind object;
  #L2cfb70.  call `l`(v3, v4) @signature `Lkotlinx/coroutines/h2;.l:(Ljava/lang/Object;)V` @kind direct;
  #L2cfb76.  return v0 @kind object;
  #L2cfb78.  v4:= new `java.lang.IllegalStateException`;
  #L2cfb7c.  v1:= "State is " @kind object;
  #L2cfb80.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cfb86.  v0:= temp @kind object;
  #L2cfb88.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cfb8e.  v0:= temp @kind object;
  #L2cfb90.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cfb96.  throw v4;
}
procedure `void` `k`(`kotlinx.coroutines.h2` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/h2;.k:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2cfc88.  v0.`kotlinx.coroutines.h2._isCompleting` @type ^`int` := v1;
  #L2cfc8c.  return @kind void;
}
procedure `void` `m`(`kotlinx.coroutines.h2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/h2;.m:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2cfcb8.  v0.`kotlinx.coroutines.h2._rootCause` @type ^`java.lang.Object` := v1 @kind object;
  #L2cfcbc.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.h2` v2 @kind this) @signature `Lkotlinx/coroutines/h2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cfa1c.  v0:= new `java.lang.StringBuilder`;
  #L2cfa20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cfa26.  v1:= "Finishing[cancelling=" @kind object;
  #L2cfa2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa30.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/h2;.f:()Z` @kind virtual;
  #L2cfa36.  v1:= temp;
  #L2cfa38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa3e.  v1:= ", completing=" @kind object;
  #L2cfa42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa48.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/h2;.h:()Z` @kind virtual;
  #L2cfa4e.  v1:= temp;
  #L2cfa50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa56.  v1:= ", rootCause=" @kind object;
  #L2cfa5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa60.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/h2;.e:()Ljava/lang/Throwable;` @kind virtual;
  #L2cfa66.  v1:= temp @kind object;
  #L2cfa68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa6e.  v1:= ", exceptions=" @kind object;
  #L2cfa72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa78.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/h2;.d:()Ljava/lang/Object;` @kind direct;
  #L2cfa7e.  v1:= temp @kind object;
  #L2cfa80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa86.  v1:= ", list=" @kind object;
  #L2cfa8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa90.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/h2;.g:()Lkotlinx/coroutines/n2;` @kind virtual;
  #L2cfa96.  v1:= temp @kind object;
  #L2cfa98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa9e.  v1:= 93I;
  #L2cfaa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfaa8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cfaae.  v0:= temp @kind object;
  #L2cfab0.  return v0 @kind object;
}
