record `kotlinx.coroutines.flow.v` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `java.util.Collection` `kotlinx.coroutines.flow.v.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.v` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lkotlinx/coroutines/flow/v;.<init>:(Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2da76c.  v0.`kotlinx.coroutines.flow.v.b` @type ^`java.util.Collection` := v1 @kind object;
  #L2da770.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2da776.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.v` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/v;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2da74c.  v2:= v0.`kotlinx.coroutines.flow.v.b` @type ^`java.util.Collection` @kind object;
  #L2da750.  call temp:= `add`(v2, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2da756.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2da75a.  return v1 @kind object;
}
