record `kotlinx.coroutines.flow.q` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.d` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.q.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/q;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2da26c.  v0.`kotlinx.coroutines.flow.q.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2da270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2da276.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.q` v1 @kind this, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/q;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2da23c.  v0:= v1.`kotlinx.coroutines.flow.q.b` @type ^`java.lang.Object` @kind object;
  #L2da240.  call temp:= `emit`(v2, v0, v3) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2da246.  v2:= temp @kind object;
  #L2da248.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2da24e.  v3:= temp @kind object;
  #L2da250.  if v2 != v3 then goto L2da256;
  #L2da254.  return v2 @kind object;
  #L2da256.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2da25a.  return v2 @kind object;
}
