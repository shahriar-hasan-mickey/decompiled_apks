record `kotlinx.coroutines.flow.FlowKt__CountKt` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.d` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt;.a:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dab34.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__CountKt$count$1` @kind boolean;
  #L2dab38.  if v0 == 0 then goto L2dab5a;
  #L2dab3c.  v0:= v5 @kind object;
  #L2dab3e.  v0:= (`kotlinx.coroutines.flow.FlowKt__CountKt$count$1`) v0 @kind object;
  #L2dab42.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.label` @type ^`int`;
  #L2dab46.  v2:= -2147483648I;
  #L2dab4a.  v3:= v1 ^& v2 @kind int;
  #L2dab4e.  if v3 == 0 then goto L2dab5a;
  #L2dab52.  v1:= v1 - v2 @kind int;
  #L2dab54.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.label` @type ^`int` := v1;
  #L2dab58.  goto L2dab64;
  #L2dab5a.  v0:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$1`;
  #L2dab5e.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dab64.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.result` @type ^`java.lang.Object` @kind object;
  #L2dab68.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dab6e.  v1:= temp @kind object;
  #L2dab70.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.label` @type ^`int`;
  #L2dab74.  v3:= 1I;
  #L2dab76.  if v2 == 0 then goto L2dab9e;
  #L2dab7a.  if v2 != v3 then goto L2dab8e;
  #L2dab7e.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dab82.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L2dab86.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dab8c.  goto L2dabd0;
  #L2dab8e.  v4:= new `java.lang.IllegalStateException`;
  #L2dab92.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dab96.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dab9c.  throw v4;
  #L2dab9e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2daba4.  v5:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L2daba8.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L2dabae.  v2:= new `kotlinx.coroutines.flow.x`;
  #L2dabb2.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/x;.<init>:(Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L2dabb8.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2dabbc.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$1.label` @type ^`int` := v3;
  #L2dabc0.  call temp:= `a`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dabc6.  v4:= temp @kind object;
  #L2dabc8.  if v4 != v1 then goto L2dabce;
  #L2dabcc.  return v1 @kind object;
  #L2dabce.  v4:= v5 @kind object;
  #L2dabd0.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L2dabd4.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L2dabda.  v4:= temp @kind object;
  #L2dabdc.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.d` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt;.b:(Lkotlinx/coroutines/flow/d;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dabf0.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__CountKt$count$3` @kind boolean;
  #L2dabf4.  if v0 == 0 then goto L2dac16;
  #L2dabf8.  v0:= v6 @kind object;
  #L2dabfa.  v0:= (`kotlinx.coroutines.flow.FlowKt__CountKt$count$3`) v0 @kind object;
  #L2dabfe.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.label` @type ^`int`;
  #L2dac02.  v2:= -2147483648I;
  #L2dac06.  v3:= v1 ^& v2 @kind int;
  #L2dac0a.  if v3 == 0 then goto L2dac16;
  #L2dac0e.  v1:= v1 - v2 @kind int;
  #L2dac10.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.label` @type ^`int` := v1;
  #L2dac14.  goto L2dac20;
  #L2dac16.  v0:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$3`;
  #L2dac1a.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$3;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dac20.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.result` @type ^`java.lang.Object` @kind object;
  #L2dac24.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dac2a.  v1:= temp @kind object;
  #L2dac2c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.label` @type ^`int`;
  #L2dac30.  v3:= 1I;
  #L2dac32.  if v2 == 0 then goto L2dac5a;
  #L2dac36.  if v2 != v3 then goto L2dac4a;
  #L2dac3a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.L$0` @type ^`java.lang.Object` @kind object;
  #L2dac3e.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L2dac42.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dac48.  goto L2dac8c;
  #L2dac4a.  v4:= new `java.lang.IllegalStateException`;
  #L2dac4e.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dac52.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dac58.  throw v4;
  #L2dac5a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dac60.  v6:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L2dac64.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L2dac6a.  v2:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$4`;
  #L2dac6e.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$4;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L2dac74.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.L$0` @type ^`java.lang.Object` := v6 @kind object;
  #L2dac78.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$3.label` @type ^`int` := v3;
  #L2dac7c.  call temp:= `a`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dac82.  v4:= temp @kind object;
  #L2dac84.  if v4 != v1 then goto L2dac8a;
  #L2dac88.  return v1 @kind object;
  #L2dac8a.  v4:= v6 @kind object;
  #L2dac8c.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L2dac90.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L2dac96.  v4:= temp @kind object;
  #L2dac98.  return v4 @kind object;
}
