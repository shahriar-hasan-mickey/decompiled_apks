record `kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `long` `kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.$timeMillis` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` v0 @kind this, `long` v1 , `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.<init>:(JLkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dd714.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.$timeMillis` @type ^`long` := v1 @kind wide;
  #L2dd718.  v1:= 2I;
  #L2dd71a.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dd720.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dd6f4.  v3:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1`;
  #L2dd6f8.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.$timeMillis` @type ^`long` @kind wide;
  #L2dd6fc.  call `<init>`(v3, v0, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.<init>:(JLkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dd702.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dd648.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2dd64c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.invoke:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2dd652.  v1:= temp @kind object;
  #L2dd654.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.invoke:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2dd668.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2dd66e.  v1:= temp @kind object;
  #L2dd670.  v1:= (`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1`) v1 @kind object;
  #L2dd674.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dd678.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dd67e.  v1:= temp @kind object;
  #L2dd680.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$delayEach$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dd694.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dd69a.  v0:= temp @kind object;
  #L2dd69c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.label` @type ^`int`;
  #L2dd6a0.  v2:= 1I;
  #L2dd6a2.  if v1 == 0 then goto L2dd6c2;
  #L2dd6a6.  if v1 != v2 then goto L2dd6b2;
  #L2dd6aa.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dd6b0.  goto L2dd6de;
  #L2dd6b2.  v6:= new `java.lang.IllegalStateException`;
  #L2dd6b6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dd6ba.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dd6c0.  throw v6;
  #L2dd6c2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dd6c8.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.$timeMillis` @type ^`long` @kind wide;
  #L2dd6cc.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1.label` @type ^`int` := v2;
  #L2dd6d0.  call temp:= `b`(v3, v5) @signature `Lkotlinx/coroutines/DelayKt;.b:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2dd6d6.  v6:= temp @kind object;
  #L2dd6d8.  if v6 != v0 then goto L2dd6de;
  #L2dd6dc.  return v0 @kind object;
  #L2dd6de.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dd6e2.  return v6 @kind object;
}
