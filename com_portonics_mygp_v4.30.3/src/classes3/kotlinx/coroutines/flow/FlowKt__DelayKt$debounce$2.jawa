record `kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `long` `kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2.$timeoutMillis` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$debounce$2;.<init>:(J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dace8.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2.$timeoutMillis` @type ^`long` := v1 @kind wide;
  #L2dacec.  v1:= 1I;
  #L2dacee.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2dacf4.  return @kind void;
}
procedure `java.lang.Long` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$debounce$2;.invoke:(Ljava/lang/Object;)Ljava/lang/Long;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dacac.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2.$timeoutMillis` @type ^`long` @kind wide;
  #L2dacb0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2dacb6.  v3:= temp @kind object;
  #L2dacb8.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$debounce$2;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2daccc.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$debounce$2;.invoke:(Ljava/lang/Object;)Ljava/lang/Long;` @kind virtual;
  #L2dacd2.  v1:= temp @kind object;
  #L2dacd4.  return v1 @kind object;
}
