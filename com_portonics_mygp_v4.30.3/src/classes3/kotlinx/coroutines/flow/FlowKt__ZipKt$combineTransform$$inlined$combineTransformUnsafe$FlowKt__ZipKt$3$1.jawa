record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function5` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.$transform$inlined` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function5` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e05f8.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function5` := v2 @kind object;
  #L2e05fc.  v2:= 3I;
  #L2e05fe.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e0604.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e0508.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e050c.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2e0510.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2e0514.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e051a.  v1:= temp @kind object;
  #L2e051c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e0530.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1`;
  #L2e0534.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L2e0538.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L2e053e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e0542.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2e0546.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e054a.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e0550.  v3:= temp @kind object;
  #L2e0552.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e0564.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e056a.  v0:= temp @kind object;
  #L2e056c.  v1:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.label` @type ^`int`;
  #L2e0570.  v2:= 1I;
  #L2e0572.  if v1 == 0 then goto L2e0592;
  #L2e0576.  if v1 != v2 then goto L2e0582;
  #L2e057a.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e0580.  goto L2e05e2;
  #L2e0582.  v10:= new `java.lang.IllegalStateException`;
  #L2e0586.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e058a.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0590.  throw v10;
  #L2e0592.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e0598.  v10:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e059c.  v4:= v10 @kind object;
  #L2e059e.  v4:= (`kotlinx.coroutines.flow.e`) v4 @kind object;
  #L2e05a2.  v10:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2e05a6.  v10:= (`java.lang.Object`[]) v10 @kind object;
  #L2e05aa.  v3:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L2e05ae.  v1:= 0I;
  #L2e05b0.  v5:= v10[v1] @kind object;
  #L2e05b4.  v6:= v10[v2] @kind object;
  #L2e05b8.  v1:= 2I;
  #L2e05ba.  v7:= v10[v1] @kind object;
  #L2e05be.  v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.label` @type ^`int` := v2;
  #L2e05c2.  v10:= 6I;
  #L2e05c4.  call `mark`(v10) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2e05ca.  v8:= v9 @kind object;
  #L2e05cc.  call temp:= `invoke`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e05d2.  v10:= temp @kind object;
  #L2e05d4.  v1:= 7I;
  #L2e05d6.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2e05dc.  if v10 != v0 then goto L2e05e2;
  #L2e05e0.  return v0 @kind object;
  #L2e05e2.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e05e6.  return v10 @kind object;
}
