record `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$fallback` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$predicate` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dd98c.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$predicate` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L2dd990.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$fallback` @type ^`java.lang.Object` := v2 @kind object;
  #L2dd994.  v1:= 3I;
  #L2dd996.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dd99c.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dd898.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dd89c.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L2dd8a0.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2dd8a4.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.invoke:(Lkotlinx/coroutines/flow/e;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2dd8aa.  v1:= temp @kind object;
  #L2dd8ac.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2` v3 @kind this, `kotlinx.coroutines.flow.e` v4 @kind object, `java.lang.Throwable` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.invoke:(Lkotlinx/coroutines/flow/e;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2dd8c0.  v0:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2`;
  #L2dd8c4.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$predicate` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2dd8c8.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$fallback` @type ^`java.lang.Object` @kind object;
  #L2dd8cc.  call `<init>`(v0, v1, v2, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dd8d2.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2dd8d6.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$1` @type ^`java.lang.Object` := v5 @kind object;
  #L2dd8da.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dd8de.  call temp:= `invokeSuspend`(v0, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dd8e4.  v4:= temp @kind object;
  #L2dd8e6.  return v4 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dd8f8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dd8fe.  v0:= temp @kind object;
  #L2dd900.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.label` @type ^`int`;
  #L2dd904.  v2:= 1I;
  #L2dd906.  if v1 == 0 then goto L2dd926;
  #L2dd90a.  if v1 != v2 then goto L2dd916;
  #L2dd90e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dd914.  goto L2dd974;
  #L2dd916.  v5:= new `java.lang.IllegalStateException`;
  #L2dd91a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dd91e.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dd924.  throw v5;
  #L2dd926.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dd92c.  v5:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2dd930.  v5:= (`kotlinx.coroutines.flow.e`) v5 @kind object;
  #L2dd934.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$1` @type ^`java.lang.Object` @kind object;
  #L2dd938.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2dd93c.  v3:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$predicate` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2dd940.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dd946.  v3:= temp @kind object;
  #L2dd948.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L2dd94c.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2dd952.  v3:= temp;
  #L2dd954.  if v3 == 0 then goto L2dd97a;
  #L2dd958.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.$fallback` @type ^`java.lang.Object` @kind object;
  #L2dd95c.  v3:= 0I;
  #L2dd95e.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dd962.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2.label` @type ^`int` := v2;
  #L2dd966.  call temp:= `emit`(v5, v1, v4) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dd96c.  v5:= temp @kind object;
  #L2dd96e.  if v5 != v0 then goto L2dd974;
  #L2dd972.  return v0 @kind object;
  #L2dd974.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dd978.  return v5 @kind object;
  #L2dd97a.  throw v1;
}
