record `kotlinx.coroutines.flow.LintKt$retry$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.LintKt$retry$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.LintKt$retry$1` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e1a78.  v0:= 2I;
  #L2e1a7a.  call `<init>`(v1, v0, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e1a80.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.LintKt$retry$1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e1a5c.  v1:= new `kotlinx.coroutines.flow.LintKt$retry$1`;
  #L2e1a60.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e1a66.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.LintKt$retry$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e19cc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2e19d0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e19d4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.invoke:(Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e19da.  v1:= temp @kind object;
  #L2e19dc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.LintKt$retry$1` v0 @kind this, `java.lang.Throwable` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.invoke:(Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e19f0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e19f6.  v1:= temp @kind object;
  #L2e19f8.  v1:= (`kotlinx.coroutines.flow.LintKt$retry$1`) v1 @kind object;
  #L2e19fc.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e1a00.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e1a06.  v1:= temp @kind object;
  #L2e1a08.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.LintKt$retry$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/LintKt$retry$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e1a1c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e1a22.  v0:= v1.`kotlinx.coroutines.flow.LintKt$retry$1.label` @type ^`int`;
  #L2e1a26.  if v0 != 0 then goto L2e1a3c;
  #L2e1a2a.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e1a30.  v2:= 1I;
  #L2e1a32.  call temp:= `boxBoolean`(v2) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L2e1a38.  v2:= temp @kind object;
  #L2e1a3a.  return v2 @kind object;
  #L2e1a3c.  v2:= new `java.lang.IllegalStateException`;
  #L2e1a40.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e1a44.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e1a4a.  throw v2;
}
