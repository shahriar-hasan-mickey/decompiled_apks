record `kotlinx.coroutines.flow.StartedLazily$command$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.z1` `kotlinx.coroutines.flow.StartedLazily$command$1.$subscriptionCount` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.StartedLazily$command$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.StartedLazily$command$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.StartedLazily$command$1` v0 @kind this, `kotlinx.coroutines.flow.z1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.<init>:(Lkotlinx/coroutines/flow/z1;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e3388.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1.$subscriptionCount` @type ^`kotlinx.coroutines.flow.z1` := v1 @kind object;
  #L2e338c.  v1:= 2I;
  #L2e338e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e3394.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.StartedLazily$command$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e3364.  v0:= new `kotlinx.coroutines.flow.StartedLazily$command$1`;
  #L2e3368.  v1:= v2.`kotlinx.coroutines.flow.StartedLazily$command$1.$subscriptionCount` @type ^`kotlinx.coroutines.flow.z1` @kind object;
  #L2e336c.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.<init>:(Lkotlinx/coroutines/flow/z1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e3372.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e3376.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedLazily$command$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e3290.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e3294.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e3298.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.invoke:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e329e.  v1:= temp @kind object;
  #L2e32a0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedLazily$command$1` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.invoke:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e32b4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e32ba.  v1:= temp @kind object;
  #L2e32bc.  v1:= (`kotlinx.coroutines.flow.StartedLazily$command$1`) v1 @kind object;
  #L2e32c0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e32c4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e32ca.  v1:= temp @kind object;
  #L2e32cc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.StartedLazily$command$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e32e0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e32e6.  v0:= temp @kind object;
  #L2e32e8.  v1:= v5.`kotlinx.coroutines.flow.StartedLazily$command$1.label` @type ^`int`;
  #L2e32ec.  v2:= 1I;
  #L2e32ee.  if v1 == 0 then goto L2e330e;
  #L2e32f2.  if v1 == v2 then goto L2e3306;
  #L2e32f6.  v6:= new `java.lang.IllegalStateException`;
  #L2e32fa.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e32fe.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3304.  throw v6;
  #L2e3306.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e330c.  goto L2e3346;
  #L2e330e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e3314.  v6:= v5.`kotlinx.coroutines.flow.StartedLazily$command$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e3318.  v6:= (`kotlinx.coroutines.flow.e`) v6 @kind object;
  #L2e331c.  v1:= new `kotlin.jvm.internal.Ref$BooleanRef`;
  #L2e3320.  call `<init>`(v1) @signature `Lkotlin/jvm/internal/Ref$BooleanRef;.<init>:()V` @kind direct;
  #L2e3326.  v3:= v5.`kotlinx.coroutines.flow.StartedLazily$command$1.$subscriptionCount` @type ^`kotlinx.coroutines.flow.z1` @kind object;
  #L2e332a.  v4:= new `kotlinx.coroutines.flow.StartedLazily$command$1$1`;
  #L2e332e.  call `<init>`(v4, v1, v6) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1$1;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/e;)V` @kind direct;
  #L2e3334.  v5.`kotlinx.coroutines.flow.StartedLazily$command$1.label` @type ^`int` := v2;
  #L2e3338.  call temp:= `a`(v3, v4, v5) @signature `Lkotlinx/coroutines/flow/r1;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e333e.  v6:= temp @kind object;
  #L2e3340.  if v6 != v0 then goto L2e3346;
  #L2e3344.  return v0 @kind object;
  #L2e3346.  v6:= new `kotlin.KotlinNothingValueException`;
  #L2e334a.  call `<init>`(v6) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2e3350.  throw v6;
}
