record `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.I$0` @AccessFlag SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @AccessFlag ;
  `kotlinx.coroutines.flow.y1` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1` v0 @kind this, `kotlinx.coroutines.flow.y1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.<init>:(Lkotlinx/coroutines/flow/y1;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e35b4.  v1:= 3I;
  #L2e35b6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e35bc.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e3400.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e3404.  v2:= (`java.lang.Number`) v2 @kind object;
  #L2e3408.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2e340e.  v2:= temp;
  #L2e3410.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2e3414.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.invoke:(Lkotlinx/coroutines/flow/e;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e341a.  v1:= temp @kind object;
  #L2e341c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `int` v4 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.invoke:(Lkotlinx/coroutines/flow/e;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e3430.  v0:= new `kotlinx.coroutines.flow.StartedWhileSubscribed$command$1`;
  #L2e3434.  v1:= v2.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0` @type ^`kotlinx.coroutines.flow.y1` @kind object;
  #L2e3438.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.<init>:(Lkotlinx/coroutines/flow/y1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e343e.  v0.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e3442.  v0.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.I$0` @type ^`int` := v4;
  #L2e3446.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e344a.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e3450.  v3:= temp @kind object;
  #L2e3452.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e3464.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e346a.  v0:= temp @kind object;
  #L2e346c.  v1:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int`;
  #L2e3470.  v2:= 5I;
  #L2e3472.  v3:= 4I;
  #L2e3474.  v4:= 3I;
  #L2e3476.  v5:= 2I;
  #L2e3478.  v6:= 1I;
  #L2e347a.  if v1 == 0 then goto L2e34dc;
  #L2e347e.  if v1 == v6 then goto L2e34d4;
  #L2e3482.  if v1 == v5 then goto L2e34c4;
  #L2e3486.  if v1 == v4 then goto L2e34b4;
  #L2e348a.  if v1 == v3 then goto L2e34a4;
  #L2e348e.  if v1 != v2 then goto L2e3494;
  #L2e3492.  goto L2e34d4;
  #L2e3494.  v10:= new `java.lang.IllegalStateException`;
  #L2e3498.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e349c.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e34a2.  throw v10;
  #L2e34a4.  v1:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e34a8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e34ac.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e34b2.  goto L2e3580;
  #L2e34b4.  v1:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e34b8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e34bc.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e34c2.  goto L2e355e;
  #L2e34c4.  v1:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e34c8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e34cc.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e34d2.  goto L2e352c;
  #L2e34d4.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e34da.  goto L2e359c;
  #L2e34dc.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e34e2.  v10:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e34e6.  v1:= v10 @kind object;
  #L2e34e8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e34ec.  v10:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.I$0` @type ^`int`;
  #L2e34f0.  if v10 <= 0 then goto L2e350a;
  #L2e34f4.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e34f8.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int` := v6;
  #L2e34fc.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e3502.  v10:= temp @kind object;
  #L2e3504.  if v10 != v0 then goto L2e359c;
  #L2e3508.  return v0 @kind object;
  #L2e350a.  v10:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0` @type ^`kotlinx.coroutines.flow.y1` @kind object;
  #L2e350e.  call temp:= `c`(v10) @signature `Lkotlinx/coroutines/flow/y1;.c:(Lkotlinx/coroutines/flow/y1;)J` @kind static;
  #L2e3514.  v6:= temp @kind wide;
  #L2e3516.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2e351a.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int` := v5;
  #L2e351e.  call temp:= `b`(v6, v9) @signature `Lkotlinx/coroutines/DelayKt;.b:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e3524.  v10:= temp @kind object;
  #L2e3526.  if v10 != v0 then goto L2e352c;
  #L2e352a.  return v0 @kind object;
  #L2e352c.  v10:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0` @type ^`kotlinx.coroutines.flow.y1` @kind object;
  #L2e3530.  call temp:= `b`(v10) @signature `Lkotlinx/coroutines/flow/y1;.b:(Lkotlinx/coroutines/flow/y1;)J` @kind static;
  #L2e3536.  v5:= temp @kind wide;
  #L2e3538.  v7:= 0L;
  #L2e353c.  v10:= lcmp(v5, v7);
  #L2e3540.  if v10 <= 0 then goto L2e3580;
  #L2e3544.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e3548.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2e354c.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int` := v4;
  #L2e3550.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e3556.  v10:= temp @kind object;
  #L2e3558.  if v10 != v0 then goto L2e355e;
  #L2e355c.  return v0 @kind object;
  #L2e355e.  v10:= v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.this$0` @type ^`kotlinx.coroutines.flow.y1` @kind object;
  #L2e3562.  call temp:= `b`(v10) @signature `Lkotlinx/coroutines/flow/y1;.b:(Lkotlinx/coroutines/flow/y1;)J` @kind static;
  #L2e3568.  v4:= temp @kind wide;
  #L2e356a.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2e356e.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int` := v3;
  #L2e3572.  call temp:= `b`(v4, v9) @signature `Lkotlinx/coroutines/DelayKt;.b:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e3578.  v10:= temp @kind object;
  #L2e357a.  if v10 != v0 then goto L2e3580;
  #L2e357e.  return v0 @kind object;
  #L2e3580.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e3584.  v3:= 0I;
  #L2e3586.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e358a.  v9.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$1.label` @type ^`int` := v2;
  #L2e358e.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e3594.  v10:= temp @kind object;
  #L2e3596.  if v10 != v0 then goto L2e359c;
  #L2e359a.  return v0 @kind object;
  #L2e359c.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e35a0.  return v10 @kind object;
}
