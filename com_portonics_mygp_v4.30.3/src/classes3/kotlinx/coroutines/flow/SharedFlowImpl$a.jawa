record `kotlinx.coroutines.flow.SharedFlowImpl$a` @kind class @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.flow.SharedFlowImpl$a.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharedFlowImpl$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e1b80.  call temp:= `values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @kind static;
  #L2e1b86.  v0:= temp @kind object;
  #L2e1b88.  v0:= length @variable v0;
  #L2e1b8a.  v0:= new `int`[v0];
  #L2e1b8e.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e1b92.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2e1b98.  v1:= temp;
  #L2e1b9a.  v2:= 1I;
  #L2e1b9c.  v0[v1]:= v2;
  #L2e1ba0.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e1ba4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2e1baa.  v1:= temp;
  #L2e1bac.  v2:= 2I;
  #L2e1bae.  v0[v1]:= v2;
  #L2e1bb2.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e1bb6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2e1bbc.  v1:= temp;
  #L2e1bbe.  v2:= 3I;
  #L2e1bc0.  v0[v1]:= v2;
  #L2e1bc4.  `@@kotlinx.coroutines.flow.SharedFlowImpl$a.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L2e1bc8.  return @kind void;
}
