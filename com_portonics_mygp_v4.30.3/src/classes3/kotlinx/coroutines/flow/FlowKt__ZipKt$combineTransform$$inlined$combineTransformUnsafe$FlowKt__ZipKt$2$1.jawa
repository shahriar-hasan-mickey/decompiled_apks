record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function4` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.$transform$inlined` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e03cc.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` := v2 @kind object;
  #L2e03d0.  v2:= 3I;
  #L2e03d2.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e03d8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e02e4.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2e02e8.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2e02ec.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2e02f0.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e02f6.  v1:= temp @kind object;
  #L2e02f8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e030c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1`;
  #L2e0310.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L2e0314.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L2e031a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e031e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2e0322.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e0326.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e032c.  v3:= temp @kind object;
  #L2e032e.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e0340.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e0346.  v0:= temp @kind object;
  #L2e0348.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.label` @type ^`int`;
  #L2e034c.  v2:= 1I;
  #L2e034e.  if v1 == 0 then goto L2e036e;
  #L2e0352.  if v1 != v2 then goto L2e035e;
  #L2e0356.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e035c.  goto L2e03b4;
  #L2e035e.  v6:= new `java.lang.IllegalStateException`;
  #L2e0362.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e0366.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e036c.  throw v6;
  #L2e036e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e0374.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e0378.  v6:= (`kotlinx.coroutines.flow.e`) v6 @kind object;
  #L2e037c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2e0380.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L2e0384.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L2e0388.  v4:= 0I;
  #L2e038a.  v4:= v1[v4] @kind object;
  #L2e038e.  v1:= v1[v2] @kind object;
  #L2e0392.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1.label` @type ^`int` := v2;
  #L2e0396.  v2:= 6I;
  #L2e0398.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2e039e.  call temp:= `invoke`(v3, v6, v4, v1, v5) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e03a4.  v6:= temp @kind object;
  #L2e03a6.  v1:= 7I;
  #L2e03a8.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2e03ae.  if v6 != v0 then goto L2e03b4;
  #L2e03b2.  return v0 @kind object;
  #L2e03b4.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e03b8.  return v6 @kind object;
}
