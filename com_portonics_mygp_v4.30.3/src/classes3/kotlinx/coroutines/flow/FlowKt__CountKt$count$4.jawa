record `kotlinx.coroutines.flow.FlowKt__CountKt$count$4` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__CountKt$count$4.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$IntRef` `kotlinx.coroutines.flow.FlowKt__CountKt$count$4.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__CountKt$count$4` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.jvm.internal.Ref$IntRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$4;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$IntRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dab14.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4.b` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L2dab18.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4.c` @type ^`kotlin.jvm.internal.Ref$IntRef` := v2 @kind object;
  #L2dab1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dab22.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__CountKt$count$4` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$4;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2daa54.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1` @kind boolean;
  #L2daa58.  if v0 == 0 then goto L2daa7a;
  #L2daa5c.  v0:= v6 @kind object;
  #L2daa5e.  v0:= (`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1`) v0 @kind object;
  #L2daa62.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.label` @type ^`int`;
  #L2daa66.  v2:= -2147483648I;
  #L2daa6a.  v3:= v1 ^& v2 @kind int;
  #L2daa6e.  if v3 == 0 then goto L2daa7a;
  #L2daa72.  v1:= v1 - v2 @kind int;
  #L2daa74.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.label` @type ^`int` := v1;
  #L2daa78.  goto L2daa84;
  #L2daa7a.  v0:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1`;
  #L2daa7e.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$4$emit$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__CountKt$count$4;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2daa84.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.result` @type ^`java.lang.Object` @kind object;
  #L2daa88.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2daa8e.  v1:= temp @kind object;
  #L2daa90.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.label` @type ^`int`;
  #L2daa94.  v3:= 1I;
  #L2daa96.  if v2 == 0 then goto L2daabe;
  #L2daa9a.  if v2 != v3 then goto L2daaae;
  #L2daa9e.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2daaa2.  v5:= (`kotlinx.coroutines.flow.FlowKt__CountKt$count$4`) v5 @kind object;
  #L2daaa6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2daaac.  goto L2daae0;
  #L2daaae.  v5:= new `java.lang.IllegalStateException`;
  #L2daab2.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2daab6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2daabc.  throw v5;
  #L2daabe.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2daac4.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2daac8.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2daacc.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1.label` @type ^`int` := v3;
  #L2daad0.  call temp:= `invoke`(v6, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2daad6.  v6:= temp @kind object;
  #L2daad8.  if v6 != v1 then goto L2daade;
  #L2daadc.  return v1 @kind object;
  #L2daade.  v5:= v4 @kind object;
  #L2daae0.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L2daae4.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2daaea.  v6:= temp;
  #L2daaec.  if v6 == 0 then goto L2daafe;
  #L2daaf0.  v5:= v5.`kotlinx.coroutines.flow.FlowKt__CountKt$count$4.c` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L2daaf4.  v6:= v5.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L2daaf8.  v6:= v6 + v3 @kind int;
  #L2daafa.  v5.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v6;
  #L2daafe.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dab02.  return v5 @kind object;
}
