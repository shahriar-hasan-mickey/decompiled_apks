record `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.$transform` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ddaac.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.$transform` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L2ddab0.  v1:= 3I;
  #L2ddab2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2ddab8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dd9b0.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dd9b4.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2dd9b8.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.invoke:(Lkotlinx/coroutines/flow/e;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2dd9be.  v1:= temp @kind object;
  #L2dd9c0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.invoke:(Lkotlinx/coroutines/flow/e;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dd9d4.  v0:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1`;
  #L2dd9d8.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dd9dc.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dd9e2.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dd9e6.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2dd9ea.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dd9ee.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dd9f4.  v3:= temp @kind object;
  #L2dd9f6.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dda08.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dda0e.  v0:= temp @kind object;
  #L2dda10.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.label` @type ^`int`;
  #L2dda14.  v2:= 2I;
  #L2dda16.  v3:= 1I;
  #L2dda18.  if v1 == 0 then goto L2dda4c;
  #L2dda1c.  if v1 == v3 then goto L2dda3c;
  #L2dda20.  if v1 != v2 then goto L2dda2c;
  #L2dda24.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dda2a.  goto L2dda96;
  #L2dda2c.  v6:= new `java.lang.IllegalStateException`;
  #L2dda30.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dda34.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dda3a.  throw v6;
  #L2dda3c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dda40.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dda44.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dda4a.  goto L2dda7a;
  #L2dda4c.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dda52.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dda56.  v1:= v6 @kind object;
  #L2dda58.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dda5c.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2dda60.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dda64.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2dda68.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.label` @type ^`int` := v3;
  #L2dda6c.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dda72.  v6:= temp @kind object;
  #L2dda74.  if v6 != v0 then goto L2dda7a;
  #L2dda78.  return v0 @kind object;
  #L2dda7a.  v6:= (`kotlinx.coroutines.flow.d`) v6 @kind object;
  #L2dda7e.  v3:= 0I;
  #L2dda80.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dda84.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1.label` @type ^`int` := v2;
  #L2dda88.  call temp:= `k`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/f;.k:(Lkotlinx/coroutines/flow/e;Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2dda8e.  v6:= temp @kind object;
  #L2dda90.  if v6 != v0 then goto L2dda96;
  #L2dda94.  return v0 @kind object;
  #L2dda96.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dda9a.  return v6 @kind object;
}
