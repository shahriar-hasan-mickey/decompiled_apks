record `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.d` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.$this_sample` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` v0 @kind this, `kotlinx.coroutines.flow.d` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dbac8.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.$this_sample` @type ^`kotlinx.coroutines.flow.d` := v1 @kind object;
  #L2dbacc.  v1:= 2I;
  #L2dbace.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dbad4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dbaa4.  v0:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1`;
  #L2dbaa8.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.$this_sample` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2dbaac.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dbab2.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dbab6.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2db9e0.  v1:= (`kotlinx.coroutines.channels.c0`) v1 @kind object;
  #L2db9e4.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2db9e8.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.invoke:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2db9ee.  v1:= temp @kind object;
  #L2db9f0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` v0 @kind this, `kotlinx.coroutines.channels.c0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.invoke:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2dba04.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2dba0a.  v1:= temp @kind object;
  #L2dba0c.  v1:= (`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1`) v1 @kind object;
  #L2dba10.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dba14.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dba1a.  v1:= temp @kind object;
  #L2dba1c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dba30.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dba36.  v0:= temp @kind object;
  #L2dba38.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.label` @type ^`int`;
  #L2dba3c.  v2:= 1I;
  #L2dba3e.  if v1 == 0 then goto L2dba5e;
  #L2dba42.  if v1 != v2 then goto L2dba4e;
  #L2dba46.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dba4c.  goto L2dba8c;
  #L2dba4e.  v5:= new `java.lang.IllegalStateException`;
  #L2dba52.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dba56.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dba5c.  throw v5;
  #L2dba5e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dba64.  v5:= v4.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dba68.  v5:= (`kotlinx.coroutines.channels.c0`) v5 @kind object;
  #L2dba6c.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.$this_sample` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2dba70.  v3:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1`;
  #L2dba74.  call `<init>`(v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$values$1$1;.<init>:(Lkotlinx/coroutines/channels/c0;)V` @kind direct;
  #L2dba7a.  v4.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1.label` @type ^`int` := v2;
  #L2dba7e.  call temp:= `a`(v1, v3, v4) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dba84.  v5:= temp @kind object;
  #L2dba86.  if v5 != v0 then goto L2dba8c;
  #L2dba8a.  return v0 @kind object;
  #L2dba8c.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dba90.  return v5 @kind object;
}
