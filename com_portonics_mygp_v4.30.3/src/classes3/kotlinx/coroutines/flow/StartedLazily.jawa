record `kotlinx.coroutines.flow.StartedLazily` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.w1` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.StartedLazily` v0 @kind this) @signature `Lkotlinx/coroutines/flow/StartedLazily;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e33e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e33ee.  return @kind void;
}
procedure `kotlinx.coroutines.flow.d` `a`(`kotlinx.coroutines.flow.StartedLazily` v2 @kind this, `kotlinx.coroutines.flow.z1` v3 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily;.a:(Lkotlinx/coroutines/flow/z1;)Lkotlinx/coroutines/flow/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e33c0.  v0:= new `kotlinx.coroutines.flow.StartedLazily$command$1`;
  #L2e33c4.  v1:= 0I;
  #L2e33c6.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1;.<init>:(Lkotlinx/coroutines/flow/z1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e33cc.  call temp:= `s`(v0) @signature `Lkotlinx/coroutines/flow/f;.s:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/d;` @kind static;
  #L2e33d2.  v3:= temp @kind object;
  #L2e33d4.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.StartedLazily` v1 @kind this) @signature `Lkotlinx/coroutines/flow/StartedLazily;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e33a8.  v0:= "SharingStarted.Lazily" @kind object;
  #L2e33ac.  return v0 @kind object;
}
