record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function4` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.$transform$inlined` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2df8c8.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` := v2 @kind object;
  #L2df8cc.  v2:= 3I;
  #L2df8ce.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2df8d4.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2df7a8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2df7ac.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2df7b0.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2df7b4.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2df7ba.  v1:= temp @kind object;
  #L2df7bc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2df7d0.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2`;
  #L2df7d4.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L2df7d8.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L2df7de.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2df7e2.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2df7e6.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2df7ea.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2df7f0.  v3:= temp @kind object;
  #L2df7f2.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2df804.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2df80a.  v0:= temp @kind object;
  #L2df80c.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.label` @type ^`int`;
  #L2df810.  v2:= 2I;
  #L2df812.  v3:= 1I;
  #L2df814.  if v1 == 0 then goto L2df848;
  #L2df818.  if v1 == v3 then goto L2df838;
  #L2df81c.  if v1 != v2 then goto L2df828;
  #L2df820.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df826.  goto L2df8b0;
  #L2df828.  v8:= new `java.lang.IllegalStateException`;
  #L2df82c.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2df830.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df836.  throw v8;
  #L2df838.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2df83c.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2df840.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df846.  goto L2df898;
  #L2df848.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df84e.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2df852.  v1:= v8 @kind object;
  #L2df854.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2df858.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$1` @type ^`java.lang.Object` @kind object;
  #L2df85c.  v8:= (`java.lang.Object`[]) v8 @kind object;
  #L2df860.  v4:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.$transform$inlined` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L2df864.  v5:= 0I;
  #L2df866.  v5:= v8[v5] @kind object;
  #L2df86a.  v6:= v8[v3] @kind object;
  #L2df86e.  v8:= v8[v2] @kind object;
  #L2df872.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2df876.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.label` @type ^`int` := v3;
  #L2df87a.  v3:= 6I;
  #L2df87c.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2df882.  call temp:= `invoke`(v4, v5, v6, v8, v7) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2df888.  v8:= temp @kind object;
  #L2df88a.  v3:= 7I;
  #L2df88c.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2df892.  if v8 != v0 then goto L2df898;
  #L2df896.  return v0 @kind object;
  #L2df898.  v3:= 0I;
  #L2df89a.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2df89e.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.label` @type ^`int` := v2;
  #L2df8a2.  call temp:= `emit`(v1, v8, v7) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2df8a8.  v8:= temp @kind object;
  #L2df8aa.  if v8 != v0 then goto L2df8b0;
  #L2df8ae.  return v0 @kind object;
  #L2df8b0.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2df8b4.  return v8 @kind object;
}
