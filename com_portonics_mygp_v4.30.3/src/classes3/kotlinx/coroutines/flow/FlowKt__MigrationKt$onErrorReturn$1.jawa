record `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` `@@kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2dd85c.  v0:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1`;
  #L2dd860.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.<init>:()V` @kind direct;
  #L2dd866.  `@@kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1.INSTANCE` @type ^`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` := v0 @kind object;
  #L2dd86a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` v1 @kind this) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2dd87c.  v0:= 1I;
  #L2dd87e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2dd884.  return @kind void;
}
procedure `java.lang.Boolean` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2dd824.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2dd828.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dd83c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2dd840.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$onErrorReturn$1;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Boolean;` @kind virtual;
  #L2dd846.  v1:= temp @kind object;
  #L2dd848.  return v1 @kind object;
}
