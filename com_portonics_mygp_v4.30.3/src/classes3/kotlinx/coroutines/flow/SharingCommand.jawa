record `kotlinx.coroutines.flow.SharingCommand` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.flow.SharingCommand`[] `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.START` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.flow.SharingCommand`[] `$values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.$values:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2e2f84.  v0:= 3I;
  #L2e2f86.  v0:= new `kotlinx.coroutines.flow.SharingCommand`[v0];
  #L2e2f8a.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e2f8e.  v2:= 0I;
  #L2e2f90.  v0[v2]:= v1 @kind object;
  #L2e2f94.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e2f98.  v2:= 1I;
  #L2e2f9a.  v0[v2]:= v1 @kind object;
  #L2e2f9e.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e2fa2.  v2:= 2I;
  #L2e2fa4.  v0[v2]:= v1 @kind object;
  #L2e2fa8.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e2fe0.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L2e2fe4.  v1:= "START" @kind object;
  #L2e2fe8.  v2:= 0I;
  #L2e2fea.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2e2ff0.  `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L2e2ff4.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L2e2ff8.  v1:= "STOP" @kind object;
  #L2e2ffc.  v2:= 1I;
  #L2e2ffe.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2e3004.  `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L2e3008.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L2e300c.  v1:= "STOP_AND_RESET_REPLAY_CACHE" @kind object;
  #L2e3010.  v2:= 2I;
  #L2e3012.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2e3018.  `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L2e301c.  call temp:= `$values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.$values:()[Lkotlinx/coroutines/flow/SharingCommand;` @kind static;
  #L2e3022.  v0:= temp @kind object;
  #L2e3024.  `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @type ^`kotlinx.coroutines.flow.SharingCommand`[] := v0 @kind object;
  #L2e3028.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SharingCommand` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e303c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2e3042.  return @kind void;
}
procedure `kotlinx.coroutines.flow.SharingCommand` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/flow/SharingCommand;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e2f60.  v0:= constclass @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e2f64.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2e2f6a.  v1:= temp @kind object;
  #L2e2f6c.  v1:= (`kotlinx.coroutines.flow.SharingCommand`) v1 @kind object;
  #L2e2f70.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingCommand`[] `values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.values:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e2fbc.  v0:= `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @type ^`kotlinx.coroutines.flow.SharingCommand`[] @kind object;
  #L2e2fc0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2e2fc6.  v0:= temp @kind object;
  #L2e2fc8.  v0:= (`kotlinx.coroutines.flow.SharingCommand`[]) v0 @kind object;
  #L2e2fcc.  return v0 @kind object;
}
