record `kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$2.L$0` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.StartedWhileSubscribed$command$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2e3694.  v0:= 2I;
  #L2e3696.  call `<init>`(v1, v0, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e369c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3674.  v0:= new `kotlinx.coroutines.flow.StartedWhileSubscribed$command$2`;
  #L2e3678.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e367e.  v0.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2.L$0` @type ^`java.lang.Object` := v2 @kind object;
  #L2e3682.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e35d0.  v1:= (`kotlinx.coroutines.flow.SharingCommand`) v1 @kind object;
  #L2e35d4.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e35d8.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.invoke:(Lkotlinx/coroutines/flow/SharingCommand;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e35de.  v1:= temp @kind object;
  #L2e35e0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` v0 @kind this, `kotlinx.coroutines.flow.SharingCommand` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.invoke:(Lkotlinx/coroutines/flow/SharingCommand;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e35f4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e35fa.  v1:= temp @kind object;
  #L2e35fc.  v1:= (`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2`) v1 @kind object;
  #L2e3600.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e3604.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e360a.  v1:= temp @kind object;
  #L2e360c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedWhileSubscribed$command$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3620.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e3626.  v0:= v1.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2.label` @type ^`int`;
  #L2e362a.  if v0 != 0 then goto L2e3654;
  #L2e362e.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e3634.  v2:= v1.`kotlinx.coroutines.flow.StartedWhileSubscribed$command$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2e3638.  v2:= (`kotlinx.coroutines.flow.SharingCommand`) v2 @kind object;
  #L2e363c.  v0:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L2e3640.  if v2 == v0 then goto L2e3648;
  #L2e3644.  v2:= 1I;
  #L2e3646.  goto L2e364a;
  #L2e3648.  v2:= 0I;
  #L2e364a.  call temp:= `boxBoolean`(v2) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L2e3650.  v2:= temp @kind object;
  #L2e3652.  return v2 @kind object;
  #L2e3654.  v2:= new `java.lang.IllegalStateException`;
  #L2e3658.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e365c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3662.  throw v2;
}
