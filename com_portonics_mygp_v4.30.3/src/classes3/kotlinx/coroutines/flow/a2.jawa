record `kotlinx.coroutines.flow.a2` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.flow.a2.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.flow.a2.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/a2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2e3bfc.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2e3c00.  v1:= "NONE" @kind object;
  #L2e3c04.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3c0a.  `@@kotlinx.coroutines.flow.a2.a` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2e3c0e.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2e3c12.  v1:= "PENDING" @kind object;
  #L2e3c16.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3c1c.  `@@kotlinx.coroutines.flow.a2.b` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2e3c20.  return @kind void;
}
procedure `kotlinx.coroutines.flow.o1` `a`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/a2;.a:(Ljava/lang/Object;)Lkotlinx/coroutines/flow/o1;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2e3ba8.  v0:= new `kotlinx.coroutines.flow.StateFlowImpl`;
  #L2e3bac.  if v1 != 0 then goto L2e3bb4;
  #L2e3bb0.  v1:= `@@kotlinx.coroutines.flow.internal.o.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e3bb4.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/StateFlowImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2e3bba.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.k0` `b`() @signature `Lkotlinx/coroutines/flow/a2;.b:()Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3bcc.  v0:= `@@kotlinx.coroutines.flow.a2.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e3bd0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.k0` `c`() @signature `Lkotlinx/coroutines/flow/a2;.c:()Lkotlinx/coroutines/internal/k0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2e3be4.  v0:= `@@kotlinx.coroutines.flow.a2.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e3be8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.d` `d`(`kotlinx.coroutines.flow.z1` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object, `int` v5 , `kotlinx.coroutines.channels.BufferOverflow` v6 @kind object) @signature `Lkotlinx/coroutines/flow/a2;.d:(Lkotlinx/coroutines/flow/z1;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e3b3c.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e3b42.  v0:= temp;
  #L2e3b44.  v1:= 1I;
  #L2e3b46.  v2:= 0I;
  #L2e3b48.  if v0 == 0 then goto L2e3b6a;
  #L2e3b4c.  v0:= -1I;
  #L2e3b4e.  if v5 == v0 then goto L2e3b56;
  #L2e3b52.  v0:= 1I;
  #L2e3b54.  goto L2e3b58;
  #L2e3b56.  v0:= 0I;
  #L2e3b58.  if v0 == 0 then goto L2e3b5e;
  #L2e3b5c.  goto L2e3b6a;
  #L2e3b5e.  v3:= new `java.lang.AssertionError`;
  #L2e3b62.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e3b68.  throw v3;
  #L2e3b6a.  if v5 < 0 then goto L2e3b76;
  #L2e3b6e.  v0:= 2I;
  #L2e3b70.  if v5 >= v0 then goto L2e3b76;
  #L2e3b74.  goto L2e3b78;
  #L2e3b76.  v1:= 0I;
  #L2e3b78.  if v1 != 0 then goto L2e3b82;
  #L2e3b7c.  v0:= -2I;
  #L2e3b7e.  if v5 != v0 then goto L2e3b8c;
  #L2e3b82.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e3b86.  if v6 != v0 then goto L2e3b8c;
  #L2e3b8a.  return v3 @kind object;
  #L2e3b8c.  call temp:= `c`(v3, v4, v5, v6) @signature `Lkotlinx/coroutines/flow/t1;.c:(Lkotlinx/coroutines/flow/r1;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @kind static;
  #L2e3b92.  v3:= temp @kind object;
  #L2e3b94.  return v3 @kind object;
}
