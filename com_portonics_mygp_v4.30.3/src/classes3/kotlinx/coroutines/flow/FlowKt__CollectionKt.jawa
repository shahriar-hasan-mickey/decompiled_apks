record `kotlinx.coroutines.flow.FlowKt__CollectionKt` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.d` v4 @kind object, `java.util.Collection` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectionKt;.a:(Lkotlinx/coroutines/flow/d;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2da788.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1` @kind boolean;
  #L2da78c.  if v0 == 0 then goto L2da7ae;
  #L2da790.  v0:= v6 @kind object;
  #L2da792.  v0:= (`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1`) v0 @kind object;
  #L2da796.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label` @type ^`int`;
  #L2da79a.  v2:= -2147483648I;
  #L2da79e.  v3:= v1 ^& v2 @kind int;
  #L2da7a2.  if v3 == 0 then goto L2da7ae;
  #L2da7a6.  v1:= v1 - v2 @kind int;
  #L2da7a8.  v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label` @type ^`int` := v1;
  #L2da7ac.  goto L2da7b8;
  #L2da7ae.  v0:= new `kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1`;
  #L2da7b2.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectionKt$toCollection$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2da7b8.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.result` @type ^`java.lang.Object` @kind object;
  #L2da7bc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2da7c2.  v1:= temp @kind object;
  #L2da7c4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label` @type ^`int`;
  #L2da7c8.  v3:= 1I;
  #L2da7ca.  if v2 == 0 then goto L2da7f4;
  #L2da7ce.  if v2 != v3 then goto L2da7e4;
  #L2da7d2.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2da7d6.  v5:= v4 @kind object;
  #L2da7d8.  v5:= (`java.util.Collection`) v5 @kind object;
  #L2da7dc.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2da7e2.  goto L2da81a;
  #L2da7e4.  v4:= new `java.lang.IllegalStateException`;
  #L2da7e8.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2da7ec.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2da7f2.  throw v4;
  #L2da7f4.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2da7fa.  v6:= new `kotlinx.coroutines.flow.v`;
  #L2da7fe.  call `<init>`(v6, v5) @signature `Lkotlinx/coroutines/flow/v;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2da804.  v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2da808.  v0.`kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1.label` @type ^`int` := v3;
  #L2da80c.  call temp:= `a`(v4, v6, v0) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2da812.  v4:= temp @kind object;
  #L2da814.  if v4 != v1 then goto L2da81a;
  #L2da818.  return v1 @kind object;
  #L2da81a.  return v5 @kind object;
}
