record `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$initialValue` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.n1` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.w1` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.d` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` v0 @kind this, `kotlinx.coroutines.flow.w1` v1 @kind object, `kotlinx.coroutines.flow.d` v2 @kind object, `kotlinx.coroutines.flow.n1` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.<init>:(Lkotlinx/coroutines/flow/w1;Lkotlinx/coroutines/flow/d;Lkotlinx/coroutines/flow/n1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2df1a8.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @type ^`kotlinx.coroutines.flow.w1` := v1 @kind object;
  #L2df1ac.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @type ^`kotlinx.coroutines.flow.d` := v2 @kind object;
  #L2df1b0.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` := v3 @kind object;
  #L2df1b4.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$initialValue` @type ^`java.lang.Object` := v4 @kind object;
  #L2df1b8.  v1:= 2I;
  #L2df1ba.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2df1c0.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2df178.  v7:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1`;
  #L2df17c.  v1:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @type ^`kotlinx.coroutines.flow.w1` @kind object;
  #L2df180.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2df184.  v3:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df188.  v4:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$initialValue` @type ^`java.lang.Object` @kind object;
  #L2df18c.  v0:= v7 @kind object;
  #L2df18e.  v5:= v8 @kind object;
  #L2df190.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.<init>:(Lkotlinx/coroutines/flow/w1;Lkotlinx/coroutines/flow/d;Lkotlinx/coroutines/flow/n1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2df196.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2deff8.  v1:= (`kotlinx.coroutines.m0`) v1 @kind object;
  #L2deffc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2df000.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2df006.  v1:= temp @kind object;
  #L2df008.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` v0 @kind this, `kotlinx.coroutines.m0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2df01c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2df022.  v1:= temp @kind object;
  #L2df024.  v1:= (`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1`) v1 @kind object;
  #L2df028.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2df02c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2df032.  v1:= temp @kind object;
  #L2df034.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2df048.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2df04e.  v0:= temp @kind object;
  #L2df050.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @type ^`int`;
  #L2df054.  v2:= 4I;
  #L2df056.  v3:= 3I;
  #L2df058.  v4:= 2I;
  #L2df05a.  v5:= 1I;
  #L2df05c.  if v1 == 0 then goto L2df092;
  #L2df060.  if v1 == v5 then goto L2df08a;
  #L2df064.  if v1 == v4 then goto L2df082;
  #L2df068.  if v1 == v3 then goto L2df08a;
  #L2df06c.  if v1 != v2 then goto L2df072;
  #L2df070.  goto L2df08a;
  #L2df072.  v8:= new `java.lang.IllegalStateException`;
  #L2df076.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2df07a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df080.  throw v8;
  #L2df082.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df088.  goto L2df100;
  #L2df08a.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df090.  goto L2df162;
  #L2df092.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2df098.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @type ^`kotlinx.coroutines.flow.w1` @kind object;
  #L2df09c.  v1:= `@@kotlinx.coroutines.flow.w1.a` @type ^`kotlinx.coroutines.flow.v1` @kind object;
  #L2df0a0.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/flow/v1;.a:()Lkotlinx/coroutines/flow/w1;` @kind virtual;
  #L2df0a6.  v6:= temp @kind object;
  #L2df0a8.  if v8 != v6 then goto L2df0c6;
  #L2df0ac.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2df0b0.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df0b4.  v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @type ^`int` := v5;
  #L2df0b8.  call temp:= `a`(v8, v1, v7) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2df0be.  v8:= temp @kind object;
  #L2df0c0.  if v8 != v0 then goto L2df162;
  #L2df0c4.  return v0 @kind object;
  #L2df0c6.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @type ^`kotlinx.coroutines.flow.w1` @kind object;
  #L2df0ca.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/flow/v1;.b:()Lkotlinx/coroutines/flow/w1;` @kind virtual;
  #L2df0d0.  v1:= temp @kind object;
  #L2df0d2.  v5:= 0I;
  #L2df0d4.  if v8 != v1 then goto L2df11a;
  #L2df0d8.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df0dc.  call temp:= `e`(v8) @signature `Lkotlinx/coroutines/flow/n1;.e:()Lkotlinx/coroutines/flow/z1;` @kind interface;
  #L2df0e2.  v8:= temp @kind object;
  #L2df0e4.  v1:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1`;
  #L2df0e8.  call `<init>`(v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2df0ee.  v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @type ^`int` := v4;
  #L2df0f2.  call temp:= `n`(v8, v1, v7) @signature `Lkotlinx/coroutines/flow/f;.n:(Lkotlinx/coroutines/flow/d;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2df0f8.  v8:= temp @kind object;
  #L2df0fa.  if v8 != v0 then goto L2df100;
  #L2df0fe.  return v0 @kind object;
  #L2df100.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2df104.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df108.  v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @type ^`int` := v3;
  #L2df10c.  call temp:= `a`(v8, v1, v7) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2df112.  v8:= temp @kind object;
  #L2df114.  if v8 != v0 then goto L2df162;
  #L2df118.  return v0 @kind object;
  #L2df11a.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$started` @type ^`kotlinx.coroutines.flow.w1` @kind object;
  #L2df11e.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df122.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/flow/n1;.e:()Lkotlinx/coroutines/flow/z1;` @kind interface;
  #L2df128.  v1:= temp @kind object;
  #L2df12a.  call temp:= `a`(v8, v1) @signature `Lkotlinx/coroutines/flow/w1;.a:(Lkotlinx/coroutines/flow/z1;)Lkotlinx/coroutines/flow/d;` @kind interface;
  #L2df130.  v8:= temp @kind object;
  #L2df132.  call temp:= `i`(v8) @signature `Lkotlinx/coroutines/flow/f;.i:(Lkotlinx/coroutines/flow/d;)Lkotlinx/coroutines/flow/d;` @kind static;
  #L2df138.  v8:= temp @kind object;
  #L2df13a.  v1:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2`;
  #L2df13e.  v3:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$upstream` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2df142.  v4:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$shared` @type ^`kotlinx.coroutines.flow.n1` @kind object;
  #L2df146.  v6:= v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.$initialValue` @type ^`java.lang.Object` @kind object;
  #L2df14a.  call `<init>`(v1, v3, v4, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$2;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlinx/coroutines/flow/n1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2df150.  v7.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1.label` @type ^`int` := v2;
  #L2df154.  call temp:= `f`(v8, v1, v7) @signature `Lkotlinx/coroutines/flow/f;.f:(Lkotlinx/coroutines/flow/d;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2df15a.  v8:= temp @kind object;
  #L2df15c.  if v8 != v0 then goto L2df162;
  #L2df160.  return v0 @kind object;
  #L2df162.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2df166.  return v8 @kind object;
}
