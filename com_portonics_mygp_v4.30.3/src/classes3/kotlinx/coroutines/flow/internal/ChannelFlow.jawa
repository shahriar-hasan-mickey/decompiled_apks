record `kotlinx.coroutines.flow.internal.ChannelFlow` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.flow.internal.l` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.ChannelFlow.b` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.flow.internal.ChannelFlow.c` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.channels.BufferOverflow` `kotlinx.coroutines.flow.internal.ChannelFlow.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlow` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `int` v2 , `kotlinx.coroutines.channels.BufferOverflow` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.<init>:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e5184.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e518a.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L2e518e.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int` := v2;
  #L2e5192.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v3 @kind object;
  #L2e5196.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e519c.  v1:= temp;
  #L2e519e.  if v1 == 0 then goto L2e51c0;
  #L2e51a2.  v1:= -1I;
  #L2e51a4.  if v2 == v1 then goto L2e51ac;
  #L2e51a8.  v1:= 1I;
  #L2e51aa.  goto L2e51ae;
  #L2e51ac.  v1:= 0I;
  #L2e51ae.  if v1 == 0 then goto L2e51b4;
  #L2e51b2.  goto L2e51c0;
  #L2e51b4.  v1:= new `java.lang.AssertionError`;
  #L2e51b8.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e51be.  throw v1;
  #L2e51c0.  return @kind void;
}
procedure `java.lang.Object` `g`(`kotlinx.coroutines.flow.internal.ChannelFlow` v2 @kind object, `kotlinx.coroutines.flow.e` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.g:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2e4ec8.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2`;
  #L2e4ecc.  v1:= 0I;
  #L2e4ece.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4ed4.  call temp:= `b`(v0, v4) @signature `Lkotlinx/coroutines/n0;.b:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e4eda.  v2:= temp @kind object;
  #L2e4edc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4ee2.  v3:= temp @kind object;
  #L2e4ee4.  if v2 != v3 then goto L2e4eea;
  #L2e4ee8.  return v2 @kind object;
  #L2e4eea.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e4eee.  return v2 @kind object;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.ChannelFlow` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2e4f00.  call temp:= `g`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.g:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e4f06.  v1:= temp @kind object;
  #L2e4f08.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.d` `b`(`kotlinx.coroutines.flow.internal.ChannelFlow` v3 @kind this, `kotlin.coroutines.CoroutineContext` v4 @kind object, `int` v5 , `kotlinx.coroutines.channels.BufferOverflow` v6 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.b:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e5078.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e507e.  v0:= temp;
  #L2e5080.  v1:= 1I;
  #L2e5082.  v2:= 0I;
  #L2e5084.  if v0 == 0 then goto L2e50a6;
  #L2e5088.  v0:= -1I;
  #L2e508a.  if v5 == v0 then goto L2e5092;
  #L2e508e.  v0:= 1I;
  #L2e5090.  goto L2e5094;
  #L2e5092.  v0:= 0I;
  #L2e5094.  if v0 == 0 then goto L2e509a;
  #L2e5098.  goto L2e50a6;
  #L2e509a.  v4:= new `java.lang.AssertionError`;
  #L2e509e.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e50a4.  throw v4;
  #L2e50a6.  v0:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e50aa.  call temp:= `plus`(v4, v0) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e50b0.  v4:= temp @kind object;
  #L2e50b2.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e50b6.  if v6 == v0 then goto L2e50bc;
  #L2e50ba.  goto L2e5146;
  #L2e50bc.  v6:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e50c0.  v0:= -3I;
  #L2e50c2.  if v6 != v0 then goto L2e50c8;
  #L2e50c6.  goto L2e5142;
  #L2e50c8.  if v5 != v0 then goto L2e50d0;
  #L2e50cc.  v5:= v6;
  #L2e50ce.  goto L2e5142;
  #L2e50d0.  v0:= -2I;
  #L2e50d2.  if v6 != v0 then goto L2e50d8;
  #L2e50d6.  goto L2e5142;
  #L2e50d8.  if v5 != v0 then goto L2e50de;
  #L2e50dc.  goto L2e50cc;
  #L2e50de.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e50e4.  v6:= temp;
  #L2e50e6.  if v6 == 0 then goto L2e510a;
  #L2e50ea.  v6:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e50ee.  if v6 < 0 then goto L2e50f6;
  #L2e50f2.  v6:= 1I;
  #L2e50f4.  goto L2e50f8;
  #L2e50f6.  v6:= 0I;
  #L2e50f8.  if v6 == 0 then goto L2e50fe;
  #L2e50fc.  goto L2e510a;
  #L2e50fe.  v4:= new `java.lang.AssertionError`;
  #L2e5102.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e5108.  throw v4;
  #L2e510a.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e5110.  v6:= temp;
  #L2e5112.  if v6 == 0 then goto L2e5130;
  #L2e5116.  if v5 < 0 then goto L2e511c;
  #L2e511a.  goto L2e511e;
  #L2e511c.  v1:= 0I;
  #L2e511e.  if v1 == 0 then goto L2e5124;
  #L2e5122.  goto L2e5130;
  #L2e5124.  v4:= new `java.lang.AssertionError`;
  #L2e5128.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e512e.  throw v4;
  #L2e5130.  v6:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e5134.  v6:= v6 + v5 @kind int;
  #L2e5136.  if v6 < 0 then goto L2e513c;
  #L2e513a.  goto L2e50cc;
  #L2e513c.  v5:= 2147483647I;
  #L2e5142.  v6:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e5146.  v0:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e514a.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e5150.  v0:= temp;
  #L2e5152.  if v0 == 0 then goto L2e5168;
  #L2e5156.  v0:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e515a.  if v5 != v0 then goto L2e5168;
  #L2e515e.  v0:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e5162.  if v6 != v0 then goto L2e5168;
  #L2e5166.  return v3 @kind object;
  #L2e5168.  call temp:= `i`(v3, v4, v5, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.i:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/internal/ChannelFlow;` @kind virtual;
  #L2e516e.  v4:= temp @kind object;
  #L2e5170.  return v4 @kind object;
}
procedure `java.lang.String` `f`(`kotlinx.coroutines.flow.internal.ChannelFlow` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.f:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2e4f1c.  v0:= 0I;
  #L2e4f1e.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`kotlinx.coroutines.channels.c0` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.h:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.flow.internal.ChannelFlow` `i`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `int` v1 , `kotlinx.coroutines.channels.BufferOverflow` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.i:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/internal/ChannelFlow;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `kotlin.jvm.functions.Function2` `j`(`kotlinx.coroutines.flow.internal.ChannelFlow` v2 @kind this) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.j:()Lkotlin/jvm/functions/Function2;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e5018.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1`;
  #L2e501c.  v1:= 0I;
  #L2e501e.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e5024.  return v0 @kind object;
}
procedure `int` `k`(`kotlinx.coroutines.flow.internal.ChannelFlow` v2 @kind this) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.k:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e4ea8.  v0:= v2.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e4eac.  v1:= -3I;
  #L2e4eae.  if v0 != v1 then goto L2e4eb4;
  #L2e4eb2.  v0:= -2I;
  #L2e4eb4.  return v0;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `l`(`kotlinx.coroutines.flow.internal.ChannelFlow` v9 @kind this, `kotlinx.coroutines.m0` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.l:(Lkotlinx/coroutines/m0;)Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e5038.  v1:= v9.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e503c.  call temp:= `k`(v9) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.k:()I` @kind virtual;
  #L2e5042.  v2:= temp;
  #L2e5044.  v3:= v9.`kotlinx.coroutines.flow.internal.ChannelFlow.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e5048.  v4:= `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L2e504c.  call temp:= `j`(v9) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.j:()Lkotlin/jvm/functions/Function2;` @kind virtual;
  #L2e5052.  v6:= temp @kind object;
  #L2e5054.  v5:= 0I;
  #L2e5056.  v7:= 16I;
  #L2e505a.  v8:= 0I;
  #L2e505c.  v0:= v10 @kind object;
  #L2e505e.  call temp:= `e`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/channels/ProduceKt;.e:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind static;
  #L2e5064.  v10:= temp @kind object;
  #L2e5066.  return v10 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.internal.ChannelFlow` v10 @kind this) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2e4f30.  v0:= new `java.util.ArrayList`;
  #L2e4f34.  v1:= 4I;
  #L2e4f36.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2e4f3c.  call temp:= `f`(v10) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.f:()Ljava/lang/String;` @kind virtual;
  #L2e4f42.  v1:= temp @kind object;
  #L2e4f44.  if v1 != 0 then goto L2e4f4a;
  #L2e4f48.  goto L2e4f50;
  #L2e4f4a.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4f50.  v1:= v10.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e4f54.  v2:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2e4f58.  if v1 == v2 then goto L2e4f6e;
  #L2e4f5c.  v2:= "context=" @kind object;
  #L2e4f60.  call temp:= `stringPlus`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4f66.  v1:= temp @kind object;
  #L2e4f68.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4f6e.  v1:= v10.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e4f72.  v2:= -3I;
  #L2e4f74.  if v1 == v2 then goto L2e4f92;
  #L2e4f78.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e4f7e.  v1:= temp @kind object;
  #L2e4f80.  v2:= "capacity=" @kind object;
  #L2e4f84.  call temp:= `stringPlus`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4f8a.  v1:= temp @kind object;
  #L2e4f8c.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4f92.  v1:= v10.`kotlinx.coroutines.flow.internal.ChannelFlow.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e4f96.  v2:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e4f9a.  if v1 == v2 then goto L2e4fb0;
  #L2e4f9e.  v2:= "onBufferOverflow=" @kind object;
  #L2e4fa2.  call temp:= `stringPlus`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4fa8.  v1:= temp @kind object;
  #L2e4faa.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4fb0.  v9:= new `java.lang.StringBuilder`;
  #L2e4fb4.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e4fba.  call temp:= `a`(v10) @signature `Lkotlinx/coroutines/p0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4fc0.  v1:= temp @kind object;
  #L2e4fc2.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4fc8.  v1:= 91I;
  #L2e4fcc.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4fd2.  v2:= 0I;
  #L2e4fd4.  v3:= 0I;
  #L2e4fd6.  v4:= 0I;
  #L2e4fd8.  v5:= 0I;
  #L2e4fda.  v6:= 0I;
  #L2e4fdc.  v7:= 62I;
  #L2e4fe0.  v8:= 0I;
  #L2e4fe2.  v1:= ", " @kind object;
  #L2e4fe6.  call temp:= `joinToString$default`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e4fec.  v0:= temp @kind object;
  #L2e4fee.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4ff4.  v0:= 93I;
  #L2e4ff8.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4ffe.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e5004.  v0:= temp @kind object;
  #L2e5006.  return v0 @kind object;
}
