record `kotlinx.coroutines.flow.internal.i` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.Object` `a`(`kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/i;.a:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2e6440.  v0:= new `kotlinx.coroutines.flow.internal.h`;
  #L2e6444.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e644a.  v1:= temp @kind object;
  #L2e644c.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/internal/h;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e6452.  call temp:= `e`(v0, v0, v2) @signature `Lkotlinx/coroutines/j3/b;.e:(Lkotlinx/coroutines/internal/i0;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L2e6458.  v2:= temp @kind object;
  #L2e645a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e6460.  v0:= temp @kind object;
  #L2e6462.  if v2 != v0 then goto L2e646c;
  #L2e6466.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2e646c.  return v2 @kind object;
}
