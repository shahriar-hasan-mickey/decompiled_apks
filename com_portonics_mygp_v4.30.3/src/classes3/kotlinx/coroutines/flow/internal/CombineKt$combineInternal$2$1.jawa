record `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.d`[] `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$flows` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$i` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicInteger` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$nonClosed` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.q` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `kotlinx.coroutines.flow.d`[] v1 @kind object, `int` v2 , `java.util.concurrent.atomic.AtomicInteger` v3 @kind object, `kotlinx.coroutines.channels.q` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.<init>:([Lkotlinx/coroutines/flow/d;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/q;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e559c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$flows` @type ^`kotlinx.coroutines.flow.d`[] := v1 @kind object;
  #L2e55a0.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$i` @type ^`int` := v2;
  #L2e55a4.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$nonClosed` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L2e55a8.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @type ^`kotlinx.coroutines.channels.q` := v4 @kind object;
  #L2e55ac.  v1:= 2I;
  #L2e55ae.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e55b4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e556c.  v7:= new `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1`;
  #L2e5570.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$flows` @type ^`kotlinx.coroutines.flow.d`[] @kind object;
  #L2e5574.  v2:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$i` @type ^`int`;
  #L2e5578.  v3:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$nonClosed` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2e557c.  v4:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @type ^`kotlinx.coroutines.channels.q` @kind object;
  #L2e5580.  v0:= v7 @kind object;
  #L2e5582.  v5:= v8 @kind object;
  #L2e5584.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.<init>:([Lkotlinx/coroutines/flow/d;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/q;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e558a.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e5454.  v1:= (`kotlinx.coroutines.m0`) v1 @kind object;
  #L2e5458.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e545c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e5462.  v1:= temp @kind object;
  #L2e5464.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `kotlinx.coroutines.m0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e5478.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e547e.  v1:= temp @kind object;
  #L2e5480.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1`) v1 @kind object;
  #L2e5484.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5488.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e548e.  v1:= temp @kind object;
  #L2e5490.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e54a4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e54aa.  v0:= temp @kind object;
  #L2e54ac.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.label` @type ^`int`;
  #L2e54b0.  v2:= 0I;
  #L2e54b2.  v3:= 1I;
  #L2e54b4.  if v1 == 0 then goto L2e54d8;
  #L2e54b8.  if v1 != v3 then goto L2e54c8;
  #L2e54bc.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e54c2.  goto L2e550a;
  #L2e54c4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e54c6.  goto L2e552a;
  #L2e54c8.  v7:= new `java.lang.IllegalStateException`;
  #L2e54cc.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e54d0.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e54d6.  throw v7;
  #L2e54d8.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e54de.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$flows` @type ^`kotlinx.coroutines.flow.d`[] @kind object;
  #L2e54e2.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$i` @type ^`int`;
  #L2e54e6.  v7:= v7[v1] @kind object;
  #L2e54ea.  v4:= new `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1`;
  #L2e54ee.  v5:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @type ^`kotlinx.coroutines.channels.q` @kind object;
  #L2e54f2.  call `<init>`(v4, v5, v1) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1$1;.<init>:(Lkotlinx/coroutines/channels/q;I)V` @kind direct;
  #L2e54f8.  v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.label` @type ^`int` := v3;
  #L2e54fc.  call temp:= `a`(v7, v4, v6) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e5502.  v7:= temp @kind object;
  #L2e5504.  if v7 != v0 then goto L2e550a;
  #L2e5508.  return v0 @kind object;
  #L2e550a.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$nonClosed` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2e550e.  call temp:= `decrementAndGet`(v7) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L2e5514.  v7:= temp;
  #L2e5516.  if v7 != 0 then goto L2e5524;
  #L2e551a.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @type ^`kotlinx.coroutines.channels.q` @kind object;
  #L2e551e.  call temp:= `a`(v7, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/h0;.a:(Lkotlinx/coroutines/channels/i0;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L2e5524.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5528.  return v7 @kind object;
  #L2e552a.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$nonClosed` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2e552e.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L2e5534.  v0:= temp;
  #L2e5536.  if v0 != 0 then goto L2e5544;
  #L2e553a.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.$resultChannel` @type ^`kotlinx.coroutines.channels.q` @kind object;
  #L2e553e.  call temp:= `a`(v0, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/h0;.a:(Lkotlinx/coroutines/channels/i0;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L2e5544.  throw v7;
  catch `java.lang.Throwable` @[L2e54bc..L2e54c2] goto L2e54c4;
  catch `java.lang.Throwable` @[L2e54de..L2e5504] goto L2e54c4;
}
