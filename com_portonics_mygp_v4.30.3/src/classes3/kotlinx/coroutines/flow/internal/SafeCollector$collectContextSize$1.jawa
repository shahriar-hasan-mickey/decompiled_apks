record `kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` `@@kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e6680.  v0:= new `kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1`;
  #L2e6684.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.<init>:()V` @kind direct;
  #L2e668a.  `@@kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1.INSTANCE` @type ^`kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` := v0 @kind object;
  #L2e668e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2e66a0.  v0:= 2I;
  #L2e66a2.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2e66a8.  return @kind void;
}
procedure `java.lang.Integer` `invoke`(`kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` v0 @kind this, `int` v1 , `kotlin.coroutines.CoroutineContext$Element` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.invoke:(ILkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e6634.  v1:= v1 + 1;
  #L2e6638.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e663e.  v1:= temp @kind object;
  #L2e6640.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e6654.  v1:= (`java.lang.Number`) v1 @kind object;
  #L2e6658.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2e665e.  v1:= temp;
  #L2e6660.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2e6664.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector$collectContextSize$1;.invoke:(ILkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Integer;` @kind virtual;
  #L2e666a.  v1:= temp @kind object;
  #L2e666c.  return v1 @kind object;
}
