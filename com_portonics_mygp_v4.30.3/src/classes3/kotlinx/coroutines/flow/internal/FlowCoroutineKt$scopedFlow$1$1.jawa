record `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$block` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$this_unsafeFlow` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e641c.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$block` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L2e6420.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` := v2 @kind object;
  #L2e6424.  v1:= 2I;
  #L2e6426.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e642c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e63f4.  v0:= new `kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1`;
  #L2e63f8.  v1:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$block` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2e63fc.  v2:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e6400.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e6406.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2e640a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e6338.  v1:= (`kotlinx.coroutines.m0`) v1 @kind object;
  #L2e633c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e6340.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e6346.  v1:= temp @kind object;
  #L2e6348.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` v0 @kind this, `kotlinx.coroutines.m0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e635c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e6362.  v1:= temp @kind object;
  #L2e6364.  v1:= (`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1`) v1 @kind object;
  #L2e6368.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e636c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e6372.  v1:= temp @kind object;
  #L2e6374.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$scopedFlow$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e6388.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e638e.  v0:= temp @kind object;
  #L2e6390.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.label` @type ^`int`;
  #L2e6394.  v2:= 1I;
  #L2e6396.  if v1 == 0 then goto L2e63b6;
  #L2e639a.  if v1 != v2 then goto L2e63a6;
  #L2e639e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e63a4.  goto L2e63de;
  #L2e63a6.  v5:= new `java.lang.IllegalStateException`;
  #L2e63aa.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e63ae.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e63b4.  throw v5;
  #L2e63b6.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e63bc.  v5:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e63c0.  v5:= (`kotlinx.coroutines.m0`) v5 @kind object;
  #L2e63c4.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$block` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2e63c8.  v3:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e63cc.  v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1.label` @type ^`int` := v2;
  #L2e63d0.  call temp:= `invoke`(v1, v5, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e63d6.  v5:= temp @kind object;
  #L2e63d8.  if v5 != v0 then goto L2e63de;
  #L2e63dc.  return v0 @kind object;
  #L2e63de.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e63e2.  return v5 @kind object;
}
