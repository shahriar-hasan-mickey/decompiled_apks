record `kotlinx.coroutines.flow.internal.ChannelFlowOperator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.flow.internal.ChannelFlow` @kind class {
  `kotlinx.coroutines.flow.d` `kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v0 @kind this, `kotlinx.coroutines.flow.d` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `int` v3 , `kotlinx.coroutines.channels.BufferOverflow` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e49d8.  call `<init>`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.<init>:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L2e49de.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @type ^`kotlinx.coroutines.flow.d` := v1 @kind object;
  #L2e49e2.  return @kind void;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v4 @kind object, `kotlinx.coroutines.flow.e` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.m:(Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e481c.  v0:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow.c` @type ^`int`;
  #L2e4820.  v1:= -3I;
  #L2e4822.  if v0 != v1 then goto L2e489e;
  #L2e4826.  call temp:= `getContext`(v6) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e482c.  v0:= temp @kind object;
  #L2e482e.  v1:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e4832.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e4838.  v1:= temp @kind object;
  #L2e483a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e4840.  v2:= temp;
  #L2e4842.  if v2 == 0 then goto L2e4862;
  #L2e4846.  call temp:= `p`(v4, v5, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.p:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e484c.  v4:= temp @kind object;
  #L2e484e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4854.  v5:= temp @kind object;
  #L2e4856.  if v4 != v5 then goto L2e485c;
  #L2e485a.  return v4 @kind object;
  #L2e485c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e4860.  return v4 @kind object;
  #L2e4862.  v2:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L2e4866.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2e486c.  v3:= temp @kind object;
  #L2e486e.  call temp:= `get`(v0, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2e4874.  v0:= temp @kind object;
  #L2e4876.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e487c.  v0:= temp;
  #L2e487e.  if v0 == 0 then goto L2e489e;
  #L2e4882.  call temp:= `o`(v4, v5, v1, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.o:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L2e4888.  v4:= temp @kind object;
  #L2e488a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4890.  v5:= temp @kind object;
  #L2e4892.  if v4 != v5 then goto L2e4898;
  #L2e4896.  return v4 @kind object;
  #L2e4898.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e489c.  return v4 @kind object;
  #L2e489e.  call temp:= `a`(v4, v5, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind super;
  #L2e48a4.  v4:= temp @kind object;
  #L2e48a6.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e48ac.  v5:= temp @kind object;
  #L2e48ae.  if v4 != v5 then goto L2e48b4;
  #L2e48b2.  return v4 @kind object;
  #L2e48b4.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e48b8.  return v4 @kind object;
}
procedure `java.lang.Object` `n`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v1 @kind object, `kotlinx.coroutines.channels.c0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.n:(Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2e48e8.  v0:= new `kotlinx.coroutines.flow.internal.q`;
  #L2e48ec.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/flow/internal/q;.<init>:(Lkotlinx/coroutines/channels/i0;)V` @kind direct;
  #L2e48f2.  call temp:= `p`(v1, v0, v3) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.p:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e48f8.  v1:= temp @kind object;
  #L2e48fa.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4900.  v2:= temp @kind object;
  #L2e4902.  if v1 != v2 then goto L2e4908;
  #L2e4906.  return v1 @kind object;
  #L2e4908.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e490c.  return v1 @kind object;
}
procedure `java.lang.Object` `o`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v8 @kind this, `kotlinx.coroutines.flow.e` v9 @kind object, `kotlin.coroutines.CoroutineContext` v10 @kind object, `kotlin.coroutines.Continuation` v11 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.o:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2e493c.  call temp:= `getContext`(v11) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e4942.  v0:= temp @kind object;
  #L2e4944.  call temp:= `a`(v9, v0) @signature `Lkotlinx/coroutines/flow/internal/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/e;` @kind static;
  #L2e494a.  v2:= temp @kind object;
  #L2e494c.  v4:= new `kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2`;
  #L2e4950.  v9:= 0I;
  #L2e4952.  call `<init>`(v4, v8, v9) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator$collectWithContextUndispatched$2;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4958.  v3:= 0I;
  #L2e495a.  v6:= 4I;
  #L2e495c.  v7:= 0I;
  #L2e495e.  v1:= v10 @kind object;
  #L2e4960.  v5:= v11 @kind object;
  #L2e4962.  call temp:= `c`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/d;.c:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e4968.  v9:= temp @kind object;
  #L2e496a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4970.  v10:= temp @kind object;
  #L2e4972.  if v9 != v10 then goto L2e4978;
  #L2e4976.  return v9 @kind object;
  #L2e4978.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e497c.  return v9 @kind object;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2e48cc.  call temp:= `m`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.m:(Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e48d2.  v1:= temp @kind object;
  #L2e48d4.  return v1 @kind object;
}
procedure `java.lang.Object` `h`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v0 @kind this, `kotlinx.coroutines.channels.c0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.h:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L2e4920.  call temp:= `n`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.n:(Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e4926.  v1:= temp @kind object;
  #L2e4928.  return v1 @kind object;
}
procedure `java.lang.Object` `p`(`kotlinx.coroutines.flow.e` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.p:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.internal.ChannelFlowOperator` v2 @kind this) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e4990.  v0:= new `java.lang.StringBuilder`;
  #L2e4994.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e499a.  v1:= v2.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e499e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e49a4.  v1:= " -> " @kind object;
  #L2e49a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e49ae.  call temp:= `toString`(v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.toString:()Ljava/lang/String;` @kind super;
  #L2e49b4.  v1:= temp @kind object;
  #L2e49b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e49bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e49c2.  v0:= temp @kind object;
  #L2e49c4.  return v0 @kind object;
}
