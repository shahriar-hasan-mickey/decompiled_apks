record `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$cnt` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.d` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$flow` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$scopeContext` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$second` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$this_unsafeFlow` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$transform` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `kotlinx.coroutines.flow.d` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v4 @kind object, `kotlinx.coroutines.flow.e` v5 @kind object, `kotlin.jvm.functions.Function3` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/e;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e5dc8.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$flow` @type ^`kotlinx.coroutines.flow.d` := v1 @kind object;
  #L2e5dcc.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$scopeContext` @type ^`kotlin.coroutines.CoroutineContext` := v2 @kind object;
  #L2e5dd0.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$cnt` @type ^`java.lang.Object` := v3 @kind object;
  #L2e5dd4.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$second` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v4 @kind object;
  #L2e5dd8.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` := v5 @kind object;
  #L2e5ddc.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$transform` @type ^`kotlin.jvm.functions.Function3` := v6 @kind object;
  #L2e5de0.  v1:= 2I;
  #L2e5de2.  call `<init>`(v0, v1, v7) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e5de8.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v8 @kind this, `java.lang.Object` v9 @kind object, `kotlin.coroutines.Continuation` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2e5d90.  v9:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2`;
  #L2e5d94.  v1:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$flow` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e5d98.  v2:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$scopeContext` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e5d9c.  v3:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$cnt` @type ^`java.lang.Object` @kind object;
  #L2e5da0.  v4:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$second` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L2e5da4.  v5:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e5da8.  v6:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$transform` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2e5dac.  v0:= v9 @kind object;
  #L2e5dae.  v7:= v10 @kind object;
  #L2e5db0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/e;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e5db6.  return v9 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e5cc0.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L2e5cc4.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e5cc8.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e5cce.  v1:= temp @kind object;
  #L2e5cd0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `kotlin.Unit` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e5ce4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e5cea.  v1:= temp @kind object;
  #L2e5cec.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2`) v1 @kind object;
  #L2e5cf0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5cf4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e5cfa.  v1:= temp @kind object;
  #L2e5cfc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e5d10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e5d16.  v0:= temp @kind object;
  #L2e5d18.  v1:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.label` @type ^`int`;
  #L2e5d1c.  v2:= 1I;
  #L2e5d1e.  if v1 == 0 then goto L2e5d3e;
  #L2e5d22.  if v1 != v2 then goto L2e5d2e;
  #L2e5d26.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e5d2c.  goto L2e5d7a;
  #L2e5d2e.  v10:= new `java.lang.IllegalStateException`;
  #L2e5d32.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e5d36.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e5d3c.  throw v10;
  #L2e5d3e.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e5d44.  v10:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$flow` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e5d48.  v1:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1`;
  #L2e5d4c.  v4:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$scopeContext` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e5d50.  v5:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$cnt` @type ^`java.lang.Object` @kind object;
  #L2e5d54.  v6:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$second` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L2e5d58.  v7:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$this_unsafeFlow` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e5d5c.  v8:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.$transform` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2e5d60.  v3:= v1 @kind object;
  #L2e5d62.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/e;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L2e5d68.  v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.label` @type ^`int` := v2;
  #L2e5d6c.  call temp:= `a`(v10, v1, v9) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e5d72.  v10:= temp @kind object;
  #L2e5d74.  if v10 != v0 then goto L2e5d7a;
  #L2e5d78.  return v0 @kind object;
  #L2e5d7a.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5d7e.  return v10 @kind object;
}
