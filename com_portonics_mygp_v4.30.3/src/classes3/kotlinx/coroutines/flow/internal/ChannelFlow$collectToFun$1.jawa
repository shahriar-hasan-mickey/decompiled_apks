record `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.L$0` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.label` @AccessFlag ;
  `kotlinx.coroutines.flow.internal.ChannelFlow` `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` v0 @kind this, `kotlinx.coroutines.flow.internal.ChannelFlow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4404.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` := v1 @kind object;
  #L2e4408.  v1:= 2I;
  #L2e440a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4410.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e43e0.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1`;
  #L2e43e4.  v1:= v2.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L2e43e8.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e43ee.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e43f2.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e4328.  v1:= (`kotlinx.coroutines.channels.c0`) v1 @kind object;
  #L2e432c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e4330.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.invoke:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e4336.  v1:= temp @kind object;
  #L2e4338.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` v0 @kind this, `kotlinx.coroutines.channels.c0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.invoke:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e434c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e4352.  v1:= temp @kind object;
  #L2e4354.  v1:= (`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1`) v1 @kind object;
  #L2e4358.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e435c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e4362.  v1:= temp @kind object;
  #L2e4364.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collectToFun$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e4378.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e437e.  v0:= temp @kind object;
  #L2e4380.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.label` @type ^`int`;
  #L2e4384.  v2:= 1I;
  #L2e4386.  if v1 == 0 then goto L2e43a6;
  #L2e438a.  if v1 != v2 then goto L2e4396;
  #L2e438e.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e4394.  goto L2e43ca;
  #L2e4396.  v4:= new `java.lang.IllegalStateException`;
  #L2e439a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e439e.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e43a4.  throw v4;
  #L2e43a6.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e43ac.  v4:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e43b0.  v4:= (`kotlinx.coroutines.channels.c0`) v4 @kind object;
  #L2e43b4.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L2e43b8.  v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1.label` @type ^`int` := v2;
  #L2e43bc.  call temp:= `h`(v1, v4, v3) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.h:(Lkotlinx/coroutines/channels/c0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e43c2.  v4:= temp @kind object;
  #L2e43c4.  if v4 != v0 then goto L2e43ca;
  #L2e43c8.  return v0 @kind object;
  #L2e43ca.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e43ce.  return v4 @kind object;
}
