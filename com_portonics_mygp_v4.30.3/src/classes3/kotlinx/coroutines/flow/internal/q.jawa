record `kotlinx.coroutines.flow.internal.q` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
  `kotlinx.coroutines.channels.i0` `kotlinx.coroutines.flow.internal.q.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.q` v0 @kind this, `kotlinx.coroutines.channels.i0` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/q;.<init>:(Lkotlinx/coroutines/channels/i0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e6c48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6c4e.  v0.`kotlinx.coroutines.flow.internal.q.b` @type ^`kotlinx.coroutines.channels.i0` := v1 @kind object;
  #L2e6c52.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.q` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/q;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e6c18.  v0:= v1.`kotlinx.coroutines.flow.internal.q.b` @type ^`kotlinx.coroutines.channels.i0` @kind object;
  #L2e6c1c.  call temp:= `y`(v0, v2, v3) @signature `Lkotlinx/coroutines/channels/i0;.y:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e6c22.  v2:= temp @kind object;
  #L2e6c24.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e6c2a.  v3:= temp @kind object;
  #L2e6c2c.  if v2 != v3 then goto L2e6c32;
  #L2e6c30.  return v2 @kind object;
  #L2e6c32.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e6c36.  return v2 @kind object;
}
