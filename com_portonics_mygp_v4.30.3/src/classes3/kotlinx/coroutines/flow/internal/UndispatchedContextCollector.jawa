record `kotlinx.coroutines.flow.internal.UndispatchedContextCollector` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector.c` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector` v1 @kind this, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e6ea4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6eaa.  v1.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.b` @type ^`kotlin.coroutines.CoroutineContext` := v3 @kind object;
  #L2e6eae.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L2e6eb4.  v3:= temp @kind object;
  #L2e6eb6.  v1.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.c` @type ^`java.lang.Object` := v3 @kind object;
  #L2e6eba.  v3:= new `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1`;
  #L2e6ebe.  v0:= 0I;
  #L2e6ec0.  call `<init>`(v3, v2, v0) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e6ec6.  v1.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.d` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L2e6eca.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e6e6c.  v0:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e6e70.  v1:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.c` @type ^`java.lang.Object` @kind object;
  #L2e6e74.  v2:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2e6e78.  call temp:= `b`(v0, v4, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/d;.b:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e6e7e.  v4:= temp @kind object;
  #L2e6e80.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e6e86.  v5:= temp @kind object;
  #L2e6e88.  if v4 != v5 then goto L2e6e8e;
  #L2e6e8c.  return v4 @kind object;
  #L2e6e8e.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e6e92.  return v4 @kind object;
}
