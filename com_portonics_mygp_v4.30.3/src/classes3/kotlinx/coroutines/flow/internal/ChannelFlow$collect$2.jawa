record `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.$collector` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.label` @AccessFlag ;
  `kotlinx.coroutines.flow.internal.ChannelFlow` `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlinx.coroutines.flow.internal.ChannelFlow` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4304.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.$collector` @type ^`kotlinx.coroutines.flow.e` := v1 @kind object;
  #L2e4308.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` := v2 @kind object;
  #L2e430c.  v1:= 2I;
  #L2e430e.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4314.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e42dc.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlow$collect$2`;
  #L2e42e0.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.$collector` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e42e4.  v2:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L2e42e8.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlinx/coroutines/flow/internal/ChannelFlow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e42ee.  v0.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2e42f2.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e4218.  v1:= (`kotlinx.coroutines.m0`) v1 @kind object;
  #L2e421c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e4220.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e4226.  v1:= temp @kind object;
  #L2e4228.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` v0 @kind this, `kotlinx.coroutines.m0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e423c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e4242.  v1:= temp @kind object;
  #L2e4244.  v1:= (`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2`) v1 @kind object;
  #L2e4248.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e424c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e4252.  v1:= temp @kind object;
  #L2e4254.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow$collect$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e4268.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e426e.  v0:= temp @kind object;
  #L2e4270.  v1:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.label` @type ^`int`;
  #L2e4274.  v2:= 1I;
  #L2e4276.  if v1 == 0 then goto L2e4296;
  #L2e427a.  if v1 != v2 then goto L2e4286;
  #L2e427e.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e4284.  goto L2e42c6;
  #L2e4286.  v5:= new `java.lang.IllegalStateException`;
  #L2e428a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e428e.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4294.  throw v5;
  #L2e4296.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e429c.  v5:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2e42a0.  v5:= (`kotlinx.coroutines.m0`) v5 @kind object;
  #L2e42a4.  v1:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.$collector` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e42a8.  v3:= v4.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind object;
  #L2e42ac.  call temp:= `l`(v3, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.l:(Lkotlinx/coroutines/m0;)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind virtual;
  #L2e42b2.  v5:= temp @kind object;
  #L2e42b4.  v4.`kotlinx.coroutines.flow.internal.ChannelFlow$collect$2.label` @type ^`int` := v2;
  #L2e42b8.  call temp:= `j`(v1, v5, v4) @signature `Lkotlinx/coroutines/flow/f;.j:(Lkotlinx/coroutines/flow/e;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e42be.  v5:= temp @kind object;
  #L2e42c0.  if v5 != v0 then goto L2e42c6;
  #L2e42c4.  return v0 @kind object;
  #L2e42c6.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e42ca.  return v5 @kind object;
}
