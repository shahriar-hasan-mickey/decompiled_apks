record `kotlinx.coroutines.flow.internal.n` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
}
global `kotlinx.coroutines.flow.internal.n` `@@kotlinx.coroutines.flow.internal.n.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/internal/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e65b4.  v0:= new `kotlinx.coroutines.flow.internal.n`;
  #L2e65b8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/internal/n;.<init>:()V` @kind direct;
  #L2e65be.  `@@kotlinx.coroutines.flow.internal.n.b` @type ^`kotlinx.coroutines.flow.internal.n` := v0 @kind object;
  #L2e65c2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.n` v0 @kind this) @signature `Lkotlinx/coroutines/flow/internal/n;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e65d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e65da.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.n` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/n;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2e659c.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e65a0.  return v1 @kind object;
}
