record `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.$collector` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.label` @AccessFlag ;
  `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v1 @kind object, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4d7c.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` := v1 @kind object;
  #L2e4d80.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.$collector` @type ^`kotlinx.coroutines.flow.e` := v2 @kind object;
  #L2e4d84.  v1:= 2I;
  #L2e4d86.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4d8c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e4d54.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3`;
  #L2e4d58.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind object;
  #L2e4d5c.  v2:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.$collector` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e4d60.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e4d66.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2e4d6a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e4c80.  v1:= (`kotlinx.coroutines.m0`) v1 @kind object;
  #L2e4c84.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e4c88.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e4c8e.  v1:= temp @kind object;
  #L2e4c90.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `kotlinx.coroutines.m0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e4ca4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e4caa.  v1:= temp @kind object;
  #L2e4cac.  v1:= (`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3`) v1 @kind object;
  #L2e4cb0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e4cb4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e4cba.  v1:= temp @kind object;
  #L2e4cbc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e4cd0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e4cd6.  v0:= temp @kind object;
  #L2e4cd8.  v1:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.label` @type ^`int`;
  #L2e4cdc.  v2:= 1I;
  #L2e4cde.  if v1 == 0 then goto L2e4cfe;
  #L2e4ce2.  if v1 != v2 then goto L2e4cee;
  #L2e4ce6.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e4cec.  goto L2e4d3e;
  #L2e4cee.  v8:= new `java.lang.IllegalStateException`;
  #L2e4cf2.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e4cf6.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4cfc.  throw v8;
  #L2e4cfe.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e4d04.  v8:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.L$0` @type ^`java.lang.Object` @kind object;
  #L2e4d08.  v8:= (`kotlinx.coroutines.m0`) v8 @kind object;
  #L2e4d0c.  v1:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L2e4d10.  call `<init>`(v1) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L2e4d16.  v3:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.this$0` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind object;
  #L2e4d1a.  v4:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e4d1e.  v5:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1`;
  #L2e4d22.  v6:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.$collector` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e4d26.  call `<init>`(v5, v1, v8, v3, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/m0;Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/e;)V` @kind direct;
  #L2e4d2c.  v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.label` @type ^`int` := v2;
  #L2e4d30.  call temp:= `a`(v4, v5, v7) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e4d36.  v8:= temp @kind object;
  #L2e4d38.  if v8 != v0 then goto L2e4d3e;
  #L2e4d3c.  return v0 @kind object;
  #L2e4d3e.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e4d42.  return v8 @kind object;
}
