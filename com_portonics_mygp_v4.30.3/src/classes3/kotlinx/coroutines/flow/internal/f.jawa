record `kotlinx.coroutines.flow.internal.f` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.internal.ChannelFlowOperator` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.f` v0 @kind this, `kotlinx.coroutines.flow.d` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `int` v3 , `kotlinx.coroutines.channels.BufferOverflow` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/f;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e47c8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L2e47ce.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.f` v0 @kind this, `kotlinx.coroutines.flow.d` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `int` v3 , `kotlinx.coroutines.channels.BufferOverflow` v4 @kind object, `int` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlinx/coroutines/flow/internal/f;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e47e0.  v6:= v5 ^& 2;
  #L2e47e4.  if v6 == 0 then goto L2e47ec;
  #L2e47e8.  v2:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2e47ec.  v6:= v5 ^& 4;
  #L2e47f0.  if v6 == 0 then goto L2e47f6;
  #L2e47f4.  v3:= -3I;
  #L2e47f6.  v5:= v5 ^& 8;
  #L2e47fa.  if v5 == 0 then goto L2e4802;
  #L2e47fe.  v4:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e4802.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/f;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L2e4808.  return @kind void;
}
procedure `kotlinx.coroutines.flow.internal.ChannelFlow` `i`(`kotlinx.coroutines.flow.internal.f` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object, `int` v4 , `kotlinx.coroutines.channels.BufferOverflow` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/f;.i:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/internal/ChannelFlow;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2e47a8.  v0:= new `kotlinx.coroutines.flow.internal.f`;
  #L2e47ac.  v1:= v2.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e47b0.  call `<init>`(v0, v1, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/f;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L2e47b6.  return v0 @kind object;
}
procedure `java.lang.Object` `p`(`kotlinx.coroutines.flow.internal.f` v1 @kind this, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/f;.p:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2e4778.  v0:= v1.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.e` @type ^`kotlinx.coroutines.flow.d` @kind object;
  #L2e477c.  call temp:= `a`(v0, v2, v3) @signature `Lkotlinx/coroutines/flow/d;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e4782.  v2:= temp @kind object;
  #L2e4784.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e478a.  v3:= temp @kind object;
  #L2e478c.  if v2 != v3 then goto L2e4792;
  #L2e4790.  return v2 @kind object;
  #L2e4792.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e4796.  return v2 @kind object;
}
