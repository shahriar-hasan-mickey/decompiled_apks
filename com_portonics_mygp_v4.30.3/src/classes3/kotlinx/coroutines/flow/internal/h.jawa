record `kotlinx.coroutines.flow.internal.h` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.i0` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.h` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/h;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e64a8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/i0;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e64ae.  return @kind void;
}
procedure `boolean` `M`(`kotlinx.coroutines.flow.internal.h` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/h;.M:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e6480.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.flow.internal.ChildCancelledException` @kind boolean;
  #L2e6484.  if v0 == 0 then goto L2e648c;
  #L2e6488.  v2:= 1I;
  #L2e648a.  return v2;
  #L2e648c.  call temp:= `H`(v1, v2) @signature `Lkotlinx/coroutines/j2;.H:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e6492.  v2:= temp;
  #L2e6494.  return v2;
}
