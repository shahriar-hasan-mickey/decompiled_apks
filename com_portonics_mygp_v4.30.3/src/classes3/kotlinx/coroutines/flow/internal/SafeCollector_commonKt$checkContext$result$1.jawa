record `kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.internal.SafeCollector` `kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1.$this_checkContext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1` v0 @kind this, `kotlinx.coroutines.flow.internal.SafeCollector` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt$checkContext$result$1;.<init>:(Lkotlinx/coroutines/flow/internal/SafeCollector;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e6874.  v0.`kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1.$this_checkContext` @type ^`kotlinx.coroutines.flow.internal.SafeCollector` := v1 @kind object;
  #L2e6878.  v1:= 2I;
  #L2e687a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2e6880.  return @kind void;
}
procedure `java.lang.Integer` `invoke`(`kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1` v3 @kind this, `int` v4 , `kotlin.coroutines.CoroutineContext$Element` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt$checkContext$result$1;.invoke:(ILkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e6788.  call temp:= `getKey`(v5) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L2e678e.  v0:= temp @kind object;
  #L2e6790.  v1:= v3.`kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1.$this_checkContext` @type ^`kotlinx.coroutines.flow.internal.SafeCollector` @kind object;
  #L2e6794.  v1:= v1.`kotlinx.coroutines.flow.internal.SafeCollector.collectContext` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e6798.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2e679e.  v1:= temp @kind object;
  #L2e67a0.  v2:= `@@kotlinx.coroutines.z1.m0` @type ^`kotlinx.coroutines.y1` @kind object;
  #L2e67a4.  if v0 == v2 then goto L2e67c0;
  #L2e67a8.  if v5 == v1 then goto L2e67b2;
  #L2e67ac.  v4:= -2147483648I;
  #L2e67b0.  goto L2e67b6;
  #L2e67b2.  v4:= v4 + 1;
  #L2e67b6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e67bc.  v4:= temp @kind object;
  #L2e67be.  return v4 @kind object;
  #L2e67c0.  v1:= (`kotlinx.coroutines.z1`) v1 @kind object;
  #L2e67c4.  v5:= (`kotlinx.coroutines.z1`) v5 @kind object;
  #L2e67c8.  call temp:= `b`(v5, v1) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt;.b:(Lkotlinx/coroutines/z1;Lkotlinx/coroutines/z1;)Lkotlinx/coroutines/z1;` @kind static;
  #L2e67ce.  v5:= temp @kind object;
  #L2e67d0.  if v5 != v1 then goto L2e67e8;
  #L2e67d4.  if v1 != 0 then goto L2e67da;
  #L2e67d8.  goto L2e67de;
  #L2e67da.  v4:= v4 + 1;
  #L2e67de.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e67e4.  v4:= temp @kind object;
  #L2e67e6.  return v4 @kind object;
  #L2e67e8.  v4:= new `java.lang.IllegalStateException`;
  #L2e67ec.  v0:= new `java.lang.StringBuilder`;
  #L2e67f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e67f6.  v2:= "Flow invariant is violated:\n\t\tEmission from another coroutine is detected.\n\t\tChild of " @kind object;
  #L2e67fa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6800.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6806.  v5:= ", expected child of " @kind object;
  #L2e680a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6810.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6816.  v5:= ".\n\t\tFlowCollector is not thread-safe and concurrent emissions are prohibited.\n\t\tTo mitigate this restriction please use 'channelFlow' builder instead of 'flow'" @kind object;
  #L2e681a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6820.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e6826.  v5:= temp @kind object;
  #L2e6828.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e682e.  v5:= temp @kind object;
  #L2e6830.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6836.  throw v4;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt$checkContext$result$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e6848.  v1:= (`java.lang.Number`) v1 @kind object;
  #L2e684c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2e6852.  v1:= temp;
  #L2e6854.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2e6858.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt$checkContext$result$1;.invoke:(ILkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Integer;` @kind virtual;
  #L2e685e.  v1:= temp @kind object;
  #L2e6860.  return v1 @kind object;
}
