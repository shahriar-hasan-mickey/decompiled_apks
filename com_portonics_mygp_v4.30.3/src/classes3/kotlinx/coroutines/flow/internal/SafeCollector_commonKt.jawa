record `kotlinx.coroutines.flow.internal.SafeCollector_commonKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`kotlinx.coroutines.flow.internal.SafeCollector` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt;.a:(Lkotlinx/coroutines/flow/internal/SafeCollector;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e690c.  v0:= 0I;
  #L2e690e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e6914.  v0:= temp @kind object;
  #L2e6916.  v1:= new `kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1`;
  #L2e691a.  call `<init>`(v1, v3) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt$checkContext$result$1;.<init>:(Lkotlinx/coroutines/flow/internal/SafeCollector;)V` @kind direct;
  #L2e6920.  call temp:= `fold`(v4, v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind interface;
  #L2e6926.  v0:= temp @kind object;
  #L2e6928.  v0:= (`java.lang.Number`) v0 @kind object;
  #L2e692c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2e6932.  v0:= temp;
  #L2e6934.  v1:= v3.`kotlinx.coroutines.flow.internal.SafeCollector.collectContextSize` @type ^`int`;
  #L2e6938.  if v0 != v1 then goto L2e693e;
  #L2e693c.  return @kind void;
  #L2e693e.  v0:= new `java.lang.IllegalStateException`;
  #L2e6942.  v1:= new `java.lang.StringBuilder`;
  #L2e6946.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e694c.  v2:= "Flow invariant is violated:\n\t\tFlow was collected in " @kind object;
  #L2e6950.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6956.  v3:= v3.`kotlinx.coroutines.flow.internal.SafeCollector.collectContext` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e695a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6960.  v3:= ",\n\t\tbut emission happened in " @kind object;
  #L2e6964.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e696a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e6970.  v3:= ".\n\t\tPlease refer to 'flow' documentation or use 'flowOn' instead" @kind object;
  #L2e6974.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e697a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e6980.  v3:= temp @kind object;
  #L2e6982.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e6988.  v3:= temp @kind object;
  #L2e698a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6990.  throw v0;
}
procedure `kotlinx.coroutines.z1` `b`(`kotlinx.coroutines.z1` v1 @kind object, `kotlinx.coroutines.z1` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector_commonKt;.b:(Lkotlinx/coroutines/z1;Lkotlinx/coroutines/z1;)Lkotlinx/coroutines/z1;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2e68d4.  if v1 != 0 then goto L2e68dc;
  #L2e68d8.  v1:= 0I;
  #L2e68da.  return v1 @kind object;
  #L2e68dc.  if v1 != v2 then goto L2e68e2;
  #L2e68e0.  return v1 @kind object;
  #L2e68e2.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.i0` @kind boolean;
  #L2e68e6.  if v0 != 0 then goto L2e68ec;
  #L2e68ea.  return v1 @kind object;
  #L2e68ec.  v1:= (`kotlinx.coroutines.internal.i0`) v1 @kind object;
  #L2e68f0.  call temp:= `N0`(v1) @signature `Lkotlinx/coroutines/internal/i0;.N0:()Lkotlinx/coroutines/z1;` @kind virtual;
  #L2e68f6.  v1:= temp @kind object;
  #L2e68f8.  goto L2e68d4;
}
