record `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.ContinuationImpl` @kind class {
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.L$0` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.L$1` @AccessFlag ;
  `int` `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.label` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.result` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.internal.e` `kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1` v0 @kind this, `kotlinx.coroutines.flow.internal.e` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowMerge$collectTo$2$emit$1;.<init>:(Lkotlinx/coroutines/flow/internal/e;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4664.  call `<init>`(v0, v2) @signature `Lkotlin/coroutines/jvm/internal/ContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e466a.  return @kind void;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowMerge$collectTo$2$emit$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e463c.  v1.`kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.result` @type ^`java.lang.Object` := v2 @kind object;
  #L2e4640.  v2:= v1.`kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.label` @type ^`int`;
  #L2e4644.  v0:= -2147483648I;
  #L2e4648.  v2:= v2 ^| v0 @kind int;
  #L2e464a.  v1.`kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1.label` @type ^`int` := v2;
  #L2e464e.  v2:= 0I;
  #L2e4650.  throw v2;
}
