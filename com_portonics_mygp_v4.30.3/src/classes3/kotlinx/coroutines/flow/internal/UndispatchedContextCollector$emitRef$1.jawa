record `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.$downstream` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.L$0` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` v0 @kind this, `kotlinx.coroutines.flow.e` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e6e4c.  v0.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.$downstream` @type ^`kotlinx.coroutines.flow.e` := v1 @kind object;
  #L2e6e50.  v1:= 2I;
  #L2e6e52.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e6e58.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e6e28.  v0:= new `kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1`;
  #L2e6e2c.  v1:= v2.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.$downstream` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e6e30.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.<init>:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e6e36.  v0.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2e6e3a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e6d78.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2e6d7c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.invoke:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2e6d82.  v1:= temp @kind object;
  #L2e6d84.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.invoke:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e6d98.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2e6d9e.  v1:= temp @kind object;
  #L2e6da0.  v1:= (`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1`) v1 @kind object;
  #L2e6da4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e6da8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e6dae.  v1:= temp @kind object;
  #L2e6db0.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/UndispatchedContextCollector$emitRef$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e6dc4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e6dca.  v0:= temp @kind object;
  #L2e6dcc.  v1:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.label` @type ^`int`;
  #L2e6dd0.  v2:= 1I;
  #L2e6dd2.  if v1 == 0 then goto L2e6df2;
  #L2e6dd6.  if v1 != v2 then goto L2e6de2;
  #L2e6dda.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e6de0.  goto L2e6e12;
  #L2e6de2.  v4:= new `java.lang.IllegalStateException`;
  #L2e6de6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e6dea.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6df0.  throw v4;
  #L2e6df2.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e6df8.  v4:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2e6dfc.  v1:= v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.$downstream` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e6e00.  v3.`kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1.label` @type ^`int` := v2;
  #L2e6e04.  call temp:= `emit`(v1, v4, v3) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e6e0a.  v4:= temp @kind object;
  #L2e6e0c.  if v4 != v0 then goto L2e6e12;
  #L2e6e10.  return v0 @kind object;
  #L2e6e12.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e6e16.  return v4 @kind object;
}
