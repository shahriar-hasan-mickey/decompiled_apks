record `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.e` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v3 @kind object, `kotlinx.coroutines.flow.e` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/e;Lkotlin/jvm/functions/Function3;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e5c94.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.b` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L2e5c98.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.c` @type ^`java.lang.Object` := v2 @kind object;
  #L2e5c9c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v3 @kind object;
  #L2e5ca0.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.e` @type ^`kotlinx.coroutines.flow.e` := v4 @kind object;
  #L2e5ca4.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.f` @type ^`kotlin.jvm.functions.Function3` := v5 @kind object;
  #L2e5ca8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e5cae.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1` v12 @kind this, `java.lang.Object` v13 @kind object, `kotlin.coroutines.Continuation` v14 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2e5bdc.  v0:= instanceof @variable v14 @type ^`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1` @kind boolean;
  #L2e5be0.  if v0 == 0 then goto L2e5c02;
  #L2e5be4.  v0:= v14 @kind object;
  #L2e5be6.  v0:= (`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1`) v0 @kind object;
  #L2e5bea.  v1:= v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label` @type ^`int`;
  #L2e5bee.  v2:= -2147483648I;
  #L2e5bf2.  v3:= v1 ^& v2 @kind int;
  #L2e5bf6.  if v3 == 0 then goto L2e5c02;
  #L2e5bfa.  v1:= v1 - v2 @kind int;
  #L2e5bfc.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label` @type ^`int` := v1;
  #L2e5c00.  goto L2e5c0c;
  #L2e5c02.  v0:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1`;
  #L2e5c06.  call `<init>`(v0, v12, v14) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1$emit$1;.<init>:(Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e5c0c.  v14:= v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.result` @type ^`java.lang.Object` @kind object;
  #L2e5c10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2e5c16.  v1:= temp @kind object;
  #L2e5c18.  v2:= v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label` @type ^`int`;
  #L2e5c1c.  v3:= 1I;
  #L2e5c1e.  if v2 == 0 then goto L2e5c3e;
  #L2e5c22.  if v2 != v3 then goto L2e5c2e;
  #L2e5c26.  call `throwOnFailure`(v14) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e5c2c.  goto L2e5c7e;
  #L2e5c2e.  v13:= new `java.lang.IllegalStateException`;
  #L2e5c32.  v14:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2e5c36.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e5c3c.  throw v13;
  #L2e5c3e.  call `throwOnFailure`(v14) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2e5c44.  v14:= v12.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2e5c48.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5c4c.  v4:= v12.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.c` @type ^`java.lang.Object` @kind object;
  #L2e5c50.  v11:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1`;
  #L2e5c54.  v6:= v12.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L2e5c58.  v7:= v12.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.e` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2e5c5c.  v8:= v12.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1.f` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2e5c60.  v10:= 0I;
  #L2e5c62.  v5:= v11 @kind object;
  #L2e5c64.  v9:= v13 @kind object;
  #L2e5c66.  call `<init>`(v5, v6, v7, v8, v9, v10) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$1$1;.<init>:(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/e;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2e5c6c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1.label` @type ^`int` := v3;
  #L2e5c70.  call temp:= `b`(v14, v2, v4, v11, v0) @signature `Lkotlinx/coroutines/flow/internal/d;.b:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L2e5c76.  v13:= temp @kind object;
  #L2e5c78.  if v13 != v1 then goto L2e5c7e;
  #L2e5c7c.  return v1 @kind object;
  #L2e5c7e.  v13:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e5c82.  return v13 @kind object;
}
