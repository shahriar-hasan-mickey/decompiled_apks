record `kotlinx.coroutines.flow.t0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.t0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.t0` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object) @signature `Lkotlinx/coroutines/flow/t0;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2de3f4.  v0.`kotlinx.coroutines.flow.t0.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L2de3f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2de3fe.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.t0` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/t0;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2de3b0.  v4:= v2.`kotlinx.coroutines.flow.t0.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2de3b4.  v0:= v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L2de3b8.  v1:= `@@kotlinx.coroutines.flow.internal.o.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2de3bc.  if v0 != v1 then goto L2de3c8;
  #L2de3c0.  v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v3 @kind object;
  #L2de3c4.  v3:= 1I;
  #L2de3c6.  goto L2de3ce;
  #L2de3c8.  v4.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v1 @kind object;
  #L2de3cc.  v3:= 0I;
  #L2de3ce.  if v3 == 0 then goto L2de3d8;
  #L2de3d2.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2de3d6.  return v3 @kind object;
  #L2de3d8.  v3:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L2de3dc.  call `<init>`(v3, v2) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/e;)V` @kind direct;
  #L2de3e2.  throw v3;
}
