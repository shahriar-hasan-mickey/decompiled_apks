record `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2dde64.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L2dde68.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L2dde6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dde72.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ddd80.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1` @kind boolean;
  #L2ddd84.  if v0 == 0 then goto L2ddda6;
  #L2ddd88.  v0:= v6 @kind object;
  #L2ddd8a.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1`) v0 @kind object;
  #L2ddd8e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.label` @type ^`int`;
  #L2ddd92.  v2:= -2147483648I;
  #L2ddd96.  v3:= v1 ^& v2 @kind int;
  #L2ddd9a.  if v3 == 0 then goto L2ddda6;
  #L2ddd9e.  v1:= v1 - v2 @kind int;
  #L2ddda0.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.label` @type ^`int` := v1;
  #L2ddda4.  goto L2dddb0;
  #L2ddda6.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1`;
  #L2dddaa.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dddb0.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.result` @type ^`java.lang.Object` @kind object;
  #L2dddb4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dddba.  v1:= temp @kind object;
  #L2dddbc.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.label` @type ^`int`;
  #L2dddc0.  v3:= 1I;
  #L2dddc2.  if v2 == 0 then goto L2dddee;
  #L2dddc6.  if v2 != v3 then goto L2dddde;
  #L2dddca.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2dddce.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dddd2.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2`) v0 @kind object;
  #L2dddd6.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2ddddc.  goto L2dde24;
  #L2dddde.  v5:= new `java.lang.IllegalStateException`;
  #L2ddde2.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2ddde6.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dddec.  throw v5;
  #L2dddee.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dddf4.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dddf8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2dddfc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.L$1` @type ^`java.lang.Object` := v5 @kind object;
  #L2dde00.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1.label` @type ^`int` := v3;
  #L2dde04.  v2:= 6I;
  #L2dde06.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2dde0c.  call temp:= `invoke`(v6, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dde12.  v6:= temp @kind object;
  #L2dde14.  v0:= 7I;
  #L2dde16.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2dde1c.  if v6 != v1 then goto L2dde22;
  #L2dde20.  return v1 @kind object;
  #L2dde22.  v0:= v4 @kind object;
  #L2dde24.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L2dde28.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2dde2e.  v6:= temp;
  #L2dde30.  if v6 == 0 then goto L2dde3e;
  #L2dde34.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2dde38.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v5 @kind object;
  #L2dde3c.  v3:= 0I;
  #L2dde3e.  if v3 == 0 then goto L2dde48;
  #L2dde42.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dde46.  return v5 @kind object;
  #L2dde48.  v5:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L2dde4c.  call `<init>`(v5, v0) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/e;)V` @kind direct;
  #L2dde52.  throw v5;
}
