record `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$lastValue` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$ticker` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.L$0` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2db798.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L2db79c.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$ticker` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v2 @kind object;
  #L2db7a0.  v1:= 2I;
  #L2db7a2.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2db7a8.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2db770.  v0:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1`;
  #L2db774.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2db778.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$ticker` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L2db77c.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2db782.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2db786.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2db684.  v1:= (`kotlinx.coroutines.channels.w`) v1 @kind object;
  #L2db688.  call temp:= `l`(v1) @signature `Lkotlinx/coroutines/channels/w;.l:()Ljava/lang/Object;` @kind virtual;
  #L2db68e.  v1:= temp @kind object;
  #L2db690.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2db694.  call temp:= `invoke-WpGqRn0`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.invoke-WpGqRn0:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2db69a.  v1:= temp @kind object;
  #L2db69c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke-WpGqRn0`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.invoke-WpGqRn0:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2db6b0.  call temp:= `b`(v1) @signature `Lkotlinx/coroutines/channels/w;.b:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/w;` @kind static;
  #L2db6b6.  v1:= temp @kind object;
  #L2db6b8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2db6be.  v1:= temp @kind object;
  #L2db6c0.  v1:= (`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1`) v1 @kind object;
  #L2db6c4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2db6c8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2db6ce.  v1:= temp @kind object;
  #L2db6d0.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2db6e4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2db6ea.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.label` @type ^`int`;
  #L2db6ee.  if v0 != 0 then goto L2db74e;
  #L2db6f2.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2db6f8.  v4:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2db6fc.  v4:= (`kotlinx.coroutines.channels.w`) v4 @kind object;
  #L2db700.  call temp:= `l`(v4) @signature `Lkotlinx/coroutines/channels/w;.l:()Ljava/lang/Object;` @kind virtual;
  #L2db706.  v4:= temp @kind object;
  #L2db708.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2db70c.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.v` @kind boolean;
  #L2db710.  if v1 != 0 then goto L2db718;
  #L2db714.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L2db718.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1.$ticker` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L2db71c.  if v1 == 0 then goto L2db748;
  #L2db720.  call temp:= `e`(v4) @signature `Lkotlinx/coroutines/channels/w;.e:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L2db726.  v4:= temp @kind object;
  #L2db728.  if v4 != 0 then goto L2db746;
  #L2db72c.  v4:= new `kotlinx.coroutines.flow.internal.ChildCancelledException`;
  #L2db730.  call `<init>`(v4) @signature `Lkotlinx/coroutines/flow/internal/ChildCancelledException;.<init>:()V` @kind direct;
  #L2db736.  call `d`(v2, v4) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.d:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L2db73c.  v4:= `@@kotlinx.coroutines.flow.internal.o.c` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2db740.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L2db744.  goto L2db748;
  #L2db746.  throw v4;
  #L2db748.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2db74c.  return v4 @kind object;
  #L2db74e.  v4:= new `java.lang.IllegalStateException`;
  #L2db752.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2db756.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2db75c.  throw v4;
}
