record `kotlinx.coroutines.flow.q0` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.q0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.q0` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object) @signature `Lkotlinx/coroutines/flow/q0;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2de0e8.  v0.`kotlinx.coroutines.flow.q0.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L2de0ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2de0f2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.q0` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/q0;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2de0c8.  v2:= v0.`kotlinx.coroutines.flow.q0.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2de0cc.  v2.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v1 @kind object;
  #L2de0d0.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2de0d4.  return v1 @kind object;
}
