record `kotlinx.coroutines.flow.t1` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `kotlinx.coroutines.internal.k0` `@@kotlinx.coroutines.flow.t1.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/t1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2e2e10.  v0:= new `kotlinx.coroutines.internal.k0`;
  #L2e2e14.  v1:= "NO_VALUE" @kind object;
  #L2e2e18.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/k0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e2e1e.  `@@kotlinx.coroutines.flow.t1.a` @type ^`kotlinx.coroutines.internal.k0` := v0 @kind object;
  #L2e2e22.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object`[] v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/t1;.a:([Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2e2da4.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/flow/t1;.d:([Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L2e2daa.  v0:= temp @kind object;
  #L2e2dac.  return v0 @kind object;
}
procedure `void` `b`(`java.lang.Object`[] v0 @kind object, `long` v1 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/t1;.b:([Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2e2e34.  call `e`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/t1;.e:([Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L2e2e3a.  return @kind void;
}
procedure `kotlinx.coroutines.flow.d` `c`(`kotlinx.coroutines.flow.r1` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `int` v3 , `kotlinx.coroutines.channels.BufferOverflow` v4 @kind object) @signature `Lkotlinx/coroutines/flow/t1;.c:(Lkotlinx/coroutines/flow/r1;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2e2de0.  if v3 == 0 then goto L2e2dea;
  #L2e2de4.  v0:= -3I;
  #L2e2de6.  if v3 != v0 then goto L2e2df4;
  #L2e2dea.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L2e2dee.  if v4 != v0 then goto L2e2df4;
  #L2e2df2.  return v1 @kind object;
  #L2e2df4.  v0:= new `kotlinx.coroutines.flow.internal.f`;
  #L2e2df8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/f;.<init>:(Lkotlinx/coroutines/flow/d;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L2e2dfe.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`java.lang.Object`[] v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/t1;.d:([Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2e2dc0.  v2:= (`int`) v1 @kind l2i;
  #L2e2dc2.  v1:= length @variable v0;
  #L2e2dc4.  v1:= v1 + -1;
  #L2e2dc8.  v1:= v1 ^& v2 @kind int;
  #L2e2dca.  v0:= v0[v1] @kind object;
  #L2e2dce.  return v0 @kind object;
}
procedure `void` `e`(`java.lang.Object`[] v0 @kind object, `long` v1 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/t1;.e:([Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2e2e4c.  v2:= (`int`) v1 @kind l2i;
  #L2e2e4e.  v1:= length @variable v0;
  #L2e2e50.  v1:= v1 + -1;
  #L2e2e54.  v1:= v1 ^& v2 @kind int;
  #L2e2e56.  v0[v1]:= v3 @kind object;
  #L2e2e5a.  return @kind void;
}
