record `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlinx.coroutines.flow.e` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$downstream` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2db8b4.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L2db8b8.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$downstream` @type ^`kotlinx.coroutines.flow.e` := v2 @kind object;
  #L2db8bc.  v1:= 2I;
  #L2db8be.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2db8c4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2db890.  v3:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2`;
  #L2db894.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2db898.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$downstream` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2db89c.  call `<init>`(v3, v0, v1, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2db8a2.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2db7bc.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L2db7c0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2db7c4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2db7ca.  v1:= temp @kind object;
  #L2db7cc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` v0 @kind this, `kotlin.Unit` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2db7e0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2db7e6.  v1:= temp @kind object;
  #L2db7e8.  v1:= (`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2`) v1 @kind object;
  #L2db7ec.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2db7f0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2db7f6.  v1:= temp @kind object;
  #L2db7f8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db80c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2db812.  v0:= temp @kind object;
  #L2db814.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.label` @type ^`int`;
  #L2db818.  v2:= 1I;
  #L2db81a.  if v1 == 0 then goto L2db83a;
  #L2db81e.  if v1 != v2 then goto L2db82a;
  #L2db822.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2db828.  goto L2db878;
  #L2db82a.  v6:= new `java.lang.IllegalStateException`;
  #L2db82e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2db832.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2db838.  throw v6;
  #L2db83a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2db840.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$lastValue` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2db844.  v1:= v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L2db848.  if v1 != 0 then goto L2db852;
  #L2db84c.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2db850.  return v6 @kind object;
  #L2db852.  v3:= 0I;
  #L2db854.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v3 @kind object;
  #L2db858.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.$downstream` @type ^`kotlinx.coroutines.flow.e` @kind object;
  #L2db85c.  v4:= `@@kotlinx.coroutines.flow.internal.o.a` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2db860.  if v1 != v4 then goto L2db866;
  #L2db864.  v1:= v3 @kind object;
  #L2db866.  v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2.label` @type ^`int` := v2;
  #L2db86a.  call temp:= `emit`(v6, v1, v5) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2db870.  v6:= temp @kind object;
  #L2db872.  if v6 != v0 then goto L2db878;
  #L2db876.  return v0 @kind object;
  #L2db878.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2db87c.  return v6 @kind object;
}
