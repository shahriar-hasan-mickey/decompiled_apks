record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.$transform` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dfd08.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.$transform` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L2dfd0c.  v1:= 3I;
  #L2dfd0e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dfd14.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dfbfc.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfc00.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2dfc04.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2dfc08.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2dfc0e.  v1:= temp @kind object;
  #L2dfc10.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dfc24.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1`;
  #L2dfc28.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.$transform` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2dfc2c.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dfc32.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dfc36.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2dfc3a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dfc3e.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dfc44.  v3:= temp @kind object;
  #L2dfc46.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2dfc58.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dfc5e.  v0:= temp @kind object;
  #L2dfc60.  v1:= v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.label` @type ^`int`;
  #L2dfc64.  v2:= 2I;
  #L2dfc66.  v3:= 1I;
  #L2dfc68.  if v1 == 0 then goto L2dfc9c;
  #L2dfc6c.  if v1 == v3 then goto L2dfc8c;
  #L2dfc70.  if v1 != v2 then goto L2dfc7c;
  #L2dfc74.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfc7a.  goto L2dfcf0;
  #L2dfc7c.  v7:= new `java.lang.IllegalStateException`;
  #L2dfc80.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dfc84.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfc8a.  throw v7;
  #L2dfc8c.  v1:= v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dfc90.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfc94.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfc9a.  goto L2dfcd8;
  #L2dfc9c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfca2.  v7:= v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2dfca6.  v1:= v7 @kind object;
  #L2dfca8.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfcac.  v7:= v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2dfcb0.  v7:= (`java.lang.Object`[]) v7 @kind object;
  #L2dfcb4.  v4:= v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.$transform` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2dfcb8.  v5:= 0I;
  #L2dfcba.  v5:= v7[v5] @kind object;
  #L2dfcbe.  v7:= v7[v3] @kind object;
  #L2dfcc2.  v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2dfcc6.  v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.label` @type ^`int` := v3;
  #L2dfcca.  call temp:= `invoke`(v4, v5, v7, v6) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dfcd0.  v7:= temp @kind object;
  #L2dfcd2.  if v7 != v0 then goto L2dfcd8;
  #L2dfcd6.  return v0 @kind object;
  #L2dfcd8.  v3:= 0I;
  #L2dfcda.  v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dfcde.  v6.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1.label` @type ^`int` := v2;
  #L2dfce2.  call temp:= `emit`(v1, v7, v6) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dfce8.  v7:= temp @kind object;
  #L2dfcea.  if v7 != v0 then goto L2dfcf0;
  #L2dfcee.  return v0 @kind object;
  #L2dfcf0.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dfcf4.  return v7 @kind object;
}
