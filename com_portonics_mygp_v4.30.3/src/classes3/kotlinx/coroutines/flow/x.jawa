record `kotlinx.coroutines.flow.x` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.e` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `kotlin.jvm.internal.Ref$IntRef` `kotlinx.coroutines.flow.x.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.x` v0 @kind this, `kotlin.jvm.internal.Ref$IntRef` v1 @kind object) @signature `Lkotlinx/coroutines/flow/x;.<init>:(Lkotlin/jvm/internal/Ref$IntRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2da9a0.  v0.`kotlinx.coroutines.flow.x.b` @type ^`kotlin.jvm.internal.Ref$IntRef` := v1 @kind object;
  #L2da9a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2da9aa.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.x` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/x;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2da978.  v1:= v0.`kotlinx.coroutines.flow.x.b` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L2da97c.  v2:= v1.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L2da980.  v2:= v2 + 1;
  #L2da984.  v1.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v2;
  #L2da988.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2da98c.  return v1 @kind object;
}
