record `kotlinx.coroutines.flow.FlowKt__DelayKt` @kind class @AccessFlag ABSTRACT_SYNTHETIC {
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `a`(`kotlinx.coroutines.m0` v10 @kind object, `long` v11 , `long` v13 ) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt;.a:(Lkotlinx/coroutines/m0;JJ)Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2dbce4.  v0:= 1I;
  #L2dbce6.  v5:= 0I;
  #L2dbce8.  v6:= 0L;
  #L2dbcec.  v8:= lcmp(v11, v6);
  #L2dbcf0.  if v8 < 0 then goto L2dbcf8;
  #L2dbcf4.  v8:= 1I;
  #L2dbcf6.  goto L2dbcfa;
  #L2dbcf8.  v8:= 0I;
  #L2dbcfa.  v9:= " ms" @kind object;
  #L2dbcfe.  if v8 == 0 then goto L2dbd7c;
  #L2dbd02.  v8:= lcmp(v13, v6);
  #L2dbd06.  if v8 < 0 then goto L2dbd0c;
  #L2dbd0a.  goto L2dbd0e;
  #L2dbd0c.  v0:= 0I;
  #L2dbd0e.  if v0 == 0 then goto L2dbd40;
  #L2dbd12.  v6:= 0I;
  #L2dbd14.  v7:= 0I;
  #L2dbd16.  v8:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3`;
  #L2dbd1a.  v5:= 0I;
  #L2dbd1c.  v0:= v8 @kind object;
  #L2dbd1e.  v1:= v13 @kind wide;
  #L2dbd20.  v3:= v11 @kind wide;
  #L2dbd22.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$fixedPeriodTicker$3;.<init>:(JJLkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dbd28.  v5:= 1I;
  #L2dbd2a.  v0:= 0I;
  #L2dbd2c.  v1:= v10 @kind object;
  #L2dbd2e.  v2:= v6 @kind object;
  #L2dbd30.  v3:= v7;
  #L2dbd32.  v4:= v8 @kind object;
  #L2dbd34.  v6:= v0 @kind object;
  #L2dbd36.  call temp:= `d`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/channels/ProduceKt;.d:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind static;
  #L2dbd3c.  v0:= temp @kind object;
  #L2dbd3e.  return v0 @kind object;
  #L2dbd40.  v0:= new `java.lang.StringBuilder`;
  #L2dbd44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dbd4a.  v3:= "Expected non-negative initial delay, but has " @kind object;
  #L2dbd4e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd54.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd5a.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dbd66.  v0:= temp @kind object;
  #L2dbd68.  v1:= new `java.lang.IllegalArgumentException`;
  #L2dbd6c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dbd72.  v0:= temp @kind object;
  #L2dbd74.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dbd7a.  throw v1;
  #L2dbd7c.  v0:= new `java.lang.StringBuilder`;
  #L2dbd80.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dbd86.  v1:= "Expected non-negative delay, but has " @kind object;
  #L2dbd8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd90.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd96.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dbd9c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dbda2.  v0:= temp @kind object;
  #L2dbda4.  v1:= new `java.lang.IllegalArgumentException`;
  #L2dbda8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dbdae.  v0:= temp @kind object;
  #L2dbdb0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dbdb6.  throw v1;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `b`(`kotlinx.coroutines.m0` v0 @kind object, `long` v1 , `long` v3 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt;.b:(Lkotlinx/coroutines/m0;JJILjava/lang/Object;)Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2dbcc0.  v5:= v5 ^& 2;
  #L2dbcc4.  if v5 == 0 then goto L2dbcca;
  #L2dbcc8.  v3:= v1 @kind wide;
  #L2dbcca.  call temp:= `q`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/f;.q:(Lkotlinx/coroutines/m0;JJ)Lkotlinx/coroutines/channels/ReceiveChannel;` @kind static;
  #L2dbcd0.  v0:= temp @kind object;
  #L2dbcd2.  return v0 @kind object;
}
