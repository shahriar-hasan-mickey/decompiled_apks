record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.$transform` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$1` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2dfed4.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.$transform` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L2dfed8.  v1:= 3I;
  #L2dfeda.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dfee0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2dfd8c.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfd90.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2dfd94.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L2dfd98.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2dfd9e.  v1:= temp @kind object;
  #L2dfda0.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `kotlinx.coroutines.flow.e` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/e;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dfdb4.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2`;
  #L2dfdb8.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dfdbc.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2dfdc2.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dfdc6.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2dfdca.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dfdce.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2dfdd4.  v3:= temp @kind object;
  #L2dfdd6.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dfe30.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2dfe36.  v0:= temp @kind object;
  #L2dfe38.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.label` @type ^`int`;
  #L2dfe3c.  v2:= 2I;
  #L2dfe3e.  v3:= 1I;
  #L2dfe40.  if v1 == 0 then goto L2dfe74;
  #L2dfe44.  if v1 == v3 then goto L2dfe64;
  #L2dfe48.  if v1 != v2 then goto L2dfe54;
  #L2dfe4c.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfe52.  goto L2dfebe;
  #L2dfe54.  v6:= new `java.lang.IllegalStateException`;
  #L2dfe58.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2dfe5c.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfe62.  throw v6;
  #L2dfe64.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2dfe68.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfe6c.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfe72.  goto L2dfea6;
  #L2dfe74.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2dfe7a.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2dfe7e.  v1:= v6 @kind object;
  #L2dfe80.  v1:= (`kotlinx.coroutines.flow.e`) v1 @kind object;
  #L2dfe84.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$1` @type ^`java.lang.Object` @kind object;
  #L2dfe88.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L2dfe8c.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dfe90.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2dfe94.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.label` @type ^`int` := v3;
  #L2dfe98.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dfe9e.  v6:= temp @kind object;
  #L2dfea0.  if v6 != v0 then goto L2dfea6;
  #L2dfea4.  return v0 @kind object;
  #L2dfea6.  v3:= 0I;
  #L2dfea8.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` := v3 @kind object;
  #L2dfeac.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.label` @type ^`int` := v2;
  #L2dfeb0.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dfeb6.  v6:= temp @kind object;
  #L2dfeb8.  if v6 != v0 then goto L2dfebe;
  #L2dfebc.  return v0 @kind object;
  #L2dfebe.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dfec2.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2dfde8.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$0` @type ^`java.lang.Object` @kind object;
  #L2dfdec.  v3:= (`kotlinx.coroutines.flow.e`) v3 @kind object;
  #L2dfdf0.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.L$1` @type ^`java.lang.Object` @kind object;
  #L2dfdf4.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L2dfdf8.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2dfdfc.  call temp:= `invoke`(v1, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dfe02.  v0:= temp @kind object;
  #L2dfe04.  v1:= 0I;
  #L2dfe06.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2dfe0c.  call temp:= `emit`(v3, v0, v2) @signature `Lkotlinx/coroutines/flow/e;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2dfe12.  v3:= 1I;
  #L2dfe14.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2dfe1a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2dfe1e.  return v3 @kind object;
}
