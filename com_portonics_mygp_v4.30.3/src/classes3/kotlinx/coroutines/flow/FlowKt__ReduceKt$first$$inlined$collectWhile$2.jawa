record `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.e` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ddc40.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L2ddc44.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L2ddc48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ddc4e.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ddb5c.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1` @kind boolean;
  #L2ddb60.  if v0 == 0 then goto L2ddb82;
  #L2ddb64.  v0:= v6 @kind object;
  #L2ddb66.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1`) v0 @kind object;
  #L2ddb6a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.label` @type ^`int`;
  #L2ddb6e.  v2:= -2147483648I;
  #L2ddb72.  v3:= v1 ^& v2 @kind int;
  #L2ddb76.  if v3 == 0 then goto L2ddb82;
  #L2ddb7a.  v1:= v1 - v2 @kind int;
  #L2ddb7c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.label` @type ^`int` := v1;
  #L2ddb80.  goto L2ddb8c;
  #L2ddb82.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1`;
  #L2ddb86.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$first$$inlined$collectWhile$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2ddb8c.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.result` @type ^`java.lang.Object` @kind object;
  #L2ddb90.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2ddb96.  v1:= temp @kind object;
  #L2ddb98.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.label` @type ^`int`;
  #L2ddb9c.  v3:= 1I;
  #L2ddb9e.  if v2 == 0 then goto L2ddbca;
  #L2ddba2.  if v2 != v3 then goto L2ddbba;
  #L2ddba6.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2ddbaa.  v0:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2ddbae.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2`) v0 @kind object;
  #L2ddbb2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2ddbb8.  goto L2ddc00;
  #L2ddbba.  v5:= new `java.lang.IllegalStateException`;
  #L2ddbbe.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2ddbc2.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ddbc8.  throw v5;
  #L2ddbca.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2ddbd0.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2ddbd4.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2ddbd8.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.L$1` @type ^`java.lang.Object` := v5 @kind object;
  #L2ddbdc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1.label` @type ^`int` := v3;
  #L2ddbe0.  v2:= 6I;
  #L2ddbe2.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2ddbe8.  call temp:= `invoke`(v6, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ddbee.  v6:= temp @kind object;
  #L2ddbf0.  v0:= 7I;
  #L2ddbf2.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2ddbf8.  if v6 != v1 then goto L2ddbfe;
  #L2ddbfc.  return v1 @kind object;
  #L2ddbfe.  v0:= v4 @kind object;
  #L2ddc00.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L2ddc04.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2ddc0a.  v6:= temp;
  #L2ddc0c.  if v6 == 0 then goto L2ddc1a;
  #L2ddc10.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L2ddc14.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v5 @kind object;
  #L2ddc18.  v3:= 0I;
  #L2ddc1a.  if v3 == 0 then goto L2ddc24;
  #L2ddc1e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2ddc22.  return v5 @kind object;
  #L2ddc24.  v5:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L2ddc28.  call `<init>`(v5, v0) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/e;)V` @kind direct;
  #L2ddc2e.  throw v5;
}
