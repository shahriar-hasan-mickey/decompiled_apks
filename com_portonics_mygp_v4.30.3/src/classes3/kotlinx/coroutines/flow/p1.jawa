record `kotlinx.coroutines.flow.p1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.z1` @kind interface, `kotlinx.coroutines.flow.d` @kind interface, `kotlinx.coroutines.flow.internal.l` @kind interface {
  `kotlinx.coroutines.z1` `kotlinx.coroutines.flow.p1.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.flow.z1` `kotlinx.coroutines.flow.p1.c` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.p1` v0 @kind this, `kotlinx.coroutines.flow.z1` v1 @kind object, `kotlinx.coroutines.z1` v2 @kind object) @signature `Lkotlinx/coroutines/flow/p1;.<init>:(Lkotlinx/coroutines/flow/z1;Lkotlinx/coroutines/z1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e1ad0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e1ad6.  v0.`kotlinx.coroutines.flow.p1.b` @type ^`kotlinx.coroutines.z1` := v2 @kind object;
  #L2e1ada.  v0.`kotlinx.coroutines.flow.p1.c` @type ^`kotlinx.coroutines.flow.z1` := v1 @kind object;
  #L2e1ade.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.p1` v1 @kind this, `kotlinx.coroutines.flow.e` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/p1;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e1a94.  v0:= v1.`kotlinx.coroutines.flow.p1.c` @type ^`kotlinx.coroutines.flow.z1` @kind object;
  #L2e1a98.  call temp:= `a`(v0, v2, v3) @signature `Lkotlinx/coroutines/flow/r1;.a:(Lkotlinx/coroutines/flow/e;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2e1a9e.  v2:= temp @kind object;
  #L2e1aa0.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.d` `b`(`kotlinx.coroutines.flow.p1` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `int` v2 , `kotlinx.coroutines.channels.BufferOverflow` v3 @kind object) @signature `Lkotlinx/coroutines/flow/p1;.b:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @AccessFlag PUBLIC {
    temp;

  #L2e1ab4.  call temp:= `d`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/a2;.d:(Lkotlinx/coroutines/flow/z1;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/d;` @kind static;
  #L2e1aba.  v1:= temp @kind object;
  #L2e1abc.  return v1 @kind object;
}
