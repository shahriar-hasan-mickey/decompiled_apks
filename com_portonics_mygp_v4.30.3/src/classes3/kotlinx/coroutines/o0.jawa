record `kotlinx.coroutines.o0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `boolean` `@@kotlinx.coroutines.o0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.o0.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.o0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicLong` `@@kotlinx.coroutines.o0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/o0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2cc7b4.  v0:= "kotlinx.coroutines.debug" @kind object;
  #L2cc7b8.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/l0;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2cc7be.  v0:= temp @kind object;
  #L2cc7c0.  v1:= 0I;
  #L2cc7c2.  v2:= 1I;
  #L2cc7c4.  if v0 == 0 then goto L2cc87c;
  #L2cc7c8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2cc7ce.  v3:= temp;
  #L2cc7d0.  if v3 == 0 then goto L2cc828;
  #L2cc7d4.  v4:= 3551I;
  #L2cc7d8.  if v3 == v4 then goto L2cc816;
  #L2cc7dc.  v4:= 109935I;
  #L2cc7e2.  if v3 == v4 then goto L2cc802;
  #L2cc7e6.  v4:= 3005871I;
  #L2cc7ec.  if v3 != v4 then goto L2cc83c;
  #L2cc7f0.  v3:= "auto" @kind object;
  #L2cc7f4.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cc7fa.  v3:= temp;
  #L2cc7fc.  if v3 == 0 then goto L2cc83c;
  #L2cc800.  goto L2cc87c;
  #L2cc802.  v3:= "off" @kind object;
  #L2cc806.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cc80c.  v3:= temp;
  #L2cc80e.  if v3 == 0 then goto L2cc83c;
  #L2cc812.  v0:= 0I;
  #L2cc814.  goto L2cc884;
  #L2cc816.  v3:= "on" @kind object;
  #L2cc81a.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cc820.  v3:= temp;
  #L2cc822.  if v3 == 0 then goto L2cc83c;
  #L2cc826.  goto L2cc838;
  #L2cc828.  v3:= "" @kind object;
  #L2cc82c.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2cc832.  v3:= temp;
  #L2cc834.  if v3 == 0 then goto L2cc83c;
  #L2cc838.  v0:= 1I;
  #L2cc83a.  goto L2cc884;
  #L2cc83c.  v1:= new `java.lang.IllegalStateException`;
  #L2cc840.  v2:= new `java.lang.StringBuilder`;
  #L2cc844.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cc84a.  v3:= "System property 'kotlinx.coroutines.debug' has unrecognized value '" @kind object;
  #L2cc84e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cc854.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cc85a.  v0:= 39I;
  #L2cc85e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cc864.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cc86a.  v0:= temp @kind object;
  #L2cc86c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cc872.  v0:= temp @kind object;
  #L2cc874.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cc87a.  throw v1;
  #L2cc87c.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2cc882.  v0:= temp;
  #L2cc884.  `@@kotlinx.coroutines.o0.b` @type ^`boolean` := v0 @kind boolean;
  #L2cc888.  if v0 == 0 then goto L2cc89e;
  #L2cc88c.  v0:= "kotlinx.coroutines.stacktrace.recovery" @kind object;
  #L2cc890.  call temp:= `e`(v0, v2) @signature `Lkotlinx/coroutines/internal/l0;.e:(Ljava/lang/String;Z)Z` @kind static;
  #L2cc896.  v0:= temp;
  #L2cc898.  if v0 == 0 then goto L2cc89e;
  #L2cc89c.  v1:= 1I;
  #L2cc89e.  `@@kotlinx.coroutines.o0.c` @type ^`boolean` := v1 @kind boolean;
  #L2cc8a2.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L2cc8a6.  v1:= 0L;
  #L2cc8aa.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V` @kind direct;
  #L2cc8b0.  `@@kotlinx.coroutines.o0.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L2cc8b4.  return @kind void;
}
procedure `boolean` `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cc754.  v0:= `@@kotlinx.coroutines.o0.a` @type ^`boolean` @kind boolean;
  #L2cc758.  return v0;
}
procedure `java.util.concurrent.atomic.AtomicLong` `b`() @signature `Lkotlinx/coroutines/o0;.b:()Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cc79c.  v0:= `@@kotlinx.coroutines.o0.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L2cc7a0.  return v0 @kind object;
}
procedure `boolean` `c`() @signature `Lkotlinx/coroutines/o0;.c:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cc76c.  v0:= `@@kotlinx.coroutines.o0.b` @type ^`boolean` @kind boolean;
  #L2cc770.  return v0;
}
procedure `boolean` `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2cc784.  v0:= `@@kotlinx.coroutines.o0.c` @type ^`boolean` @kind boolean;
  #L2cc788.  return v0;
}
