record `kotlinx.coroutines.AwaitKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.Object` `a`(`java.util.Collection` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/AwaitKt;.a:(Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c9b20.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.AwaitKt$joinAll$3` @kind boolean;
  #L2c9b24.  if v0 == 0 then goto L2c9b46;
  #L2c9b28.  v0:= v5 @kind object;
  #L2c9b2a.  v0:= (`kotlinx.coroutines.AwaitKt$joinAll$3`) v0 @kind object;
  #L2c9b2e.  v1:= v0.`kotlinx.coroutines.AwaitKt$joinAll$3.label` @type ^`int`;
  #L2c9b32.  v2:= -2147483648I;
  #L2c9b36.  v3:= v1 ^& v2 @kind int;
  #L2c9b3a.  if v3 == 0 then goto L2c9b46;
  #L2c9b3e.  v1:= v1 - v2 @kind int;
  #L2c9b40.  v0.`kotlinx.coroutines.AwaitKt$joinAll$3.label` @type ^`int` := v1;
  #L2c9b44.  goto L2c9b50;
  #L2c9b46.  v0:= new `kotlinx.coroutines.AwaitKt$joinAll$3`;
  #L2c9b4a.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/AwaitKt$joinAll$3;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c9b50.  v5:= v0.`kotlinx.coroutines.AwaitKt$joinAll$3.result` @type ^`java.lang.Object` @kind object;
  #L2c9b54.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c9b5a.  v1:= temp @kind object;
  #L2c9b5c.  v2:= v0.`kotlinx.coroutines.AwaitKt$joinAll$3.label` @type ^`int`;
  #L2c9b60.  v3:= 1I;
  #L2c9b62.  if v2 == 0 then goto L2c9b8a;
  #L2c9b66.  if v2 != v3 then goto L2c9b7a;
  #L2c9b6a.  v4:= v0.`kotlinx.coroutines.AwaitKt$joinAll$3.L$0` @type ^`java.lang.Object` @kind object;
  #L2c9b6e.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L2c9b72.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c9b78.  goto L2c9b98;
  #L2c9b7a.  v4:= new `java.lang.IllegalStateException`;
  #L2c9b7e.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c9b82.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9b88.  throw v4;
  #L2c9b8a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c9b90.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9b96.  v4:= temp @kind object;
  #L2c9b98.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9b9e.  v5:= temp;
  #L2c9ba0.  if v5 == 0 then goto L2c9bc6;
  #L2c9ba4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9baa.  v5:= temp @kind object;
  #L2c9bac.  v5:= (`kotlinx.coroutines.z1`) v5 @kind object;
  #L2c9bb0.  v0.`kotlinx.coroutines.AwaitKt$joinAll$3.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2c9bb4.  v0.`kotlinx.coroutines.AwaitKt$joinAll$3.label` @type ^`int` := v3;
  #L2c9bb8.  call temp:= `k`(v5, v0) @signature `Lkotlinx/coroutines/z1;.k:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2c9bbe.  v5:= temp @kind object;
  #L2c9bc0.  if v5 != v1 then goto L2c9b98;
  #L2c9bc4.  return v1 @kind object;
  #L2c9bc6.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c9bca.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.z1`[] v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/AwaitKt;.b:([Lkotlinx/coroutines/z1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c9bdc.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.AwaitKt$joinAll$1` @kind boolean;
  #L2c9be0.  if v0 == 0 then goto L2c9c02;
  #L2c9be4.  v0:= v7 @kind object;
  #L2c9be6.  v0:= (`kotlinx.coroutines.AwaitKt$joinAll$1`) v0 @kind object;
  #L2c9bea.  v1:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.label` @type ^`int`;
  #L2c9bee.  v2:= -2147483648I;
  #L2c9bf2.  v3:= v1 ^& v2 @kind int;
  #L2c9bf6.  if v3 == 0 then goto L2c9c02;
  #L2c9bfa.  v1:= v1 - v2 @kind int;
  #L2c9bfc.  v0.`kotlinx.coroutines.AwaitKt$joinAll$1.label` @type ^`int` := v1;
  #L2c9c00.  goto L2c9c0c;
  #L2c9c02.  v0:= new `kotlinx.coroutines.AwaitKt$joinAll$1`;
  #L2c9c06.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/AwaitKt$joinAll$1;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c9c0c.  v7:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.result` @type ^`java.lang.Object` @kind object;
  #L2c9c10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c9c16.  v1:= temp @kind object;
  #L2c9c18.  v2:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.label` @type ^`int`;
  #L2c9c1c.  v3:= 1I;
  #L2c9c1e.  if v2 == 0 then goto L2c9c58;
  #L2c9c22.  if v2 != v3 then goto L2c9c48;
  #L2c9c26.  v6:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.I$1` @type ^`int`;
  #L2c9c2a.  v2:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.I$0` @type ^`int`;
  #L2c9c2e.  v4:= v0.`kotlinx.coroutines.AwaitKt$joinAll$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c9c32.  v4:= (`kotlinx.coroutines.z1`[]) v4 @kind object;
  #L2c9c36.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c9c3c.  v7:= v4 @kind object;
  #L2c9c3e.  v5:= v1 @kind object;
  #L2c9c40.  v1:= v0 @kind object;
  #L2c9c42.  v0:= v2;
  #L2c9c44.  v2:= v5 @kind object;
  #L2c9c46.  goto L2c9c6c;
  #L2c9c48.  v6:= new `java.lang.IllegalStateException`;
  #L2c9c4c.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c9c50.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9c56.  throw v6;
  #L2c9c58.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c9c5e.  v7:= 0I;
  #L2c9c60.  v2:= length @variable v6;
  #L2c9c62.  v7:= v6 @kind object;
  #L2c9c64.  v6:= v2;
  #L2c9c66.  v2:= v1 @kind object;
  #L2c9c68.  v1:= v0 @kind object;
  #L2c9c6a.  v0:= 0I;
  #L2c9c6c.  if v0 >= v6 then goto L2c9c96;
  #L2c9c70.  v4:= v7[v0] @kind object;
  #L2c9c74.  v0:= v0 + 1;
  #L2c9c78.  v1.`kotlinx.coroutines.AwaitKt$joinAll$1.L$0` @type ^`java.lang.Object` := v7 @kind object;
  #L2c9c7c.  v1.`kotlinx.coroutines.AwaitKt$joinAll$1.I$0` @type ^`int` := v0;
  #L2c9c80.  v1.`kotlinx.coroutines.AwaitKt$joinAll$1.I$1` @type ^`int` := v6;
  #L2c9c84.  v1.`kotlinx.coroutines.AwaitKt$joinAll$1.label` @type ^`int` := v3;
  #L2c9c88.  call temp:= `k`(v4, v1) @signature `Lkotlinx/coroutines/z1;.k:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L2c9c8e.  v4:= temp @kind object;
  #L2c9c90.  if v4 != v2 then goto L2c9c6c;
  #L2c9c94.  return v2 @kind object;
  #L2c9c96.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c9c9a.  return v6 @kind object;
}
