record `kotlinx.coroutines.v` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.a2` @kind class, `kotlinx.coroutines.u` @kind interface {
  `kotlinx.coroutines.w` `kotlinx.coroutines.v.f` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.v` v0 @kind this, `kotlinx.coroutines.w` v1 @kind object) @signature `Lkotlinx/coroutines/v;.<init>:(Lkotlinx/coroutines/w;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cb318.  call `<init>`(v0) @signature `Lkotlinx/coroutines/a2;.<init>:()V` @kind direct;
  #L2cb31e.  v0.`kotlinx.coroutines.v.f` @type ^`kotlinx.coroutines.w` := v1 @kind object;
  #L2cb322.  return @kind void;
}
procedure `void` `R`(`kotlinx.coroutines.v` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/v;.R:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cb334.  v2:= v1.`kotlinx.coroutines.v.f` @type ^`kotlinx.coroutines.w` @kind object;
  #L2cb338.  call temp:= `S`(v1) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cb33e.  v0:= temp @kind object;
  #L2cb340.  call `s`(v2, v0) @signature `Lkotlinx/coroutines/w;.s:(Lkotlinx/coroutines/q2;)V` @kind interface;
  #L2cb346.  return @kind void;
}
procedure `boolean` `f`(`kotlinx.coroutines.v` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/v;.f:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cb2b8.  call temp:= `S`(v1) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cb2be.  v0:= temp @kind object;
  #L2cb2c0.  call temp:= `M`(v0, v2) @signature `Lkotlinx/coroutines/j2;.M:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L2cb2c6.  v2:= temp;
  #L2cb2c8.  return v2;
}
procedure `kotlinx.coroutines.z1` `getParent`(`kotlinx.coroutines.v` v1 @kind this) @signature `Lkotlinx/coroutines/v;.getParent:()Lkotlinx/coroutines/z1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cb2fc.  call temp:= `S`(v1) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cb302.  v0:= temp @kind object;
  #L2cb304.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.v` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/v;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cb2dc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2cb2e0.  call `R`(v0, v1) @signature `Lkotlinx/coroutines/v;.R:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2cb2e6.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2cb2ea.  return v1 @kind object;
}
