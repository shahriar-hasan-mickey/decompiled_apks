record `kotlinx.coroutines.b1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.f2` @kind class {
  `kotlinx.coroutines.z0` `kotlinx.coroutines.b1.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.b1` v0 @kind this, `kotlinx.coroutines.z0` v1 @kind object) @signature `Lkotlinx/coroutines/b1;.<init>:(Lkotlinx/coroutines/z0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cda10.  call `<init>`(v0) @signature `Lkotlinx/coroutines/f2;.<init>:()V` @kind direct;
  #L2cda16.  v0.`kotlinx.coroutines.b1.f` @type ^`kotlinx.coroutines.z0` := v1 @kind object;
  #L2cda1a.  return @kind void;
}
procedure `void` `R`(`kotlinx.coroutines.b1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/b1;.R:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L2cda2c.  v1:= v0.`kotlinx.coroutines.b1.f` @type ^`kotlinx.coroutines.z0` @kind object;
  #L2cda30.  call `dispose`(v1) @signature `Lkotlinx/coroutines/z0;.dispose:()V` @kind interface;
  #L2cda36.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.b1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/b1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cd9f0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2cd9f4.  call `R`(v0, v1) @signature `Lkotlinx/coroutines/b1;.R:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2cd9fa.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2cd9fe.  return v1 @kind object;
}
