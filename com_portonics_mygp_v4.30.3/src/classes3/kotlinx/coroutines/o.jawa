record `kotlinx.coroutines.o` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.coroutines.Continuation` @kind interface {
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/o;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `i`(`kotlin.jvm.functions.Function1` v0 @kind object) @signature `Lkotlinx/coroutines/o;.i:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `j`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/o;.j:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `l`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/o;.l:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `n`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/o;.n:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `r`(`java.lang.Object` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/o;.r:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `t`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/o;.t:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `z`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/o;.z:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
