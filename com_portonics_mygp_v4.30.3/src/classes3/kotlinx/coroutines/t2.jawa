record `kotlinx.coroutines.t2` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.t2.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.o` `kotlinx.coroutines.t2.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.t2` v0 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v1 @kind object, `kotlinx.coroutines.o` v2 @kind object) @signature `Lkotlinx/coroutines/t2;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d03cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d03d2.  v0.`kotlinx.coroutines.t2.b` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v1 @kind object;
  #L2d03d6.  v0.`kotlinx.coroutines.t2.c` @type ^`kotlinx.coroutines.o` := v2 @kind object;
  #L2d03da.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.t2` v3 @kind this) @signature `Lkotlinx/coroutines/t2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d03ec.  v0:= v3.`kotlinx.coroutines.t2.c` @type ^`kotlinx.coroutines.o` @kind object;
  #L2d03f0.  v1:= v3.`kotlinx.coroutines.t2.b` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2d03f4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d03f8.  call `n`(v0, v1, v2) @signature `Lkotlinx/coroutines/o;.n:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @kind interface;
  #L2d03fe.  return @kind void;
}
