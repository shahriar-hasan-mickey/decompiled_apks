record `kotlinx.coroutines.q0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.i1` @kind class, `java.lang.Runnable` @kind interface {
}
global `java.lang.Thread` `@@kotlinx.coroutines.q0._thread` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@kotlinx.coroutines.q0.debugStatus` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `kotlinx.coroutines.q0` `@@kotlinx.coroutines.q0.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlinx.coroutines.q0.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/q0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ccba4.  v0:= new `kotlinx.coroutines.q0`;
  #L2ccba8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/q0;.<init>:()V` @kind direct;
  #L2ccbae.  `@@kotlinx.coroutines.q0.h` @type ^`kotlinx.coroutines.q0` := v0 @kind object;
  #L2ccbb2.  v1:= 0I;
  #L2ccbb4.  v2:= 1I;
  #L2ccbb6.  v3:= 0I;
  #L2ccbb8.  call `X0`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/d1;.X0:(Lkotlinx/coroutines/d1;ZILjava/lang/Object;)V` @kind static;
  #L2ccbbe.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2ccbc2.  v1:= 1000L;
  #L2ccbc6.  v3:= "kotlinx.coroutines.DefaultExecutor.keepAlive" @kind object;
  #L2ccbca.  call temp:= `getLong`(v3, v1) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L2ccbd0.  v1:= temp @kind object;
  #L2ccbd2.  goto L2ccbdc;
  #L2ccbd4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2ccbda.  v1:= temp @kind object;
  #L2ccbdc.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2ccbe2.  v1:= temp @kind wide;
  #L2ccbe4.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L2ccbea.  v0:= temp @kind wide;
  #L2ccbec.  `@@kotlinx.coroutines.q0.i` @type ^`long` := v0 @kind wide;
  #L2ccbf0.  return @kind void;
  catch `java.lang.SecurityException` @[L2ccbc6..L2ccbd2] goto L2ccbd4;
}
procedure `void` `<init>`(`kotlinx.coroutines.q0` v0 @kind this) @signature `Lkotlinx/coroutines/q0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ccc14.  call `<init>`(v0) @signature `Lkotlinx/coroutines/i1;.<init>:()V` @kind direct;
  #L2ccc1a.  return @kind void;
}
procedure `void` `t1`(`kotlinx.coroutines.q0` v1 @kind this) @signature `Lkotlinx/coroutines/q0;.t1:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ccc2c.  @monitorenter v1
  #L2ccc2e.  call temp:= `w1`(v1) @signature `Lkotlinx/coroutines/q0;.w1:()Z` @kind direct;
  #L2ccc34.  v0:= temp;
  #L2ccc36.  if v0 != 0 then goto L2ccc3e;
  #L2ccc3a.  @monitorexit v1
  #L2ccc3c.  return @kind void;
  #L2ccc3e.  v0:= 3I;
  #L2ccc40.  `@@kotlinx.coroutines.q0.debugStatus` @type ^`int` := v0;
  #L2ccc44.  call `n1`(v1) @signature `Lkotlinx/coroutines/i1;.n1:()V` @kind virtual;
  #L2ccc4a.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2ccc50.  @monitorexit v1
  #L2ccc52.  return @kind void;
  #L2ccc54.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ccc56.  @monitorexit v1
  #L2ccc58.  throw v0;
  catch `java.lang.Throwable` @[L2ccc2e..L2ccc36] goto L2ccc54;
  catch `java.lang.Throwable` @[L2ccc40..L2ccc50] goto L2ccc54;
}
procedure `java.lang.Thread` `u1`(`kotlinx.coroutines.q0` v2 @kind this) @signature `Lkotlinx/coroutines/q0;.u1:()Ljava/lang/Thread;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2ccb14.  @monitorenter v2
  #L2ccb16.  v0:= `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` @kind object;
  #L2ccb1a.  if v0 != 0 then goto L2ccb3e;
  #L2ccb1e.  v0:= new `java.lang.Thread`;
  #L2ccb22.  v1:= "kotlinx.coroutines.DefaultExecutor" @kind object;
  #L2ccb26.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L2ccb2c.  `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L2ccb30.  v1:= 1I;
  #L2ccb32.  call `setDaemon`(v0, v1) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L2ccb38.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L2ccb3e.  @monitorexit v2
  #L2ccb40.  return v0 @kind object;
  #L2ccb42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ccb44.  @monitorexit v2
  #L2ccb46.  throw v0;
  catch `java.lang.Throwable` @[L2ccb16..L2ccb3e] goto L2ccb42;
}
procedure `boolean` `v1`(`kotlinx.coroutines.q0` v2 @kind this) @signature `Lkotlinx/coroutines/q0;.v1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2cca74.  v0:= `@@kotlinx.coroutines.q0.debugStatus` @type ^`int`;
  #L2cca78.  v1:= 4I;
  #L2cca7a.  if v0 != v1 then goto L2cca82;
  #L2cca7e.  v0:= 1I;
  #L2cca80.  goto L2cca84;
  #L2cca82.  v0:= 0I;
  #L2cca84.  return v0;
}
procedure `boolean` `w1`(`kotlinx.coroutines.q0` v2 @kind this) @signature `Lkotlinx/coroutines/q0;.w1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2cca98.  v0:= `@@kotlinx.coroutines.q0.debugStatus` @type ^`int`;
  #L2cca9c.  v1:= 2I;
  #L2cca9e.  if v0 == v1 then goto L2ccaae;
  #L2ccaa2.  v1:= 3I;
  #L2ccaa4.  if v0 != v1 then goto L2ccaaa;
  #L2ccaa8.  goto L2ccaae;
  #L2ccaaa.  v0:= 0I;
  #L2ccaac.  goto L2ccab0;
  #L2ccaae.  v0:= 1I;
  #L2ccab0.  return v0;
}
procedure `boolean` `x1`(`kotlinx.coroutines.q0` v1 @kind this) @signature `Lkotlinx/coroutines/q0;.x1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ccac4.  @monitorenter v1
  #L2ccac6.  call temp:= `w1`(v1) @signature `Lkotlinx/coroutines/q0;.w1:()Z` @kind direct;
  #L2ccacc.  v0:= temp;
  #L2ccace.  if v0 == 0 then goto L2ccad8;
  #L2ccad2.  v0:= 0I;
  #L2ccad4.  @monitorexit v1
  #L2ccad6.  return v0;
  #L2ccad8.  v0:= 1I;
  #L2ccada.  `@@kotlinx.coroutines.q0.debugStatus` @type ^`int` := v0;
  #L2ccade.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2ccae4.  @monitorexit v1
  #L2ccae6.  return v0;
  #L2ccae8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ccaea.  @monitorexit v1
  #L2ccaec.  throw v0;
  catch `java.lang.Throwable` @[L2ccac6..L2ccace] goto L2ccae8;
  catch `java.lang.Throwable` @[L2ccada..L2ccae4] goto L2ccae8;
}
procedure `void` `y1`(`kotlinx.coroutines.q0` v2 @kind this) @signature `Lkotlinx/coroutines/q0;.y1:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2cce80.  v0:= new `java.util.concurrent.RejectedExecutionException`;
  #L2cce84.  v1:= "DefaultExecutor was shut down. This error indicates that Dispatchers.shutdown() was invoked prior to completion of exiting coroutines, leaving coroutines in incomplete state. Please refer to Dispatchers.shutdown documentation for more details" @kind object;
  #L2cce88.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cce8e.  throw v0;
}
procedure `java.lang.Thread` `d1`(`kotlinx.coroutines.q0` v1 @kind this) @signature `Lkotlinx/coroutines/q0;.d1:()Ljava/lang/Thread;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2ccb64.  v0:= `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` @kind object;
  #L2ccb68.  if v0 != 0 then goto L2ccb74;
  #L2ccb6c.  call temp:= `u1`(v1) @signature `Lkotlinx/coroutines/q0;.u1:()Ljava/lang/Thread;` @kind direct;
  #L2ccb72.  v0:= temp @kind object;
  #L2ccb74.  return v0 @kind object;
}
procedure `void` `e1`(`kotlinx.coroutines.q0` v0 @kind this, `long` v1 , `kotlinx.coroutines.g1` v3 @kind object) @signature `Lkotlinx/coroutines/q0;.e1:(JLkotlinx/coroutines/g1;)V` @AccessFlag PROTECTED {
    temp;

  #L2cccac.  call `y1`(v0) @signature `Lkotlinx/coroutines/q0;.y1:()V` @kind direct;
  #L2cccb2.  return @kind void;
}
procedure `void` `j1`(`kotlinx.coroutines.q0` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/q0;.j1:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ccc80.  call temp:= `v1`(v1) @signature `Lkotlinx/coroutines/q0;.v1:()Z` @kind direct;
  #L2ccc86.  v0:= temp;
  #L2ccc88.  if v0 == 0 then goto L2ccc92;
  #L2ccc8c.  call `y1`(v1) @signature `Lkotlinx/coroutines/q0;.y1:()V` @kind direct;
  #L2ccc92.  call `j1`(v1, v2) @signature `Lkotlinx/coroutines/i1;.j1:(Ljava/lang/Runnable;)V` @kind super;
  #L2ccc98.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.q0` v12 @kind this) @signature `Lkotlinx/coroutines/q0;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2cccc4.  v0:= `@@kotlinx.coroutines.a3.a` @type ^`kotlinx.coroutines.a3` @kind object;
  #L2cccc8.  call `d`(v0, v12) @signature `Lkotlinx/coroutines/a3;.d:(Lkotlinx/coroutines/d1;)V` @kind virtual;
  #L2cccce.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2cccd4.  v0:= temp @kind object;
  #L2cccd6.  v1:= 0I;
  #L2cccd8.  if v0 != 0 then goto L2cce26;
  #L2cccdc.  call temp:= `x1`(v12) @signature `Lkotlinx/coroutines/q0;.x1:()Z` @kind direct;
  #L2ccce2.  v0:= temp;
  #L2ccce4.  if v0 != 0 then goto L2ccd14;
  #L2ccce8.  `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` := v1 @kind object;
  #L2cccec.  call `t1`(v12) @signature `Lkotlinx/coroutines/q0;.t1:()V` @kind direct;
  #L2cccf2.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2cccf8.  v0:= temp @kind object;
  #L2cccfa.  if v0 != 0 then goto L2ccd12;
  #L2cccfe.  call temp:= `l1`(v12) @signature `Lkotlinx/coroutines/i1;.l1:()Z` @kind virtual;
  #L2ccd04.  v0:= temp;
  #L2ccd06.  if v0 != 0 then goto L2ccd10;
  #L2ccd0a.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/q0;.d1:()Ljava/lang/Thread;` @kind virtual;
  #L2ccd10.  return @kind void;
  #L2ccd12.  throw v1;
  #L2ccd14.  v2:= 9223372036854775807L;
  #L2ccd1e.  v4:= v2 @kind wide;
  #L2ccd20.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L2ccd26.  call temp:= `a1`(v12) @signature `Lkotlinx/coroutines/i1;.a1:()J` @kind virtual;
  #L2ccd2c.  v6:= temp @kind wide;
  #L2ccd2e.  v8:= 0L;
  #L2ccd32.  v0:= lcmp(v6, v2);
  #L2ccd36.  if v0 != 0 then goto L2ccda0;
  #L2ccd3a.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ccd40.  v0:= temp @kind object;
  #L2ccd42.  if v0 != 0 then goto L2ccd9e;
  #L2ccd46.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L2ccd4c.  v10:= temp @kind wide;
  #L2ccd4e.  v0:= lcmp(v4, v2);
  #L2ccd52.  if v0 != 0 then goto L2ccd5c;
  #L2ccd56.  v4:= `@@kotlinx.coroutines.q0.i` @type ^`long` @kind wide;
  #L2ccd5a.  v4:= v4 + v10 @kind long;
  #L2ccd5c.  v10:= v4 - v10 @kind long;
  #L2ccd60.  v0:= lcmp(v10, v8);
  #L2ccd64.  if v0 > 0 then goto L2ccd94;
  #L2ccd68.  `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` := v1 @kind object;
  #L2ccd6c.  call `t1`(v12) @signature `Lkotlinx/coroutines/q0;.t1:()V` @kind direct;
  #L2ccd72.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ccd78.  v0:= temp @kind object;
  #L2ccd7a.  if v0 != 0 then goto L2ccd92;
  #L2ccd7e.  call temp:= `l1`(v12) @signature `Lkotlinx/coroutines/i1;.l1:()Z` @kind virtual;
  #L2ccd84.  v0:= temp;
  #L2ccd86.  if v0 != 0 then goto L2ccd90;
  #L2ccd8a.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/q0;.d1:()Ljava/lang/Thread;` @kind virtual;
  #L2ccd90.  return @kind void;
  #L2ccd92.  throw v1;
  #L2ccd94.  call temp:= `coerceAtMost`(v6, v10) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(JJ)J` @kind static;
  #L2ccd9a.  v6:= temp @kind wide;
  #L2ccd9c.  goto L2ccda2;
  #L2ccd9e.  throw v1;
  #L2ccda0.  v4:= v2 @kind wide;
  #L2ccda2.  v0:= lcmp(v6, v8);
  #L2ccda6.  if v0 <= 0 then goto L2ccd20;
  #L2ccdaa.  call temp:= `w1`(v12) @signature `Lkotlinx/coroutines/q0;.w1:()Z` @kind direct;
  #L2ccdb0.  v0:= temp;
  #L2ccdb2.  if v0 == 0 then goto L2ccde2;
  #L2ccdb6.  `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` := v1 @kind object;
  #L2ccdba.  call `t1`(v12) @signature `Lkotlinx/coroutines/q0;.t1:()V` @kind direct;
  #L2ccdc0.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ccdc6.  v0:= temp @kind object;
  #L2ccdc8.  if v0 != 0 then goto L2ccde0;
  #L2ccdcc.  call temp:= `l1`(v12) @signature `Lkotlinx/coroutines/i1;.l1:()Z` @kind virtual;
  #L2ccdd2.  v0:= temp;
  #L2ccdd4.  if v0 != 0 then goto L2ccdde;
  #L2ccdd8.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/q0;.d1:()Ljava/lang/Thread;` @kind virtual;
  #L2ccdde.  return @kind void;
  #L2ccde0.  throw v1;
  #L2ccde2.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2ccde8.  v0:= temp @kind object;
  #L2ccdea.  if v0 != 0 then goto L2ccdf6;
  #L2ccdee.  call `parkNanos`(v12, v6) @signature `Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V` @kind static;
  #L2ccdf4.  goto L2ccd20;
  #L2ccdf6.  throw v1;
  #L2ccdf8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ccdfa.  `@@kotlinx.coroutines.q0._thread` @type ^`java.lang.Thread` := v1 @kind object;
  #L2ccdfe.  call `t1`(v12) @signature `Lkotlinx/coroutines/q0;.t1:()V` @kind direct;
  #L2cce04.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2cce0a.  v2:= temp @kind object;
  #L2cce0c.  if v2 != 0 then goto L2cce24;
  #L2cce10.  call temp:= `l1`(v12) @signature `Lkotlinx/coroutines/i1;.l1:()Z` @kind virtual;
  #L2cce16.  v1:= temp;
  #L2cce18.  if v1 != 0 then goto L2cce22;
  #L2cce1c.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/q0;.d1:()Ljava/lang/Thread;` @kind virtual;
  #L2cce22.  throw v0;
  #L2cce24.  throw v1;
  #L2cce26.  goto L2cce2a;
  #L2cce28.  throw v1;
  #L2cce2a.  goto L2cce28;
  catch `java.lang.Throwable` @[L2cccdc..L2ccce4] goto L2ccdf8;
  catch `java.lang.Throwable` @[L2ccd20..L2ccd5a] goto L2ccdf8;
  catch `java.lang.Throwable` @[L2ccd94..L2ccdb2] goto L2ccdf8;
  catch `java.lang.Throwable` @[L2ccde2..L2ccdf8] goto L2ccdf8;
}
procedure `void` `shutdown`(`kotlinx.coroutines.q0` v1 @kind this) @signature `Lkotlinx/coroutines/q0;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cce60.  v0:= 4I;
  #L2cce62.  `@@kotlinx.coroutines.q0.debugStatus` @type ^`int` := v0;
  #L2cce66.  call `shutdown`(v1) @signature `Lkotlinx/coroutines/i1;.shutdown:()V` @kind super;
  #L2cce6c.  return @kind void;
}
procedure `kotlinx.coroutines.z0` `v`(`kotlinx.coroutines.q0` v0 @kind this, `long` v1 , `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object) @signature `Lkotlinx/coroutines/q0;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @AccessFlag PUBLIC {
    temp;

  #L2ccb88.  call temp:= `q1`(v0, v1, v3) @signature `Lkotlinx/coroutines/i1;.q1:(JLjava/lang/Runnable;)Lkotlinx/coroutines/z0;` @kind virtual;
  #L2ccb8e.  v1:= temp @kind object;
  #L2ccb90.  return v1 @kind object;
}
