record `kotlinx.coroutines.TimeoutCancellationException` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `kotlinx.coroutines.e0` @kind interface {
  `kotlinx.coroutines.z1` `kotlinx.coroutines.TimeoutCancellationException.coroutine` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.TimeoutCancellationException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d0814.  v0:= 0I;
  #L2d0816.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/z1;)V` @kind direct;
  #L2d081c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.TimeoutCancellationException` v0 @kind this, `java.lang.String` v1 @kind object, `kotlinx.coroutines.z1` v2 @kind object) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/z1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d0830.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d0836.  v0.`kotlinx.coroutines.TimeoutCancellationException.coroutine` @type ^`kotlinx.coroutines.z1` := v2 @kind object;
  #L2d083a.  return @kind void;
}
procedure `java.lang.Throwable` `createCopy`(`kotlinx.coroutines.TimeoutCancellationException` v1 @kind this) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.createCopy:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2d07c0.  call temp:= `createCopy`(v1) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.createCopy:()Lkotlinx/coroutines/TimeoutCancellationException;` @kind virtual;
  #L2d07c6.  v0:= temp @kind object;
  #L2d07c8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.TimeoutCancellationException` `createCopy`(`kotlinx.coroutines.TimeoutCancellationException` v3 @kind this) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.createCopy:()Lkotlinx/coroutines/TimeoutCancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d07dc.  v0:= new `kotlinx.coroutines.TimeoutCancellationException`;
  #L2d07e0.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2d07e6.  v1:= temp @kind object;
  #L2d07e8.  if v1 != 0 then goto L2d07f0;
  #L2d07ec.  v1:= "" @kind object;
  #L2d07f0.  v2:= v3.`kotlinx.coroutines.TimeoutCancellationException.coroutine` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2d07f4.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/TimeoutCancellationException;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/z1;)V` @kind direct;
  #L2d07fa.  call temp:= `initCause`(v0, v3) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2d0800.  return v0 @kind object;
}
