record `kotlinx.coroutines.CoroutineDispatcher` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class, `kotlin.coroutines.ContinuationInterceptor` @kind interface {
}
global `kotlinx.coroutines.CoroutineDispatcher$Key` `@@kotlinx.coroutines.CoroutineDispatcher.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2cbf4c.  v0:= new `kotlinx.coroutines.CoroutineDispatcher$Key`;
  #L2cbf50.  v1:= 0I;
  #L2cbf52.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2cbf58.  `@@kotlinx.coroutines.CoroutineDispatcher.b` @type ^`kotlinx.coroutines.CoroutineDispatcher$Key` := v0 @kind object;
  #L2cbf5c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cbf70.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L2cbf74.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L2cbf7a.  return @kind void;
}
procedure `void` `N0`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `O0`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L2cbf8c.  call `N0`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2cbf92.  return @kind void;
}
procedure `boolean` `P0`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.P0:(Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PUBLIC {
    temp;

  #L2cbe74.  v1:= 1I;
  #L2cbe76.  return v1;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `Q0`(`kotlinx.coroutines.CoroutineDispatcher` v1 @kind this, `int` v2 ) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.Q0:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cbf28.  call `a`(v2) @signature `Lkotlinx/coroutines/internal/q;.a:(I)V` @kind static;
  #L2cbf2e.  v0:= new `kotlinx.coroutines.internal.p`;
  #L2cbf32.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/p;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;I)V` @kind direct;
  #L2cbf38.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;

  #L2cbf0c.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/ContinuationInterceptor$DefaultImpls;.get:(Lkotlin/coroutines/ContinuationInterceptor;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L2cbf12.  v1:= temp @kind object;
  #L2cbf14.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `interceptContinuation`(`kotlinx.coroutines.CoroutineDispatcher` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.interceptContinuation:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2cbed4.  v0:= new `kotlinx.coroutines.internal.j`;
  #L2cbed8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/j;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2cbede.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L2cbef0.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/ContinuationInterceptor$DefaultImpls;.minusKey:(Lkotlin/coroutines/ContinuationInterceptor;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L2cbef6.  v1:= temp @kind object;
  #L2cbef8.  return v1 @kind object;
}
procedure `void` `releaseInterceptedContinuation`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.releaseInterceptedContinuation:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2cbfa4.  v1:= (`kotlinx.coroutines.internal.j`) v1 @kind object;
  #L2cbfa8.  call `s`(v1) @signature `Lkotlinx/coroutines/internal/j;.s:()V` @kind virtual;
  #L2cbfae.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cbe88.  v0:= new `java.lang.StringBuilder`;
  #L2cbe8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cbe92.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/p0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cbe98.  v1:= temp @kind object;
  #L2cbe9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cbea0.  v1:= 64I;
  #L2cbea4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cbeaa.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/p0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2cbeb0.  v1:= temp @kind object;
  #L2cbeb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cbeb8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cbebe.  v0:= temp @kind object;
  #L2cbec0.  return v0 @kind object;
}
