record `kotlinx.coroutines.k` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.l` @kind class {
  `java.util.concurrent.Future` `kotlinx.coroutines.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.k` v0 @kind this, `java.util.concurrent.Future` v1 @kind object) @signature `Lkotlinx/coroutines/k;.<init>:(Ljava/util/concurrent/Future;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ca1c4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/l;.<init>:()V` @kind direct;
  #L2ca1ca.  v0.`kotlinx.coroutines.k.b` @type ^`java.util.concurrent.Future` := v1 @kind object;
  #L2ca1ce.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.k` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/k;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca1e0.  if v2 == 0 then goto L2ca1f0;
  #L2ca1e4.  v2:= v1.`kotlinx.coroutines.k.b` @type ^`java.util.concurrent.Future` @kind object;
  #L2ca1e8.  v0:= 0I;
  #L2ca1ea.  call temp:= `cancel`(v2, v0) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L2ca1f0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/k;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2ca160.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2ca164.  call `a`(v0, v1) @signature `Lkotlinx/coroutines/k;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2ca16a.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2ca16e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.k` v2 @kind this) @signature `Lkotlinx/coroutines/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ca180.  v0:= new `java.lang.StringBuilder`;
  #L2ca184.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ca18a.  v1:= "CancelFutureOnCancel[" @kind object;
  #L2ca18e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca194.  v1:= v2.`kotlinx.coroutines.k.b` @type ^`java.util.concurrent.Future` @kind object;
  #L2ca198.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca19e.  v1:= 93I;
  #L2ca1a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ca1a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ca1ae.  v0:= temp @kind object;
  #L2ca1b0.  return v0 @kind object;
}
