record `kotlinx.coroutines.b2` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.j2` @kind class, `kotlinx.coroutines.y` @kind interface {
  `boolean` `kotlinx.coroutines.b2.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.b2` v1 @kind this, `kotlinx.coroutines.z1` v2 @kind object) @signature `Lkotlinx/coroutines/b2;.<init>:(Lkotlinx/coroutines/z1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cf564.  v0:= 1I;
  #L2cf566.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/j2;.<init>:(Z)V` @kind direct;
  #L2cf56c.  call `b0`(v1, v2) @signature `Lkotlinx/coroutines/j2;.b0:(Lkotlinx/coroutines/z1;)V` @kind virtual;
  #L2cf572.  call temp:= `I0`(v1) @signature `Lkotlinx/coroutines/b2;.I0:()Z` @kind direct;
  #L2cf578.  v2:= temp;
  #L2cf57a.  v1.`kotlinx.coroutines.b2.c` @type ^`boolean` := v2 @kind boolean;
  #L2cf57e.  return @kind void;
}
procedure `boolean` `I0`(`kotlinx.coroutines.b2` v4 @kind this) @signature `Lkotlinx/coroutines/b2;.I0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cf4e4.  call temp:= `X`(v4) @signature `Lkotlinx/coroutines/j2;.X:()Lkotlinx/coroutines/u;` @kind virtual;
  #L2cf4ea.  v0:= temp @kind object;
  #L2cf4ec.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.v` @kind boolean;
  #L2cf4f0.  v2:= 0I;
  #L2cf4f2.  if v1 == 0 then goto L2cf4fc;
  #L2cf4f6.  v0:= (`kotlinx.coroutines.v`) v0 @kind object;
  #L2cf4fa.  goto L2cf4fe;
  #L2cf4fc.  v0:= v2 @kind object;
  #L2cf4fe.  if v0 != 0 then goto L2cf506;
  #L2cf502.  v0:= v2 @kind object;
  #L2cf504.  goto L2cf50e;
  #L2cf506.  call temp:= `S`(v0) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cf50c.  v0:= temp @kind object;
  #L2cf50e.  v1:= 0I;
  #L2cf510.  if v0 != 0 then goto L2cf516;
  #L2cf514.  return v1;
  #L2cf516.  call temp:= `U`(v0) @signature `Lkotlinx/coroutines/j2;.U:()Z` @kind virtual;
  #L2cf51c.  v3:= temp;
  #L2cf51e.  if v3 == 0 then goto L2cf526;
  #L2cf522.  v0:= 1I;
  #L2cf524.  return v0;
  #L2cf526.  call temp:= `X`(v0) @signature `Lkotlinx/coroutines/j2;.X:()Lkotlinx/coroutines/u;` @kind virtual;
  #L2cf52c.  v0:= temp @kind object;
  #L2cf52e.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.v` @kind boolean;
  #L2cf532.  if v3 == 0 then goto L2cf53c;
  #L2cf536.  v0:= (`kotlinx.coroutines.v`) v0 @kind object;
  #L2cf53a.  goto L2cf53e;
  #L2cf53c.  v0:= v2 @kind object;
  #L2cf53e.  if v0 != 0 then goto L2cf546;
  #L2cf542.  v0:= v2 @kind object;
  #L2cf544.  goto L2cf54e;
  #L2cf546.  call temp:= `S`(v0) @signature `Lkotlinx/coroutines/f2;.S:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L2cf54c.  v0:= temp @kind object;
  #L2cf54e.  if v0 != 0 then goto L2cf516;
  #L2cf552.  return v1;
}
procedure `boolean` `U`(`kotlinx.coroutines.b2` v1 @kind this) @signature `Lkotlinx/coroutines/b2;.U:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf4b8.  v0:= v1.`kotlinx.coroutines.b2.c` @type ^`boolean` @kind boolean;
  #L2cf4bc.  return v0;
}
procedure `boolean` `V`(`kotlinx.coroutines.b2` v1 @kind this) @signature `Lkotlinx/coroutines/b2;.V:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf4d0.  v0:= 1I;
  #L2cf4d2.  return v0;
}
