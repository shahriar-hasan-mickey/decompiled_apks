record `kotlinx.coroutines.JobCancellationException` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `kotlinx.coroutines.e0` @kind interface {
  `kotlinx.coroutines.z1` `kotlinx.coroutines.JobCancellationException.job` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobCancellationException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `kotlinx.coroutines.z1` v3 @kind object) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/z1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cf478.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cf47e.  v0.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` := v3 @kind object;
  #L2cf482.  if v2 == 0 then goto L2cf48c;
  #L2cf486.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2cf48c.  return @kind void;
}
procedure `java.lang.Throwable` `createCopy`(`kotlinx.coroutines.JobCancellationException` v1 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2cf3e8.  call temp:= `createCopy`(v1) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Lkotlinx/coroutines/JobCancellationException;` @kind virtual;
  #L2cf3ee.  v0:= temp @kind object;
  #L2cf3f0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.JobCancellationException` `createCopy`(`kotlinx.coroutines.JobCancellationException` v3 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cf438.  call temp:= `c`() @signature `Lkotlinx/coroutines/o0;.c:()Z` @kind static;
  #L2cf43e.  v0:= temp;
  #L2cf440.  if v0 == 0 then goto L2cf462;
  #L2cf444.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L2cf448.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2cf44e.  v1:= temp @kind object;
  #L2cf450.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2cf456.  v2:= v3.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2cf45a.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/z1;)V` @kind direct;
  #L2cf460.  return v0 @kind object;
  #L2cf462.  v0:= 0I;
  #L2cf464.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.JobCancellationException` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobCancellationException;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cf2d0.  if v3 == v2 then goto L2cf332;
  #L2cf2d4.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobCancellationException` @kind boolean;
  #L2cf2d8.  if v0 == 0 then goto L2cf32e;
  #L2cf2dc.  v3:= (`kotlinx.coroutines.JobCancellationException`) v3 @kind object;
  #L2cf2e0.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2cf2e6.  v0:= temp @kind object;
  #L2cf2e8.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2cf2ee.  v1:= temp @kind object;
  #L2cf2f0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2cf2f6.  v0:= temp;
  #L2cf2f8.  if v0 == 0 then goto L2cf32e;
  #L2cf2fc.  v0:= v3.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2cf300.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2cf304.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2cf30a.  v0:= temp;
  #L2cf30c.  if v0 == 0 then goto L2cf32e;
  #L2cf310.  call temp:= `getCause`(v3) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2cf316.  v3:= temp @kind object;
  #L2cf318.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2cf31e.  v0:= temp @kind object;
  #L2cf320.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2cf326.  v3:= temp;
  #L2cf328.  if v3 == 0 then goto L2cf32e;
  #L2cf32c.  goto L2cf332;
  #L2cf32e.  v3:= 0I;
  #L2cf330.  goto L2cf334;
  #L2cf332.  v3:= 1I;
  #L2cf334.  return v3;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`kotlinx.coroutines.JobCancellationException` v1 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf404.  call temp:= `c`() @signature `Lkotlinx/coroutines/o0;.c:()Z` @kind static;
  #L2cf40a.  v0:= temp;
  #L2cf40c.  if v0 == 0 then goto L2cf41a;
  #L2cf410.  call temp:= `fillInStackTrace`(v1) @signature `Ljava/util/concurrent/CancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @kind super;
  #L2cf416.  v0:= temp @kind object;
  #L2cf418.  return v0 @kind object;
  #L2cf41a.  v0:= 0I;
  #L2cf41c.  v0:= new `java.lang.StackTraceElement`[v0];
  #L2cf420.  call `setStackTrace`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2cf426.  return v1 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.JobCancellationException` v2 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cf348.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2cf34e.  v0:= temp @kind object;
  #L2cf350.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2cf356.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2cf35c.  v0:= temp;
  #L2cf35e.  v0:= v0 * 31;
  #L2cf362.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2cf366.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2cf36c.  v1:= temp;
  #L2cf36e.  v0:= v0 + v1 @kind int;
  #L2cf370.  v0:= v0 * 31;
  #L2cf374.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2cf37a.  v1:= temp @kind object;
  #L2cf37c.  if v1 != 0 then goto L2cf384;
  #L2cf380.  v1:= 0I;
  #L2cf382.  goto L2cf38c;
  #L2cf384.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L2cf38a.  v1:= temp;
  #L2cf38c.  v0:= v0 + v1 @kind int;
  #L2cf38e.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobCancellationException` v2 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cf3a0.  v0:= new `java.lang.StringBuilder`;
  #L2cf3a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cf3aa.  call temp:= `toString`(v2) @signature `Ljava/util/concurrent/CancellationException;.toString:()Ljava/lang/String;` @kind super;
  #L2cf3b0.  v1:= temp @kind object;
  #L2cf3b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf3b8.  v1:= "; job=" @kind object;
  #L2cf3bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf3c2.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.z1` @kind object;
  #L2cf3c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf3cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cf3d2.  v0:= temp @kind object;
  #L2cf3d4.  return v0 @kind object;
}
