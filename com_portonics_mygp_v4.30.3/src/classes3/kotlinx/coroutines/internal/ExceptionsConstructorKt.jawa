record `kotlinx.coroutines.internal.ExceptionsConstructorKt` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int` `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.i` `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2e82cc.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2e82d0.  v1:= -1I;
  #L2e82d2.  call temp:= `f`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.f:(Ljava/lang/Class;I)I` @kind static;
  #L2e82d8.  v0:= temp;
  #L2e82da.  `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @type ^`int` := v0;
  #L2e82de.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/n;.a:()Z` @kind static;
  #L2e82e4.  v0:= temp;
  #L2e82e6.  if v0 == 0 then goto L2e82f0;
  #L2e82ea.  v0:= `@@kotlinx.coroutines.internal.t0.a` @type ^`kotlinx.coroutines.internal.t0` @kind object;
  #L2e82ee.  goto L2e82fa;
  #L2e82f0.  v0:= `@@kotlinx.coroutines.internal.f.a` @type ^`kotlinx.coroutines.internal.f` @kind object;
  #L2e82f4.  goto L2e82fa;
  #L2e82f6.  v0:= `@@kotlinx.coroutines.internal.t0.a` @type ^`kotlinx.coroutines.internal.t0` @kind object;
  #L2e82fa.  `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @type ^`kotlinx.coroutines.internal.i` := v0 @kind object;
  #L2e82fe.  return @kind void;
  catch `java.lang.Throwable` @[L2e82de..L2e82f4] goto L2e82f6;
}
procedure `kotlin.jvm.functions.Function1` `a`(`java.lang.Class` v0 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.a:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2e8194.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.b:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2e819a.  v0:= temp @kind object;
  #L2e819c.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `b`(`java.lang.Class` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.b:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e81b0.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1.INSTANCE` @type ^`kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1` @kind object;
  #L2e81b4.  v1:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.a` @type ^`int`;
  #L2e81b8.  v2:= 0I;
  #L2e81ba.  call temp:= `f`(v3, v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.f:(Ljava/lang/Class;I)I` @kind static;
  #L2e81c0.  v2:= temp;
  #L2e81c2.  if v1 == v2 then goto L2e81c8;
  #L2e81c6.  return v0 @kind object;
  #L2e81c8.  call temp:= `getConstructors`(v3) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L2e81ce.  v3:= temp @kind object;
  #L2e81d0.  v1:= new `kotlinx.coroutines.internal.l`;
  #L2e81d4.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/l;.<init>:()V` @kind direct;
  #L2e81da.  call temp:= `sortedWith`(v3, v1) @signature `Lkotlin/collections/ArraysKt;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L2e81e0.  v3:= temp @kind object;
  #L2e81e2.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2e81e8.  v3:= temp @kind object;
  #L2e81ea.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2e81f0.  v1:= temp;
  #L2e81f2.  if v1 == 0 then goto L2e8210;
  #L2e81f6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2e81fc.  v1:= temp @kind object;
  #L2e81fe.  v1:= (`java.lang.reflect.Constructor`) v1 @kind object;
  #L2e8202.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.c:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2e8208.  v1:= temp @kind object;
  #L2e820a.  if v1 == 0 then goto L2e81ea;
  #L2e820e.  return v1 @kind object;
  #L2e8210.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `c`(`java.lang.reflect.Constructor` v7 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.c:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e8224.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L2e8228.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L2e822e.  v1:= temp @kind object;
  #L2e8230.  v2:= length @variable v1;
  #L2e8232.  v3:= 0I;
  #L2e8234.  if v2 == 0 then goto L2e82b0;
  #L2e8238.  v4:= 0I;
  #L2e823a.  v5:= 1I;
  #L2e823c.  if v2 == v5 then goto L2e8278;
  #L2e8240.  v6:= 2I;
  #L2e8242.  if v2 == v6 then goto L2e8248;
  #L2e8246.  goto L2e82ba;
  #L2e8248.  v2:= v1[v4] @kind object;
  #L2e824c.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e8252.  v0:= temp;
  #L2e8254.  if v0 == 0 then goto L2e82ba;
  #L2e8258.  v0:= v1[v5] @kind object;
  #L2e825c.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2e8260.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e8266.  v0:= temp;
  #L2e8268.  if v0 == 0 then goto L2e82ba;
  #L2e826c.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1`;
  #L2e8270.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$1;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L2e8276.  goto L2e82ba;
  #L2e8278.  v1:= v1[v4] @kind object;
  #L2e827c.  v2:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2e8280.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e8286.  v2:= temp;
  #L2e8288.  if v2 == 0 then goto L2e8298;
  #L2e828c.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2`;
  #L2e8290.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$2;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L2e8296.  goto L2e82ba;
  #L2e8298.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e829e.  v0:= temp;
  #L2e82a0.  if v0 == 0 then goto L2e82ba;
  #L2e82a4.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3`;
  #L2e82a8.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$3;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L2e82ae.  goto L2e82ba;
  #L2e82b0.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4`;
  #L2e82b4.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L2e82ba.  return v3 @kind object;
}
procedure `int` `d`(`java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.d:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e8030.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L2e8036.  v0:= temp @kind object;
  #L2e8038.  v1:= length @variable v0;
  #L2e803a.  v2:= 0I;
  #L2e803c.  v3:= 0I;
  #L2e803e.  if v2 >= v1 then goto L2e8068;
  #L2e8042.  v4:= v0[v2] @kind object;
  #L2e8046.  v2:= v2 + 1;
  #L2e804a.  call temp:= `getModifiers`(v4) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L2e8050.  v4:= temp;
  #L2e8052.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L2e8058.  v4:= temp;
  #L2e805a.  v4:= v4 ^~ 1;
  #L2e805e.  if v4 == 0 then goto L2e803e;
  #L2e8062.  v3:= v3 + 1;
  #L2e8066.  goto L2e803e;
  #L2e8068.  v6:= v6 + v3 @kind int;
  #L2e806a.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L2e8070.  v5:= temp @kind object;
  #L2e8072.  if v5 != 0 then goto L2e8030;
  #L2e8076.  return v6;
}
procedure `int` `e`(`java.lang.Class` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2e800c.  v2:= v2 ^& 1;
  #L2e8010.  if v2 == 0 then goto L2e8016;
  #L2e8014.  v1:= 0I;
  #L2e8016.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.d:(Ljava/lang/Class;I)I` @kind static;
  #L2e801c.  v0:= temp;
  #L2e801e.  return v0;
}
procedure `int` `f`(`java.lang.Class` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.f:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e8088.  call temp:= `getKotlinClass`(v3) @signature `Lkotlin/jvm/JvmClassMappingKt;.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2e808e.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e8092.  v0:= 0I;
  #L2e8094.  v1:= 1I;
  #L2e8096.  v2:= 0I;
  #L2e8098.  call temp:= `e`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @kind static;
  #L2e809e.  v3:= temp;
  #L2e80a0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e80a6.  v3:= temp @kind object;
  #L2e80a8.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e80ae.  v3:= temp @kind object;
  #L2e80b0.  goto L2e80c8;
  #L2e80b2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e80b4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e80b8.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2e80be.  v3:= temp @kind object;
  #L2e80c0.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e80c6.  v3:= temp @kind object;
  #L2e80c8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e80ce.  v4:= temp @kind object;
  #L2e80d0.  call temp:= `isFailure-impl`(v3) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L2e80d6.  v0:= temp;
  #L2e80d8.  if v0 == 0 then goto L2e80de;
  #L2e80dc.  v3:= v4 @kind object;
  #L2e80de.  v3:= (`java.lang.Number`) v3 @kind object;
  #L2e80e2.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2e80e8.  v3:= temp;
  #L2e80ea.  return v3;
  catch `java.lang.Throwable` @[L2e808e..L2e80b0] goto L2e80b2;
}
procedure `java.lang.Throwable` `g`(`java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2e8108.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.e0` @kind boolean;
  #L2e810c.  if v0 == 0 then goto L2e8154;
  #L2e8110.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e8114.  v2:= (`kotlinx.coroutines.e0`) v2 @kind object;
  #L2e8118.  call temp:= `createCopy`(v2) @signature `Lkotlinx/coroutines/e0;.createCopy:()Ljava/lang/Throwable;` @kind interface;
  #L2e811e.  v2:= temp @kind object;
  #L2e8120.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e8126.  v2:= temp @kind object;
  #L2e8128.  goto L2e8140;
  #L2e812a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e812c.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e8130.  call temp:= `createFailure`(v2) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2e8136.  v2:= temp @kind object;
  #L2e8138.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e813e.  v2:= temp @kind object;
  #L2e8140.  call temp:= `isFailure-impl`(v2) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L2e8146.  v0:= temp;
  #L2e8148.  if v0 == 0 then goto L2e814e;
  #L2e814c.  v2:= 0I;
  #L2e814e.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L2e8152.  return v2 @kind object;
  #L2e8154.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstructorKt.b` @type ^`kotlinx.coroutines.internal.i` @kind object;
  #L2e8158.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e815e.  v1:= temp @kind object;
  #L2e8160.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/internal/i;.a:(Ljava/lang/Class;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L2e8166.  v0:= temp @kind object;
  #L2e8168.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e816e.  v2:= temp @kind object;
  #L2e8170.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L2e8174.  return v2 @kind object;
  catch `java.lang.Throwable` @[L2e8110..L2e8128] goto L2e812a;
}
