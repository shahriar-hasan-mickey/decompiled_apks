record `kotlinx.coroutines.internal.j0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.internal.j0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.internal.j0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/j0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2eadd0.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2eadd4.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L2eadd8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2eadde.  v0:= temp @kind object;
  #L2eade0.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2eade6.  v0:= temp @kind object;
  #L2eade8.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eadee.  v0:= temp @kind object;
  #L2eadf0.  goto L2eae08;
  #L2eadf2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eadf4.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2eadf8.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2eadfe.  v0:= temp @kind object;
  #L2eae00.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eae06.  v0:= temp @kind object;
  #L2eae08.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L2eae0e.  v1:= temp @kind object;
  #L2eae10.  if v1 != 0 then goto L2eae16;
  #L2eae14.  goto L2eae1a;
  #L2eae16.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L2eae1a.  v0:= (`java.lang.String`) v0 @kind object;
  #L2eae1e.  `@@kotlinx.coroutines.internal.j0.a` @type ^`java.lang.String` := v0 @kind object;
  #L2eae22.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2eae26.  v0:= "kotlinx.coroutines.internal.j0" @kind object;
  #L2eae2a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2eae30.  v0:= temp @kind object;
  #L2eae32.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2eae38.  v0:= temp @kind object;
  #L2eae3a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eae40.  v0:= temp @kind object;
  #L2eae42.  goto L2eae5a;
  #L2eae44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eae46.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2eae4a.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2eae50.  v0:= temp @kind object;
  #L2eae52.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eae58.  v0:= temp @kind object;
  #L2eae5a.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L2eae60.  v1:= temp @kind object;
  #L2eae62.  if v1 != 0 then goto L2eae68;
  #L2eae66.  goto L2eae6c;
  #L2eae68.  v0:= "kotlinx.coroutines.internal.StackTraceRecoveryKt" @kind object;
  #L2eae6c.  v0:= (`java.lang.String`) v0 @kind object;
  #L2eae70.  `@@kotlinx.coroutines.internal.j0.b` @type ^`java.lang.String` := v0 @kind object;
  #L2eae74.  return @kind void;
  catch `java.lang.Throwable` @[L2eadd0..L2eadf0] goto L2eadf2;
  catch `java.lang.Throwable` @[L2eae22..L2eae42] goto L2eae44;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v1 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2eaa34.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/internal/j0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L2eaa3a.  v0:= temp @kind object;
  #L2eaa3c.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `b`(`java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2eaa04.  v0:= new `java.lang.StackTraceElement`;
  #L2eaa08.  v1:= "\b\b\b(" @kind object;
  #L2eaa0c.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2eaa12.  v3:= temp @kind object;
  #L2eaa14.  v1:= "\b" @kind object;
  #L2eaa18.  v2:= -1I;
  #L2eaa1a.  call `<init>`(v0, v3, v1, v1, v2) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2eaa20.  return v0 @kind object;
}
procedure `kotlin.Pair` `c`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.c:(Ljava/lang/Throwable;)Lkotlin/Pair;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ead40.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2ead46.  v0:= temp @kind object;
  #L2ead48.  v1:= 0I;
  #L2ead4a.  if v0 == 0 then goto L2eadb0;
  #L2ead4e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ead54.  v2:= temp @kind object;
  #L2ead56.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ead5c.  v3:= temp @kind object;
  #L2ead5e.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ead64.  v2:= temp;
  #L2ead66.  if v2 == 0 then goto L2eadb0;
  #L2ead6a.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2ead70.  v2:= temp @kind object;
  #L2ead72.  v3:= length @variable v2;
  #L2ead74.  v4:= 0I;
  #L2ead76.  if v4 >= v3 then goto L2ead92;
  #L2ead7a.  v5:= v2[v4] @kind object;
  #L2ead7e.  v4:= v4 + 1;
  #L2ead82.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/j0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L2ead88.  v5:= temp;
  #L2ead8a.  if v5 == 0 then goto L2ead76;
  #L2ead8e.  v3:= 1I;
  #L2ead90.  goto L2ead94;
  #L2ead92.  v3:= 0I;
  #L2ead94.  if v3 == 0 then goto L2eada2;
  #L2ead98.  call temp:= `to`(v0, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2ead9e.  v6:= temp @kind object;
  #L2eada0.  goto L2eadbc;
  #L2eada2.  v0:= new `java.lang.StackTraceElement`[v1];
  #L2eada6.  call temp:= `to`(v6, v0) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2eadac.  v6:= temp @kind object;
  #L2eadae.  goto L2eadbc;
  #L2eadb0.  v0:= new `java.lang.StackTraceElement`[v1];
  #L2eadb4.  call temp:= `to`(v6, v0) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2eadba.  v6:= temp @kind object;
  #L2eadbc.  return v6 @kind object;
}
procedure `java.lang.Throwable` `d`(`java.lang.Throwable` v6 @kind object, `java.lang.Throwable` v7 @kind object, `java.util.ArrayDeque` v8 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2eaa50.  v0:= "Coroutine boundary" @kind object;
  #L2eaa54.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/j0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L2eaa5a.  v0:= temp @kind object;
  #L2eaa5c.  call `addFirst`(v8, v0) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L2eaa62.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2eaa68.  v6:= temp @kind object;
  #L2eaa6a.  v0:= `@@kotlinx.coroutines.internal.j0.a` @type ^`java.lang.String` @kind object;
  #L2eaa6e.  call temp:= `g`(v6, v0) @signature `Lkotlinx/coroutines/internal/j0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L2eaa74.  v0:= temp;
  #L2eaa76.  v1:= 0I;
  #L2eaa78.  v2:= -1I;
  #L2eaa7a.  if v0 != v2 then goto L2eaaa0;
  #L2eaa7e.  v6:= new `java.lang.StackTraceElement`[v1];
  #L2eaa82.  call temp:= `toArray`(v8, v6) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2eaa88.  v6:= temp @kind object;
  #L2eaa8a.  v8:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L2eaa8e.  call temp:= `requireNonNull`(v6, v8) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2eaa94.  v6:= (`java.lang.StackTraceElement`[]) v6 @kind object;
  #L2eaa98.  call `setStackTrace`(v7, v6) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2eaa9e.  return v7 @kind object;
  #L2eaaa0.  call temp:= `size`(v8) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L2eaaa6.  v2:= temp;
  #L2eaaa8.  v2:= v2 + v0 @kind int;
  #L2eaaaa.  v2:= new `java.lang.StackTraceElement`[v2];
  #L2eaaae.  v3:= 0I;
  #L2eaab0.  if v3 >= v0 then goto L2eaac4;
  #L2eaab4.  v4:= v3 + 1;
  #L2eaab8.  v5:= v6[v3] @kind object;
  #L2eaabc.  v2[v3]:= v5 @kind object;
  #L2eaac0.  v3:= v4;
  #L2eaac2.  goto L2eaab0;
  #L2eaac4.  call temp:= `iterator`(v8) @signature `Ljava/util/ArrayDeque;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2eaaca.  v6:= temp @kind object;
  #L2eaacc.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2eaad2.  v8:= temp;
  #L2eaad4.  if v8 == 0 then goto L2eaaf2;
  #L2eaad8.  v8:= v1 + 1;
  #L2eaadc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2eaae2.  v3:= temp @kind object;
  #L2eaae4.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L2eaae8.  v1:= v1 + v0 @kind int;
  #L2eaaea.  v2[v1]:= v3 @kind object;
  #L2eaaee.  v1:= v8;
  #L2eaaf0.  goto L2eaacc;
  #L2eaaf2.  call `setStackTrace`(v7, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2eaaf8.  return v7 @kind object;
}
procedure `java.util.ArrayDeque` `e`(`kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.e:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/util/ArrayDeque;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2eace4.  v0:= new `java.util.ArrayDeque`;
  #L2eace8.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L2eacee.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L2eacf4.  v1:= temp @kind object;
  #L2eacf6.  if v1 != 0 then goto L2eacfc;
  #L2eacfa.  goto L2ead02;
  #L2eacfc.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ead02.  if v2 != 0 then goto L2ead0a;
  #L2ead06.  v2:= 0I;
  #L2ead08.  goto L2ead12;
  #L2ead0a.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L2ead10.  v2:= temp @kind object;
  #L2ead12.  if v2 != 0 then goto L2ead18;
  #L2ead16.  return v0 @kind object;
  #L2ead18.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L2ead1e.  v1:= temp @kind object;
  #L2ead20.  if v1 != 0 then goto L2ead26;
  #L2ead24.  goto L2ead02;
  #L2ead26.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ead2c.  goto L2ead02;
}
procedure `boolean` `f`(`java.lang.StackTraceElement` v2 @kind object, `java.lang.StackTraceElement` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2ea918.  call temp:= `getLineNumber`(v2) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L2ea91e.  v0:= temp;
  #L2ea920.  call temp:= `getLineNumber`(v3) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L2ea926.  v1:= temp;
  #L2ea928.  if v0 != v1 then goto L2ea984;
  #L2ea92c.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L2ea932.  v0:= temp @kind object;
  #L2ea934.  call temp:= `getMethodName`(v3) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L2ea93a.  v1:= temp @kind object;
  #L2ea93c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ea942.  v0:= temp;
  #L2ea944.  if v0 == 0 then goto L2ea984;
  #L2ea948.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L2ea94e.  v0:= temp @kind object;
  #L2ea950.  call temp:= `getFileName`(v3) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L2ea956.  v1:= temp @kind object;
  #L2ea958.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ea95e.  v0:= temp;
  #L2ea960.  if v0 == 0 then goto L2ea984;
  #L2ea964.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L2ea96a.  v2:= temp @kind object;
  #L2ea96c.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L2ea972.  v3:= temp @kind object;
  #L2ea974.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ea97a.  v2:= temp;
  #L2ea97c.  if v2 == 0 then goto L2ea984;
  #L2ea980.  v2:= 1I;
  #L2ea982.  goto L2ea986;
  #L2ea984.  v2:= 0I;
  #L2ea986.  return v2;
}
procedure `int` `g`(`java.lang.StackTraceElement`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ea9c4.  v0:= length @variable v4;
  #L2ea9c6.  v1:= 0I;
  #L2ea9c8.  if v1 >= v0 then goto L2ea9ee;
  #L2ea9cc.  v2:= v1 + 1;
  #L2ea9d0.  v3:= v4[v1] @kind object;
  #L2ea9d4.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L2ea9da.  v3:= temp @kind object;
  #L2ea9dc.  call temp:= `areEqual`(v5, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2ea9e2.  v3:= temp;
  #L2ea9e4.  if v3 == 0 then goto L2ea9ea;
  #L2ea9e8.  goto L2ea9f0;
  #L2ea9ea.  v1:= v2;
  #L2ea9ec.  goto L2ea9c8;
  #L2ea9ee.  v1:= -1I;
  #L2ea9f0.  return v1;
}
procedure `boolean` `h`(`java.lang.StackTraceElement` v4 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.h:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ea998.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L2ea99e.  v4:= temp @kind object;
  #L2ea9a0.  v0:= "\b\b\b" @kind object;
  #L2ea9a4.  v1:= 0I;
  #L2ea9a6.  v2:= 2I;
  #L2ea9a8.  v3:= 0I;
  #L2ea9aa.  call temp:= `startsWith$default`(v4, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L2ea9b0.  v4:= temp;
  #L2ea9b2.  return v4;
}
procedure `void` `i`(`java.lang.StackTraceElement`[] v5 @kind object, `java.util.ArrayDeque` v6 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2eaea0.  v0:= length @variable v5;
  #L2eaea2.  v1:= 0I;
  #L2eaea4.  if v1 >= v0 then goto L2eaec2;
  #L2eaea8.  v2:= v1 + 1;
  #L2eaeac.  v3:= v5[v1] @kind object;
  #L2eaeb0.  call temp:= `h`(v3) @signature `Lkotlinx/coroutines/internal/j0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L2eaeb6.  v3:= temp;
  #L2eaeb8.  if v3 == 0 then goto L2eaebe;
  #L2eaebc.  goto L2eaec4;
  #L2eaebe.  v1:= v2;
  #L2eaec0.  goto L2eaea4;
  #L2eaec2.  v1:= -1I;
  #L2eaec4.  v1:= v1 + 1;
  #L2eaec8.  v0:= length @variable v5;
  #L2eaeca.  v0:= v0 + -1;
  #L2eaece.  if v1 > v0 then goto L2eaf0c;
  #L2eaed2.  v2:= v0 + -1;
  #L2eaed6.  v3:= v5[v0] @kind object;
  #L2eaeda.  call temp:= `getLast`(v6) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L2eaee0.  v4:= temp @kind object;
  #L2eaee2.  v4:= (`java.lang.StackTraceElement`) v4 @kind object;
  #L2eaee6.  call temp:= `f`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @kind static;
  #L2eaeec.  v3:= temp;
  #L2eaeee.  if v3 == 0 then goto L2eaef8;
  #L2eaef2.  call temp:= `removeLast`(v6) @signature `Ljava/util/ArrayDeque;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L2eaef8.  v3:= v5[v0] @kind object;
  #L2eaefc.  call `addFirst`(v6, v3) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L2eaf02.  if v0 != v1 then goto L2eaf08;
  #L2eaf06.  goto L2eaf0c;
  #L2eaf08.  v0:= v2;
  #L2eaf0a.  goto L2eaed2;
  #L2eaf0c.  return @kind void;
}
procedure `java.lang.Throwable` `j`(`java.lang.Throwable` v4 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v5 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2eab0c.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/internal/j0;.c:(Ljava/lang/Throwable;)Lkotlin/Pair;` @kind static;
  #L2eab12.  v0:= temp @kind object;
  #L2eab14.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L2eab1a.  v1:= temp @kind object;
  #L2eab1c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2eab20.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L2eab26.  v0:= temp @kind object;
  #L2eab28.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L2eab2c.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/j0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eab32.  v2:= temp @kind object;
  #L2eab34.  if v2 != 0 then goto L2eab3a;
  #L2eab38.  return v4 @kind object;
  #L2eab3a.  call temp:= `e`(v5) @signature `Lkotlinx/coroutines/internal/j0;.e:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/util/ArrayDeque;` @kind static;
  #L2eab40.  v5:= temp @kind object;
  #L2eab42.  call temp:= `isEmpty`(v5) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L2eab48.  v3:= temp;
  #L2eab4a.  if v3 == 0 then goto L2eab50;
  #L2eab4e.  return v4 @kind object;
  #L2eab50.  if v1 == v4 then goto L2eab5a;
  #L2eab54.  call `i`(v0, v5) @signature `Lkotlinx/coroutines/internal/j0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @kind static;
  #L2eab5a.  call temp:= `d`(v1, v2, v5) @signature `Lkotlinx/coroutines/internal/j0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @kind static;
  #L2eab60.  v4:= temp @kind object;
  #L2eab62.  return v4 @kind object;
}
procedure `java.lang.Throwable` `k`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.k:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2eab74.  call temp:= `d`() @signature `Lkotlinx/coroutines/o0;.d:()Z` @kind static;
  #L2eab7a.  v0:= temp;
  #L2eab7c.  if v0 != 0 then goto L2eab82;
  #L2eab80.  return v1 @kind object;
  #L2eab82.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/j0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eab88.  v0:= temp @kind object;
  #L2eab8a.  if v0 != 0 then goto L2eab90;
  #L2eab8e.  return v1 @kind object;
  #L2eab90.  call temp:= `l`(v0) @signature `Lkotlinx/coroutines/internal/j0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eab96.  v1:= temp @kind object;
  #L2eab98.  return v1 @kind object;
}
procedure `java.lang.Throwable` `l`(`java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2eabac.  call temp:= `getStackTrace`(v7) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2eabb2.  v0:= temp @kind object;
  #L2eabb4.  v1:= length @variable v0;
  #L2eabb6.  v2:= `@@kotlinx.coroutines.internal.j0.b` @type ^`java.lang.String` @kind object;
  #L2eabba.  call temp:= `g`(v0, v2) @signature `Lkotlinx/coroutines/internal/j0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L2eabc0.  v2:= temp;
  #L2eabc2.  v3:= v2 + 1;
  #L2eabc6.  v4:= `@@kotlinx.coroutines.internal.j0.a` @type ^`java.lang.String` @kind object;
  #L2eabca.  call temp:= `g`(v0, v4) @signature `Lkotlinx/coroutines/internal/j0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L2eabd0.  v4:= temp;
  #L2eabd2.  v5:= 0I;
  #L2eabd4.  v6:= -1I;
  #L2eabd6.  if v4 != v6 then goto L2eabde;
  #L2eabda.  v4:= 0I;
  #L2eabdc.  goto L2eabe2;
  #L2eabde.  v4:= v1 - v4 @kind int;
  #L2eabe2.  v1:= v1 - v2 @kind int;
  #L2eabe4.  v1:= v1 - v4 @kind int;
  #L2eabe6.  v2:= new `java.lang.StackTraceElement`[v1];
  #L2eabea.  if v5 >= v1 then goto L2eac16;
  #L2eabee.  if v5 != 0 then goto L2eac00;
  #L2eabf2.  v4:= "Coroutine boundary" @kind object;
  #L2eabf6.  call temp:= `b`(v4) @signature `Lkotlinx/coroutines/internal/j0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L2eabfc.  v4:= temp @kind object;
  #L2eabfe.  goto L2eac0c;
  #L2eac00.  v4:= v3 + v5 @kind int;
  #L2eac04.  v4:= v4 + -1;
  #L2eac08.  v4:= v0[v4] @kind object;
  #L2eac0c.  v2[v5]:= v4 @kind object;
  #L2eac10.  v5:= v5 + 1;
  #L2eac14.  goto L2eabea;
  #L2eac16.  call `setStackTrace`(v7, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L2eac1c.  return v7 @kind object;
}
procedure `java.lang.Throwable` `m`(`java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2eac30.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L2eac36.  v0:= temp @kind object;
  #L2eac38.  v1:= 0I;
  #L2eac3a.  if v0 != 0 then goto L2eac40;
  #L2eac3e.  return v1 @kind object;
  #L2eac40.  v2:= instanceof @variable v3 @type ^`kotlinx.coroutines.e0` @kind boolean;
  #L2eac44.  if v2 != 0 then goto L2eac66;
  #L2eac48.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2eac4e.  v2:= temp @kind object;
  #L2eac50.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2eac56.  v3:= temp @kind object;
  #L2eac58.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2eac5e.  v3:= temp;
  #L2eac60.  if v3 != 0 then goto L2eac66;
  #L2eac64.  return v1 @kind object;
  #L2eac66.  return v0 @kind object;
}
procedure `java.lang.Throwable` `n`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/j0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2eac78.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2eac7e.  v0:= temp @kind object;
  #L2eac80.  if v0 == 0 then goto L2eacd0;
  #L2eac84.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2eac8a.  v1:= temp @kind object;
  #L2eac8c.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2eac92.  v2:= temp @kind object;
  #L2eac94.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2eac9a.  v1:= temp;
  #L2eac9c.  if v1 != 0 then goto L2eaca2;
  #L2eaca0.  goto L2eacd0;
  #L2eaca2.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L2eaca8.  v1:= temp @kind object;
  #L2eacaa.  v2:= length @variable v1;
  #L2eacac.  v3:= 0I;
  #L2eacae.  v4:= 0I;
  #L2eacb0.  if v4 >= v2 then goto L2eacca;
  #L2eacb4.  v5:= v1[v4] @kind object;
  #L2eacb8.  v4:= v4 + 1;
  #L2eacbc.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/j0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L2eacc2.  v5:= temp;
  #L2eacc4.  if v5 == 0 then goto L2eacb0;
  #L2eacc8.  v3:= 1I;
  #L2eacca.  if v3 == 0 then goto L2eacd0;
  #L2eacce.  return v0 @kind object;
  #L2eacd0.  return v6 @kind object;
}
