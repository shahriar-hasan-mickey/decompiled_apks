record `kotlinx.coroutines.internal.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Object`[] `kotlinx.coroutines.internal.a.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.a.b` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.a` v1 @kind this) @signature `Lkotlinx/coroutines/internal/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e6f48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6f4e.  v0:= 16I;
  #L2e6f52.  v0:= new `java.lang.Object`[v0];
  #L2e6f56.  v1.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2e6f5a.  return @kind void;
}
procedure `void` `b`(`kotlinx.coroutines.internal.a` v16 @kind this) @signature `Lkotlinx/coroutines/internal/a;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2e6fa8.  v0:= v16 @kind object;
  #L2e6fac.  v1:= v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L2e6fb0.  v8:= length @variable v1;
  #L2e6fb2.  v2:= v8 ^< 1;
  #L2e6fb6.  v15:= new `java.lang.Object`[v2];
  #L2e6fba.  v4:= v0.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L2e6fbe.  v3:= 0I;
  #L2e6fc0.  v5:= 0I;
  #L2e6fc2.  v6:= 10I;
  #L2e6fc6.  v7:= 0I;
  #L2e6fc8.  v2:= v15 @kind object;
  #L2e6fca.  call temp:= `copyInto$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L2e6fd0.  v9:= v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L2e6fd4.  v1:= length @variable v9;
  #L2e6fd6.  v13:= v0.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L2e6fda.  v11:= v1 - v13 @kind int;
  #L2e6fde.  v12:= 0I;
  #L2e6fe0.  v14:= 4I;
  #L2e6fe2.  v1:= 0I;
  #L2e6fe4.  v10:= v15 @kind object;
  #L2e6fe6.  v15:= v1 @kind object;
  #L2e6fe8.  call temp:= `copyInto$default`(v9, v10, v11, v12, v13, v14, v15) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L2e6fee.  v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] := v2 @kind object;
  #L2e6ff2.  v1:= 0I;
  #L2e6ff4.  v0.`kotlinx.coroutines.internal.a.b` @type ^`int` := v1;
  #L2e6ff8.  v0.`kotlinx.coroutines.internal.a.c` @type ^`int` := v8;
  #L2e6ffc.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.internal.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/a;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e6f6c.  v0:= v2.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L2e6f70.  v1:= v2.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L2e6f74.  v0[v1]:= v3 @kind object;
  #L2e6f78.  v1:= v1 + 1;
  #L2e6f7c.  v3:= length @variable v0;
  #L2e6f7e.  v3:= v3 + -1;
  #L2e6f82.  v3:= v3 ^& v1 @kind int;
  #L2e6f84.  v2.`kotlinx.coroutines.internal.a.c` @type ^`int` := v3;
  #L2e6f88.  v0:= v2.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L2e6f8c.  if v3 != v0 then goto L2e6f96;
  #L2e6f90.  call `b`(v2) @signature `Lkotlinx/coroutines/internal/a;.b:()V` @kind direct;
  #L2e6f96.  return @kind void;
}
procedure `boolean` `c`(`kotlinx.coroutines.internal.a` v2 @kind this) @signature `Lkotlinx/coroutines/internal/a;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e6edc.  v0:= v2.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L2e6ee0.  v1:= v2.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L2e6ee4.  if v0 != v1 then goto L2e6eec;
  #L2e6ee8.  v0:= 1I;
  #L2e6eea.  goto L2e6eee;
  #L2e6eec.  v0:= 0I;
  #L2e6eee.  return v0;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.internal.a` v4 @kind this) @signature `Lkotlinx/coroutines/internal/a;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e6f00.  v0:= v4.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L2e6f04.  v1:= v4.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L2e6f08.  v2:= 0I;
  #L2e6f0a.  if v0 != v1 then goto L2e6f10;
  #L2e6f0e.  return v2 @kind object;
  #L2e6f10.  v1:= v4.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L2e6f14.  v3:= v1[v0] @kind object;
  #L2e6f18.  v1[v0]:= v2 @kind object;
  #L2e6f1c.  v0:= v0 + 1;
  #L2e6f20.  v1:= length @variable v1;
  #L2e6f22.  v1:= v1 + -1;
  #L2e6f26.  v0:= v0 ^& v1 @kind int;
  #L2e6f28.  v4.`kotlinx.coroutines.internal.a.b` @type ^`int` := v0;
  #L2e6f2c.  v0:= "null cannot be cast to non-null type T of kotlinx.coroutines.internal.ArrayQueue" @kind object;
  #L2e6f30.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2e6f36.  return v3 @kind object;
}
