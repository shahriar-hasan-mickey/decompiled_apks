record `kotlinx.coroutines.internal.c0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.c0` `@@kotlinx.coroutines.internal.c0.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.internal.c0.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.m2` `@@kotlinx.coroutines.internal.c0.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/c0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ea1fc.  v0:= new `kotlinx.coroutines.internal.c0`;
  #L2ea200.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/c0;.<init>:()V` @kind direct;
  #L2ea206.  `@@kotlinx.coroutines.internal.c0.a` @type ^`kotlinx.coroutines.internal.c0` := v0 @kind object;
  #L2ea20a.  v1:= "kotlinx.coroutines.fast.service.loader" @kind object;
  #L2ea20e.  v2:= 1I;
  #L2ea210.  call temp:= `e`(v1, v2) @signature `Lkotlinx/coroutines/internal/l0;.e:(Ljava/lang/String;Z)Z` @kind static;
  #L2ea216.  v1:= temp;
  #L2ea218.  `@@kotlinx.coroutines.internal.c0.b` @type ^`boolean` := v1 @kind boolean;
  #L2ea21c.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/internal/c0;.a:()Lkotlinx/coroutines/m2;` @kind direct;
  #L2ea222.  v0:= temp @kind object;
  #L2ea224.  `@@kotlinx.coroutines.internal.c0.c` @type ^`kotlinx.coroutines.m2` := v0 @kind object;
  #L2ea228.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.c0` v0 @kind this) @signature `Lkotlinx/coroutines/internal/c0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ea23c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ea242.  return @kind void;
}
procedure `kotlinx.coroutines.m2` `a`(`kotlinx.coroutines.internal.c0` v7 @kind this) @signature `Lkotlinx/coroutines/internal/c0;.a:()Lkotlinx/coroutines/m2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ea118.  v0:= 0I;
  #L2ea11a.  v1:= `@@kotlinx.coroutines.internal.c0.b` @type ^`boolean` @kind boolean;
  #L2ea11e.  if v1 == 0 then goto L2ea130;
  #L2ea122.  v1:= `@@kotlinx.coroutines.internal.m.a` @type ^`kotlinx.coroutines.internal.m` @kind object;
  #L2ea126.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/internal/m;.c:()Ljava/util/List;` @kind virtual;
  #L2ea12c.  v1:= temp @kind object;
  #L2ea12e.  goto L2ea148;
  #L2ea130.  call temp:= `b`() @signature `La;.b:()Ljava/util/Iterator;` @kind static;
  #L2ea136.  v1:= temp @kind object;
  #L2ea138.  call temp:= `asSequence`(v1) @signature `Lkotlin/sequences/SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @kind static;
  #L2ea13e.  v1:= temp @kind object;
  #L2ea140.  call temp:= `toList`(v1) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L2ea146.  v1:= temp @kind object;
  #L2ea148.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2ea14e.  v2:= temp @kind object;
  #L2ea150.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ea156.  v3:= temp;
  #L2ea158.  if v3 != 0 then goto L2ea160;
  #L2ea15c.  v3:= v0 @kind object;
  #L2ea15e.  goto L2ea1ae;
  #L2ea160.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ea166.  v3:= temp @kind object;
  #L2ea168.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ea16e.  v4:= temp;
  #L2ea170.  if v4 != 0 then goto L2ea176;
  #L2ea174.  goto L2ea1ae;
  #L2ea176.  v4:= v3 @kind object;
  #L2ea178.  v4:= (`kotlinx.coroutines.internal.MainDispatcherFactory`) v4 @kind object;
  #L2ea17c.  call temp:= `getLoadPriority`(v4) @signature `Lkotlinx/coroutines/internal/MainDispatcherFactory;.getLoadPriority:()I` @kind interface;
  #L2ea182.  v4:= temp;
  #L2ea184.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ea18a.  v5:= temp @kind object;
  #L2ea18c.  v6:= v5 @kind object;
  #L2ea18e.  v6:= (`kotlinx.coroutines.internal.MainDispatcherFactory`) v6 @kind object;
  #L2ea192.  call temp:= `getLoadPriority`(v6) @signature `Lkotlinx/coroutines/internal/MainDispatcherFactory;.getLoadPriority:()I` @kind interface;
  #L2ea198.  v6:= temp;
  #L2ea19a.  if v4 >= v6 then goto L2ea1a2;
  #L2ea19e.  v3:= v5 @kind object;
  #L2ea1a0.  v4:= v6;
  #L2ea1a2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ea1a8.  v5:= temp;
  #L2ea1aa.  if v5 != 0 then goto L2ea184;
  #L2ea1ae.  v3:= (`kotlinx.coroutines.internal.MainDispatcherFactory`) v3 @kind object;
  #L2ea1b2.  if v3 != 0 then goto L2ea1ba;
  #L2ea1b6.  v1:= v0 @kind object;
  #L2ea1b8.  goto L2ea1c2;
  #L2ea1ba.  call temp:= `e`(v3, v1) @signature `Lkotlinx/coroutines/internal/d0;.e:(Lkotlinx/coroutines/internal/MainDispatcherFactory;Ljava/util/List;)Lkotlinx/coroutines/m2;` @kind static;
  #L2ea1c0.  v1:= temp @kind object;
  #L2ea1c2.  if v1 != 0 then goto L2ea1de;
  #L2ea1c6.  v1:= 3I;
  #L2ea1c8.  call temp:= `b`(v0, v0, v1, v0) @signature `Lkotlinx/coroutines/internal/d0;.b:(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Lkotlinx/coroutines/internal/e0;` @kind static;
  #L2ea1ce.  v1:= temp @kind object;
  #L2ea1d0.  goto L2ea1de;
  #L2ea1d2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ea1d4.  v2:= 2I;
  #L2ea1d6.  call temp:= `b`(v1, v0, v2, v0) @signature `Lkotlinx/coroutines/internal/d0;.b:(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Lkotlinx/coroutines/internal/e0;` @kind static;
  #L2ea1dc.  v1:= temp @kind object;
  #L2ea1de.  return v1 @kind object;
  catch `java.lang.Throwable` @[L2ea11a..L2ea1d0] goto L2ea1d2;
}
