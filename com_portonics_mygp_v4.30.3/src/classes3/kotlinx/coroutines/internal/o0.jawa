record `kotlinx.coroutines.internal.o0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.y2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.o0.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.ThreadLocal` `kotlinx.coroutines.internal.o0.c` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext$Key` `kotlinx.coroutines.internal.o0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.o0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.ThreadLocal` v2 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.<init>:(Ljava/lang/Object;Ljava/lang/ThreadLocal;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2eb698.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2eb69e.  v0.`kotlinx.coroutines.internal.o0.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2eb6a2.  v0.`kotlinx.coroutines.internal.o0.c` @type ^`java.lang.ThreadLocal` := v2 @kind object;
  #L2eb6a6.  v1:= new `kotlinx.coroutines.internal.p0`;
  #L2eb6aa.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/p0;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L2eb6b0.  v0.`kotlinx.coroutines.internal.o0.d` @type ^`kotlin.coroutines.CoroutineContext$Key` := v1 @kind object;
  #L2eb6b4.  return @kind void;
}
procedure `void` `C`(`kotlinx.coroutines.internal.o0` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.C:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L2eb6c8.  v1:= v0.`kotlinx.coroutines.internal.o0.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L2eb6cc.  call `set`(v1, v2) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L2eb6d2.  return @kind void;
}
procedure `java.lang.Object` `G0`(`kotlinx.coroutines.internal.o0` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.G0:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eb584.  v3:= v2.`kotlinx.coroutines.internal.o0.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L2eb588.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L2eb58e.  v3:= temp @kind object;
  #L2eb590.  v0:= v2.`kotlinx.coroutines.internal.o0.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L2eb594.  v1:= v2.`kotlinx.coroutines.internal.o0.b` @type ^`java.lang.Object` @kind object;
  #L2eb598.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L2eb59e.  return v3 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.internal.o0` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2eb568.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/x2;.a:(Lkotlinx/coroutines/y2;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L2eb56e.  v1:= temp @kind object;
  #L2eb570.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.internal.o0` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eb654.  call temp:= `getKey`(v1) @signature `Lkotlinx/coroutines/internal/o0;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind virtual;
  #L2eb65a.  v0:= temp @kind object;
  #L2eb65c.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2eb662.  v2:= temp;
  #L2eb664.  if v2 == 0 then goto L2eb66c;
  #L2eb668.  v2:= v1 @kind object;
  #L2eb66a.  goto L2eb66e;
  #L2eb66c.  v2:= 0I;
  #L2eb66e.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`kotlinx.coroutines.internal.o0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/o0;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eb680.  v0:= v1.`kotlinx.coroutines.internal.o0.d` @type ^`kotlin.coroutines.CoroutineContext$Key` @kind object;
  #L2eb684.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.internal.o0` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2eb608.  call temp:= `getKey`(v1) @signature `Lkotlinx/coroutines/internal/o0;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind virtual;
  #L2eb60e.  v0:= temp @kind object;
  #L2eb610.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2eb616.  v2:= temp;
  #L2eb618.  if v2 == 0 then goto L2eb622;
  #L2eb61c.  v2:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2eb620.  goto L2eb624;
  #L2eb622.  v2:= v1 @kind object;
  #L2eb624.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.internal.o0` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/internal/o0;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L2eb638.  call temp:= `b`(v0, v1) @signature `Lkotlinx/coroutines/x2;.b:(Lkotlinx/coroutines/y2;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L2eb63e.  v1:= temp @kind object;
  #L2eb640.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.o0` v2 @kind this) @signature `Lkotlinx/coroutines/internal/o0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eb5b0.  v0:= new `java.lang.StringBuilder`;
  #L2eb5b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2eb5ba.  v1:= "ThreadLocal(value=" @kind object;
  #L2eb5be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5c4.  v1:= v2.`kotlinx.coroutines.internal.o0.b` @type ^`java.lang.Object` @kind object;
  #L2eb5c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5ce.  v1:= ", threadLocal = " @kind object;
  #L2eb5d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5d8.  v1:= v2.`kotlinx.coroutines.internal.o0.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L2eb5dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5e2.  v1:= 41I;
  #L2eb5e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2eb5ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2eb5f2.  v0:= temp @kind object;
  #L2eb5f4.  return v0 @kind object;
}
