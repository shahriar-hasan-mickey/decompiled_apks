record `kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.$block` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$safeCtor$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e7fec.  v0.`kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.$block` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L2e7ff0.  v1:= 1I;
  #L2e7ff2.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2e7ff8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$safeCtor$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e7f68.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2e7f6c.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$safeCtor$1;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2e7f72.  v1:= temp @kind object;
  #L2e7f74.  return v1 @kind object;
}
procedure `java.lang.Throwable` `invoke`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$safeCtor$1;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e7f88.  v0:= v2.`kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1.$block` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2e7f8c.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e7f90.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e7f96.  v3:= temp @kind object;
  #L2e7f98.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L2e7f9c.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7fa2.  v3:= temp @kind object;
  #L2e7fa4.  goto L2e7fbc;
  #L2e7fa6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e7fa8.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e7fac.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2e7fb2.  v3:= temp @kind object;
  #L2e7fb4.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7fba.  v3:= temp @kind object;
  #L2e7fbc.  call temp:= `isFailure-impl`(v3) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L2e7fc2.  v0:= temp;
  #L2e7fc4.  if v0 == 0 then goto L2e7fca;
  #L2e7fc8.  v3:= 0I;
  #L2e7fca.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L2e7fce.  return v3 @kind object;
  catch `java.lang.Throwable` @[L2e7f8c..L2e7fa4] goto L2e7fa6;
}
