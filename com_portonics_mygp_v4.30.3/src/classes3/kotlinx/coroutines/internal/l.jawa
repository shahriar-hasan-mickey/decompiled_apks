record `kotlinx.coroutines.internal.l` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.l` v0 @kind this) @signature `Lkotlinx/coroutines/internal/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e7bb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e7bb6.  return @kind void;
}
procedure `int` `compare`(`kotlinx.coroutines.internal.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/l;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e7b68.  v2:= (`java.lang.reflect.Constructor`) v2 @kind object;
  #L2e7b6c.  call temp:= `getParameterTypes`(v2) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L2e7b72.  v2:= temp @kind object;
  #L2e7b74.  v2:= length @variable v2;
  #L2e7b76.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e7b7c.  v2:= temp @kind object;
  #L2e7b7e.  v1:= (`java.lang.reflect.Constructor`) v1 @kind object;
  #L2e7b82.  call temp:= `getParameterTypes`(v1) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L2e7b88.  v1:= temp @kind object;
  #L2e7b8a.  v1:= length @variable v1;
  #L2e7b8c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e7b92.  v1:= temp @kind object;
  #L2e7b94.  call temp:= `compareValues`(v2, v1) @signature `Lkotlin/comparisons/ComparisonsKt;.compareValues:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind static;
  #L2e7b9a.  v1:= temp;
  #L2e7b9c.  return v1;
}
