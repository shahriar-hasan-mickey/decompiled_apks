record `kotlinx.coroutines.internal.s0` @kind class @AccessFlag FINAL {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.internal.s0.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object`[] `kotlinx.coroutines.internal.s0.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.y2`[] `kotlinx.coroutines.internal.s0.c` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.s0.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.s0` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/s0;.<init>:(Lkotlin/coroutines/CoroutineContext;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ebc3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ebc42.  v0.`kotlinx.coroutines.internal.s0.a` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L2ebc46.  v1:= new `java.lang.Object`[v2];
  #L2ebc4a.  v0.`kotlinx.coroutines.internal.s0.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2ebc4e.  v1:= new `kotlinx.coroutines.y2`[v2];
  #L2ebc52.  v0.`kotlinx.coroutines.internal.s0.c` @type ^`kotlinx.coroutines.y2`[] := v1 @kind object;
  #L2ebc56.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.internal.s0` v2 @kind this, `kotlinx.coroutines.y2` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/s0;.a:(Lkotlinx/coroutines/y2;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ebc68.  v0:= v2.`kotlinx.coroutines.internal.s0.b` @type ^`java.lang.Object`[] @kind object;
  #L2ebc6c.  v1:= v2.`kotlinx.coroutines.internal.s0.d` @type ^`int`;
  #L2ebc70.  v0[v1]:= v4 @kind object;
  #L2ebc74.  v4:= v2.`kotlinx.coroutines.internal.s0.c` @type ^`kotlinx.coroutines.y2`[] @kind object;
  #L2ebc78.  v0:= v1 + 1;
  #L2ebc7c.  v2.`kotlinx.coroutines.internal.s0.d` @type ^`int` := v0;
  #L2ebc80.  v4[v1]:= v3 @kind object;
  #L2ebc84.  return @kind void;
}
procedure `void` `b`(`kotlinx.coroutines.internal.s0` v4 @kind this, `kotlin.coroutines.CoroutineContext` v5 @kind object) @signature `Lkotlinx/coroutines/internal/s0;.b:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ebc98.  v0:= v4.`kotlinx.coroutines.internal.s0.c` @type ^`kotlinx.coroutines.y2`[] @kind object;
  #L2ebc9c.  v0:= length @variable v0;
  #L2ebc9e.  v0:= v0 + -1;
  #L2ebca2.  if v0 < 0 then goto L2ebcd0;
  #L2ebca6.  v1:= v0 + -1;
  #L2ebcaa.  v2:= v4.`kotlinx.coroutines.internal.s0.c` @type ^`kotlinx.coroutines.y2`[] @kind object;
  #L2ebcae.  v2:= v2[v0] @kind object;
  #L2ebcb2.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2ebcb8.  v3:= v4.`kotlinx.coroutines.internal.s0.b` @type ^`java.lang.Object`[] @kind object;
  #L2ebcbc.  v0:= v3[v0] @kind object;
  #L2ebcc0.  call `C`(v2, v5, v0) @signature `Lkotlinx/coroutines/y2;.C:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind interface;
  #L2ebcc6.  if v1 >= 0 then goto L2ebccc;
  #L2ebcca.  goto L2ebcd0;
  #L2ebccc.  v0:= v1;
  #L2ebcce.  goto L2ebca6;
  #L2ebcd0.  return @kind void;
}
