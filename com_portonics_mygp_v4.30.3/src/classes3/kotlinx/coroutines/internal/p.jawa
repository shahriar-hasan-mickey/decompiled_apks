record `kotlinx.coroutines.internal.p` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.CoroutineDispatcher` @kind class, `java.lang.Runnable` @kind interface, `kotlinx.coroutines.t0` @kind interface {
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.internal.p.c` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.p.d` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.t0` `kotlinx.coroutines.internal.p.e` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `kotlinx.coroutines.internal.y` `kotlinx.coroutines.internal.p.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.p.g` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.p.runningWorkers` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.p` v0 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/p;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e8a9c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @kind direct;
  #L2e8aa2.  v0.`kotlinx.coroutines.internal.p.c` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v1 @kind object;
  #L2e8aa6.  v0.`kotlinx.coroutines.internal.p.d` @type ^`int` := v2;
  #L2e8aaa.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.t0` @kind boolean;
  #L2e8aae.  if v2 == 0 then goto L2e8ab8;
  #L2e8ab2.  v1:= (`kotlinx.coroutines.t0`) v1 @kind object;
  #L2e8ab6.  goto L2e8aba;
  #L2e8ab8.  v1:= 0I;
  #L2e8aba.  if v1 != 0 then goto L2e8ac6;
  #L2e8abe.  call temp:= `a`() @signature `Lkotlinx/coroutines/r0;.a:()Lkotlinx/coroutines/t0;` @kind static;
  #L2e8ac4.  v1:= temp @kind object;
  #L2e8ac6.  v0.`kotlinx.coroutines.internal.p.e` @type ^`kotlinx.coroutines.t0` := v1 @kind object;
  #L2e8aca.  v1:= new `kotlinx.coroutines.internal.y`;
  #L2e8ace.  v2:= 0I;
  #L2e8ad0.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/y;.<init>:(Z)V` @kind direct;
  #L2e8ad6.  v0.`kotlinx.coroutines.internal.p.f` @type ^`kotlinx.coroutines.internal.y` := v1 @kind object;
  #L2e8ada.  v1:= new `java.lang.Object`;
  #L2e8ade.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e8ae4.  v0.`kotlinx.coroutines.internal.p.g` @type ^`java.lang.Object` := v1 @kind object;
  #L2e8ae8.  return @kind void;
}
procedure `boolean` `R0`(`kotlinx.coroutines.internal.p` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/p;.R0:(Ljava/lang/Runnable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2e89f8.  v0:= v1.`kotlinx.coroutines.internal.p.f` @type ^`kotlinx.coroutines.internal.y` @kind object;
  #L2e89fc.  call temp:= `a`(v0, v2) @signature `Lkotlinx/coroutines/internal/y;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e8a02.  v2:= v1.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int`;
  #L2e8a06.  v0:= v1.`kotlinx.coroutines.internal.p.d` @type ^`int`;
  #L2e8a0a.  if v2 < v0 then goto L2e8a12;
  #L2e8a0e.  v2:= 1I;
  #L2e8a10.  goto L2e8a14;
  #L2e8a12.  v2:= 0I;
  #L2e8a14.  return v2;
}
procedure `boolean` `S0`(`kotlinx.coroutines.internal.p` v3 @kind this) @signature `Lkotlinx/coroutines/internal/p;.S0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e8a28.  v0:= v3.`kotlinx.coroutines.internal.p.g` @type ^`java.lang.Object` @kind object;
  #L2e8a2c.  @monitorenter v0
  #L2e8a2e.  v1:= v3.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int`;
  #L2e8a32.  v2:= v3.`kotlinx.coroutines.internal.p.d` @type ^`int`;
  #L2e8a36.  if v1 < v2 then goto L2e8a40;
  #L2e8a3a.  v1:= 0I;
  #L2e8a3c.  @monitorexit v0
  #L2e8a3e.  return v1;
  #L2e8a40.  v1:= v3.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int`;
  #L2e8a44.  v2:= 1I;
  #L2e8a46.  v1:= v1 + v2 @kind int;
  #L2e8a48.  v3.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int` := v1;
  #L2e8a4c.  @monitorexit v0
  #L2e8a4e.  return v2;
  #L2e8a50.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e8a52.  @monitorexit v0
  #L2e8a54.  throw v1;
  catch `java.lang.Throwable` @[L2e8a2e..L2e8a36] goto L2e8a50;
  catch `java.lang.Throwable` @[L2e8a40..L2e8a4c] goto L2e8a50;
}
procedure `void` `N0`(`kotlinx.coroutines.internal.p` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/p;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L2e8afc.  call temp:= `R0`(v0, v2) @signature `Lkotlinx/coroutines/internal/p;.R0:(Ljava/lang/Runnable;)Z` @kind direct;
  #L2e8b02.  v1:= temp;
  #L2e8b04.  if v1 == 0 then goto L2e8b0a;
  #L2e8b08.  goto L2e8b22;
  #L2e8b0a.  call temp:= `S0`(v0) @signature `Lkotlinx/coroutines/internal/p;.S0:()Z` @kind direct;
  #L2e8b10.  v1:= temp;
  #L2e8b12.  if v1 != 0 then goto L2e8b18;
  #L2e8b16.  goto L2e8b22;
  #L2e8b18.  v1:= v0.`kotlinx.coroutines.internal.p.c` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e8b1c.  call `N0`(v1, v0, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2e8b22.  return @kind void;
}
procedure `void` `O0`(`kotlinx.coroutines.internal.p` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/p;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L2e8b34.  call temp:= `R0`(v0, v2) @signature `Lkotlinx/coroutines/internal/p;.R0:(Ljava/lang/Runnable;)Z` @kind direct;
  #L2e8b3a.  v1:= temp;
  #L2e8b3c.  if v1 == 0 then goto L2e8b42;
  #L2e8b40.  goto L2e8b5a;
  #L2e8b42.  call temp:= `S0`(v0) @signature `Lkotlinx/coroutines/internal/p;.S0:()Z` @kind direct;
  #L2e8b48.  v1:= temp;
  #L2e8b4a.  if v1 != 0 then goto L2e8b50;
  #L2e8b4e.  goto L2e8b5a;
  #L2e8b50.  v1:= v0.`kotlinx.coroutines.internal.p.c` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e8b54.  call `O0`(v1, v0, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2e8b5a.  return @kind void;
}
procedure `void` `c`(`kotlinx.coroutines.internal.p` v1 @kind this, `long` v2 , `kotlinx.coroutines.o` v4 @kind object) @signature `Lkotlinx/coroutines/internal/p;.c:(JLkotlinx/coroutines/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8c34.  v0:= v1.`kotlinx.coroutines.internal.p.e` @type ^`kotlinx.coroutines.t0` @kind object;
  #L2e8c38.  call `c`(v0, v2, v4) @signature `Lkotlinx/coroutines/t0;.c:(JLkotlinx/coroutines/o;)V` @kind interface;
  #L2e8c3e.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.internal.p` v4 @kind this) @signature `Lkotlinx/coroutines/internal/p;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e8b6c.  v0:= 0I;
  #L2e8b6e.  v1:= 0I;
  #L2e8b70.  v2:= v4.`kotlinx.coroutines.internal.p.f` @type ^`kotlinx.coroutines.internal.y` @kind object;
  #L2e8b74.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/internal/y;.d:()Ljava/lang/Object;` @kind virtual;
  #L2e8b7a.  v2:= temp @kind object;
  #L2e8b7c.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L2e8b80.  if v2 == 0 then goto L2e8bc0;
  #L2e8b84.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2e8b8a.  goto L2e8b98;
  #L2e8b8c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e8b8e.  v3:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2e8b92.  call `a`(v3, v2) @signature `Lkotlinx/coroutines/h0;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L2e8b98.  v1:= v1 + 1;
  #L2e8b9c.  v2:= 16I;
  #L2e8ba0.  if v1 < v2 then goto L2e8b70;
  #L2e8ba4.  v2:= v4.`kotlinx.coroutines.internal.p.c` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e8ba8.  call temp:= `P0`(v2, v4) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.P0:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L2e8bae.  v2:= temp;
  #L2e8bb0.  if v2 == 0 then goto L2e8b70;
  #L2e8bb4.  v0:= v4.`kotlinx.coroutines.internal.p.c` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e8bb8.  call `N0`(v0, v4, v4) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2e8bbe.  return @kind void;
  #L2e8bc0.  v1:= v4.`kotlinx.coroutines.internal.p.g` @type ^`java.lang.Object` @kind object;
  #L2e8bc4.  @monitorenter v1
  #L2e8bc6.  v2:= v4.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int`;
  #L2e8bca.  v2:= v2 + -1;
  #L2e8bce.  v4.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int` := v2;
  #L2e8bd2.  v2:= v4.`kotlinx.coroutines.internal.p.f` @type ^`kotlinx.coroutines.internal.y` @kind object;
  #L2e8bd6.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/internal/y;.c:()I` @kind virtual;
  #L2e8bdc.  v2:= temp;
  #L2e8bde.  if v2 != 0 then goto L2e8be6;
  #L2e8be2.  @monitorexit v1
  #L2e8be4.  return @kind void;
  #L2e8be6.  v2:= v4.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int`;
  #L2e8bea.  v2:= v2 + 1;
  #L2e8bee.  v4.`kotlinx.coroutines.internal.p.runningWorkers` @type ^`int` := v2;
  #L2e8bf2.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e8bf6.  @monitorexit v1
  #L2e8bf8.  goto L2e8b6e;
  #L2e8bfa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e8bfc.  @monitorexit v1
  #L2e8bfe.  goto L2e8c02;
  #L2e8c00.  throw v0;
  #L2e8c02.  goto L2e8c00;
  catch `java.lang.Throwable` @[L2e8b84..L2e8b8a] goto L2e8b8c;
  catch `java.lang.Throwable` @[L2e8bc6..L2e8bde] goto L2e8bfa;
  catch `java.lang.Throwable` @[L2e8be6..L2e8bf6] goto L2e8bfa;
}
procedure `kotlinx.coroutines.z0` `v`(`kotlinx.coroutines.internal.p` v1 @kind this, `long` v2 , `java.lang.Runnable` v4 @kind object, `kotlin.coroutines.CoroutineContext` v5 @kind object) @signature `Lkotlinx/coroutines/internal/p;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8a7c.  v0:= v1.`kotlinx.coroutines.internal.p.e` @type ^`kotlinx.coroutines.t0` @kind object;
  #L2e8a80.  call temp:= `v`(v0, v2, v4, v5) @signature `Lkotlinx/coroutines/t0;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @kind interface;
  #L2e8a86.  v2:= temp @kind object;
  #L2e8a88.  return v2 @kind object;
}
