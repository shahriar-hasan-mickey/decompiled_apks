record `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `java.lang.reflect.Constructor` `kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4.$constructor$inlined` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e7f48.  v0.`kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4.$constructor$inlined` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L2e7f4c.  v1:= 1I;
  #L2e7f4e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2e7f54.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e7ea4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2e7ea8.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2e7eae.  v1:= temp @kind object;
  #L2e7eb0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `invoke`(`kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e7ec4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e7ec8.  v0:= v2.`kotlinx.coroutines.internal.ExceptionsConstructorKt$createSafeConstructor$$inlined$safeCtor$4.$constructor$inlined` @type ^`java.lang.reflect.Constructor` @kind object;
  #L2e7ecc.  v1:= 0I;
  #L2e7ece.  v1:= new `java.lang.Object`[v1];
  #L2e7ed2.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e7ed8.  v0:= temp @kind object;
  #L2e7eda.  if v0 == 0 then goto L2e7ef2;
  #L2e7ede.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L2e7ee2.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/Throwable;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2e7ee8.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7eee.  v3:= temp @kind object;
  #L2e7ef0.  goto L2e7f18;
  #L2e7ef2.  v3:= new `java.lang.NullPointerException`;
  #L2e7ef6.  v0:= "null cannot be cast to non-null type kotlin.Throwable" @kind object;
  #L2e7efa.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e7f00.  throw v3;
  #L2e7f02.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e7f04.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2e7f08.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2e7f0e.  v3:= temp @kind object;
  #L2e7f10.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7f16.  v3:= temp @kind object;
  #L2e7f18.  call temp:= `isFailure-impl`(v3) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L2e7f1e.  v0:= temp;
  #L2e7f20.  if v0 == 0 then goto L2e7f26;
  #L2e7f24.  v3:= 0I;
  #L2e7f26.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L2e7f2a.  return v3 @kind object;
  catch `java.lang.Throwable` @[L2e7ec4..L2e7f02] goto L2e7f02;
}
