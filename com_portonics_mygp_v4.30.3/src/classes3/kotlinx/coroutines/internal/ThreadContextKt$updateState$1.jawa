record `kotlinx.coroutines.internal.ThreadContextKt$updateState$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlinx.coroutines.internal.ThreadContextKt$updateState$1` `@@kotlinx.coroutines.internal.ThreadContextKt$updateState$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2eb400.  v0:= new `kotlinx.coroutines.internal.ThreadContextKt$updateState$1`;
  #L2eb404.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.<init>:()V` @kind direct;
  #L2eb40a.  `@@kotlinx.coroutines.internal.ThreadContextKt$updateState$1.INSTANCE` @type ^`kotlinx.coroutines.internal.ThreadContextKt$updateState$1` := v0 @kind object;
  #L2eb40e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ThreadContextKt$updateState$1` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2eb420.  v0:= 2I;
  #L2eb422.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2eb428.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.ThreadContextKt$updateState$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2eb3ac.  v1:= (`kotlinx.coroutines.internal.s0`) v1 @kind object;
  #L2eb3b0.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2eb3b4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.invoke:(Lkotlinx/coroutines/internal/s0;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlinx/coroutines/internal/s0;` @kind virtual;
  #L2eb3ba.  v1:= temp @kind object;
  #L2eb3bc.  return v1 @kind object;
}
procedure `kotlinx.coroutines.internal.s0` `invoke`(`kotlinx.coroutines.internal.ThreadContextKt$updateState$1` v1 @kind this, `kotlinx.coroutines.internal.s0` v2 @kind object, `kotlin.coroutines.CoroutineContext$Element` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$updateState$1;.invoke:(Lkotlinx/coroutines/internal/s0;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlinx/coroutines/internal/s0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2eb3d0.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.y2` @kind boolean;
  #L2eb3d4.  if v0 == 0 then goto L2eb3ee;
  #L2eb3d8.  v3:= (`kotlinx.coroutines.y2`) v3 @kind object;
  #L2eb3dc.  v0:= v2.`kotlinx.coroutines.internal.s0.a` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L2eb3e0.  call temp:= `G0`(v3, v0) @signature `Lkotlinx/coroutines/y2;.G0:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind interface;
  #L2eb3e6.  v0:= temp @kind object;
  #L2eb3e8.  call `a`(v2, v3, v0) @signature `Lkotlinx/coroutines/internal/s0;.a:(Lkotlinx/coroutines/y2;Ljava/lang/Object;)V` @kind virtual;
  #L2eb3ee.  return v2 @kind object;
}
