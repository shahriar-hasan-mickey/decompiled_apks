record `kotlinx.coroutines.internal.v` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.f0` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.internal.v.a` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.LockFreeLinkedListNode` `kotlinx.coroutines.internal.v.b` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.t` `kotlinx.coroutines.internal.v.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.v` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object, `kotlinx.coroutines.internal.t` v3 @kind object) @signature `Lkotlinx/coroutines/internal/v;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/t;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e9160.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/f0;.<init>:()V` @kind direct;
  #L2e9166.  v0.`kotlinx.coroutines.internal.v.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v1 @kind object;
  #L2e916a.  v0.`kotlinx.coroutines.internal.v.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` := v2 @kind object;
  #L2e916e.  v0.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` := v3 @kind object;
  #L2e9172.  return @kind void;
}
procedure `kotlinx.coroutines.internal.d` `a`(`kotlinx.coroutines.internal.v` v1 @kind this) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e9140.  v0:= v1.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2e9144.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/b;.b:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2e914a.  v0:= temp @kind object;
  #L2e914c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.internal.v` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/internal/v;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e900c.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e9012.  v0:= temp;
  #L2e9014.  if v0 == 0 then goto L2e9038;
  #L2e9018.  v0:= v5.`kotlinx.coroutines.internal.v.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L2e901c.  if v6 != v0 then goto L2e9024;
  #L2e9020.  v0:= 1I;
  #L2e9022.  goto L2e9026;
  #L2e9024.  v0:= 0I;
  #L2e9026.  if v0 == 0 then goto L2e902c;
  #L2e902a.  goto L2e9038;
  #L2e902c.  v6:= new `java.lang.AssertionError`;
  #L2e9030.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e9036.  throw v6;
  #L2e9038.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.internal.LockFreeLinkedListNode{ kotlinx.coroutines.internal.LockFreeLinkedListKt.Node }" @kind object;
  #L2e903c.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2e9042.  v6:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v6 @kind object;
  #L2e9046.  v0:= v5.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2e904a.  call temp:= `j`(v0, v5) @signature `Lkotlinx/coroutines/internal/t;.j:(Lkotlinx/coroutines/internal/v;)Ljava/lang/Object;` @kind virtual;
  #L2e9050.  v0:= temp @kind object;
  #L2e9052.  v1:= `@@kotlinx.coroutines.internal.x.a` @type ^`java.lang.Object` @kind object;
  #L2e9056.  v2:= 0I;
  #L2e9058.  if v0 != v1 then goto L2e908a;
  #L2e905c.  v0:= v5.`kotlinx.coroutines.internal.v.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L2e9060.  call temp:= `y`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.y:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/internal/g0;` @kind static;
  #L2e9066.  v3:= temp @kind object;
  #L2e9068.  v4:= `@@kotlinx.coroutines.internal.LockFreeLinkedListNode.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e906c.  call temp:= `compareAndSet`(v4, v6, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e9072.  v3:= temp;
  #L2e9074.  if v3 == 0 then goto L2e9088;
  #L2e9078.  v3:= v5.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2e907c.  call `k`(v3, v6) @signature `Lkotlinx/coroutines/internal/t;.k:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind virtual;
  #L2e9082.  call temp:= `w`(v0, v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.w:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/f0;)Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind static;
  #L2e9088.  return v1 @kind object;
  #L2e908a.  if v0 == 0 then goto L2e90a0;
  #L2e908e.  call temp:= `a`(v5) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2e9094.  v1:= temp @kind object;
  #L2e9096.  call temp:= `e`(v1, v0) @signature `Lkotlinx/coroutines/internal/d;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e909c.  v0:= temp @kind object;
  #L2e909e.  goto L2e90b0;
  #L2e90a0.  call temp:= `a`(v5) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2e90a6.  v0:= temp @kind object;
  #L2e90a8.  call temp:= `f`(v0) @signature `Lkotlinx/coroutines/internal/d;.f:()Ljava/lang/Object;` @kind virtual;
  #L2e90ae.  v0:= temp @kind object;
  #L2e90b0.  v1:= `@@kotlinx.coroutines.internal.c.a` @type ^`java.lang.Object` @kind object;
  #L2e90b4.  if v0 != v1 then goto L2e90c2;
  #L2e90b8.  call temp:= `a`(v5) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2e90be.  v0:= temp @kind object;
  #L2e90c0.  goto L2e90dc;
  #L2e90c2.  if v0 != 0 then goto L2e90d8;
  #L2e90c6.  v0:= v5.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2e90ca.  v1:= v5.`kotlinx.coroutines.internal.v.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L2e90ce.  call temp:= `n`(v0, v6, v1) @signature `Lkotlinx/coroutines/internal/t;.n:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L2e90d4.  v0:= temp @kind object;
  #L2e90d6.  goto L2e90dc;
  #L2e90d8.  v0:= v5.`kotlinx.coroutines.internal.v.b` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode` @kind object;
  #L2e90dc.  v1:= `@@kotlinx.coroutines.internal.LockFreeLinkedListNode.b` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e90e0.  call temp:= `compareAndSet`(v1, v6, v5, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e90e6.  return v2 @kind object;
}
procedure `void` `d`(`kotlinx.coroutines.internal.v` v1 @kind this) @signature `Lkotlinx/coroutines/internal/v;.d:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e9184.  v0:= v1.`kotlinx.coroutines.internal.v.c` @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L2e9188.  call `g`(v0, v1) @signature `Lkotlinx/coroutines/internal/t;.g:(Lkotlinx/coroutines/internal/v;)V` @kind virtual;
  #L2e918e.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.v` v2 @kind this) @signature `Lkotlinx/coroutines/internal/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e90f8.  v0:= new `java.lang.StringBuilder`;
  #L2e90fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e9102.  v1:= "PrepareOp(op=" @kind object;
  #L2e9106.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e910c.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/internal/v;.a:()Lkotlinx/coroutines/internal/d;` @kind virtual;
  #L2e9112.  v1:= temp @kind object;
  #L2e9114.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e911a.  v1:= 41I;
  #L2e911e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e9124.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e912a.  v0:= temp @kind object;
  #L2e912c.  return v0 @kind object;
}
