record `kotlinx.coroutines.internal.j` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.v0` @kind class, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface, `kotlin.coroutines.Continuation` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.j._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.internal.j.f` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.internal.j.g` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.j.h` @AccessFlag PUBLIC;
  `java.lang.Object` `kotlinx.coroutines.internal.j.i` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.j.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e794c.  v0:= constclass @type ^`kotlinx.coroutines.internal.j` @kind object;
  #L2e7950.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L2e7954.  v2:= "_reusableCancellableContinuation" @kind object;
  #L2e7958.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L2e795e.  v0:= temp @kind object;
  #L2e7960.  `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L2e7964.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.j` v1 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e7978.  v0:= -1I;
  #L2e797a.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/v0;.<init>:(I)V` @kind direct;
  #L2e7980.  v1.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v2 @kind object;
  #L2e7984.  v1.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L2e7988.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/k;.a:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2e798e.  v2:= temp @kind object;
  #L2e7990.  v1.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` := v2 @kind object;
  #L2e7994.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/j;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2e799a.  v2:= temp @kind object;
  #L2e799c.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.b:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L2e79a2.  v2:= temp @kind object;
  #L2e79a4.  v1.`kotlinx.coroutines.internal.j.i` @type ^`java.lang.Object` := v2 @kind object;
  #L2e79a8.  v2:= 0I;
  #L2e79aa.  v1.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` := v2 @kind object;
  #L2e79ae.  return @kind void;
}
procedure `kotlinx.coroutines.p` `o`(`kotlinx.coroutines.internal.j` v2 @kind this) @signature `Lkotlinx/coroutines/internal/j;.o:()Lkotlinx/coroutines/p;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2e7924.  v0:= v2.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e7928.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L2e792c.  if v1 == 0 then goto L2e7936;
  #L2e7930.  v0:= (`kotlinx.coroutines.p`) v0 @kind object;
  #L2e7934.  goto L2e7938;
  #L2e7936.  v0:= 0I;
  #L2e7938.  return v0 @kind object;
}
procedure `void` `a`(`kotlinx.coroutines.internal.j` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.a:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e79e0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.b0` @kind boolean;
  #L2e79e4.  if v0 == 0 then goto L2e79f6;
  #L2e79e8.  v2:= (`kotlinx.coroutines.b0`) v2 @kind object;
  #L2e79ec.  v2:= v2.`kotlinx.coroutines.b0.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2e79f0.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e79f6.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `c`(`kotlinx.coroutines.internal.j` v0 @kind this) @signature `Lkotlinx/coroutines/internal/j;.c:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L2e7848.  return v0 @kind object;
}
procedure `java.lang.Object` `g`(`kotlinx.coroutines.internal.j` v2 @kind this) @signature `Lkotlinx/coroutines/internal/j;.g:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e76f4.  v0:= v2.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` @kind object;
  #L2e76f8.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e76fe.  v1:= temp;
  #L2e7700.  if v1 == 0 then goto L2e7728;
  #L2e7704.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/k;.a:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2e770a.  v1:= temp @kind object;
  #L2e770c.  if v0 == v1 then goto L2e7714;
  #L2e7710.  v1:= 1I;
  #L2e7712.  goto L2e7716;
  #L2e7714.  v1:= 0I;
  #L2e7716.  if v1 == 0 then goto L2e771c;
  #L2e771a.  goto L2e7728;
  #L2e771c.  v0:= new `java.lang.AssertionError`;
  #L2e7720.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e7726.  throw v0;
  #L2e7728.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/k;.a:()Lkotlinx/coroutines/internal/k0;` @kind static;
  #L2e772e.  v1:= temp @kind object;
  #L2e7730.  v2.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` := v1 @kind object;
  #L2e7734.  return v0 @kind object;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.internal.j` v2 @kind this) @signature `Lkotlinx/coroutines/internal/j;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e787c.  v0:= v2.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2e7880.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L2e7884.  if v1 == 0 then goto L2e788e;
  #L2e7888.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L2e788c.  goto L2e7890;
  #L2e788e.  v0:= 0I;
  #L2e7890.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.internal.j` v1 @kind this) @signature `Lkotlinx/coroutines/internal/j;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e785c.  v0:= v1.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2e7860.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e7866.  v0:= temp @kind object;
  #L2e7868.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.j` v1 @kind this) @signature `Lkotlinx/coroutines/internal/j;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e7748.  v0:= 0I;
  #L2e774a.  return v0 @kind object;
}
procedure `void` `h`(`kotlinx.coroutines.internal.j` v2 @kind this) @signature `Lkotlinx/coroutines/internal/j;.h:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e79c0.  v0:= v2.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e79c4.  v1:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e79c8.  if v0 == v1 then goto L2e79c0;
  #L2e79cc.  return @kind void;
}
procedure `kotlinx.coroutines.p` `k`(`kotlinx.coroutines.internal.j` v3 @kind this) @signature `Lkotlinx/coroutines/internal/j;.k:()Lkotlinx/coroutines/p;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e78a4.  v0:= v3.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e78a8.  if v0 != 0 then goto L2e78b8;
  #L2e78ac.  v0:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e78b0.  v3.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L2e78b4.  v0:= 0I;
  #L2e78b6.  return v0 @kind object;
  #L2e78b8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p` @kind boolean;
  #L2e78bc.  if v1 == 0 then goto L2e78da;
  #L2e78c0.  v1:= `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e78c4.  v2:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e78c8.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e78ce.  v1:= temp;
  #L2e78d0.  if v1 == 0 then goto L2e78a4;
  #L2e78d4.  v0:= (`kotlinx.coroutines.p`) v0 @kind object;
  #L2e78d8.  return v0 @kind object;
  #L2e78da.  v1:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e78de.  if v0 != v1 then goto L2e78e4;
  #L2e78e2.  goto L2e78a4;
  #L2e78e4.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L2e78e8.  if v1 == 0 then goto L2e78ee;
  #L2e78ec.  goto L2e78a4;
  #L2e78ee.  v1:= new `java.lang.IllegalStateException`;
  #L2e78f2.  v2:= "Inconsistent state " @kind object;
  #L2e78f6.  call temp:= `stringPlus`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e78fc.  v0:= temp @kind object;
  #L2e78fe.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e7904.  v0:= temp @kind object;
  #L2e7906.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e790c.  goto L2e7910;
  #L2e790e.  throw v1;
  #L2e7910.  goto L2e790e;
}
procedure `void` `m`(`kotlinx.coroutines.internal.j` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/j;.m:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2e7a08.  v0.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` := v2 @kind object;
  #L2e7a0c.  v2:= 1I;
  #L2e7a0e.  v0.`kotlinx.coroutines.v0.d` @type ^`int` := v2;
  #L2e7a12.  v2:= v0.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e7a16.  call `O0`(v2, v1, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.O0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2e7a1c.  return @kind void;
}
procedure `boolean` `p`(`kotlinx.coroutines.internal.j` v1 @kind this) @signature `Lkotlinx/coroutines/internal/j;.p:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e767c.  v0:= v1.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e7680.  if v0 == 0 then goto L2e7688;
  #L2e7684.  v0:= 1I;
  #L2e7686.  goto L2e768a;
  #L2e7688.  v0:= 0I;
  #L2e768a.  return v0;
}
procedure `boolean` `q`(`kotlinx.coroutines.internal.j` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/internal/j;.q:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e769c.  v0:= v4.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e76a0.  v1:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e76a4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2e76aa.  v2:= temp;
  #L2e76ac.  v3:= 1I;
  #L2e76ae.  if v2 == 0 then goto L2e76c4;
  #L2e76b2.  v0:= `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e76b6.  call temp:= `compareAndSet`(v0, v4, v1, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e76bc.  v0:= temp;
  #L2e76be.  if v0 == 0 then goto L2e769c;
  #L2e76c2.  return v3;
  #L2e76c4.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L2e76c8.  if v1 == 0 then goto L2e76ce;
  #L2e76cc.  return v3;
  #L2e76ce.  v1:= `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e76d2.  v2:= 0I;
  #L2e76d4.  call temp:= `compareAndSet`(v1, v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e76da.  v0:= temp;
  #L2e76dc.  if v0 == 0 then goto L2e769c;
  #L2e76e0.  v5:= 0I;
  #L2e76e2.  return v5;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.j` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/j;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e7a5c.  v0:= v6.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2e7a60.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2e7a66.  v0:= temp @kind object;
  #L2e7a68.  v1:= 0I;
  #L2e7a6a.  v2:= 1I;
  #L2e7a6c.  call temp:= `d`(v7, v1, v2, v1) @signature `Lkotlinx/coroutines/d0;.d:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7a72.  v3:= temp @kind object;
  #L2e7a74.  v4:= v6.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e7a78.  call temp:= `P0`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.P0:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L2e7a7e.  v4:= temp;
  #L2e7a80.  v5:= 0I;
  #L2e7a82.  if v4 == 0 then goto L2e7a9a;
  #L2e7a86.  v6.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` := v3 @kind object;
  #L2e7a8a.  v6.`kotlinx.coroutines.v0.d` @type ^`int` := v5;
  #L2e7a8e.  v7:= v6.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e7a92.  call `N0`(v7, v0, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2e7a98.  goto L2e7b1e;
  #L2e7a9a.  call temp:= `a`() @signature `Lkotlinx/coroutines/o0;.a:()Z` @kind static;
  #L2e7aa0.  v0:= temp;
  #L2e7aa2.  v0:= `@@kotlinx.coroutines.a3.a` @type ^`kotlinx.coroutines.a3` @kind object;
  #L2e7aa6.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/a3;.b:()Lkotlinx/coroutines/d1;` @kind virtual;
  #L2e7aac.  v0:= temp @kind object;
  #L2e7aae.  call temp:= `Y0`(v0) @signature `Lkotlinx/coroutines/d1;.Y0:()Z` @kind virtual;
  #L2e7ab4.  v4:= temp;
  #L2e7ab6.  if v4 == 0 then goto L2e7aca;
  #L2e7aba.  v6.`kotlinx.coroutines.internal.j.h` @type ^`java.lang.Object` := v3 @kind object;
  #L2e7abe.  v6.`kotlinx.coroutines.v0.d` @type ^`int` := v5;
  #L2e7ac2.  call `U0`(v0, v6) @signature `Lkotlinx/coroutines/d1;.U0:(Lkotlinx/coroutines/v0;)V` @kind virtual;
  #L2e7ac8.  goto L2e7b1e;
  #L2e7aca.  call `W0`(v0, v2) @signature `Lkotlinx/coroutines/d1;.W0:(Z)V` @kind virtual;
  #L2e7ad0.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/j;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2e7ad6.  v3:= temp @kind object;
  #L2e7ad8.  v4:= v6.`kotlinx.coroutines.internal.j.i` @type ^`java.lang.Object` @kind object;
  #L2e7adc.  call temp:= `c`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.c:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2e7ae2.  v4:= temp @kind object;
  #L2e7ae4.  v5:= v6.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2e7ae8.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2e7aee.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2e7af2.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L2e7af8.  call temp:= `b1`(v0) @signature `Lkotlinx/coroutines/d1;.b1:()Z` @kind virtual;
  #L2e7afe.  v7:= temp;
  #L2e7b00.  if v7 != 0 then goto L2e7af8;
  #L2e7b04.  goto L2e7b18;
  #L2e7b06.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e7b08.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.a:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L2e7b0e.  throw v7;
  #L2e7b10.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e7b12.  call `f`(v6, v7, v1) @signature `Lkotlinx/coroutines/v0;.f:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L2e7b18.  call `R0`(v0, v2) @signature `Lkotlinx/coroutines/d1;.R0:(Z)V` @kind virtual;
  #L2e7b1e.  return @kind void;
  #L2e7b20.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e7b22.  call `R0`(v0, v2) @signature `Lkotlinx/coroutines/d1;.R0:(Z)V` @kind virtual;
  #L2e7b28.  goto L2e7b2c;
  #L2e7b2a.  throw v7;
  #L2e7b2c.  goto L2e7b2a;
  catch `java.lang.Throwable` @[L2e7ad0..L2e7ae4] goto L2e7b10;
  catch `java.lang.Throwable` @[L2e7ae4..L2e7af2] goto L2e7b06;
  catch `java.lang.Throwable` @[L2e7af2..L2e7b10] goto L2e7b10;
  catch `java.lang.Throwable` @[L2e7b12..L2e7b18] goto L2e7b20;
}
procedure `void` `s`(`kotlinx.coroutines.internal.j` v1 @kind this) @signature `Lkotlinx/coroutines/internal/j;.s:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e7a30.  call `h`(v1) @signature `Lkotlinx/coroutines/internal/j;.h:()V` @kind virtual;
  #L2e7a36.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/internal/j;.o:()Lkotlinx/coroutines/p;` @kind direct;
  #L2e7a3c.  v0:= temp @kind object;
  #L2e7a3e.  if v0 != 0 then goto L2e7a44;
  #L2e7a42.  goto L2e7a4a;
  #L2e7a44.  call `q`(v0) @signature `Lkotlinx/coroutines/p;.q:()V` @kind virtual;
  #L2e7a4a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.j` v2 @kind this) @signature `Lkotlinx/coroutines/internal/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e775c.  v0:= new `java.lang.StringBuilder`;
  #L2e7760.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e7766.  v1:= "DispatchedContinuation[" @kind object;
  #L2e776a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e7770.  v1:= v2.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2e7774.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e777a.  v1:= ", " @kind object;
  #L2e777e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e7784.  v1:= v2.`kotlinx.coroutines.internal.j.g` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L2e7788.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/p0;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L2e778e.  v1:= temp @kind object;
  #L2e7790.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e7796.  v1:= 93I;
  #L2e779a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e77a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e77a6.  v0:= temp @kind object;
  #L2e77a8.  return v0 @kind object;
}
procedure `java.lang.Throwable` `u`(`kotlinx.coroutines.internal.j` v3 @kind this, `kotlinx.coroutines.o` v4 @kind object) @signature `Lkotlinx/coroutines/internal/j;.u:(Lkotlinx/coroutines/o;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e77bc.  v0:= v3.`kotlinx.coroutines.internal.j._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L2e77c0.  v1:= `@@kotlinx.coroutines.internal.k.b` @type ^`kotlinx.coroutines.internal.k0` @kind object;
  #L2e77c4.  v2:= 0I;
  #L2e77c6.  if v0 != v1 then goto L2e77dc;
  #L2e77ca.  v0:= `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e77ce.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e77d4.  v0:= temp;
  #L2e77d6.  if v0 == 0 then goto L2e77bc;
  #L2e77da.  return v2 @kind object;
  #L2e77dc.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L2e77e0.  if v4 == 0 then goto L2e7812;
  #L2e77e4.  v4:= `@@kotlinx.coroutines.internal.j.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L2e77e8.  call temp:= `compareAndSet`(v4, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L2e77ee.  v4:= temp;
  #L2e77f0.  if v4 == 0 then goto L2e77fa;
  #L2e77f4.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L2e77f8.  return v0 @kind object;
  #L2e77fa.  v4:= new `java.lang.IllegalArgumentException`;
  #L2e77fe.  v0:= "Failed requirement." @kind object;
  #L2e7802.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e7808.  v0:= temp @kind object;
  #L2e780a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e7810.  throw v4;
  #L2e7812.  v4:= new `java.lang.IllegalStateException`;
  #L2e7816.  v1:= "Inconsistent state " @kind object;
  #L2e781a.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e7820.  v0:= temp @kind object;
  #L2e7822.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e7828.  v0:= temp @kind object;
  #L2e782a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e7830.  goto L2e7834;
  #L2e7832.  throw v4;
  #L2e7834.  goto L2e7832;
}
