record `kotlinx.coroutines.x1` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`kotlinx.coroutines.z1` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/x1;.a:(Lkotlinx/coroutines/z1;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2cf260.  if v3 != 0 then goto L2cf276;
  #L2cf264.  v2:= v2 ^& 1;
  #L2cf268.  if v2 == 0 then goto L2cf26e;
  #L2cf26c.  v1:= 0I;
  #L2cf26e.  call `d`(v0, v1) @signature `Lkotlinx/coroutines/z1;.d:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L2cf274.  return @kind void;
  #L2cf276.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2cf27a.  v1:= "Super calls with default arguments not supported in this target, function: cancel" @kind object;
  #L2cf27e.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cf284.  throw v0;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.z1` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/x1;.b:(Lkotlinx/coroutines/z1;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2cf1ac.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L2cf1b2.  v0:= temp @kind object;
  #L2cf1b4.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `c`(`kotlinx.coroutines.z1` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/x1;.c:(Lkotlinx/coroutines/z1;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2cf200.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L2cf206.  v0:= temp @kind object;
  #L2cf208.  return v0 @kind object;
}
procedure `kotlinx.coroutines.z0` `d`(`kotlinx.coroutines.z1` v0 @kind object, `boolean` v1 , `boolean` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/x1;.d:(Lkotlinx/coroutines/z1;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/z0;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2cf21c.  if v5 != 0 then goto L2cf23e;
  #L2cf220.  v5:= v4 ^& 1;
  #L2cf224.  if v5 == 0 then goto L2cf22a;
  #L2cf228.  v1:= 0I;
  #L2cf22a.  v4:= v4 ^& 2;
  #L2cf22e.  if v4 == 0 then goto L2cf234;
  #L2cf232.  v2:= 1I;
  #L2cf234.  call temp:= `m`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/z1;.m:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/z0;` @kind interface;
  #L2cf23a.  v0:= temp @kind object;
  #L2cf23c.  return v0 @kind object;
  #L2cf23e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2cf242.  v1:= "Super calls with default arguments not supported in this target, function: invokeOnCompletion" @kind object;
  #L2cf246.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cf24c.  throw v0;
}
procedure `kotlin.coroutines.CoroutineContext` `e`(`kotlinx.coroutines.z1` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/x1;.e:(Lkotlinx/coroutines/z1;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2cf1c8.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L2cf1ce.  v0:= temp @kind object;
  #L2cf1d0.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `f`(`kotlinx.coroutines.z1` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/x1;.f:(Lkotlinx/coroutines/z1;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2cf1e4.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L2cf1ea.  v0:= temp @kind object;
  #L2cf1ec.  return v0 @kind object;
}
