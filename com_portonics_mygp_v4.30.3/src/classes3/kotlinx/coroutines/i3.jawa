record `kotlinx.coroutines.i3` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.Object` `a`(`kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/i3;.a:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d0e04.  call temp:= `getContext`(v4) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2d0e0a.  v0:= temp @kind object;
  #L2d0e0c.  call `g`(v0) @signature `Lkotlinx/coroutines/c2;.g:(Lkotlin/coroutines/CoroutineContext;)V` @kind static;
  #L2d0e12.  call temp:= `intercepted`(v4) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2d0e18.  v1:= temp @kind object;
  #L2d0e1a.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.j` @kind boolean;
  #L2d0e1e.  if v2 == 0 then goto L2d0e28;
  #L2d0e22.  v1:= (`kotlinx.coroutines.internal.j`) v1 @kind object;
  #L2d0e26.  goto L2d0e2a;
  #L2d0e28.  v1:= 0I;
  #L2d0e2a.  if v1 != 0 then goto L2d0e34;
  #L2d0e2e.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d0e32.  goto L2d0e96;
  #L2d0e34.  v2:= v1.`kotlinx.coroutines.internal.j.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L2d0e38.  call temp:= `P0`(v2, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.P0:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L2d0e3e.  v2:= temp;
  #L2d0e40.  if v2 == 0 then goto L2d0e50;
  #L2d0e44.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d0e48.  call `m`(v1, v0, v2) @signature `Lkotlinx/coroutines/internal/j;.m:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind virtual;
  #L2d0e4e.  goto L2d0e8e;
  #L2d0e50.  v2:= new `kotlinx.coroutines.h3`;
  #L2d0e54.  call `<init>`(v2) @signature `Lkotlinx/coroutines/h3;.<init>:()V` @kind direct;
  #L2d0e5a.  call temp:= `plus`(v0, v2) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2d0e60.  v0:= temp @kind object;
  #L2d0e62.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d0e66.  call `m`(v1, v0, v3) @signature `Lkotlinx/coroutines/internal/j;.m:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind virtual;
  #L2d0e6c.  v0:= v2.`kotlinx.coroutines.h3.c` @type ^`boolean` @kind boolean;
  #L2d0e70.  if v0 == 0 then goto L2d0e8e;
  #L2d0e74.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/internal/k;.d:(Lkotlinx/coroutines/internal/j;)Z` @kind static;
  #L2d0e7a.  v0:= temp;
  #L2d0e7c.  if v0 == 0 then goto L2d0e8a;
  #L2d0e80.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2d0e86.  v0:= temp @kind object;
  #L2d0e88.  goto L2d0e96;
  #L2d0e8a.  v0:= v3 @kind object;
  #L2d0e8c.  goto L2d0e96;
  #L2d0e8e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2d0e94.  v0:= temp @kind object;
  #L2d0e96.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2d0e9c.  v1:= temp @kind object;
  #L2d0e9e.  if v0 != v1 then goto L2d0ea8;
  #L2d0ea2.  call `probeCoroutineSuspended`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2d0ea8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2d0eae.  v4:= temp @kind object;
  #L2d0eb0.  if v0 != v4 then goto L2d0eb6;
  #L2d0eb4.  return v0 @kind object;
  #L2d0eb6.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2d0eba.  return v4 @kind object;
}
