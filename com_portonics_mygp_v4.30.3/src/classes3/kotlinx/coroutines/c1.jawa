record `kotlinx.coroutines.c1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.r1` @kind interface {
  `boolean` `kotlinx.coroutines.c1.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.c1` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/c1;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cdac8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cdace.  v0.`kotlinx.coroutines.c1.b` @type ^`boolean` := v1 @kind boolean;
  #L2cdad2.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.c1` v1 @kind this) @signature `Lkotlinx/coroutines/c1;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cda48.  v0:= v1.`kotlinx.coroutines.c1.b` @type ^`boolean` @kind boolean;
  #L2cda4c.  return v0;
}
procedure `kotlinx.coroutines.n2` `g`(`kotlinx.coroutines.c1` v1 @kind this) @signature `Lkotlinx/coroutines/c1;.g:()Lkotlinx/coroutines/n2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cdab4.  v0:= 0I;
  #L2cdab6.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.c1` v2 @kind this) @signature `Lkotlinx/coroutines/c1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cda60.  v0:= new `java.lang.StringBuilder`;
  #L2cda64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cda6a.  v1:= "Empty{" @kind object;
  #L2cda6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cda74.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/c1;.a:()Z` @kind virtual;
  #L2cda7a.  v1:= temp;
  #L2cda7c.  if v1 == 0 then goto L2cda86;
  #L2cda80.  v1:= "Active" @kind object;
  #L2cda84.  goto L2cda8a;
  #L2cda86.  v1:= "New" @kind object;
  #L2cda8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cda90.  v1:= 125I;
  #L2cda94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cda9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cdaa0.  v0:= temp @kind object;
  #L2cdaa2.  return v0 @kind object;
}
