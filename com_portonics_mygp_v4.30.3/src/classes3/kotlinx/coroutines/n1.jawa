record `kotlinx.coroutines.n1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class, `kotlinx.coroutines.t0` @kind interface {
  `java.util.concurrent.Executor` `kotlinx.coroutines.n1.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.n1` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lkotlinx/coroutines/n1;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cebdc.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L2cebe2.  v0.`kotlinx.coroutines.n1.d` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L2cebe6.  call temp:= `S0`(v0) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2cebec.  v1:= temp @kind object;
  #L2cebee.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/internal/g;.a:(Ljava/util/concurrent/Executor;)Z` @kind static;
  #L2cebf4.  return @kind void;
}
procedure `void` `R0`(`kotlinx.coroutines.n1` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.util.concurrent.RejectedExecutionException` v3 @kind object) @signature `Lkotlinx/coroutines/n1;.R0:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/RejectedExecutionException;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2cec08.  v0:= "The task was rejected" @kind object;
  #L2cec0c.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/m1;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L2cec12.  v3:= temp @kind object;
  #L2cec14.  call `c`(v2, v3) @signature `Lkotlinx/coroutines/c2;.c:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L2cec1a.  return @kind void;
}
procedure `java.util.concurrent.ScheduledFuture` `T0`(`kotlinx.coroutines.n1` v1 @kind this, `java.util.concurrent.ScheduledExecutorService` v2 @kind object, `java.lang.Runnable` v3 @kind object, `kotlin.coroutines.CoroutineContext` v4 @kind object, `long` v5 ) @signature `Lkotlinx/coroutines/n1;.T0:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;J)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2ceb40.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2ceb44.  call temp:= `schedule`(v2, v3, v5, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L2ceb4a.  v2:= temp @kind object;
  #L2ceb4c.  goto L2ceb58;
  #L2ceb4e.  v2:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L2ceb50.  call `R0`(v1, v4, v2) @signature `Lkotlinx/coroutines/n1;.R0:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/RejectedExecutionException;)V` @kind direct;
  #L2ceb56.  v2:= 0I;
  #L2ceb58.  return v2 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L2ceb40..L2ceb4c] goto L2ceb4e;
}
procedure `void` `N0`(`kotlinx.coroutines.n1` v3 @kind this, `kotlin.coroutines.CoroutineContext` v4 @kind object, `java.lang.Runnable` v5 @kind object) @signature `Lkotlinx/coroutines/n1;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cec64.  v0:= 0I;
  #L2cec66.  call temp:= `S0`(v3) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2cec6c.  v1:= temp @kind object;
  #L2cec6e.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2cec74.  v2:= temp @kind object;
  #L2cec76.  if v2 != 0 then goto L2cec82;
  #L2cec7a.  call `execute`(v1, v5) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2cec80.  goto L2ceca6;
  #L2cec82.  throw v0;
  #L2cec84.  v1:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L2cec86.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L2cec8c.  v2:= temp @kind object;
  #L2cec8e.  if v2 != 0 then goto L2ceca8;
  #L2cec92.  call `R0`(v3, v4, v1) @signature `Lkotlinx/coroutines/n1;.R0:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/RejectedExecutionException;)V` @kind direct;
  #L2cec98.  call temp:= `b`() @signature `Lkotlinx/coroutines/x0;.b:()Lkotlinx/coroutines/CoroutineDispatcher;` @kind static;
  #L2cec9e.  v0:= temp @kind object;
  #L2ceca0.  call `N0`(v0, v4, v5) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.N0:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L2ceca6.  return @kind void;
  #L2ceca8.  throw v0;
  catch `java.util.concurrent.RejectedExecutionException` @[L2cec66..L2cec80] goto L2cec84;
}
procedure `java.util.concurrent.Executor` `S0`(`kotlinx.coroutines.n1` v1 @kind this) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ceb28.  v0:= v1.`kotlinx.coroutines.n1.d` @type ^`java.util.concurrent.Executor` @kind object;
  #L2ceb2c.  return v0 @kind object;
}
procedure `void` `c`(`kotlinx.coroutines.n1` v9 @kind this, `long` v10 , `kotlinx.coroutines.o` v12 @kind object) @signature `Lkotlinx/coroutines/n1;.c:(JLkotlinx/coroutines/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2ceccc.  call temp:= `S0`(v9) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2cecd2.  v0:= temp @kind object;
  #L2cecd4.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.ScheduledExecutorService` @kind boolean;
  #L2cecd8.  v2:= 0I;
  #L2cecda.  if v1 == 0 then goto L2cece6;
  #L2cecde.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L2cece2.  v4:= v0 @kind object;
  #L2cece4.  goto L2cece8;
  #L2cece6.  v4:= v2 @kind object;
  #L2cece8.  if v4 != 0 then goto L2cecee;
  #L2cecec.  goto L2ced0c;
  #L2cecee.  v5:= new `kotlinx.coroutines.t2`;
  #L2cecf2.  call `<init>`(v5, v9, v12) @signature `Lkotlinx/coroutines/t2;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/o;)V` @kind direct;
  #L2cecf8.  call temp:= `getContext`(v12) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2cecfe.  v6:= temp @kind object;
  #L2ced00.  v3:= v9 @kind object;
  #L2ced02.  v7:= v10 @kind wide;
  #L2ced04.  call temp:= `T0`(v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/n1;.T0:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;J)Ljava/util/concurrent/ScheduledFuture;` @kind direct;
  #L2ced0a.  v2:= temp @kind object;
  #L2ced0c.  if v2 == 0 then goto L2ced18;
  #L2ced10.  call `e`(v12, v2) @signature `Lkotlinx/coroutines/c2;.e:(Lkotlinx/coroutines/o;Ljava/util/concurrent/Future;)V` @kind static;
  #L2ced16.  return @kind void;
  #L2ced18.  v0:= `@@kotlinx.coroutines.q0.h` @type ^`kotlinx.coroutines.q0` @kind object;
  #L2ced1c.  call `c`(v0, v10, v12) @signature `Lkotlinx/coroutines/i1;.c:(JLkotlinx/coroutines/o;)V` @kind virtual;
  #L2ced22.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.n1` v2 @kind this) @signature `Lkotlinx/coroutines/n1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cec2c.  call temp:= `S0`(v2) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2cec32.  v0:= temp @kind object;
  #L2cec34.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.ExecutorService` @kind boolean;
  #L2cec38.  if v1 == 0 then goto L2cec42;
  #L2cec3c.  v0:= (`java.util.concurrent.ExecutorService`) v0 @kind object;
  #L2cec40.  goto L2cec44;
  #L2cec42.  v0:= 0I;
  #L2cec44.  if v0 != 0 then goto L2cec4a;
  #L2cec48.  goto L2cec50;
  #L2cec4a.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L2cec50.  return @kind void;
}
procedure `boolean` `equals`(`kotlinx.coroutines.n1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/n1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ceaa8.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.n1` @kind boolean;
  #L2ceaac.  if v0 == 0 then goto L2ceacc;
  #L2ceab0.  v2:= (`kotlinx.coroutines.n1`) v2 @kind object;
  #L2ceab4.  call temp:= `S0`(v2) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2ceaba.  v2:= temp @kind object;
  #L2ceabc.  call temp:= `S0`(v1) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2ceac2.  v0:= temp @kind object;
  #L2ceac4.  if v2 != v0 then goto L2ceacc;
  #L2ceac8.  v2:= 1I;
  #L2ceaca.  goto L2ceace;
  #L2ceacc.  v2:= 0I;
  #L2ceace.  return v2;
}
procedure `int` `hashCode`(`kotlinx.coroutines.n1` v1 @kind this) @signature `Lkotlinx/coroutines/n1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ceae0.  call temp:= `S0`(v1) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2ceae6.  v0:= temp @kind object;
  #L2ceae8.  call temp:= `identityHashCode`(v0) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L2ceaee.  v0:= temp;
  #L2ceaf0.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.n1` v1 @kind this) @signature `Lkotlinx/coroutines/n1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ceb04.  call temp:= `S0`(v1) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2ceb0a.  v0:= temp @kind object;
  #L2ceb0c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ceb12.  v0:= temp @kind object;
  #L2ceb14.  return v0 @kind object;
}
procedure `kotlinx.coroutines.z0` `v`(`kotlinx.coroutines.n1` v9 @kind this, `long` v10 , `java.lang.Runnable` v12 @kind object, `kotlin.coroutines.CoroutineContext` v13 @kind object) @signature `Lkotlinx/coroutines/n1;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2ceb7c.  call temp:= `S0`(v9) @signature `Lkotlinx/coroutines/n1;.S0:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2ceb82.  v0:= temp @kind object;
  #L2ceb84.  v1:= instanceof @variable v0 @type ^`java.util.concurrent.ScheduledExecutorService` @kind boolean;
  #L2ceb88.  v2:= 0I;
  #L2ceb8a.  if v1 == 0 then goto L2ceb96;
  #L2ceb8e.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L2ceb92.  v4:= v0 @kind object;
  #L2ceb94.  goto L2ceb98;
  #L2ceb96.  v4:= v2 @kind object;
  #L2ceb98.  if v4 != 0 then goto L2ceb9e;
  #L2ceb9c.  goto L2cebae;
  #L2ceb9e.  v3:= v9 @kind object;
  #L2ceba0.  v5:= v12 @kind object;
  #L2ceba2.  v6:= v13 @kind object;
  #L2ceba4.  v7:= v10 @kind wide;
  #L2ceba6.  call temp:= `T0`(v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/n1;.T0:(Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;J)Ljava/util/concurrent/ScheduledFuture;` @kind direct;
  #L2cebac.  v2:= temp @kind object;
  #L2cebae.  if v2 == 0 then goto L2cebbe;
  #L2cebb2.  v10:= new `kotlinx.coroutines.y0`;
  #L2cebb6.  call `<init>`(v10, v2) @signature `Lkotlinx/coroutines/y0;.<init>:(Ljava/util/concurrent/Future;)V` @kind direct;
  #L2cebbc.  goto L2cebca;
  #L2cebbe.  v0:= `@@kotlinx.coroutines.q0.h` @type ^`kotlinx.coroutines.q0` @kind object;
  #L2cebc2.  call temp:= `v`(v0, v10, v12, v13) @signature `Lkotlinx/coroutines/q0;.v:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/z0;` @kind virtual;
  #L2cebc8.  v10:= temp @kind object;
  #L2cebca.  return v10 @kind object;
}
