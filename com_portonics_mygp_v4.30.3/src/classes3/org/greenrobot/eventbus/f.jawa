record `org.greenrobot.eventbus.f` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `org.greenrobot.eventbus.f.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.greenrobot.eventbus.f.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.greenrobot.eventbus.f.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.ThreadLocal` `org.greenrobot.eventbus.f.g` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.m` `org.greenrobot.eventbus.f.h` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.q` `org.greenrobot.eventbus.f.i` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.b` `org.greenrobot.eventbus.f.j` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.a` `org.greenrobot.eventbus.f.k` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.v` `org.greenrobot.eventbus.f.l` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `org.greenrobot.eventbus.f.m` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.n` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.p` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.q` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.r` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.f.s` @AccessFlag PRIVATE_FINAL;
  `int` `org.greenrobot.eventbus.f.t` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.k` `org.greenrobot.eventbus.f.u` @AccessFlag PRIVATE_FINAL;
}
global `org.greenrobot.eventbus.f` `@@org.greenrobot.eventbus.f.a` @AccessFlag STATIC_VOLATILE;
global `org.greenrobot.eventbus.g` `@@org.greenrobot.eventbus.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@org.greenrobot.eventbus.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/greenrobot/eventbus/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3663dc.  v0:= new `org.greenrobot.eventbus.g`;
  #L3663e0.  call `<init>`(v0) @signature `Lorg/greenrobot/eventbus/g;.<init>:()V` @kind direct;
  #L3663e6.  `@@org.greenrobot.eventbus.f.b` @type ^`org.greenrobot.eventbus.g` := v0 @kind object;
  #L3663ea.  v0:= new `java.util.HashMap`;
  #L3663ee.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3663f4.  `@@org.greenrobot.eventbus.f.c` @type ^`java.util.Map` := v0 @kind object;
  #L3663f8.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.f` v1 @kind this) @signature `Lorg/greenrobot/eventbus/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36640c.  v0:= `@@org.greenrobot.eventbus.f.b` @type ^`org.greenrobot.eventbus.g` @kind object;
  #L366410.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/eventbus/f;.<init>:(Lorg/greenrobot/eventbus/g;)V` @kind direct;
  #L366416.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.f` v4 @kind this, `org.greenrobot.eventbus.g` v5 @kind object) @signature `Lorg/greenrobot/eventbus/f;.<init>:(Lorg/greenrobot/eventbus/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366428.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36642e.  v0:= new `org.greenrobot.eventbus.c`;
  #L366432.  call `<init>`(v0, v4) @signature `Lorg/greenrobot/eventbus/c;.<init>:(Lorg/greenrobot/eventbus/f;)V` @kind direct;
  #L366438.  v4.`org.greenrobot.eventbus.f.g` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L36643c.  call temp:= `b`(v5) @signature `Lorg/greenrobot/eventbus/g;.b:()Lorg/greenrobot/eventbus/k;` @kind virtual;
  #L366442.  v0:= temp @kind object;
  #L366444.  v4.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` := v0 @kind object;
  #L366448.  v0:= new `java.util.HashMap`;
  #L36644c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L366452.  v4.`org.greenrobot.eventbus.f.d` @type ^`java.util.Map` := v0 @kind object;
  #L366456.  v0:= new `java.util.HashMap`;
  #L36645a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L366460.  v4.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` := v0 @kind object;
  #L366464.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L366468.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L36646e.  v4.`org.greenrobot.eventbus.f.f` @type ^`java.util.Map` := v0 @kind object;
  #L366472.  call temp:= `c`(v5) @signature `Lorg/greenrobot/eventbus/g;.c:()Lorg/greenrobot/eventbus/m;` @kind virtual;
  #L366478.  v0:= temp @kind object;
  #L36647a.  v4.`org.greenrobot.eventbus.f.h` @type ^`org.greenrobot.eventbus.m` := v0 @kind object;
  #L36647e.  if v0 == 0 then goto L36648c;
  #L366482.  call temp:= `a`(v0, v4) @signature `Lorg/greenrobot/eventbus/m;.a:(Lorg/greenrobot/eventbus/f;)Lorg/greenrobot/eventbus/q;` @kind interface;
  #L366488.  v0:= temp @kind object;
  #L36648a.  goto L36648e;
  #L36648c.  v0:= 0I;
  #L36648e.  v4.`org.greenrobot.eventbus.f.i` @type ^`org.greenrobot.eventbus.q` := v0 @kind object;
  #L366492.  v0:= new `org.greenrobot.eventbus.b`;
  #L366496.  call `<init>`(v0, v4) @signature `Lorg/greenrobot/eventbus/b;.<init>:(Lorg/greenrobot/eventbus/f;)V` @kind direct;
  #L36649c.  v4.`org.greenrobot.eventbus.f.j` @type ^`org.greenrobot.eventbus.b` := v0 @kind object;
  #L3664a0.  v0:= new `org.greenrobot.eventbus.a`;
  #L3664a4.  call `<init>`(v0, v4) @signature `Lorg/greenrobot/eventbus/a;.<init>:(Lorg/greenrobot/eventbus/f;)V` @kind direct;
  #L3664aa.  v4.`org.greenrobot.eventbus.f.k` @type ^`org.greenrobot.eventbus.a` := v0 @kind object;
  #L3664ae.  v0:= v5.`org.greenrobot.eventbus.g.k` @type ^`java.util.List` @kind object;
  #L3664b2.  if v0 == 0 then goto L3664c0;
  #L3664b6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3664bc.  v0:= temp;
  #L3664be.  goto L3664c2;
  #L3664c0.  v0:= 0I;
  #L3664c2.  v4.`org.greenrobot.eventbus.f.t` @type ^`int` := v0;
  #L3664c6.  v0:= new `org.greenrobot.eventbus.v`;
  #L3664ca.  v1:= v5.`org.greenrobot.eventbus.g.k` @type ^`java.util.List` @kind object;
  #L3664ce.  v2:= v5.`org.greenrobot.eventbus.g.i` @type ^`boolean` @kind boolean;
  #L3664d2.  v3:= v5.`org.greenrobot.eventbus.g.h` @type ^`boolean` @kind boolean;
  #L3664d6.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/greenrobot/eventbus/v;.<init>:(Ljava/util/List;ZZ)V` @kind direct;
  #L3664dc.  v4.`org.greenrobot.eventbus.f.l` @type ^`org.greenrobot.eventbus.v` := v0 @kind object;
  #L3664e0.  v0:= v5.`org.greenrobot.eventbus.g.b` @type ^`boolean` @kind boolean;
  #L3664e4.  v4.`org.greenrobot.eventbus.f.o` @type ^`boolean` := v0 @kind boolean;
  #L3664e8.  v0:= v5.`org.greenrobot.eventbus.g.c` @type ^`boolean` @kind boolean;
  #L3664ec.  v4.`org.greenrobot.eventbus.f.p` @type ^`boolean` := v0 @kind boolean;
  #L3664f0.  v0:= v5.`org.greenrobot.eventbus.g.d` @type ^`boolean` @kind boolean;
  #L3664f4.  v4.`org.greenrobot.eventbus.f.q` @type ^`boolean` := v0 @kind boolean;
  #L3664f8.  v0:= v5.`org.greenrobot.eventbus.g.e` @type ^`boolean` @kind boolean;
  #L3664fc.  v4.`org.greenrobot.eventbus.f.r` @type ^`boolean` := v0 @kind boolean;
  #L366500.  v0:= v5.`org.greenrobot.eventbus.g.f` @type ^`boolean` @kind boolean;
  #L366504.  v4.`org.greenrobot.eventbus.f.n` @type ^`boolean` := v0 @kind boolean;
  #L366508.  v0:= v5.`org.greenrobot.eventbus.g.g` @type ^`boolean` @kind boolean;
  #L36650c.  v4.`org.greenrobot.eventbus.f.s` @type ^`boolean` := v0 @kind boolean;
  #L366510.  v5:= v5.`org.greenrobot.eventbus.g.j` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L366514.  v4.`org.greenrobot.eventbus.f.m` @type ^`java.util.concurrent.ExecutorService` := v5 @kind object;
  #L366518.  return @kind void;
}
procedure `void` `a`(`java.util.List` v4 @kind object, `java.lang.Class`[] v5 @kind object) @signature `Lorg/greenrobot/eventbus/f;.a:(Ljava/util/List;[Ljava/lang/Class;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36652c.  v0:= length @variable v5;
  #L36652e.  v1:= 0I;
  #L366530.  if v1 >= v0 then goto L36655e;
  #L366534.  v2:= v5[v1] @kind object;
  #L366538.  call temp:= `contains`(v4, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L36653e.  v3:= temp;
  #L366540.  if v3 != 0 then goto L366558;
  #L366544.  call temp:= `add`(v4, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36654a.  call temp:= `getInterfaces`(v2) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L366550.  v2:= temp @kind object;
  #L366552.  call `a`(v4, v2) @signature `Lorg/greenrobot/eventbus/f;.a:(Ljava/util/List;[Ljava/lang/Class;)V` @kind static;
  #L366558.  v1:= v1 + 1;
  #L36655c.  goto L366530;
  #L36655e.  return @kind void;
}
procedure `void` `b`(`org.greenrobot.eventbus.f` v1 @kind this, `org.greenrobot.eventbus.w` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/eventbus/f;.b:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L366570.  if v3 == 0 then goto L366582;
  #L366574.  call temp:= `i`(v1) @signature `Lorg/greenrobot/eventbus/f;.i:()Z` @kind direct;
  #L36657a.  v0:= temp;
  #L36657c.  call `p`(v1, v2, v3, v0) @signature `Lorg/greenrobot/eventbus/f;.p:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;Z)V` @kind direct;
  #L366582.  return @kind void;
}
procedure `org.greenrobot.eventbus.f` `c`() @signature `Lorg/greenrobot/eventbus/f;.c:()Lorg/greenrobot/eventbus/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L366378.  v0:= `@@org.greenrobot.eventbus.f.a` @type ^`org.greenrobot.eventbus.f` @kind object;
  #L36637c.  if v0 != 0 then goto L3663a6;
  #L366380.  v1:= constclass @type ^`org.greenrobot.eventbus.f` @kind object;
  #L366384.  @monitorenter v1
  #L366386.  v0:= `@@org.greenrobot.eventbus.f.a` @type ^`org.greenrobot.eventbus.f` @kind object;
  #L36638a.  if v0 != 0 then goto L36639c;
  #L36638e.  v0:= new `org.greenrobot.eventbus.f`;
  #L366392.  call `<init>`(v0) @signature `Lorg/greenrobot/eventbus/f;.<init>:()V` @kind direct;
  #L366398.  `@@org.greenrobot.eventbus.f.a` @type ^`org.greenrobot.eventbus.f` := v0 @kind object;
  #L36639c.  @monitorexit v1
  #L36639e.  goto L3663a6;
  #L3663a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3663a2.  @monitorexit v1
  #L3663a4.  throw v0;
  #L3663a6.  return v0 @kind object;
  catch `java.lang.Throwable` @[L366386..L3663a4] goto L3663a0;
}
procedure `void` `f`(`org.greenrobot.eventbus.f` v4 @kind this, `org.greenrobot.eventbus.w` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lorg/greenrobot/eventbus/f;.f:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366594.  v0:= instanceof @variable v6 @type ^`org.greenrobot.eventbus.s` @kind boolean;
  #L366598.  if v0 == 0 then goto L366638;
  #L36659c.  v0:= v4.`org.greenrobot.eventbus.f.o` @type ^`boolean` @kind boolean;
  #L3665a0.  if v0 == 0 then goto L3666b8;
  #L3665a4.  v0:= v4.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L3665a8.  v1:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L3665ac.  v2:= new `java.lang.StringBuilder`;
  #L3665b0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3665b6.  v3:= "SubscriberExceptionEvent subscriber " @kind object;
  #L3665ba.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3665c0.  v5:= v5.`org.greenrobot.eventbus.w.a` @type ^`java.lang.Object` @kind object;
  #L3665c4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3665ca.  v5:= temp @kind object;
  #L3665cc.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3665d2.  v5:= " threw an exception" @kind object;
  #L3665d6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3665dc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3665e2.  v5:= temp @kind object;
  #L3665e4.  call `b`(v0, v1, v5, v7) @signature `Lorg/greenrobot/eventbus/k;.b:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L3665ea.  v6:= (`org.greenrobot.eventbus.s`) v6 @kind object;
  #L3665ee.  v5:= v4.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L3665f2.  v7:= new `java.lang.StringBuilder`;
  #L3665f6.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3665fc.  v0:= "Initial event " @kind object;
  #L366600.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366606.  v0:= v6.`org.greenrobot.eventbus.s.c` @type ^`java.lang.Object` @kind object;
  #L36660a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366610.  v0:= " caused exception in " @kind object;
  #L366614.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36661a.  v0:= v6.`org.greenrobot.eventbus.s.d` @type ^`java.lang.Object` @kind object;
  #L36661e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366624.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36662a.  v7:= temp @kind object;
  #L36662c.  v6:= v6.`org.greenrobot.eventbus.s.b` @type ^`java.lang.Throwable` @kind object;
  #L366630.  call `b`(v5, v1, v7, v6) @signature `Lorg/greenrobot/eventbus/k;.b:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L366636.  goto L3666b8;
  #L366638.  v0:= v4.`org.greenrobot.eventbus.f.n` @type ^`boolean` @kind boolean;
  #L36663c.  if v0 != 0 then goto L3666ba;
  #L366640.  v0:= v4.`org.greenrobot.eventbus.f.o` @type ^`boolean` @kind boolean;
  #L366644.  if v0 == 0 then goto L36669c;
  #L366648.  v0:= v4.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L36664c.  v1:= `@@java.util.logging.Level.SEVERE` @type ^`java.util.logging.Level` @kind object;
  #L366650.  v2:= new `java.lang.StringBuilder`;
  #L366654.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36665a.  v3:= "Could not dispatch event: " @kind object;
  #L36665e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366664.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36666a.  v3:= temp @kind object;
  #L36666c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366672.  v3:= " to subscribing class " @kind object;
  #L366676.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36667c.  v3:= v5.`org.greenrobot.eventbus.w.a` @type ^`java.lang.Object` @kind object;
  #L366680.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L366686.  v3:= temp @kind object;
  #L366688.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36668e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366694.  v2:= temp @kind object;
  #L366696.  call `b`(v0, v1, v2, v7) @signature `Lorg/greenrobot/eventbus/k;.b:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L36669c.  v0:= v4.`org.greenrobot.eventbus.f.q` @type ^`boolean` @kind boolean;
  #L3666a0.  if v0 == 0 then goto L3666b8;
  #L3666a4.  v0:= new `org.greenrobot.eventbus.s`;
  #L3666a8.  v5:= v5.`org.greenrobot.eventbus.w.a` @type ^`java.lang.Object` @kind object;
  #L3666ac.  call `<init>`(v0, v4, v7, v6, v5) @signature `Lorg/greenrobot/eventbus/s;.<init>:(Lorg/greenrobot/eventbus/f;Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3666b2.  call `l`(v4, v0) @signature `Lorg/greenrobot/eventbus/f;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L3666b8.  return @kind void;
  #L3666ba.  v5:= new `org.greenrobot.eventbus.EventBusException`;
  #L3666be.  v6:= "Invoking subscriber failed" @kind object;
  #L3666c2.  call `<init>`(v5, v6, v7) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3666c8.  throw v5;
}
procedure `boolean` `i`(`org.greenrobot.eventbus.f` v1 @kind this) @signature `Lorg/greenrobot/eventbus/f;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L36616c.  v0:= v1.`org.greenrobot.eventbus.f.h` @type ^`org.greenrobot.eventbus.m` @kind object;
  #L366170.  if v0 == 0 then goto L366186;
  #L366174.  call temp:= `b`(v0) @signature `Lorg/greenrobot/eventbus/m;.b:()Z` @kind interface;
  #L36617a.  v0:= temp;
  #L36617c.  if v0 == 0 then goto L366182;
  #L366180.  goto L366186;
  #L366182.  v0:= 0I;
  #L366184.  goto L366188;
  #L366186.  v0:= 1I;
  #L366188.  return v0;
}
procedure `java.util.List` `k`(`java.lang.Class` v4 @kind object) @signature `Lorg/greenrobot/eventbus/f;.k:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3662e8.  v0:= `@@org.greenrobot.eventbus.f.c` @type ^`java.util.Map` @kind object;
  #L3662ec.  @monitorenter v0
  #L3662ee.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3662f4.  v1:= temp @kind object;
  #L3662f6.  v1:= (`java.util.List`) v1 @kind object;
  #L3662fa.  if v1 != 0 then goto L366336;
  #L3662fe.  v1:= new `java.util.ArrayList`;
  #L366302.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L366308.  v2:= v4 @kind object;
  #L36630a.  if v2 == 0 then goto L36632c;
  #L36630e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L366314.  call temp:= `getInterfaces`(v2) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L36631a.  v3:= temp @kind object;
  #L36631c.  call `a`(v1, v3) @signature `Lorg/greenrobot/eventbus/f;.a:(Ljava/util/List;[Ljava/lang/Class;)V` @kind static;
  #L366322.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L366328.  v2:= temp @kind object;
  #L36632a.  goto L36630a;
  #L36632c.  v2:= `@@org.greenrobot.eventbus.f.c` @type ^`java.util.Map` @kind object;
  #L366330.  call temp:= `put`(v2, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366336.  @monitorexit v0
  #L366338.  return v1 @kind object;
  #L36633a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36633c.  @monitorexit v0
  #L36633e.  goto L366342;
  #L366340.  throw v4;
  #L366342.  goto L366340;
  catch `java.lang.Throwable` @[L3662ee..L36633e] goto L36633a;
}
procedure `void` `m`(`org.greenrobot.eventbus.f` v6 @kind this, `java.lang.Object` v7 @kind object, `org.greenrobot.eventbus.e` v8 @kind object) @signature `Lorg/greenrobot/eventbus/f;.m:(Ljava/lang/Object;Lorg/greenrobot/eventbus/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L366810.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L366816.  v0:= temp @kind object;
  #L366818.  v1:= v6.`org.greenrobot.eventbus.f.s` @type ^`boolean` @kind boolean;
  #L36681c.  if v1 == 0 then goto L366854;
  #L366820.  call temp:= `k`(v0) @signature `Lorg/greenrobot/eventbus/f;.k:(Ljava/lang/Class;)Ljava/util/List;` @kind static;
  #L366826.  v1:= temp @kind object;
  #L366828.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36682e.  v2:= temp;
  #L366830.  v3:= 0I;
  #L366832.  v4:= 0I;
  #L366834.  if v3 >= v2 then goto L36685c;
  #L366838.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36683e.  v5:= temp @kind object;
  #L366840.  v5:= (`java.lang.Class`) v5 @kind object;
  #L366844.  call temp:= `n`(v6, v7, v8, v5) @signature `Lorg/greenrobot/eventbus/f;.n:(Ljava/lang/Object;Lorg/greenrobot/eventbus/e;Ljava/lang/Class;)Z` @kind direct;
  #L36684a.  v5:= temp;
  #L36684c.  v4:= v4 ^| v5 @kind int;
  #L36684e.  v3:= v3 + 1;
  #L366852.  goto L366834;
  #L366854.  call temp:= `n`(v6, v7, v8, v0) @signature `Lorg/greenrobot/eventbus/f;.n:(Ljava/lang/Object;Lorg/greenrobot/eventbus/e;Ljava/lang/Class;)Z` @kind direct;
  #L36685a.  v4:= temp;
  #L36685c.  if v4 != 0 then goto L3668c0;
  #L366860.  v8:= v6.`org.greenrobot.eventbus.f.p` @type ^`boolean` @kind boolean;
  #L366864.  if v8 == 0 then goto L366898;
  #L366868.  v8:= v6.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L36686c.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L366870.  v2:= new `java.lang.StringBuilder`;
  #L366874.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36687a.  v3:= "No subscribers registered for event " @kind object;
  #L36687e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366884.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36688a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366890.  v2:= temp @kind object;
  #L366892.  call `a`(v8, v1, v2) @signature `Lorg/greenrobot/eventbus/k;.a:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind interface;
  #L366898.  v8:= v6.`org.greenrobot.eventbus.f.r` @type ^`boolean` @kind boolean;
  #L36689c.  if v8 == 0 then goto L3668c0;
  #L3668a0.  v8:= constclass @type ^`org.greenrobot.eventbus.n` @kind object;
  #L3668a4.  if v0 == v8 then goto L3668c0;
  #L3668a8.  v8:= constclass @type ^`org.greenrobot.eventbus.s` @kind object;
  #L3668ac.  if v0 == v8 then goto L3668c0;
  #L3668b0.  v8:= new `org.greenrobot.eventbus.n`;
  #L3668b4.  call `<init>`(v8, v6, v7) @signature `Lorg/greenrobot/eventbus/n;.<init>:(Lorg/greenrobot/eventbus/f;Ljava/lang/Object;)V` @kind direct;
  #L3668ba.  call `l`(v6, v8) @signature `Lorg/greenrobot/eventbus/f;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L3668c0.  return @kind void;
}
procedure `boolean` `n`(`org.greenrobot.eventbus.f` v4 @kind this, `java.lang.Object` v5 @kind object, `org.greenrobot.eventbus.e` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lorg/greenrobot/eventbus/f;.n:(Ljava/lang/Object;Lorg/greenrobot/eventbus/e;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3661d0.  @monitorenter v4
  #L3661d2.  v0:= v4.`org.greenrobot.eventbus.f.d` @type ^`java.util.Map` @kind object;
  #L3661d6.  call temp:= `get`(v0, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3661dc.  v7:= temp @kind object;
  #L3661de.  v7:= (`java.util.concurrent.CopyOnWriteArrayList`) v7 @kind object;
  #L3661e2.  @monitorexit v4
  #L3661e4.  v0:= 0I;
  #L3661e6.  if v7 == 0 then goto L366254;
  #L3661ea.  call temp:= `isEmpty`(v7) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.isEmpty:()Z` @kind virtual;
  #L3661f0.  v1:= temp;
  #L3661f2.  if v1 != 0 then goto L366254;
  #L3661f6.  call temp:= `iterator`(v7) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3661fc.  v7:= temp @kind object;
  #L3661fe.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L366204.  v1:= temp;
  #L366206.  if v1 == 0 then goto L366250;
  #L36620a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L366210.  v1:= temp @kind object;
  #L366212.  v1:= (`org.greenrobot.eventbus.w`) v1 @kind object;
  #L366216.  v6.`org.greenrobot.eventbus.e.e` @type ^`java.lang.Object` := v5 @kind object;
  #L36621a.  v6.`org.greenrobot.eventbus.e.d` @type ^`org.greenrobot.eventbus.w` := v1 @kind object;
  #L36621e.  v2:= 0I;
  #L366220.  v3:= v6.`org.greenrobot.eventbus.e.c` @type ^`boolean` @kind boolean;
  #L366224.  call `p`(v4, v1, v5, v3) @signature `Lorg/greenrobot/eventbus/f;.p:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;Z)V` @kind direct;
  #L36622a.  v1:= v6.`org.greenrobot.eventbus.e.f` @type ^`boolean` @kind boolean;
  #L36622e.  v6.`org.greenrobot.eventbus.e.e` @type ^`java.lang.Object` := v2 @kind object;
  #L366232.  v6.`org.greenrobot.eventbus.e.d` @type ^`org.greenrobot.eventbus.w` := v2 @kind object;
  #L366236.  v6.`org.greenrobot.eventbus.e.f` @type ^`boolean` := v0 @kind boolean;
  #L36623a.  if v1 == 0 then goto L3661fe;
  #L36623e.  goto L366250;
  #L366240.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L366242.  v6.`org.greenrobot.eventbus.e.e` @type ^`java.lang.Object` := v2 @kind object;
  #L366246.  v6.`org.greenrobot.eventbus.e.d` @type ^`org.greenrobot.eventbus.w` := v2 @kind object;
  #L36624a.  v6.`org.greenrobot.eventbus.e.f` @type ^`boolean` := v0 @kind boolean;
  #L36624e.  throw v5;
  #L366250.  v5:= 1I;
  #L366252.  return v5;
  #L366254.  return v0;
  #L366256.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L366258.  @monitorexit v4
  #L36625a.  goto L36625e;
  #L36625c.  throw v5;
  #L36625e.  goto L36625c;
  catch `java.lang.Throwable` @[L3661d2..L3661e4] goto L366256;
  catch `java.lang.Throwable` @[L366220..L36622e] goto L366240;
  catch `java.lang.Throwable` @[L366258..L36625a] goto L366256;
}
procedure `void` `p`(`org.greenrobot.eventbus.f` v2 @kind this, `org.greenrobot.eventbus.w` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lorg/greenrobot/eventbus/f;.p:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L366920.  v0:= `@@org.greenrobot.eventbus.d.a` @type ^`int`[] @kind object;
  #L366924.  v1:= v3.`org.greenrobot.eventbus.w.b` @type ^`org.greenrobot.eventbus.t` @kind object;
  #L366928.  v1:= v1.`org.greenrobot.eventbus.t.b` @type ^`org.greenrobot.eventbus.ThreadMode` @kind object;
  #L36692c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L366932.  v1:= temp;
  #L366934.  v0:= v0[v1];
  #L366938.  v1:= 1I;
  #L36693a.  if v0 == v1 then goto L3669e0;
  #L36693e.  v1:= 2I;
  #L366940.  if v0 == v1 then goto L3669c8;
  #L366944.  v1:= 3I;
  #L366946.  if v0 == v1 then goto L3669b0;
  #L36694a.  v1:= 4I;
  #L36694c.  if v0 == v1 then goto L366998;
  #L366950.  v5:= 5I;
  #L366952.  if v0 != v5 then goto L366962;
  #L366956.  v5:= v2.`org.greenrobot.eventbus.f.k` @type ^`org.greenrobot.eventbus.a` @kind object;
  #L36695a.  call `a`(v5, v3, v4) @signature `Lorg/greenrobot/eventbus/a;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L366960.  goto L3669e6;
  #L366962.  v4:= new `java.lang.IllegalStateException`;
  #L366966.  v5:= new `java.lang.StringBuilder`;
  #L36696a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366970.  v0:= "Unknown thread mode: " @kind object;
  #L366974.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36697a.  v3:= v3.`org.greenrobot.eventbus.w.b` @type ^`org.greenrobot.eventbus.t` @kind object;
  #L36697e.  v3:= v3.`org.greenrobot.eventbus.t.b` @type ^`org.greenrobot.eventbus.ThreadMode` @kind object;
  #L366982.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366988.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36698e.  v3:= temp @kind object;
  #L366990.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366996.  throw v4;
  #L366998.  if v5 == 0 then goto L3669a8;
  #L36699c.  v5:= v2.`org.greenrobot.eventbus.f.j` @type ^`org.greenrobot.eventbus.b` @kind object;
  #L3669a0.  call `a`(v5, v3, v4) @signature `Lorg/greenrobot/eventbus/b;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3669a6.  goto L3669e6;
  #L3669a8.  call `h`(v2, v3, v4) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3669ae.  goto L3669e6;
  #L3669b0.  v5:= v2.`org.greenrobot.eventbus.f.i` @type ^`org.greenrobot.eventbus.q` @kind object;
  #L3669b4.  if v5 == 0 then goto L3669c0;
  #L3669b8.  call `a`(v5, v3, v4) @signature `Lorg/greenrobot/eventbus/q;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind interface;
  #L3669be.  goto L3669e6;
  #L3669c0.  call `h`(v2, v3, v4) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3669c6.  goto L3669e6;
  #L3669c8.  if v5 == 0 then goto L3669d4;
  #L3669cc.  call `h`(v2, v3, v4) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3669d2.  goto L3669e6;
  #L3669d4.  v5:= v2.`org.greenrobot.eventbus.f.i` @type ^`org.greenrobot.eventbus.q` @kind object;
  #L3669d8.  call `a`(v5, v3, v4) @signature `Lorg/greenrobot/eventbus/q;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind interface;
  #L3669de.  goto L3669e6;
  #L3669e0.  call `h`(v2, v3, v4) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3669e6.  return @kind void;
}
procedure `void` `r`(`org.greenrobot.eventbus.f` v7 @kind this, `java.lang.Object` v8 @kind object, `org.greenrobot.eventbus.t` v9 @kind object) @signature `Lorg/greenrobot/eventbus/f;.r:(Ljava/lang/Object;Lorg/greenrobot/eventbus/t;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L366a60.  v0:= v9.`org.greenrobot.eventbus.t.c` @type ^`java.lang.Class` @kind object;
  #L366a64.  v1:= new `org.greenrobot.eventbus.w`;
  #L366a68.  call `<init>`(v1, v8, v9) @signature `Lorg/greenrobot/eventbus/w;.<init>:(Ljava/lang/Object;Lorg/greenrobot/eventbus/t;)V` @kind direct;
  #L366a6e.  v2:= v7.`org.greenrobot.eventbus.f.d` @type ^`java.util.Map` @kind object;
  #L366a72.  call temp:= `get`(v2, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366a78.  v2:= temp @kind object;
  #L366a7a.  v2:= (`java.util.concurrent.CopyOnWriteArrayList`) v2 @kind object;
  #L366a7e.  if v2 != 0 then goto L366a98;
  #L366a82.  v2:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L366a86.  call `<init>`(v2) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L366a8c.  v3:= v7.`org.greenrobot.eventbus.f.d` @type ^`java.util.Map` @kind object;
  #L366a90.  call temp:= `put`(v3, v0, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366a96.  goto L366aa4;
  #L366a98.  call temp:= `contains`(v2, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L366a9e.  v3:= temp;
  #L366aa0.  if v3 != 0 then goto L366b86;
  #L366aa4.  call temp:= `size`(v2) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.size:()I` @kind virtual;
  #L366aaa.  v3:= temp;
  #L366aac.  v4:= 0I;
  #L366aae.  if v4 > v3 then goto L366ae0;
  #L366ab2.  if v4 == v3 then goto L366ada;
  #L366ab6.  v5:= v9.`org.greenrobot.eventbus.t.d` @type ^`int`;
  #L366aba.  call temp:= `get`(v2, v4) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L366ac0.  v6:= temp @kind object;
  #L366ac2.  v6:= (`org.greenrobot.eventbus.w`) v6 @kind object;
  #L366ac6.  v6:= v6.`org.greenrobot.eventbus.w.b` @type ^`org.greenrobot.eventbus.t` @kind object;
  #L366aca.  v6:= v6.`org.greenrobot.eventbus.t.d` @type ^`int`;
  #L366ace.  if v5 <= v6 then goto L366ad4;
  #L366ad2.  goto L366ada;
  #L366ad4.  v4:= v4 + 1;
  #L366ad8.  goto L366aae;
  #L366ada.  call `add`(v2, v4, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L366ae0.  v2:= v7.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` @kind object;
  #L366ae4.  call temp:= `get`(v2, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366aea.  v2:= temp @kind object;
  #L366aec.  v2:= (`java.util.List`) v2 @kind object;
  #L366af0.  if v2 != 0 then goto L366b08;
  #L366af4.  v2:= new `java.util.ArrayList`;
  #L366af8.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L366afe.  v3:= v7.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` @kind object;
  #L366b02.  call temp:= `put`(v3, v8, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366b08.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L366b0e.  v8:= v9.`org.greenrobot.eventbus.t.e` @type ^`boolean` @kind boolean;
  #L366b12.  if v8 == 0 then goto L366b84;
  #L366b16.  v8:= v7.`org.greenrobot.eventbus.f.s` @type ^`boolean` @kind boolean;
  #L366b1a.  if v8 == 0 then goto L366b72;
  #L366b1e.  v8:= v7.`org.greenrobot.eventbus.f.f` @type ^`java.util.Map` @kind object;
  #L366b22.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L366b28.  v8:= temp @kind object;
  #L366b2a.  call temp:= `iterator`(v8) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L366b30.  v8:= temp @kind object;
  #L366b32.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L366b38.  v9:= temp;
  #L366b3a.  if v9 == 0 then goto L366b84;
  #L366b3e.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L366b44.  v9:= temp @kind object;
  #L366b46.  v9:= (`java.util.Map$Entry`) v9 @kind object;
  #L366b4a.  call temp:= `getKey`(v9) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L366b50.  v2:= temp @kind object;
  #L366b52.  v2:= (`java.lang.Class`) v2 @kind object;
  #L366b56.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L366b5c.  v2:= temp;
  #L366b5e.  if v2 == 0 then goto L366b32;
  #L366b62.  call temp:= `getValue`(v9) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L366b68.  v9:= temp @kind object;
  #L366b6a.  call `b`(v7, v1, v9) @signature `Lorg/greenrobot/eventbus/f;.b:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind direct;
  #L366b70.  goto L366b32;
  #L366b72.  v8:= v7.`org.greenrobot.eventbus.f.f` @type ^`java.util.Map` @kind object;
  #L366b76.  call temp:= `get`(v8, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366b7c.  v8:= temp @kind object;
  #L366b7e.  call `b`(v7, v1, v8) @signature `Lorg/greenrobot/eventbus/f;.b:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind direct;
  #L366b84.  return @kind void;
  #L366b86.  v9:= new `org.greenrobot.eventbus.EventBusException`;
  #L366b8a.  v1:= new `java.lang.StringBuilder`;
  #L366b8e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366b94.  v2:= "Subscriber " @kind object;
  #L366b98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366b9e.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L366ba4.  v8:= temp @kind object;
  #L366ba6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366bac.  v8:= " already registered to event " @kind object;
  #L366bb0.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366bb6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366bbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366bc2.  v8:= temp @kind object;
  #L366bc4.  call `<init>`(v9, v8) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366bca.  goto L366bce;
  #L366bcc.  throw v9;
  #L366bce.  goto L366bcc;
}
procedure `void` `t`(`org.greenrobot.eventbus.f` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lorg/greenrobot/eventbus/f;.t:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L366c8c.  v0:= v5.`org.greenrobot.eventbus.f.d` @type ^`java.util.Map` @kind object;
  #L366c90.  call temp:= `get`(v0, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366c96.  v7:= temp @kind object;
  #L366c98.  v7:= (`java.util.List`) v7 @kind object;
  #L366c9c.  if v7 == 0 then goto L366cdc;
  #L366ca0.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L366ca6.  v0:= temp;
  #L366ca8.  v1:= 0I;
  #L366caa.  v2:= 0I;
  #L366cac.  if v2 >= v0 then goto L366cdc;
  #L366cb0.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L366cb6.  v3:= temp @kind object;
  #L366cb8.  v3:= (`org.greenrobot.eventbus.w`) v3 @kind object;
  #L366cbc.  v4:= v3.`org.greenrobot.eventbus.w.a` @type ^`java.lang.Object` @kind object;
  #L366cc0.  if v4 != v6 then goto L366cd6;
  #L366cc4.  v3.`org.greenrobot.eventbus.w.c` @type ^`boolean` := v1 @kind boolean;
  #L366cc8.  call temp:= `remove`(v7, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L366cce.  v2:= v2 + -1;
  #L366cd2.  v0:= v0 + -1;
  #L366cd6.  v2:= v2 + 1;
  #L366cda.  goto L366cac;
  #L366cdc.  return @kind void;
}
procedure `java.util.concurrent.ExecutorService` `d`(`org.greenrobot.eventbus.f` v1 @kind this) @signature `Lorg/greenrobot/eventbus/f;.d:()Ljava/util/concurrent/ExecutorService;` @AccessFlag  {
    temp;
    v0;

  #L366360.  v0:= v1.`org.greenrobot.eventbus.f.m` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L366364.  return v0 @kind object;
}
procedure `org.greenrobot.eventbus.k` `e`(`org.greenrobot.eventbus.f` v1 @kind this) @signature `Lorg/greenrobot/eventbus/f;.e:()Lorg/greenrobot/eventbus/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3663c4.  v0:= v1.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L3663c8.  return v0 @kind object;
}
procedure `void` `g`(`org.greenrobot.eventbus.f` v2 @kind this, `org.greenrobot.eventbus.o` v3 @kind object) @signature `Lorg/greenrobot/eventbus/f;.g:(Lorg/greenrobot/eventbus/o;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3666dc.  v0:= v3.`org.greenrobot.eventbus.o.b` @type ^`java.lang.Object` @kind object;
  #L3666e0.  v1:= v3.`org.greenrobot.eventbus.o.c` @type ^`org.greenrobot.eventbus.w` @kind object;
  #L3666e4.  call `b`(v3) @signature `Lorg/greenrobot/eventbus/o;.b:(Lorg/greenrobot/eventbus/o;)V` @kind static;
  #L3666ea.  v3:= v1.`org.greenrobot.eventbus.w.c` @type ^`boolean` @kind boolean;
  #L3666ee.  if v3 == 0 then goto L3666f8;
  #L3666f2.  call `h`(v2, v1, v0) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @kind virtual;
  #L3666f8.  return @kind void;
}
procedure `void` `h`(`org.greenrobot.eventbus.f` v4 @kind this, `org.greenrobot.eventbus.w` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/greenrobot/eventbus/f;.h:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36670c.  v0:= v5.`org.greenrobot.eventbus.w.b` @type ^`org.greenrobot.eventbus.t` @kind object;
  #L366710.  v0:= v0.`org.greenrobot.eventbus.t.a` @type ^`java.lang.reflect.Method` @kind object;
  #L366714.  v1:= v5.`org.greenrobot.eventbus.w.a` @type ^`java.lang.Object` @kind object;
  #L366718.  v2:= 1I;
  #L36671a.  v2:= new `java.lang.Object`[v2];
  #L36671e.  v3:= 0I;
  #L366720.  v2[v3]:= v6 @kind object;
  #L366724.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36672a.  goto L36674e;
  #L36672c.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L36672e.  v6:= new `java.lang.IllegalStateException`;
  #L366732.  v0:= "Unexpected exception" @kind object;
  #L366736.  call `<init>`(v6, v0, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L36673c.  throw v6;
  #L36673e.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L366740.  call temp:= `getCause`(v0) @signature `Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L366746.  v0:= temp @kind object;
  #L366748.  call `f`(v4, v5, v6, v0) @signature `Lorg/greenrobot/eventbus/f;.f:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind direct;
  #L36674e.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L36670c..L36672a] goto L36673e;
  catch `java.lang.IllegalAccessException` @[L36670c..L36672a] goto L36672c;
}
procedure `boolean` `j`(`org.greenrobot.eventbus.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/eventbus/f;.j:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36619c.  @monitorenter v1
  #L36619e.  v0:= v1.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` @kind object;
  #L3661a2.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3661a8.  v2:= temp;
  #L3661aa.  @monitorexit v1
  #L3661ac.  return v2;
  #L3661ae.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3661b0.  @monitorexit v1
  #L3661b2.  throw v2;
  catch `java.lang.Throwable` @[L36619e..L3661aa] goto L3661ae;
}
procedure `void` `l`(`org.greenrobot.eventbus.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/eventbus/f;.l:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L366770.  v0:= v3.`org.greenrobot.eventbus.f.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L366774.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L36677a.  v0:= temp @kind object;
  #L36677c.  v0:= (`org.greenrobot.eventbus.e`) v0 @kind object;
  #L366780.  v1:= v0.`org.greenrobot.eventbus.e.a` @type ^`java.util.List` @kind object;
  #L366784.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36678a.  v4:= v0.`org.greenrobot.eventbus.e.b` @type ^`boolean` @kind boolean;
  #L36678e.  if v4 != 0 then goto L3667f0;
  #L366792.  call temp:= `i`(v3) @signature `Lorg/greenrobot/eventbus/f;.i:()Z` @kind direct;
  #L366798.  v4:= temp;
  #L36679a.  v0.`org.greenrobot.eventbus.e.c` @type ^`boolean` := v4 @kind boolean;
  #L36679e.  v4:= 1I;
  #L3667a0.  v0.`org.greenrobot.eventbus.e.b` @type ^`boolean` := v4 @kind boolean;
  #L3667a4.  v4:= v0.`org.greenrobot.eventbus.e.f` @type ^`boolean` @kind boolean;
  #L3667a8.  if v4 != 0 then goto L3667e0;
  #L3667ac.  v4:= 0I;
  #L3667ae.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3667b4.  v2:= temp;
  #L3667b6.  if v2 != 0 then goto L3667ca;
  #L3667ba.  call temp:= `remove`(v1, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3667c0.  v2:= temp @kind object;
  #L3667c2.  call `m`(v3, v2, v0) @signature `Lorg/greenrobot/eventbus/f;.m:(Ljava/lang/Object;Lorg/greenrobot/eventbus/e;)V` @kind direct;
  #L3667c8.  goto L3667ac;
  #L3667ca.  v0.`org.greenrobot.eventbus.e.b` @type ^`boolean` := v4 @kind boolean;
  #L3667ce.  v0.`org.greenrobot.eventbus.e.c` @type ^`boolean` := v4 @kind boolean;
  #L3667d2.  goto L3667f0;
  #L3667d4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3667d6.  v0.`org.greenrobot.eventbus.e.b` @type ^`boolean` := v4 @kind boolean;
  #L3667da.  v0.`org.greenrobot.eventbus.e.c` @type ^`boolean` := v4 @kind boolean;
  #L3667de.  throw v1;
  #L3667e0.  v4:= new `org.greenrobot.eventbus.EventBusException`;
  #L3667e4.  v0:= "Internal error. Abort state was not reset" @kind object;
  #L3667e8.  call `<init>`(v4, v0) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3667ee.  throw v4;
  #L3667f0.  return @kind void;
  catch `java.lang.Throwable` @[L3667ae..L3667c8] goto L3667d4;
}
procedure `void` `o`(`org.greenrobot.eventbus.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/eventbus/f;.o:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3668d4.  v0:= v3.`org.greenrobot.eventbus.f.f` @type ^`java.util.Map` @kind object;
  #L3668d8.  @monitorenter v0
  #L3668da.  v1:= v3.`org.greenrobot.eventbus.f.f` @type ^`java.util.Map` @kind object;
  #L3668de.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3668e4.  v2:= temp @kind object;
  #L3668e6.  call temp:= `put`(v1, v2, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3668ec.  @monitorexit v0
  #L3668ee.  call `l`(v3, v4) @signature `Lorg/greenrobot/eventbus/f;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L3668f4.  return @kind void;
  #L3668f6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3668f8.  @monitorexit v0
  #L3668fa.  throw v4;
  catch `java.lang.Throwable` @[L3668da..L3668ee] goto L3668f6;
  catch `java.lang.Throwable` @[L3668f8..L3668fa] goto L3668f6;
}
procedure `void` `q`(`org.greenrobot.eventbus.f` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/eventbus/f;.q:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3669f8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3669fe.  v0:= temp @kind object;
  #L366a00.  v1:= v2.`org.greenrobot.eventbus.f.l` @type ^`org.greenrobot.eventbus.v` @kind object;
  #L366a04.  call temp:= `a`(v1, v0) @signature `Lorg/greenrobot/eventbus/v;.a:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L366a0a.  v0:= temp @kind object;
  #L366a0c.  @monitorenter v2
  #L366a0e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L366a14.  v0:= temp @kind object;
  #L366a16.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L366a1c.  v1:= temp;
  #L366a1e.  if v1 == 0 then goto L366a36;
  #L366a22.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L366a28.  v1:= temp @kind object;
  #L366a2a.  v1:= (`org.greenrobot.eventbus.t`) v1 @kind object;
  #L366a2e.  call `r`(v2, v3, v1) @signature `Lorg/greenrobot/eventbus/f;.r:(Ljava/lang/Object;Lorg/greenrobot/eventbus/t;)V` @kind direct;
  #L366a34.  goto L366a16;
  #L366a36.  @monitorexit v2
  #L366a38.  return @kind void;
  #L366a3a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L366a3c.  @monitorexit v2
  #L366a3e.  goto L366a42;
  #L366a40.  throw v3;
  #L366a42.  goto L366a40;
  catch `java.lang.Throwable` @[L366a0e..L366a3e] goto L366a3a;
}
procedure `void` `s`(`org.greenrobot.eventbus.f` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/greenrobot/eventbus/f;.s:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366be0.  @monitorenter v4
  #L366be2.  v0:= v4.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` @kind object;
  #L366be6.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366bec.  v0:= temp @kind object;
  #L366bee.  v0:= (`java.util.List`) v0 @kind object;
  #L366bf2.  if v0 == 0 then goto L366c2a;
  #L366bf6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L366bfc.  v0:= temp @kind object;
  #L366bfe.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L366c04.  v1:= temp;
  #L366c06.  if v1 == 0 then goto L366c1e;
  #L366c0a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L366c10.  v1:= temp @kind object;
  #L366c12.  v1:= (`java.lang.Class`) v1 @kind object;
  #L366c16.  call `t`(v4, v5, v1) @signature `Lorg/greenrobot/eventbus/f;.t:(Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L366c1c.  goto L366bfe;
  #L366c1e.  v0:= v4.`org.greenrobot.eventbus.f.e` @type ^`java.util.Map` @kind object;
  #L366c22.  call temp:= `remove`(v0, v5) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L366c28.  goto L366c62;
  #L366c2a.  v0:= v4.`org.greenrobot.eventbus.f.u` @type ^`org.greenrobot.eventbus.k` @kind object;
  #L366c2e.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L366c32.  v2:= new `java.lang.StringBuilder`;
  #L366c36.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366c3c.  v3:= "Subscriber to unregister was not registered before: " @kind object;
  #L366c40.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366c46.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L366c4c.  v5:= temp @kind object;
  #L366c4e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366c54.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366c5a.  v5:= temp @kind object;
  #L366c5c.  call `a`(v0, v1, v5) @signature `Lorg/greenrobot/eventbus/k;.a:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind interface;
  #L366c62.  @monitorexit v4
  #L366c64.  return @kind void;
  #L366c66.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L366c68.  @monitorexit v4
  #L366c6a.  goto L366c6e;
  #L366c6c.  throw v5;
  #L366c6e.  goto L366c6c;
  catch `java.lang.Throwable` @[L366be2..L366c62] goto L366c66;
}
procedure `java.lang.String` `toString`(`org.greenrobot.eventbus.f` v2 @kind this) @signature `Lorg/greenrobot/eventbus/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366290.  v0:= new `java.lang.StringBuilder`;
  #L366294.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36629a.  v1:= "EventBus[indexCount=" @kind object;
  #L36629e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3662a4.  v1:= v2.`org.greenrobot.eventbus.f.t` @type ^`int`;
  #L3662a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3662ae.  v1:= ", eventInheritance=" @kind object;
  #L3662b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3662b8.  v1:= v2.`org.greenrobot.eventbus.f.s` @type ^`boolean` @kind boolean;
  #L3662bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3662c2.  v1:= "]" @kind object;
  #L3662c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3662cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3662d2.  v0:= temp @kind object;
  #L3662d4.  return v0 @kind object;
}
