record `org.greenrobot.eventbus.a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface, `org.greenrobot.eventbus.q` @kind interface {
  `org.greenrobot.eventbus.p` `org.greenrobot.eventbus.a.b` @AccessFlag PRIVATE_FINAL;
  `org.greenrobot.eventbus.f` `org.greenrobot.eventbus.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.a` v0 @kind this, `org.greenrobot.eventbus.f` v1 @kind object) @signature `Lorg/greenrobot/eventbus/a;.<init>:(Lorg/greenrobot/eventbus/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L365cd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L365cd6.  v0.`org.greenrobot.eventbus.a.c` @type ^`org.greenrobot.eventbus.f` := v1 @kind object;
  #L365cda.  v1:= new `org.greenrobot.eventbus.p`;
  #L365cde.  call `<init>`(v1) @signature `Lorg/greenrobot/eventbus/p;.<init>:()V` @kind direct;
  #L365ce4.  v0.`org.greenrobot.eventbus.a.b` @type ^`org.greenrobot.eventbus.p` := v1 @kind object;
  #L365ce8.  return @kind void;
}
procedure `void` `a`(`org.greenrobot.eventbus.a` v0 @kind this, `org.greenrobot.eventbus.w` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/eventbus/a;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L365cfc.  call temp:= `a`(v1, v2) @signature `Lorg/greenrobot/eventbus/o;.a:(Lorg/greenrobot/eventbus/w;Ljava/lang/Object;)Lorg/greenrobot/eventbus/o;` @kind static;
  #L365d02.  v1:= temp @kind object;
  #L365d04.  v2:= v0.`org.greenrobot.eventbus.a.b` @type ^`org.greenrobot.eventbus.p` @kind object;
  #L365d08.  call `a`(v2, v1) @signature `Lorg/greenrobot/eventbus/p;.a:(Lorg/greenrobot/eventbus/o;)V` @kind virtual;
  #L365d0e.  v1:= v0.`org.greenrobot.eventbus.a.c` @type ^`org.greenrobot.eventbus.f` @kind object;
  #L365d12.  call temp:= `d`(v1) @signature `Lorg/greenrobot/eventbus/f;.d:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L365d18.  v1:= temp @kind object;
  #L365d1a.  call `execute`(v1, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L365d20.  return @kind void;
}
procedure `void` `run`(`org.greenrobot.eventbus.a` v2 @kind this) @signature `Lorg/greenrobot/eventbus/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L365d34.  v0:= v2.`org.greenrobot.eventbus.a.b` @type ^`org.greenrobot.eventbus.p` @kind object;
  #L365d38.  call temp:= `b`(v0) @signature `Lorg/greenrobot/eventbus/p;.b:()Lorg/greenrobot/eventbus/o;` @kind virtual;
  #L365d3e.  v0:= temp @kind object;
  #L365d40.  if v0 == 0 then goto L365d50;
  #L365d44.  v1:= v2.`org.greenrobot.eventbus.a.c` @type ^`org.greenrobot.eventbus.f` @kind object;
  #L365d48.  call `g`(v1, v0) @signature `Lorg/greenrobot/eventbus/f;.g:(Lorg/greenrobot/eventbus/o;)V` @kind virtual;
  #L365d4e.  return @kind void;
  #L365d50.  v0:= new `java.lang.IllegalStateException`;
  #L365d54.  v1:= "No pending post available" @kind object;
  #L365d58.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L365d5e.  throw v0;
}
