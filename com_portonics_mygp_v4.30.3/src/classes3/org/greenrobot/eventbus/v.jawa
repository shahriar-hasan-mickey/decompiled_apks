record `org.greenrobot.eventbus.v` @kind class @AccessFlag  {
  `java.util.List` `org.greenrobot.eventbus.v.c` @AccessFlag PRIVATE;
  `boolean` `org.greenrobot.eventbus.v.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.greenrobot.eventbus.v.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@org.greenrobot.eventbus.v.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.greenrobot.eventbus.u`[] `@@org.greenrobot.eventbus.v.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/greenrobot/eventbus/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L367744.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L367748.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L36774e.  `@@org.greenrobot.eventbus.v.a` @type ^`java.util.Map` := v0 @kind object;
  #L367752.  v0:= 4I;
  #L367754.  v0:= new `org.greenrobot.eventbus.u`[v0];
  #L367758.  `@@org.greenrobot.eventbus.v.b` @type ^`org.greenrobot.eventbus.u`[] := v0 @kind object;
  #L36775c.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.eventbus.v` v0 @kind this, `java.util.List` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lorg/greenrobot/eventbus/v;.<init>:(Ljava/util/List;ZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L367770.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L367776.  v0.`org.greenrobot.eventbus.v.c` @type ^`java.util.List` := v1 @kind object;
  #L36777a.  v0.`org.greenrobot.eventbus.v.d` @type ^`boolean` := v2 @kind boolean;
  #L36777e.  v0.`org.greenrobot.eventbus.v.e` @type ^`boolean` := v3 @kind boolean;
  #L367782.  return @kind void;
}
procedure `java.util.List` `b`(`org.greenrobot.eventbus.v` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/greenrobot/eventbus/v;.b:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L367530.  call temp:= `g`(v6) @signature `Lorg/greenrobot/eventbus/v;.g:()Lorg/greenrobot/eventbus/u;` @kind direct;
  #L367536.  v0:= temp @kind object;
  #L367538.  call `c`(v0, v7) @signature `Lorg/greenrobot/eventbus/u;.c:(Ljava/lang/Class;)V` @kind virtual;
  #L36753e.  v7:= v0.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L367542.  if v7 == 0 then goto L36759c;
  #L367546.  call temp:= `f`(v6, v0) @signature `Lorg/greenrobot/eventbus/v;.f:(Lorg/greenrobot/eventbus/u;)Lorg/greenrobot/eventbus/y/a;` @kind direct;
  #L36754c.  v7:= temp @kind object;
  #L36754e.  v0.`org.greenrobot.eventbus.u.h` @type ^`org.greenrobot.eventbus.y.a` := v7 @kind object;
  #L367552.  if v7 == 0 then goto L36758e;
  #L367556.  call temp:= `a`(v7) @signature `Lorg/greenrobot/eventbus/y/a;.a:()[Lorg/greenrobot/eventbus/t;` @kind interface;
  #L36755c.  v7:= temp @kind object;
  #L36755e.  v1:= length @variable v7;
  #L367560.  v2:= 0I;
  #L367562.  if v2 >= v1 then goto L367594;
  #L367566.  v3:= v7[v2] @kind object;
  #L36756a.  v4:= v3.`org.greenrobot.eventbus.t.a` @type ^`java.lang.reflect.Method` @kind object;
  #L36756e.  v5:= v3.`org.greenrobot.eventbus.t.c` @type ^`java.lang.Class` @kind object;
  #L367572.  call temp:= `a`(v0, v4, v5) @signature `Lorg/greenrobot/eventbus/u;.a:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @kind virtual;
  #L367578.  v4:= temp;
  #L36757a.  if v4 == 0 then goto L367588;
  #L36757e.  v4:= v0.`org.greenrobot.eventbus.u.a` @type ^`java.util.List` @kind object;
  #L367582.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L367588.  v2:= v2 + 1;
  #L36758c.  goto L367562;
  #L36758e.  call `d`(v6, v0) @signature `Lorg/greenrobot/eventbus/v;.d:(Lorg/greenrobot/eventbus/u;)V` @kind direct;
  #L367594.  call `d`(v0) @signature `Lorg/greenrobot/eventbus/u;.d:()V` @kind virtual;
  #L36759a.  goto L36753e;
  #L36759c.  call temp:= `e`(v6, v0) @signature `Lorg/greenrobot/eventbus/v;.e:(Lorg/greenrobot/eventbus/u;)Ljava/util/List;` @kind direct;
  #L3675a2.  v7:= temp @kind object;
  #L3675a4.  return v7 @kind object;
}
procedure `java.util.List` `c`(`org.greenrobot.eventbus.v` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/greenrobot/eventbus/v;.c:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3675b8.  call temp:= `g`(v1) @signature `Lorg/greenrobot/eventbus/v;.g:()Lorg/greenrobot/eventbus/u;` @kind direct;
  #L3675be.  v0:= temp @kind object;
  #L3675c0.  call `c`(v0, v2) @signature `Lorg/greenrobot/eventbus/u;.c:(Ljava/lang/Class;)V` @kind virtual;
  #L3675c6.  v2:= v0.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L3675ca.  if v2 == 0 then goto L3675dc;
  #L3675ce.  call `d`(v1, v0) @signature `Lorg/greenrobot/eventbus/v;.d:(Lorg/greenrobot/eventbus/u;)V` @kind direct;
  #L3675d4.  call `d`(v0) @signature `Lorg/greenrobot/eventbus/u;.d:()V` @kind virtual;
  #L3675da.  goto L3675c6;
  #L3675dc.  call temp:= `e`(v1, v0) @signature `Lorg/greenrobot/eventbus/v;.e:(Lorg/greenrobot/eventbus/u;)Ljava/util/List;` @kind direct;
  #L3675e2.  v2:= temp @kind object;
  #L3675e4.  return v2 @kind object;
}
procedure `void` `d`(`org.greenrobot.eventbus.v` v14 @kind this, `org.greenrobot.eventbus.u` v15 @kind object) @signature `Lorg/greenrobot/eventbus/v;.d:(Lorg/greenrobot/eventbus/u;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L367794.  v0:= 1I;
  #L367796.  v1:= v15.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L36779a.  call temp:= `getDeclaredMethods`(v1) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L3677a0.  v1:= temp @kind object;
  #L3677a2.  goto L3677b4;
  #L3677a4.  v1:= v15.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L3677a8.  call temp:= `getMethods`(v1) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L3677ae.  v1:= temp @kind object;
  #L3677b0.  v15.`org.greenrobot.eventbus.u.g` @type ^`boolean` := v0 @kind boolean;
  #L3677b4.  v2:= length @variable v1;
  #L3677b6.  v3:= 0I;
  #L3677b8.  v4:= 0I;
  #L3677ba.  if v4 >= v2 then goto L36796e;
  #L3677be.  v6:= v1[v4] @kind object;
  #L3677c2.  call temp:= `getModifiers`(v6) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L3677c8.  v5:= temp;
  #L3677ca.  v7:= v5 ^& 1;
  #L3677ce.  v8:= "." @kind object;
  #L3677d2.  if v7 == 0 then goto L3678e2;
  #L3677d6.  v5:= v5 ^& 5192;
  #L3677da.  if v5 != 0 then goto L3678e2;
  #L3677de.  call temp:= `getParameterTypes`(v6) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3677e4.  v5:= temp @kind object;
  #L3677e6.  v7:= length @variable v5;
  #L3677e8.  if v7 != v0 then goto L36784a;
  #L3677ec.  v7:= constclass @type ^`org.greenrobot.eventbus.r` @kind object;
  #L3677f0.  call temp:= `getAnnotation`(v6, v7) @signature `Ljava/lang/reflect/Method;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3677f6.  v7:= temp @kind object;
  #L3677f8.  v7:= (`org.greenrobot.eventbus.r`) v7 @kind object;
  #L3677fc.  if v7 == 0 then goto L367966;
  #L367800.  v8:= v5[v3] @kind object;
  #L367804.  call temp:= `a`(v15, v6, v8) @signature `Lorg/greenrobot/eventbus/u;.a:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z` @kind virtual;
  #L36780a.  v5:= temp;
  #L36780c.  if v5 == 0 then goto L367966;
  #L367810.  call temp:= `threadMode`(v7) @signature `Lorg/greenrobot/eventbus/r;.threadMode:()Lorg/greenrobot/eventbus/ThreadMode;` @kind interface;
  #L367816.  v9:= temp @kind object;
  #L367818.  v11:= v15.`org.greenrobot.eventbus.u.a` @type ^`java.util.List` @kind object;
  #L36781c.  v12:= new `org.greenrobot.eventbus.t`;
  #L367820.  call temp:= `priority`(v7) @signature `Lorg/greenrobot/eventbus/r;.priority:()I` @kind interface;
  #L367826.  v10:= temp;
  #L367828.  call temp:= `sticky`(v7) @signature `Lorg/greenrobot/eventbus/r;.sticky:()Z` @kind interface;
  #L36782e.  v13:= temp;
  #L367830.  v5:= v12 @kind object;
  #L367832.  v7:= v8 @kind object;
  #L367834.  v8:= v9 @kind object;
  #L367836.  v9:= v10;
  #L367838.  v10:= v13;
  #L36783a.  call `<init>`(v5, v6, v7, v8, v9, v10) @signature `Lorg/greenrobot/eventbus/t;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/greenrobot/eventbus/ThreadMode;IZ)V` @kind direct;
  #L367840.  call temp:= `add`(v11, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L367846.  goto L367966;
  #L36784a.  v7:= v14.`org.greenrobot.eventbus.v.d` @type ^`boolean` @kind boolean;
  #L36784e.  if v7 == 0 then goto L367966;
  #L367852.  v7:= constclass @type ^`org.greenrobot.eventbus.r` @kind object;
  #L367856.  call temp:= `isAnnotationPresent`(v6, v7) @signature `Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L36785c.  v7:= temp;
  #L36785e.  if v7 != 0 then goto L367866;
  #L367862.  goto L367966;
  #L367866.  v15:= new `java.lang.StringBuilder`;
  #L36786a.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L367870.  call temp:= `getDeclaringClass`(v6) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L367876.  v0:= temp @kind object;
  #L367878.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L36787e.  v0:= temp @kind object;
  #L367880.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367886.  call temp:= `append`(v15, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36788c.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L367892.  v0:= temp @kind object;
  #L367894.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36789a.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3678a0.  v15:= temp @kind object;
  #L3678a2.  v0:= new `org.greenrobot.eventbus.EventBusException`;
  #L3678a6.  v1:= new `java.lang.StringBuilder`;
  #L3678aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3678b0.  v2:= "@Subscribe method " @kind object;
  #L3678b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3678ba.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3678c0.  v15:= "must have exactly 1 parameter but has " @kind object;
  #L3678c4.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3678ca.  v15:= length @variable v5;
  #L3678cc.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3678d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3678d8.  v15:= temp @kind object;
  #L3678da.  call `<init>`(v0, v15) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3678e0.  throw v0;
  #L3678e2.  v5:= v14.`org.greenrobot.eventbus.v.d` @type ^`boolean` @kind boolean;
  #L3678e6.  if v5 == 0 then goto L367966;
  #L3678ea.  v5:= constclass @type ^`org.greenrobot.eventbus.r` @kind object;
  #L3678ee.  call temp:= `isAnnotationPresent`(v6, v5) @signature `Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L3678f4.  v5:= temp;
  #L3678f6.  if v5 != 0 then goto L3678fc;
  #L3678fa.  goto L367966;
  #L3678fc.  v15:= new `java.lang.StringBuilder`;
  #L367900.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L367906.  call temp:= `getDeclaringClass`(v6) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L36790c.  v0:= temp @kind object;
  #L36790e.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L367914.  v0:= temp @kind object;
  #L367916.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36791c.  call temp:= `append`(v15, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367922.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L367928.  v0:= temp @kind object;
  #L36792a.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367930.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L367936.  v15:= temp @kind object;
  #L367938.  v0:= new `org.greenrobot.eventbus.EventBusException`;
  #L36793c.  v1:= new `java.lang.StringBuilder`;
  #L367940.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L367946.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36794c.  v15:= " is a illegal @Subscribe method: must be public, non-static, and non-abstract" @kind object;
  #L367950.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367956.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36795c.  v15:= temp @kind object;
  #L36795e.  call `<init>`(v0, v15) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L367964.  throw v0;
  #L367966.  v4:= v4 + 1;
  #L36796a.  goto L3677ba;
  #L36796e.  return @kind void;
  #L367970.  v0:= Exception @type ^`java.lang.LinkageError` @kind object;
  #L367972.  v1:= new `java.lang.StringBuilder`;
  #L367976.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36797c.  v2:= "Could not inspect methods of " @kind object;
  #L367980.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367986.  v15:= v15.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L36798a.  call temp:= `getName`(v15) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L367990.  v15:= temp @kind object;
  #L367992.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367998.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36799e.  v15:= temp @kind object;
  #L3679a0.  v1:= v14.`org.greenrobot.eventbus.v.e` @type ^`boolean` @kind boolean;
  #L3679a4.  if v1 == 0 then goto L3679cc;
  #L3679a8.  v1:= new `java.lang.StringBuilder`;
  #L3679ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3679b2.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3679b8.  v15:= ". Please consider using EventBus annotation processor to avoid reflection." @kind object;
  #L3679bc.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3679c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3679c8.  v15:= temp @kind object;
  #L3679ca.  goto L3679ee;
  #L3679cc.  v1:= new `java.lang.StringBuilder`;
  #L3679d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3679d6.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3679dc.  v15:= ". Please make this class visible to EventBus annotation processor to avoid reflection." @kind object;
  #L3679e0.  call temp:= `append`(v1, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3679e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3679ec.  v15:= temp @kind object;
  #L3679ee.  v1:= new `org.greenrobot.eventbus.EventBusException`;
  #L3679f2.  call `<init>`(v1, v15, v0) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3679f8.  goto L3679fc;
  #L3679fa.  throw v1;
  #L3679fc.  goto L3679fa;
  catch `java.lang.Throwable` @[L367796..L3677a2] goto L3677a4;
  catch `java.lang.LinkageError` @[L3677a4..L3677b0] goto L367970;
}
procedure `java.util.List` `e`(`org.greenrobot.eventbus.v` v5 @kind this, `org.greenrobot.eventbus.u` v6 @kind object) @signature `Lorg/greenrobot/eventbus/v;.e:(Lorg/greenrobot/eventbus/u;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3675f8.  v0:= new `java.util.ArrayList`;
  #L3675fc.  v1:= v6.`org.greenrobot.eventbus.u.a` @type ^`java.util.List` @kind object;
  #L367600.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L367606.  call `e`(v6) @signature `Lorg/greenrobot/eventbus/u;.e:()V` @kind virtual;
  #L36760c.  v1:= `@@org.greenrobot.eventbus.v.b` @type ^`org.greenrobot.eventbus.u`[] @kind object;
  #L367610.  @monitorenter v1
  #L367612.  v2:= 0I;
  #L367614.  v3:= 4I;
  #L367616.  if v2 >= v3 then goto L367632;
  #L36761a.  v3:= `@@org.greenrobot.eventbus.v.b` @type ^`org.greenrobot.eventbus.u`[] @kind object;
  #L36761e.  v4:= v3[v2] @kind object;
  #L367622.  if v4 != 0 then goto L36762c;
  #L367626.  v3[v2]:= v6 @kind object;
  #L36762a.  goto L367632;
  #L36762c.  v2:= v2 + 1;
  #L367630.  goto L367614;
  #L367632.  @monitorexit v1
  #L367634.  return v0 @kind object;
  #L367636.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L367638.  @monitorexit v1
  #L36763a.  goto L36763e;
  #L36763c.  throw v6;
  #L36763e.  goto L36763c;
  catch `java.lang.Throwable` @[L36761a..L36763a] goto L367636;
}
procedure `org.greenrobot.eventbus.y.a` `f`(`org.greenrobot.eventbus.v` v3 @kind this, `org.greenrobot.eventbus.u` v4 @kind object) @signature `Lorg/greenrobot/eventbus/v;.f:(Lorg/greenrobot/eventbus/u;)Lorg/greenrobot/eventbus/y/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3676c4.  v0:= v4.`org.greenrobot.eventbus.u.h` @type ^`org.greenrobot.eventbus.y.a` @kind object;
  #L3676c8.  if v0 == 0 then goto L3676f6;
  #L3676cc.  call temp:= `b`(v0) @signature `Lorg/greenrobot/eventbus/y/a;.b:()Lorg/greenrobot/eventbus/y/a;` @kind interface;
  #L3676d2.  v0:= temp @kind object;
  #L3676d4.  if v0 == 0 then goto L3676f6;
  #L3676d8.  v0:= v4.`org.greenrobot.eventbus.u.h` @type ^`org.greenrobot.eventbus.y.a` @kind object;
  #L3676dc.  call temp:= `b`(v0) @signature `Lorg/greenrobot/eventbus/y/a;.b:()Lorg/greenrobot/eventbus/y/a;` @kind interface;
  #L3676e2.  v0:= temp @kind object;
  #L3676e4.  v1:= v4.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L3676e8.  call temp:= `c`(v0) @signature `Lorg/greenrobot/eventbus/y/a;.c:()Ljava/lang/Class;` @kind interface;
  #L3676ee.  v2:= temp @kind object;
  #L3676f0.  if v1 != v2 then goto L3676f6;
  #L3676f4.  return v0 @kind object;
  #L3676f6.  v0:= v3.`org.greenrobot.eventbus.v.c` @type ^`java.util.List` @kind object;
  #L3676fa.  if v0 == 0 then goto L367730;
  #L3676fe.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L367704.  v0:= temp @kind object;
  #L367706.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36770c.  v1:= temp;
  #L36770e.  if v1 == 0 then goto L367730;
  #L367712.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L367718.  v1:= temp @kind object;
  #L36771a.  v1:= (`org.greenrobot.eventbus.y.b`) v1 @kind object;
  #L36771e.  v2:= v4.`org.greenrobot.eventbus.u.f` @type ^`java.lang.Class` @kind object;
  #L367722.  call temp:= `a`(v1, v2) @signature `Lorg/greenrobot/eventbus/y/b;.a:(Ljava/lang/Class;)Lorg/greenrobot/eventbus/y/a;` @kind interface;
  #L367728.  v1:= temp @kind object;
  #L36772a.  if v1 == 0 then goto L367706;
  #L36772e.  return v1 @kind object;
  #L367730.  v4:= 0I;
  #L367732.  return v4 @kind object;
}
procedure `org.greenrobot.eventbus.u` `g`(`org.greenrobot.eventbus.v` v5 @kind this) @signature `Lorg/greenrobot/eventbus/v;.g:()Lorg/greenrobot/eventbus/u;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36765c.  v0:= `@@org.greenrobot.eventbus.v.b` @type ^`org.greenrobot.eventbus.u`[] @kind object;
  #L367660.  @monitorenter v0
  #L367662.  v1:= 0I;
  #L367664.  v2:= 4I;
  #L367666.  if v1 >= v2 then goto L367686;
  #L36766a.  v2:= `@@org.greenrobot.eventbus.v.b` @type ^`org.greenrobot.eventbus.u`[] @kind object;
  #L36766e.  v3:= v2[v1] @kind object;
  #L367672.  if v3 == 0 then goto L367680;
  #L367676.  v4:= 0I;
  #L367678.  v2[v1]:= v4 @kind object;
  #L36767c.  @monitorexit v0
  #L36767e.  return v3 @kind object;
  #L367680.  v1:= v1 + 1;
  #L367684.  goto L367664;
  #L367686.  @monitorexit v0
  #L367688.  v0:= new `org.greenrobot.eventbus.u`;
  #L36768c.  call `<init>`(v0) @signature `Lorg/greenrobot/eventbus/u;.<init>:()V` @kind direct;
  #L367692.  return v0 @kind object;
  #L367694.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L367696.  @monitorexit v0
  #L367698.  goto L36769c;
  #L36769a.  throw v1;
  #L36769c.  goto L36769a;
  catch `java.lang.Throwable` @[L36766a..L367688] goto L367694;
  catch `java.lang.Throwable` @[L367696..L367698] goto L367694;
}
procedure `java.util.List` `a`(`org.greenrobot.eventbus.v` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lorg/greenrobot/eventbus/v;.a:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3674a4.  v0:= `@@org.greenrobot.eventbus.v.a` @type ^`java.util.Map` @kind object;
  #L3674a8.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3674ae.  v1:= temp @kind object;
  #L3674b0.  v1:= (`java.util.List`) v1 @kind object;
  #L3674b4.  if v1 == 0 then goto L3674ba;
  #L3674b8.  return v1 @kind object;
  #L3674ba.  v1:= v3.`org.greenrobot.eventbus.v.e` @type ^`boolean` @kind boolean;
  #L3674be.  if v1 == 0 then goto L3674cc;
  #L3674c2.  call temp:= `c`(v3, v4) @signature `Lorg/greenrobot/eventbus/v;.c:(Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L3674c8.  v1:= temp @kind object;
  #L3674ca.  goto L3674d4;
  #L3674cc.  call temp:= `b`(v3, v4) @signature `Lorg/greenrobot/eventbus/v;.b:(Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L3674d2.  v1:= temp @kind object;
  #L3674d4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3674da.  v2:= temp;
  #L3674dc.  if v2 != 0 then goto L3674e8;
  #L3674e0.  call temp:= `put`(v0, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3674e6.  return v1 @kind object;
  #L3674e8.  v0:= new `org.greenrobot.eventbus.EventBusException`;
  #L3674ec.  v1:= new `java.lang.StringBuilder`;
  #L3674f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3674f6.  v2:= "Subscriber " @kind object;
  #L3674fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367500.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367506.  v4:= " and its super classes have no public methods with the @Subscribe annotation" @kind object;
  #L36750a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367510.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L367516.  v4:= temp @kind object;
  #L367518.  call `<init>`(v0, v4) @signature `Lorg/greenrobot/eventbus/EventBusException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36751e.  throw v0;
}
