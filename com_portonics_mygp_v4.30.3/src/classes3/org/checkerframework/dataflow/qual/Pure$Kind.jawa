record `org.checkerframework.dataflow.qual.Pure$Kind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `org.checkerframework.dataflow.qual.Pure$Kind`[] `@@org.checkerframework.dataflow.qual.Pure$Kind.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `org.checkerframework.dataflow.qual.Pure$Kind` `@@org.checkerframework.dataflow.qual.Pure$Kind.DETERMINISTIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.checkerframework.dataflow.qual.Pure$Kind` `@@org.checkerframework.dataflow.qual.Pure$Kind.SIDE_EFFECT_FREE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L363b0c.  v0:= new `org.checkerframework.dataflow.qual.Pure$Kind`;
  #L363b10.  v1:= "SIDE_EFFECT_FREE" @kind object;
  #L363b14.  v2:= 0I;
  #L363b16.  call `<init>`(v0, v1, v2) @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L363b1c.  `@@org.checkerframework.dataflow.qual.Pure$Kind.SIDE_EFFECT_FREE` @type ^`org.checkerframework.dataflow.qual.Pure$Kind` := v0 @kind object;
  #L363b20.  v1:= new `org.checkerframework.dataflow.qual.Pure$Kind`;
  #L363b24.  v3:= "DETERMINISTIC" @kind object;
  #L363b28.  v4:= 1I;
  #L363b2a.  call `<init>`(v1, v3, v4) @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L363b30.  `@@org.checkerframework.dataflow.qual.Pure$Kind.DETERMINISTIC` @type ^`org.checkerframework.dataflow.qual.Pure$Kind` := v1 @kind object;
  #L363b34.  v3:= 2I;
  #L363b36.  v3:= new `org.checkerframework.dataflow.qual.Pure$Kind`[v3];
  #L363b3a.  v3[v2]:= v0 @kind object;
  #L363b3e.  v3[v4]:= v1 @kind object;
  #L363b42.  `@@org.checkerframework.dataflow.qual.Pure$Kind.$VALUES` @type ^`org.checkerframework.dataflow.qual.Pure$Kind`[] := v3 @kind object;
  #L363b46.  return @kind void;
}
procedure `void` `<init>`(`org.checkerframework.dataflow.qual.Pure$Kind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L363b58.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L363b5e.  return @kind void;
}
procedure `org.checkerframework.dataflow.qual.Pure$Kind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.valueOf:(Ljava/lang/String;)Lorg/checkerframework/dataflow/qual/Pure$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L363ac4.  v0:= constclass @type ^`org.checkerframework.dataflow.qual.Pure$Kind` @kind object;
  #L363ac8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L363ace.  v1:= temp @kind object;
  #L363ad0.  v1:= (`org.checkerframework.dataflow.qual.Pure$Kind`) v1 @kind object;
  #L363ad4.  return v1 @kind object;
}
procedure `org.checkerframework.dataflow.qual.Pure$Kind`[] `values`() @signature `Lorg/checkerframework/dataflow/qual/Pure$Kind;.values:()[Lorg/checkerframework/dataflow/qual/Pure$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L363ae8.  v0:= `@@org.checkerframework.dataflow.qual.Pure$Kind.$VALUES` @type ^`org.checkerframework.dataflow.qual.Pure$Kind`[] @kind object;
  #L363aec.  call temp:= `clone`(v0) @signature `[Lorg/checkerframework/dataflow/qual/Pure$Kind;.clone:()Ljava/lang/Object;` @kind virtual;
  #L363af2.  v0:= temp @kind object;
  #L363af4.  v0:= (`org.checkerframework.dataflow.qual.Pure$Kind`[]) v0 @kind object;
  #L363af8.  return v0 @kind object;
}
