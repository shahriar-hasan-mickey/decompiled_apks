record `org.chromium.net.RequestFinishedInfo$Listener` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.concurrent.Executor` `org.chromium.net.RequestFinishedInfo$Listener.mExecutor` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.chromium.net.RequestFinishedInfo$Listener` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lorg/chromium/net/RequestFinishedInfo$Listener;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3653bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3653c2.  if v2 == 0 then goto L3653cc;
  #L3653c6.  v1.`org.chromium.net.RequestFinishedInfo$Listener.mExecutor` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3653ca.  return @kind void;
  #L3653cc.  v2:= new `java.lang.IllegalStateException`;
  #L3653d0.  v0:= "Executor must not be null" @kind object;
  #L3653d4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3653da.  throw v2;
}
procedure `java.util.concurrent.Executor` `getExecutor`(`org.chromium.net.RequestFinishedInfo$Listener` v1 @kind this) @signature `Lorg/chromium/net/RequestFinishedInfo$Listener;.getExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3653a4.  v0:= v1.`org.chromium.net.RequestFinishedInfo$Listener.mExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L3653a8.  return v0 @kind object;
}
procedure `void` `onRequestFinished`(`org.chromium.net.RequestFinishedInfo` v0 @kind object) @signature `Lorg/chromium/net/RequestFinishedInfo$Listener;.onRequestFinished:(Lorg/chromium/net/RequestFinishedInfo;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
