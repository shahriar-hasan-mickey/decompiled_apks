record `org.chromium.net.UploadDataProviders$c` @kind class @AccessFlag FINAL extends `org.chromium.net.UploadDataProvider` @kind class {
  `java.nio.ByteBuffer` `org.chromium.net.UploadDataProviders$c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.chromium.net.UploadDataProviders$c` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lorg/chromium/net/UploadDataProviders$c;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L365530.  call `<init>`(v0) @signature `Lorg/chromium/net/UploadDataProvider;.<init>:()V` @kind direct;
  #L365536.  v0.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L36553a.  return @kind void;
}
procedure `void` `<init>`(`org.chromium.net.UploadDataProviders$c` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `org.chromium.net.UploadDataProviders$a` v2 @kind object) @signature `Lorg/chromium/net/UploadDataProviders$c;.<init>:(Ljava/nio/ByteBuffer;Lorg/chromium/net/UploadDataProviders$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L36554c.  call `<init>`(v0, v1) @signature `Lorg/chromium/net/UploadDataProviders$c;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L365552.  return @kind void;
}
procedure `long` `getLength`(`org.chromium.net.UploadDataProviders$c` v2 @kind this) @signature `Lorg/chromium/net/UploadDataProviders$c;.getLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L365510.  v0:= v2.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L365514.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L36551a.  v0:= temp;
  #L36551c.  v0:= (`long`) v0 @kind i2l;
  #L36551e.  return v0 @kind wide;
}
procedure `void` `read`(`org.chromium.net.UploadDataProviders$c` v4 @kind this, `org.chromium.net.UploadDataSink` v5 @kind object, `java.nio.ByteBuffer` v6 @kind object) @signature `Lorg/chromium/net/UploadDataProviders$c;.read:(Lorg/chromium/net/UploadDataSink;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L365564.  call temp:= `hasRemaining`(v6) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L36556a.  v0:= temp;
  #L36556c.  if v0 == 0 then goto L3655da;
  #L365570.  call temp:= `remaining`(v6) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L365576.  v0:= temp;
  #L365578.  v1:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L36557c.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L365582.  v1:= temp;
  #L365584.  if v0 < v1 then goto L365594;
  #L365588.  v0:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L36558c.  call temp:= `put`(v6, v0) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L365592.  goto L3655d0;
  #L365594.  v0:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L365598.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L36559e.  v0:= temp;
  #L3655a0.  v1:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L3655a4.  call temp:= `position`(v1) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3655aa.  v2:= temp;
  #L3655ac.  call temp:= `remaining`(v6) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3655b2.  v3:= temp;
  #L3655b4.  v2:= v2 + v3 @kind int;
  #L3655b6.  call temp:= `limit`(v1, v2) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3655bc.  v1:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L3655c0.  call temp:= `put`(v6, v1) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3655c6.  v6:= v4.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L3655ca.  call temp:= `limit`(v6, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3655d0.  v6:= 0I;
  #L3655d2.  call `onReadSucceeded`(v5, v6) @signature `Lorg/chromium/net/UploadDataSink;.onReadSucceeded:(Z)V` @kind virtual;
  #L3655d8.  return @kind void;
  #L3655da.  v5:= new `java.lang.IllegalStateException`;
  #L3655de.  v6:= "Cronet passed a buffer with no bytes remaining" @kind object;
  #L3655e2.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3655e8.  throw v5;
}
procedure `void` `rewind`(`org.chromium.net.UploadDataProviders$c` v2 @kind this, `org.chromium.net.UploadDataSink` v3 @kind object) @signature `Lorg/chromium/net/UploadDataProviders$c;.rewind:(Lorg/chromium/net/UploadDataSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3655fc.  v0:= v2.`org.chromium.net.UploadDataProviders$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L365600.  v1:= 0I;
  #L365602.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L365608.  call `onRewindSucceeded`(v3) @signature `Lorg/chromium/net/UploadDataSink;.onRewindSucceeded:()V` @kind virtual;
  #L36560e.  return @kind void;
}
