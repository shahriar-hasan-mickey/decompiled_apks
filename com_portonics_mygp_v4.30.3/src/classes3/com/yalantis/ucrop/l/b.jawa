record `com.yalantis.ucrop.l.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `float` `a`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/yalantis/ucrop/l/b;.a:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L201d50.  v0:= 2.0F;
  #L201d54.  v4:= v4 / v0 @kind float;
  #L201d56.  v1:= v1 / v4 @kind float;
  #L201d58.  v4:= 1.0F;
  #L201d5c.  v4:= fcmpg(v1, v4);
  #L201d60.  v3:= v3 / v0 @kind float;
  #L201d62.  if v4 >= 0 then goto L201d74;
  #L201d66.  v3:= v3 * v1 @kind float;
  #L201d6a.  v3:= v3 * v1 @kind float;
  #L201d6e.  v3:= v3 * v1 @kind float;
  #L201d72.  goto L201d84;
  #L201d74.  v1:= v1 - v0 @kind float;
  #L201d76.  v4:= v1 * v1 @kind float;
  #L201d7a.  v4:= v4 * v1 @kind float;
  #L201d7e.  v4:= v4 + v0 @kind float;
  #L201d80.  v3:= v3 * v4 @kind float;
  #L201d84.  v3:= v3 + v2 @kind float;
  #L201d86.  return v3;
}
procedure `float` `b`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/yalantis/ucrop/l/b;.b:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L201d98.  v1:= v1 / v4 @kind float;
  #L201d9a.  v4:= 1.0F;
  #L201d9e.  v1:= v1 - v4 @kind float;
  #L201da0.  v0:= v1 * v1 @kind float;
  #L201da4.  v0:= v0 * v1 @kind float;
  #L201da8.  v0:= v0 + v4 @kind float;
  #L201daa.  v3:= v3 * v0 @kind float;
  #L201dae.  v3:= v3 + v2 @kind float;
  #L201db0.  return v3;
}
