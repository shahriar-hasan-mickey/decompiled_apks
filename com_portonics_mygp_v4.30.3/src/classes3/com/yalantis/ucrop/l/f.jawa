record `com.yalantis.ucrop.l.f` @kind class @AccessFlag  {
  `java.nio.ByteBuffer` `com.yalantis.ucrop.l.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.yalantis.ucrop.l.f` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/yalantis/ucrop/l/f;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20232c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L202332.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L202338.  v2:= temp @kind object;
  #L20233a.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L20233e.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L202344.  v2:= temp @kind object;
  #L202346.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L20234c.  v2:= temp @kind object;
  #L20234e.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L202352.  v1.`com.yalantis.ucrop.l.f.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L202356.  return @kind void;
}
procedure `short` `a`(`com.yalantis.ucrop.l.f` v1 @kind this, `int` v2 ) @signature `Lcom/yalantis/ucrop/l/f;.a:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20230c.  v0:= v1.`com.yalantis.ucrop.l.f.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L202310.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L202316.  v2:= temp;
  #L202318.  return v2;
}
procedure `int` `b`(`com.yalantis.ucrop.l.f` v1 @kind this, `int` v2 ) @signature `Lcom/yalantis/ucrop/l/f;.b:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2022cc.  v0:= v1.`com.yalantis.ucrop.l.f.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2022d0.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L2022d6.  v2:= temp;
  #L2022d8.  return v2;
}
procedure `int` `c`(`com.yalantis.ucrop.l.f` v1 @kind this) @signature `Lcom/yalantis/ucrop/l/f;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2022ec.  v0:= v1.`com.yalantis.ucrop.l.f.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2022f0.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L2022f6.  v0:= temp;
  #L2022f8.  return v0;
}
procedure `void` `d`(`com.yalantis.ucrop.l.f` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lcom/yalantis/ucrop/l/f;.d:(Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202368.  v0:= v1.`com.yalantis.ucrop.l.f.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L20236c.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L202372.  return @kind void;
}
