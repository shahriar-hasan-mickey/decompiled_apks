record `com.yalantis.ucrop.l.h` @kind class @AccessFlag  extends `com.yalantis.ucrop.l.g` @kind interface {
  `java.io.InputStream` `com.yalantis.ucrop.l.h.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.yalantis.ucrop.l.h` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/yalantis/ucrop/l/h;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L202478.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20247e.  v0.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L202482.  return @kind void;
}
procedure `int` `a`(`com.yalantis.ucrop.l.h` v2 @kind this) @signature `Lcom/yalantis/ucrop/l/h;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L202384.  v0:= v2.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L202388.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L20238e.  v0:= temp;
  #L202390.  v0:= v0 ^< 8;
  #L202394.  v1:= 65280I;
  #L20239a.  v0:= v0 ^& v1 @kind int;
  #L20239c.  v1:= v2.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L2023a0.  call temp:= `read`(v1) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2023a6.  v1:= temp;
  #L2023a8.  v1:= v1 ^& 255;
  #L2023ac.  v0:= v0 ^| v1 @kind int;
  #L2023ae.  return v0;
}
procedure `int` `b`(`com.yalantis.ucrop.l.h` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/yalantis/ucrop/l/h;.b:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2023c0.  v0:= v5;
  #L2023c2.  if v0 <= 0 then goto L2023e0;
  #L2023c6.  v1:= v3.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L2023ca.  v2:= v5 - v0 @kind int;
  #L2023ce.  call temp:= `read`(v1, v4, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2023d4.  v1:= temp;
  #L2023d6.  v2:= -1I;
  #L2023d8.  if v1 == v2 then goto L2023e0;
  #L2023dc.  v0:= v0 - v1 @kind int;
  #L2023de.  goto L2023c2;
  #L2023e0.  v5:= v5 - v0 @kind int;
  #L2023e2.  return v5;
}
procedure `short` `c`(`com.yalantis.ucrop.l.h` v1 @kind this) @signature `Lcom/yalantis/ucrop/l/h;.c:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202454.  v0:= v1.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L202458.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L20245e.  v0:= temp;
  #L202460.  v0:= v0 ^& 255;
  #L202464.  v0:= (`short`) v0 @kind i2s;
  #L202466.  return v0;
}
procedure `long` `skip`(`com.yalantis.ucrop.l.h` v7 @kind this, `long` v8 ) @signature `Lcom/yalantis/ucrop/l/h;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2023f4.  v0:= 0L;
  #L2023f8.  v2:= lcmp(v8, v0);
  #L2023fc.  if v2 >= 0 then goto L202402;
  #L202400.  return v0 @kind wide;
  #L202402.  v2:= v8 @kind wide;
  #L202404.  v4:= lcmp(v2, v0);
  #L202408.  if v4 <= 0 then goto L20243e;
  #L20240c.  v4:= v7.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L202410.  call temp:= `skip`(v4, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L202416.  v4:= temp @kind wide;
  #L202418.  v6:= lcmp(v4, v0);
  #L20241c.  if v6 <= 0 then goto L202424;
  #L202420.  v2:= v2 - v4 @kind long;
  #L202422.  goto L202404;
  #L202424.  v4:= v7.`com.yalantis.ucrop.l.h.a` @type ^`java.io.InputStream` @kind object;
  #L202428.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L20242e.  v4:= temp;
  #L202430.  v5:= -1I;
  #L202432.  if v4 != v5 then goto L202438;
  #L202436.  goto L20243e;
  #L202438.  v4:= 1L;
  #L20243c.  goto L202420;
  #L20243e.  v8:= v8 - v2 @kind long;
  #L202440.  return v8 @kind wide;
}
