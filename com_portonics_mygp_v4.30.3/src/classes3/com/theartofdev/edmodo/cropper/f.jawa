record `com.theartofdev.edmodo.cropper.f` @kind class @AccessFlag FINAL {
  `android.graphics.RectF` `com.theartofdev.edmodo.cropper.f.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.theartofdev.edmodo.cropper.f.b` @AccessFlag PRIVATE_FINAL;
  `float` `com.theartofdev.edmodo.cropper.f.c` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.d` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.e` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.f` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.g` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.h` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.i` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.j` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.k` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.f.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.f` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1f4eb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f4ebe.  v0:= new `android.graphics.RectF`;
  #L1f4ec2.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1f4ec8.  v1.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1f4ecc.  v0:= new `android.graphics.RectF`;
  #L1f4ed0.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1f4ed6.  v1.`com.theartofdev.edmodo.cropper.f.b` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1f4eda.  v0:= 1.0F;
  #L1f4ede.  v1.`com.theartofdev.edmodo.cropper.f.k` @type ^`float` := v0;
  #L1f4ee2.  v1.`com.theartofdev.edmodo.cropper.f.l` @type ^`float` := v0;
  #L1f4ee6.  return @kind void;
}
procedure `boolean` `a`(`com.theartofdev.edmodo.cropper.f` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1f49e8.  call temp:= `s`(v1) @signature `Lcom/theartofdev/edmodo/cropper/f;.s:()Z` @kind virtual;
  #L1f49ee.  v0:= temp;
  #L1f49f0.  v0:= v0 ^~ 1;
  #L1f49f4.  return v0;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` `g`(`com.theartofdev.edmodo.cropper.f` v6 @kind this, `float` v7 , `float` v8 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.g:(FF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f4b78.  v0:= v6.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4b7c.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1f4b82.  v0:= temp;
  #L1f4b84.  v1:= 6.0F;
  #L1f4b88.  v0:= v0 / v1 @kind float;
  #L1f4b8a.  v2:= v6.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4b8e.  v3:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L1f4b92.  v4:= v3 + v0 @kind float;
  #L1f4b96.  v5:= 5.0F;
  #L1f4b9a.  v0:= v0 * v5 @kind float;
  #L1f4b9e.  v3:= v3 + v0 @kind float;
  #L1f4ba0.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1f4ba6.  v0:= temp;
  #L1f4ba8.  v0:= v0 / v1 @kind float;
  #L1f4baa.  v1:= v6.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4bae.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L1f4bb2.  v2:= v1 + v0 @kind float;
  #L1f4bb6.  v0:= v0 * v5 @kind float;
  #L1f4bba.  v1:= v1 + v0 @kind float;
  #L1f4bbc.  v0:= fcmpg(v7, v4);
  #L1f4bc0.  if v0 >= 0 then goto L1f4be6;
  #L1f4bc4.  v7:= fcmpg(v8, v2);
  #L1f4bc8.  if v7 >= 0 then goto L1f4bd2;
  #L1f4bcc.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4bd0.  goto L1f4c30;
  #L1f4bd2.  v7:= fcmpg(v8, v1);
  #L1f4bd6.  if v7 >= 0 then goto L1f4be0;
  #L1f4bda.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4bde.  goto L1f4c30;
  #L1f4be0.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4be4.  goto L1f4c30;
  #L1f4be6.  v7:= fcmpg(v7, v3);
  #L1f4bea.  if v7 >= 0 then goto L1f4c10;
  #L1f4bee.  v7:= fcmpg(v8, v2);
  #L1f4bf2.  if v7 >= 0 then goto L1f4bfc;
  #L1f4bf6.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4bfa.  goto L1f4c30;
  #L1f4bfc.  v7:= fcmpg(v8, v1);
  #L1f4c00.  if v7 >= 0 then goto L1f4c0a;
  #L1f4c04.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c08.  goto L1f4c30;
  #L1f4c0a.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c0e.  goto L1f4c30;
  #L1f4c10.  v7:= fcmpg(v8, v2);
  #L1f4c14.  if v7 >= 0 then goto L1f4c1e;
  #L1f4c18.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c1c.  goto L1f4c30;
  #L1f4c1e.  v7:= fcmpg(v8, v1);
  #L1f4c22.  if v7 >= 0 then goto L1f4c2c;
  #L1f4c26.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c2a.  goto L1f4c30;
  #L1f4c2c.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c30.  return v7 @kind object;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` `i`(`com.theartofdev.edmodo.cropper.f` v7 @kind this, `float` v8 , `float` v9 , `float` v10 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.i:(FFF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f4c44.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4c48.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4c4c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4c50.  call temp:= `m`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/f;.m:(FFFFF)Z` @kind static;
  #L1f4c56.  v0:= temp;
  #L1f4c58.  if v0 == 0 then goto L1f4c64;
  #L1f4c5c.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c60.  goto L1f4dd4;
  #L1f4c64.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4c68.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4c6c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4c70.  call temp:= `m`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/f;.m:(FFFFF)Z` @kind static;
  #L1f4c76.  v0:= temp;
  #L1f4c78.  if v0 == 0 then goto L1f4c84;
  #L1f4c7c.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4c80.  goto L1f4dd4;
  #L1f4c84.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4c88.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4c8c.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4c90.  call temp:= `m`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/f;.m:(FFFFF)Z` @kind static;
  #L1f4c96.  v0:= temp;
  #L1f4c98.  if v0 == 0 then goto L1f4ca4;
  #L1f4c9c.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4ca0.  goto L1f4dd4;
  #L1f4ca4.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4ca8.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4cac.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4cb0.  call temp:= `m`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/f;.m:(FFFFF)Z` @kind static;
  #L1f4cb6.  v0:= temp;
  #L1f4cb8.  if v0 == 0 then goto L1f4cc4;
  #L1f4cbc.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4cc0.  goto L1f4dd4;
  #L1f4cc4.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4cc8.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4ccc.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4cd0.  v5:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4cd4.  v6:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4cd8.  v1:= v8;
  #L1f4cda.  v2:= v9;
  #L1f4cdc.  call temp:= `l`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/f;.l:(FFFFFF)Z` @kind static;
  #L1f4ce2.  v0:= temp;
  #L1f4ce4.  if v0 == 0 then goto L1f4cfc;
  #L1f4ce8.  call temp:= `a`(v7) @signature `Lcom/theartofdev/edmodo/cropper/f;.a:()Z` @kind direct;
  #L1f4cee.  v0:= temp;
  #L1f4cf0.  if v0 == 0 then goto L1f4cfc;
  #L1f4cf4.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4cf8.  goto L1f4dd4;
  #L1f4cfc.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4d00.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4d04.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4d08.  v5:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4d0c.  v1:= v8;
  #L1f4d0e.  v2:= v9;
  #L1f4d10.  v6:= v10;
  #L1f4d12.  call temp:= `n`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/f;.n:(FFFFFF)Z` @kind static;
  #L1f4d18.  v0:= temp;
  #L1f4d1a.  if v0 == 0 then goto L1f4d24;
  #L1f4d1e.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4d22.  goto L1f4dd4;
  #L1f4d24.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4d28.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4d2c.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4d30.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4d34.  v1:= v8;
  #L1f4d36.  v2:= v9;
  #L1f4d38.  v6:= v10;
  #L1f4d3a.  call temp:= `n`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/f;.n:(FFFFFF)Z` @kind static;
  #L1f4d40.  v0:= temp;
  #L1f4d42.  if v0 == 0 then goto L1f4d4c;
  #L1f4d46.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4d4a.  goto L1f4dd4;
  #L1f4d4c.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4d50.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1f4d54.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4d58.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4d5c.  v1:= v8;
  #L1f4d5e.  v2:= v9;
  #L1f4d60.  v6:= v10;
  #L1f4d62.  call temp:= `o`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/f;.o:(FFFFFF)Z` @kind static;
  #L1f4d68.  v0:= temp;
  #L1f4d6a.  if v0 == 0 then goto L1f4d74;
  #L1f4d6e.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4d72.  goto L1f4dd4;
  #L1f4d74.  v0:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4d78.  v3:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1f4d7c.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1f4d80.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4d84.  v1:= v8;
  #L1f4d86.  v2:= v9;
  #L1f4d88.  v6:= v10;
  #L1f4d8a.  call temp:= `o`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/f;.o:(FFFFFF)Z` @kind static;
  #L1f4d90.  v10:= temp;
  #L1f4d92.  if v10 == 0 then goto L1f4d9c;
  #L1f4d96.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4d9a.  goto L1f4dd4;
  #L1f4d9c.  v10:= v7.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4da0.  v2:= v10.`android.graphics.RectF.left` @type ^`float`;
  #L1f4da4.  v3:= v10.`android.graphics.RectF.top` @type ^`float`;
  #L1f4da8.  v4:= v10.`android.graphics.RectF.right` @type ^`float`;
  #L1f4dac.  v5:= v10.`android.graphics.RectF.bottom` @type ^`float`;
  #L1f4db0.  v0:= v8;
  #L1f4db2.  v1:= v9;
  #L1f4db4.  call temp:= `l`(v0, v1, v2, v3, v4, v5) @signature `Lcom/theartofdev/edmodo/cropper/f;.l:(FFFFFF)Z` @kind static;
  #L1f4dba.  v8:= temp;
  #L1f4dbc.  if v8 == 0 then goto L1f4dd2;
  #L1f4dc0.  call temp:= `a`(v7) @signature `Lcom/theartofdev/edmodo/cropper/f;.a:()Z` @kind direct;
  #L1f4dc6.  v8:= temp;
  #L1f4dc8.  if v8 != 0 then goto L1f4dd2;
  #L1f4dcc.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L1f4dd0.  goto L1f4dd4;
  #L1f4dd2.  v8:= 0I;
  #L1f4dd4.  return v8 @kind object;
}
procedure `boolean` `l`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.l:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f4a08.  v2:= fcmpl(v0, v2);
  #L1f4a0c.  if v2 <= 0 then goto L1f4a2c;
  #L1f4a10.  v0:= fcmpg(v0, v4);
  #L1f4a14.  if v0 >= 0 then goto L1f4a2c;
  #L1f4a18.  v0:= fcmpl(v1, v3);
  #L1f4a1c.  if v0 <= 0 then goto L1f4a2c;
  #L1f4a20.  v0:= fcmpg(v1, v5);
  #L1f4a24.  if v0 >= 0 then goto L1f4a2c;
  #L1f4a28.  v0:= 1I;
  #L1f4a2a.  goto L1f4a2e;
  #L1f4a2c.  v0:= 0I;
  #L1f4a2e.  return v0;
}
procedure `boolean` `m`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.m:(FFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f4a40.  v0:= v0 - v2 @kind float;
  #L1f4a42.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1f4a48.  v0:= temp;
  #L1f4a4a.  v0:= fcmpg(v0, v4);
  #L1f4a4e.  if v0 > 0 then goto L1f4a68;
  #L1f4a52.  v1:= v1 - v3 @kind float;
  #L1f4a54.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1f4a5a.  v0:= temp;
  #L1f4a5c.  v0:= fcmpg(v0, v4);
  #L1f4a60.  if v0 > 0 then goto L1f4a68;
  #L1f4a64.  v0:= 1I;
  #L1f4a66.  goto L1f4a6a;
  #L1f4a68.  v0:= 0I;
  #L1f4a6a.  return v0;
}
procedure `boolean` `n`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.n:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f4a7c.  v2:= fcmpl(v0, v2);
  #L1f4a80.  if v2 <= 0 then goto L1f4aa2;
  #L1f4a84.  v0:= fcmpg(v0, v3);
  #L1f4a88.  if v0 >= 0 then goto L1f4aa2;
  #L1f4a8c.  v1:= v1 - v4 @kind float;
  #L1f4a8e.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1f4a94.  v0:= temp;
  #L1f4a96.  v0:= fcmpg(v0, v5);
  #L1f4a9a.  if v0 > 0 then goto L1f4aa2;
  #L1f4a9e.  v0:= 1I;
  #L1f4aa0.  goto L1f4aa4;
  #L1f4aa2.  v0:= 0I;
  #L1f4aa4.  return v0;
}
procedure `boolean` `o`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.o:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f4ab8.  v0:= v0 - v2 @kind float;
  #L1f4aba.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1f4ac0.  v0:= temp;
  #L1f4ac2.  v0:= fcmpg(v0, v5);
  #L1f4ac6.  if v0 > 0 then goto L1f4ade;
  #L1f4aca.  v0:= fcmpl(v1, v3);
  #L1f4ace.  if v0 <= 0 then goto L1f4ade;
  #L1f4ad2.  v0:= fcmpg(v1, v4);
  #L1f4ad6.  if v0 >= 0 then goto L1f4ade;
  #L1f4ada.  v0:= 1I;
  #L1f4adc.  goto L1f4ae0;
  #L1f4ade.  v0:= 0I;
  #L1f4ae0.  return v0;
}
procedure `float` `b`(`com.theartofdev.edmodo.cropper.f` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4de8.  v0:= v3.`com.theartofdev.edmodo.cropper.f.f` @type ^`float`;
  #L1f4dec.  v1:= v3.`com.theartofdev.edmodo.cropper.f.j` @type ^`float`;
  #L1f4df0.  v2:= v3.`com.theartofdev.edmodo.cropper.f.l` @type ^`float`;
  #L1f4df4.  v1:= v1 / v2 @kind float;
  #L1f4df6.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1f4dfc.  v0:= temp;
  #L1f4dfe.  return v0;
}
procedure `float` `c`(`com.theartofdev.edmodo.cropper.f` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.c:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4e10.  v0:= v3.`com.theartofdev.edmodo.cropper.f.e` @type ^`float`;
  #L1f4e14.  v1:= v3.`com.theartofdev.edmodo.cropper.f.i` @type ^`float`;
  #L1f4e18.  v2:= v3.`com.theartofdev.edmodo.cropper.f.k` @type ^`float`;
  #L1f4e1c.  v1:= v1 / v2 @kind float;
  #L1f4e1e.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1f4e24.  v0:= temp;
  #L1f4e26.  return v0;
}
procedure `float` `d`(`com.theartofdev.edmodo.cropper.f` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.d:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4e38.  v0:= v3.`com.theartofdev.edmodo.cropper.f.d` @type ^`float`;
  #L1f4e3c.  v1:= v3.`com.theartofdev.edmodo.cropper.f.h` @type ^`float`;
  #L1f4e40.  v2:= v3.`com.theartofdev.edmodo.cropper.f.l` @type ^`float`;
  #L1f4e44.  v1:= v1 / v2 @kind float;
  #L1f4e46.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1f4e4c.  v0:= temp;
  #L1f4e4e.  return v0;
}
procedure `float` `e`(`com.theartofdev.edmodo.cropper.f` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4e60.  v0:= v3.`com.theartofdev.edmodo.cropper.f.c` @type ^`float`;
  #L1f4e64.  v1:= v3.`com.theartofdev.edmodo.cropper.f.g` @type ^`float`;
  #L1f4e68.  v2:= v3.`com.theartofdev.edmodo.cropper.f.k` @type ^`float`;
  #L1f4e6c.  v1:= v1 / v2 @kind float;
  #L1f4e6e.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1f4e74.  v0:= temp;
  #L1f4e76.  return v0;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler` `f`(`com.theartofdev.edmodo.cropper.f` v1 @kind this, `float` v2 , `float` v3 , `float` v4 , `com.theartofdev.edmodo.cropper.CropImageView$CropShape` v5 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/f;.f:(FFFLcom/theartofdev/edmodo/cropper/CropImageView$CropShape;)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4b38.  v0:= `@@com.theartofdev.edmodo.cropper.CropImageView$CropShape.OVAL` @type ^`com.theartofdev.edmodo.cropper.CropImageView$CropShape` @kind object;
  #L1f4b3c.  if v5 != v0 then goto L1f4b4a;
  #L1f4b40.  call temp:= `g`(v1, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/f;.g:(FF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @kind direct;
  #L1f4b46.  v4:= temp @kind object;
  #L1f4b48.  goto L1f4b52;
  #L1f4b4a.  call temp:= `i`(v1, v2, v3, v4) @signature `Lcom/theartofdev/edmodo/cropper/f;.i:(FFF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @kind direct;
  #L1f4b50.  v4:= temp @kind object;
  #L1f4b52.  if v4 == 0 then goto L1f4b62;
  #L1f4b56.  v5:= new `com.theartofdev.edmodo.cropper.CropWindowMoveHandler`;
  #L1f4b5a.  call `<init>`(v5, v4, v1, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.<init>:(Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;Lcom/theartofdev/edmodo/cropper/f;FF)V` @kind direct;
  #L1f4b60.  goto L1f4b64;
  #L1f4b62.  v5:= 0I;
  #L1f4b64.  return v5 @kind object;
}
procedure `android.graphics.RectF` `h`(`com.theartofdev.edmodo.cropper.f` v2 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.h:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f49c4.  v0:= v2.`com.theartofdev.edmodo.cropper.f.b` @type ^`android.graphics.RectF` @kind object;
  #L1f49c8.  v1:= v2.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f49cc.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L1f49d2.  v0:= v2.`com.theartofdev.edmodo.cropper.f.b` @type ^`android.graphics.RectF` @kind object;
  #L1f49d6.  return v0 @kind object;
}
procedure `float` `j`(`com.theartofdev.edmodo.cropper.f` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.j:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4e88.  v0:= v1.`com.theartofdev.edmodo.cropper.f.l` @type ^`float`;
  #L1f4e8c.  return v0;
}
procedure `float` `k`(`com.theartofdev.edmodo.cropper.f` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.k:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4ea0.  v0:= v1.`com.theartofdev.edmodo.cropper.f.k` @type ^`float`;
  #L1f4ea4.  return v0;
}
procedure `void` `p`(`com.theartofdev.edmodo.cropper.f` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/f;.p:(FFFF)V` @AccessFlag PUBLIC {
    temp;

  #L1f4ef8.  v0.`com.theartofdev.edmodo.cropper.f.e` @type ^`float` := v1;
  #L1f4efc.  v0.`com.theartofdev.edmodo.cropper.f.f` @type ^`float` := v2;
  #L1f4f00.  v0.`com.theartofdev.edmodo.cropper.f.k` @type ^`float` := v3;
  #L1f4f04.  v0.`com.theartofdev.edmodo.cropper.f.l` @type ^`float` := v4;
  #L1f4f08.  return @kind void;
}
procedure `void` `q`(`com.theartofdev.edmodo.cropper.f` v1 @kind this, `com.theartofdev.edmodo.cropper.CropImageOptions` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/f;.q:(Lcom/theartofdev/edmodo/cropper/CropImageOptions;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4f1c.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.y` @type ^`int`;
  #L1f4f20.  v0:= (`float`) v0 @kind i2f;
  #L1f4f22.  v1.`com.theartofdev.edmodo.cropper.f.c` @type ^`float` := v0;
  #L1f4f26.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.z` @type ^`int`;
  #L1f4f2a.  v0:= (`float`) v0 @kind i2f;
  #L1f4f2c.  v1.`com.theartofdev.edmodo.cropper.f.d` @type ^`float` := v0;
  #L1f4f30.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.A` @type ^`int`;
  #L1f4f34.  v0:= (`float`) v0 @kind i2f;
  #L1f4f36.  v1.`com.theartofdev.edmodo.cropper.f.g` @type ^`float` := v0;
  #L1f4f3a.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.B` @type ^`int`;
  #L1f4f3e.  v0:= (`float`) v0 @kind i2f;
  #L1f4f40.  v1.`com.theartofdev.edmodo.cropper.f.h` @type ^`float` := v0;
  #L1f4f44.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.C` @type ^`int`;
  #L1f4f48.  v0:= (`float`) v0 @kind i2f;
  #L1f4f4a.  v1.`com.theartofdev.edmodo.cropper.f.i` @type ^`float` := v0;
  #L1f4f4e.  v2:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.D` @type ^`int`;
  #L1f4f52.  v2:= (`float`) v2 @kind i2f;
  #L1f4f54.  v1.`com.theartofdev.edmodo.cropper.f.j` @type ^`float` := v2;
  #L1f4f58.  return @kind void;
}
procedure `void` `r`(`com.theartofdev.edmodo.cropper.f` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/f;.r:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4f6c.  v0:= v1.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4f70.  call `set`(v0, v2) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L1f4f76.  return @kind void;
}
procedure `boolean` `s`(`com.theartofdev.edmodo.cropper.f` v2 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/f;.s:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f4af4.  v0:= v2.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4af8.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1f4afe.  v0:= temp;
  #L1f4b00.  v1:= 100.0F;
  #L1f4b04.  v0:= fcmpg(v0, v1);
  #L1f4b08.  if v0 < 0 then goto L1f4b24;
  #L1f4b0c.  v0:= v2.`com.theartofdev.edmodo.cropper.f.a` @type ^`android.graphics.RectF` @kind object;
  #L1f4b10.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1f4b16.  v0:= temp;
  #L1f4b18.  v0:= fcmpg(v0, v1);
  #L1f4b1c.  if v0 < 0 then goto L1f4b24;
  #L1f4b20.  v0:= 1I;
  #L1f4b22.  goto L1f4b26;
  #L1f4b24.  v0:= 0I;
  #L1f4b26.  return v0;
}
