record `com.theartofdev.edmodo.cropper.c` @kind class @AccessFlag ABSTRACT {
}
global `android.graphics.Rect` `@@com.theartofdev.edmodo.cropper.c.a` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.theartofdev.edmodo.cropper.c.b` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.theartofdev.edmodo.cropper.c.c` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.theartofdev.edmodo.cropper.c.d` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.theartofdev.edmodo.cropper.c.e` @AccessFlag STATIC_FINAL;
global `int` `@@com.theartofdev.edmodo.cropper.c.f` @AccessFlag PRIVATE_STATIC;
global `android.util.Pair` `@@com.theartofdev.edmodo.cropper.c.g` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/theartofdev/edmodo/cropper/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1effb8.  v0:= new `android.graphics.Rect`;
  #L1effbc.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1effc2.  `@@com.theartofdev.edmodo.cropper.c.a` @type ^`android.graphics.Rect` := v0 @kind object;
  #L1effc6.  v0:= new `android.graphics.RectF`;
  #L1effca.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1effd0.  `@@com.theartofdev.edmodo.cropper.c.b` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1effd4.  v0:= new `android.graphics.RectF`;
  #L1effd8.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1effde.  `@@com.theartofdev.edmodo.cropper.c.c` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1effe2.  v0:= 6I;
  #L1effe4.  v1:= new `float`[v0];
  #L1effe8.  `@@com.theartofdev.edmodo.cropper.c.d` @type ^`float`[] := v1 @kind object;
  #L1effec.  v0:= new `float`[v0];
  #L1efff0.  `@@com.theartofdev.edmodo.cropper.c.e` @type ^`float`[] := v0 @kind object;
  #L1efff4.  return @kind void;
}
procedure `com.theartofdev.edmodo.cropper.c$b` `A`(`android.graphics.Bitmap` v1 @kind object, `android.content.Context` v2 @kind object, `android.net.Uri` v3 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.A:(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/theartofdev/edmodo/cropper/c$b;` @AccessFlag STATIC {
    temp;
    v0;

  #L1efc0c.  v0:= 0I;
  #L1efc0e.  call temp:= `getContentResolver`(v2) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1efc14.  v2:= temp @kind object;
  #L1efc16.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L1efc1c.  v2:= temp @kind object;
  #L1efc1e.  if v2 == 0 then goto L1efc38;
  #L1efc22.  v3:= new `e.k.a.g`;
  #L1efc26.  call `<init>`(v3, v2) @signature `Le/k/a/g;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1efc2c.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L1efc32.  v0:= v3 @kind object;
  #L1efc34.  goto L1efc38;
  #L1efc36.  
  #L1efc38.  if v0 == 0 then goto L1efc46;
  #L1efc3c.  call temp:= `B`(v1, v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.B:(Landroid/graphics/Bitmap;Le/k/a/g;)Lcom/theartofdev/edmodo/cropper/c$b;` @kind static;
  #L1efc42.  v1:= temp @kind object;
  #L1efc44.  goto L1efc54;
  #L1efc46.  v2:= new `com.theartofdev.edmodo.cropper.c$b`;
  #L1efc4a.  v3:= 0I;
  #L1efc4c.  call `<init>`(v2, v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/c$b;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1efc52.  v1:= v2 @kind object;
  #L1efc54.  return v1 @kind object;
  catch `java.lang.Exception` @[L1efc0e..L1efc2c] goto L1efc36;
  catch `java.lang.Exception` @[L1efc2c..L1efc32] goto L1efc32;
}
procedure `com.theartofdev.edmodo.cropper.c$b` `B`(`android.graphics.Bitmap` v2 @kind object, `e.k.a.g` v3 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.B:(Landroid/graphics/Bitmap;Le/k/a/g;)Lcom/theartofdev/edmodo/cropper/c$b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1efc84.  v0:= "Orientation" @kind object;
  #L1efc88.  v1:= 1I;
  #L1efc8a.  call temp:= `k`(v3, v0, v1) @signature `Le/k/a/g;.k:(Ljava/lang/String;I)I` @kind virtual;
  #L1efc90.  v3:= temp;
  #L1efc92.  v0:= 3I;
  #L1efc94.  if v3 == v0 then goto L1efcb6;
  #L1efc98.  v0:= 6I;
  #L1efc9a.  if v3 == v0 then goto L1efcb0;
  #L1efc9e.  v0:= 8I;
  #L1efca2.  if v3 == v0 then goto L1efcaa;
  #L1efca6.  v3:= 0I;
  #L1efca8.  goto L1efcba;
  #L1efcaa.  v3:= 270I;
  #L1efcae.  goto L1efcba;
  #L1efcb0.  v3:= 90I;
  #L1efcb4.  goto L1efcba;
  #L1efcb6.  v3:= 180I;
  #L1efcba.  v0:= new `com.theartofdev.edmodo.cropper.c$b`;
  #L1efcbe.  call `<init>`(v0, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/c$b;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1efcc4.  return v0 @kind object;
}
procedure `void` `C`(`android.content.Context` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.Bitmap$CompressFormat` v4 @kind object, `int` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.C:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L1f00ac.  v0:= 0I;
  #L1f00ae.  call temp:= `getContentResolver`(v1) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1f00b4.  v1:= temp @kind object;
  #L1f00b6.  call temp:= `openOutputStream`(v1, v3) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L1f00bc.  v0:= temp @kind object;
  #L1f00be.  call temp:= `compress`(v2, v4, v5, v0) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L1f00c4.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1f00ca.  return @kind void;
  #L1f00cc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f00ce.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1f00d4.  throw v1;
  catch `java.lang.Throwable` @[L1f00ae..L1f00c4] goto L1f00cc;
}
procedure `android.net.Uri` `D`(`android.content.Context` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `android.net.Uri` v5 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.D:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;)Landroid/net/Uri;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ef598.  v0:= 1I;
  #L1ef59a.  if v5 != 0 then goto L1ef5c0;
  #L1ef59e.  v5:= "aic_state_store_temp" @kind object;
  #L1ef5a2.  v1:= ".jpg" @kind object;
  #L1ef5a6.  call temp:= `getCacheDir`(v3) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L1ef5ac.  v2:= temp @kind object;
  #L1ef5ae.  call temp:= `createTempFile`(v5, v1, v2) @signature `Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;` @kind static;
  #L1ef5b4.  v5:= temp @kind object;
  #L1ef5b6.  call temp:= `fromFile`(v5) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L1ef5bc.  v5:= temp @kind object;
  #L1ef5be.  goto L1ef5e0;
  #L1ef5c0.  v1:= new `java.io.File`;
  #L1ef5c4.  call temp:= `getPath`(v5) @signature `Landroid/net/Uri;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1ef5ca.  v2:= temp @kind object;
  #L1ef5cc.  call `<init>`(v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ef5d2.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L1ef5d8.  v1:= temp;
  #L1ef5da.  if v1 == 0 then goto L1ef5e0;
  #L1ef5de.  v0:= 0I;
  #L1ef5e0.  if v0 == 0 then goto L1ef5f2;
  #L1ef5e4.  v0:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L1ef5e8.  v1:= 95I;
  #L1ef5ec.  call `C`(v3, v4, v5, v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.C:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @kind static;
  #L1ef5f2.  return v5 @kind object;
  #L1ef5f4.  v3:= 0I;
  #L1ef5f6.  return v3 @kind object;
  catch `java.lang.Exception` @[L1ef59e..L1ef5f2] goto L1ef5f4;
}
procedure `int` `a`(`int` v3 , `int` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1efe88.  v0:= `@@com.theartofdev.edmodo.cropper.c.f` @type ^`int`;
  #L1efe8c.  if v0 != 0 then goto L1efe9c;
  #L1efe90.  call temp:= `o`() @signature `Lcom/theartofdev/edmodo/cropper/c;.o:()I` @kind static;
  #L1efe96.  v0:= temp;
  #L1efe98.  `@@com.theartofdev.edmodo.cropper.c.f` @type ^`int` := v0;
  #L1efe9c.  v0:= `@@com.theartofdev.edmodo.cropper.c.f` @type ^`int`;
  #L1efea0.  v1:= 1I;
  #L1efea2.  if v0 <= 0 then goto L1efec0;
  #L1efea6.  v0:= v4 / v1 @kind int;
  #L1efeaa.  v2:= `@@com.theartofdev.edmodo.cropper.c.f` @type ^`int`;
  #L1efeae.  if v0 > v2 then goto L1efeba;
  #L1efeb2.  v0:= v3 / v1 @kind int;
  #L1efeb6.  if v0 <= v2 then goto L1efec0;
  #L1efeba.  v1:= v1 * 2;
  #L1efebe.  goto L1efea6;
  #L1efec0.  return v1;
}
procedure `int` `b`(`int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.b:(IIII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1efed4.  v0:= 1I;
  #L1efed6.  if v3 > v5 then goto L1efede;
  #L1efeda.  if v2 <= v4 then goto L1efef8;
  #L1efede.  v1:= v3 / 2;
  #L1efee2.  v1:= v1 / v0 @kind int;
  #L1efee4.  if v1 <= v5 then goto L1efef8;
  #L1efee8.  v1:= v2 / 2;
  #L1efeec.  v1:= v1 / v0 @kind int;
  #L1efeee.  if v1 <= v4 then goto L1efef8;
  #L1efef2.  v0:= v0 * 2;
  #L1efef6.  goto L1efede;
  #L1efef8.  return v0;
}
procedure `void` `c`(`java.io.Closeable` v0 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f0008.  if v0 == 0 then goto L1f0012;
  #L1f000c.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L1f0012.  return @kind void;
  catch `java.io.IOException` @[L1f000c..L1f0012] goto L1f0012;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `d`(`android.content.Context` v16 @kind object, `android.net.Uri` v17 @kind object, `float`[] v18 @kind object, `int` v19 , `int` v20 , `int` v21 , `boolean` v22 , `int` v23 , `int` v24 , `int` v25 , `int` v26 , `boolean` v27 , `boolean` v28 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.d:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZ)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1ef768.  v0:= 1I;
  #L1ef76a.  v15:= 1I;
  #L1ef76c.  v1:= v16 @kind object;
  #L1ef770.  v2:= v17 @kind object;
  #L1ef774.  v3:= v18 @kind object;
  #L1ef778.  v4:= v19;
  #L1ef77c.  v5:= v20;
  #L1ef780.  v6:= v21;
  #L1ef784.  v7:= v22;
  #L1ef788.  v8:= v23;
  #L1ef78c.  v9:= v24;
  #L1ef790.  v10:= v25;
  #L1ef794.  v11:= v26;
  #L1ef798.  v12:= v27;
  #L1ef79c.  v13:= v28;
  #L1ef7a0.  v14:= v15;
  #L1ef7a2.  call temp:= `e`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/c;.e:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/theartofdev/edmodo/cropper/c$a;` @kind static;
  #L1ef7a8.  v0:= temp @kind object;
  #L1ef7aa.  return v0 @kind object;
  #L1ef7ac.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1ef7ae.  v1:= v0 @kind object;
  #L1ef7b0.  v15:= v15 * 2;
  #L1ef7b4.  v0:= 16I;
  #L1ef7b8.  if v15 > v0 then goto L1ef7be;
  #L1ef7bc.  goto L1ef76c;
  #L1ef7be.  v0:= new `java.lang.RuntimeException`;
  #L1ef7c2.  v2:= new `java.lang.StringBuilder`;
  #L1ef7c6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ef7cc.  v3:= "Failed to handle OOM by sampling (" @kind object;
  #L1ef7d0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef7d6.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef7dc.  v3:= "): " @kind object;
  #L1ef7e0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef7e6.  v3:= v17 @kind object;
  #L1ef7ea.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef7f0.  v3:= "\r\n" @kind object;
  #L1ef7f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef7fa.  call temp:= `getMessage`(v1) @signature `Ljava/lang/OutOfMemoryError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1ef800.  v3:= temp @kind object;
  #L1ef802.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef808.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ef80e.  v2:= temp @kind object;
  #L1ef810.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ef816.  goto L1ef81a;
  #L1ef818.  throw v0;
  #L1ef81a.  goto L1ef818;
  catch `java.lang.OutOfMemoryError` @[L1ef7a2..L1ef7aa] goto L1ef7ac;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `e`(`android.content.Context` v14 @kind object, `android.net.Uri` v15 @kind object, `float`[] v16 @kind object, `int` v17 , `int` v18 , `int` v19 , `boolean` v20 , `int` v21 , `int` v22 , `int` v23 , `int` v24 , `boolean` v25 , `boolean` v26 , `int` v27 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.e:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1ef83c.  v0:= v17;
  #L1ef840.  v1:= v16 @kind object;
  #L1ef844.  v2:= v18;
  #L1ef848.  v3:= v19;
  #L1ef84c.  v4:= v20;
  #L1ef850.  v5:= v21;
  #L1ef854.  v6:= v22;
  #L1ef858.  call temp:= `s`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/c;.s:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L1ef85e.  v9:= temp @kind object;
  #L1ef860.  if v23 <= 0 then goto L1ef86a;
  #L1ef864.  v10:= v23;
  #L1ef868.  goto L1ef874;
  #L1ef86a.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1ef870.  v1:= temp;
  #L1ef872.  v10:= v1;
  #L1ef874.  if v24 <= 0 then goto L1ef87e;
  #L1ef878.  v11:= v24;
  #L1ef87c.  goto L1ef888;
  #L1ef87e.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1ef884.  v1:= temp;
  #L1ef886.  v11:= v1;
  #L1ef888.  v1:= 0I;
  #L1ef88a.  v8:= 1I;
  #L1ef88c.  v2:= v14 @kind object;
  #L1ef88e.  v3:= v15 @kind object;
  #L1ef890.  v4:= v9 @kind object;
  #L1ef892.  v5:= v10;
  #L1ef894.  v6:= v11;
  #L1ef896.  v7:= v27;
  #L1ef89a.  call temp:= `m`(v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/c;.m:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/theartofdev/edmodo/cropper/c$a;` @kind static;
  #L1ef8a0.  v2:= temp @kind object;
  #L1ef8a2.  v1:= v2.`com.theartofdev.edmodo.cropper.c$a.a` @type ^`android.graphics.Bitmap` @kind object;
  #L1ef8a6.  v8:= v2.`com.theartofdev.edmodo.cropper.c$a.b` @type ^`int`;
  #L1ef8aa.  goto L1ef8ae;
  #L1ef8ac.  
  #L1ef8ae.  if v1 == 0 then goto L1ef90a;
  #L1ef8b2.  v12:= v25;
  #L1ef8b6.  v13:= v26;
  #L1ef8ba.  call temp:= `z`(v1, v0, v12, v13) @signature `Lcom/theartofdev/edmodo/cropper/c;.z:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @kind static;
  #L1ef8c0.  v10:= temp @kind object;
  #L1ef8c2.  v1:= v0 %% 90;
  #L1ef8c6.  if v1 == 0 then goto L1ef8ea;
  #L1ef8ca.  v1:= v10 @kind object;
  #L1ef8cc.  v2:= v16 @kind object;
  #L1ef8d0.  v3:= v9 @kind object;
  #L1ef8d2.  v4:= v17;
  #L1ef8d6.  v5:= v20;
  #L1ef8da.  v6:= v21;
  #L1ef8de.  v7:= v22;
  #L1ef8e2.  call temp:= `i`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/c;.i:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L1ef8e8.  v10:= temp @kind object;
  #L1ef8ea.  v0:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1ef8ee.  call `<init>`(v0, v10, v8) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1ef8f4.  return v0 @kind object;
  #L1ef8f6.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1ef8f8.  v1:= v10 @kind object;
  #L1ef8fa.  goto L1ef8fe;
  #L1ef8fc.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1ef8fe.  if v1 == 0 then goto L1ef908;
  #L1ef902.  call `recycle`(v1) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef908.  throw v0;
  #L1ef90a.  v12:= v25;
  #L1ef90e.  v13:= v26;
  #L1ef912.  v1:= v14 @kind object;
  #L1ef914.  v2:= v15 @kind object;
  #L1ef916.  v3:= v16 @kind object;
  #L1ef91a.  v4:= v17;
  #L1ef91e.  v5:= v20;
  #L1ef922.  v6:= v21;
  #L1ef926.  v7:= v22;
  #L1ef92a.  v8:= v27;
  #L1ef92e.  call temp:= `f`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/theartofdev/edmodo/cropper/c;.f:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/theartofdev/edmodo/cropper/c$a;` @kind static;
  #L1ef934.  v0:= temp @kind object;
  #L1ef936.  return v0 @kind object;
  catch `java.lang.Exception` @[L1ef89a..L1ef8aa] goto L1ef8ac;
  catch `java.lang.OutOfMemoryError` @[L1ef8ba..L1ef8c2] goto L1ef8fc;
  catch `java.lang.OutOfMemoryError` @[L1ef8c2..L1ef8ea] goto L1ef8f6;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `f`(`android.content.Context` v15 @kind object, `android.net.Uri` v16 @kind object, `float`[] v17 @kind object, `int` v18 , `boolean` v19 , `int` v20 , `int` v21 , `int` v22 , `android.graphics.Rect` v23 @kind object, `int` v24 , `int` v25 , `boolean` v26 , `boolean` v27 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.f:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L1ef618.  v1:= v16 @kind object;
  #L1ef61c.  v0:= v17 @kind object;
  #L1ef620.  v2:= 0I;
  #L1ef622.  v3:= new `android.graphics.BitmapFactory$Options`;
  #L1ef626.  call `<init>`(v3) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L1ef62c.  call temp:= `width`(v23) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1ef632.  v4:= temp;
  #L1ef634.  call temp:= `height`(v23) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1ef63a.  v5:= temp;
  #L1ef63c.  v6:= v24;
  #L1ef640.  v7:= v25;
  #L1ef644.  call temp:= `b`(v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/c;.b:(IIII)I` @kind static;
  #L1ef64a.  v4:= temp;
  #L1ef64c.  v4:= v4 * v22 @kind int;
  #L1ef650.  v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v4;
  #L1ef654.  call temp:= `getContentResolver`(v15) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1ef65a.  v5:= temp @kind object;
  #L1ef65c.  call temp:= `j`(v5, v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/c;.j:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L1ef662.  v5:= temp @kind object;
  #L1ef664.  if v5 == 0 then goto L1ef6ce;
  #L1ef668.  v6:= length @variable v0;
  #L1ef66a.  v7:= new `float`[v6];
  #L1ef66e.  v8:= length @variable v0;
  #L1ef670.  v9:= 0I;
  #L1ef672.  call `arraycopy`(v0, v9, v7, v9, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ef678.  if v9 >= v6 then goto L1ef692;
  #L1ef67c.  v0:= v7[v9];
  #L1ef680.  v8:= v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1ef684.  v8:= (`float`) v8 @kind i2f;
  #L1ef686.  v0:= v0 / v8 @kind float;
  #L1ef688.  v7[v9]:= v0;
  #L1ef68c.  v9:= v9 + 1;
  #L1ef690.  goto L1ef678;
  #L1ef692.  v12:= 1.0F;
  #L1ef696.  v6:= v5 @kind object;
  #L1ef698.  v8:= v18;
  #L1ef69c.  v9:= v19;
  #L1ef6a0.  v10:= v20;
  #L1ef6a4.  v11:= v21;
  #L1ef6a8.  v13:= v26;
  #L1ef6ac.  v14:= v27;
  #L1ef6b0.  call temp:= `h`(v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/c;.h:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L1ef6b6.  v2:= temp @kind object;
  #L1ef6b8.  if v2 == v5 then goto L1ef6ce;
  #L1ef6bc.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef6c2.  goto L1ef6ce;
  #L1ef6c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef6c6.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef6cc.  throw v0;
  #L1ef6ce.  v0:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1ef6d2.  call `<init>`(v0, v2, v4) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1ef6d8.  return v0 @kind object;
  #L1ef6da.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1ef6dc.  v2:= new `java.lang.RuntimeException`;
  #L1ef6e0.  v3:= new `java.lang.StringBuilder`;
  #L1ef6e4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ef6ea.  v4:= "Failed to load sampled bitmap: " @kind object;
  #L1ef6ee.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef6f4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef6fa.  v1:= "\r\n" @kind object;
  #L1ef6fe.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef704.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1ef70a.  v1:= temp @kind object;
  #L1ef70c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef712.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ef718.  v1:= temp @kind object;
  #L1ef71a.  call `<init>`(v2, v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ef720.  throw v2;
  #L1ef722.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1ef724.  if v2 == 0 then goto L1ef72e;
  #L1ef728.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef72e.  goto L1ef732;
  #L1ef730.  throw v0;
  #L1ef732.  goto L1ef730;
  catch `java.lang.OutOfMemoryError` @[L1ef622..L1ef664] goto L1ef722;
  catch `java.lang.Exception` @[L1ef622..L1ef664] goto L1ef6da;
  catch `java.lang.Throwable` @[L1ef668..L1ef6b8] goto L1ef6c4;
  catch `java.lang.OutOfMemoryError` @[L1ef6bc..L1ef6ce] goto L1ef722;
  catch `java.lang.Exception` @[L1ef6bc..L1ef6ce] goto L1ef6da;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `g`(`android.graphics.Bitmap` v12 @kind object, `float`[] v13 @kind object, `int` v14 , `boolean` v15 , `int` v16 , `int` v17 , `boolean` v18 , `boolean` v19 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.g:(Landroid/graphics/Bitmap;[FIZIIZZ)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ef970.  v0:= 1I;
  #L1ef972.  v1:= 1I;
  #L1ef974.  v0:= 1.0F;
  #L1ef978.  v2:= (`float`) v1 @kind i2f;
  #L1ef97a.  v9:= v0 / v2 @kind float;
  #L1ef97e.  v3:= v12 @kind object;
  #L1ef980.  v4:= v13 @kind object;
  #L1ef982.  v5:= v14;
  #L1ef984.  v6:= v15;
  #L1ef986.  v7:= v16;
  #L1ef98a.  v8:= v17;
  #L1ef98e.  v10:= v18;
  #L1ef992.  v11:= v19;
  #L1ef996.  call temp:= `h`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/theartofdev/edmodo/cropper/c;.h:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L1ef99c.  v0:= temp @kind object;
  #L1ef99e.  v2:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1ef9a2.  call `<init>`(v2, v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1ef9a8.  return v2 @kind object;
  #L1ef9aa.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L1ef9ac.  v1:= v1 * 2;
  #L1ef9b0.  v2:= 8I;
  #L1ef9b4.  if v1 > v2 then goto L1ef9ba;
  #L1ef9b8.  goto L1ef974;
  #L1ef9ba.  goto L1ef9be;
  #L1ef9bc.  throw v0;
  #L1ef9be.  goto L1ef9bc;
  catch `java.lang.OutOfMemoryError` @[L1ef996..L1ef9a8] goto L1ef9aa;
}
procedure `android.graphics.Bitmap` `h`(`android.graphics.Bitmap` v10 @kind object, `float`[] v11 @kind object, `int` v12 , `boolean` v13 , `int` v14 , `int` v15 , `float` v16 , `boolean` v17 , `boolean` v18 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.h:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ef08c.  v7:= v10 @kind object;
  #L1ef08e.  v8:= v12;
  #L1ef090.  v0:= v16;
  #L1ef094.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1ef09a.  v2:= temp;
  #L1ef09c.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1ef0a2.  v3:= temp;
  #L1ef0a4.  v1:= v11 @kind object;
  #L1ef0a6.  v4:= v13;
  #L1ef0a8.  v5:= v14;
  #L1ef0aa.  v6:= v15;
  #L1ef0ac.  call temp:= `s`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/c;.s:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L1ef0b2.  v9:= temp @kind object;
  #L1ef0b4.  v5:= new `android.graphics.Matrix`;
  #L1ef0b8.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1ef0be.  v1:= (`float`) v8 @kind i2f;
  #L1ef0c0.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1ef0c6.  v2:= temp;
  #L1ef0c8.  v2:= v2 / 2;
  #L1ef0cc.  v2:= (`float`) v2 @kind i2f;
  #L1ef0ce.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1ef0d4.  v3:= temp;
  #L1ef0d6.  v3:= v3 / 2;
  #L1ef0da.  v3:= (`float`) v3 @kind i2f;
  #L1ef0dc.  call `setRotate`(v5, v1, v2, v3) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L1ef0e2.  if v17 == 0 then goto L1ef0ea;
  #L1ef0e6.  v1:= -v0 @kind float;
  #L1ef0e8.  goto L1ef0ec;
  #L1ef0ea.  v1:= v0;
  #L1ef0ec.  if v18 == 0 then goto L1ef0f2;
  #L1ef0f0.  v0:= -v0 @kind float;
  #L1ef0f2.  call temp:= `postScale`(v5, v1, v0) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L1ef0f8.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L1ef0fc.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L1ef100.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1ef106.  v3:= temp;
  #L1ef108.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1ef10e.  v4:= temp;
  #L1ef110.  v6:= 1I;
  #L1ef112.  v0:= v10 @kind object;
  #L1ef114.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L1ef11a.  v0:= temp @kind object;
  #L1ef11c.  if v0 != v7 then goto L1ef132;
  #L1ef120.  call temp:= `getConfig`(v10) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L1ef126.  v0:= temp @kind object;
  #L1ef128.  v1:= 0I;
  #L1ef12a.  call temp:= `copy`(v10, v0, v1) @signature `Landroid/graphics/Bitmap;.copy:(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;` @kind virtual;
  #L1ef130.  v0:= temp @kind object;
  #L1ef132.  v1:= v8 %% 90;
  #L1ef136.  if v1 == 0 then goto L1ef14e;
  #L1ef13a.  v1:= v11 @kind object;
  #L1ef13c.  v2:= v9 @kind object;
  #L1ef13e.  v3:= v12;
  #L1ef140.  v4:= v13;
  #L1ef142.  v5:= v14;
  #L1ef144.  v6:= v15;
  #L1ef146.  call temp:= `i`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/c;.i:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L1ef14c.  v0:= temp @kind object;
  #L1ef14e.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `i`(`android.graphics.Bitmap` v8 @kind object, `float`[] v9 @kind object, `android.graphics.Rect` v10 @kind object, `int` v11 , `boolean` v12 , `int` v13 , `int` v14 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.i:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ef160.  v0:= v11 %% 90;
  #L1ef164.  if v0 == 0 then goto L1ef2ba;
  #L1ef168.  v0:= (`double`) v11 @kind i2d;
  #L1ef16a.  call temp:= `toRadians`(v0) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L1ef170.  v0:= temp @kind wide;
  #L1ef172.  v2:= 90I;
  #L1ef176.  if v11 < v2 then goto L1ef192;
  #L1ef17a.  v2:= 180I;
  #L1ef17e.  if v11 <= v2 then goto L1ef18c;
  #L1ef182.  v2:= 270I;
  #L1ef186.  if v11 >= v2 then goto L1ef18c;
  #L1ef18a.  goto L1ef192;
  #L1ef18c.  v11:= v10.`android.graphics.Rect.right` @type ^`int`;
  #L1ef190.  goto L1ef196;
  #L1ef192.  v11:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L1ef196.  v2:= 0I;
  #L1ef198.  v3:= 0I;
  #L1ef19a.  v4:= length @variable v9;
  #L1ef19c.  if v3 >= v4 then goto L1ef274;
  #L1ef1a0.  v4:= v9[v3];
  #L1ef1a4.  v5:= v11 + -1;
  #L1ef1a8.  v5:= (`float`) v5 @kind i2f;
  #L1ef1aa.  v4:= fcmpl(v4, v5);
  #L1ef1ae.  if v4 < 0 then goto L1ef26e;
  #L1ef1b2.  v4:= v9[v3];
  #L1ef1b6.  v5:= v11 + 1;
  #L1ef1ba.  v5:= (`float`) v5 @kind i2f;
  #L1ef1bc.  v4:= fcmpg(v4, v5);
  #L1ef1c0.  if v4 > 0 then goto L1ef26e;
  #L1ef1c4.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1ef1ca.  v4:= temp @kind wide;
  #L1ef1cc.  v11:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L1ef1d0.  v11:= (`float`) v11 @kind i2f;
  #L1ef1d2.  v3:= v3 + 1;
  #L1ef1d6.  v2:= v9[v3];
  #L1ef1da.  v11:= v11 - v2 @kind float;
  #L1ef1dc.  v6:= (`double`) v11 @kind f2d;
  #L1ef1de.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1ef1e4.  v4:= v4 * v6 @kind double;
  #L1ef1e8.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L1ef1ee.  v4:= temp @kind wide;
  #L1ef1f0.  v2:= (`int`) v4 @kind d2i;
  #L1ef1f2.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1ef1f8.  v4:= temp @kind wide;
  #L1ef1fa.  v11:= v9[v3];
  #L1ef1fe.  v6:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L1ef202.  v6:= (`float`) v6 @kind i2f;
  #L1ef204.  v11:= v11 - v6 @kind float;
  #L1ef206.  v6:= (`double`) v11 @kind f2d;
  #L1ef208.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1ef20e.  v4:= v4 * v6 @kind double;
  #L1ef212.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L1ef218.  v4:= temp @kind wide;
  #L1ef21a.  v11:= (`int`) v4 @kind d2i;
  #L1ef21c.  v4:= v9[v3];
  #L1ef220.  v5:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L1ef224.  v5:= (`float`) v5 @kind i2f;
  #L1ef226.  v4:= v4 - v5 @kind float;
  #L1ef228.  v4:= (`double`) v4 @kind f2d;
  #L1ef22a.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1ef230.  v6:= temp @kind wide;
  #L1ef232.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1ef238.  v4:= v4 / v6 @kind double;
  #L1ef23a.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L1ef240.  v4:= temp @kind wide;
  #L1ef242.  v4:= (`int`) v4 @kind d2i;
  #L1ef244.  v5:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L1ef248.  v5:= (`float`) v5 @kind i2f;
  #L1ef24a.  v9:= v9[v3];
  #L1ef24e.  v5:= v5 - v9 @kind float;
  #L1ef250.  v5:= (`double`) v5 @kind f2d;
  #L1ef252.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1ef258.  v0:= temp @kind wide;
  #L1ef25a.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1ef260.  v5:= v5 / v0 @kind double;
  #L1ef262.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L1ef268.  v0:= temp @kind wide;
  #L1ef26a.  v9:= (`int`) v0 @kind d2i;
  #L1ef26c.  goto L1ef27a;
  #L1ef26e.  v3:= v3 + 2;
  #L1ef272.  goto L1ef19a;
  #L1ef274.  v9:= 0I;
  #L1ef276.  v11:= 0I;
  #L1ef278.  v4:= 0I;
  #L1ef27a.  v4:= v4 + v2 @kind int;
  #L1ef27c.  v9:= v9 + v11 @kind int;
  #L1ef27e.  call `set`(v10, v2, v11, v4, v9) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L1ef284.  if v12 == 0 then goto L1ef28e;
  #L1ef288.  call `n`(v10, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/c;.n:(Landroid/graphics/Rect;II)V` @kind static;
  #L1ef28e.  v9:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L1ef292.  v11:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L1ef296.  call temp:= `width`(v10) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1ef29c.  v12:= temp;
  #L1ef29e.  call temp:= `height`(v10) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1ef2a4.  v10:= temp;
  #L1ef2a6.  call temp:= `createBitmap`(v8, v9, v11, v12, v10) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L1ef2ac.  v9:= temp @kind object;
  #L1ef2ae.  if v8 == v9 then goto L1ef2b8;
  #L1ef2b2.  call `recycle`(v8) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef2b8.  v8:= v9 @kind object;
  #L1ef2ba.  return v8 @kind object;
}
procedure `android.graphics.Bitmap` `j`(`android.content.ContentResolver` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.j:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ef2cc.  v0:= 0I;
  #L1ef2ce.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L1ef2d4.  v0:= temp @kind object;
  #L1ef2d6.  v1:= `@@com.theartofdev.edmodo.cropper.c.a` @type ^`android.graphics.Rect` @kind object;
  #L1ef2da.  call temp:= `decodeStream`(v0, v1, v4) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L1ef2e0.  v2:= temp @kind object;
  #L1ef2e2.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1ef2e8.  return v2 @kind object;
  #L1ef2ea.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef2ec.  goto L1ef33c;
  #L1ef2ee.  v1:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1ef2f2.  v1:= v1 * 2;
  #L1ef2f6.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v1;
  #L1ef2fa.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1ef300.  v0:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1ef304.  v1:= 512I;
  #L1ef308.  if v0 > v1 then goto L1ef30e;
  #L1ef30c.  goto L1ef2cc;
  #L1ef30e.  v2:= new `java.lang.RuntimeException`;
  #L1ef312.  v4:= new `java.lang.StringBuilder`;
  #L1ef316.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ef31c.  v0:= "Failed to decode image: " @kind object;
  #L1ef320.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef326.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef32c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ef332.  v3:= temp @kind object;
  #L1ef334.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ef33a.  throw v2;
  #L1ef33c.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1ef342.  goto L1ef346;
  #L1ef344.  throw v2;
  #L1ef346.  goto L1ef344;
  catch `java.lang.OutOfMemoryError` @[L1ef2ce..L1ef2e2] goto L1ef2ee;
  catch `java.lang.Throwable` @[L1ef2ce..L1ef2e2] goto L1ef2ea;
  catch `java.lang.Throwable` @[L1ef2ee..L1ef2fa] goto L1ef2ea;
}
procedure `android.graphics.BitmapFactory$Options` `k`(`android.content.ContentResolver` v1 @kind object, `android.net.Uri` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.k:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ef4a4.  call temp:= `openInputStream`(v1, v2) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L1ef4aa.  v1:= temp @kind object;
  #L1ef4ac.  v2:= new `android.graphics.BitmapFactory$Options`;
  #L1ef4b0.  call `<init>`(v2) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L1ef4b6.  v0:= 1I;
  #L1ef4b8.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L1ef4bc.  v0:= `@@com.theartofdev.edmodo.cropper.c.a` @type ^`android.graphics.Rect` @kind object;
  #L1ef4c0.  call temp:= `decodeStream`(v1, v0, v2) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L1ef4c6.  v0:= 0I;
  #L1ef4c8.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L1ef4cc.  call `c`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1ef4d2.  return v2 @kind object;
  #L1ef4d4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef4d6.  goto L1ef4dc;
  #L1ef4d8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ef4da.  v1:= 0I;
  #L1ef4dc.  call `c`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1ef4e2.  throw v2;
  catch `java.lang.Throwable` @[L1ef4a4..L1ef4ac] goto L1ef4d8;
  catch `java.lang.Throwable` @[L1ef4ac..L1ef4cc] goto L1ef4d4;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `l`(`android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.l:(Landroid/content/Context;Landroid/net/Uri;II)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ef9e0.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1ef9e6.  v3:= temp @kind object;
  #L1ef9e8.  call temp:= `k`(v3, v4) @signature `Lcom/theartofdev/edmodo/cropper/c;.k:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @kind static;
  #L1ef9ee.  v0:= temp @kind object;
  #L1ef9f0.  v1:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L1ef9f4.  v2:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L1ef9f8.  call temp:= `b`(v1, v2, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/c;.b:(IIII)I` @kind static;
  #L1ef9fe.  v5:= temp;
  #L1efa00.  v6:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L1efa04.  v1:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L1efa08.  call temp:= `a`(v6, v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.a:(II)I` @kind static;
  #L1efa0e.  v6:= temp;
  #L1efa10.  call temp:= `max`(v5, v6) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1efa16.  v5:= temp;
  #L1efa18.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v5;
  #L1efa1c.  call temp:= `j`(v3, v4, v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.j:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L1efa22.  v3:= temp @kind object;
  #L1efa24.  v5:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1efa28.  v6:= v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1efa2c.  call `<init>`(v5, v3, v6) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1efa32.  return v5 @kind object;
  #L1efa34.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L1efa36.  v5:= new `java.lang.RuntimeException`;
  #L1efa3a.  v6:= new `java.lang.StringBuilder`;
  #L1efa3e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1efa44.  v0:= "Failed to load sampled bitmap: " @kind object;
  #L1efa48.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efa4e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efa54.  v4:= "\r\n" @kind object;
  #L1efa58.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efa5e.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1efa64.  v4:= temp @kind object;
  #L1efa66.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efa6c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1efa72.  v4:= temp @kind object;
  #L1efa74.  call `<init>`(v5, v4, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1efa7a.  throw v5;
  catch `java.lang.Exception` @[L1ef9e0..L1efa32] goto L1efa34;
}
procedure `com.theartofdev.edmodo.cropper.c$a` `m`(`android.content.Context` v4 @kind object, `android.net.Uri` v5 @kind object, `android.graphics.Rect` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.m:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/theartofdev/edmodo/cropper/c$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1efa9c.  v0:= 0I;
  #L1efa9e.  v1:= new `android.graphics.BitmapFactory$Options`;
  #L1efaa2.  call `<init>`(v1) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L1efaa8.  call temp:= `width`(v6) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1efaae.  v2:= temp;
  #L1efab0.  call temp:= `height`(v6) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1efab6.  v3:= temp;
  #L1efab8.  call temp:= `b`(v2, v3, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/c;.b:(IIII)I` @kind static;
  #L1efabe.  v7:= temp;
  #L1efac0.  v9:= v9 * v7 @kind int;
  #L1efac4.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v9;
  #L1efac8.  call temp:= `getContentResolver`(v4) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1eface.  v4:= temp @kind object;
  #L1efad0.  call temp:= `openInputStream`(v4, v5) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L1efad6.  v4:= temp @kind object;
  #L1efad8.  v7:= 0I;
  #L1efada.  call temp:= `newInstance`(v4, v7) @signature `Landroid/graphics/BitmapRegionDecoder;.newInstance:(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;` @kind static;
  #L1efae0.  v7:= temp @kind object;
  #L1efae2.  v8:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1efae6.  call temp:= `decodeRegion`(v7, v6, v1) @signature `Landroid/graphics/BitmapRegionDecoder;.decodeRegion:(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind virtual;
  #L1efaec.  v9:= temp @kind object;
  #L1efaee.  v2:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1efaf2.  call `<init>`(v8, v9, v2) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1efaf8.  call `c`(v4) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1efafe.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L1efb04.  return v8 @kind object;
  #L1efb06.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1efb08.  goto L1efb44;
  #L1efb0a.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L1efb0c.  goto L1efb4c;
  #L1efb0e.  v8:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L1efb12.  v8:= v8 * 2;
  #L1efb16.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v8;
  #L1efb1a.  v9:= 512I;
  #L1efb1e.  if v8 <= v9 then goto L1efae2;
  #L1efb22.  call `c`(v4) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1efb28.  if v7 == 0 then goto L1efb32;
  #L1efb2c.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L1efb32.  v4:= new `com.theartofdev.edmodo.cropper.c$a`;
  #L1efb36.  v5:= 1I;
  #L1efb38.  call `<init>`(v4, v0, v5) @signature `Lcom/theartofdev/edmodo/cropper/c$a;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L1efb3e.  return v4 @kind object;
  #L1efb40.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1efb42.  v7:= v0 @kind object;
  #L1efb44.  v0:= v4 @kind object;
  #L1efb46.  goto L1efba2;
  #L1efb48.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L1efb4a.  v7:= v0 @kind object;
  #L1efb4c.  v0:= v4 @kind object;
  #L1efb4e.  goto L1efb5a;
  #L1efb50.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1efb52.  v7:= v0 @kind object;
  #L1efb54.  goto L1efba2;
  #L1efb56.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L1efb58.  v7:= v0 @kind object;
  #L1efb5a.  v4:= new `java.lang.RuntimeException`;
  #L1efb5e.  v8:= new `java.lang.StringBuilder`;
  #L1efb62.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1efb68.  v9:= "Failed to load sampled bitmap: " @kind object;
  #L1efb6c.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efb72.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efb78.  v5:= "\r\n" @kind object;
  #L1efb7c.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efb82.  call temp:= `getMessage`(v6) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1efb88.  v5:= temp @kind object;
  #L1efb8a.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1efb90.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1efb96.  v5:= temp @kind object;
  #L1efb98.  call `<init>`(v4, v5, v6) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1efb9e.  throw v4;
  #L1efba0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1efba2.  call `c`(v0) @signature `Lcom/theartofdev/edmodo/cropper/c;.c:(Ljava/io/Closeable;)V` @kind static;
  #L1efba8.  if v7 == 0 then goto L1efbb2;
  #L1efbac.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L1efbb2.  goto L1efbb6;
  #L1efbb4.  throw v5;
  #L1efbb6.  goto L1efbb4;
  catch `java.lang.Exception` @[L1efa9e..L1efad8] goto L1efb56;
  catch `java.lang.Throwable` @[L1efa9e..L1efad8] goto L1efb50;
  catch `java.lang.Exception` @[L1efada..L1efae2] goto L1efb48;
  catch `java.lang.Throwable` @[L1efada..L1efae2] goto L1efb40;
  catch `java.lang.OutOfMemoryError` @[L1efae2..L1efaf8] goto L1efb0e;
  catch `java.lang.Exception` @[L1efae2..L1efaf8] goto L1efb0a;
  catch `java.lang.Throwable` @[L1efae2..L1efaf8] goto L1efb06;
  catch `java.lang.Exception` @[L1efb0e..L1efb1a] goto L1efb0a;
  catch `java.lang.Throwable` @[L1efb0e..L1efb1a] goto L1efb06;
  catch `java.lang.Throwable` @[L1efb5a..L1efba0] goto L1efba0;
}
procedure `void` `n`(`android.graphics.Rect` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.n:(Landroid/graphics/Rect;II)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1f0034.  if v2 != v3 then goto L1f009a;
  #L1f0038.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f003e.  v2:= temp;
  #L1f0040.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f0046.  v3:= temp;
  #L1f0048.  if v2 == v3 then goto L1f009a;
  #L1f004c.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f0052.  v2:= temp;
  #L1f0054.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f005a.  v3:= temp;
  #L1f005c.  if v2 <= v3 then goto L1f007e;
  #L1f0060.  v2:= v1.`android.graphics.Rect.bottom` @type ^`int`;
  #L1f0064.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f006a.  v3:= temp;
  #L1f006c.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f0072.  v0:= temp;
  #L1f0074.  v3:= v3 - v0 @kind int;
  #L1f0076.  v2:= v2 - v3 @kind int;
  #L1f0078.  v1.`android.graphics.Rect.bottom` @type ^`int` := v2;
  #L1f007c.  goto L1f009a;
  #L1f007e.  v2:= v1.`android.graphics.Rect.right` @type ^`int`;
  #L1f0082.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f0088.  v3:= temp;
  #L1f008a.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f0090.  v0:= temp;
  #L1f0092.  v3:= v3 - v0 @kind int;
  #L1f0094.  v2:= v2 - v3 @kind int;
  #L1f0096.  v1.`android.graphics.Rect.right` @type ^`int` := v2;
  #L1f009a.  return @kind void;
}
procedure `int` `o`() @signature `Lcom/theartofdev/edmodo/cropper/c;.o:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1eff0c.  v0:= 2048I;
  #L1eff10.  call temp:= `getEGL`() @signature `Ljavax/microedition/khronos/egl/EGLContext;.getEGL:()Ljavax/microedition/khronos/egl/EGL;` @kind static;
  #L1eff16.  v1:= temp @kind object;
  #L1eff18.  v1:= (`javax.microedition.khronos.egl.EGL10`) v1 @kind object;
  #L1eff1c.  v2:= `@@javax.microedition.khronos.egl.EGL10.EGL_DEFAULT_DISPLAY` @type ^`java.lang.Object` @kind object;
  #L1eff20.  call temp:= `eglGetDisplay`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetDisplay:(Ljava/lang/Object;)Ljavax/microedition/khronos/egl/EGLDisplay;` @kind interface;
  #L1eff26.  v2:= temp @kind object;
  #L1eff28.  v3:= 2I;
  #L1eff2a.  v3:= new `int`[v3];
  #L1eff2e.  call temp:= `eglInitialize`(v1, v2, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglInitialize:(Ljavax/microedition/khronos/egl/EGLDisplay;[I)Z` @kind interface;
  #L1eff34.  v3:= 1I;
  #L1eff36.  v4:= new `int`[v3];
  #L1eff3a.  v5:= 0I;
  #L1eff3c.  v6:= 0I;
  #L1eff3e.  call temp:= `eglGetConfigs`(v1, v2, v5, v6, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L1eff44.  v5:= v4[v6];
  #L1eff48.  v5:= new `javax.microedition.khronos.egl.EGLConfig`[v5];
  #L1eff4c.  v7:= v4[v6];
  #L1eff50.  call temp:= `eglGetConfigs`(v1, v2, v5, v7, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L1eff56.  v3:= new `int`[v3];
  #L1eff5a.  v7:= 0I;
  #L1eff5c.  v8:= 0I;
  #L1eff5e.  v9:= v4[v6];
  #L1eff62.  if v7 >= v9 then goto L1eff86;
  #L1eff66.  v9:= v5[v7] @kind object;
  #L1eff6a.  v10:= 12332I;
  #L1eff6e.  call temp:= `eglGetConfigAttrib`(v1, v2, v9, v10, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigAttrib:(Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L1eff74.  v9:= v3[v6];
  #L1eff78.  if v8 >= v9 then goto L1eff80;
  #L1eff7c.  v8:= v3[v6];
  #L1eff80.  v7:= v7 + 1;
  #L1eff84.  goto L1eff5e;
  #L1eff86.  call temp:= `eglTerminate`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglTerminate:(Ljavax/microedition/khronos/egl/EGLDisplay;)Z` @kind interface;
  #L1eff8c.  call temp:= `max`(v8, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1eff92.  v0:= temp;
  #L1eff94.  return v0;
  catch `java.lang.Exception` @[L1eff10..L1eff94] goto L1eff94;
}
procedure `float` `p`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.p:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1efcd8.  v0:= 1I;
  #L1efcda.  v0:= v2[v0];
  #L1efcde.  v1:= 3I;
  #L1efce0.  v1:= v2[v1];
  #L1efce4.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efcea.  v0:= temp;
  #L1efcec.  v1:= 5I;
  #L1efcee.  v1:= v2[v1];
  #L1efcf2.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efcf8.  v0:= temp;
  #L1efcfa.  v1:= 7I;
  #L1efcfc.  v2:= v2[v1];
  #L1efd00.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efd06.  v2:= temp;
  #L1efd08.  return v2;
}
procedure `float` `q`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.q:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L1efd1c.  call temp:= `v`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.v:([F)F` @kind static;
  #L1efd22.  v0:= temp;
  #L1efd24.  call temp:= `u`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.u:([F)F` @kind static;
  #L1efd2a.  v1:= temp;
  #L1efd2c.  v0:= v0 + v1 @kind float;
  #L1efd2e.  v1:= 2.0F;
  #L1efd32.  v0:= v0 / v1 @kind float;
  #L1efd34.  return v0;
}
procedure `float` `r`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.r:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L1efd48.  call temp:= `p`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.p:([F)F` @kind static;
  #L1efd4e.  v0:= temp;
  #L1efd50.  call temp:= `w`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.w:([F)F` @kind static;
  #L1efd56.  v1:= temp;
  #L1efd58.  v0:= v0 + v1 @kind float;
  #L1efd5a.  v1:= 2.0F;
  #L1efd5e.  v0:= v0 / v1 @kind float;
  #L1efd60.  return v0;
}
procedure `android.graphics.Rect` `s`(`float`[] v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 , `int` v7 , `int` v8 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.s:([FIIZII)Landroid/graphics/Rect;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ef50c.  call temp:= `u`(v3) @signature `Lcom/theartofdev/edmodo/cropper/c;.u:([F)F` @kind static;
  #L1ef512.  v0:= temp;
  #L1ef514.  v1:= 0I;
  #L1ef516.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1ef51c.  v0:= temp;
  #L1ef51e.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1ef524.  v0:= temp;
  #L1ef526.  call temp:= `w`(v3) @signature `Lcom/theartofdev/edmodo/cropper/c;.w:([F)F` @kind static;
  #L1ef52c.  v2:= temp;
  #L1ef52e.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1ef534.  v1:= temp;
  #L1ef536.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1ef53c.  v1:= temp;
  #L1ef53e.  v4:= (`float`) v4 @kind i2f;
  #L1ef540.  call temp:= `v`(v3) @signature `Lcom/theartofdev/edmodo/cropper/c;.v:([F)F` @kind static;
  #L1ef546.  v2:= temp;
  #L1ef548.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1ef54e.  v4:= temp;
  #L1ef550.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1ef556.  v4:= temp;
  #L1ef558.  v5:= (`float`) v5 @kind i2f;
  #L1ef55a.  call temp:= `p`(v3) @signature `Lcom/theartofdev/edmodo/cropper/c;.p:([F)F` @kind static;
  #L1ef560.  v3:= temp;
  #L1ef562.  call temp:= `min`(v5, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1ef568.  v3:= temp;
  #L1ef56a.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1ef570.  v3:= temp;
  #L1ef572.  v5:= new `android.graphics.Rect`;
  #L1ef576.  call `<init>`(v5, v0, v1, v4, v3) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L1ef57c.  if v6 == 0 then goto L1ef586;
  #L1ef580.  call `n`(v5, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/c;.n:(Landroid/graphics/Rect;II)V` @kind static;
  #L1ef586.  return v5 @kind object;
}
procedure `float` `t`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.t:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L1efd74.  call temp:= `p`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.p:([F)F` @kind static;
  #L1efd7a.  v0:= temp;
  #L1efd7c.  call temp:= `w`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.w:([F)F` @kind static;
  #L1efd82.  v1:= temp;
  #L1efd84.  v0:= v0 - v1 @kind float;
  #L1efd86.  return v0;
}
procedure `float` `u`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.u:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1efd98.  v0:= 0I;
  #L1efd9a.  v0:= v2[v0];
  #L1efd9e.  v1:= 2I;
  #L1efda0.  v1:= v2[v1];
  #L1efda4.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efdaa.  v0:= temp;
  #L1efdac.  v1:= 4I;
  #L1efdae.  v1:= v2[v1];
  #L1efdb2.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efdb8.  v0:= temp;
  #L1efdba.  v1:= 6I;
  #L1efdbc.  v2:= v2[v1];
  #L1efdc0.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efdc6.  v2:= temp;
  #L1efdc8.  return v2;
}
procedure `float` `v`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.v:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1efddc.  v0:= 0I;
  #L1efdde.  v0:= v2[v0];
  #L1efde2.  v1:= 2I;
  #L1efde4.  v1:= v2[v1];
  #L1efde8.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efdee.  v0:= temp;
  #L1efdf0.  v1:= 4I;
  #L1efdf2.  v1:= v2[v1];
  #L1efdf6.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efdfc.  v0:= temp;
  #L1efdfe.  v1:= 6I;
  #L1efe00.  v2:= v2[v1];
  #L1efe04.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1efe0a.  v2:= temp;
  #L1efe0c.  return v2;
}
procedure `float` `w`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.w:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1efe20.  v0:= 1I;
  #L1efe22.  v0:= v2[v0];
  #L1efe26.  v1:= 3I;
  #L1efe28.  v1:= v2[v1];
  #L1efe2c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efe32.  v0:= temp;
  #L1efe34.  v1:= 5I;
  #L1efe36.  v1:= v2[v1];
  #L1efe3a.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efe40.  v0:= temp;
  #L1efe42.  v1:= 7I;
  #L1efe44.  v2:= v2[v1];
  #L1efe48.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1efe4e.  v2:= temp;
  #L1efe50.  return v2;
}
procedure `float` `x`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.x:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L1efe64.  call temp:= `v`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.v:([F)F` @kind static;
  #L1efe6a.  v0:= temp;
  #L1efe6c.  call temp:= `u`(v1) @signature `Lcom/theartofdev/edmodo/cropper/c;.u:([F)F` @kind static;
  #L1efe72.  v1:= temp;
  #L1efe74.  v0:= v0 - v1 @kind float;
  #L1efe76.  return v0;
}
procedure `android.graphics.Bitmap` `y`(`android.graphics.Bitmap` v5 @kind object, `int` v6 , `int` v7 , `com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` v8 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/c;.y:(Landroid/graphics/Bitmap;IILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;)Landroid/graphics/Bitmap;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ef370.  if v6 <= 0 then goto L1ef3fe;
  #L1ef374.  if v7 <= 0 then goto L1ef3fe;
  #L1ef378.  v0:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_FIT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L1ef37c.  if v8 == v0 then goto L1ef390;
  #L1ef380.  v1:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_INSIDE` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L1ef384.  if v8 == v1 then goto L1ef390;
  #L1ef388.  v1:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L1ef38c.  if v8 != v1 then goto L1ef3fe;
  #L1ef390.  v1:= 0I;
  #L1ef392.  v2:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L1ef396.  v3:= 0I;
  #L1ef398.  if v8 != v2 then goto L1ef3a6;
  #L1ef39c.  call temp:= `createScaledBitmap`(v5, v6, v7, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L1ef3a2.  v1:= temp @kind object;
  #L1ef3a4.  goto L1ef3ee;
  #L1ef3a6.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1ef3ac.  v2:= temp;
  #L1ef3ae.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1ef3b4.  v4:= temp;
  #L1ef3b6.  v2:= (`float`) v2 @kind i2f;
  #L1ef3b8.  v6:= (`float`) v6 @kind i2f;
  #L1ef3ba.  v6:= v2 / v6 @kind float;
  #L1ef3be.  v4:= (`float`) v4 @kind i2f;
  #L1ef3c0.  v7:= (`float`) v7 @kind i2f;
  #L1ef3c2.  v7:= v4 / v7 @kind float;
  #L1ef3c6.  call temp:= `max`(v6, v7) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1ef3cc.  v6:= temp;
  #L1ef3ce.  v7:= 1.0F;
  #L1ef3d2.  v7:= fcmpl(v6, v7);
  #L1ef3d6.  if v7 > 0 then goto L1ef3de;
  #L1ef3da.  if v8 != v0 then goto L1ef3ee;
  #L1ef3de.  v2:= v2 / v6 @kind float;
  #L1ef3e0.  v7:= (`int`) v2 @kind f2i;
  #L1ef3e2.  v4:= v4 / v6 @kind float;
  #L1ef3e4.  v6:= (`int`) v4 @kind f2i;
  #L1ef3e6.  call temp:= `createScaledBitmap`(v5, v7, v6, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L1ef3ec.  v1:= temp @kind object;
  #L1ef3ee.  if v1 == 0 then goto L1ef3fe;
  #L1ef3f2.  if v1 == v5 then goto L1ef3fc;
  #L1ef3f6.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef3fc.  return v1 @kind object;
  #L1ef3fe.  return v5 @kind object;
  catch `java.lang.Exception` @[L1ef378..L1ef3fc] goto L1ef3fe;
}
procedure `android.graphics.Bitmap` `z`(`android.graphics.Bitmap` v7 @kind object, `int` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lcom/theartofdev/edmodo/cropper/c;.z:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ef420.  if v8 > 0 then goto L1ef430;
  #L1ef424.  if v9 != 0 then goto L1ef430;
  #L1ef428.  if v10 == 0 then goto L1ef42e;
  #L1ef42c.  goto L1ef430;
  #L1ef42e.  return v7 @kind object;
  #L1ef430.  v5:= new `android.graphics.Matrix`;
  #L1ef434.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1ef43a.  v8:= (`float`) v8 @kind i2f;
  #L1ef43c.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L1ef442.  v8:= -1.0F;
  #L1ef446.  v0:= 1.0F;
  #L1ef44a.  if v9 == 0 then goto L1ef454;
  #L1ef44e.  v9:= -1.0F;
  #L1ef452.  goto L1ef458;
  #L1ef454.  v9:= 1.0F;
  #L1ef458.  if v10 == 0 then goto L1ef45e;
  #L1ef45c.  goto L1ef462;
  #L1ef45e.  v8:= 1.0F;
  #L1ef462.  call temp:= `postScale`(v5, v9, v8) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L1ef468.  v1:= 0I;
  #L1ef46a.  v2:= 0I;
  #L1ef46c.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L1ef472.  v3:= temp;
  #L1ef474.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L1ef47a.  v4:= temp;
  #L1ef47c.  v6:= 0I;
  #L1ef47e.  v0:= v7 @kind object;
  #L1ef480.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L1ef486.  v8:= temp @kind object;
  #L1ef488.  if v8 == v7 then goto L1ef492;
  #L1ef48c.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ef492.  return v8 @kind object;
}
