record `com.telenor.connect.WellKnownAPI$WellKnownConfig` @kind class @AccessFlag PUBLIC extends `android.os.Parcelable` @kind interface {
  `java.lang.String` `com.telenor.connect.WellKnownAPI$WellKnownConfig.b` @AccessFlag PRIVATE;
  `java.util.Set` `com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @AccessFlag PRIVATE;
  `java.util.Set` `com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @AccessFlag PRIVATE;
  `java.lang.String` `com.telenor.connect.WellKnownAPI$WellKnownConfig.e` @AccessFlag PRIVATE;
}
global `android.os.Parcelable$Creator` `@@com.telenor.connect.WellKnownAPI$WellKnownConfig.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e9e64.  v0:= new `com.telenor.connect.m`;
  #L1e9e68.  call `<init>`(v0) @signature `Lcom/telenor/connect/m;.<init>:()V` @kind direct;
  #L1e9e6e.  `@@com.telenor.connect.WellKnownAPI$WellKnownConfig.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1e9e72.  return @kind void;
}
procedure `void` `<init>`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v5 @kind this, `android.os.Parcel` v6 @kind object) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.<init>:(Landroid/os/Parcel;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e9e84.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e9e8a.  call temp:= `readString`(v6) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L1e9e90.  v0:= temp @kind object;
  #L1e9e92.  v5.`com.telenor.connect.WellKnownAPI$WellKnownConfig.b` @type ^`java.lang.String` := v0 @kind object;
  #L1e9e96.  call temp:= `readInt`(v6) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L1e9e9c.  v0:= temp;
  #L1e9e9e.  v1:= new `java.util.HashSet`;
  #L1e9ea2.  call `<init>`(v1, v0) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L1e9ea8.  v5.`com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @type ^`java.util.Set` := v1 @kind object;
  #L1e9eac.  v1:= 0I;
  #L1e9eae.  v2:= 0I;
  #L1e9eb0.  if v2 >= v0 then goto L1e9ecc;
  #L1e9eb4.  v3:= v5.`com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @type ^`java.util.Set` @kind object;
  #L1e9eb8.  call temp:= `readString`(v6) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L1e9ebe.  v4:= temp @kind object;
  #L1e9ec0.  call temp:= `add`(v3, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1e9ec6.  v2:= v2 + 1;
  #L1e9eca.  goto L1e9eb0;
  #L1e9ecc.  call temp:= `readInt`(v6) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L1e9ed2.  v0:= temp;
  #L1e9ed4.  v2:= new `java.util.HashSet`;
  #L1e9ed8.  call `<init>`(v2, v0) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L1e9ede.  v5.`com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @type ^`java.util.Set` := v2 @kind object;
  #L1e9ee2.  if v1 >= v0 then goto L1e9efe;
  #L1e9ee6.  v2:= v5.`com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @type ^`java.util.Set` @kind object;
  #L1e9eea.  call temp:= `readString`(v6) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L1e9ef0.  v3:= temp @kind object;
  #L1e9ef2.  call temp:= `add`(v2, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1e9ef8.  v1:= v1 + 1;
  #L1e9efc.  goto L1e9ee2;
  #L1e9efe.  return @kind void;
}
procedure `java.lang.String` `b`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v3 @kind this) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e9da8.  v0:= v3.`com.telenor.connect.WellKnownAPI$WellKnownConfig.e` @type ^`java.lang.String` @kind object;
  #L1e9dac.  if v0 == 0 then goto L1e9df4;
  #L1e9db0.  v1:= 47I;
  #L1e9db4.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1e9dba.  v2:= temp;
  #L1e9dbc.  v2:= v2 + -1;
  #L1e9dc0.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1e9dc6.  v0:= temp;
  #L1e9dc8.  if v1 == v0 then goto L1e9df4;
  #L1e9dcc.  v0:= new `java.lang.StringBuilder`;
  #L1e9dd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e9dd6.  v1:= v3.`com.telenor.connect.WellKnownAPI$WellKnownConfig.e` @type ^`java.lang.String` @kind object;
  #L1e9dda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e9de0.  v1:= "/" @kind object;
  #L1e9de4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e9dea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e9df0.  v0:= temp @kind object;
  #L1e9df2.  return v0 @kind object;
  #L1e9df4.  v0:= v3.`com.telenor.connect.WellKnownAPI$WellKnownConfig.e` @type ^`java.lang.String` @kind object;
  #L1e9df8.  return v0 @kind object;
  catch `java.lang.IndexOutOfBoundsException` @[L1e9db4..L1e9df2] goto L1e9df4;
}
procedure `java.util.Set` `c`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v1 @kind this) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.c:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9e1c.  v0:= v1.`com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @type ^`java.util.Set` @kind object;
  #L1e9e20.  if v0 == 0 then goto L1e9e26;
  #L1e9e24.  goto L1e9e2e;
  #L1e9e26.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L1e9e2c.  v0:= temp @kind object;
  #L1e9e2e.  return v0 @kind object;
}
procedure `java.util.Set` `d`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v1 @kind this) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.d:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9e40.  v0:= v1.`com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @type ^`java.util.Set` @kind object;
  #L1e9e44.  if v0 == 0 then goto L1e9e4a;
  #L1e9e48.  goto L1e9e52;
  #L1e9e4a.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L1e9e50.  v0:= temp @kind object;
  #L1e9e52.  return v0 @kind object;
}
procedure `int` `describeContents`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v1 @kind this) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e9d94.  v0:= 0I;
  #L1e9d96.  return v0;
}
procedure `void` `writeToParcel`(`com.telenor.connect.WellKnownAPI$WellKnownConfig` v2 @kind this, `android.os.Parcel` v3 @kind object, `int` v4 ) @signature `Lcom/telenor/connect/WellKnownAPI$WellKnownConfig;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e9f10.  v4:= v2.`com.telenor.connect.WellKnownAPI$WellKnownConfig.b` @type ^`java.lang.String` @kind object;
  #L1e9f14.  call `writeString`(v3, v4) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L1e9f1a.  v4:= v2.`com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @type ^`java.util.Set` @kind object;
  #L1e9f1e.  v0:= 0I;
  #L1e9f20.  if v4 != 0 then goto L1e9f2c;
  #L1e9f24.  call `writeInt`(v3, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L1e9f2a.  goto L1e9f66;
  #L1e9f2c.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L1e9f32.  v4:= temp;
  #L1e9f34.  call `writeInt`(v3, v4) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L1e9f3a.  v4:= v2.`com.telenor.connect.WellKnownAPI$WellKnownConfig.c` @type ^`java.util.Set` @kind object;
  #L1e9f3e.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e9f44.  v4:= temp @kind object;
  #L1e9f46.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e9f4c.  v1:= temp;
  #L1e9f4e.  if v1 == 0 then goto L1e9f66;
  #L1e9f52.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e9f58.  v1:= temp @kind object;
  #L1e9f5a.  v1:= (`java.lang.String`) v1 @kind object;
  #L1e9f5e.  call `writeString`(v3, v1) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L1e9f64.  goto L1e9f46;
  #L1e9f66.  v4:= v2.`com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @type ^`java.util.Set` @kind object;
  #L1e9f6a.  if v4 != 0 then goto L1e9f76;
  #L1e9f6e.  call `writeInt`(v3, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L1e9f74.  goto L1e9fb0;
  #L1e9f76.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L1e9f7c.  v4:= temp;
  #L1e9f7e.  call `writeInt`(v3, v4) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L1e9f84.  v4:= v2.`com.telenor.connect.WellKnownAPI$WellKnownConfig.d` @type ^`java.util.Set` @kind object;
  #L1e9f88.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e9f8e.  v4:= temp @kind object;
  #L1e9f90.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e9f96.  v0:= temp;
  #L1e9f98.  if v0 == 0 then goto L1e9fb0;
  #L1e9f9c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e9fa2.  v0:= temp @kind object;
  #L1e9fa4.  v0:= (`java.lang.String`) v0 @kind object;
  #L1e9fa8.  call `writeString`(v3, v0) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L1e9fae.  goto L1e9f90;
  #L1e9fb0.  return @kind void;
}
