record `com.telenor.connect.id.c` @kind class @AccessFlag PUBLIC {
  `com.telenor.connect.id.ConnectAPI` `com.telenor.connect.id.c.a` @AccessFlag PRIVATE_FINAL;
  `com.telenor.connect.id.ConnectStore` `com.telenor.connect.id.c.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.telenor.connect.id.c.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.telenor.connect.id.c.d` @AccessFlag PRIVATE_FINAL;
  `com.telenor.connect.id.d` `com.telenor.connect.id.c.e` @AccessFlag PRIVATE;
  `com.telenor.connect.id.f` `com.telenor.connect.id.c.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.telenor.connect.id.c` v0 @kind this, `com.telenor.connect.id.ConnectStore` v1 @kind object, `com.telenor.connect.id.ConnectAPI` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/telenor/connect/id/c;.<init>:(Lcom/telenor/connect/id/ConnectStore;Lcom/telenor/connect/id/ConnectAPI;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1eb1cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1eb1d2.  v0.`com.telenor.connect.id.c.d` @type ^`java.lang.String` := v3 @kind object;
  #L1eb1d6.  v0.`com.telenor.connect.id.c.c` @type ^`java.lang.String` := v4 @kind object;
  #L1eb1da.  v0.`com.telenor.connect.id.c.a` @type ^`com.telenor.connect.id.ConnectAPI` := v2 @kind object;
  #L1eb1de.  v0.`com.telenor.connect.id.c.b` @type ^`com.telenor.connect.id.ConnectStore` := v1 @kind object;
  #L1eb1e2.  return @kind void;
}
procedure `com.telenor.connect.id.ConnectStore` `a`(`com.telenor.connect.id.c` v0 @kind object) @signature `Lcom/telenor/connect/id/c;.a:(Lcom/telenor/connect/id/c;)Lcom/telenor/connect/id/ConnectStore;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eb0f8.  v0:= v0.`com.telenor.connect.id.c.b` @type ^`com.telenor.connect.id.ConnectStore` @kind object;
  #L1eb0fc.  return v0 @kind object;
}
procedure `com.telenor.connect.id.d` `b`(`com.telenor.connect.id.c` v0 @kind object, `com.telenor.connect.id.d` v1 @kind object) @signature `Lcom/telenor/connect/id/c;.b:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/id/d;)Lcom/telenor/connect/id/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eb110.  v0.`com.telenor.connect.id.c.e` @type ^`com.telenor.connect.id.d` := v1 @kind object;
  #L1eb114.  return v1 @kind object;
}
procedure `com.telenor.connect.id.f` `c`(`com.telenor.connect.id.c` v0 @kind object, `com.telenor.connect.id.f` v1 @kind object) @signature `Lcom/telenor/connect/id/c;.c:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/id/f;)Lcom/telenor/connect/id/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eb158.  v0.`com.telenor.connect.id.c.f` @type ^`com.telenor.connect.id.f` := v1 @kind object;
  #L1eb15c.  return v1 @kind object;
}
procedure `void` `d`(`com.telenor.connect.id.c` v0 @kind object) @signature `Lcom/telenor/connect/id/c;.d:(Lcom/telenor/connect/id/c;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1eb1f4.  call `e`(v0) @signature `Lcom/telenor/connect/id/c;.e:()V` @kind direct;
  #L1eb1fa.  return @kind void;
}
procedure `void` `e`(`com.telenor.connect.id.c` v1 @kind this) @signature `Lcom/telenor/connect/id/c;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1eb20c.  v0:= v1.`com.telenor.connect.id.c.b` @type ^`com.telenor.connect.id.ConnectStore` @kind object;
  #L1eb210.  call `a`(v0) @signature `Lcom/telenor/connect/id/ConnectStore;.a:()V` @kind virtual;
  #L1eb216.  v0:= 0I;
  #L1eb218.  v1.`com.telenor.connect.id.c.e` @type ^`com.telenor.connect.id.d` := v0 @kind object;
  #L1eb21c.  v1.`com.telenor.connect.id.c.f` @type ^`com.telenor.connect.id.f` := v0 @kind object;
  #L1eb220.  v0:= 0I;
  #L1eb222.  call `b`(v0) @signature `Lcom/telenor/connect/utils/b;.b:(Z)V` @kind static;
  #L1eb228.  return @kind void;
}
procedure `com.telenor.connect.id.d` `i`(`com.telenor.connect.id.c` v1 @kind this) @signature `Lcom/telenor/connect/id/c;.i:()Lcom/telenor/connect/id/d;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1eb128.  v0:= v1.`com.telenor.connect.id.c.e` @type ^`com.telenor.connect.id.d` @kind object;
  #L1eb12c.  if v0 != 0 then goto L1eb140;
  #L1eb130.  v0:= v1.`com.telenor.connect.id.c.b` @type ^`com.telenor.connect.id.ConnectStore` @kind object;
  #L1eb134.  call temp:= `e`(v0) @signature `Lcom/telenor/connect/id/ConnectStore;.e:()Lcom/telenor/connect/id/d;` @kind virtual;
  #L1eb13a.  v0:= temp @kind object;
  #L1eb13c.  v1.`com.telenor.connect.id.c.e` @type ^`com.telenor.connect.id.d` := v0 @kind object;
  #L1eb140.  v0:= v1.`com.telenor.connect.id.c.e` @type ^`com.telenor.connect.id.d` @kind object;
  #L1eb144.  return v0 @kind object;
}
procedure `java.lang.String` `f`(`com.telenor.connect.id.c` v1 @kind this) @signature `Lcom/telenor/connect/id/c;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb1a0.  call temp:= `i`(v1) @signature `Lcom/telenor/connect/id/c;.i:()Lcom/telenor/connect/id/d;` @kind direct;
  #L1eb1a6.  v0:= temp @kind object;
  #L1eb1a8.  if v0 != 0 then goto L1eb1b0;
  #L1eb1ac.  v0:= 0I;
  #L1eb1ae.  return v0 @kind object;
  #L1eb1b0.  call temp:= `a`(v0) @signature `Lcom/telenor/connect/id/d;.a:()Ljava/lang/String;` @kind virtual;
  #L1eb1b6.  v0:= temp @kind object;
  #L1eb1b8.  return v0 @kind object;
}
procedure `void` `g`(`com.telenor.connect.id.c` v4 @kind this, `java.lang.String` v5 @kind object, `com.telenor.connect.a` v6 @kind object) @signature `Lcom/telenor/connect/id/c;.g:(Ljava/lang/String;Lcom/telenor/connect/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eb23c.  v0:= v4.`com.telenor.connect.id.c.a` @type ^`com.telenor.connect.id.ConnectAPI` @kind object;
  #L1eb240.  v1:= v4.`com.telenor.connect.id.c.c` @type ^`java.lang.String` @kind object;
  #L1eb244.  v2:= v4.`com.telenor.connect.id.c.d` @type ^`java.lang.String` @kind object;
  #L1eb248.  v3:= "authorization_code" @kind object;
  #L1eb24c.  call temp:= `getAccessTokens`(v0, v3, v5, v1, v2) @signature `Lcom/telenor/connect/id/ConnectAPI;.getAccessTokens:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lretrofit2/Call;` @kind interface;
  #L1eb252.  v5:= temp @kind object;
  #L1eb254.  v0:= new `com.telenor.connect.id.b`;
  #L1eb258.  call `<init>`(v0, v4, v6) @signature `Lcom/telenor/connect/id/b;.<init>:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/a;)V` @kind direct;
  #L1eb25e.  call `enqueue`(v5, v0) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L1eb264.  return @kind void;
}
procedure `com.telenor.connect.id.f` `h`(`com.telenor.connect.id.c` v1 @kind this) @signature `Lcom/telenor/connect/id/c;.h:()Lcom/telenor/connect/id/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb170.  v0:= v1.`com.telenor.connect.id.c.f` @type ^`com.telenor.connect.id.f` @kind object;
  #L1eb174.  if v0 != 0 then goto L1eb188;
  #L1eb178.  v0:= v1.`com.telenor.connect.id.c.b` @type ^`com.telenor.connect.id.ConnectStore` @kind object;
  #L1eb17c.  call temp:= `f`(v0) @signature `Lcom/telenor/connect/id/ConnectStore;.f:()Lcom/telenor/connect/id/f;` @kind virtual;
  #L1eb182.  v0:= temp @kind object;
  #L1eb184.  v1.`com.telenor.connect.id.c.f` @type ^`com.telenor.connect.id.f` := v0 @kind object;
  #L1eb188.  v0:= v1.`com.telenor.connect.id.c.f` @type ^`com.telenor.connect.id.f` @kind object;
  #L1eb18c.  return v0 @kind object;
}
