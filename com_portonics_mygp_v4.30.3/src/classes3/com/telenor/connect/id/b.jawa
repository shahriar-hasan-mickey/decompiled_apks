record `com.telenor.connect.id.b` @kind class @AccessFlag  extends `retrofit2.Callback` @kind interface {
  `com.telenor.connect.a` `com.telenor.connect.id.b.b` @AccessFlag FINAL_SYNTHETIC;
  `com.telenor.connect.id.c` `com.telenor.connect.id.b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.telenor.connect.id.b` v0 @kind this, `com.telenor.connect.id.c` v1 @kind object, `com.telenor.connect.a` v2 @kind object) @signature `Lcom/telenor/connect/id/b;.<init>:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1eafd0.  v0.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` := v1 @kind object;
  #L1eafd4.  v0.`com.telenor.connect.id.b.b` @type ^`com.telenor.connect.a` := v2 @kind object;
  #L1eafd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1eafde.  return @kind void;
}
procedure `void` `onFailure`(`com.telenor.connect.id.b` v1 @kind this, `retrofit2.Call` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lcom/telenor/connect/id/b;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eaff0.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eaff4.  call `d`(v2) @signature `Lcom/telenor/connect/id/c;.d:(Lcom/telenor/connect/id/c;)V` @kind static;
  #L1eaffa.  v2:= v1.`com.telenor.connect.id.b.b` @type ^`com.telenor.connect.a` @kind object;
  #L1eaffe.  if v2 == 0 then goto L1eb028;
  #L1eb002.  v2:= new `java.util.HashMap`;
  #L1eb006.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1eb00c.  call temp:= `toString`(v3) @signature `Ljava/lang/Throwable;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eb012.  v3:= temp @kind object;
  #L1eb014.  v0:= "error" @kind object;
  #L1eb018.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1eb01e.  v3:= v1.`com.telenor.connect.id.b.b` @type ^`com.telenor.connect.a` @kind object;
  #L1eb022.  call `b`(v3, v2) @signature `Lcom/telenor/connect/a;.b:(Ljava/lang/Object;)V` @kind interface;
  #L1eb028.  return @kind void;
}
procedure `void` `onResponse`(`com.telenor.connect.id.b` v1 @kind this, `retrofit2.Call` v2 @kind object, `retrofit2.Response` v3 @kind object) @signature `Lcom/telenor/connect/id/b;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eb03c.  call temp:= `isSuccessful`(v3) @signature `Lretrofit2/Response;.isSuccessful:()Z` @kind virtual;
  #L1eb042.  v2:= temp;
  #L1eb044.  if v2 == 0 then goto L1eb0c6;
  #L1eb048.  call temp:= `headers`(v3) @signature `Lretrofit2/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1eb04e.  v2:= temp @kind object;
  #L1eb050.  call temp:= `a`(v2) @signature `Lcom/telenor/connect/utils/d;.a:(Lokhttp3/Headers;)Ljava/util/Date;` @kind static;
  #L1eb056.  v2:= temp @kind object;
  #L1eb058.  v0:= new `com.telenor.connect.id.d`;
  #L1eb05c.  call temp:= `body`(v3) @signature `Lretrofit2/Response;.body:()Ljava/lang/Object;` @kind virtual;
  #L1eb062.  v3:= temp @kind object;
  #L1eb064.  v3:= (`com.telenor.connect.id.e`) v3 @kind object;
  #L1eb068.  call `<init>`(v0, v3, v2) @signature `Lcom/telenor/connect/id/d;.<init>:(Lcom/telenor/connect/id/e;Ljava/util/Date;)V` @kind direct;
  #L1eb06e.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eb072.  call temp:= `a`(v2) @signature `Lcom/telenor/connect/id/c;.a:(Lcom/telenor/connect/id/c;)Lcom/telenor/connect/id/ConnectStore;` @kind static;
  #L1eb078.  v2:= temp @kind object;
  #L1eb07a.  call `h`(v2, v0) @signature `Lcom/telenor/connect/id/ConnectStore;.h:(Lcom/telenor/connect/id/d;)V` @kind virtual;
  #L1eb080.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eb084.  call temp:= `a`(v2) @signature `Lcom/telenor/connect/id/c;.a:(Lcom/telenor/connect/id/c;)Lcom/telenor/connect/id/ConnectStore;` @kind static;
  #L1eb08a.  v2:= temp @kind object;
  #L1eb08c.  call `b`(v2) @signature `Lcom/telenor/connect/id/ConnectStore;.b:()V` @kind virtual;
  #L1eb092.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eb096.  call temp:= `b`(v2, v0) @signature `Lcom/telenor/connect/id/c;.b:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/id/d;)Lcom/telenor/connect/id/d;` @kind static;
  #L1eb09c.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eb0a0.  call temp:= `b`(v0) @signature `Lcom/telenor/connect/id/d;.b:()Lcom/telenor/connect/id/f;` @kind virtual;
  #L1eb0a6.  v3:= temp @kind object;
  #L1eb0a8.  call temp:= `c`(v2, v3) @signature `Lcom/telenor/connect/id/c;.c:(Lcom/telenor/connect/id/c;Lcom/telenor/connect/id/f;)Lcom/telenor/connect/id/f;` @kind static;
  #L1eb0ae.  v2:= 1I;
  #L1eb0b0.  call `b`(v2) @signature `Lcom/telenor/connect/utils/b;.b:(Z)V` @kind static;
  #L1eb0b6.  v2:= v1.`com.telenor.connect.id.b.b` @type ^`com.telenor.connect.a` @kind object;
  #L1eb0ba.  if v2 == 0 then goto L1eb0e6;
  #L1eb0be.  call `onSuccess`(v2, v0) @signature `Lcom/telenor/connect/a;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L1eb0c4.  goto L1eb0e6;
  #L1eb0c6.  v2:= v1.`com.telenor.connect.id.b.c` @type ^`com.telenor.connect.id.c` @kind object;
  #L1eb0ca.  call `d`(v2) @signature `Lcom/telenor/connect/id/c;.d:(Lcom/telenor/connect/id/c;)V` @kind static;
  #L1eb0d0.  v2:= v1.`com.telenor.connect.id.b.b` @type ^`com.telenor.connect.a` @kind object;
  #L1eb0d4.  if v2 == 0 then goto L1eb0e6;
  #L1eb0d8.  call temp:= `errorBody`(v3) @signature `Lretrofit2/Response;.errorBody:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1eb0de.  v3:= temp @kind object;
  #L1eb0e0.  call `b`(v2, v3) @signature `Lcom/telenor/connect/a;.b:(Ljava/lang/Object;)V` @kind interface;
  #L1eb0e6.  return @kind void;
}
