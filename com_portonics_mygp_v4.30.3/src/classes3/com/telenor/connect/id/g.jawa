record `com.telenor.connect.id.g` @kind class @AccessFlag PUBLIC extends `com.telenor.connect.a` @kind interface {
  `com.telenor.connect.a` `com.telenor.connect.id.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.telenor.connect.id.g` v0 @kind this, `com.telenor.connect.a` v1 @kind object) @signature `Lcom/telenor/connect/id/g;.<init>:(Lcom/telenor/connect/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1eba54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1eba5a.  v0.`com.telenor.connect.id.g.b` @type ^`com.telenor.connect.a` := v1 @kind object;
  #L1eba5e.  return @kind void;
}
procedure `void` `b`(`com.telenor.connect.id.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/telenor/connect/id/g;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1eba70.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eba76.  v0:= v1.`com.telenor.connect.id.g.b` @type ^`com.telenor.connect.a` @kind object;
  #L1eba7a.  call `b`(v0, v2) @signature `Lcom/telenor/connect/a;.b:(Ljava/lang/Object;)V` @kind interface;
  #L1eba80.  return @kind void;
}
procedure `void` `onSuccess`(`com.telenor.connect.id.g` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/telenor/connect/id/g;.onSuccess:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1eba94.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eba9a.  v0:= temp @kind object;
  #L1eba9c.  v1:= "auth reponse" @kind object;
  #L1ebaa0.  call `b`(v0, v1) @signature `Lcom/telenor/connect/utils/g;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1ebaa6.  v0:= v3 @kind object;
  #L1ebaa8.  v0:= (`java.util.Map`) v0 @kind object;
  #L1ebaac.  call temp:= `P`() @signature `Lcom/telenor/connect/i;.P:()Z` @kind static;
  #L1ebab2.  v1:= temp;
  #L1ebab4.  if v1 == 0 then goto L1ebac4;
  #L1ebab8.  v0:= v2.`com.telenor.connect.id.g.b` @type ^`com.telenor.connect.a` @kind object;
  #L1ebabc.  call `onSuccess`(v0, v3) @signature `Lcom/telenor/connect/a;.onSuccess:(Ljava/lang/Object;)V` @kind interface;
  #L1ebac2.  goto L1ebade;
  #L1ebac4.  v3:= "code" @kind object;
  #L1ebac8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ebace.  v3:= temp @kind object;
  #L1ebad0.  v3:= (`java.lang.String`) v3 @kind object;
  #L1ebad4.  v0:= v2.`com.telenor.connect.id.g.b` @type ^`com.telenor.connect.a` @kind object;
  #L1ebad8.  call `o`(v3, v0) @signature `Lcom/telenor/connect/i;.o:(Ljava/lang/String;Lcom/telenor/connect/a;)V` @kind static;
  #L1ebade.  return @kind void;
}
