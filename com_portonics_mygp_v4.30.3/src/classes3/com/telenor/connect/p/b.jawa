record `com.telenor.connect.p.b` @kind class @AccessFlag PUBLIC {
  `com.telenor.connect.ui.j` `com.telenor.connect.p.b.d` @AccessFlag PRIVATE_FINAL;
}
global `com.google.gson.j` `@@com.telenor.connect.p.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.reflect.Type` `@@com.telenor.connect.p.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@com.telenor.connect.p.b.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/telenor/connect/p/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ebba8.  v0:= new `com.google.gson.k`;
  #L1ebbac.  call `<init>`(v0) @signature `Lcom/google/gson/k;.<init>:()V` @kind direct;
  #L1ebbb2.  v1:= `@@com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES` @type ^`com.google.gson.FieldNamingPolicy` @kind object;
  #L1ebbb6.  call temp:= `e`(v0, v1) @signature `Lcom/google/gson/k;.e:(Lcom/google/gson/FieldNamingPolicy;)Lcom/google/gson/k;` @kind virtual;
  #L1ebbbc.  v0:= temp @kind object;
  #L1ebbbe.  call temp:= `b`(v0) @signature `Lcom/google/gson/k;.b:()Lcom/google/gson/j;` @kind virtual;
  #L1ebbc4.  v0:= temp @kind object;
  #L1ebbc6.  `@@com.telenor.connect.p.b.a` @type ^`com.google.gson.j` := v0 @kind object;
  #L1ebbca.  v0:= new `com.telenor.connect.p.a`;
  #L1ebbce.  call `<init>`(v0) @signature `Lcom/telenor/connect/p/a;.<init>:()V` @kind direct;
  #L1ebbd4.  call temp:= `getType`(v0) @signature `Lcom/google/gson/a0/a;.getType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1ebbda.  v0:= temp @kind object;
  #L1ebbdc.  `@@com.telenor.connect.p.b.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L1ebbe0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1ebbe6.  v0:= temp @kind object;
  #L1ebbe8.  `@@com.telenor.connect.p.b.c` @type ^`java.util.List` := v0 @kind object;
  #L1ebbec.  return @kind void;
}
procedure `void` `<init>`(`com.telenor.connect.p.b` v0 @kind this, `com.telenor.connect.ui.j` v1 @kind object) @signature `Lcom/telenor/connect/p/b;.<init>:(Lcom/telenor/connect/ui/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ebc00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ebc06.  v0.`com.telenor.connect.p.b.d` @type ^`com.telenor.connect.ui.j` := v1 @kind object;
  #L1ebc0a.  return @kind void;
}
procedure `boolean` `a`(`java.util.List` v1 @kind object) @signature `Lcom/telenor/connect/p/b;.a:(Ljava/util/List;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ebb08.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ebb0e.  v1:= temp @kind object;
  #L1ebb10.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ebb16.  v0:= temp;
  #L1ebb18.  if v0 != 0 then goto L1ebb20;
  #L1ebb1c.  v1:= 1I;
  #L1ebb1e.  return v1;
  #L1ebb20.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ebb26.  v1:= temp @kind object;
  #L1ebb28.  v1:= (`com.telenor.connect.ui.i`) v1 @kind object;
  #L1ebb2c.  v1:= 0I;
  #L1ebb2e.  throw v1;
}
procedure `java.util.List` `b`(`java.lang.String` v2 @kind object) @signature `Lcom/telenor/connect/p/b;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ebb40.  if v2 == 0 then goto L1ebb80;
  #L1ebb44.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1ebb4a.  v0:= temp;
  #L1ebb4c.  if v0 == 0 then goto L1ebb52;
  #L1ebb50.  goto L1ebb80;
  #L1ebb52.  v0:= `@@com.telenor.connect.p.b.a` @type ^`com.google.gson.j` @kind object;
  #L1ebb56.  v1:= `@@com.telenor.connect.p.b.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1ebb5a.  call temp:= `j`(v0, v2, v1) @signature `Lcom/google/gson/j;.j:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L1ebb60.  v2:= temp @kind object;
  #L1ebb62.  v2:= (`java.util.List`) v2 @kind object;
  #L1ebb66.  call temp:= `a`(v2) @signature `Lcom/telenor/connect/p/b;.a:(Ljava/util/List;)Z` @kind static;
  #L1ebb6c.  v0:= temp;
  #L1ebb6e.  if v0 == 0 then goto L1ebb74;
  #L1ebb72.  goto L1ebb78;
  #L1ebb74.  v2:= `@@com.telenor.connect.p.b.c` @type ^`java.util.List` @kind object;
  #L1ebb78.  return v2 @kind object;
  #L1ebb7a.  v2:= `@@com.telenor.connect.p.b.c` @type ^`java.util.List` @kind object;
  #L1ebb7e.  return v2 @kind object;
  #L1ebb80.  v2:= `@@com.telenor.connect.p.b.c` @type ^`java.util.List` @kind object;
  #L1ebb84.  return v2 @kind object;
  catch `com.google.gson.JsonSyntaxException` @[L1ebb52..L1ebb66] goto L1ebb7a;
}
procedure `void` `processInstructions`(`com.telenor.connect.p.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/telenor/connect/p/b;.processInstructions:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ebc1c.  call temp:= `b`(v2) @signature `Lcom/telenor/connect/p/b;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1ebc22.  v2:= temp @kind object;
  #L1ebc24.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1ebc2a.  v0:= temp;
  #L1ebc2c.  if v0 != 0 then goto L1ebc3a;
  #L1ebc30.  v0:= v1.`com.telenor.connect.p.b.d` @type ^`com.telenor.connect.ui.j` @kind object;
  #L1ebc34.  call `b`(v0, v2) @signature `Lcom/telenor/connect/ui/j;.b:(Ljava/util/List;)V` @kind interface;
  #L1ebc3a.  return @kind void;
}
