record `com.telenor.connect.o.i` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `boolean` `@@com.telenor.connect.o.i.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@com.telenor.connect.o.i.b` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@com.telenor.connect.o.i.c` @AccessFlag PRIVATE_STATIC;
global `com.telenor.connect.o.j` `@@com.telenor.connect.o.i.d` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@com.telenor.connect.o.i.e` @AccessFlag PRIVATE_STATIC;
global `com.telenor.connect.o.k` `@@com.telenor.connect.o.i.f` @AccessFlag PRIVATE_STATIC;
global `android.net.ConnectivityManager` `@@com.telenor.connect.o.i.g` @AccessFlag PRIVATE_STATIC;
global `android.net.Network` `@@com.telenor.connect.o.i.h` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `android.net.Network` `@@com.telenor.connect.o.i.i` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@com.telenor.connect.o.i.j` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/telenor/connect/o/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ea938.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1ea93c.  v1:= 1I;
  #L1ea93e.  v2:= 0I;
  #L1ea940.  v3:= 21I;
  #L1ea944.  if v0 >= v3 then goto L1ea94c;
  #L1ea948.  v0:= 1I;
  #L1ea94a.  goto L1ea94e;
  #L1ea94c.  v0:= 0I;
  #L1ea94e.  `@@com.telenor.connect.o.i.a` @type ^`boolean` := v0 @kind boolean;
  #L1ea952.  `@@com.telenor.connect.o.i.b` @type ^`boolean` := v2 @kind boolean;
  #L1ea956.  `@@com.telenor.connect.o.i.c` @type ^`boolean` := v1 @kind boolean;
  #L1ea95a.  `@@com.telenor.connect.o.i.j` @type ^`int` := v2;
  #L1ea95e.  return @kind void;
}
procedure `void` `A`(`android.net.ConnectivityManager$NetworkCallback` v1 @kind object) @signature `Lcom/telenor/connect/o/i;.A:(Landroid/net/ConnectivityManager$NetworkCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1eac44.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1eac48.  call `unregisterNetworkCallback`(v0, v1) @signature `Landroid/net/ConnectivityManager;.unregisterNetworkCallback:(Landroid/net/ConnectivityManager$NetworkCallback;)V` @kind virtual;
  #L1eac4e.  goto L1eac56;
  #L1eac50.  v1:= 0I;
  #L1eac52.  `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` := v1 @kind object;
  #L1eac56.  return @kind void;
  catch `java.lang.SecurityException` @[L1eac44..L1eac4e] goto L1eac50;
}
procedure `android.net.Network` `a`(`android.net.Network` v0 @kind object) @signature `Lcom/telenor/connect/o/i;.a:(Landroid/net/Network;)Landroid/net/Network;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea6b4.  `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` := v0 @kind object;
  #L1ea6b8.  return v0 @kind object;
}
procedure `boolean` `b`(`com.telenor.connect.id.IdProvider` v0 @kind object, `boolean` v1 , `java.lang.String` v2 @kind object) @signature `Lcom/telenor/connect/o/i;.b:(Lcom/telenor/connect/id/IdProvider;ZLjava/lang/String;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea7a0.  call temp:= `t`(v0, v1, v2) @signature `Lcom/telenor/connect/o/i;.t:(Lcom/telenor/connect/id/IdProvider;ZLjava/lang/String;)Z` @kind static;
  #L1ea7a6.  v0:= temp;
  #L1ea7a8.  return v0;
}
procedure `boolean` `c`(`boolean` v0 ) @signature `Lcom/telenor/connect/o/i;.c:(Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea7bc.  `@@com.telenor.connect.o.i.e` @type ^`boolean` := v0 @kind boolean;
  #L1ea7c0.  return v0;
}
procedure `void` `d`(`com.telenor.connect.o.k` v0 @kind object) @signature `Lcom/telenor/connect/o/i;.d:(Lcom/telenor/connect/o/k;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea970.  call `q`(v0) @signature `Lcom/telenor/connect/o/i;.q:(Lcom/telenor/connect/o/k;)V` @kind static;
  #L1ea976.  return @kind void;
}
procedure `android.net.Network` `e`(`android.net.Network` v0 @kind object) @signature `Lcom/telenor/connect/o/i;.e:(Landroid/net/Network;)Landroid/net/Network;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea6cc.  `@@com.telenor.connect.o.i.i` @type ^`android.net.Network` := v0 @kind object;
  #L1ea6d0.  return v0 @kind object;
}
procedure `com.telenor.connect.o.j` `f`(`com.telenor.connect.o.j` v0 @kind object) @signature `Lcom/telenor/connect/o/i;.f:(Lcom/telenor/connect/o/j;)Lcom/telenor/connect/o/j;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1ea8f0.  `@@com.telenor.connect.o.i.d` @type ^`com.telenor.connect.o.j` := v0 @kind object;
  #L1ea8f4.  return v0 @kind object;
}
procedure `void` `g`(`com.telenor.connect.o.m` v0 @kind object, `com.telenor.connect.o.j` v1 @kind object, `com.telenor.connect.o.a` v2 @kind object) @signature `Lcom/telenor/connect/o/i;.g:(Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Lcom/telenor/connect/o/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1ea988.  if v0 == 0 then goto L1ea992;
  #L1ea98c.  call `stop`(v0) @signature `Lcom/telenor/connect/o/m;.stop:()V` @kind interface;
  #L1ea992.  if v2 == 0 then goto L1ea99c;
  #L1ea996.  call `dismiss`(v2) @signature `Lcom/telenor/connect/o/a;.dismiss:()V` @kind interface;
  #L1ea99c.  call `a`(v1) @signature `Lcom/telenor/connect/o/j;.a:()V` @kind interface;
  #L1ea9a2.  return @kind void;
}
procedure `boolean` `h`() @signature `Lcom/telenor/connect/o/i;.h:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea7d4.  v0:= `@@com.telenor.connect.o.i.c` @type ^`boolean` @kind boolean;
  #L1ea7d8.  if v0 == 0 then goto L1ea7ea;
  #L1ea7dc.  v0:= `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` @kind object;
  #L1ea7e0.  if v0 != 0 then goto L1ea7e6;
  #L1ea7e4.  goto L1ea7ea;
  #L1ea7e6.  v0:= 0I;
  #L1ea7e8.  goto L1ea7ec;
  #L1ea7ea.  v0:= 1I;
  #L1ea7ec.  return v0;
}
procedure `android.net.NetworkInfo` `i`() @signature `Lcom/telenor/connect/o/i;.i:()Landroid/net/NetworkInfo;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea714.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1ea718.  if v0 != 0 then goto L1ea720;
  #L1ea71c.  v0:= 0I;
  #L1ea71e.  return v0 @kind object;
  #L1ea720.  call temp:= `getActiveNetworkInfo`(v0) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L1ea726.  v0:= temp @kind object;
  #L1ea728.  return v0 @kind object;
}
procedure `android.net.Network` `j`() @signature `Lcom/telenor/connect/o/i;.j:()Landroid/net/Network;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea6e4.  v0:= `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` @kind object;
  #L1ea6e8.  return v0 @kind object;
}
procedure `android.net.NetworkInfo` `k`() @signature `Lcom/telenor/connect/o/i;.k:()Landroid/net/NetworkInfo;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ea73c.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1ea740.  if v0 != 0 then goto L1ea748;
  #L1ea744.  v0:= 0I;
  #L1ea746.  return v0 @kind object;
  #L1ea748.  v1:= 0I;
  #L1ea74a.  call temp:= `getNetworkInfo`(v0, v1) @signature `Landroid/net/ConnectivityManager;.getNetworkInfo:(I)Landroid/net/NetworkInfo;` @kind virtual;
  #L1ea750.  v0:= temp @kind object;
  #L1ea752.  return v0 @kind object;
}
procedure `android.net.NetworkRequest` `l`() @signature `Lcom/telenor/connect/o/i;.l:()Landroid/net/NetworkRequest;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ea764.  v0:= new `android.net.NetworkRequest$Builder`;
  #L1ea768.  call `<init>`(v0) @signature `Landroid/net/NetworkRequest$Builder;.<init>:()V` @kind direct;
  #L1ea76e.  v1:= 12I;
  #L1ea772.  call temp:= `addCapability`(v0, v1) @signature `Landroid/net/NetworkRequest$Builder;.addCapability:(I)Landroid/net/NetworkRequest$Builder;` @kind virtual;
  #L1ea778.  v0:= temp @kind object;
  #L1ea77a.  v1:= 0I;
  #L1ea77c.  call temp:= `addTransportType`(v0, v1) @signature `Landroid/net/NetworkRequest$Builder;.addTransportType:(I)Landroid/net/NetworkRequest$Builder;` @kind virtual;
  #L1ea782.  v0:= temp @kind object;
  #L1ea784.  call temp:= `build`(v0) @signature `Landroid/net/NetworkRequest$Builder;.build:()Landroid/net/NetworkRequest;` @kind virtual;
  #L1ea78a.  v0:= temp @kind object;
  #L1ea78c.  return v0 @kind object;
}
procedure `android.net.Network` `m`() @signature `Lcom/telenor/connect/o/i;.m:()Landroid/net/Network;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea6fc.  v0:= `@@com.telenor.connect.o.i.i` @type ^`android.net.Network` @kind object;
  #L1ea700.  return v0 @kind object;
}
procedure `com.telenor.connect.o.k` `n`() @signature `Lcom/telenor/connect/o/i;.n:()Lcom/telenor/connect/o/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea908.  v0:= `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` @kind object;
  #L1ea90c.  return v0 @kind object;
}
procedure `int` `o`() @signature `Lcom/telenor/connect/o/i;.o:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ea920.  v0:= `@@com.telenor.connect.o.i.j` @type ^`int`;
  #L1ea924.  return v0;
}
procedure `void` `p`(`java.util.Map` v5 @kind object, `com.telenor.connect.o.m` v6 @kind object, `com.telenor.connect.o.j` v7 @kind object, `java.lang.String` v8 @kind object, `com.telenor.connect.id.IdProvider` v9 @kind object, `boolean` v10 , `com.telenor.connect.o.a` v11 @kind object) @signature `Lcom/telenor/connect/o/i;.p:(Ljava/util/Map;Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Ljava/lang/String;Lcom/telenor/connect/id/IdProvider;ZLcom/telenor/connect/o/a;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ea9b4.  v0:= `@@com.telenor.connect.o.i.c` @type ^`boolean` @kind boolean;
  #L1ea9b8.  v1:= 1I;
  #L1ea9ba.  v2:= 0I;
  #L1ea9bc.  if v0 != 0 then goto L1ea9cc;
  #L1ea9c0.  v0:= `@@com.telenor.connect.o.i.e` @type ^`boolean` @kind boolean;
  #L1ea9c4.  if v0 != 0 then goto L1ea9cc;
  #L1ea9c8.  v0:= 1I;
  #L1ea9ca.  goto L1ea9ce;
  #L1ea9cc.  v0:= 0I;
  #L1ea9ce.  v3:= "prompt" @kind object;
  #L1ea9d2.  call temp:= `containsKey`(v5, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L1ea9d8.  v4:= temp;
  #L1ea9da.  if v4 == 0 then goto L1ea9fa;
  #L1ea9de.  call temp:= `get`(v5, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ea9e4.  v3:= temp @kind object;
  #L1ea9e6.  v4:= "no_seam" @kind object;
  #L1ea9ea.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ea9f0.  v3:= temp;
  #L1ea9f2.  if v3 == 0 then goto L1ea9fa;
  #L1ea9f6.  v3:= 1I;
  #L1ea9f8.  goto L1ea9fc;
  #L1ea9fa.  v3:= 0I;
  #L1ea9fc.  if v0 != 0 then goto L1eaa12;
  #L1eaa00.  if v3 != 0 then goto L1eaa12;
  #L1eaa04.  v0:= `@@com.telenor.connect.o.i.a` @type ^`boolean` @kind boolean;
  #L1eaa08.  if v0 == 0 then goto L1eaa0e;
  #L1eaa0c.  goto L1eaa12;
  #L1eaa0e.  v0:= 0I;
  #L1eaa10.  goto L1eaa14;
  #L1eaa12.  v0:= 1I;
  #L1eaa14.  if v0 == 0 then goto L1eaa20;
  #L1eaa18.  call `g`(v6, v7, v11) @signature `Lcom/telenor/connect/o/i;.g:(Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Lcom/telenor/connect/o/a;)V` @kind static;
  #L1eaa1e.  return @kind void;
  #L1eaa20.  v0:= `@@com.telenor.connect.o.i.e` @type ^`boolean` @kind boolean;
  #L1eaa24.  if v0 == 0 then goto L1eaa30;
  #L1eaa28.  call `z`(v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/telenor/connect/o/i;.z:(Ljava/util/Map;Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Ljava/lang/String;Lcom/telenor/connect/id/IdProvider;ZLcom/telenor/connect/o/a;)V` @kind static;
  #L1eaa2e.  return @kind void;
  #L1eaa30.  v0:= `@@com.telenor.connect.o.i.c` @type ^`boolean` @kind boolean;
  #L1eaa34.  if v0 == 0 then goto L1eaa44;
  #L1eaa38.  v0:= `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` @kind object;
  #L1eaa3c.  if v0 != 0 then goto L1eaa44;
  #L1eaa40.  v0:= 1I;
  #L1eaa42.  goto L1eaa46;
  #L1eaa44.  v0:= 0I;
  #L1eaa46.  v3:= `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` @kind object;
  #L1eaa4a.  if v3 == 0 then goto L1eaa72;
  #L1eaa4e.  v3:= new `java.util.Date`;
  #L1eaa52.  call `<init>`(v3) @signature `Ljava/util/Date;.<init>:()V` @kind direct;
  #L1eaa58.  v4:= `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` @kind object;
  #L1eaa5c.  call temp:= `a`(v4) @signature `Lcom/telenor/connect/o/k;.a:()Ljava/util/Date;` @kind virtual;
  #L1eaa62.  v4:= temp @kind object;
  #L1eaa64.  call temp:= `after`(v3, v4) @signature `Ljava/util/Date;.after:(Ljava/util/Date;)Z` @kind virtual;
  #L1eaa6a.  v3:= temp;
  #L1eaa6c.  if v3 == 0 then goto L1eaa72;
  #L1eaa70.  goto L1eaa74;
  #L1eaa72.  v1:= 0I;
  #L1eaa74.  if v0 != 0 then goto L1eaa86;
  #L1eaa78.  if v1 == 0 then goto L1eaa7e;
  #L1eaa7c.  goto L1eaa86;
  #L1eaa7e.  call `g`(v6, v7, v11) @signature `Lcom/telenor/connect/o/i;.g:(Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Lcom/telenor/connect/o/a;)V` @kind static;
  #L1eaa84.  return @kind void;
  #L1eaa86.  call `z`(v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/telenor/connect/o/i;.z:(Ljava/util/Map;Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Ljava/lang/String;Lcom/telenor/connect/id/IdProvider;ZLcom/telenor/connect/o/a;)V` @kind static;
  #L1eaa8c.  call `y`(v9, v10) @signature `Lcom/telenor/connect/o/i;.y:(Lcom/telenor/connect/id/IdProvider;Z)V` @kind static;
  #L1eaa92.  call temp:= `t`(v9, v10, v8) @signature `Lcom/telenor/connect/o/i;.t:(Lcom/telenor/connect/id/IdProvider;ZLjava/lang/String;)Z` @kind static;
  #L1eaa98.  v5:= temp;
  #L1eaa9a.  if v5 != 0 then goto L1eaaa6;
  #L1eaa9e.  v5:= 0I;
  #L1eaaa0.  call `q`(v5) @signature `Lcom/telenor/connect/o/i;.q:(Lcom/telenor/connect/o/k;)V` @kind static;
  #L1eaaa6.  return @kind void;
}
procedure `void` `q`(`com.telenor.connect.o.k` v1 @kind object) @signature `Lcom/telenor/connect/o/i;.q:(Lcom/telenor/connect/o/k;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1eaab8.  v0:= 0I;
  #L1eaaba.  `@@com.telenor.connect.o.i.e` @type ^`boolean` := v0 @kind boolean;
  #L1eaabe.  `@@com.telenor.connect.o.i.f` @type ^`com.telenor.connect.o.k` := v1 @kind object;
  #L1eaac2.  if v1 == 0 then goto L1eaac8;
  #L1eaac6.  v0:= 1I;
  #L1eaac8.  `@@com.telenor.connect.o.i.c` @type ^`boolean` := v0 @kind boolean;
  #L1eaacc.  v1:= `@@com.telenor.connect.o.i.d` @type ^`com.telenor.connect.o.j` @kind object;
  #L1eaad0.  if v1 == 0 then goto L1eaada;
  #L1eaad4.  call `a`(v1) @signature `Lcom/telenor/connect/o/j;.a:()V` @kind interface;
  #L1eaada.  return @kind void;
}
procedure `void` `r`(`com.telenor.connect.id.IdProvider` v1 @kind object, `boolean` v2 ) @signature `Lcom/telenor/connect/o/i;.r:(Lcom/telenor/connect/id/IdProvider;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1eaaec.  v0:= new `com.telenor.connect.o.e`;
  #L1eaaf0.  call `<init>`(v0, v1, v2) @signature `Lcom/telenor/connect/o/e;.<init>:(Lcom/telenor/connect/id/IdProvider;Z)V` @kind direct;
  #L1eaaf6.  call `x`(v0) @signature `Lcom/telenor/connect/o/i;.x:(Landroid/net/ConnectivityManager$NetworkCallback;)V` @kind static;
  #L1eaafc.  return @kind void;
}
procedure `void` `s`() @signature `Lcom/telenor/connect/o/i;.s:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1eab10.  v0:= new `android.net.NetworkRequest$Builder`;
  #L1eab14.  call `<init>`(v0) @signature `Landroid/net/NetworkRequest$Builder;.<init>:()V` @kind direct;
  #L1eab1a.  v1:= 12I;
  #L1eab1e.  call temp:= `addCapability`(v0, v1) @signature `Landroid/net/NetworkRequest$Builder;.addCapability:(I)Landroid/net/NetworkRequest$Builder;` @kind virtual;
  #L1eab24.  v0:= temp @kind object;
  #L1eab26.  call temp:= `build`(v0) @signature `Landroid/net/NetworkRequest$Builder;.build:()Landroid/net/NetworkRequest;` @kind virtual;
  #L1eab2c.  v0:= temp @kind object;
  #L1eab2e.  v1:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1eab32.  v2:= new `com.telenor.connect.o.g`;
  #L1eab36.  call `<init>`(v2) @signature `Lcom/telenor/connect/o/g;.<init>:()V` @kind direct;
  #L1eab3c.  call `requestNetwork`(v1, v0, v2) @signature `Landroid/net/ConnectivityManager;.requestNetwork:(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;)V` @kind virtual;
  #L1eab42.  goto L1eab4a;
  #L1eab44.  v0:= 0I;
  #L1eab46.  `@@com.telenor.connect.o.i.i` @type ^`android.net.Network` := v0 @kind object;
  #L1eab4a.  return @kind void;
  catch `java.lang.SecurityException` @[L1eab2e..L1eab42] goto L1eab44;
}
procedure `boolean` `t`(`com.telenor.connect.id.IdProvider` v6 @kind object, `boolean` v7 , `java.lang.String` v8 @kind object) @signature `Lcom/telenor/connect/o/i;.t:(Lcom/telenor/connect/id/IdProvider;ZLjava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ea800.  v0:= `@@com.telenor.connect.o.i.b` @type ^`boolean` @kind boolean;
  #L1ea804.  v1:= 1I;
  #L1ea806.  if v0 == 0 then goto L1ea814;
  #L1ea80a.  v2:= `@@com.telenor.connect.o.i.j` @type ^`int`;
  #L1ea80e.  v2:= v2 + v1 @kind int;
  #L1ea810.  `@@com.telenor.connect.o.i.j` @type ^`int` := v2;
  #L1ea814.  v2:= `@@com.telenor.connect.o.i.a` @type ^`boolean` @kind boolean;
  #L1ea818.  v3:= 0I;
  #L1ea81a.  if v2 != 0 then goto L1ea84a;
  #L1ea81e.  if v0 == 0 then goto L1ea824;
  #L1ea822.  goto L1ea84a;
  #L1ea824.  `@@com.telenor.connect.o.i.b` @type ^`boolean` := v1 @kind boolean;
  #L1ea828.  call temp:= `e`(v6, v7, v8) @signature `Lcom/telenor/connect/utils/a;.e:(Lcom/telenor/connect/id/IdProvider;ZLjava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ea82e.  v6:= temp @kind object;
  #L1ea830.  v7:= new `com.telenor.connect.o.f`;
  #L1ea834.  v4:= 10000L;
  #L1ea838.  call `<init>`(v7, v6, v4) @signature `Lcom/telenor/connect/o/f;.<init>:(Ljava/lang/String;J)V` @kind direct;
  #L1ea83e.  v6:= new `java.lang.Void`[v3];
  #L1ea842.  call temp:= `execute`(v7, v6) @signature `Landroid/os/AsyncTask;.execute:([Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L1ea848.  return v1;
  #L1ea84a.  return v3;
}
procedure `void` `u`(`android.content.Context` v1 @kind object) @signature `Lcom/telenor/connect/o/i;.u:(Landroid/content/Context;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1eab6c.  v0:= "connectivity" @kind object;
  #L1eab70.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L1eab76.  v1:= temp @kind object;
  #L1eab78.  v1:= (`android.net.ConnectivityManager`) v1 @kind object;
  #L1eab7c.  `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` := v1 @kind object;
  #L1eab80.  return @kind void;
}
procedure `boolean` `v`() @signature `Lcom/telenor/connect/o/i;.v:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ea85c.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1ea860.  v1:= 0I;
  #L1ea862.  if v0 != 0 then goto L1ea868;
  #L1ea866.  return v1;
  #L1ea868.  v0:= `@@com.telenor.connect.o.i.a` @type ^`boolean` @kind boolean;
  #L1ea86c.  if v0 == 0 then goto L1ea87a;
  #L1ea870.  call temp:= `k`() @signature `Lcom/telenor/connect/o/i;.k:()Landroid/net/NetworkInfo;` @kind static;
  #L1ea876.  v0:= temp @kind object;
  #L1ea878.  goto L1ea894;
  #L1ea87a.  v0:= `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` @kind object;
  #L1ea87e.  if v0 != 0 then goto L1ea884;
  #L1ea882.  return v1;
  #L1ea884.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1ea888.  v2:= `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` @kind object;
  #L1ea88c.  call temp:= `getNetworkInfo`(v0, v2) @signature `Landroid/net/ConnectivityManager;.getNetworkInfo:(Landroid/net/Network;)Landroid/net/NetworkInfo;` @kind virtual;
  #L1ea892.  v0:= temp @kind object;
  #L1ea894.  if v0 == 0 then goto L1ea8a6;
  #L1ea898.  call temp:= `isConnected`(v0) @signature `Landroid/net/NetworkInfo;.isConnected:()Z` @kind virtual;
  #L1ea89e.  v0:= temp;
  #L1ea8a0.  if v0 == 0 then goto L1ea8a6;
  #L1ea8a4.  v1:= 1I;
  #L1ea8a6.  return v1;
}
procedure `boolean` `w`() @signature `Lcom/telenor/connect/o/i;.w:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ea8b8.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1ea8bc.  v1:= 0I;
  #L1ea8be.  if v0 != 0 then goto L1ea8c4;
  #L1ea8c2.  return v1;
  #L1ea8c4.  call temp:= `getActiveNetworkInfo`(v0) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L1ea8ca.  v0:= temp @kind object;
  #L1ea8cc.  if v0 == 0 then goto L1ea8de;
  #L1ea8d0.  call temp:= `getType`(v0) @signature `Landroid/net/NetworkInfo;.getType:()I` @kind virtual;
  #L1ea8d6.  v0:= temp;
  #L1ea8d8.  if v0 != 0 then goto L1ea8de;
  #L1ea8dc.  v1:= 1I;
  #L1ea8de.  return v1;
}
procedure `void` `x`(`android.net.ConnectivityManager$NetworkCallback` v2 @kind object) @signature `Lcom/telenor/connect/o/i;.x:(Landroid/net/ConnectivityManager$NetworkCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1eab94.  call temp:= `l`() @signature `Lcom/telenor/connect/o/i;.l:()Landroid/net/NetworkRequest;` @kind static;
  #L1eab9a.  v0:= temp @kind object;
  #L1eab9c.  v1:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1eaba0.  call `requestNetwork`(v1, v0, v2) @signature `Landroid/net/ConnectivityManager;.requestNetwork:(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;)V` @kind virtual;
  #L1eaba6.  goto L1eabae;
  #L1eaba8.  v2:= 0I;
  #L1eabaa.  `@@com.telenor.connect.o.i.h` @type ^`android.net.Network` := v2 @kind object;
  #L1eabae.  return @kind void;
  catch `java.lang.SecurityException` @[L1eab9c..L1eaba6] goto L1eaba8;
}
procedure `void` `y`(`com.telenor.connect.id.IdProvider` v2 @kind object, `boolean` v3 ) @signature `Lcom/telenor/connect/o/i;.y:(Lcom/telenor/connect/id/IdProvider;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1eabd0.  call `O`() @signature `Lcom/telenor/connect/i;.O:()V` @kind static;
  #L1eabd6.  v0:= `@@com.telenor.connect.o.i.g` @type ^`android.net.ConnectivityManager` @kind object;
  #L1eabda.  if v0 == 0 then goto L1eabee;
  #L1eabde.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1eabe2.  v1:= 21I;
  #L1eabe6.  if v0 < v1 then goto L1eabee;
  #L1eabea.  v0:= 1I;
  #L1eabec.  goto L1eabf0;
  #L1eabee.  v0:= 0I;
  #L1eabf0.  if v0 == 0 then goto L1eac00;
  #L1eabf4.  call `r`(v2, v3) @signature `Lcom/telenor/connect/o/i;.r:(Lcom/telenor/connect/id/IdProvider;Z)V` @kind static;
  #L1eabfa.  call `s`() @signature `Lcom/telenor/connect/o/i;.s:()V` @kind static;
  #L1eac00.  return @kind void;
}
procedure `void` `z`(`java.util.Map` v9 @kind object, `com.telenor.connect.o.m` v10 @kind object, `com.telenor.connect.o.j` v11 @kind object, `java.lang.String` v12 @kind object, `com.telenor.connect.id.IdProvider` v13 @kind object, `boolean` v14 , `com.telenor.connect.o.a` v15 @kind object) @signature `Lcom/telenor/connect/o/i;.z:(Ljava/util/Map;Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Ljava/lang/String;Lcom/telenor/connect/id/IdProvider;ZLcom/telenor/connect/o/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1eac14.  v8:= new `com.telenor.connect.o.h`;
  #L1eac18.  v0:= v8 @kind object;
  #L1eac1a.  v1:= v9 @kind object;
  #L1eac1c.  v2:= v10 @kind object;
  #L1eac1e.  v3:= v11 @kind object;
  #L1eac20.  v4:= v12 @kind object;
  #L1eac22.  v5:= v13 @kind object;
  #L1eac24.  v6:= v14;
  #L1eac26.  v7:= v15 @kind object;
  #L1eac28.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/telenor/connect/o/h;.<init>:(Ljava/util/Map;Lcom/telenor/connect/o/m;Lcom/telenor/connect/o/j;Ljava/lang/String;Lcom/telenor/connect/id/IdProvider;ZLcom/telenor/connect/o/a;)V` @kind direct;
  #L1eac2e.  `@@com.telenor.connect.o.i.d` @type ^`com.telenor.connect.o.j` := v8 @kind object;
  #L1eac32.  return @kind void;
}
