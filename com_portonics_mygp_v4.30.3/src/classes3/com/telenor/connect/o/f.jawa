record `com.telenor.connect.o.f` @kind class @AccessFlag  extends `com.telenor.connect.o.c` @kind class {
}
procedure `void` `<init>`(`com.telenor.connect.o.f` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 ) @signature `Lcom/telenor/connect/o/f;.<init>:(Ljava/lang/String;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ea574.  call `<init>`(v0, v1, v2) @signature `Lcom/telenor/connect/o/c;.<init>:(Ljava/lang/String;J)V` @kind direct;
  #L1ea57a.  return @kind void;
}
procedure `void` `c`(`com.telenor.connect.o.f` v0 @kind this, `com.telenor.connect.o.k` v1 @kind object) @signature `Lcom/telenor/connect/o/f;.c:(Lcom/telenor/connect/o/k;)V` @AccessFlag PROTECTED {
    temp;

  #L1ea58c.  call `d`(v1) @signature `Lcom/telenor/connect/o/i;.d:(Lcom/telenor/connect/o/k;)V` @kind static;
  #L1ea592.  return @kind void;
}
procedure `void` `d`(`com.telenor.connect.o.f` v0 @kind this, `com.telenor.connect.o.k` v1 @kind object) @signature `Lcom/telenor/connect/o/f;.d:(Lcom/telenor/connect/o/k;)V` @AccessFlag PROTECTED {
    temp;

  #L1ea5c0.  call `d`(v1) @signature `Lcom/telenor/connect/o/i;.d:(Lcom/telenor/connect/o/k;)V` @kind static;
  #L1ea5c6.  return @kind void;
}
procedure `void` `onCancelled`(`com.telenor.connect.o.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/telenor/connect/o/f;.onCancelled:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L1ea5a4.  v1:= (`com.telenor.connect.o.k`) v1 @kind object;
  #L1ea5a8.  call `c`(v0, v1) @signature `Lcom/telenor/connect/o/f;.c:(Lcom/telenor/connect/o/k;)V` @kind virtual;
  #L1ea5ae.  return @kind void;
}
procedure `void` `onPostExecute`(`com.telenor.connect.o.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/telenor/connect/o/f;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L1ea5d8.  v1:= (`com.telenor.connect.o.k`) v1 @kind object;
  #L1ea5dc.  call `d`(v0, v1) @signature `Lcom/telenor/connect/o/f;.d:(Lcom/telenor/connect/o/k;)V` @kind virtual;
  #L1ea5e2.  return @kind void;
}
procedure `void` `onPreExecute`(`com.telenor.connect.o.f` v1 @kind this) @signature `Lcom/telenor/connect/o/f;.onPreExecute:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1ea5f4.  v0:= 1I;
  #L1ea5f6.  call temp:= `c`(v0) @signature `Lcom/telenor/connect/o/i;.c:(Z)Z` @kind static;
  #L1ea5fc.  call `onPreExecute`(v1) @signature `Lcom/telenor/connect/o/c;.onPreExecute:()V` @kind super;
  #L1ea602.  return @kind void;
}
