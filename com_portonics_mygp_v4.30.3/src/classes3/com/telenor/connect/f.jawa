record `com.telenor.connect.f` @kind class @AccessFlag  extends `retrofit2.Callback` @kind interface {
}
procedure `void` `<init>`(`com.telenor.connect.f` v0 @kind this) @signature `Lcom/telenor/connect/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e9bec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e9bf2.  return @kind void;
}
procedure `void` `onFailure`(`com.telenor.connect.f` v0 @kind this, `retrofit2.Call` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/telenor/connect/f;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L1e9c04.  call `b0`() @signature `Lcom/telenor/connect/i;.b0:()V` @kind static;
  #L1e9c0a.  return @kind void;
}
procedure `void` `onResponse`(`com.telenor.connect.f` v0 @kind this, `retrofit2.Call` v1 @kind object, `retrofit2.Response` v2 @kind object) @signature `Lcom/telenor/connect/f;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @AccessFlag PUBLIC {
    temp;

  #L1e9c1c.  call temp:= `isSuccessful`(v2) @signature `Lretrofit2/Response;.isSuccessful:()Z` @kind virtual;
  #L1e9c22.  v1:= temp;
  #L1e9c24.  call `b0`() @signature `Lcom/telenor/connect/i;.b0:()V` @kind static;
  #L1e9c2a.  return @kind void;
}
