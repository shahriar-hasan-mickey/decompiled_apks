record `dagger.internal.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Ldagger/internal/f;.a:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L208170.  if v1 == 0 then goto L208176;
  #L208174.  return @kind void;
  #L208176.  v1:= new `java.lang.IllegalStateException`;
  #L20817a.  v0:= new `java.lang.StringBuilder`;
  #L20817e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L208184.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L20818a.  v2:= temp @kind object;
  #L20818c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L208192.  v2:= " must be set" @kind object;
  #L208196.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20819c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2081a2.  v2:= temp @kind object;
  #L2081a4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2081aa.  throw v1;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object) @signature `Ldagger/internal/f;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L208124.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L20812a.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ldagger/internal/f;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L20813c.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L208142.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`java.lang.Object` v1 @kind object) @signature `Ldagger/internal/f;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L208154.  v0:= "Cannot return null from a non-@Nullable @Provides method" @kind object;
  #L208158.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20815e.  return v1 @kind object;
}
