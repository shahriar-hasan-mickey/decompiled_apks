record `me.crosswall.lib.coverflow.core.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `float` `a`(`float` v1 , `android.content.Context` v2 @kind object) @signature `Lme/crosswall/lib/coverflow/core/d;.a:(FLandroid/content/Context;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0b60.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2f0b66.  v2:= temp @kind object;
  #L2f0b68.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L2f0b6e.  v2:= temp @kind object;
  #L2f0b70.  v2:= v2.`android.util.DisplayMetrics.densityDpi` @type ^`int`;
  #L2f0b74.  v2:= (`float`) v2 @kind i2f;
  #L2f0b76.  v0:= 160.0F;
  #L2f0b7a.  v2:= v2 / v0 @kind float;
  #L2f0b7c.  v1:= v1 * v2 @kind float;
  #L2f0b80.  return v1;
}
procedure `float` `b`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lme/crosswall/lib/coverflow/core/d;.b:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2f0b94.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2f0b9a.  v0:= temp;
  #L2f0b9c.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2f0ba2.  v0:= temp;
  #L2f0ba4.  return v0;
}
