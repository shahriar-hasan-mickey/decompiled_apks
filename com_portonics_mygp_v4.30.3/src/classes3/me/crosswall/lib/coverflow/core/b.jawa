record `me.crosswall.lib.coverflow.core.b` @kind class @AccessFlag PUBLIC {
  `float` `me.crosswall.lib.coverflow.core.b.a` @AccessFlag PUBLIC;
  `float` `me.crosswall.lib.coverflow.core.b.b` @AccessFlag PUBLIC;
  `float` `me.crosswall.lib.coverflow.core.b.c` @AccessFlag PUBLIC;
  `float` `me.crosswall.lib.coverflow.core.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`me.crosswall.lib.coverflow.core.b` v1 @kind this, `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lme/crosswall/lib/coverflow/core/b;.<init>:(FFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f0778.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f077e.  v0:= 0I;
  #L2f0780.  v1.`me.crosswall.lib.coverflow.core.b.a` @type ^`float` := v0;
  #L2f0784.  v1.`me.crosswall.lib.coverflow.core.b.b` @type ^`float` := v0;
  #L2f0788.  v1.`me.crosswall.lib.coverflow.core.b.c` @type ^`float` := v0;
  #L2f078c.  v1.`me.crosswall.lib.coverflow.core.b.d` @type ^`float` := v0;
  #L2f0790.  v1.`me.crosswall.lib.coverflow.core.b.a` @type ^`float` := v2;
  #L2f0794.  v1.`me.crosswall.lib.coverflow.core.b.b` @type ^`float` := v3;
  #L2f0798.  v1.`me.crosswall.lib.coverflow.core.b.c` @type ^`float` := v4;
  #L2f079c.  v1.`me.crosswall.lib.coverflow.core.b.d` @type ^`float` := v5;
  #L2f07a0.  return @kind void;
}
