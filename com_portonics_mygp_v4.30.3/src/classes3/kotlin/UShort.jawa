record `kotlin.UShort` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `short` `kotlin.UShort.data` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.UShort$Companion` `@@kotlin.UShort.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@kotlin.UShort.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `short` `@@kotlin.UShort.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UShort.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.UShort.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/UShort;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29dadc.  v0:= new `kotlin.UShort$Companion`;
  #L29dae0.  v1:= 0I;
  #L29dae2.  call `<init>`(v0, v1) @signature `Lkotlin/UShort$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L29dae8.  `@@kotlin.UShort.Companion` @type ^`kotlin.UShort$Companion` := v0 @kind object;
  #L29daec.  return @kind void;
}
procedure `void` `<init>`(`kotlin.UShort` v0 @kind this, `short` v1 ) @signature `Lkotlin/UShort;.<init>:(S)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L29db00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29db06.  v0.`kotlin.UShort.data` @type ^`short` := v1 @kind char;
  #L29db0a.  return @kind void;
}
procedure `short` `and-xj2QHRw`(`short` v0 , `short` v1 ) @signature `Lkotlin/UShort;.and-xj2QHRw:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d988.  v0:= v0 ^& v1 @kind int;
  #L29d98a.  v0:= (`short`) v0 @kind i2s;
  #L29d98c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d992.  v0:= temp;
  #L29d994.  return v0;
}
procedure `kotlin.UShort` `box-impl`(`short` v1 ) @signature `Lkotlin/UShort;.box-impl:(S)Lkotlin/UShort;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L29d7b4.  v0:= new `kotlin.UShort`;
  #L29d7b8.  call `<init>`(v0, v1) @signature `Lkotlin/UShort;.<init>:(S)V` @kind direct;
  #L29d7be.  return v0 @kind object;
}
procedure `int` `compareTo-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.compareTo-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d25c.  v0:= 65535I;
  #L29d262.  v1:= v1 ^& v0 @kind int;
  #L29d264.  v2:= v2 ^& 255;
  #L29d268.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L29d26e.  v1:= temp;
  #L29d270.  return v1;
}
procedure `int` `compareTo-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.compareTo-VKZWuLQ:(SJ)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d284.  v0:= (`long`) v4 @kind i2l;
  #L29d286.  v2:= 65535L;
  #L29d28c.  v0:= v0 ^& v2 @kind long;
  #L29d28e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d294.  v0:= temp @kind wide;
  #L29d296.  call temp:= `ulongCompare`(v0, v5) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L29d29c.  v4:= temp;
  #L29d29e.  return v4;
}
procedure `int` `compareTo-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.compareTo-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d2b0.  v0:= 65535I;
  #L29d2b6.  v1:= v1 ^& v0 @kind int;
  #L29d2b8.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d2be.  v1:= temp;
  #L29d2c0.  call temp:= `uintCompare`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L29d2c6.  v1:= temp;
  #L29d2c8.  return v1;
}
procedure `int` `compareTo-xj2QHRw`(`kotlin.UShort` v2 @kind this, `short` v3 ) @signature `Lkotlin/UShort;.compareTo-xj2QHRw:(S)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L29d2dc.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L29d2e2.  v0:= temp;
  #L29d2e4.  v1:= 65535I;
  #L29d2ea.  v0:= v0 ^& v1 @kind int;
  #L29d2ec.  v3:= v3 ^& v1 @kind int;
  #L29d2ee.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L29d2f4.  v3:= temp;
  #L29d2f6.  return v3;
}
procedure `int` `compareTo-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.compareTo-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L29d308.  v0:= 65535I;
  #L29d30e.  v1:= v1 ^& v0 @kind int;
  #L29d310.  v2:= v2 ^& v0 @kind int;
  #L29d312.  call temp:= `compare`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L29d318.  v1:= temp;
  #L29d31a.  return v1;
}
procedure `short` `constructor-impl`(`short` v0 ) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;

  #L29d9a8.  return v0;
}
procedure `short` `dec-Mh2AYeg`(`short` v0 ) @signature `Lkotlin/UShort;.dec-Mh2AYeg:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d9bc.  v0:= v0 + -1;
  #L29d9c0.  v0:= (`short`) v0 @kind i2s;
  #L29d9c2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d9c8.  v0:= temp;
  #L29d9ca.  return v0;
}
procedure `int` `div-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.div-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d32c.  v0:= 65535I;
  #L29d332.  v1:= v1 ^& v0 @kind int;
  #L29d334.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d33a.  v1:= temp;
  #L29d33c.  v2:= v2 ^& 255;
  #L29d340.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d346.  v2:= temp;
  #L29d348.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d34e.  v1:= temp;
  #L29d350.  return v1;
}
procedure `long` `div-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.div-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d808.  v0:= (`long`) v4 @kind i2l;
  #L29d80a.  v2:= 65535L;
  #L29d810.  v0:= v0 ^& v2 @kind long;
  #L29d812.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d818.  v0:= temp @kind wide;
  #L29d81a.  call temp:= `ulongDivide-eb3DHEI`(v0, v5) @signature `Lkotlin/UnsignedKt;.ulongDivide-eb3DHEI:(JJ)J` @kind static;
  #L29d820.  v4:= temp @kind wide;
  #L29d822.  return v4 @kind wide;
}
procedure `int` `div-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.div-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d364.  v0:= 65535I;
  #L29d36a.  v1:= v1 ^& v0 @kind int;
  #L29d36c.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d372.  v1:= temp;
  #L29d374.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d37a.  v1:= temp;
  #L29d37c.  return v1;
}
procedure `int` `div-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.div-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d390.  v0:= 65535I;
  #L29d396.  v1:= v1 ^& v0 @kind int;
  #L29d398.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d39e.  v1:= temp;
  #L29d3a0.  v2:= v2 ^& v0 @kind int;
  #L29d3a2.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d3a8.  v2:= temp;
  #L29d3aa.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d3b0.  v1:= temp;
  #L29d3b2.  return v1;
}
procedure `boolean` `equals-impl`(`short` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/UShort;.equals-impl:(SLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L29d12c.  v0:= instanceof @variable v3 @type ^`kotlin.UShort` @kind boolean;
  #L29d130.  v1:= 0I;
  #L29d132.  if v0 != 0 then goto L29d138;
  #L29d136.  return v1;
  #L29d138.  v3:= (`kotlin.UShort`) v3 @kind object;
  #L29d13c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L29d142.  v3:= temp;
  #L29d144.  if v2 == v3 then goto L29d14a;
  #L29d148.  return v1;
  #L29d14a.  v2:= 1I;
  #L29d14c.  return v2;
}
procedure `boolean` `equals-impl0`(`short` v0 , `short` v1 ) @signature `Lkotlin/UShort;.equals-impl0:(SS)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L29d160.  if v0 != v1 then goto L29d168;
  #L29d164.  v0:= 1I;
  #L29d166.  goto L29d16a;
  #L29d168.  v0:= 0I;
  #L29d16a.  return v0;
}
procedure `int` `floorDiv-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.floorDiv-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d3c4.  v0:= 65535I;
  #L29d3ca.  v1:= v1 ^& v0 @kind int;
  #L29d3cc.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d3d2.  v1:= temp;
  #L29d3d4.  v2:= v2 ^& 255;
  #L29d3d8.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d3de.  v2:= temp;
  #L29d3e0.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d3e6.  v1:= temp;
  #L29d3e8.  return v1;
}
procedure `long` `floorDiv-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.floorDiv-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d834.  v0:= (`long`) v4 @kind i2l;
  #L29d836.  v2:= 65535L;
  #L29d83c.  v0:= v0 ^& v2 @kind long;
  #L29d83e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d844.  v0:= temp @kind wide;
  #L29d846.  call temp:= `ulongDivide-eb3DHEI`(v0, v5) @signature `Lkotlin/UnsignedKt;.ulongDivide-eb3DHEI:(JJ)J` @kind static;
  #L29d84c.  v4:= temp @kind wide;
  #L29d84e.  return v4 @kind wide;
}
procedure `int` `floorDiv-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.floorDiv-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d3fc.  v0:= 65535I;
  #L29d402.  v1:= v1 ^& v0 @kind int;
  #L29d404.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d40a.  v1:= temp;
  #L29d40c.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d412.  v1:= temp;
  #L29d414.  return v1;
}
procedure `int` `floorDiv-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.floorDiv-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d428.  v0:= 65535I;
  #L29d42e.  v1:= v1 ^& v0 @kind int;
  #L29d430.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d436.  v1:= temp;
  #L29d438.  v2:= v2 ^& v0 @kind int;
  #L29d43a.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d440.  v2:= temp;
  #L29d442.  call temp:= `uintDivide-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintDivide-J1ME1BU:(II)I` @kind static;
  #L29d448.  v1:= temp;
  #L29d44a.  return v1;
}
procedure `void` `getData$annotations`() @signature `Lkotlin/UShort;.getData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L29db1c.  return @kind void;
}
procedure `int` `hashCode-impl`(`short` v0 ) @signature `Lkotlin/UShort;.hashCode-impl:(S)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L29d47c.  return v0;
}
procedure `short` `inc-Mh2AYeg`(`short` v0 ) @signature `Lkotlin/UShort;.inc-Mh2AYeg:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d9dc.  v0:= v0 + 1;
  #L29d9e0.  v0:= (`short`) v0 @kind i2s;
  #L29d9e2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d9e8.  v0:= temp;
  #L29d9ea.  return v0;
}
procedure `short` `inv-Mh2AYeg`(`short` v0 ) @signature `Lkotlin/UShort;.inv-Mh2AYeg:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d9fc.  v0:= v0 ^~ -1;
  #L29da00.  v0:= (`short`) v0 @kind i2s;
  #L29da02.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29da08.  v0:= temp;
  #L29da0a.  return v0;
}
procedure `int` `minus-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.minus-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d490.  v0:= 65535I;
  #L29d496.  v1:= v1 ^& v0 @kind int;
  #L29d498.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d49e.  v1:= temp;
  #L29d4a0.  v2:= v2 ^& 255;
  #L29d4a4.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d4aa.  v2:= temp;
  #L29d4ac.  v1:= v1 - v2 @kind int;
  #L29d4ae.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d4b4.  v1:= temp;
  #L29d4b6.  return v1;
}
procedure `long` `minus-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.minus-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d860.  v0:= (`long`) v4 @kind i2l;
  #L29d862.  v2:= 65535L;
  #L29d868.  v0:= v0 ^& v2 @kind long;
  #L29d86a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d870.  v0:= temp @kind wide;
  #L29d872.  v0:= v0 - v5 @kind long;
  #L29d874.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d87a.  v4:= temp @kind wide;
  #L29d87c.  return v4 @kind wide;
}
procedure `int` `minus-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.minus-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d4c8.  v0:= 65535I;
  #L29d4ce.  v1:= v1 ^& v0 @kind int;
  #L29d4d0.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d4d6.  v1:= temp;
  #L29d4d8.  v1:= v1 - v2 @kind int;
  #L29d4da.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d4e0.  v1:= temp;
  #L29d4e2.  return v1;
}
procedure `int` `minus-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.minus-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d4f4.  v0:= 65535I;
  #L29d4fa.  v1:= v1 ^& v0 @kind int;
  #L29d4fc.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d502.  v1:= temp;
  #L29d504.  v2:= v2 ^& v0 @kind int;
  #L29d506.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d50c.  v2:= temp;
  #L29d50e.  v1:= v1 - v2 @kind int;
  #L29d510.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d516.  v1:= temp;
  #L29d518.  return v1;
}
procedure `byte` `mod-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.mod-7apg3OU:(SB)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d17c.  v0:= 65535I;
  #L29d182.  v1:= v1 ^& v0 @kind int;
  #L29d184.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d18a.  v1:= temp;
  #L29d18c.  v2:= v2 ^& 255;
  #L29d190.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d196.  v2:= temp;
  #L29d198.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29d19e.  v1:= temp;
  #L29d1a0.  v1:= (`byte`) v1 @kind i2b;
  #L29d1a2.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UByte;.constructor-impl:(B)B` @kind static;
  #L29d1a8.  v1:= temp;
  #L29d1aa.  return v1;
}
procedure `long` `mod-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.mod-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d890.  v0:= (`long`) v4 @kind i2l;
  #L29d892.  v2:= 65535L;
  #L29d898.  v0:= v0 ^& v2 @kind long;
  #L29d89a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d8a0.  v0:= temp @kind wide;
  #L29d8a2.  call temp:= `ulongRemainder-eb3DHEI`(v0, v5) @signature `Lkotlin/UnsignedKt;.ulongRemainder-eb3DHEI:(JJ)J` @kind static;
  #L29d8a8.  v4:= temp @kind wide;
  #L29d8aa.  return v4 @kind wide;
}
procedure `int` `mod-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.mod-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d52c.  v0:= 65535I;
  #L29d532.  v1:= v1 ^& v0 @kind int;
  #L29d534.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d53a.  v1:= temp;
  #L29d53c.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29d542.  v1:= temp;
  #L29d544.  return v1;
}
procedure `short` `mod-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.mod-xj2QHRw:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29da1c.  v0:= 65535I;
  #L29da22.  v1:= v1 ^& v0 @kind int;
  #L29da24.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29da2a.  v1:= temp;
  #L29da2c.  v2:= v2 ^& v0 @kind int;
  #L29da2e.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29da34.  v2:= temp;
  #L29da36.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29da3c.  v1:= temp;
  #L29da3e.  v1:= (`short`) v1 @kind i2s;
  #L29da40.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29da46.  v1:= temp;
  #L29da48.  return v1;
}
procedure `short` `or-xj2QHRw`(`short` v0 , `short` v1 ) @signature `Lkotlin/UShort;.or-xj2QHRw:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29da5c.  v0:= v0 ^| v1 @kind int;
  #L29da5e.  v0:= (`short`) v0 @kind i2s;
  #L29da60.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29da66.  v0:= temp;
  #L29da68.  return v0;
}
procedure `int` `plus-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.plus-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d558.  v0:= 65535I;
  #L29d55e.  v1:= v1 ^& v0 @kind int;
  #L29d560.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d566.  v1:= temp;
  #L29d568.  v2:= v2 ^& 255;
  #L29d56c.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d572.  v2:= temp;
  #L29d574.  v1:= v1 + v2 @kind int;
  #L29d576.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d57c.  v1:= temp;
  #L29d57e.  return v1;
}
procedure `long` `plus-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.plus-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d8bc.  v0:= (`long`) v4 @kind i2l;
  #L29d8be.  v2:= 65535L;
  #L29d8c4.  v0:= v0 ^& v2 @kind long;
  #L29d8c6.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d8cc.  v0:= temp @kind wide;
  #L29d8ce.  v0:= v0 + v5 @kind long;
  #L29d8d0.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d8d6.  v4:= temp @kind wide;
  #L29d8d8.  return v4 @kind wide;
}
procedure `int` `plus-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.plus-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d590.  v0:= 65535I;
  #L29d596.  v1:= v1 ^& v0 @kind int;
  #L29d598.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d59e.  v1:= temp;
  #L29d5a0.  v1:= v1 + v2 @kind int;
  #L29d5a2.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d5a8.  v1:= temp;
  #L29d5aa.  return v1;
}
procedure `int` `plus-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.plus-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d5bc.  v0:= 65535I;
  #L29d5c2.  v1:= v1 ^& v0 @kind int;
  #L29d5c4.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d5ca.  v1:= temp;
  #L29d5cc.  v2:= v2 ^& v0 @kind int;
  #L29d5ce.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d5d4.  v2:= temp;
  #L29d5d6.  v1:= v1 + v2 @kind int;
  #L29d5d8.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d5de.  v1:= temp;
  #L29d5e0.  return v1;
}
procedure `kotlin.ranges.UIntRange` `rangeTo-xj2QHRw`(`short` v2 , `short` v3 ) @signature `Lkotlin/UShort;.rangeTo-xj2QHRw:(SS)Lkotlin/ranges/UIntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L29d7d0.  v0:= new `kotlin.ranges.UIntRange`;
  #L29d7d4.  v1:= 65535I;
  #L29d7da.  v2:= v2 ^& v1 @kind int;
  #L29d7dc.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d7e2.  v2:= temp;
  #L29d7e4.  v3:= v3 ^& v1 @kind int;
  #L29d7e6.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d7ec.  v3:= temp;
  #L29d7ee.  v1:= 0I;
  #L29d7f0.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L29d7f6.  return v0 @kind object;
}
procedure `int` `rem-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.rem-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d5f4.  v0:= 65535I;
  #L29d5fa.  v1:= v1 ^& v0 @kind int;
  #L29d5fc.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d602.  v1:= temp;
  #L29d604.  v2:= v2 ^& 255;
  #L29d608.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d60e.  v2:= temp;
  #L29d610.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29d616.  v1:= temp;
  #L29d618.  return v1;
}
procedure `long` `rem-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.rem-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d8ec.  v0:= (`long`) v4 @kind i2l;
  #L29d8ee.  v2:= 65535L;
  #L29d8f4.  v0:= v0 ^& v2 @kind long;
  #L29d8f6.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d8fc.  v0:= temp @kind wide;
  #L29d8fe.  call temp:= `ulongRemainder-eb3DHEI`(v0, v5) @signature `Lkotlin/UnsignedKt;.ulongRemainder-eb3DHEI:(JJ)J` @kind static;
  #L29d904.  v4:= temp @kind wide;
  #L29d906.  return v4 @kind wide;
}
procedure `int` `rem-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.rem-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d62c.  v0:= 65535I;
  #L29d632.  v1:= v1 ^& v0 @kind int;
  #L29d634.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d63a.  v1:= temp;
  #L29d63c.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29d642.  v1:= temp;
  #L29d644.  return v1;
}
procedure `int` `rem-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.rem-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d658.  v0:= 65535I;
  #L29d65e.  v1:= v1 ^& v0 @kind int;
  #L29d660.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d666.  v1:= temp;
  #L29d668.  v2:= v2 ^& v0 @kind int;
  #L29d66a.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d670.  v2:= temp;
  #L29d672.  call temp:= `uintRemainder-J1ME1BU`(v1, v2) @signature `Lkotlin/UnsignedKt;.uintRemainder-J1ME1BU:(II)I` @kind static;
  #L29d678.  v1:= temp;
  #L29d67a.  return v1;
}
procedure `int` `times-7apg3OU`(`short` v1 , `byte` v2 ) @signature `Lkotlin/UShort;.times-7apg3OU:(SB)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d68c.  v0:= 65535I;
  #L29d692.  v1:= v1 ^& v0 @kind int;
  #L29d694.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d69a.  v1:= temp;
  #L29d69c.  v2:= v2 ^& 255;
  #L29d6a0.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d6a6.  v2:= temp;
  #L29d6a8.  v1:= v1 * v2 @kind int;
  #L29d6ac.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d6b2.  v1:= temp;
  #L29d6b4.  return v1;
}
procedure `long` `times-VKZWuLQ`(`short` v4 , `long` v5 ) @signature `Lkotlin/UShort;.times-VKZWuLQ:(SJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d918.  v0:= (`long`) v4 @kind i2l;
  #L29d91a.  v2:= 65535L;
  #L29d920.  v0:= v0 ^& v2 @kind long;
  #L29d922.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d928.  v0:= temp @kind wide;
  #L29d92a.  v0:= v0 * v5 @kind long;
  #L29d92e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d934.  v4:= temp @kind wide;
  #L29d936.  return v4 @kind wide;
}
procedure `int` `times-WZ4Q5Ns`(`short` v1 , `int` v2 ) @signature `Lkotlin/UShort;.times-WZ4Q5Ns:(SI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d6c8.  v0:= 65535I;
  #L29d6ce.  v1:= v1 ^& v0 @kind int;
  #L29d6d0.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d6d6.  v1:= temp;
  #L29d6d8.  v1:= v1 * v2 @kind int;
  #L29d6dc.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d6e2.  v1:= temp;
  #L29d6e4.  return v1;
}
procedure `int` `times-xj2QHRw`(`short` v1 , `short` v2 ) @signature `Lkotlin/UShort;.times-xj2QHRw:(SS)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d6f8.  v0:= 65535I;
  #L29d6fe.  v1:= v1 ^& v0 @kind int;
  #L29d700.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d706.  v1:= temp;
  #L29d708.  v2:= v2 ^& v0 @kind int;
  #L29d70a.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d710.  v2:= temp;
  #L29d712.  v1:= v1 * v2 @kind int;
  #L29d716.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d71c.  v1:= temp;
  #L29d71e.  return v1;
}
procedure `byte` `toByte-impl`(`short` v0 ) @signature `Lkotlin/UShort;.toByte-impl:(S)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d1bc.  v0:= (`byte`) v0 @kind i2b;
  #L29d1be.  return v0;
}
procedure `double` `toDouble-impl`(`short` v2 ) @signature `Lkotlin/UShort;.toDouble-impl:(S)D` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L29d1ec.  v0:= 65535I;
  #L29d1f2.  v2:= v2 ^& v0 @kind int;
  #L29d1f4.  v0:= (`double`) v2 @kind i2d;
  #L29d1f6.  return v0 @kind wide;
}
procedure `float` `toFloat-impl`(`short` v1 ) @signature `Lkotlin/UShort;.toFloat-impl:(S)F` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d208.  v0:= 65535I;
  #L29d20e.  v1:= v1 ^& v0 @kind int;
  #L29d210.  v1:= (`float`) v1 @kind i2f;
  #L29d212.  return v1;
}
procedure `int` `toInt-impl`(`short` v1 ) @signature `Lkotlin/UShort;.toInt-impl:(S)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d730.  v0:= 65535I;
  #L29d736.  v1:= v1 ^& v0 @kind int;
  #L29d738.  return v1;
}
procedure `long` `toLong-impl`(`short` v4 ) @signature `Lkotlin/UShort;.toLong-impl:(S)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d948.  v0:= (`long`) v4 @kind i2l;
  #L29d94a.  v2:= 65535L;
  #L29d950.  v0:= v0 ^& v2 @kind long;
  #L29d952.  return v0 @kind wide;
}
procedure `short` `toShort-impl`(`short` v0 ) @signature `Lkotlin/UShort;.toShort-impl:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29da7c.  return v0;
}
procedure `java.lang.String` `toString-impl`(`short` v1 ) @signature `Lkotlin/UShort;.toString-impl:(S)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29d790.  v0:= 65535I;
  #L29d796.  v1:= v1 ^& v0 @kind int;
  #L29d798.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L29d79e.  v1:= temp @kind object;
  #L29d7a0.  return v1 @kind object;
}
procedure `byte` `toUByte-w2LRezQ`(`short` v0 ) @signature `Lkotlin/UShort;.toUByte-w2LRezQ:(S)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d1d0.  v0:= (`byte`) v0 @kind i2b;
  #L29d1d2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UByte;.constructor-impl:(B)B` @kind static;
  #L29d1d8.  v0:= temp;
  #L29d1da.  return v0;
}
procedure `int` `toUInt-pVg5ArA`(`short` v1 ) @signature `Lkotlin/UShort;.toUInt-pVg5ArA:(S)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29d74c.  v0:= 65535I;
  #L29d752.  v1:= v1 ^& v0 @kind int;
  #L29d754.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L29d75a.  v1:= temp;
  #L29d75c.  return v1;
}
procedure `long` `toULong-s-VKNKU`(`short` v4 ) @signature `Lkotlin/UShort;.toULong-s-VKNKU:(S)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29d964.  v0:= (`long`) v4 @kind i2l;
  #L29d966.  v2:= 65535L;
  #L29d96c.  v0:= v0 ^& v2 @kind long;
  #L29d96e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L29d974.  v0:= temp @kind wide;
  #L29d976.  return v0 @kind wide;
}
procedure `short` `toUShort-Mh2AYeg`(`short` v0 ) @signature `Lkotlin/UShort;.toUShort-Mh2AYeg:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29da90.  return v0;
}
procedure `short` `xor-xj2QHRw`(`short` v0 , `short` v1 ) @signature `Lkotlin/UShort;.xor-xj2QHRw:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29dabc.  v0:= v0 ^~ v1 @kind int;
  #L29dabe.  v0:= (`short`) v0 @kind i2s;
  #L29dac0.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29dac6.  v0:= temp;
  #L29dac8.  return v0;
}
procedure `int` `compareTo`(`kotlin.UShort` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/UShort;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L29d224.  v3:= (`kotlin.UShort`) v3 @kind object;
  #L29d228.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L29d22e.  v3:= temp;
  #L29d230.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L29d236.  v0:= temp;
  #L29d238.  v1:= 65535I;
  #L29d23e.  v0:= v0 ^& v1 @kind int;
  #L29d240.  v3:= v3 ^& v1 @kind int;
  #L29d242.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L29d248.  v3:= temp;
  #L29d24a.  return v3;
}
procedure `boolean` `equals`(`kotlin.UShort` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/UShort;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d10c.  v0:= v1.`kotlin.UShort.data` @type ^`short` @kind short;
  #L29d110.  call temp:= `equals-impl`(v0, v2) @signature `Lkotlin/UShort;.equals-impl:(SLjava/lang/Object;)Z` @kind static;
  #L29d116.  v2:= temp;
  #L29d118.  return v2;
}
procedure `int` `hashCode`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d45c.  v0:= v1.`kotlin.UShort.data` @type ^`short` @kind short;
  #L29d460.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/UShort;.hashCode-impl:(S)I` @kind static;
  #L29d466.  v0:= temp;
  #L29d468.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d770.  v0:= v1.`kotlin.UShort.data` @type ^`short` @kind short;
  #L29d774.  call temp:= `toString-impl`(v0) @signature `Lkotlin/UShort;.toString-impl:(S)Ljava/lang/String;` @kind static;
  #L29d77a.  v0:= temp @kind object;
  #L29d77c.  return v0 @kind object;
}
procedure `short` `unbox-impl`(`kotlin.UShort` v1 @kind this) @signature `Lkotlin/UShort;.unbox-impl:()S` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L29daa4.  v0:= v1.`kotlin.UShort.data` @type ^`short` @kind short;
  #L29daa8.  return v0;
}
