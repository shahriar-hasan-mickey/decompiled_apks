record `kotlin.coroutines.CombinedContext$writeReplace$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.coroutines.CoroutineContext`[] `kotlin.coroutines.CombinedContext$writeReplace$1.$elements` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$IntRef` `kotlin.coroutines.CombinedContext$writeReplace$1.$index` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.coroutines.CombinedContext$writeReplace$1` v0 @kind this, `kotlin.coroutines.CoroutineContext`[] v1 @kind object, `kotlin.jvm.internal.Ref$IntRef` v2 @kind object) @signature `Lkotlin/coroutines/CombinedContext$writeReplace$1;.<init>:([Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/internal/Ref$IntRef;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ad578.  v0.`kotlin.coroutines.CombinedContext$writeReplace$1.$elements` @type ^`kotlin.coroutines.CoroutineContext`[] := v1 @kind object;
  #L2ad57c.  v0.`kotlin.coroutines.CombinedContext$writeReplace$1.$index` @type ^`kotlin.jvm.internal.Ref$IntRef` := v2 @kind object;
  #L2ad580.  v1:= 2I;
  #L2ad582.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2ad588.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.coroutines.CombinedContext$writeReplace$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/coroutines/CombinedContext$writeReplace$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2ad554.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L2ad558.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2ad55c.  call `invoke`(v0, v1, v2) @signature `Lkotlin/coroutines/CombinedContext$writeReplace$1;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind virtual;
  #L2ad562.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2ad566.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlin.coroutines.CombinedContext$writeReplace$1` v3 @kind this, `kotlin.Unit` v4 @kind object, `kotlin.coroutines.CoroutineContext$Element` v5 @kind object) @signature `Lkotlin/coroutines/CombinedContext$writeReplace$1;.invoke:(Lkotlin/Unit;Lkotlin/coroutines/CoroutineContext$Element;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ad59c.  v0:= "<anonymous parameter 0>" @kind object;
  #L2ad5a0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ad5a6.  v4:= "element" @kind object;
  #L2ad5aa.  call `checkNotNullParameter`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ad5b0.  v4:= v3.`kotlin.coroutines.CombinedContext$writeReplace$1.$elements` @type ^`kotlin.coroutines.CoroutineContext`[] @kind object;
  #L2ad5b4.  v0:= v3.`kotlin.coroutines.CombinedContext$writeReplace$1.$index` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L2ad5b8.  v1:= v0.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L2ad5bc.  v2:= v1 + 1;
  #L2ad5c0.  v0.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v2;
  #L2ad5c4.  v4[v1]:= v5 @kind object;
  #L2ad5c8.  return @kind void;
}
