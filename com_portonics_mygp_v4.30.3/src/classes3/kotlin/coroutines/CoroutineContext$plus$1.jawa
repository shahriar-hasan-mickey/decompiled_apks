record `kotlin.coroutines.CoroutineContext$plus$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlin.coroutines.CoroutineContext$plus$1` `@@kotlin.coroutines.CoroutineContext$plus$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2adeb4.  v0:= new `kotlin.coroutines.CoroutineContext$plus$1`;
  #L2adeb8.  call `<init>`(v0) @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.<init>:()V` @kind direct;
  #L2adebe.  `@@kotlin.coroutines.CoroutineContext$plus$1.INSTANCE` @type ^`kotlin.coroutines.CoroutineContext$plus$1` := v0 @kind object;
  #L2adec2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.CoroutineContext$plus$1` v1 @kind this) @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2aded4.  v0:= 2I;
  #L2aded6.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2adedc.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.coroutines.CoroutineContext$plus$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2addfc.  v1:= (`kotlin.coroutines.CoroutineContext`) v1 @kind object;
  #L2ade00.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L2ade04.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.invoke:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L2ade0a.  v1:= temp @kind object;
  #L2ade0c.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `invoke`(`kotlin.coroutines.CoroutineContext$plus$1` v3 @kind this, `kotlin.coroutines.CoroutineContext` v4 @kind object, `kotlin.coroutines.CoroutineContext$Element` v5 @kind object) @signature `Lkotlin/coroutines/CoroutineContext$plus$1;.invoke:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ade20.  v0:= "acc" @kind object;
  #L2ade24.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ade2a.  v0:= "element" @kind object;
  #L2ade2e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ade34.  call temp:= `getKey`(v5) @signature `Lkotlin/coroutines/CoroutineContext$Element;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind interface;
  #L2ade3a.  v0:= temp @kind object;
  #L2ade3c.  call temp:= `minusKey`(v4, v0) @signature `Lkotlin/coroutines/CoroutineContext;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2ade42.  v4:= temp @kind object;
  #L2ade44.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2ade48.  if v4 != v0 then goto L2ade4e;
  #L2ade4c.  goto L2adea0;
  #L2ade4e.  v1:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L2ade52.  call temp:= `get`(v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L2ade58.  v2:= temp @kind object;
  #L2ade5a.  v2:= (`kotlin.coroutines.ContinuationInterceptor`) v2 @kind object;
  #L2ade5e.  if v2 != 0 then goto L2ade70;
  #L2ade62.  v0:= new `kotlin.coroutines.CombinedContext`;
  #L2ade66.  call `<init>`(v0, v4, v5) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L2ade6c.  v5:= v0 @kind object;
  #L2ade6e.  goto L2adea0;
  #L2ade70.  call temp:= `minusKey`(v4, v1) @signature `Lkotlin/coroutines/CoroutineContext;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L2ade76.  v4:= temp @kind object;
  #L2ade78.  if v4 != v0 then goto L2ade8a;
  #L2ade7c.  v4:= new `kotlin.coroutines.CombinedContext`;
  #L2ade80.  call `<init>`(v4, v5, v2) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L2ade86.  v5:= v4 @kind object;
  #L2ade88.  goto L2adea0;
  #L2ade8a.  v0:= new `kotlin.coroutines.CombinedContext`;
  #L2ade8e.  v1:= new `kotlin.coroutines.CombinedContext`;
  #L2ade92.  call `<init>`(v1, v4, v5) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L2ade98.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/CombinedContext;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext$Element;)V` @kind direct;
  #L2ade9e.  goto L2ade6c;
  #L2adea0.  return v5 @kind object;
}
