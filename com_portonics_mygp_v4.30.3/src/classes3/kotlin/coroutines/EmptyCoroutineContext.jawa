record `kotlin.coroutines.EmptyCoroutineContext` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.CoroutineContext` @kind interface, `java.io.Serializable` @kind interface {
}
global `kotlin.coroutines.EmptyCoroutineContext` `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.coroutines.EmptyCoroutineContext.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/EmptyCoroutineContext;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ae07c.  v0:= new `kotlin.coroutines.EmptyCoroutineContext`;
  #L2ae080.  call `<init>`(v0) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.<init>:()V` @kind direct;
  #L2ae086.  `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` := v0 @kind object;
  #L2ae08a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.EmptyCoroutineContext` v0 @kind this) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ae09c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ae0a2.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2adff4.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2adff8.  return v0 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2adfd8.  v0:= "operation" @kind object;
  #L2adfdc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adfe2.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ae05c.  v0:= "key" @kind object;
  #L2ae060.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ae066.  v2:= 0I;
  #L2ae068.  return v2 @kind object;
}
procedure `int` `hashCode`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2adfc4.  v0:= 0I;
  #L2adfc6.  return v0;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ae024.  v0:= "key" @kind object;
  #L2ae028.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ae02e.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ae040.  v0:= "context" @kind object;
  #L2ae044.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ae04a.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.coroutines.EmptyCoroutineContext` v1 @kind this) @signature `Lkotlin/coroutines/EmptyCoroutineContext;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ae00c.  v0:= "EmptyCoroutineContext" @kind object;
  #L2ae010.  return v0 @kind object;
}
