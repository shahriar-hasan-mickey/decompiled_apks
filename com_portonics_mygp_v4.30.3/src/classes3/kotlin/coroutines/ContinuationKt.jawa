record `kotlin.coroutines.ContinuationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.Continuation` `Continuation`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.Continuation:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2adb18.  v0:= "context" @kind object;
  #L2adb1c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adb22.  v0:= "resumeWith" @kind object;
  #L2adb26.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adb2c.  v0:= new `kotlin.coroutines.ContinuationKt$Continuation$1`;
  #L2adb30.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/ContinuationKt$Continuation$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L2adb36.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `createCoroutine`(`kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.createCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2adb48.  v0:= "<this>" @kind object;
  #L2adb4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adb52.  v0:= "completion" @kind object;
  #L2adb56.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adb5c.  v0:= new `kotlin.coroutines.SafeContinuation`;
  #L2adb60.  call temp:= `createCoroutineUnintercepted`(v1, v2) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adb66.  v1:= temp @kind object;
  #L2adb68.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adb6e.  v1:= temp @kind object;
  #L2adb70.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2adb76.  v2:= temp @kind object;
  #L2adb78.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/SafeContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V` @kind direct;
  #L2adb7e.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `createCoroutine`(`kotlin.jvm.functions.Function2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.createCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2adb90.  v0:= "<this>" @kind object;
  #L2adb94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adb9a.  v0:= "completion" @kind object;
  #L2adb9e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adba4.  v0:= new `kotlin.coroutines.SafeContinuation`;
  #L2adba8.  call temp:= `createCoroutineUnintercepted`(v1, v2, v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adbae.  v1:= temp @kind object;
  #L2adbb0.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adbb6.  v1:= temp @kind object;
  #L2adbb8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2adbbe.  v2:= temp @kind object;
  #L2adbc0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/SafeContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V` @kind direct;
  #L2adbc6.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getCoroutineContext`() @signature `Lkotlin/coroutines/ContinuationKt;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2adbd8.  v0:= new `kotlin.NotImplementedError`;
  #L2adbdc.  v1:= "Implemented as intrinsic" @kind object;
  #L2adbe0.  call `<init>`(v0, v1) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2adbe6.  throw v0;
}
procedure `void` `getCoroutineContext$annotations`() @signature `Lkotlin/coroutines/ContinuationKt;.getCoroutineContext$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2adbf8.  return @kind void;
}
procedure `void` `resume`(`kotlin.coroutines.Continuation` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.resume:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2adc0c.  v0:= "<this>" @kind object;
  #L2adc10.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adc16.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2adc1a.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2adc20.  v2:= temp @kind object;
  #L2adc22.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2adc28.  return @kind void;
}
procedure `void` `resumeWithException`(`kotlin.coroutines.Continuation` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.resumeWithException:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2adc3c.  v0:= "<this>" @kind object;
  #L2adc40.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adc46.  v0:= "exception" @kind object;
  #L2adc4a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adc50.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2adc54.  call temp:= `createFailure`(v2) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L2adc5a.  v2:= temp @kind object;
  #L2adc5c.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2adc62.  v2:= temp @kind object;
  #L2adc64.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2adc6a.  return @kind void;
}
procedure `void` `startCoroutine`(`kotlin.jvm.functions.Function1` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2adc7c.  v0:= "<this>" @kind object;
  #L2adc80.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adc86.  v0:= "completion" @kind object;
  #L2adc8a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adc90.  call temp:= `createCoroutineUnintercepted`(v1, v2) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adc96.  v1:= temp @kind object;
  #L2adc98.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adc9e.  v1:= temp @kind object;
  #L2adca0.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2adca4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2adca8.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2adcae.  v2:= temp @kind object;
  #L2adcb0.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2adcb6.  return @kind void;
}
procedure `void` `startCoroutine`(`kotlin.jvm.functions.Function2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2adcc8.  v0:= "<this>" @kind object;
  #L2adccc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adcd2.  v0:= "completion" @kind object;
  #L2adcd6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2adcdc.  call temp:= `createCoroutineUnintercepted`(v1, v2, v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adce2.  v1:= temp @kind object;
  #L2adce4.  call temp:= `intercepted`(v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adcea.  v1:= temp @kind object;
  #L2adcec.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L2adcf0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2adcf4.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2adcfa.  v2:= temp @kind object;
  #L2adcfc.  call `resumeWith`(v1, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2add02.  return @kind void;
}
procedure `java.lang.Object` `suspendCoroutine`(`kotlin.jvm.functions.Function1` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/coroutines/ContinuationKt;.suspendCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2adac4.  v0:= 0I;
  #L2adac6.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2adacc.  v0:= new `kotlin.coroutines.SafeContinuation`;
  #L2adad0.  call temp:= `intercepted`(v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L2adad6.  v1:= temp @kind object;
  #L2adad8.  call `<init>`(v0, v1) @signature `Lkotlin/coroutines/SafeContinuation;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2adade.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2adae4.  call temp:= `getOrThrow`(v0) @signature `Lkotlin/coroutines/SafeContinuation;.getOrThrow:()Ljava/lang/Object;` @kind virtual;
  #L2adaea.  v2:= temp @kind object;
  #L2adaec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2adaf2.  v0:= temp @kind object;
  #L2adaf4.  if v2 != v0 then goto L2adafe;
  #L2adaf8.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2adafe.  v3:= 1I;
  #L2adb00.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L2adb06.  return v2 @kind object;
}
