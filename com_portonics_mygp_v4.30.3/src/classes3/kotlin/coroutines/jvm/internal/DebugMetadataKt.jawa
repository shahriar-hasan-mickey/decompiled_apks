record `kotlin.coroutines.jvm.internal.DebugMetadataKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlin.coroutines.jvm.internal.DebugMetadataKt.COROUTINES_DEBUG_METADATA_VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `checkDebugMetadataVersion`(`int` v3 , `int` v4 ) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.checkDebugMetadataVersion:(II)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2af0b8.  if v4 > v3 then goto L2af0be;
  #L2af0bc.  return @kind void;
  #L2af0be.  v0:= new `java.lang.IllegalStateException`;
  #L2af0c2.  v1:= new `java.lang.StringBuilder`;
  #L2af0c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2af0cc.  v2:= "Debug metadata version mismatch. Expected: " @kind object;
  #L2af0d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af0d6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af0dc.  v3:= ", got " @kind object;
  #L2af0e0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af0e6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af0ec.  v3:= ". Please update the Kotlin standard library." @kind object;
  #L2af0f0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af0f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af0fc.  v3:= temp @kind object;
  #L2af0fe.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af104.  v3:= temp @kind object;
  #L2af106.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af10c.  throw v0;
}
procedure `kotlin.coroutines.jvm.internal.DebugMetadata` `getDebugMetadataAnnotation`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getDebugMetadataAnnotation:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2af08c.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2af092.  v1:= temp @kind object;
  #L2af094.  v0:= constclass @type ^`kotlin.coroutines.jvm.internal.DebugMetadata` @kind object;
  #L2af098.  call temp:= `getAnnotation`(v1, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L2af09e.  v1:= temp @kind object;
  #L2af0a0.  v1:= (`kotlin.coroutines.jvm.internal.DebugMetadata`) v1 @kind object;
  #L2af0a4.  return v1 @kind object;
}
procedure `int` `getLabel`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v2 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getLabel:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2aeeb8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2aeebe.  v0:= temp @kind object;
  #L2aeec0.  v1:= "label" @kind object;
  #L2aeec4.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L2aeeca.  v0:= temp @kind object;
  #L2aeecc.  v1:= 1I;
  #L2aeece.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L2aeed4.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2aeeda.  v2:= temp @kind object;
  #L2aeedc.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L2aeee0.  if v0 == 0 then goto L2aeeea;
  #L2aeee4.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2aeee8.  goto L2aeeec;
  #L2aeeea.  v2:= 0I;
  #L2aeeec.  if v2 == 0 then goto L2aeefa;
  #L2aeef0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2aeef6.  v2:= temp;
  #L2aeef8.  goto L2aeefc;
  #L2aeefa.  v2:= 0I;
  #L2aeefc.  v2:= v2 - v1 @kind int;
  #L2aeefe.  goto L2aef02;
  #L2aef00.  v2:= -1I;
  #L2aef02.  return v2;
  catch `java.lang.Exception` @[L2aeeb8..L2aeef8] goto L2aef00;
}
procedure `java.lang.String`[] `getSpilledVariableFieldMapping`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v7 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getSpilledVariableFieldMapping:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2aefe0.  v0:= "<this>" @kind object;
  #L2aefe4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aefea.  call temp:= `getDebugMetadataAnnotation`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getDebugMetadataAnnotation:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L2aeff0.  v0:= temp @kind object;
  #L2aeff2.  if v0 != 0 then goto L2aeffa;
  #L2aeff6.  v7:= 0I;
  #L2aeff8.  return v7 @kind object;
  #L2aeffa.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L2af000.  v1:= temp;
  #L2af002.  v2:= 1I;
  #L2af004.  call `checkDebugMetadataVersion`(v2, v1) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.checkDebugMetadataVersion:(II)V` @kind static;
  #L2af00a.  v1:= new `java.util.ArrayList`;
  #L2af00e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2af014.  call temp:= `getLabel`(v7) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getLabel:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L2af01a.  v7:= temp;
  #L2af01c.  call temp:= `i`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.i:()[I` @kind interface;
  #L2af022.  v2:= temp @kind object;
  #L2af024.  v3:= length @variable v2;
  #L2af026.  v4:= 0I;
  #L2af028.  v5:= 0I;
  #L2af02a.  if v5 >= v3 then goto L2af060;
  #L2af02e.  v6:= v2[v5];
  #L2af032.  if v6 != v7 then goto L2af05a;
  #L2af036.  call temp:= `s`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.s:()[Ljava/lang/String;` @kind interface;
  #L2af03c.  v6:= temp @kind object;
  #L2af03e.  v6:= v6[v5] @kind object;
  #L2af042.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2af048.  call temp:= `n`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.n:()[Ljava/lang/String;` @kind interface;
  #L2af04e.  v6:= temp @kind object;
  #L2af050.  v6:= v6[v5] @kind object;
  #L2af054.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2af05a.  v5:= v5 + 1;
  #L2af05e.  goto L2af02a;
  #L2af060.  v7:= new `java.lang.String`[v4];
  #L2af064.  call temp:= `toArray`(v1, v7) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2af06a.  v7:= temp @kind object;
  #L2af06c.  v0:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L2af070.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2af076.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L2af07a.  return v7 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlin.coroutines.jvm.internal.BaseContinuationImpl` v4 @kind object) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getStackTraceElement:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2aef24.  v0:= "<this>" @kind object;
  #L2aef28.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aef2e.  call temp:= `getDebugMetadataAnnotation`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getDebugMetadataAnnotation:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/DebugMetadata;` @kind static;
  #L2aef34.  v0:= temp @kind object;
  #L2aef36.  if v0 != 0 then goto L2aef3e;
  #L2aef3a.  v4:= 0I;
  #L2aef3c.  return v4 @kind object;
  #L2aef3e.  v1:= 1I;
  #L2aef40.  call temp:= `v`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.v:()I` @kind interface;
  #L2aef46.  v2:= temp;
  #L2aef48.  call `checkDebugMetadataVersion`(v1, v2) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.checkDebugMetadataVersion:(II)V` @kind static;
  #L2aef4e.  call temp:= `getLabel`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadataKt;.getLabel:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)I` @kind static;
  #L2aef54.  v1:= temp;
  #L2aef56.  if v1 >= 0 then goto L2aef5e;
  #L2aef5a.  v1:= -1I;
  #L2aef5c.  goto L2aef6a;
  #L2aef5e.  call temp:= `l`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.l:()[I` @kind interface;
  #L2aef64.  v2:= temp @kind object;
  #L2aef66.  v1:= v2[v1];
  #L2aef6a.  v2:= `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever` @kind object;
  #L2aef6e.  call temp:= `getModuleName`(v2, v4) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.getModuleName:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/String;` @kind virtual;
  #L2aef74.  v4:= temp @kind object;
  #L2aef76.  if v4 != 0 then goto L2aef84;
  #L2aef7a.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L2aef80.  v4:= temp @kind object;
  #L2aef82.  goto L2aefb4;
  #L2aef84.  v2:= new `java.lang.StringBuilder`;
  #L2aef88.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aef8e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aef94.  v4:= 47I;
  #L2aef98.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aef9e.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.c:()Ljava/lang/String;` @kind interface;
  #L2aefa4.  v4:= temp @kind object;
  #L2aefa6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aefac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aefb2.  v4:= temp @kind object;
  #L2aefb4.  v2:= new `java.lang.StackTraceElement`;
  #L2aefb8.  call temp:= `m`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.m:()Ljava/lang/String;` @kind interface;
  #L2aefbe.  v3:= temp @kind object;
  #L2aefc0.  call temp:= `f`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugMetadata;.f:()Ljava/lang/String;` @kind interface;
  #L2aefc6.  v0:= temp @kind object;
  #L2aefc8.  call `<init>`(v2, v4, v3, v0, v1) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2aefce.  return v2 @kind object;
}
