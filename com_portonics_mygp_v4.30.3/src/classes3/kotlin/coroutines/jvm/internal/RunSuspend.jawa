record `kotlin.coroutines.jvm.internal.RunSuspend` @kind class @AccessFlag FINAL extends `kotlin.coroutines.Continuation` @kind interface {
  `kotlin.Result` `kotlin.coroutines.jvm.internal.RunSuspend.result` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.RunSuspend` v0 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2af484.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af48a.  return @kind void;
}
procedure `void` `await`(`kotlin.coroutines.jvm.internal.RunSuspend` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.await:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2af49c.  @monitorenter v1
  #L2af49e.  call temp:= `getResult-xLWZpok`(v1) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.getResult-xLWZpok:()Lkotlin/Result;` @kind virtual;
  #L2af4a4.  v0:= temp @kind object;
  #L2af4a6.  if v0 != 0 then goto L2af4b2;
  #L2af4aa.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L2af4b0.  goto L2af49e;
  #L2af4b2.  call temp:= `unbox-impl`(v0) @signature `Lkotlin/Result;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L2af4b8.  v0:= temp @kind object;
  #L2af4ba.  call `throwOnFailure`(v0) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2af4c0.  @monitorexit v1
  #L2af4c2.  return @kind void;
  #L2af4c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2af4c6.  @monitorexit v1
  #L2af4c8.  goto L2af4cc;
  #L2af4ca.  throw v0;
  #L2af4cc.  goto L2af4ca;
  catch `java.lang.Throwable` @[L2af49e..L2af4c0] goto L2af4c4;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.coroutines.jvm.internal.RunSuspend` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af46c.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2af470.  return v0 @kind object;
}
procedure `kotlin.Result` `getResult-xLWZpok`(`kotlin.coroutines.jvm.internal.RunSuspend` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.getResult-xLWZpok:()Lkotlin/Result;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2af454.  v0:= v1.`kotlin.coroutines.jvm.internal.RunSuspend.result` @type ^`kotlin.Result` @kind object;
  #L2af458.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlin.coroutines.jvm.internal.RunSuspend` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L2af4ec.  @monitorenter v0
  #L2af4ee.  call temp:= `box-impl`(v1) @signature `Lkotlin/Result;.box-impl:(Ljava/lang/Object;)Lkotlin/Result;` @kind static;
  #L2af4f4.  v1:= temp @kind object;
  #L2af4f6.  v0.`kotlin.coroutines.jvm.internal.RunSuspend.result` @type ^`kotlin.Result` := v1 @kind object;
  #L2af4fa.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2af500.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2af504.  @monitorexit v0
  #L2af506.  return @kind void;
  #L2af508.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2af50a.  @monitorexit v0
  #L2af50c.  throw v1;
  catch `java.lang.Throwable` @[L2af4ee..L2af504] goto L2af508;
}
procedure `void` `setResult`(`kotlin.coroutines.jvm.internal.RunSuspend` v0 @kind this, `kotlin.Result` v1 @kind object) @signature `Lkotlin/coroutines/jvm/internal/RunSuspend;.setResult:(Lkotlin/Result;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2af52c.  v0.`kotlin.coroutines.jvm.internal.RunSuspend.result` @type ^`kotlin.Result` := v1 @kind object;
  #L2af530.  return @kind void;
}
