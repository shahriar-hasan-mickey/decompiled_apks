record `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.coroutines.jvm.internal.RestrictedContinuationImpl` @kind class, `kotlin.jvm.internal.FunctionBase` @kind interface, `kotlin.coroutines.jvm.internal.SuspendFunction` @kind interface {
  `int` `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda.arity` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` v1 @kind this, `int` v2 ) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2af3e8.  v0:= 0I;
  #L2af3ea.  call `<init>`(v1, v2, v0) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2af3f0.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` v0 @kind this, `int` v1 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2af404.  call `<init>`(v0, v2) @signature `Lkotlin/coroutines/jvm/internal/RestrictedContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2af40a.  v0.`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda.arity` @type ^`int` := v1;
  #L2af40e.  return @kind void;
}
procedure `int` `getArity`(`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` v1 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2af394.  v0:= v1.`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda.arity` @type ^`int`;
  #L2af398.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` v2 @kind this) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af3ac.  call temp:= `getCompletion`(v2) @signature `Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2af3b2.  v0:= temp @kind object;
  #L2af3b4.  if v0 != 0 then goto L2af3cc;
  #L2af3b8.  call temp:= `renderLambdaToString`(v2) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind static;
  #L2af3be.  v0:= temp @kind object;
  #L2af3c0.  v1:= "renderLambdaToString(this)" @kind object;
  #L2af3c4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2af3ca.  goto L2af3d4;
  #L2af3cc.  call temp:= `toString`(v2) @signature `Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;.toString:()Ljava/lang/String;` @kind super;
  #L2af3d2.  v0:= temp @kind object;
  #L2af3d4.  return v0 @kind object;
}
