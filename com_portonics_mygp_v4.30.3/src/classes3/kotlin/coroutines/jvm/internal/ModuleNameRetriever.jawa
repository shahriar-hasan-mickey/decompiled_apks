record `kotlin.coroutines.jvm.internal.ModuleNameRetriever` @kind class @AccessFlag FINAL {
}
global `kotlin.coroutines.jvm.internal.ModuleNameRetriever` `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.cache` @AccessFlag PRIVATE_STATIC;
global `kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.notOnJava9` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2af2e4.  v0:= new `kotlin.coroutines.jvm.internal.ModuleNameRetriever`;
  #L2af2e8.  call `<init>`(v0) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.<init>:()V` @kind direct;
  #L2af2ee.  `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.INSTANCE` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever` := v0 @kind object;
  #L2af2f2.  v0:= new `kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache`;
  #L2af2f6.  v1:= 0I;
  #L2af2f8.  call `<init>`(v0, v1, v1, v1) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever$Cache;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L2af2fe.  `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.notOnJava9` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` := v0 @kind object;
  #L2af302.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.jvm.internal.ModuleNameRetriever` v0 @kind this) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2af314.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af31a.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` `buildCache`(`kotlin.coroutines.jvm.internal.ModuleNameRetriever` v5 @kind this, `kotlin.coroutines.jvm.internal.BaseContinuationImpl` v6 @kind object) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.buildCache:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/ModuleNameRetriever$Cache;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2af23c.  v0:= constclass @type ^`java.lang.Class` @kind object;
  #L2af240.  v1:= "getModule" @kind object;
  #L2af244.  v2:= 0I;
  #L2af246.  v3:= new `java.lang.Class`[v2];
  #L2af24a.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2af250.  v0:= temp @kind object;
  #L2af252.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2af258.  v1:= temp @kind object;
  #L2af25a.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L2af260.  v1:= temp @kind object;
  #L2af262.  v3:= "java.lang.Module" @kind object;
  #L2af266.  call temp:= `loadClass`(v1, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L2af26c.  v1:= temp @kind object;
  #L2af26e.  v3:= "getDescriptor" @kind object;
  #L2af272.  v4:= new `java.lang.Class`[v2];
  #L2af276.  call temp:= `getDeclaredMethod`(v1, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2af27c.  v1:= temp @kind object;
  #L2af27e.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2af284.  v6:= temp @kind object;
  #L2af286.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L2af28c.  v6:= temp @kind object;
  #L2af28e.  v3:= "java.lang.module.ModuleDescriptor" @kind object;
  #L2af292.  call temp:= `loadClass`(v6, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L2af298.  v6:= temp @kind object;
  #L2af29a.  v3:= "name" @kind object;
  #L2af29e.  v2:= new `java.lang.Class`[v2];
  #L2af2a2.  call temp:= `getDeclaredMethod`(v6, v3, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2af2a8.  v6:= temp @kind object;
  #L2af2aa.  v2:= new `kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache`;
  #L2af2ae.  call `<init>`(v2, v0, v1, v6) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever$Cache;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L2af2b4.  `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.cache` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` := v2 @kind object;
  #L2af2b8.  return v2 @kind object;
  #L2af2ba.  v6:= `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.notOnJava9` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` @kind object;
  #L2af2be.  `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.cache` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` := v6 @kind object;
  #L2af2c2.  return v6 @kind object;
  catch `java.lang.Exception` @[L2af23c..L2af2b8] goto L2af2ba;
}
procedure `java.lang.String` `getModuleName`(`kotlin.coroutines.jvm.internal.ModuleNameRetriever` v5 @kind this, `kotlin.coroutines.jvm.internal.BaseContinuationImpl` v6 @kind object) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.getModuleName:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2af198.  v0:= "continuation" @kind object;
  #L2af19c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2af1a2.  v0:= `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.cache` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` @kind object;
  #L2af1a6.  if v0 != 0 then goto L2af1b2;
  #L2af1aa.  call temp:= `buildCache`(v5, v6) @signature `Lkotlin/coroutines/jvm/internal/ModuleNameRetriever;.buildCache:(Lkotlin/coroutines/jvm/internal/BaseContinuationImpl;)Lkotlin/coroutines/jvm/internal/ModuleNameRetriever$Cache;` @kind direct;
  #L2af1b0.  v0:= temp @kind object;
  #L2af1b2.  v1:= `@@kotlin.coroutines.jvm.internal.ModuleNameRetriever.notOnJava9` @type ^`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache` @kind object;
  #L2af1b6.  v2:= 0I;
  #L2af1b8.  if v0 != v1 then goto L2af1be;
  #L2af1bc.  return v2 @kind object;
  #L2af1be.  v1:= v0.`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache.getModuleMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L2af1c2.  v3:= 0I;
  #L2af1c4.  if v1 == 0 then goto L2af1de;
  #L2af1c8.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2af1ce.  v6:= temp @kind object;
  #L2af1d0.  v4:= new `java.lang.Object`[v3];
  #L2af1d4.  call temp:= `invoke`(v1, v6, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2af1da.  v6:= temp @kind object;
  #L2af1dc.  goto L2af1e0;
  #L2af1de.  v6:= v2 @kind object;
  #L2af1e0.  if v6 != 0 then goto L2af1e6;
  #L2af1e4.  return v2 @kind object;
  #L2af1e6.  v1:= v0.`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache.getDescriptorMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L2af1ea.  if v1 == 0 then goto L2af1fc;
  #L2af1ee.  v4:= new `java.lang.Object`[v3];
  #L2af1f2.  call temp:= `invoke`(v1, v6, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2af1f8.  v6:= temp @kind object;
  #L2af1fa.  goto L2af1fe;
  #L2af1fc.  v6:= v2 @kind object;
  #L2af1fe.  if v6 != 0 then goto L2af204;
  #L2af202.  return v2 @kind object;
  #L2af204.  v0:= v0.`kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache.nameMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L2af208.  if v0 == 0 then goto L2af21a;
  #L2af20c.  v1:= new `java.lang.Object`[v3];
  #L2af210.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2af216.  v6:= temp @kind object;
  #L2af218.  goto L2af21c;
  #L2af21a.  v6:= v2 @kind object;
  #L2af21c.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L2af220.  if v0 == 0 then goto L2af22a;
  #L2af224.  v2:= v6 @kind object;
  #L2af226.  v2:= (`java.lang.String`) v2 @kind object;
  #L2af22a.  return v2 @kind object;
}
