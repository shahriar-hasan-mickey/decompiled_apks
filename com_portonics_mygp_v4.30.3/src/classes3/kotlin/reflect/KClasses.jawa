record `kotlin.reflect.KClasses` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `cast`(`kotlin.reflect.KClass` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/reflect/KClasses;.cast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2bea58.  v0:= "<this>" @kind object;
  #L2bea5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bea62.  call temp:= `isInstance`(v2, v3) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L2bea68.  v0:= temp;
  #L2bea6a.  if v0 == 0 then goto L2bea7a;
  #L2bea6e.  v2:= "null cannot be cast to non-null type T of kotlin.reflect.KClasses.cast" @kind object;
  #L2bea72.  call temp:= `requireNonNull`(v3, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2bea78.  return v3 @kind object;
  #L2bea7a.  v3:= new `java.lang.ClassCastException`;
  #L2bea7e.  v0:= new `java.lang.StringBuilder`;
  #L2bea82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bea88.  v1:= "Value cannot be cast to " @kind object;
  #L2bea8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bea92.  call temp:= `getQualifiedName`(v2) @signature `Lkotlin/reflect/KClass;.getQualifiedName:()Ljava/lang/String;` @kind interface;
  #L2bea98.  v2:= temp @kind object;
  #L2bea9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2beaa0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2beaa6.  v2:= temp @kind object;
  #L2beaa8.  call `<init>`(v3, v2) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2beaae.  throw v3;
}
procedure `java.lang.Object` `safeCast`(`kotlin.reflect.KClass` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/KClasses;.safeCast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2beac0.  v0:= "<this>" @kind object;
  #L2beac4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2beaca.  call temp:= `isInstance`(v1, v2) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L2bead0.  v1:= temp;
  #L2bead2.  if v1 == 0 then goto L2beae2;
  #L2bead6.  v1:= "null cannot be cast to non-null type T of kotlin.reflect.KClasses.safeCast" @kind object;
  #L2beada.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2beae0.  goto L2beae4;
  #L2beae2.  v2:= 0I;
  #L2beae4.  return v2 @kind object;
}
