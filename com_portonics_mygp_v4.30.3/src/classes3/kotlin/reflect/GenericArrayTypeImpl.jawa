record `kotlin.reflect.GenericArrayTypeImpl` @kind class @AccessFlag FINAL extends `java.lang.reflect.GenericArrayType` @kind interface, `kotlin.reflect.TypeImpl` @kind interface {
  `java.lang.reflect.Type` `kotlin.reflect.GenericArrayTypeImpl.elementType` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.reflect.GenericArrayTypeImpl` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2be890.  v0:= "elementType" @kind object;
  #L2be894.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2be89a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2be8a0.  v1.`kotlin.reflect.GenericArrayTypeImpl.elementType` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L2be8a4.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.reflect.GenericArrayTypeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be7b8.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L2be7bc.  if v0 == 0 then goto L2be7e4;
  #L2be7c0.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L2be7c6.  v0:= temp @kind object;
  #L2be7c8.  v2:= (`java.lang.reflect.GenericArrayType`) v2 @kind object;
  #L2be7cc.  call temp:= `getGenericComponentType`(v2) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L2be7d2.  v2:= temp @kind object;
  #L2be7d4.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2be7da.  v2:= temp;
  #L2be7dc.  if v2 == 0 then goto L2be7e4;
  #L2be7e0.  v2:= 1I;
  #L2be7e2.  goto L2be7e6;
  #L2be7e4.  v2:= 0I;
  #L2be7e6.  return v2;
}
procedure `java.lang.reflect.Type` `getGenericComponentType`(`kotlin.reflect.GenericArrayTypeImpl` v1 @kind this) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.getGenericComponentType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be878.  v0:= v1.`kotlin.reflect.GenericArrayTypeImpl.elementType` @type ^`java.lang.reflect.Type` @kind object;
  #L2be87c.  return v0 @kind object;
}
procedure `java.lang.String` `getTypeName`(`kotlin.reflect.GenericArrayTypeImpl` v2 @kind this) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.getTypeName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2be81c.  v0:= new `java.lang.StringBuilder`;
  #L2be820.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be826.  v1:= v2.`kotlin.reflect.GenericArrayTypeImpl.elementType` @type ^`java.lang.reflect.Type` @kind object;
  #L2be82a.  call temp:= `access$typeToString`(v1) @signature `Lkotlin/reflect/TypesJVMKt;.access$typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L2be830.  v1:= temp @kind object;
  #L2be832.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be838.  v1:= "[]" @kind object;
  #L2be83c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be842.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be848.  v0:= temp @kind object;
  #L2be84a.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.reflect.GenericArrayTypeImpl` v1 @kind this) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be7f8.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L2be7fe.  v0:= temp @kind object;
  #L2be800.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2be806.  v0:= temp;
  #L2be808.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.reflect.GenericArrayTypeImpl` v1 @kind this) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2be85c.  call temp:= `getTypeName`(v1) @signature `Lkotlin/reflect/GenericArrayTypeImpl;.getTypeName:()Ljava/lang/String;` @kind virtual;
  #L2be862.  v0:= temp @kind object;
  #L2be864.  return v0 @kind object;
}
