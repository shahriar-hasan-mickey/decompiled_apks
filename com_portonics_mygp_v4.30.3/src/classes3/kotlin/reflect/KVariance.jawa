record `kotlin.reflect.KVariance` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.reflect.KVariance`[] `@@kotlin.reflect.KVariance.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.IN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.INVARIANT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.OUT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.reflect.KVariance`[] `$values`() @signature `Lkotlin/reflect/KVariance;.$values:()[Lkotlin/reflect/KVariance;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2bf128.  v0:= 3I;
  #L2bf12a.  v0:= new `kotlin.reflect.KVariance`[v0];
  #L2bf12e.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L2bf132.  v2:= 0I;
  #L2bf134.  v0[v2]:= v1 @kind object;
  #L2bf138.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L2bf13c.  v2:= 1I;
  #L2bf13e.  v0[v2]:= v1 @kind object;
  #L2bf142.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L2bf146.  v2:= 2I;
  #L2bf148.  v0[v2]:= v1 @kind object;
  #L2bf14c.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/KVariance;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bf184.  v0:= new `kotlin.reflect.KVariance`;
  #L2bf188.  v1:= "INVARIANT" @kind object;
  #L2bf18c.  v2:= 0I;
  #L2bf18e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bf194.  `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` := v0 @kind object;
  #L2bf198.  v0:= new `kotlin.reflect.KVariance`;
  #L2bf19c.  v1:= "IN" @kind object;
  #L2bf1a0.  v2:= 1I;
  #L2bf1a2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bf1a8.  `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` := v0 @kind object;
  #L2bf1ac.  v0:= new `kotlin.reflect.KVariance`;
  #L2bf1b0.  v1:= "OUT" @kind object;
  #L2bf1b4.  v2:= 2I;
  #L2bf1b6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bf1bc.  `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` := v0 @kind object;
  #L2bf1c0.  call temp:= `$values`() @signature `Lkotlin/reflect/KVariance;.$values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L2bf1c6.  v0:= temp @kind object;
  #L2bf1c8.  `@@kotlin.reflect.KVariance.$VALUES` @type ^`kotlin.reflect.KVariance`[] := v0 @kind object;
  #L2bf1cc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.KVariance` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bf1e0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bf1e6.  return @kind void;
}
procedure `kotlin.reflect.KVariance` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/reflect/KVariance;.valueOf:(Ljava/lang/String;)Lkotlin/reflect/KVariance;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bf104.  v0:= constclass @type ^`kotlin.reflect.KVariance` @kind object;
  #L2bf108.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2bf10e.  v1:= temp @kind object;
  #L2bf110.  v1:= (`kotlin.reflect.KVariance`) v1 @kind object;
  #L2bf114.  return v1 @kind object;
}
procedure `kotlin.reflect.KVariance`[] `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bf160.  v0:= `@@kotlin.reflect.KVariance.$VALUES` @type ^`kotlin.reflect.KVariance`[] @kind object;
  #L2bf164.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2bf16a.  v0:= temp @kind object;
  #L2bf16c.  v0:= (`kotlin.reflect.KVariance`[]) v0 @kind object;
  #L2bf170.  return v0 @kind object;
}
