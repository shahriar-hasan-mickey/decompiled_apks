record `kotlin.reflect.KParameter$Kind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.reflect.KParameter$Kind`[] `@@kotlin.reflect.KParameter$Kind.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.EXTENSION_RECEIVER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.VALUE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.reflect.KParameter$Kind`[] `$values`() @signature `Lkotlin/reflect/KParameter$Kind;.$values:()[Lkotlin/reflect/KParameter$Kind;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2beb94.  v0:= 3I;
  #L2beb96.  v0:= new `kotlin.reflect.KParameter$Kind`[v0];
  #L2beb9a.  v1:= `@@kotlin.reflect.KParameter$Kind.INSTANCE` @type ^`kotlin.reflect.KParameter$Kind` @kind object;
  #L2beb9e.  v2:= 0I;
  #L2beba0.  v0[v2]:= v1 @kind object;
  #L2beba4.  v1:= `@@kotlin.reflect.KParameter$Kind.EXTENSION_RECEIVER` @type ^`kotlin.reflect.KParameter$Kind` @kind object;
  #L2beba8.  v2:= 1I;
  #L2bebaa.  v0[v2]:= v1 @kind object;
  #L2bebae.  v1:= `@@kotlin.reflect.KParameter$Kind.VALUE` @type ^`kotlin.reflect.KParameter$Kind` @kind object;
  #L2bebb2.  v2:= 2I;
  #L2bebb4.  v0[v2]:= v1 @kind object;
  #L2bebb8.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/KParameter$Kind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bebf0.  v0:= new `kotlin.reflect.KParameter$Kind`;
  #L2bebf4.  v1:= "INSTANCE" @kind object;
  #L2bebf8.  v2:= 0I;
  #L2bebfa.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bec00.  `@@kotlin.reflect.KParameter$Kind.INSTANCE` @type ^`kotlin.reflect.KParameter$Kind` := v0 @kind object;
  #L2bec04.  v0:= new `kotlin.reflect.KParameter$Kind`;
  #L2bec08.  v1:= "EXTENSION_RECEIVER" @kind object;
  #L2bec0c.  v2:= 1I;
  #L2bec0e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bec14.  `@@kotlin.reflect.KParameter$Kind.EXTENSION_RECEIVER` @type ^`kotlin.reflect.KParameter$Kind` := v0 @kind object;
  #L2bec18.  v0:= new `kotlin.reflect.KParameter$Kind`;
  #L2bec1c.  v1:= "VALUE" @kind object;
  #L2bec20.  v2:= 2I;
  #L2bec22.  call `<init>`(v0, v1, v2) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bec28.  `@@kotlin.reflect.KParameter$Kind.VALUE` @type ^`kotlin.reflect.KParameter$Kind` := v0 @kind object;
  #L2bec2c.  call temp:= `$values`() @signature `Lkotlin/reflect/KParameter$Kind;.$values:()[Lkotlin/reflect/KParameter$Kind;` @kind static;
  #L2bec32.  v0:= temp @kind object;
  #L2bec34.  `@@kotlin.reflect.KParameter$Kind.$VALUES` @type ^`kotlin.reflect.KParameter$Kind`[] := v0 @kind object;
  #L2bec38.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.KParameter$Kind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bec4c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2bec52.  return @kind void;
}
procedure `kotlin.reflect.KParameter$Kind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/reflect/KParameter$Kind;.valueOf:(Ljava/lang/String;)Lkotlin/reflect/KParameter$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2beb70.  v0:= constclass @type ^`kotlin.reflect.KParameter$Kind` @kind object;
  #L2beb74.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2beb7a.  v1:= temp @kind object;
  #L2beb7c.  v1:= (`kotlin.reflect.KParameter$Kind`) v1 @kind object;
  #L2beb80.  return v1 @kind object;
}
procedure `kotlin.reflect.KParameter$Kind`[] `values`() @signature `Lkotlin/reflect/KParameter$Kind;.values:()[Lkotlin/reflect/KParameter$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2bebcc.  v0:= `@@kotlin.reflect.KParameter$Kind.$VALUES` @type ^`kotlin.reflect.KParameter$Kind`[] @kind object;
  #L2bebd0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2bebd6.  v0:= temp @kind object;
  #L2bebd8.  v0:= (`kotlin.reflect.KParameter$Kind`[]) v0 @kind object;
  #L2bebdc.  return v0 @kind object;
}
