record `kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` @kind class @AccessFlag FINAL_SYNTHETIC extends `kotlin.jvm.internal.FunctionReferenceImpl` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` `@@kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bf34c.  v0:= new `kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1`;
  #L2bf350.  call `<init>`(v0) @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.<init>:()V` @kind direct;
  #L2bf356.  `@@kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1.INSTANCE` @type ^`kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` := v0 @kind object;
  #L2bf35a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` v6 @kind this) @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bf36c.  v2:= constclass @type ^`kotlin.reflect.TypesJVMKt` @kind object;
  #L2bf370.  v1:= 1I;
  #L2bf372.  v3:= "typeToString" @kind object;
  #L2bf376.  v4:= "typeToString(Ljava/lang/reflect/Type;)Ljava/lang/String;" @kind object;
  #L2bf37a.  v5:= 1I;
  #L2bf37c.  v0:= v6 @kind object;
  #L2bf37e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/FunctionReferenceImpl;.<init>:(ILjava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2bf384.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bf308.  v1:= (`java.lang.reflect.Type`) v1 @kind object;
  #L2bf30c.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.invoke:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind virtual;
  #L2bf312.  v1:= temp @kind object;
  #L2bf314.  return v1 @kind object;
}
procedure `java.lang.String` `invoke`(`kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lkotlin/reflect/ParameterizedTypeImpl$getTypeName$1$1;.invoke:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bf328.  v0:= "p0" @kind object;
  #L2bf32c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bf332.  call temp:= `access$typeToString`(v2) @signature `Lkotlin/reflect/TypesJVMKt;.access$typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L2bf338.  v2:= temp @kind object;
  #L2bf33a.  return v2 @kind object;
}
