record `kotlin.io.FileTreeWalk` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.io.FileWalkDirection` `kotlin.io.FileTreeWalk.direction` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.io.FileTreeWalk.maxDepth` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.io.FileTreeWalk.onEnter` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlin.io.FileTreeWalk.onFail` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.io.FileTreeWalk.onLeave` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `kotlin.io.FileTreeWalk.start` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v10 @kind this, `java.io.File` v11 @kind object, `kotlin.io.FileWalkDirection` v12 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2b1330.  v0:= "start" @kind object;
  #L2b1334.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b133a.  v0:= "direction" @kind object;
  #L2b133e.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b1344.  v4:= 0I;
  #L2b1346.  v5:= 0I;
  #L2b1348.  v6:= 0I;
  #L2b134a.  v7:= 0I;
  #L2b134c.  v8:= 32I;
  #L2b1350.  v9:= 0I;
  #L2b1352.  v1:= v10 @kind object;
  #L2b1354.  v2:= v11 @kind object;
  #L2b1356.  v3:= v12 @kind object;
  #L2b1358.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2b135e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v0 @kind this, `java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b1370.  v3:= v3 ^& 2;
  #L2b1374.  if v3 == 0 then goto L2b137c;
  #L2b1378.  v2:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b137c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;)V` @kind direct;
  #L2b1382.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v0 @kind this, `java.io.File` v1 @kind object, `kotlin.io.FileWalkDirection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `int` v6 ) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b1394.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b139a.  v0.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` := v1 @kind object;
  #L2b139e.  v0.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` := v2 @kind object;
  #L2b13a2.  v0.`kotlin.io.FileTreeWalk.onEnter` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L2b13a6.  v0.`kotlin.io.FileTreeWalk.onLeave` @type ^`kotlin.jvm.functions.Function1` := v4 @kind object;
  #L2b13aa.  v0.`kotlin.io.FileTreeWalk.onFail` @type ^`kotlin.jvm.functions.Function2` := v5 @kind object;
  #L2b13ae.  v0.`kotlin.io.FileTreeWalk.maxDepth` @type ^`int` := v6;
  #L2b13b2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk` v7 @kind this, `java.io.File` v8 @kind object, `kotlin.io.FileWalkDirection` v9 @kind object, `kotlin.jvm.functions.Function1` v10 @kind object, `kotlin.jvm.functions.Function1` v11 @kind object, `kotlin.jvm.functions.Function2` v12 @kind object, `int` v13 , `int` v14 , `kotlin.jvm.internal.DefaultConstructorMarker` v15 @kind object) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b13c4.  v15:= v14 ^& 2;
  #L2b13c8.  if v15 == 0 then goto L2b13d0;
  #L2b13cc.  v9:= `@@kotlin.io.FileWalkDirection.TOP_DOWN` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b13d0.  v2:= v9 @kind object;
  #L2b13d2.  v9:= v14 ^& 32;
  #L2b13d6.  if v9 == 0 then goto L2b13e8;
  #L2b13da.  v13:= 2147483647I;
  #L2b13e0.  v6:= 2147483647I;
  #L2b13e6.  goto L2b13ea;
  #L2b13e8.  v6:= v13;
  #L2b13ea.  v0:= v7 @kind object;
  #L2b13ec.  v1:= v8 @kind object;
  #L2b13ee.  v3:= v10 @kind object;
  #L2b13f0.  v4:= v11 @kind object;
  #L2b13f2.  v5:= v12 @kind object;
  #L2b13f4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L2b13fa.  return @kind void;
}
procedure `kotlin.io.FileWalkDirection` `access$getDirection$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getDirection$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/io/FileWalkDirection;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b12d0.  v0:= v0.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b12d4.  return v0 @kind object;
}
procedure `int` `access$getMaxDepth$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getMaxDepth$p:(Lkotlin/io/FileTreeWalk;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b1154.  v0:= v0.`kotlin.io.FileTreeWalk.maxDepth` @type ^`int`;
  #L2b1158.  return v0;
}
procedure `kotlin.jvm.functions.Function1` `access$getOnEnter$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b12e8.  v0:= v0.`kotlin.io.FileTreeWalk.onEnter` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b12ec.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function2` `access$getOnFail$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b1318.  v0:= v0.`kotlin.io.FileTreeWalk.onFail` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2b131c.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `access$getOnLeave$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b1300.  v0:= v0.`kotlin.io.FileTreeWalk.onLeave` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b1304.  return v0 @kind object;
}
procedure `java.io.File` `access$getStart$p`(`kotlin.io.FileTreeWalk` v0 @kind object) @signature `Lkotlin/io/FileTreeWalk;.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b116c.  v0:= v0.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` @kind object;
  #L2b1170.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.io.FileTreeWalk` v1 @kind this) @signature `Lkotlin/io/FileTreeWalk;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b1184.  v0:= new `kotlin.io.FileTreeWalk$FileTreeWalkIterator`;
  #L2b1188.  call `<init>`(v0, v1) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;.<init>:(Lkotlin/io/FileTreeWalk;)V` @kind direct;
  #L2b118e.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `maxDepth`(`kotlin.io.FileTreeWalk` v8 @kind this, `int` v9 ) @signature `Lkotlin/io/FileTreeWalk;.maxDepth:(I)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b11a0.  if v9 <= 0 then goto L2b11c8;
  #L2b11a4.  v7:= new `kotlin.io.FileTreeWalk`;
  #L2b11a8.  v1:= v8.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` @kind object;
  #L2b11ac.  v2:= v8.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b11b0.  v3:= v8.`kotlin.io.FileTreeWalk.onEnter` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b11b4.  v4:= v8.`kotlin.io.FileTreeWalk.onLeave` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b11b8.  v5:= v8.`kotlin.io.FileTreeWalk.onFail` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2b11bc.  v0:= v7 @kind object;
  #L2b11be.  v6:= v9;
  #L2b11c0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L2b11c6.  return v7 @kind object;
  #L2b11c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L2b11cc.  v1:= new `java.lang.StringBuilder`;
  #L2b11d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b11d6.  v2:= "depth must be positive, but was " @kind object;
  #L2b11da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b11e0.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b11e6.  v9:= 46I;
  #L2b11ea.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b11f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b11f6.  v9:= temp @kind object;
  #L2b11f8.  call `<init>`(v0, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b11fe.  throw v0;
}
procedure `kotlin.io.FileTreeWalk` `onEnter`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onEnter:(Lkotlin/jvm/functions/Function1;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b1210.  v0:= "function" @kind object;
  #L2b1214.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b121a.  v0:= new `kotlin.io.FileTreeWalk`;
  #L2b121e.  v2:= v8.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` @kind object;
  #L2b1222.  v3:= v8.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b1226.  v5:= v8.`kotlin.io.FileTreeWalk.onLeave` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b122a.  v6:= v8.`kotlin.io.FileTreeWalk.onFail` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2b122e.  v7:= v8.`kotlin.io.FileTreeWalk.maxDepth` @type ^`int`;
  #L2b1232.  v1:= v0 @kind object;
  #L2b1234.  v4:= v9 @kind object;
  #L2b1236.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L2b123c.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `onFail`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function2` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onFail:(Lkotlin/jvm/functions/Function2;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b1250.  v0:= "function" @kind object;
  #L2b1254.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b125a.  v0:= new `kotlin.io.FileTreeWalk`;
  #L2b125e.  v2:= v8.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` @kind object;
  #L2b1262.  v3:= v8.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b1266.  v4:= v8.`kotlin.io.FileTreeWalk.onEnter` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b126a.  v5:= v8.`kotlin.io.FileTreeWalk.onLeave` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b126e.  v7:= v8.`kotlin.io.FileTreeWalk.maxDepth` @type ^`int`;
  #L2b1272.  v1:= v0 @kind object;
  #L2b1274.  v6:= v9 @kind object;
  #L2b1276.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L2b127c.  return v0 @kind object;
}
procedure `kotlin.io.FileTreeWalk` `onLeave`(`kotlin.io.FileTreeWalk` v8 @kind this, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlin/io/FileTreeWalk;.onLeave:(Lkotlin/jvm/functions/Function1;)Lkotlin/io/FileTreeWalk;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b1290.  v0:= "function" @kind object;
  #L2b1294.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b129a.  v0:= new `kotlin.io.FileTreeWalk`;
  #L2b129e.  v2:= v8.`kotlin.io.FileTreeWalk.start` @type ^`java.io.File` @kind object;
  #L2b12a2.  v3:= v8.`kotlin.io.FileTreeWalk.direction` @type ^`kotlin.io.FileWalkDirection` @kind object;
  #L2b12a6.  v4:= v8.`kotlin.io.FileTreeWalk.onEnter` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b12aa.  v6:= v8.`kotlin.io.FileTreeWalk.onFail` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2b12ae.  v7:= v8.`kotlin.io.FileTreeWalk.maxDepth` @type ^`int`;
  #L2b12b2.  v1:= v0 @kind object;
  #L2b12b4.  v5:= v9 @kind object;
  #L2b12b6.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/io/FileTreeWalk;.<init>:(Ljava/io/File;Lkotlin/io/FileWalkDirection;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L2b12bc.  return v0 @kind object;
}
