record `kotlin.io.ExceptionsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `access$constructMessage`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/io/ExceptionsKt;.access$constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b0720.  call temp:= `constructMessage`(v0, v1, v2) @signature `Lkotlin/io/ExceptionsKt;.constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2b0726.  v0:= temp @kind object;
  #L2b0728.  return v0 @kind object;
}
procedure `java.lang.String` `constructMessage`(`java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/ExceptionsKt;.constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2b073c.  v0:= new `java.lang.StringBuilder`;
  #L2b0740.  call temp:= `toString`(v2) @signature `Ljava/io/File;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b0746.  v2:= temp @kind object;
  #L2b0748.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b074e.  if v3 == 0 then goto L2b077a;
  #L2b0752.  v2:= new `java.lang.StringBuilder`;
  #L2b0756.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b075c.  v1:= " -> " @kind object;
  #L2b0760.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b0766.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b076c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b0772.  v2:= temp @kind object;
  #L2b0774.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b077a.  if v4 == 0 then goto L2b07a6;
  #L2b077e.  v2:= new `java.lang.StringBuilder`;
  #L2b0782.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b0788.  v3:= ": " @kind object;
  #L2b078c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b0792.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b0798.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b079e.  v2:= temp @kind object;
  #L2b07a0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b07a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b07ac.  v2:= temp @kind object;
  #L2b07ae.  v3:= "sb.toString()" @kind object;
  #L2b07b2.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b07b8.  return v2 @kind object;
}
