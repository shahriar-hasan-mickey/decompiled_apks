record `kotlin.io.path.PathRelativizer` @kind class @AccessFlag FINAL {
}
global `kotlin.io.path.PathRelativizer` `@@kotlin.io.path.PathRelativizer.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.file.Path` `@@kotlin.io.path.PathRelativizer.emptyPath` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.file.Path` `@@kotlin.io.path.PathRelativizer.parentPath` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/io/path/PathRelativizer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b23cc.  v0:= new `kotlin.io.path.PathRelativizer`;
  #L2b23d0.  call `<init>`(v0) @signature `Lkotlin/io/path/PathRelativizer;.<init>:()V` @kind direct;
  #L2b23d6.  `@@kotlin.io.path.PathRelativizer.INSTANCE` @type ^`kotlin.io.path.PathRelativizer` := v0 @kind object;
  #L2b23da.  v0:= 0I;
  #L2b23dc.  v1:= new `java.lang.String`[v0];
  #L2b23e0.  v2:= "" @kind object;
  #L2b23e4.  call temp:= `get`(v2, v1) @signature `Ljava/nio/file/Paths;.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind static;
  #L2b23ea.  v1:= temp @kind object;
  #L2b23ec.  `@@kotlin.io.path.PathRelativizer.emptyPath` @type ^`java.nio.file.Path` := v1 @kind object;
  #L2b23f0.  v0:= new `java.lang.String`[v0];
  #L2b23f4.  v1:= ".." @kind object;
  #L2b23f8.  call temp:= `get`(v1, v0) @signature `Ljava/nio/file/Paths;.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind static;
  #L2b23fe.  v0:= temp @kind object;
  #L2b2400.  `@@kotlin.io.path.PathRelativizer.parentPath` @type ^`java.nio.file.Path` := v0 @kind object;
  #L2b2404.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.path.PathRelativizer` v0 @kind this) @signature `Lkotlin/io/path/PathRelativizer;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b2418.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b241e.  return @kind void;
}
procedure `java.nio.file.Path` `tryRelativeTo`(`kotlin.io.path.PathRelativizer` v7 @kind this, `java.nio.file.Path` v8 @kind object, `java.nio.file.Path` v9 @kind object) @signature `Lkotlin/io/path/PathRelativizer;.tryRelativeTo:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b2294.  v0:= "path" @kind object;
  #L2b2298.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b229e.  v0:= "base" @kind object;
  #L2b22a2.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b22a8.  call temp:= `normalize`(v9) @signature `Ljava/nio/file/Path;.normalize:()Ljava/nio/file/Path;` @kind interface;
  #L2b22ae.  v9:= temp @kind object;
  #L2b22b0.  call temp:= `normalize`(v8) @signature `Ljava/nio/file/Path;.normalize:()Ljava/nio/file/Path;` @kind interface;
  #L2b22b6.  v8:= temp @kind object;
  #L2b22b8.  call temp:= `relativize`(v9, v8) @signature `Ljava/nio/file/Path;.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;` @kind interface;
  #L2b22be.  v0:= temp @kind object;
  #L2b22c0.  call temp:= `getNameCount`(v9) @signature `Ljava/nio/file/Path;.getNameCount:()I` @kind interface;
  #L2b22c6.  v1:= temp;
  #L2b22c8.  call temp:= `getNameCount`(v8) @signature `Ljava/nio/file/Path;.getNameCount:()I` @kind interface;
  #L2b22ce.  v2:= temp;
  #L2b22d0.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2b22d6.  v1:= temp;
  #L2b22d8.  v2:= 0I;
  #L2b22da.  v3:= 0I;
  #L2b22dc.  if v3 >= v1 then goto L2b2326;
  #L2b22e0.  v4:= v3 + 1;
  #L2b22e4.  call temp:= `getName`(v9, v3) @signature `Ljava/nio/file/Path;.getName:(I)Ljava/nio/file/Path;` @kind interface;
  #L2b22ea.  v5:= temp @kind object;
  #L2b22ec.  v6:= `@@kotlin.io.path.PathRelativizer.parentPath` @type ^`java.nio.file.Path` @kind object;
  #L2b22f0.  call temp:= `areEqual`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b22f6.  v5:= temp;
  #L2b22f8.  if v5 != 0 then goto L2b22fe;
  #L2b22fc.  goto L2b2326;
  #L2b22fe.  call temp:= `getName`(v8, v3) @signature `Ljava/nio/file/Path;.getName:(I)Ljava/nio/file/Path;` @kind interface;
  #L2b2304.  v3:= temp @kind object;
  #L2b2306.  call temp:= `areEqual`(v3, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b230c.  v3:= temp;
  #L2b230e.  if v3 == 0 then goto L2b2316;
  #L2b2312.  v3:= v4;
  #L2b2314.  goto L2b22dc;
  #L2b2316.  v8:= new `java.lang.IllegalArgumentException`;
  #L2b231a.  v9:= "Unable to compute relative path" @kind object;
  #L2b231e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2324.  throw v8;
  #L2b2326.  call temp:= `areEqual`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b232c.  v1:= temp;
  #L2b232e.  if v1 != 0 then goto L2b2344;
  #L2b2332.  v1:= `@@kotlin.io.path.PathRelativizer.emptyPath` @type ^`java.nio.file.Path` @kind object;
  #L2b2336.  call temp:= `areEqual`(v9, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b233c.  v9:= temp;
  #L2b233e.  if v9 == 0 then goto L2b2344;
  #L2b2342.  goto L2b23ae;
  #L2b2344.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b234a.  v8:= temp @kind object;
  #L2b234c.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L2b2352.  v9:= temp @kind object;
  #L2b2354.  call temp:= `getSeparator`(v9) @signature `Ljava/nio/file/FileSystem;.getSeparator:()Ljava/lang/String;` @kind virtual;
  #L2b235a.  v9:= temp @kind object;
  #L2b235c.  v1:= "rn.fileSystem.separator" @kind object;
  #L2b2360.  call `checkNotNullExpressionValue`(v9, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b2366.  v1:= 2I;
  #L2b2368.  v3:= 0I;
  #L2b236a.  call temp:= `endsWith$default`(v8, v9, v2, v1, v3) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L2b2370.  v9:= temp;
  #L2b2372.  if v9 == 0 then goto L2b23ac;
  #L2b2376.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L2b237c.  v9:= temp @kind object;
  #L2b237e.  call temp:= `getFileSystem`(v0) @signature `Ljava/nio/file/Path;.getFileSystem:()Ljava/nio/file/FileSystem;` @kind interface;
  #L2b2384.  v0:= temp @kind object;
  #L2b2386.  call temp:= `getSeparator`(v0) @signature `Ljava/nio/file/FileSystem;.getSeparator:()Ljava/lang/String;` @kind virtual;
  #L2b238c.  v0:= temp @kind object;
  #L2b238e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b2394.  v0:= temp;
  #L2b2396.  call temp:= `dropLast`(v8, v0) @signature `Lkotlin/text/StringsKt;.dropLast:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L2b239c.  v8:= temp @kind object;
  #L2b239e.  v0:= new `java.lang.String`[v2];
  #L2b23a2.  call temp:= `getPath`(v9, v8, v0) @signature `Ljava/nio/file/FileSystem;.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;` @kind virtual;
  #L2b23a8.  v8:= temp @kind object;
  #L2b23aa.  goto L2b23ae;
  #L2b23ac.  v8:= v0 @kind object;
  #L2b23ae.  v9:= "r" @kind object;
  #L2b23b2.  call `checkNotNullExpressionValue`(v8, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b23b8.  return v8 @kind object;
}
