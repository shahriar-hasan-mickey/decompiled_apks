record `kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$WalkState` @kind class {
  `kotlin.io.FileTreeWalk$FileTreeWalkIterator` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState.visited` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState` v1 @kind this, `kotlin.io.FileTreeWalk$FileTreeWalkIterator` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState;.<init>:(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0d78.  v0:= "rootFile" @kind object;
  #L2b0d7c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b0d82.  v1.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` := v2 @kind object;
  #L2b0d86.  call `<init>`(v1, v3) @signature `Lkotlin/io/FileTreeWalk$WalkState;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2b0d8c.  return @kind void;
}
procedure `java.io.File` `step`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState` v1 @kind this) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState;.step:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0d4c.  v0:= v1.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState.visited` @type ^`boolean` @kind boolean;
  #L2b0d50.  if v0 == 0 then goto L2b0d58;
  #L2b0d54.  v0:= 0I;
  #L2b0d56.  return v0 @kind object;
  #L2b0d58.  v0:= 1I;
  #L2b0d5a.  v1.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState.visited` @type ^`boolean` := v0 @kind boolean;
  #L2b0d5e.  call temp:= `getRoot`(v1) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0d64.  v0:= temp @kind object;
  #L2b0d66.  return v0 @kind object;
}
