record `kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState` @kind class @AccessFlag FINAL extends `kotlin.io.FileTreeWalk$DirectoryState` @kind class {
  `int` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileIndex` @AccessFlag PRIVATE;
  `java.io.File`[] `kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @AccessFlag PRIVATE;
  `boolean` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.rootVisited` @AccessFlag PRIVATE;
  `kotlin.io.FileTreeWalk$FileTreeWalkIterator` `kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState` v1 @kind this, `kotlin.io.FileTreeWalk$FileTreeWalkIterator` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState;.<init>:(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0efc.  v0:= "rootDir" @kind object;
  #L2b0f00.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b0f06.  v1.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` := v2 @kind object;
  #L2b0f0a.  call `<init>`(v1, v3) @signature `Lkotlin/io/FileTreeWalk$DirectoryState;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2b0f10.  return @kind void;
}
procedure `java.io.File` `step`(`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState` v10 @kind this) @signature `Lkotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState;.step:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2b0da0.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.rootVisited` @type ^`boolean` @kind boolean;
  #L2b0da4.  v1:= 0I;
  #L2b0da6.  if v0 != 0 then goto L2b0df8;
  #L2b0daa.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L2b0dae.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.this$0` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L2b0db2.  call temp:= `access$getOnEnter$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnEnter$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2b0db8.  v0:= temp @kind object;
  #L2b0dba.  v2:= 0I;
  #L2b0dbc.  v3:= 1I;
  #L2b0dbe.  if v0 == 0 then goto L2b0de4;
  #L2b0dc2.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0dc8.  v4:= temp @kind object;
  #L2b0dca.  call temp:= `invoke`(v0, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b0dd0.  v0:= temp @kind object;
  #L2b0dd2.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L2b0dd6.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2b0ddc.  v0:= temp;
  #L2b0dde.  if v0 != 0 then goto L2b0de4;
  #L2b0de2.  v2:= 1I;
  #L2b0de4.  if v2 == 0 then goto L2b0dea;
  #L2b0de8.  return v1 @kind object;
  #L2b0dea.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.rootVisited` @type ^`boolean` := v3 @kind boolean;
  #L2b0dee.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0df4.  v0:= temp @kind object;
  #L2b0df6.  return v0 @kind object;
  #L2b0df8.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @type ^`java.io.File`[] @kind object;
  #L2b0dfc.  if v0 == 0 then goto L2b0e36;
  #L2b0e00.  v2:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileIndex` @type ^`int`;
  #L2b0e04.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2b0e0a.  v0:= length @variable v0;
  #L2b0e0c.  if v2 >= v0 then goto L2b0e12;
  #L2b0e10.  goto L2b0e36;
  #L2b0e12.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L2b0e16.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.this$0` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L2b0e1a.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2b0e20.  v0:= temp @kind object;
  #L2b0e22.  if v0 == 0 then goto L2b0e34;
  #L2b0e26.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0e2c.  v2:= temp @kind object;
  #L2b0e2e.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b0e34.  return v1 @kind object;
  #L2b0e36.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @type ^`java.io.File`[] @kind object;
  #L2b0e3a.  if v0 != 0 then goto L2b0ece;
  #L2b0e3e.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0e44.  v0:= temp @kind object;
  #L2b0e46.  call temp:= `listFiles`(v0) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L2b0e4c.  v0:= temp @kind object;
  #L2b0e4e.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @type ^`java.io.File`[] := v0 @kind object;
  #L2b0e52.  if v0 != 0 then goto L2b0e96;
  #L2b0e56.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L2b0e5a.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.this$0` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L2b0e5e.  call temp:= `access$getOnFail$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnFail$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L2b0e64.  v0:= temp @kind object;
  #L2b0e66.  if v0 == 0 then goto L2b0e96;
  #L2b0e6a.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0e70.  v2:= temp @kind object;
  #L2b0e72.  v9:= new `kotlin.io.AccessDeniedException`;
  #L2b0e76.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0e7c.  v4:= temp @kind object;
  #L2b0e7e.  v5:= 0I;
  #L2b0e80.  v7:= 2I;
  #L2b0e82.  v8:= 0I;
  #L2b0e84.  v6:= "Cannot list files in a directory" @kind object;
  #L2b0e88.  v3:= v9 @kind object;
  #L2b0e8a.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/io/AccessDeniedException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2b0e90.  call temp:= `invoke`(v0, v2, v9) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b0e96.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @type ^`java.io.File`[] @kind object;
  #L2b0e9a.  if v0 == 0 then goto L2b0eaa;
  #L2b0e9e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2b0ea4.  v0:= length @variable v0;
  #L2b0ea6.  if v0 != 0 then goto L2b0ece;
  #L2b0eaa.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.this$0` @type ^`kotlin.io.FileTreeWalk$FileTreeWalkIterator` @kind object;
  #L2b0eae.  v0:= v0.`kotlin.io.FileTreeWalk$FileTreeWalkIterator.this$0` @type ^`kotlin.io.FileTreeWalk` @kind object;
  #L2b0eb2.  call temp:= `access$getOnLeave$p`(v0) @signature `Lkotlin/io/FileTreeWalk;.access$getOnLeave$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L2b0eb8.  v0:= temp @kind object;
  #L2b0eba.  if v0 == 0 then goto L2b0ecc;
  #L2b0ebe.  call temp:= `getRoot`(v10) @signature `Lkotlin/io/FileTreeWalk$WalkState;.getRoot:()Ljava/io/File;` @kind virtual;
  #L2b0ec4.  v2:= temp @kind object;
  #L2b0ec6.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b0ecc.  return v1 @kind object;
  #L2b0ece.  v0:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileList` @type ^`java.io.File`[] @kind object;
  #L2b0ed2.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2b0ed8.  v1:= v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileIndex` @type ^`int`;
  #L2b0edc.  v2:= v1 + 1;
  #L2b0ee0.  v10.`kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState.fileIndex` @type ^`int` := v2;
  #L2b0ee4.  v0:= v0[v1] @kind object;
  #L2b0ee8.  return v0 @kind object;
}
