record `kotlin.io.OnErrorAction` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.io.OnErrorAction`[] `@@kotlin.io.OnErrorAction.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.SKIP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.io.OnErrorAction` `@@kotlin.io.OnErrorAction.TERMINATE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.io.OnErrorAction`[] `$values`() @signature `Lkotlin/io/OnErrorAction;.$values:()[Lkotlin/io/OnErrorAction;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2b1cb8.  v0:= 2I;
  #L2b1cba.  v0:= new `kotlin.io.OnErrorAction`[v0];
  #L2b1cbe.  v1:= `@@kotlin.io.OnErrorAction.SKIP` @type ^`kotlin.io.OnErrorAction` @kind object;
  #L2b1cc2.  v2:= 0I;
  #L2b1cc4.  v0[v2]:= v1 @kind object;
  #L2b1cc8.  v1:= `@@kotlin.io.OnErrorAction.TERMINATE` @type ^`kotlin.io.OnErrorAction` @kind object;
  #L2b1ccc.  v2:= 1I;
  #L2b1cce.  v0[v2]:= v1 @kind object;
  #L2b1cd2.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/io/OnErrorAction;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b1d08.  v0:= new `kotlin.io.OnErrorAction`;
  #L2b1d0c.  v1:= "SKIP" @kind object;
  #L2b1d10.  v2:= 0I;
  #L2b1d12.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b1d18.  `@@kotlin.io.OnErrorAction.SKIP` @type ^`kotlin.io.OnErrorAction` := v0 @kind object;
  #L2b1d1c.  v0:= new `kotlin.io.OnErrorAction`;
  #L2b1d20.  v1:= "TERMINATE" @kind object;
  #L2b1d24.  v2:= 1I;
  #L2b1d26.  call `<init>`(v0, v1, v2) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b1d2c.  `@@kotlin.io.OnErrorAction.TERMINATE` @type ^`kotlin.io.OnErrorAction` := v0 @kind object;
  #L2b1d30.  call temp:= `$values`() @signature `Lkotlin/io/OnErrorAction;.$values:()[Lkotlin/io/OnErrorAction;` @kind static;
  #L2b1d36.  v0:= temp @kind object;
  #L2b1d38.  `@@kotlin.io.OnErrorAction.$VALUES` @type ^`kotlin.io.OnErrorAction`[] := v0 @kind object;
  #L2b1d3c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.OnErrorAction` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/io/OnErrorAction;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b1d50.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2b1d56.  return @kind void;
}
procedure `kotlin.io.OnErrorAction` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/io/OnErrorAction;.valueOf:(Ljava/lang/String;)Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b1c94.  v0:= constclass @type ^`kotlin.io.OnErrorAction` @kind object;
  #L2b1c98.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2b1c9e.  v1:= temp @kind object;
  #L2b1ca0.  v1:= (`kotlin.io.OnErrorAction`) v1 @kind object;
  #L2b1ca4.  return v1 @kind object;
}
procedure `kotlin.io.OnErrorAction`[] `values`() @signature `Lkotlin/io/OnErrorAction;.values:()[Lkotlin/io/OnErrorAction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b1ce4.  v0:= `@@kotlin.io.OnErrorAction.$VALUES` @type ^`kotlin.io.OnErrorAction`[] @kind object;
  #L2b1ce8.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2b1cee.  v0:= temp @kind object;
  #L2b1cf0.  v0:= (`kotlin.io.OnErrorAction`[]) v0 @kind object;
  #L2b1cf4.  return v0 @kind object;
}
