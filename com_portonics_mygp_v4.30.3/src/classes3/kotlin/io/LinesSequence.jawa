record `kotlin.io.LinesSequence` @kind class @AccessFlag FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `java.io.BufferedReader` `kotlin.io.LinesSequence.reader` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.LinesSequence` v1 @kind this, `java.io.BufferedReader` v2 @kind object) @signature `Lkotlin/io/LinesSequence;.<init>:(Ljava/io/BufferedReader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b1c18.  v0:= "reader" @kind object;
  #L2b1c1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b1c22.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b1c28.  v1.`kotlin.io.LinesSequence.reader` @type ^`java.io.BufferedReader` := v2 @kind object;
  #L2b1c2c.  return @kind void;
}
procedure `java.io.BufferedReader` `access$getReader$p`(`kotlin.io.LinesSequence` v0 @kind object) @signature `Lkotlin/io/LinesSequence;.access$getReader$p:(Lkotlin/io/LinesSequence;)Ljava/io/BufferedReader;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2b1be4.  v0:= v0.`kotlin.io.LinesSequence.reader` @type ^`java.io.BufferedReader` @kind object;
  #L2b1be8.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.io.LinesSequence` v1 @kind this) @signature `Lkotlin/io/LinesSequence;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b1bfc.  v0:= new `kotlin.io.LinesSequence$iterator$1`;
  #L2b1c00.  call `<init>`(v0, v1) @signature `Lkotlin/io/LinesSequence$iterator$1;.<init>:(Lkotlin/io/LinesSequence;)V` @kind direct;
  #L2b1c06.  return v0 @kind object;
}
