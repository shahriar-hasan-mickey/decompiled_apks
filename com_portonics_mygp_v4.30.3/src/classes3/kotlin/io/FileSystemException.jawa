record `kotlin.io.FileSystemException` @kind class @AccessFlag PUBLIC extends `java.io.IOException` @kind class {
  `java.io.File` `kotlin.io.FileSystemException.file` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `kotlin.io.FileSystemException.other` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.io.FileSystemException.reason` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.io.FileSystemException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0b6c.  v0:= "file" @kind object;
  #L2b0b70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b0b76.  call temp:= `access$constructMessage`(v2, v3, v4) @signature `Lkotlin/io/ExceptionsKt;.access$constructMessage:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2b0b7c.  v0:= temp @kind object;
  #L2b0b7e.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b0b84.  v1.`kotlin.io.FileSystemException.file` @type ^`java.io.File` := v2 @kind object;
  #L2b0b88.  v1.`kotlin.io.FileSystemException.other` @type ^`java.io.File` := v3 @kind object;
  #L2b0b8c.  v1.`kotlin.io.FileSystemException.reason` @type ^`java.lang.String` := v4 @kind object;
  #L2b0b90.  return @kind void;
}
procedure `void` `<init>`(`kotlin.io.FileSystemException` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0ba4.  v6:= v5 ^& 2;
  #L2b0ba8.  v0:= 0I;
  #L2b0baa.  if v6 == 0 then goto L2b0bb0;
  #L2b0bae.  v3:= v0 @kind object;
  #L2b0bb0.  v5:= v5 ^& 4;
  #L2b0bb4.  if v5 == 0 then goto L2b0bba;
  #L2b0bb8.  v4:= v0 @kind object;
  #L2b0bba.  call `<init>`(v1, v2, v3, v4) @signature `Lkotlin/io/FileSystemException;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2b0bc0.  return @kind void;
}
procedure `java.io.File` `getFile`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getFile:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b0b24.  v0:= v1.`kotlin.io.FileSystemException.file` @type ^`java.io.File` @kind object;
  #L2b0b28.  return v0 @kind object;
}
procedure `java.io.File` `getOther`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getOther:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b0b3c.  v0:= v1.`kotlin.io.FileSystemException.other` @type ^`java.io.File` @kind object;
  #L2b0b40.  return v0 @kind object;
}
procedure `java.lang.String` `getReason`(`kotlin.io.FileSystemException` v1 @kind this) @signature `Lkotlin/io/FileSystemException;.getReason:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b0b54.  v0:= v1.`kotlin.io.FileSystemException.reason` @type ^`java.lang.String` @kind object;
  #L2b0b58.  return v0 @kind object;
}
