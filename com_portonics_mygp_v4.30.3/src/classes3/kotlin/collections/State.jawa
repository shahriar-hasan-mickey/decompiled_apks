record `kotlin.collections.State` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.collections.State`[] `@@kotlin.collections.State.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.collections.State` `@@kotlin.collections.State.Done` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.collections.State` `@@kotlin.collections.State.Failed` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.collections.State` `@@kotlin.collections.State.NotReady` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.collections.State` `@@kotlin.collections.State.Ready` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.collections.State`[] `$values`() @signature `Lkotlin/collections/State;.$values:()[Lkotlin/collections/State;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2a6ef0.  v0:= 4I;
  #L2a6ef2.  v0:= new `kotlin.collections.State`[v0];
  #L2a6ef6.  v1:= `@@kotlin.collections.State.Ready` @type ^`kotlin.collections.State` @kind object;
  #L2a6efa.  v2:= 0I;
  #L2a6efc.  v0[v2]:= v1 @kind object;
  #L2a6f00.  v1:= `@@kotlin.collections.State.NotReady` @type ^`kotlin.collections.State` @kind object;
  #L2a6f04.  v2:= 1I;
  #L2a6f06.  v0[v2]:= v1 @kind object;
  #L2a6f0a.  v1:= `@@kotlin.collections.State.Done` @type ^`kotlin.collections.State` @kind object;
  #L2a6f0e.  v2:= 2I;
  #L2a6f10.  v0[v2]:= v1 @kind object;
  #L2a6f14.  v1:= `@@kotlin.collections.State.Failed` @type ^`kotlin.collections.State` @kind object;
  #L2a6f18.  v2:= 3I;
  #L2a6f1a.  v0[v2]:= v1 @kind object;
  #L2a6f1e.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/collections/State;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2a6f54.  v0:= new `kotlin.collections.State`;
  #L2a6f58.  v1:= "Ready" @kind object;
  #L2a6f5c.  v2:= 0I;
  #L2a6f5e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/collections/State;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a6f64.  `@@kotlin.collections.State.Ready` @type ^`kotlin.collections.State` := v0 @kind object;
  #L2a6f68.  v0:= new `kotlin.collections.State`;
  #L2a6f6c.  v1:= "NotReady" @kind object;
  #L2a6f70.  v2:= 1I;
  #L2a6f72.  call `<init>`(v0, v1, v2) @signature `Lkotlin/collections/State;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a6f78.  `@@kotlin.collections.State.NotReady` @type ^`kotlin.collections.State` := v0 @kind object;
  #L2a6f7c.  v0:= new `kotlin.collections.State`;
  #L2a6f80.  v1:= "Done" @kind object;
  #L2a6f84.  v2:= 2I;
  #L2a6f86.  call `<init>`(v0, v1, v2) @signature `Lkotlin/collections/State;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a6f8c.  `@@kotlin.collections.State.Done` @type ^`kotlin.collections.State` := v0 @kind object;
  #L2a6f90.  v0:= new `kotlin.collections.State`;
  #L2a6f94.  v1:= "Failed" @kind object;
  #L2a6f98.  v2:= 3I;
  #L2a6f9a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/collections/State;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a6fa0.  `@@kotlin.collections.State.Failed` @type ^`kotlin.collections.State` := v0 @kind object;
  #L2a6fa4.  call temp:= `$values`() @signature `Lkotlin/collections/State;.$values:()[Lkotlin/collections/State;` @kind static;
  #L2a6faa.  v0:= temp @kind object;
  #L2a6fac.  `@@kotlin.collections.State.$VALUES` @type ^`kotlin.collections.State`[] := v0 @kind object;
  #L2a6fb0.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.State` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/State;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a6fc4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2a6fca.  return @kind void;
}
procedure `kotlin.collections.State` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/collections/State;.valueOf:(Ljava/lang/String;)Lkotlin/collections/State;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a6ecc.  v0:= constclass @type ^`kotlin.collections.State` @kind object;
  #L2a6ed0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2a6ed6.  v1:= temp @kind object;
  #L2a6ed8.  v1:= (`kotlin.collections.State`) v1 @kind object;
  #L2a6edc.  return v1 @kind object;
}
procedure `kotlin.collections.State`[] `values`() @signature `Lkotlin/collections/State;.values:()[Lkotlin/collections/State;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a6f30.  v0:= `@@kotlin.collections.State.$VALUES` @type ^`kotlin.collections.State`[] @kind object;
  #L2a6f34.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2a6f3a.  v0:= temp @kind object;
  #L2a6f3c.  v0:= (`kotlin.collections.State`[]) v0 @kind object;
  #L2a6f40.  return v0 @kind object;
}
