record `kotlin.collections.BrittleContainsOptimizationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2a2f9c.  v0:= "<this>" @kind object;
  #L2a2fa0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a2fa6.  v0:= instanceof @variable v2 @type ^`java.util.Set` @kind boolean;
  #L2a2faa.  if v0 == 0 then goto L2a2fb4;
  #L2a2fae.  v2:= (`java.util.Collection`) v2 @kind object;
  #L2a2fb2.  goto L2a2ff6;
  #L2a2fb4.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L2a2fb8.  if v0 == 0 then goto L2a2fdc;
  #L2a2fbc.  v0:= v2 @kind object;
  #L2a2fbe.  v0:= (`java.util.Collection`) v0 @kind object;
  #L2a2fc2.  call temp:= `safeToConvertToSet`(v0) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.safeToConvertToSet:(Ljava/util/Collection;)Z` @kind static;
  #L2a2fc8.  v1:= temp;
  #L2a2fca.  if v1 == 0 then goto L2a2fd8;
  #L2a2fce.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L2a2fd4.  v2:= temp @kind object;
  #L2a2fd6.  goto L2a2ff6;
  #L2a2fd8.  v2:= v0 @kind object;
  #L2a2fda.  goto L2a2ff6;
  #L2a2fdc.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L2a2fe0.  if v0 == 0 then goto L2a2fee;
  #L2a2fe4.  call temp:= `toHashSet`(v2) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L2a2fea.  v2:= temp @kind object;
  #L2a2fec.  goto L2a2ff6;
  #L2a2fee.  call temp:= `toList`(v2) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L2a2ff4.  v2:= temp @kind object;
  #L2a2ff6.  return v2 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Lkotlin/sequences/Sequence;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a3040.  v0:= "<this>" @kind object;
  #L2a3044.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a304a.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L2a304e.  if v0 == 0 then goto L2a305c;
  #L2a3052.  call temp:= `toHashSet`(v1) @signature `Lkotlin/sequences/SequencesKt;.toHashSet:(Lkotlin/sequences/Sequence;)Ljava/util/HashSet;` @kind static;
  #L2a3058.  v1:= temp @kind object;
  #L2a305a.  goto L2a3064;
  #L2a305c.  call temp:= `toList`(v1) @signature `Lkotlin/sequences/SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L2a3062.  v1:= temp @kind object;
  #L2a3064.  return v1 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperation`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:([Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a3008.  v0:= "<this>" @kind object;
  #L2a300c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3012.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L2a3016.  if v0 == 0 then goto L2a3024;
  #L2a301a.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/ArraysKt___ArraysKt;.toHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;` @kind static;
  #L2a3020.  v1:= temp @kind object;
  #L2a3022.  goto L2a302c;
  #L2a3024.  call temp:= `asList`(v1) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2a302a.  v1:= temp @kind object;
  #L2a302c.  return v1 @kind object;
}
procedure `java.util.Collection` `convertToSetForSetOperationWith`(`java.lang.Iterable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperationWith:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a3078.  v0:= "<this>" @kind object;
  #L2a307c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3082.  v0:= "source" @kind object;
  #L2a3086.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a308c.  v0:= instanceof @variable v1 @type ^`java.util.Set` @kind boolean;
  #L2a3090.  if v0 == 0 then goto L2a309a;
  #L2a3094.  v1:= (`java.util.Collection`) v1 @kind object;
  #L2a3098.  goto L2a30fc;
  #L2a309a.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L2a309e.  if v0 == 0 then goto L2a30e2;
  #L2a30a2.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L2a30a6.  if v0 == 0 then goto L2a30c2;
  #L2a30aa.  v2:= (`java.util.Collection`) v2 @kind object;
  #L2a30ae.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2a30b4.  v2:= temp;
  #L2a30b6.  v0:= 2I;
  #L2a30b8.  if v2 >= v0 then goto L2a30c2;
  #L2a30bc.  v1:= (`java.util.Collection`) v1 @kind object;
  #L2a30c0.  goto L2a30fc;
  #L2a30c2.  v2:= v1 @kind object;
  #L2a30c4.  v2:= (`java.util.Collection`) v2 @kind object;
  #L2a30c8.  call temp:= `safeToConvertToSet`(v2) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.safeToConvertToSet:(Ljava/util/Collection;)Z` @kind static;
  #L2a30ce.  v0:= temp;
  #L2a30d0.  if v0 == 0 then goto L2a30de;
  #L2a30d4.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L2a30da.  v1:= temp @kind object;
  #L2a30dc.  goto L2a30fc;
  #L2a30de.  v1:= v2 @kind object;
  #L2a30e0.  goto L2a30fc;
  #L2a30e2.  v2:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L2a30e6.  if v2 == 0 then goto L2a30f4;
  #L2a30ea.  call temp:= `toHashSet`(v1) @signature `Lkotlin/collections/CollectionsKt___CollectionsKt;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L2a30f0.  v1:= temp @kind object;
  #L2a30f2.  goto L2a30fc;
  #L2a30f4.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L2a30fa.  v1:= temp @kind object;
  #L2a30fc.  return v1 @kind object;
}
procedure `boolean` `safeToConvertToSet`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.safeToConvertToSet:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2a2f64.  v0:= `@@kotlin.collections.CollectionSystemProperties.brittleContainsOptimizationEnabled` @type ^`boolean` @kind boolean;
  #L2a2f68.  if v0 == 0 then goto L2a2f86;
  #L2a2f6c.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2a2f72.  v0:= temp;
  #L2a2f74.  v1:= 2I;
  #L2a2f76.  if v0 <= v1 then goto L2a2f86;
  #L2a2f7a.  v2:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L2a2f7e.  if v2 == 0 then goto L2a2f86;
  #L2a2f82.  v2:= 1I;
  #L2a2f84.  goto L2a2f88;
  #L2a2f86.  v2:= 0I;
  #L2a2f88.  return v2;
}
