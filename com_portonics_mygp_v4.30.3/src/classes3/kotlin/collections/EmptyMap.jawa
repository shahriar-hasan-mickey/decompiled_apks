record `kotlin.collections.EmptyMap` @kind class @AccessFlag FINAL extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
global `kotlin.collections.EmptyMap` `@@kotlin.collections.EmptyMap.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.collections.EmptyMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/EmptyMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a43d8.  v0:= new `kotlin.collections.EmptyMap`;
  #L2a43dc.  call `<init>`(v0) @signature `Lkotlin/collections/EmptyMap;.<init>:()V` @kind direct;
  #L2a43e2.  `@@kotlin.collections.EmptyMap.INSTANCE` @type ^`kotlin.collections.EmptyMap` := v0 @kind object;
  #L2a43e6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.EmptyMap` v0 @kind this) @signature `Lkotlin/collections/EmptyMap;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a43f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a43fe.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a429c.  v0:= `@@kotlin.collections.EmptyMap.INSTANCE` @type ^`kotlin.collections.EmptyMap` @kind object;
  #L2a42a0.  return v0 @kind object;
}
procedure `void` `clear`(`kotlin.collections.EmptyMap` v2 @kind this) @signature `Lkotlin/collections/EmptyMap;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a4410.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2a4414.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L2a4418.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a441e.  throw v0;
}
procedure `boolean` `containsKey`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/EmptyMap;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a4178.  v1:= 0I;
  #L2a417a.  return v1;
}
procedure `boolean` `containsValue`(`kotlin.collections.EmptyMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a418c.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L2a4190.  if v0 != 0 then goto L2a4198;
  #L2a4194.  v2:= 0I;
  #L2a4196.  return v2;
  #L2a4198.  v2:= (`java.lang.Void`) v2 @kind object;
  #L2a419c.  call temp:= `containsValue`(v1, v2) @signature `Lkotlin/collections/EmptyMap;.containsValue:(Ljava/lang/Void;)Z` @kind virtual;
  #L2a41a2.  v2:= temp;
  #L2a41a4.  return v2;
}
procedure `boolean` `containsValue`(`kotlin.collections.EmptyMap` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.containsValue:(Ljava/lang/Void;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a41b8.  v0:= "value" @kind object;
  #L2a41bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a41c2.  v2:= 0I;
  #L2a41c4.  return v2;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4370.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/EmptyMap;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L2a4376.  v0:= temp @kind object;
  #L2a4378.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.EmptyMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a41d8.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L2a41dc.  if v0 == 0 then goto L2a41f4;
  #L2a41e0.  v2:= (`java.util.Map`) v2 @kind object;
  #L2a41e4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2a41ea.  v2:= temp;
  #L2a41ec.  if v2 == 0 then goto L2a41f4;
  #L2a41f0.  v2:= 1I;
  #L2a41f2.  goto L2a41f6;
  #L2a41f4.  v2:= 0I;
  #L2a41f6.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/EmptyMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a4260.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/EmptyMap;.get:(Ljava/lang/Object;)Ljava/lang/Void;` @kind virtual;
  #L2a4266.  v1:= temp @kind object;
  #L2a4268.  return v1 @kind object;
}
procedure `java.lang.Void` `get`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/EmptyMap;.get:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L2a42e8.  v1:= 0I;
  #L2a42ea.  return v1 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a438c.  v0:= `@@kotlin.collections.EmptySet.INSTANCE` @type ^`kotlin.collections.EmptySet` @kind object;
  #L2a4390.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a43a4.  v0:= `@@kotlin.collections.EmptySet.INSTANCE` @type ^`kotlin.collections.EmptySet` @kind object;
  #L2a43a8.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a421c.  v0:= 0I;
  #L2a421e.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a433c.  v0:= `@@kotlin.collections.EmptyList.INSTANCE` @type ^`kotlin.collections.EmptyList` @kind object;
  #L2a4340.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4230.  v0:= 0I;
  #L2a4232.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4208.  v0:= 1I;
  #L2a420a.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a43bc.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/EmptyMap;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L2a43c2.  v0:= temp @kind object;
  #L2a43c4.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a427c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a4280.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a4284.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a428a.  throw v1;
}
procedure `java.lang.Void` `put`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.put:(Ljava/lang/Object;Ljava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L2a42fc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a4300.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a4304.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a430a.  throw v1;
}
procedure `void` `putAll`(`kotlin.collections.EmptyMap` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4430.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a4434.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a4438.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a443e.  throw v2;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.EmptyMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/EmptyMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a42b4.  call temp:= `remove`(v0, v1) @signature `Lkotlin/collections/EmptyMap;.remove:(Ljava/lang/Object;)Ljava/lang/Void;` @kind virtual;
  #L2a42ba.  v1:= temp @kind object;
  #L2a42bc.  return v1 @kind object;
}
procedure `java.lang.Void` `remove`(`kotlin.collections.EmptyMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyMap;.remove:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a431c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a4320.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a4324.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a432a.  throw v2;
}
procedure `int` `size`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4244.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/EmptyMap;.getSize:()I` @kind virtual;
  #L2a424a.  v0:= temp;
  #L2a424c.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a42d0.  v0:= "{}" @kind object;
  #L2a42d4.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.EmptyMap` v1 @kind this) @signature `Lkotlin/collections/EmptyMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a4354.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/EmptyMap;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L2a435a.  v0:= temp @kind object;
  #L2a435c.  return v0 @kind object;
}
