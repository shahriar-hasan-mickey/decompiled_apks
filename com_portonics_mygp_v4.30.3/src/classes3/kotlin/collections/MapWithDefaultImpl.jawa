record `kotlin.collections.MapWithDefaultImpl` @kind class @AccessFlag FINAL extends `kotlin.collections.MapWithDefault` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlin.collections.MapWithDefaultImpl.default` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `kotlin.collections.MapWithDefaultImpl.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.<init>:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a5500.  v0:= "map" @kind object;
  #L2a5504.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a550a.  v0:= "default" @kind object;
  #L2a550e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a5514.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a551a.  v1.`kotlin.collections.MapWithDefaultImpl.map` @type ^`java.util.Map` := v2 @kind object;
  #L2a551e.  v1.`kotlin.collections.MapWithDefaultImpl.default` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L2a5522.  return @kind void;
}
procedure `void` `clear`(`kotlin.collections.MapWithDefaultImpl` v2 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a5534.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2a5538.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L2a553c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a5542.  throw v0;
}
procedure `boolean` `containsKey`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a526c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5272.  v0:= temp @kind object;
  #L2a5274.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2a527a.  v2:= temp;
  #L2a527c.  return v2;
}
procedure `boolean` `containsValue`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5290.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5296.  v0:= temp @kind object;
  #L2a5298.  call temp:= `containsValue`(v0, v2) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L2a529e.  v2:= temp;
  #L2a52a0.  return v2;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a5480.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L2a5486.  v0:= temp @kind object;
  #L2a5488.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a52b4.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a52ba.  v0:= temp @kind object;
  #L2a52bc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a52c2.  v2:= temp;
  #L2a52c4.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5360.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5366.  v0:= temp @kind object;
  #L2a5368.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a536e.  v2:= temp @kind object;
  #L2a5370.  return v2 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a549c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a54a2.  v0:= temp @kind object;
  #L2a54a4.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2a54aa.  v0:= temp @kind object;
  #L2a54ac.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a54c0.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a54c6.  v0:= temp @kind object;
  #L2a54c8.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2a54ce.  v0:= temp @kind object;
  #L2a54d0.  return v0 @kind object;
}
procedure `java.util.Map` `getMap`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5468.  v0:= v1.`kotlin.collections.MapWithDefaultImpl.map` @type ^`java.util.Map` @kind object;
  #L2a546c.  return v0 @kind object;
}
procedure `java.lang.Object` `getOrImplicitDefault`(`kotlin.collections.MapWithDefaultImpl` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.getOrImplicitDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a5384.  call temp:= `getMap`(v2) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a538a.  v0:= temp @kind object;
  #L2a538c.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a5392.  v1:= temp @kind object;
  #L2a5394.  if v1 != 0 then goto L2a53b0;
  #L2a5398.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2a539e.  v0:= temp;
  #L2a53a0.  if v0 != 0 then goto L2a53b0;
  #L2a53a4.  v0:= v2.`kotlin.collections.MapWithDefaultImpl.default` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2a53a8.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a53ae.  v1:= temp @kind object;
  #L2a53b0.  return v1 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a52fc.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5302.  v0:= temp @kind object;
  #L2a5304.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2a530a.  v0:= temp;
  #L2a530c.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5428.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a542e.  v0:= temp @kind object;
  #L2a5430.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2a5436.  v0:= temp @kind object;
  #L2a5438.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5320.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5326.  v0:= temp @kind object;
  #L2a5328.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a532e.  v0:= temp;
  #L2a5330.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a52d8.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a52de.  v0:= temp @kind object;
  #L2a52e0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2a52e6.  v0:= temp;
  #L2a52e8.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a54e4.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L2a54ea.  v0:= temp @kind object;
  #L2a54ec.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.MapWithDefaultImpl` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2a53c4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a53c8.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a53cc.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a53d2.  throw v1;
}
procedure `void` `putAll`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5554.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a5558.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a555c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a5562.  throw v2;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MapWithDefaultImpl;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a53e4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a53e8.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a53ec.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a53f2.  throw v2;
}
procedure `int` `size`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a5344.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getSize:()I` @kind virtual;
  #L2a534a.  v0:= temp;
  #L2a534c.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5404.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a540a.  v0:= temp @kind object;
  #L2a540c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a5412.  v0:= temp @kind object;
  #L2a5414.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.MapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MapWithDefaultImpl;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a544c.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/MapWithDefaultImpl;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L2a5452.  v0:= temp @kind object;
  #L2a5454.  return v0 @kind object;
}
