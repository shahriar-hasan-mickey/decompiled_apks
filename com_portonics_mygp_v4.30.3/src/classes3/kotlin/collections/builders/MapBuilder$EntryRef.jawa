record `kotlin.collections.builders.MapBuilder$EntryRef` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map$Entry` @kind interface, `kotlin.jvm.internal.markers.KMutableMap$Entry` @kind interface {
  `int` `kotlin.collections.builders.MapBuilder$EntryRef.index` @AccessFlag PRIVATE_FINAL;
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$EntryRef.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$EntryRef` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.<init>:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a8a1c.  v0:= "map" @kind object;
  #L2a8a20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8a26.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a8a2c.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.map` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L2a8a30.  v1.`kotlin.collections.builders.MapBuilder$EntryRef.index` @type ^`int` := v3;
  #L2a8a34.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a88a8.  v0:= instanceof @variable v3 @type ^`java.util.Map$Entry` @kind boolean;
  #L2a88ac.  if v0 == 0 then goto L2a88f0;
  #L2a88b0.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2a88b4.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a88ba.  v0:= temp @kind object;
  #L2a88bc.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2a88c2.  v1:= temp @kind object;
  #L2a88c4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a88ca.  v0:= temp;
  #L2a88cc.  if v0 == 0 then goto L2a88f0;
  #L2a88d0.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a88d6.  v3:= temp @kind object;
  #L2a88d8.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2a88de.  v0:= temp @kind object;
  #L2a88e0.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a88e6.  v3:= temp;
  #L2a88e8.  if v3 == 0 then goto L2a88f0;
  #L2a88ec.  v3:= 1I;
  #L2a88ee.  goto L2a88f2;
  #L2a88f0.  v3:= 0I;
  #L2a88f2.  return v3;
}
procedure `java.lang.Object` `getKey`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8948.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a894c.  call temp:= `access$getKeysArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L2a8952.  v0:= temp @kind object;
  #L2a8954.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.index` @type ^`int`;
  #L2a8958.  v0:= v0[v1] @kind object;
  #L2a895c.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8970.  v0:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8974.  call temp:= `access$getValuesArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L2a897a.  v0:= temp @kind object;
  #L2a897c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a8982.  v1:= v2.`kotlin.collections.builders.MapBuilder$EntryRef.index` @type ^`int`;
  #L2a8986.  v0:= v0[v1] @kind object;
  #L2a898a.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8904.  call temp:= `getKey`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2a890a.  v0:= temp @kind object;
  #L2a890c.  v1:= 0I;
  #L2a890e.  if v0 == 0 then goto L2a891c;
  #L2a8912.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a8918.  v0:= temp;
  #L2a891a.  goto L2a891e;
  #L2a891c.  v0:= 0I;
  #L2a891e.  call temp:= `getValue`(v3) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2a8924.  v2:= temp @kind object;
  #L2a8926.  if v2 == 0 then goto L2a8932;
  #L2a892a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a8930.  v1:= temp;
  #L2a8932.  v0:= v0 ^~ v1 @kind int;
  #L2a8934.  return v0;
}
procedure `java.lang.Object` `setValue`(`kotlin.collections.builders.MapBuilder$EntryRef` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a899c.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a89a0.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a89a6.  v0:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a89aa.  call temp:= `access$allocateValuesArray`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @kind static;
  #L2a89b0.  v0:= temp @kind object;
  #L2a89b2.  v1:= v3.`kotlin.collections.builders.MapBuilder$EntryRef.index` @type ^`int`;
  #L2a89b6.  v2:= v0[v1] @kind object;
  #L2a89ba.  v0[v1]:= v4 @kind object;
  #L2a89be.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder$EntryRef` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a89d0.  v0:= new `java.lang.StringBuilder`;
  #L2a89d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a89da.  call temp:= `getKey`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L2a89e0.  v1:= temp @kind object;
  #L2a89e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a89e8.  v1:= 61I;
  #L2a89ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a89f2.  call temp:= `getValue`(v2) @signature `Lkotlin/collections/builders/MapBuilder$EntryRef;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2a89f8.  v1:= temp @kind object;
  #L2a89fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a8a00.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a8a06.  v0:= temp @kind object;
  #L2a8a08.  return v0 @kind object;
}
