record `kotlin.collections.builders.SetBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableSet` @kind class, `java.util.Set` @kind interface, `java.io.Serializable` @kind interface, `kotlin.jvm.internal.markers.KMutableSet` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.SetBuilder.backing` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa674.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L2aa678.  call `<init>`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @kind direct;
  #L2aa67e.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2aa684.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa698.  v0:= new `kotlin.collections.builders.MapBuilder`;
  #L2aa69c.  call `<init>`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L2aa6a2.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2aa6a8.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa6bc.  v0:= "backing" @kind object;
  #L2aa6c0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aa6c6.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L2aa6cc.  v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L2aa6d0.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.collections.builders.SetBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2aa5f8.  v0:= v2.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa5fc.  call temp:= `isReadOnly$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isReadOnly$kotlin_stdlib:()Z` @kind virtual;
  #L2aa602.  v0:= temp;
  #L2aa604.  if v0 == 0 then goto L2aa616;
  #L2aa608.  v0:= new `kotlin.collections.builders.SerializedCollection`;
  #L2aa60c.  v1:= 1I;
  #L2aa60e.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/SerializedCollection;.<init>:(Ljava/util/Collection;I)V` @kind direct;
  #L2aa614.  return v0 @kind object;
  #L2aa616.  v0:= new `java.io.NotSerializableException`;
  #L2aa61a.  v1:= "The set cannot be serialized while it is being built." @kind object;
  #L2aa61e.  call `<init>`(v0, v1) @signature `Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2aa624.  throw v0;
}
procedure `boolean` `add`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa4b8.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa4bc.  call temp:= `addKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2aa4c2.  v2:= temp;
  #L2aa4c4.  if v2 < 0 then goto L2aa4cc;
  #L2aa4c8.  v2:= 1I;
  #L2aa4ca.  goto L2aa4ce;
  #L2aa4cc.  v2:= 0I;
  #L2aa4ce.  return v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa4e0.  v0:= "elements" @kind object;
  #L2aa4e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aa4ea.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa4ee.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2aa4f4.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/AbstractSet;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2aa4fa.  v2:= temp;
  #L2aa4fc.  return v2;
}
procedure `java.util.Set` `build`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.build:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa658.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa65c.  call temp:= `build`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @kind virtual;
  #L2aa662.  return v1 @kind object;
}
procedure `void` `clear`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa6e4.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa6e8.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L2aa6ee.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa510.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa514.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aa51a.  v2:= temp;
  #L2aa51c.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa5d8.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa5dc.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2aa5e2.  v0:= temp;
  #L2aa5e4.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa530.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa534.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L2aa53a.  v0:= temp;
  #L2aa53c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.SetBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/SetBuilder;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa638.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa63c.  call temp:= `keysIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @kind virtual;
  #L2aa642.  v0:= temp @kind object;
  #L2aa644.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa550.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa554.  call temp:= `removeKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2aa55a.  v2:= temp;
  #L2aa55c.  if v2 < 0 then goto L2aa564;
  #L2aa560.  v2:= 1I;
  #L2aa562.  goto L2aa566;
  #L2aa564.  v2:= 0I;
  #L2aa566.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa578.  v0:= "elements" @kind object;
  #L2aa57c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aa582.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa586.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2aa58c.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L2aa592.  v2:= temp;
  #L2aa594.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.SetBuilder` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/SetBuilder;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa5a8.  v0:= "elements" @kind object;
  #L2aa5ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2aa5b2.  v0:= v1.`kotlin.collections.builders.SetBuilder.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2aa5b6.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2aa5bc.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L2aa5c2.  v2:= temp;
  #L2aa5c4.  return v2;
}
