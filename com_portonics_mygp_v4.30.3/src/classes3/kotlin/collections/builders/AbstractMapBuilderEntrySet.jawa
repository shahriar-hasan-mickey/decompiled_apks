record `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.collections.AbstractMutableSet` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a77b4.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L2a77ba.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a771c.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L2a7720.  if v0 != 0 then goto L2a7728;
  #L2a7724.  v2:= 0I;
  #L2a7726.  return v2;
  #L2a7728.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2a772c.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a7732.  v2:= temp;
  #L2a7734.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.contains:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a7748.  v0:= "element" @kind object;
  #L2a774c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7752.  call temp:= `containsEntry`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a7758.  v2:= temp;
  #L2a775a.  return v2;
}
procedure `boolean` `containsEntry`(`java.util.Map$Entry` v0 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a776c.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L2a7770.  if v0 != 0 then goto L2a7778;
  #L2a7774.  v2:= 0I;
  #L2a7776.  return v2;
  #L2a7778.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2a777c.  call temp:= `remove`(v1, v2) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a7782.  v2:= temp;
  #L2a7784.  return v2;
}
procedure `boolean` `remove`(`kotlin.collections.builders.AbstractMapBuilderEntrySet` v0 @kind this, `java.util.Map$Entry` v1 @kind object) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a7798.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractSet;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L2a779e.  v1:= temp;
  #L2a77a0.  return v1;
}
