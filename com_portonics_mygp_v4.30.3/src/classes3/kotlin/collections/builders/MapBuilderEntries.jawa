record `kotlin.collections.builders.MapBuilderEntries` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.builders.AbstractMapBuilderEntrySet` @kind class {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderEntries.backing` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a8ebc.  v0:= "backing" @kind object;
  #L2a8ec0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8ec6.  call `<init>`(v1) @signature `Lkotlin/collections/builders/AbstractMapBuilderEntrySet;.<init>:()V` @kind direct;
  #L2a8ecc.  v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L2a8ed0.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a8cfc.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L2a8d00.  call temp:= `add`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a8d06.  v1:= temp;
  #L2a8d08.  return v1;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.add:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8d1c.  v0:= "element" @kind object;
  #L2a8d20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8d26.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a8d2a.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a8d30.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8d44.  v0:= "elements" @kind object;
  #L2a8d48.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8d4e.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a8d52.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a8d58.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8ee4.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8ee8.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L2a8eee.  return @kind void;
}
procedure `boolean` `containsAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8d6c.  v0:= "elements" @kind object;
  #L2a8d70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8d76.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8d7a.  call temp:= `containsAllEntries$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L2a8d80.  v2:= temp;
  #L2a8d82.  return v2;
}
procedure `boolean` `containsEntry`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.containsEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8d94.  v0:= "element" @kind object;
  #L2a8d98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8d9e.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8da2.  call temp:= `containsEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a8da8.  v2:= temp;
  #L2a8daa.  return v2;
}
procedure `kotlin.collections.builders.MapBuilder` `getBacking`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getBacking:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a8ea4.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8ea8.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8e64.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8e68.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a8e6e.  v0:= temp;
  #L2a8e70.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8dbc.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8dc0.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L2a8dc6.  v0:= temp;
  #L2a8dc8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderEntries;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8e84.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8e88.  call temp:= `entriesIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L2a8e8e.  v0:= temp @kind object;
  #L2a8e90.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.remove:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8ddc.  v0:= "element" @kind object;
  #L2a8de0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8de6.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8dea.  call temp:= `removeEntry$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a8df0.  v2:= temp;
  #L2a8df2.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8e04.  v0:= "elements" @kind object;
  #L2a8e08.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8e0e.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8e12.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a8e18.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L2a8e1e.  v2:= temp;
  #L2a8e20.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderEntries` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderEntries;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8e34.  v0:= "elements" @kind object;
  #L2a8e38.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8e3e.  v0:= v1.`kotlin.collections.builders.MapBuilderEntries.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8e42.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a8e48.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L2a8e4e.  v2:= temp;
  #L2a8e50.  return v2;
}
