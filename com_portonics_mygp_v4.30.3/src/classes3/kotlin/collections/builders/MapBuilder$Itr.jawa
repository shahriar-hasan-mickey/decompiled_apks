record `kotlin.collections.builders.MapBuilder$Itr` @kind class @AccessFlag PUBLIC {
  `int` `kotlin.collections.builders.MapBuilder$Itr.index` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder$Itr.lastIndex` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilder$Itr.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a8abc.  v0:= "map" @kind object;
  #L2a8ac0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8ac6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a8acc.  v1.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L2a8ad0.  v2:= -1I;
  #L2a8ad2.  v1.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int` := v2;
  #L2a8ad6.  call `initNext$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @kind virtual;
  #L2a8adc.  return @kind void;
}
procedure `int` `getIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a8a74.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int`;
  #L2a8a78.  return v0;
}
procedure `int` `getLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getLastIndex$kotlin_stdlib:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a8a8c.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int`;
  #L2a8a90.  return v0;
}
procedure `kotlin.collections.builders.MapBuilder` `getMap$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.getMap$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a8aa4.  v0:= v1.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8aa8.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a8a48.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int`;
  #L2a8a4c.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8a50.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L2a8a56.  v1:= temp;
  #L2a8a58.  if v0 >= v1 then goto L2a8a60;
  #L2a8a5c.  v0:= 1I;
  #L2a8a5e.  goto L2a8a62;
  #L2a8a60.  v0:= 0I;
  #L2a8a62.  return v0;
}
procedure `void` `initNext$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.initNext$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a8af0.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int`;
  #L2a8af4.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8af8.  call temp:= `access$getLength$p`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @kind static;
  #L2a8afe.  v1:= temp;
  #L2a8b00.  if v0 >= v1 then goto L2a8b26;
  #L2a8b04.  v0:= v2.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8b08.  call temp:= `access$getPresenceArray$p`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @kind static;
  #L2a8b0e.  v0:= temp @kind object;
  #L2a8b10.  v1:= v2.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int`;
  #L2a8b14.  v0:= v0[v1];
  #L2a8b18.  if v0 >= 0 then goto L2a8b26;
  #L2a8b1c.  v1:= v1 + 1;
  #L2a8b20.  v2.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int` := v1;
  #L2a8b24.  goto L2a8af0;
  #L2a8b26.  return @kind void;
}
procedure `void` `remove`(`kotlin.collections.builders.MapBuilder$Itr` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a8b38.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int`;
  #L2a8b3c.  v1:= -1I;
  #L2a8b3e.  if v0 == v1 then goto L2a8b46;
  #L2a8b42.  v0:= 1I;
  #L2a8b44.  goto L2a8b48;
  #L2a8b46.  v0:= 0I;
  #L2a8b48.  if v0 == 0 then goto L2a8b6a;
  #L2a8b4c.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8b50.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a8b56.  v0:= v3.`kotlin.collections.builders.MapBuilder$Itr.map` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8b5a.  v2:= v3.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int`;
  #L2a8b5e.  call `access$removeKeyAt`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @kind static;
  #L2a8b64.  v3.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int` := v1;
  #L2a8b68.  return @kind void;
  #L2a8b6a.  v0:= new `java.lang.IllegalStateException`;
  #L2a8b6e.  v1:= "Call next() before removing element from the iterator." @kind object;
  #L2a8b72.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a8b78.  v1:= temp @kind object;
  #L2a8b7a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a8b80.  throw v0;
}
procedure `void` `setIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a8b94.  v0.`kotlin.collections.builders.MapBuilder$Itr.index` @type ^`int` := v1;
  #L2a8b98.  return @kind void;
}
procedure `void` `setLastIndex$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder$Itr` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.setLastIndex$kotlin_stdlib:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a8bac.  v0.`kotlin.collections.builders.MapBuilder$Itr.lastIndex` @type ^`int` := v1;
  #L2a8bb0.  return @kind void;
}
