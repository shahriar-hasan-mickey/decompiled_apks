record `kotlin.collections.builders.ListBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableList` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface, `java.io.Serializable` @kind interface, `kotlin.jvm.internal.markers.KMutableList` @kind interface {
  `java.lang.Object`[] `kotlin.collections.builders.ListBuilder.array` @AccessFlag PRIVATE;
  `kotlin.collections.builders.ListBuilder` `kotlin.collections.builders.ListBuilder.backing` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.collections.builders.ListBuilder.isReadOnly` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.ListBuilder.length` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.ListBuilder.offset` @AccessFlag PRIVATE;
  `kotlin.collections.builders.ListBuilder` `kotlin.collections.builders.ListBuilder.root` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a82dc.  v0:= 10I;
  #L2a82e0.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:(I)V` @kind direct;
  #L2a82e6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v7 @kind this, `int` v8 ) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a82f8.  call temp:= `arrayOfUninitializedElements`(v8) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L2a82fe.  v1:= temp @kind object;
  #L2a8300.  v2:= 0I;
  #L2a8302.  v3:= 0I;
  #L2a8304.  v4:= 0I;
  #L2a8306.  v5:= 0I;
  #L2a8308.  v6:= 0I;
  #L2a830a.  v0:= v7 @kind object;
  #L2a830c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @kind direct;
  #L2a8312.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.ListBuilder` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `kotlin.collections.builders.ListBuilder` v5 @kind object, `kotlin.collections.builders.ListBuilder` v6 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a8324.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMutableList;.<init>:()V` @kind direct;
  #L2a832a.  v0.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2a832e.  v0.`kotlin.collections.builders.ListBuilder.offset` @type ^`int` := v2;
  #L2a8332.  v0.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v3;
  #L2a8336.  v0.`kotlin.collections.builders.ListBuilder.isReadOnly` @type ^`boolean` := v4 @kind boolean;
  #L2a833a.  v0.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` := v5 @kind object;
  #L2a833e.  v0.`kotlin.collections.builders.ListBuilder.root` @type ^`kotlin.collections.builders.ListBuilder` := v6 @kind object;
  #L2a8342.  return @kind void;
}
procedure `java.lang.Object`[] `access$getArray$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getArray$p:(Lkotlin/collections/builders/ListBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a8114.  v0:= v0.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8118.  return v0 @kind object;
}
procedure `int` `access$getLength$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getLength$p:(Lkotlin/collections/builders/ListBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a7e34.  v0:= v0.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7e38.  return v0;
}
procedure `int` `access$getOffset$p`(`kotlin.collections.builders.ListBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.access$getOffset$p:(Lkotlin/collections/builders/ListBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a7e4c.  v0:= v0.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7e50.  return v0;
}
procedure `void` `addAllInternal`(`kotlin.collections.builders.ListBuilder` v4 @kind this, `int` v5 , `java.util.Collection` v6 @kind object, `int` v7 ) @signature `Lkotlin/collections/builders/ListBuilder;.addAllInternal:(ILjava/util/Collection;I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a8388.  v0:= v4.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a838c.  if v0 == 0 then goto L2a83ae;
  #L2a8390.  call `addAllInternal`(v0, v5, v6, v7) @signature `Lkotlin/collections/builders/ListBuilder;.addAllInternal:(ILjava/util/Collection;I)V` @kind direct;
  #L2a8396.  v5:= v4.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a839a.  v5:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a839e.  v4.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] := v5 @kind object;
  #L2a83a2.  v5:= v4.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a83a6.  v5:= v5 + v7 @kind int;
  #L2a83a8.  v4.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v5;
  #L2a83ac.  goto L2a83dc;
  #L2a83ae.  call `insertAtInternal`(v4, v5, v7) @signature `Lkotlin/collections/builders/ListBuilder;.insertAtInternal:(II)V` @kind direct;
  #L2a83b4.  v0:= 0I;
  #L2a83b6.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a83bc.  v6:= temp @kind object;
  #L2a83be.  if v0 >= v7 then goto L2a83dc;
  #L2a83c2.  v1:= v4.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a83c6.  v2:= v5 + v0 @kind int;
  #L2a83ca.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a83d0.  v3:= temp @kind object;
  #L2a83d2.  v1[v2]:= v3 @kind object;
  #L2a83d6.  v0:= v0 + 1;
  #L2a83da.  goto L2a83be;
  #L2a83dc.  return @kind void;
}
procedure `void` `addAtInternal`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.addAtInternal:(ILjava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a83f0.  v0:= v2.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a83f4.  v1:= 1I;
  #L2a83f6.  if v0 == 0 then goto L2a8418;
  #L2a83fa.  call `addAtInternal`(v0, v3, v4) @signature `Lkotlin/collections/builders/ListBuilder;.addAtInternal:(ILjava/lang/Object;)V` @kind direct;
  #L2a8400.  v3:= v2.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a8404.  v3:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8408.  v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2a840c.  v3:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8410.  v3:= v3 + v1 @kind int;
  #L2a8412.  v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v3;
  #L2a8416.  goto L2a8426;
  #L2a8418.  call `insertAtInternal`(v2, v3, v1) @signature `Lkotlin/collections/builders/ListBuilder;.insertAtInternal:(II)V` @kind direct;
  #L2a841e.  v0:= v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8422.  v0[v3]:= v4 @kind object;
  #L2a8426.  return @kind void;
}
procedure `void` `checkIsMutable`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a8438.  call temp:= `isEffectivelyReadOnly`(v1) @signature `Lkotlin/collections/builders/ListBuilder;.isEffectivelyReadOnly:()Z` @kind direct;
  #L2a843e.  v0:= temp;
  #L2a8440.  if v0 != 0 then goto L2a8446;
  #L2a8444.  return @kind void;
  #L2a8446.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2a844a.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a8450.  throw v0;
}
procedure `boolean` `contentEquals`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.contentEquals:(Ljava/util/List;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a7cd4.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7cd8.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7cdc.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7ce0.  call temp:= `access$subarrayContentEquals`(v0, v1, v2, v4) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @kind static;
  #L2a7ce6.  v4:= temp;
  #L2a7ce8.  return v4;
}
procedure `void` `ensureCapacity`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.ensureCapacity:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a848c.  v0:= v2.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a8490.  if v0 != 0 then goto L2a84ce;
  #L2a8494.  if v3 < 0 then goto L2a84c2;
  #L2a8498.  v0:= v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a849c.  v1:= length @variable v0;
  #L2a849e.  if v3 <= v1 then goto L2a84c0;
  #L2a84a2.  v1:= `@@kotlin.collections.ArrayDeque.Companion` @type ^`kotlin.collections.ArrayDeque$Companion` @kind object;
  #L2a84a6.  v0:= length @variable v0;
  #L2a84a8.  call temp:= `newCapacity$kotlin_stdlib`(v1, v0, v3) @signature `Lkotlin/collections/ArrayDeque$Companion;.newCapacity$kotlin_stdlib:(II)I` @kind virtual;
  #L2a84ae.  v3:= temp;
  #L2a84b0.  v0:= v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a84b4.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2a84ba.  v3:= temp @kind object;
  #L2a84bc.  v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] := v3 @kind object;
  #L2a84c0.  return @kind void;
  #L2a84c2.  v3:= new `java.lang.OutOfMemoryError`;
  #L2a84c6.  call `<init>`(v3) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2a84cc.  throw v3;
  #L2a84ce.  v3:= new `java.lang.IllegalStateException`;
  #L2a84d2.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2a84d8.  throw v3;
}
procedure `void` `ensureExtraCapacity`(`kotlin.collections.builders.ListBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilder;.ensureExtraCapacity:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a84ec.  v0:= v1.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a84f0.  v0:= v0 + v2 @kind int;
  #L2a84f2.  call `ensureCapacity`(v1, v0) @signature `Lkotlin/collections/builders/ListBuilder;.ensureCapacity:(I)V` @kind direct;
  #L2a84f8.  return @kind void;
}
procedure `void` `insertAtInternal`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilder;.insertAtInternal:(II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a850c.  call `ensureExtraCapacity`(v3, v5) @signature `Lkotlin/collections/builders/ListBuilder;.ensureExtraCapacity:(I)V` @kind direct;
  #L2a8512.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8516.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a851a.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a851e.  v1:= v1 + v2 @kind int;
  #L2a8520.  v2:= v4 + v5 @kind int;
  #L2a8524.  call temp:= `copyInto`(v0, v0, v2, v4, v1) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L2a852a.  v4:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a852e.  v4:= v4 + v5 @kind int;
  #L2a8530.  v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v4;
  #L2a8534.  return @kind void;
}
procedure `boolean` `isEffectivelyReadOnly`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.isEffectivelyReadOnly:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a7d34.  v0:= v1.`kotlin.collections.builders.ListBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a7d38.  if v0 != 0 then goto L2a7d52;
  #L2a7d3c.  v0:= v1.`kotlin.collections.builders.ListBuilder.root` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a7d40.  if v0 == 0 then goto L2a7d4e;
  #L2a7d44.  v0:= v0.`kotlin.collections.builders.ListBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a7d48.  if v0 == 0 then goto L2a7d4e;
  #L2a7d4c.  goto L2a7d52;
  #L2a7d4e.  v0:= 0I;
  #L2a7d50.  goto L2a7d54;
  #L2a7d52.  v0:= 1I;
  #L2a7d54.  return v0;
}
procedure `java.lang.Object` `removeAtInternal`(`kotlin.collections.builders.ListBuilder` v5 @kind this, `int` v6 ) @signature `Lkotlin/collections/builders/ListBuilder;.removeAtInternal:(I)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a802c.  v0:= v5.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a8030.  if v0 == 0 then goto L2a804a;
  #L2a8034.  call temp:= `removeAtInternal`(v0, v6) @signature `Lkotlin/collections/builders/ListBuilder;.removeAtInternal:(I)Ljava/lang/Object;` @kind direct;
  #L2a803a.  v6:= temp @kind object;
  #L2a803c.  v0:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8040.  v0:= v0 + -1;
  #L2a8044.  v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v0;
  #L2a8048.  return v6 @kind object;
  #L2a804a.  v0:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a804e.  v1:= v0[v6] @kind object;
  #L2a8052.  v2:= v6 + 1;
  #L2a8056.  v3:= v5.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a805a.  v4:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a805e.  v3:= v3 + v4 @kind int;
  #L2a8060.  call temp:= `copyInto`(v0, v0, v6, v2, v3) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L2a8066.  v6:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a806a.  v0:= v5.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a806e.  v2:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8072.  v0:= v0 + v2 @kind int;
  #L2a8074.  v0:= v0 + -1;
  #L2a8078.  call `resetAt`(v6, v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L2a807e.  v6:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8082.  v6:= v6 + -1;
  #L2a8086.  v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v6;
  #L2a808a.  return v1 @kind object;
}
procedure `void` `removeRangeInternal`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilder;.removeRangeInternal:(II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a8548.  v0:= v3.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a854c.  if v0 == 0 then goto L2a8558;
  #L2a8550.  call `removeRangeInternal`(v0, v4, v5) @signature `Lkotlin/collections/builders/ListBuilder;.removeRangeInternal:(II)V` @kind direct;
  #L2a8556.  goto L2a857c;
  #L2a8558.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a855c.  v1:= v4 + v5 @kind int;
  #L2a8560.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8564.  call temp:= `copyInto`(v0, v0, v4, v1, v2) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L2a856a.  v4:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a856e.  v0:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8572.  v1:= v0 - v5 @kind int;
  #L2a8576.  call `resetRange`(v4, v1, v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a857c.  v4:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8580.  v4:= v4 - v5 @kind int;
  #L2a8582.  v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v4;
  #L2a8586.  return @kind void;
}
procedure `int` `retainOrRemoveAllInternal`(`kotlin.collections.builders.ListBuilder` v5 @kind this, `int` v6 , `int` v7 , `java.util.Collection` v8 @kind object, `boolean` v9 ) @signature `Lkotlin/collections/builders/ListBuilder;.retainOrRemoveAllInternal:(IILjava/util/Collection;Z)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a7f28.  v0:= v5.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a7f2c.  if v0 == 0 then goto L2a7f44;
  #L2a7f30.  call temp:= `retainOrRemoveAllInternal`(v0, v6, v7, v8, v9) @signature `Lkotlin/collections/builders/ListBuilder;.retainOrRemoveAllInternal:(IILjava/util/Collection;Z)I` @kind direct;
  #L2a7f36.  v6:= temp;
  #L2a7f38.  v7:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7f3c.  v7:= v7 - v6 @kind int;
  #L2a7f3e.  v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v7;
  #L2a7f42.  return v6;
  #L2a7f44.  v0:= 0I;
  #L2a7f46.  v1:= 0I;
  #L2a7f48.  if v0 >= v7 then goto L2a7f84;
  #L2a7f4c.  v2:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7f50.  v3:= v6 + v0 @kind int;
  #L2a7f54.  v2:= v2[v3] @kind object;
  #L2a7f58.  call temp:= `contains`(v8, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2a7f5e.  v2:= temp;
  #L2a7f60.  if v2 != v9 then goto L2a7f7e;
  #L2a7f64.  v2:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7f68.  v4:= v1 + 1;
  #L2a7f6c.  v1:= v1 + v6 @kind int;
  #L2a7f6e.  v0:= v0 + 1;
  #L2a7f72.  v3:= v2[v3] @kind object;
  #L2a7f76.  v2[v1]:= v3 @kind object;
  #L2a7f7a.  v1:= v4;
  #L2a7f7c.  goto L2a7f48;
  #L2a7f7e.  v0:= v0 + 1;
  #L2a7f82.  goto L2a7f48;
  #L2a7f84.  v8:= v7 - v1 @kind int;
  #L2a7f88.  v9:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7f8c.  v7:= v7 + v6 @kind int;
  #L2a7f8e.  v0:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7f92.  v6:= v6 + v1 @kind int;
  #L2a7f94.  call temp:= `copyInto`(v9, v9, v6, v7, v0) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L2a7f9a.  v6:= v5.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7f9e.  v7:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7fa2.  v9:= v7 - v8 @kind int;
  #L2a7fa6.  call `resetRange`(v6, v9, v7) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a7fac.  v6:= v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7fb0.  v6:= v6 - v8 @kind int;
  #L2a7fb2.  v5.`kotlin.collections.builders.ListBuilder.length` @type ^`int` := v6;
  #L2a7fb6.  return v8;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a80d8.  call temp:= `isEffectivelyReadOnly`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.isEffectivelyReadOnly:()Z` @kind direct;
  #L2a80de.  v0:= temp;
  #L2a80e0.  if v0 == 0 then goto L2a80f2;
  #L2a80e4.  v0:= new `kotlin.collections.builders.SerializedCollection`;
  #L2a80e8.  v1:= 0I;
  #L2a80ea.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/SerializedCollection;.<init>:(Ljava/util/Collection;I)V` @kind direct;
  #L2a80f0.  return v0 @kind object;
  #L2a80f2.  v0:= new `java.io.NotSerializableException`;
  #L2a80f6.  v1:= "The list cannot be serialized while it is being built." @kind object;
  #L2a80fa.  call `<init>`(v0, v1) @signature `Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a8100.  throw v0;
}
procedure `void` `add`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8354.  call `checkIsMutable`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a835a.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a835e.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8362.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a8368.  v0:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a836c.  v0:= v0 + v3 @kind int;
  #L2a836e.  call `addAtInternal`(v2, v0, v4) @signature `Lkotlin/collections/builders/ListBuilder;.addAtInternal:(ILjava/lang/Object;)V` @kind direct;
  #L2a8374.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a7c14.  call `checkIsMutable`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7c1a.  v0:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7c1e.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7c22.  v0:= v0 + v1 @kind int;
  #L2a7c24.  call `addAtInternal`(v2, v0, v3) @signature `Lkotlin/collections/builders/ListBuilder;.addAtInternal:(ILjava/lang/Object;)V` @kind direct;
  #L2a7c2a.  v3:= 1I;
  #L2a7c2c.  return v3;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 , `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a7c40.  v0:= "elements" @kind object;
  #L2a7c44.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7c4a.  call `checkIsMutable`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7c50.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a7c54.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7c58.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a7c5e.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2a7c64.  v0:= temp;
  #L2a7c66.  v1:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7c6a.  v1:= v1 + v3 @kind int;
  #L2a7c6c.  call `addAllInternal`(v2, v1, v4, v0) @signature `Lkotlin/collections/builders/ListBuilder;.addAllInternal:(ILjava/util/Collection;I)V` @kind direct;
  #L2a7c72.  if v0 <= 0 then goto L2a7c7a;
  #L2a7c76.  v3:= 1I;
  #L2a7c78.  goto L2a7c7c;
  #L2a7c7a.  v3:= 0I;
  #L2a7c7c.  return v3;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7c90.  v0:= "elements" @kind object;
  #L2a7c94.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7c9a.  call `checkIsMutable`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7ca0.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2a7ca6.  v0:= temp;
  #L2a7ca8.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7cac.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7cb0.  v1:= v1 + v2 @kind int;
  #L2a7cb2.  call `addAllInternal`(v3, v1, v4, v0) @signature `Lkotlin/collections/builders/ListBuilder;.addAllInternal:(ILjava/util/Collection;I)V` @kind direct;
  #L2a7cb8.  if v0 <= 0 then goto L2a7cc0;
  #L2a7cbc.  v4:= 1I;
  #L2a7cbe.  goto L2a7cc2;
  #L2a7cc0.  v4:= 0I;
  #L2a7cc2.  return v4;
}
procedure `java.util.List` `build`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.build:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a820c.  v0:= v1.`kotlin.collections.builders.ListBuilder.backing` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a8210.  if v0 != 0 then goto L2a8222;
  #L2a8214.  call `checkIsMutable`(v1) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a821a.  v0:= 1I;
  #L2a821c.  v1.`kotlin.collections.builders.ListBuilder.isReadOnly` @type ^`boolean` := v0 @kind boolean;
  #L2a8220.  return v1 @kind object;
  #L2a8222.  v0:= new `java.lang.IllegalStateException`;
  #L2a8226.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2a822c.  throw v0;
}
procedure `void` `clear`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8464.  call `checkIsMutable`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a846a.  v0:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a846e.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8472.  call `removeRangeInternal`(v2, v0, v1) @signature `Lkotlin/collections/builders/ListBuilder;.removeRangeInternal:(II)V` @kind direct;
  #L2a8478.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.collections.builders.ListBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7cfc.  if v2 == v1 then goto L2a7d1e;
  #L2a7d00.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L2a7d04.  if v0 == 0 then goto L2a7d1a;
  #L2a7d08.  v2:= (`java.util.List`) v2 @kind object;
  #L2a7d0c.  call temp:= `contentEquals`(v1, v2) @signature `Lkotlin/collections/builders/ListBuilder;.contentEquals:(Ljava/util/List;)Z` @kind direct;
  #L2a7d12.  v2:= temp;
  #L2a7d14.  if v2 == 0 then goto L2a7d1a;
  #L2a7d18.  goto L2a7d1e;
  #L2a7d1a.  v2:= 0I;
  #L2a7d1c.  goto L2a7d20;
  #L2a7d1e.  v2:= 1I;
  #L2a7d20.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a7fc8.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a7fcc.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7fd0.  call `checkElementIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a7fd6.  v0:= v2.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7fda.  v1:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7fde.  v1:= v1 + v3 @kind int;
  #L2a7fe0.  v3:= v0[v1] @kind object;
  #L2a7fe4.  return v3 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7e64.  v0:= v1.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7e68.  return v0;
}
procedure `int` `hashCode`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7e7c.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7e80.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7e84.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7e88.  call temp:= `access$subarrayContentHashCode`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentHashCode:([Ljava/lang/Object;II)I` @kind static;
  #L2a7e8e.  v0:= temp;
  #L2a7e90.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7ea4.  v0:= 0I;
  #L2a7ea6.  v1:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7eaa.  if v0 >= v1 then goto L2a7ed0;
  #L2a7eae.  v1:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7eb2.  v2:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7eb6.  v2:= v2 + v0 @kind int;
  #L2a7eb8.  v1:= v1[v2] @kind object;
  #L2a7ebc.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a7ec2.  v1:= temp;
  #L2a7ec4.  if v1 == 0 then goto L2a7eca;
  #L2a7ec8.  return v0;
  #L2a7eca.  v0:= v0 + 1;
  #L2a7ece.  goto L2a7ea6;
  #L2a7ed0.  v4:= -1I;
  #L2a7ed2.  return v4;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.ListBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7d68.  v0:= v1.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7d6c.  if v0 != 0 then goto L2a7d74;
  #L2a7d70.  v0:= 1I;
  #L2a7d72.  goto L2a7d76;
  #L2a7d74.  v0:= 0I;
  #L2a7d76.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a81ec.  v0:= new `kotlin.collections.builders.ListBuilder$Itr`;
  #L2a81f0.  v1:= 0I;
  #L2a81f2.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilder$Itr;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L2a81f8.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7ee4.  v0:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7ee8.  v0:= v0 + -1;
  #L2a7eec.  if v0 < 0 then goto L2a7f12;
  #L2a7ef0.  v1:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a7ef4.  v2:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7ef8.  v2:= v2 + v0 @kind int;
  #L2a7efa.  v1:= v1[v2] @kind object;
  #L2a7efe.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a7f04.  v1:= temp;
  #L2a7f06.  if v1 == 0 then goto L2a7f0c;
  #L2a7f0a.  return v0;
  #L2a7f0c.  v0:= v0 + -1;
  #L2a7f10.  goto L2a7eec;
  #L2a7f12.  v4:= -1I;
  #L2a7f14.  return v4;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8290.  v0:= new `kotlin.collections.builders.ListBuilder$Itr`;
  #L2a8294.  v1:= 0I;
  #L2a8296.  call `<init>`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilder$Itr;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L2a829c.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a82b0.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a82b4.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a82b8.  call `checkPositionIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a82be.  v0:= new `kotlin.collections.builders.ListBuilder$Itr`;
  #L2a82c2.  call `<init>`(v0, v2, v3) @signature `Lkotlin/collections/builders/ListBuilder$Itr;.<init>:(Lkotlin/collections/builders/ListBuilder;I)V` @kind direct;
  #L2a82c8.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.ListBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a7d88.  call `checkIsMutable`(v0) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7d8e.  call temp:= `indexOf`(v0, v1) @signature `Lkotlin/collections/builders/ListBuilder;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L2a7d94.  v1:= temp;
  #L2a7d96.  if v1 < 0 then goto L2a7da0;
  #L2a7d9a.  call temp:= `remove`(v0, v1) @signature `Lkotlin/collections/AbstractMutableList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L2a7da0.  if v1 < 0 then goto L2a7da8;
  #L2a7da4.  v1:= 1I;
  #L2a7da6.  goto L2a7daa;
  #L2a7da8.  v1:= 0I;
  #L2a7daa.  return v1;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7dbc.  v0:= "elements" @kind object;
  #L2a7dc0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7dc6.  call `checkIsMutable`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7dcc.  v0:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7dd0.  v1:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7dd4.  v2:= 0I;
  #L2a7dd6.  call temp:= `retainOrRemoveAllInternal`(v3, v0, v1, v4, v2) @signature `Lkotlin/collections/builders/ListBuilder;.retainOrRemoveAllInternal:(IILjava/util/Collection;Z)I` @kind direct;
  #L2a7ddc.  v4:= temp;
  #L2a7dde.  if v4 <= 0 then goto L2a7de4;
  #L2a7de2.  v2:= 1I;
  #L2a7de4.  return v2;
}
procedure `java.lang.Object` `removeAt`(`kotlin.collections.builders.ListBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilder;.removeAt:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a7ff8.  call `checkIsMutable`(v2) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7ffe.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a8002.  v1:= v2.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8006.  call `checkElementIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a800c.  v0:= v2.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a8010.  v0:= v0 + v3 @kind int;
  #L2a8012.  call temp:= `removeAtInternal`(v2, v0) @signature `Lkotlin/collections/builders/ListBuilder;.removeAtInternal:(I)Ljava/lang/Object;` @kind direct;
  #L2a8018.  v3:= temp @kind object;
  #L2a801a.  return v3 @kind object;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a7df8.  v0:= "elements" @kind object;
  #L2a7dfc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7e02.  call `checkIsMutable`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a7e08.  v0:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a7e0c.  v1:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a7e10.  v2:= 1I;
  #L2a7e12.  call temp:= `retainOrRemoveAllInternal`(v3, v0, v1, v4, v2) @signature `Lkotlin/collections/builders/ListBuilder;.retainOrRemoveAllInternal:(IILjava/util/Collection;Z)I` @kind direct;
  #L2a7e18.  v4:= temp;
  #L2a7e1a.  if v4 <= 0 then goto L2a7e20;
  #L2a7e1e.  goto L2a7e22;
  #L2a7e20.  v2:= 0I;
  #L2a7e22.  return v2;
}
procedure `java.lang.Object` `set`(`kotlin.collections.builders.ListBuilder` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a809c.  call `checkIsMutable`(v3) @signature `Lkotlin/collections/builders/ListBuilder;.checkIsMutable:()V` @kind direct;
  #L2a80a2.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a80a6.  v1:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a80aa.  call `checkElementIndex$kotlin_stdlib`(v0, v4, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L2a80b0.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a80b4.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a80b8.  v2:= v1 + v4 @kind int;
  #L2a80bc.  v2:= v0[v2] @kind object;
  #L2a80c0.  v1:= v1 + v4 @kind int;
  #L2a80c2.  v0[v1]:= v5 @kind object;
  #L2a80c6.  return v2 @kind object;
}
procedure `java.util.List` `subList`(`kotlin.collections.builders.ListBuilder` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lkotlin/collections/builders/ListBuilder;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2a8240.  v0:= `@@kotlin.collections.AbstractList.Companion` @type ^`kotlin.collections.AbstractList$Companion` @kind object;
  #L2a8244.  v1:= v9.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8248.  call `checkRangeIndexes$kotlin_stdlib`(v0, v10, v11, v1) @signature `Lkotlin/collections/AbstractList$Companion;.checkRangeIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L2a824e.  v0:= new `kotlin.collections.builders.ListBuilder`;
  #L2a8252.  v3:= v9.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8256.  v1:= v9.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a825a.  v4:= v1 + v10 @kind int;
  #L2a825e.  v5:= v11 - v10 @kind int;
  #L2a8262.  v6:= v9.`kotlin.collections.builders.ListBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a8266.  v10:= v9.`kotlin.collections.builders.ListBuilder.root` @type ^`kotlin.collections.builders.ListBuilder` @kind object;
  #L2a826a.  if v10 != 0 then goto L2a8272;
  #L2a826e.  v8:= v9 @kind object;
  #L2a8270.  goto L2a8274;
  #L2a8272.  v8:= v10 @kind object;
  #L2a8274.  v2:= v0 @kind object;
  #L2a8276.  v7:= v9 @kind object;
  #L2a8278.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/collections/builders/ListBuilder;.<init>:([Ljava/lang/Object;IIZLkotlin/collections/builders/ListBuilder;Lkotlin/collections/builders/ListBuilder;)V` @kind direct;
  #L2a827e.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a812c.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8130.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a8134.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8138.  v2:= v2 + v1 @kind int;
  #L2a813a.  call temp:= `copyOfRange`(v0, v1, v2) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;` @kind static;
  #L2a8140.  v0:= temp @kind object;
  #L2a8142.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.builders.ListBuilder` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lkotlin/collections/builders/ListBuilder;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a8154.  v0:= "destination" @kind object;
  #L2a8158.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a815e.  v0:= length @variable v5;
  #L2a8160.  v1:= v4.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a8164.  if v0 >= v1 then goto L2a818e;
  #L2a8168.  v0:= v4.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a816c.  v2:= v4.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a8170.  v1:= v1 + v2 @kind int;
  #L2a8172.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a8178.  v5:= temp @kind object;
  #L2a817a.  call temp:= `copyOfRange`(v0, v2, v1, v5) @signature `Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L2a8180.  v5:= temp @kind object;
  #L2a8182.  v0:= "copyOfRange(array, offse…h, destination.javaClass)" @kind object;
  #L2a8186.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a818c.  return v5 @kind object;
  #L2a818e.  v0:= v4.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a8192.  v2:= 0I;
  #L2a8194.  v3:= v4.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a8198.  v1:= v1 + v3 @kind int;
  #L2a819a.  call temp:= `copyInto`(v0, v5, v2, v3, v1) @signature `Lkotlin/collections/ArraysKt;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L2a81a0.  v0:= length @variable v5;
  #L2a81a2.  v1:= v4.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a81a6.  if v0 <= v1 then goto L2a81b0;
  #L2a81aa.  v0:= 0I;
  #L2a81ac.  v5[v1]:= v0 @kind object;
  #L2a81b0.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.ListBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/ListBuilder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a81c4.  v0:= v3.`kotlin.collections.builders.ListBuilder.array` @type ^`java.lang.Object`[] @kind object;
  #L2a81c8.  v1:= v3.`kotlin.collections.builders.ListBuilder.offset` @type ^`int`;
  #L2a81cc.  v2:= v3.`kotlin.collections.builders.ListBuilder.length` @type ^`int`;
  #L2a81d0.  call temp:= `access$subarrayContentToString`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @kind static;
  #L2a81d6.  v0:= temp @kind object;
  #L2a81d8.  return v0 @kind object;
}
