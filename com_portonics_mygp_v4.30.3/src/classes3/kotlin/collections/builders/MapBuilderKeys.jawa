record `kotlin.collections.builders.MapBuilderKeys` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.AbstractMutableSet` @kind class, `java.util.Set` @kind interface, `kotlin.jvm.internal.markers.KMutableSet` @kind interface {
  `kotlin.collections.builders.MapBuilder` `kotlin.collections.builders.MapBuilderKeys.backing` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `kotlin.collections.builders.MapBuilder` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a904c.  v0:= "backing" @kind object;
  #L2a9050.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a9056.  call `<init>`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @kind direct;
  #L2a905c.  v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` := v2 @kind object;
  #L2a9060.  return @kind void;
}
procedure `boolean` `add`(`kotlin.collections.builders.MapBuilderKeys` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a8f00.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a8f04.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a8f0a.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8f1c.  v0:= "elements" @kind object;
  #L2a8f20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8f26.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a8f2a.  call `<init>`(v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a8f30.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9074.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a9078.  call `clear`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @kind virtual;
  #L2a907e.  return @kind void;
}
procedure `boolean` `contains`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8f44.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8f48.  call temp:= `containsKey`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a8f4e.  v2:= temp;
  #L2a8f50.  return v2;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a900c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a9010.  call temp:= `size`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a9016.  v0:= temp;
  #L2a9018.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8f64.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8f68.  call temp:= `isEmpty`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @kind virtual;
  #L2a8f6e.  v0:= temp;
  #L2a8f70.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilderKeys;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a902c.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a9030.  call temp:= `keysIterator$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @kind virtual;
  #L2a9036.  v0:= temp @kind object;
  #L2a9038.  return v0 @kind object;
}
procedure `boolean` `remove`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8f84.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8f88.  call temp:= `removeKey$kotlin_stdlib`(v0, v2) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2a8f8e.  v2:= temp;
  #L2a8f90.  if v2 < 0 then goto L2a8f98;
  #L2a8f94.  v2:= 1I;
  #L2a8f96.  goto L2a8f9a;
  #L2a8f98.  v2:= 0I;
  #L2a8f9a.  return v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8fac.  v0:= "elements" @kind object;
  #L2a8fb0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8fb6.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8fba.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a8fc0.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L2a8fc6.  v2:= temp;
  #L2a8fc8.  return v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.builders.MapBuilderKeys` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilderKeys;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a8fdc.  v0:= "elements" @kind object;
  #L2a8fe0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a8fe6.  v0:= v1.`kotlin.collections.builders.MapBuilderKeys.backing` @type ^`kotlin.collections.builders.MapBuilder` @kind object;
  #L2a8fea.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a8ff0.  call temp:= `retainAll`(v1, v2) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L2a8ff6.  v2:= temp;
  #L2a8ff8.  return v2;
}
