record `kotlin.collections.builders.MapBuilder` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface, `kotlin.jvm.internal.markers.KMutableMap` @kind interface {
  `kotlin.collections.builders.MapBuilderEntries` `kotlin.collections.builders.MapBuilder.entriesView` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.hashArray` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.hashShift` @AccessFlag PRIVATE;
  `boolean` `kotlin.collections.builders.MapBuilder.isReadOnly` @AccessFlag PRIVATE;
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.keysArray` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderKeys` `kotlin.collections.builders.MapBuilder.keysView` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.length` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.maxProbeDistance` @AccessFlag PRIVATE;
  `int`[] `kotlin.collections.builders.MapBuilder.presenceArray` @AccessFlag PRIVATE;
  `int` `kotlin.collections.builders.MapBuilder.size` @AccessFlag PRIVATE;
  `java.lang.Object`[] `kotlin.collections.builders.MapBuilder.valuesArray` @AccessFlag PRIVATE;
  `kotlin.collections.builders.MapBuilderValues` `kotlin.collections.builders.MapBuilder.valuesView` @AccessFlag PRIVATE;
}
global `kotlin.collections.builders.MapBuilder$Companion` `@@kotlin.collections.builders.MapBuilder.Companion` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.collections.builders.MapBuilder.INITIAL_CAPACITY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.collections.builders.MapBuilder.INITIAL_MAX_PROBE_DISTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.collections.builders.MapBuilder.MAGIC` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.collections.builders.MapBuilder.TOMBSTONE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/builders/MapBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a9ba4.  v0:= new `kotlin.collections.builders.MapBuilder$Companion`;
  #L2a9ba8.  v1:= 0I;
  #L2a9baa.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2a9bb0.  `@@kotlin.collections.builders.MapBuilder.Companion` @type ^`kotlin.collections.builders.MapBuilder$Companion` := v0 @kind object;
  #L2a9bb4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a9bc8.  v0:= 8I;
  #L2a9bcc.  call `<init>`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @kind direct;
  #L2a9bd2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `int` v8 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a9be4.  call temp:= `arrayOfUninitializedElements`(v8) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L2a9bea.  v1:= temp @kind object;
  #L2a9bec.  v3:= new `int`[v8];
  #L2a9bf0.  v0:= `@@kotlin.collections.builders.MapBuilder.Companion` @type ^`kotlin.collections.builders.MapBuilder$Companion` @kind object;
  #L2a9bf4.  call temp:= `access$computeHashSize`(v0, v8) @signature `Lkotlin/collections/builders/MapBuilder$Companion;.access$computeHashSize:(Lkotlin/collections/builders/MapBuilder$Companion;I)I` @kind static;
  #L2a9bfa.  v8:= temp;
  #L2a9bfc.  v4:= new `int`[v8];
  #L2a9c00.  v2:= 0I;
  #L2a9c02.  v5:= 2I;
  #L2a9c04.  v6:= 0I;
  #L2a9c06.  v0:= v7 @kind object;
  #L2a9c08.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @kind direct;
  #L2a9c0e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object, `int`[] v3 @kind object, `int`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.<init>:([Ljava/lang/Object;[Ljava/lang/Object;[I[III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a9c20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a9c26.  v0.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2a9c2a.  v0.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] := v2 @kind object;
  #L2a9c2e.  v0.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] := v3 @kind object;
  #L2a9c32.  v0.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] := v4 @kind object;
  #L2a9c36.  v0.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int` := v5;
  #L2a9c3a.  v0.`kotlin.collections.builders.MapBuilder.length` @type ^`int` := v6;
  #L2a9c3e.  v1:= `@@kotlin.collections.builders.MapBuilder.Companion` @type ^`kotlin.collections.builders.MapBuilder$Companion` @kind object;
  #L2a9c42.  call temp:= `getHashSize`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9c48.  v2:= temp;
  #L2a9c4a.  call temp:= `access$computeShift`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder$Companion;.access$computeShift:(Lkotlin/collections/builders/MapBuilder$Companion;I)I` @kind static;
  #L2a9c50.  v1:= temp;
  #L2a9c52.  v0.`kotlin.collections.builders.MapBuilder.hashShift` @type ^`int` := v1;
  #L2a9c56.  return @kind void;
}
procedure `java.lang.Object`[] `access$allocateValuesArray`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$allocateValuesArray:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a9964.  call temp:= `allocateValuesArray`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.allocateValuesArray:()[Ljava/lang/Object;` @kind direct;
  #L2a996a.  v0:= temp @kind object;
  #L2a996c.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getKeysArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getKeysArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a9980.  v0:= v0.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9984.  return v0 @kind object;
}
procedure `int` `access$getLength$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getLength$p:(Lkotlin/collections/builders/MapBuilder;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a95b0.  v0:= v0.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a95b4.  return v0;
}
procedure `int`[] `access$getPresenceArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getPresenceArray$p:(Lkotlin/collections/builders/MapBuilder;)[I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a986c.  v0:= v0.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9870.  return v0 @kind object;
}
procedure `java.lang.Object`[] `access$getValuesArray$p`(`kotlin.collections.builders.MapBuilder` v0 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.access$getValuesArray$p:(Lkotlin/collections/builders/MapBuilder;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a9998.  v0:= v0.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a999c.  return v0 @kind object;
}
procedure `void` `access$removeKeyAt`(`kotlin.collections.builders.MapBuilder` v0 @kind object, `int` v1 ) @signature `Lkotlin/collections/builders/MapBuilder;.access$removeKeyAt:(Lkotlin/collections/builders/MapBuilder;I)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a9c68.  call `removeKeyAt`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.removeKeyAt:(I)V` @kind direct;
  #L2a9c6e.  return @kind void;
}
procedure `java.lang.Object`[] `allocateValuesArray`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.allocateValuesArray:()[Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a99b0.  v0:= v1.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a99b4.  if v0 == 0 then goto L2a99ba;
  #L2a99b8.  return v0 @kind object;
  #L2a99ba.  call temp:= `getCapacity`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @kind direct;
  #L2a99c0.  v0:= temp;
  #L2a99c2.  call temp:= `arrayOfUninitializedElements`(v0) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @kind static;
  #L2a99c8.  v0:= temp @kind object;
  #L2a99ca.  v1.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2a99ce.  return v0 @kind object;
}
procedure `void` `compact`(`kotlin.collections.builders.MapBuilder` v5 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.compact:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a9d1c.  v0:= v5.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9d20.  v1:= 0I;
  #L2a9d22.  v2:= 0I;
  #L2a9d24.  v3:= v5.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9d28.  if v1 >= v3 then goto L2a9d5a;
  #L2a9d2c.  v3:= v5.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9d30.  v3:= v3[v1];
  #L2a9d34.  if v3 < 0 then goto L2a9d54;
  #L2a9d38.  v3:= v5.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9d3c.  v4:= v3[v1] @kind object;
  #L2a9d40.  v3[v2]:= v4 @kind object;
  #L2a9d44.  if v0 == 0 then goto L2a9d50;
  #L2a9d48.  v3:= v0[v1] @kind object;
  #L2a9d4c.  v0[v2]:= v3 @kind object;
  #L2a9d50.  v2:= v2 + 1;
  #L2a9d54.  v1:= v1 + 1;
  #L2a9d58.  goto L2a9d24;
  #L2a9d5a.  v1:= v5.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9d5e.  call `resetRange`(v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a9d64.  if v0 == 0 then goto L2a9d72;
  #L2a9d68.  v1:= v5.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9d6c.  call `resetRange`(v0, v2, v1) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a9d72.  v5.`kotlin.collections.builders.MapBuilder.length` @type ^`int` := v2;
  #L2a9d76.  return @kind void;
}
procedure `boolean` `contentEquals`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.contentEquals:(Ljava/util/Map;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a9330.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a9336.  v0:= temp;
  #L2a9338.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2a933e.  v1:= temp;
  #L2a9340.  if v0 != v1 then goto L2a935c;
  #L2a9344.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2a934a.  v3:= temp @kind object;
  #L2a934c.  call temp:= `containsAllEntries$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @kind virtual;
  #L2a9352.  v3:= temp;
  #L2a9354.  if v3 == 0 then goto L2a935c;
  #L2a9358.  v3:= 1I;
  #L2a935a.  goto L2a935e;
  #L2a935c.  v3:= 0I;
  #L2a935e.  return v3;
}
procedure `void` `ensureCapacity`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.ensureCapacity:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a9d88.  if v3 < 0 then goto L2a9e3e;
  #L2a9d8c.  call temp:= `getCapacity`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @kind direct;
  #L2a9d92.  v0:= temp;
  #L2a9d94.  if v3 <= v0 then goto L2a9e12;
  #L2a9d98.  call temp:= `getCapacity`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @kind direct;
  #L2a9d9e.  v0:= temp;
  #L2a9da0.  v0:= v0 * 3;
  #L2a9da4.  v0:= v0 / 2;
  #L2a9da8.  if v3 <= v0 then goto L2a9dae;
  #L2a9dac.  goto L2a9db0;
  #L2a9dae.  v3:= v0;
  #L2a9db0.  v0:= v2.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9db4.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2a9dba.  v0:= temp @kind object;
  #L2a9dbc.  v2.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2a9dc0.  v0:= v2.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9dc4.  if v0 == 0 then goto L2a9dd2;
  #L2a9dc8.  call temp:= `copyOfUninitializedElements`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2a9dce.  v0:= temp @kind object;
  #L2a9dd0.  goto L2a9dd4;
  #L2a9dd2.  v0:= 0I;
  #L2a9dd4.  v2.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2a9dd8.  v0:= v2.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9ddc.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2a9de2.  v0:= temp @kind object;
  #L2a9de4.  v1:= "copyOf(this, newSize)" @kind object;
  #L2a9de8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a9dee.  v2.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] := v0 @kind object;
  #L2a9df2.  v0:= `@@kotlin.collections.builders.MapBuilder.Companion` @type ^`kotlin.collections.builders.MapBuilder$Companion` @kind object;
  #L2a9df6.  call temp:= `access$computeHashSize`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$Companion;.access$computeHashSize:(Lkotlin/collections/builders/MapBuilder$Companion;I)I` @kind static;
  #L2a9dfc.  v3:= temp;
  #L2a9dfe.  call temp:= `getHashSize`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9e04.  v0:= temp;
  #L2a9e06.  if v3 <= v0 then goto L2a9e3c;
  #L2a9e0a.  call `rehash`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.rehash:(I)V` @kind direct;
  #L2a9e10.  goto L2a9e3c;
  #L2a9e12.  v0:= v2.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9e16.  v0:= v0 + v3 @kind int;
  #L2a9e18.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a9e1e.  v3:= temp;
  #L2a9e20.  v0:= v0 - v3 @kind int;
  #L2a9e22.  call temp:= `getCapacity`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @kind direct;
  #L2a9e28.  v3:= temp;
  #L2a9e2a.  if v0 <= v3 then goto L2a9e3c;
  #L2a9e2e.  call temp:= `getHashSize`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9e34.  v3:= temp;
  #L2a9e36.  call `rehash`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.rehash:(I)V` @kind direct;
  #L2a9e3c.  return @kind void;
  #L2a9e3e.  v3:= new `java.lang.OutOfMemoryError`;
  #L2a9e42.  call `<init>`(v3) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2a9e48.  throw v3;
}
procedure `void` `ensureExtraCapacity`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/builders/MapBuilder;.ensureExtraCapacity:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a9e5c.  v0:= v1.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9e60.  v0:= v0 + v2 @kind int;
  #L2a9e62.  call `ensureCapacity`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder;.ensureCapacity:(I)V` @kind direct;
  #L2a9e68.  return @kind void;
}
procedure `int` `findKey`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a96bc.  call temp:= `hash`(v5, v6) @signature `Lkotlin/collections/builders/MapBuilder;.hash:(Ljava/lang/Object;)I` @kind direct;
  #L2a96c2.  v0:= temp;
  #L2a96c4.  v1:= v5.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a96c8.  v2:= v5.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a96cc.  v2:= v2[v0];
  #L2a96d0.  v3:= -1I;
  #L2a96d2.  if v2 != 0 then goto L2a96d8;
  #L2a96d6.  return v3;
  #L2a96d8.  if v2 <= 0 then goto L2a96f6;
  #L2a96dc.  v4:= v5.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a96e0.  v2:= v2 + -1;
  #L2a96e4.  v4:= v4[v2] @kind object;
  #L2a96e8.  call temp:= `areEqual`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a96ee.  v4:= temp;
  #L2a96f0.  if v4 == 0 then goto L2a96f6;
  #L2a96f4.  return v2;
  #L2a96f6.  v1:= v1 + v3 @kind int;
  #L2a96f8.  if v1 >= 0 then goto L2a96fe;
  #L2a96fc.  return v3;
  #L2a96fe.  v2:= v0 + -1;
  #L2a9702.  if v0 != 0 then goto L2a9714;
  #L2a9706.  call temp:= `getHashSize`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a970c.  v0:= temp;
  #L2a970e.  v0:= v0 + -1;
  #L2a9712.  goto L2a96c8;
  #L2a9714.  v0:= v2;
  #L2a9716.  goto L2a96c8;
}
procedure `int` `findValue`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.findValue:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a9728.  v0:= v2.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a972c.  v1:= -1I;
  #L2a972e.  v0:= v0 + v1 @kind int;
  #L2a9730.  if v0 < 0 then goto L2a975c;
  #L2a9734.  v1:= v2.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9738.  v1:= v1[v0];
  #L2a973c.  if v1 < 0 then goto L2a972c;
  #L2a9740.  v1:= v2.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9744.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a974a.  v1:= v1[v0] @kind object;
  #L2a974e.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a9754.  v1:= temp;
  #L2a9756.  if v1 == 0 then goto L2a972c;
  #L2a975a.  return v0;
  #L2a975c.  return v1;
}
procedure `int` `getCapacity`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a9770.  v0:= v1.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9774.  v0:= length @variable v0;
  #L2a9776.  return v0;
}
procedure `int` `getHashSize`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a9788.  v0:= v1.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a978c.  v0:= length @variable v0;
  #L2a978e.  return v0;
}
procedure `int` `hash`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.hash:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a97b8.  if v2 == 0 then goto L2a97c6;
  #L2a97bc.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a97c2.  v2:= temp;
  #L2a97c4.  goto L2a97c8;
  #L2a97c6.  v2:= 0I;
  #L2a97c8.  v0:= -1640531527I;
  #L2a97ce.  v2:= v2 * v0 @kind int;
  #L2a97d2.  v0:= v1.`kotlin.collections.builders.MapBuilder.hashShift` @type ^`int`;
  #L2a97d6.  v2:= v2 ^>> v0 @kind int;
  #L2a97d8.  return v2;
}
procedure `boolean` `putAllEntries`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.putAllEntries:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a93e4.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2a93ea.  v0:= temp;
  #L2a93ec.  v1:= 0I;
  #L2a93ee.  if v0 == 0 then goto L2a93f4;
  #L2a93f2.  return v1;
  #L2a93f4.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2a93fa.  v0:= temp;
  #L2a93fc.  call `ensureExtraCapacity`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.ensureExtraCapacity:(I)V` @kind direct;
  #L2a9402.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a9408.  v3:= temp @kind object;
  #L2a940a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a9410.  v0:= temp;
  #L2a9412.  if v0 == 0 then goto L2a9432;
  #L2a9416.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a941c.  v0:= temp @kind object;
  #L2a941e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2a9422.  call temp:= `putEntry`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.putEntry:(Ljava/util/Map$Entry;)Z` @kind direct;
  #L2a9428.  v0:= temp;
  #L2a942a.  if v0 == 0 then goto L2a940a;
  #L2a942e.  v1:= 1I;
  #L2a9430.  goto L2a940a;
  #L2a9432.  return v1;
}
procedure `boolean` `putEntry`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `java.util.Map$Entry` v6 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.putEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a9444.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a944a.  v0:= temp @kind object;
  #L2a944c.  call temp:= `addKey$kotlin_stdlib`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2a9452.  v0:= temp;
  #L2a9454.  call temp:= `allocateValuesArray`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.allocateValuesArray:()[Ljava/lang/Object;` @kind direct;
  #L2a945a.  v1:= temp @kind object;
  #L2a945c.  v2:= 1I;
  #L2a945e.  if v0 < 0 then goto L2a9470;
  #L2a9462.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a9468.  v6:= temp @kind object;
  #L2a946a.  v1[v0]:= v6 @kind object;
  #L2a946e.  return v2;
  #L2a9470.  v0:= -v0 @kind int;
  #L2a9472.  v0:= v0 - v2 @kind int;
  #L2a9474.  v3:= v1[v0] @kind object;
  #L2a9478.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a947e.  v4:= temp @kind object;
  #L2a9480.  call temp:= `areEqual`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a9486.  v3:= temp;
  #L2a9488.  if v3 != 0 then goto L2a949a;
  #L2a948c.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a9492.  v6:= temp @kind object;
  #L2a9494.  v1[v0]:= v6 @kind object;
  #L2a9498.  return v2;
  #L2a949a.  v6:= 0I;
  #L2a949c.  return v6;
}
procedure `boolean` `putRehash`(`kotlin.collections.builders.MapBuilder` v5 @kind this, `int` v6 ) @signature `Lkotlin/collections/builders/MapBuilder;.putRehash:(I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a94b0.  v0:= v5.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a94b4.  v0:= v0[v6] @kind object;
  #L2a94b8.  call temp:= `hash`(v5, v0) @signature `Lkotlin/collections/builders/MapBuilder;.hash:(Ljava/lang/Object;)I` @kind direct;
  #L2a94be.  v0:= temp;
  #L2a94c0.  v1:= v5.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a94c4.  v2:= v5.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a94c8.  v3:= v2[v0];
  #L2a94cc.  v4:= 1I;
  #L2a94ce.  if v3 != 0 then goto L2a94e4;
  #L2a94d2.  v1:= v6 + 1;
  #L2a94d6.  v2[v0]:= v1;
  #L2a94da.  v1:= v5.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a94de.  v1[v6]:= v0;
  #L2a94e2.  return v4;
  #L2a94e4.  v1:= v1 + -1;
  #L2a94e8.  if v1 >= 0 then goto L2a94f0;
  #L2a94ec.  v6:= 0I;
  #L2a94ee.  return v6;
  #L2a94f0.  v2:= v0 + -1;
  #L2a94f4.  if v0 != 0 then goto L2a9504;
  #L2a94f8.  call temp:= `getHashSize`(v5) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a94fe.  v0:= temp;
  #L2a9500.  v0:= v0 - v4 @kind int;
  #L2a9502.  goto L2a94c4;
  #L2a9504.  v0:= v2;
  #L2a9506.  goto L2a94c4;
}
procedure `void` `rehash`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.rehash:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a9eac.  v0:= v2.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9eb0.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a9eb6.  v1:= temp;
  #L2a9eb8.  if v0 <= v1 then goto L2a9ec2;
  #L2a9ebc.  call `compact`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.compact:()V` @kind direct;
  #L2a9ec2.  call temp:= `getHashSize`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9ec8.  v0:= temp;
  #L2a9eca.  v1:= 0I;
  #L2a9ecc.  if v3 == v0 then goto L2a9eea;
  #L2a9ed0.  v0:= new `int`[v3];
  #L2a9ed4.  v2.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] := v0 @kind object;
  #L2a9ed8.  v0:= `@@kotlin.collections.builders.MapBuilder.Companion` @type ^`kotlin.collections.builders.MapBuilder$Companion` @kind object;
  #L2a9edc.  call temp:= `access$computeShift`(v0, v3) @signature `Lkotlin/collections/builders/MapBuilder$Companion;.access$computeShift:(Lkotlin/collections/builders/MapBuilder$Companion;I)I` @kind static;
  #L2a9ee2.  v3:= temp;
  #L2a9ee4.  v2.`kotlin.collections.builders.MapBuilder.hashShift` @type ^`int` := v3;
  #L2a9ee8.  goto L2a9efc;
  #L2a9eea.  v3:= v2.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9eee.  call temp:= `getHashSize`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9ef4.  v0:= temp;
  #L2a9ef6.  call `fill`(v3, v1, v1, v0) @signature `Lkotlin/collections/ArraysKt;.fill:([IIII)V` @kind static;
  #L2a9efc.  v3:= v2.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9f00.  if v1 >= v3 then goto L2a9f28;
  #L2a9f04.  v3:= v1 + 1;
  #L2a9f08.  call temp:= `putRehash`(v2, v1) @signature `Lkotlin/collections/builders/MapBuilder;.putRehash:(I)Z` @kind direct;
  #L2a9f0e.  v0:= temp;
  #L2a9f10.  if v0 == 0 then goto L2a9f18;
  #L2a9f14.  v1:= v3;
  #L2a9f16.  goto L2a9efc;
  #L2a9f18.  v3:= new `java.lang.IllegalStateException`;
  #L2a9f1c.  v0:= "This cannot happen with fixed magic multiplier and grow-only hash array. Have object hashCodes changed?" @kind object;
  #L2a9f20.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a9f26.  throw v3;
  #L2a9f28.  return @kind void;
}
procedure `void` `removeHashAt`(`kotlin.collections.builders.MapBuilder` v9 @kind this, `int` v10 ) @signature `Lkotlin/collections/builders/MapBuilder;.removeHashAt:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2a9f3c.  v0:= v9.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a9f40.  v0:= v0 * 2;
  #L2a9f44.  call temp:= `getHashSize`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9f4a.  v1:= temp;
  #L2a9f4c.  v1:= v1 / 2;
  #L2a9f50.  call temp:= `coerceAtMost`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L2a9f56.  v0:= temp;
  #L2a9f58.  v1:= 0I;
  #L2a9f5a.  v2:= v0;
  #L2a9f5c.  v3:= 0I;
  #L2a9f5e.  v0:= v10;
  #L2a9f60.  v4:= v10 + -1;
  #L2a9f64.  if v10 != 0 then goto L2a9f76;
  #L2a9f68.  call temp:= `getHashSize`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9f6e.  v10:= temp;
  #L2a9f70.  v10:= v10 + -1;
  #L2a9f74.  goto L2a9f78;
  #L2a9f76.  v10:= v4;
  #L2a9f78.  v3:= v3 + 1;
  #L2a9f7c.  v4:= v9.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a9f80.  if v3 <= v4 then goto L2a9f8e;
  #L2a9f84.  v10:= v9.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9f88.  v10[v0]:= v1;
  #L2a9f8c.  return @kind void;
  #L2a9f8e.  v4:= v9.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9f92.  v5:= v4[v10];
  #L2a9f96.  if v5 != 0 then goto L2a9fa0;
  #L2a9f9a.  v4[v0]:= v1;
  #L2a9f9e.  return @kind void;
  #L2a9fa0.  v6:= -1I;
  #L2a9fa2.  if v5 >= 0 then goto L2a9fb0;
  #L2a9fa6.  v4[v0]:= v6;
  #L2a9faa.  v0:= v10;
  #L2a9fac.  v3:= 0I;
  #L2a9fae.  goto L2a9fea;
  #L2a9fb0.  v4:= v9.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9fb4.  v7:= v5 + -1;
  #L2a9fb8.  v4:= v4[v7] @kind object;
  #L2a9fbc.  call temp:= `hash`(v9, v4) @signature `Lkotlin/collections/builders/MapBuilder;.hash:(Ljava/lang/Object;)I` @kind direct;
  #L2a9fc2.  v4:= temp;
  #L2a9fc4.  v4:= v4 - v10 @kind int;
  #L2a9fc6.  call temp:= `getHashSize`(v9) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9fcc.  v8:= temp;
  #L2a9fce.  v8:= v8 + -1;
  #L2a9fd2.  v4:= v4 ^& v8 @kind int;
  #L2a9fd4.  if v4 < v3 then goto L2a9fea;
  #L2a9fd8.  v3:= v9.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9fdc.  v3[v0]:= v5;
  #L2a9fe0.  v3:= v9.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9fe4.  v3[v7]:= v0;
  #L2a9fe8.  goto L2a9faa;
  #L2a9fea.  v2:= v2 + v6 @kind int;
  #L2a9fec.  if v2 >= 0 then goto L2a9f60;
  #L2a9ff0.  v10:= v9.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9ff4.  v10[v0]:= v6;
  #L2a9ff8.  return @kind void;
}
procedure `void` `removeKeyAt`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `int` v3 ) @signature `Lkotlin/collections/builders/MapBuilder;.removeKeyAt:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2aa00c.  v0:= v2.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2aa010.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L2aa016.  v0:= v2.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2aa01a.  v0:= v0[v3];
  #L2aa01e.  call `removeHashAt`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.removeHashAt:(I)V` @kind direct;
  #L2aa024.  v0:= v2.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2aa028.  v1:= -1I;
  #L2aa02a.  v0[v3]:= v1;
  #L2aa02e.  call temp:= `size`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2aa034.  v3:= temp;
  #L2aa036.  v3:= v3 + v1 @kind int;
  #L2aa038.  v2.`kotlin.collections.builders.MapBuilder.size` @type ^`int` := v3;
  #L2aa03c.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.collections.builders.MapBuilder` v2 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2a9930.  v0:= v2.`kotlin.collections.builders.MapBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a9934.  if v0 == 0 then goto L2a9944;
  #L2a9938.  v0:= new `kotlin.collections.builders.SerializedMap`;
  #L2a993c.  call `<init>`(v0, v2) @signature `Lkotlin/collections/builders/SerializedMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2a9942.  return v0 @kind object;
  #L2a9944.  v0:= new `java.io.NotSerializableException`;
  #L2a9948.  v1:= "The map cannot be serialized while it is being built." @kind object;
  #L2a994c.  call `<init>`(v0, v1) @signature `Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a9952.  throw v0;
}
procedure `int` `addKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a95c8.  call `checkIsMutable$kotlin_stdlib`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a95ce.  call temp:= `hash`(v7, v8) @signature `Lkotlin/collections/builders/MapBuilder;.hash:(Ljava/lang/Object;)I` @kind direct;
  #L2a95d4.  v0:= temp;
  #L2a95d6.  v1:= v7.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a95da.  v1:= v1 * 2;
  #L2a95de.  call temp:= `getHashSize`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a95e4.  v2:= temp;
  #L2a95e6.  v2:= v2 / 2;
  #L2a95ea.  call temp:= `coerceAtMost`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L2a95f0.  v1:= temp;
  #L2a95f2.  v2:= 0I;
  #L2a95f4.  v3:= v7.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a95f8.  v3:= v3[v0];
  #L2a95fc.  v4:= 1I;
  #L2a95fe.  if v3 > 0 then goto L2a965a;
  #L2a9602.  v1:= v7.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9606.  call temp:= `getCapacity`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.getCapacity:()I` @kind direct;
  #L2a960c.  v3:= temp;
  #L2a960e.  if v1 < v3 then goto L2a961a;
  #L2a9612.  call `ensureExtraCapacity`(v7, v4) @signature `Lkotlin/collections/builders/MapBuilder;.ensureExtraCapacity:(I)V` @kind direct;
  #L2a9618.  goto L2a95ce;
  #L2a961a.  v1:= v7.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a961e.  v3:= v1 + 1;
  #L2a9622.  v7.`kotlin.collections.builders.MapBuilder.length` @type ^`int` := v3;
  #L2a9626.  v5:= v7.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a962a.  v5[v1]:= v8 @kind object;
  #L2a962e.  v8:= v7.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9632.  v8[v1]:= v0;
  #L2a9636.  v8:= v7.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a963a.  v8[v0]:= v3;
  #L2a963e.  call temp:= `size`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a9644.  v8:= temp;
  #L2a9646.  v8:= v8 + v4 @kind int;
  #L2a9648.  v7.`kotlin.collections.builders.MapBuilder.size` @type ^`int` := v8;
  #L2a964c.  v8:= v7.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int`;
  #L2a9650.  if v2 <= v8 then goto L2a9658;
  #L2a9654.  v7.`kotlin.collections.builders.MapBuilder.maxProbeDistance` @type ^`int` := v2;
  #L2a9658.  return v1;
  #L2a965a.  v5:= v7.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a965e.  v6:= v3 + -1;
  #L2a9662.  v5:= v5[v6] @kind object;
  #L2a9666.  call temp:= `areEqual`(v5, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a966c.  v5:= temp;
  #L2a966e.  if v5 == 0 then goto L2a9676;
  #L2a9672.  v8:= -v3 @kind int;
  #L2a9674.  return v8;
  #L2a9676.  v2:= v2 + 1;
  #L2a967a.  if v2 <= v1 then goto L2a9692;
  #L2a967e.  call temp:= `getHashSize`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a9684.  v0:= temp;
  #L2a9686.  v0:= v0 * 2;
  #L2a968a.  call `rehash`(v7, v0) @signature `Lkotlin/collections/builders/MapBuilder;.rehash:(I)V` @kind direct;
  #L2a9690.  goto L2a95ce;
  #L2a9692.  v3:= v0 + -1;
  #L2a9696.  if v0 != 0 then goto L2a96a6;
  #L2a969a.  call temp:= `getHashSize`(v7) @signature `Lkotlin/collections/builders/MapBuilder;.getHashSize:()I` @kind direct;
  #L2a96a0.  v0:= temp;
  #L2a96a2.  v0:= v0 - v4 @kind int;
  #L2a96a4.  goto L2a95f4;
  #L2a96a6.  v0:= v3;
  #L2a96a8.  goto L2a95f4;
}
procedure `java.util.Map` `build`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.build:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9aa8.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9aae.  v0:= 1I;
  #L2a9ab0.  v1.`kotlin.collections.builders.MapBuilder.isReadOnly` @type ^`boolean` := v0 @kind boolean;
  #L2a9ab4.  return v1 @kind object;
}
procedure `void` `checkIsMutable$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9c80.  v0:= v1.`kotlin.collections.builders.MapBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a9c84.  if v0 != 0 then goto L2a9c8a;
  #L2a9c88.  return @kind void;
  #L2a9c8a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2a9c8e.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2a9c94.  throw v0;
}
procedure `void` `clear`(`kotlin.collections.builders.MapBuilder` v6 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a9ca8.  call `checkIsMutable$kotlin_stdlib`(v6) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9cae.  v0:= v6.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9cb2.  v0:= v0 + -1;
  #L2a9cb6.  v1:= 0I;
  #L2a9cb8.  if v0 < 0 then goto L2a9ce2;
  #L2a9cbc.  v2:= 0I;
  #L2a9cbe.  v3:= v6.`kotlin.collections.builders.MapBuilder.presenceArray` @type ^`int`[] @kind object;
  #L2a9cc2.  v4:= v3[v2];
  #L2a9cc6.  if v4 < 0 then goto L2a9cd8;
  #L2a9cca.  v5:= v6.`kotlin.collections.builders.MapBuilder.hashArray` @type ^`int`[] @kind object;
  #L2a9cce.  v5[v4]:= v1;
  #L2a9cd2.  v4:= -1I;
  #L2a9cd4.  v3[v2]:= v4;
  #L2a9cd8.  if v2 == v0 then goto L2a9ce2;
  #L2a9cdc.  v2:= v2 + 1;
  #L2a9ce0.  goto L2a9cbe;
  #L2a9ce2.  v0:= v6.`kotlin.collections.builders.MapBuilder.keysArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9ce6.  v2:= v6.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9cea.  call `resetRange`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a9cf0.  v0:= v6.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9cf4.  if v0 == 0 then goto L2a9d02;
  #L2a9cf8.  v2:= v6.`kotlin.collections.builders.MapBuilder.length` @type ^`int`;
  #L2a9cfc.  call `resetRange`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @kind static;
  #L2a9d02.  v6.`kotlin.collections.builders.MapBuilder.size` @type ^`int` := v1;
  #L2a9d06.  v6.`kotlin.collections.builders.MapBuilder.length` @type ^`int` := v1;
  #L2a9d0a.  return @kind void;
}
procedure `boolean` `containsAllEntries$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsAllEntries$kotlin_stdlib:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a9230.  v0:= "m" @kind object;
  #L2a9234.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a923a.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a9240.  v3:= temp @kind object;
  #L2a9242.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a9248.  v0:= temp;
  #L2a924a.  if v0 == 0 then goto L2a9270;
  #L2a924e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a9254.  v0:= temp @kind object;
  #L2a9256.  v1:= 0I;
  #L2a9258.  if v0 == 0 then goto L2a926e;
  #L2a925c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2a9260.  call temp:= `containsEntry$kotlin_stdlib`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2a9266.  v0:= temp;
  #L2a9268.  if v0 != 0 then goto L2a9242;
  #L2a926c.  
  #L2a926e.  return v1;
  #L2a9270.  v3:= 1I;
  #L2a9272.  return v3;
  catch `java.lang.ClassCastException` @[L2a925c..L2a9268] goto L2a926e;
}
procedure `boolean` `containsEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2a9294.  v0:= "entry" @kind object;
  #L2a9298.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a929e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a92a4.  v0:= temp @kind object;
  #L2a92a6.  call temp:= `findKey`(v2, v0) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @kind direct;
  #L2a92ac.  v0:= temp;
  #L2a92ae.  if v0 >= 0 then goto L2a92b6;
  #L2a92b2.  v3:= 0I;
  #L2a92b4.  return v3;
  #L2a92b6.  v1:= v2.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a92ba.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a92c0.  v0:= v1[v0] @kind object;
  #L2a92c4.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a92ca.  v3:= temp @kind object;
  #L2a92cc.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a92d2.  v3:= temp;
  #L2a92d4.  return v3;
}
procedure `boolean` `containsKey`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a92e8.  call temp:= `findKey`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @kind direct;
  #L2a92ee.  v1:= temp;
  #L2a92f0.  if v1 < 0 then goto L2a92f8;
  #L2a92f4.  v1:= 1I;
  #L2a92f6.  goto L2a92fa;
  #L2a92f8.  v1:= 0I;
  #L2a92fa.  return v1;
}
procedure `boolean` `containsValue`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a930c.  call temp:= `findValue`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.findValue:(Ljava/lang/Object;)I` @kind direct;
  #L2a9312.  v1:= temp;
  #L2a9314.  if v1 < 0 then goto L2a931c;
  #L2a9318.  v1:= 1I;
  #L2a931a.  goto L2a931e;
  #L2a931c.  v1:= 0I;
  #L2a931e.  return v1;
}
procedure `kotlin.collections.builders.MapBuilder$EntriesItr` `entriesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9b50.  v0:= new `kotlin.collections.builders.MapBuilder$EntriesItr`;
  #L2a9b54.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9b5a.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9ac8.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L2a9ace.  v0:= temp @kind object;
  #L2a9ad0.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9370.  if v2 == v1 then goto L2a9392;
  #L2a9374.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L2a9378.  if v0 == 0 then goto L2a938e;
  #L2a937c.  v2:= (`java.util.Map`) v2 @kind object;
  #L2a9380.  call temp:= `contentEquals`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.contentEquals:(Ljava/util/Map;)Z` @kind direct;
  #L2a9386.  v2:= temp;
  #L2a9388.  if v2 == 0 then goto L2a938e;
  #L2a938c.  goto L2a9392;
  #L2a938e.  v2:= 0I;
  #L2a9390.  goto L2a9394;
  #L2a9392.  v2:= 1I;
  #L2a9394.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9884.  call temp:= `findKey`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @kind direct;
  #L2a988a.  v2:= temp;
  #L2a988c.  if v2 >= 0 then goto L2a9894;
  #L2a9890.  v2:= 0I;
  #L2a9892.  return v2 @kind object;
  #L2a9894.  v0:= v1.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9898.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a989e.  v2:= v0[v2] @kind object;
  #L2a98a2.  return v2 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9ae4.  v0:= v1.`kotlin.collections.builders.MapBuilder.entriesView` @type ^`kotlin.collections.builders.MapBuilderEntries` @kind object;
  #L2a9ae8.  if v0 != 0 then goto L2a9afa;
  #L2a9aec.  v0:= new `kotlin.collections.builders.MapBuilderEntries`;
  #L2a9af0.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderEntries;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9af6.  v1.`kotlin.collections.builders.MapBuilder.entriesView` @type ^`kotlin.collections.builders.MapBuilderEntries` := v0 @kind object;
  #L2a9afa.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9b0c.  v0:= v1.`kotlin.collections.builders.MapBuilder.keysView` @type ^`kotlin.collections.builders.MapBuilderKeys` @kind object;
  #L2a9b10.  if v0 != 0 then goto L2a9b22;
  #L2a9b14.  v0:= new `kotlin.collections.builders.MapBuilderKeys`;
  #L2a9b18.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderKeys;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9b1e.  v1.`kotlin.collections.builders.MapBuilder.keysView` @type ^`kotlin.collections.builders.MapBuilderKeys` := v0 @kind object;
  #L2a9b22.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a97a0.  v0:= v1.`kotlin.collections.builders.MapBuilder.size` @type ^`int`;
  #L2a97a4.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9a64.  v0:= v1.`kotlin.collections.builders.MapBuilder.valuesView` @type ^`kotlin.collections.builders.MapBuilderValues` @kind object;
  #L2a9a68.  if v0 != 0 then goto L2a9a7a;
  #L2a9a6c.  v0:= new `kotlin.collections.builders.MapBuilderValues`;
  #L2a9a70.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilderValues;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9a76.  v1.`kotlin.collections.builders.MapBuilder.valuesView` @type ^`kotlin.collections.builders.MapBuilderValues` := v0 @kind object;
  #L2a9a7a.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.builders.MapBuilder` v3 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a97ec.  call temp:= `entriesIterator$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L2a97f2.  v0:= temp @kind object;
  #L2a97f4.  v1:= 0I;
  #L2a97f6.  call temp:= `hasNext`(v0) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L2a97fc.  v2:= temp;
  #L2a97fe.  if v2 == 0 then goto L2a980e;
  #L2a9802.  call temp:= `nextHashCode$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextHashCode$kotlin_stdlib:()I` @kind virtual;
  #L2a9808.  v2:= temp;
  #L2a980a.  v1:= v1 + v2 @kind int;
  #L2a980c.  goto L2a97f6;
  #L2a980e.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a93a8.  call temp:= `size`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a93ae.  v0:= temp;
  #L2a93b0.  if v0 != 0 then goto L2a93b8;
  #L2a93b4.  v0:= 1I;
  #L2a93b6.  goto L2a93ba;
  #L2a93b8.  v0:= 0I;
  #L2a93ba.  return v0;
}
procedure `boolean` `isReadOnly$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.isReadOnly$kotlin_stdlib:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a93cc.  v0:= v1.`kotlin.collections.builders.MapBuilder.isReadOnly` @type ^`boolean` @kind boolean;
  #L2a93d0.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9b34.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L2a9b3a.  v0:= temp @kind object;
  #L2a9b3c.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$KeysItr` `keysIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.keysIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$KeysItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9b6c.  v0:= new `kotlin.collections.builders.MapBuilder$KeysItr`;
  #L2a9b70.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$KeysItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9b76.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a98b4.  call `checkIsMutable$kotlin_stdlib`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a98ba.  call temp:= `addKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.addKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2a98c0.  v3:= temp;
  #L2a98c2.  call temp:= `allocateValuesArray`(v2) @signature `Lkotlin/collections/builders/MapBuilder;.allocateValuesArray:()[Ljava/lang/Object;` @kind direct;
  #L2a98c8.  v0:= temp @kind object;
  #L2a98ca.  if v3 >= 0 then goto L2a98de;
  #L2a98ce.  v3:= -v3 @kind int;
  #L2a98d0.  v3:= v3 + -1;
  #L2a98d4.  v1:= v0[v3] @kind object;
  #L2a98d8.  v0[v3]:= v4 @kind object;
  #L2a98dc.  return v1 @kind object;
  #L2a98de.  v0[v3]:= v4 @kind object;
  #L2a98e2.  v3:= 0I;
  #L2a98e4.  return v3 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.builders.MapBuilder` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9e7c.  v0:= "from" @kind object;
  #L2a9e80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a9e86.  call `checkIsMutable$kotlin_stdlib`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9e8c.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2a9e92.  v2:= temp @kind object;
  #L2a9e94.  call temp:= `putAllEntries`(v1, v2) @signature `Lkotlin/collections/builders/MapBuilder;.putAllEntries:(Ljava/util/Collection;)Z` @kind direct;
  #L2a9e9a.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.builders.MapBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a98f8.  call temp:= `removeKey$kotlin_stdlib`(v2, v3) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @kind virtual;
  #L2a98fe.  v3:= temp;
  #L2a9900.  if v3 >= 0 then goto L2a9908;
  #L2a9904.  v3:= 0I;
  #L2a9906.  return v3 @kind object;
  #L2a9908.  v0:= v2.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a990c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a9912.  v1:= v0[v3] @kind object;
  #L2a9916.  call `resetAt`(v0, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L2a991c.  return v1 @kind object;
}
procedure `boolean` `removeEntry$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v3 @kind this, `java.util.Map$Entry` v4 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeEntry$kotlin_stdlib:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a9518.  v0:= "entry" @kind object;
  #L2a951c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a9522.  call `checkIsMutable$kotlin_stdlib`(v3) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9528.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a952e.  v0:= temp @kind object;
  #L2a9530.  call temp:= `findKey`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @kind direct;
  #L2a9536.  v0:= temp;
  #L2a9538.  v1:= 0I;
  #L2a953a.  if v0 >= 0 then goto L2a9540;
  #L2a953e.  return v1;
  #L2a9540.  v2:= v3.`kotlin.collections.builders.MapBuilder.valuesArray` @type ^`java.lang.Object`[] @kind object;
  #L2a9544.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2a954a.  v2:= v2[v0] @kind object;
  #L2a954e.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a9554.  v4:= temp @kind object;
  #L2a9556.  call temp:= `areEqual`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a955c.  v4:= temp;
  #L2a955e.  if v4 != 0 then goto L2a9564;
  #L2a9562.  return v1;
  #L2a9564.  call `removeKeyAt`(v3, v0) @signature `Lkotlin/collections/builders/MapBuilder;.removeKeyAt:(I)V` @kind direct;
  #L2a956a.  v4:= 1I;
  #L2a956c.  return v4;
}
procedure `int` `removeKey$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeKey$kotlin_stdlib:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a9820.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9826.  call temp:= `findKey`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.findKey:(Ljava/lang/Object;)I` @kind direct;
  #L2a982c.  v1:= temp;
  #L2a982e.  if v1 >= 0 then goto L2a9836;
  #L2a9832.  v1:= -1I;
  #L2a9834.  return v1;
  #L2a9836.  call `removeKeyAt`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.removeKeyAt:(I)V` @kind direct;
  #L2a983c.  return v1;
}
procedure `boolean` `removeValue$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/builders/MapBuilder;.removeValue$kotlin_stdlib:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2a9580.  call `checkIsMutable$kotlin_stdlib`(v0) @signature `Lkotlin/collections/builders/MapBuilder;.checkIsMutable$kotlin_stdlib:()V` @kind virtual;
  #L2a9586.  call temp:= `findValue`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.findValue:(Ljava/lang/Object;)I` @kind direct;
  #L2a958c.  v1:= temp;
  #L2a958e.  if v1 >= 0 then goto L2a9596;
  #L2a9592.  v1:= 0I;
  #L2a9594.  return v1;
  #L2a9596.  call `removeKeyAt`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder;.removeKeyAt:(I)V` @kind direct;
  #L2a959c.  v1:= 1I;
  #L2a959e.  return v1;
}
procedure `int` `size`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9850.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getSize:()I` @kind virtual;
  #L2a9856.  v0:= temp;
  #L2a9858.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.builders.MapBuilder` v4 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a99e0.  v0:= new `java.lang.StringBuilder`;
  #L2a99e4.  call temp:= `size`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.size:()I` @kind virtual;
  #L2a99ea.  v1:= temp;
  #L2a99ec.  v1:= v1 * 3;
  #L2a99f0.  v1:= v1 + 2;
  #L2a99f4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2a99fa.  v1:= "{" @kind object;
  #L2a99fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a04.  call temp:= `entriesIterator$kotlin_stdlib`(v4) @signature `Lkotlin/collections/builders/MapBuilder;.entriesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$EntriesItr;` @kind virtual;
  #L2a9a0a.  v1:= temp @kind object;
  #L2a9a0c.  v2:= 0I;
  #L2a9a0e.  call temp:= `hasNext`(v1) @signature `Lkotlin/collections/builders/MapBuilder$Itr;.hasNext:()Z` @kind virtual;
  #L2a9a14.  v3:= temp;
  #L2a9a16.  if v3 == 0 then goto L2a9a34;
  #L2a9a1a.  if v2 <= 0 then goto L2a9a28;
  #L2a9a1e.  v3:= ", " @kind object;
  #L2a9a22.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a28.  call `nextAppendString`(v1, v0) @signature `Lkotlin/collections/builders/MapBuilder$EntriesItr;.nextAppendString:(Ljava/lang/StringBuilder;)V` @kind virtual;
  #L2a9a2e.  v2:= v2 + 1;
  #L2a9a32.  goto L2a9a0e;
  #L2a9a34.  v1:= "}" @kind object;
  #L2a9a38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9a44.  v0:= temp @kind object;
  #L2a9a46.  v1:= "sb.toString()" @kind object;
  #L2a9a4a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a9a50.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9a8c.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/builders/MapBuilder;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L2a9a92.  v0:= temp @kind object;
  #L2a9a94.  return v0 @kind object;
}
procedure `kotlin.collections.builders.MapBuilder$ValuesItr` `valuesIterator$kotlin_stdlib`(`kotlin.collections.builders.MapBuilder` v1 @kind this) @signature `Lkotlin/collections/builders/MapBuilder;.valuesIterator$kotlin_stdlib:()Lkotlin/collections/builders/MapBuilder$ValuesItr;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a9b88.  v0:= new `kotlin.collections.builders.MapBuilder$ValuesItr`;
  #L2a9b8c.  call `<init>`(v0, v1) @signature `Lkotlin/collections/builders/MapBuilder$ValuesItr;.<init>:(Lkotlin/collections/builders/MapBuilder;)V` @kind direct;
  #L2a9b92.  return v0 @kind object;
}
