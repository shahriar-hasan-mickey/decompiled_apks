record `kotlin.collections.builders.ListBuilderKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `access$subarrayContentEquals`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a7a00.  call temp:= `subarrayContentEquals`(v0, v1, v2, v3) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @kind static;
  #L2a7a06.  v0:= temp;
  #L2a7a08.  return v0;
}
procedure `int` `access$subarrayContentHashCode`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentHashCode:([Ljava/lang/Object;II)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a7a6c.  call temp:= `subarrayContentHashCode`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentHashCode:([Ljava/lang/Object;II)I` @kind static;
  #L2a7a72.  v0:= temp;
  #L2a7a74.  return v0;
}
procedure `java.lang.String` `access$subarrayContentToString`(`java.lang.Object`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.access$subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2a7b34.  call temp:= `subarrayContentToString`(v0, v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @kind static;
  #L2a7b3a.  v0:= temp @kind object;
  #L2a7b3c.  return v0 @kind object;
}
procedure `java.lang.Object`[] `arrayOfUninitializedElements`(`int` v1 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.arrayOfUninitializedElements:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a7ac8.  if v1 < 0 then goto L2a7ad0;
  #L2a7acc.  v0:= 1I;
  #L2a7ace.  goto L2a7ad2;
  #L2a7ad0.  v0:= 0I;
  #L2a7ad2.  if v0 == 0 then goto L2a7adc;
  #L2a7ad6.  v1:= new `java.lang.Object`[v1];
  #L2a7ada.  return v1 @kind object;
  #L2a7adc.  v1:= new `java.lang.IllegalArgumentException`;
  #L2a7ae0.  v0:= "capacity must be non-negative." @kind object;
  #L2a7ae4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a7aea.  v0:= temp @kind object;
  #L2a7aec.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a7af2.  throw v1;
}
procedure `java.lang.Object`[] `copyOfUninitializedElements`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.copyOfUninitializedElements:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a7b04.  v0:= "<this>" @kind object;
  #L2a7b08.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7b0e.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2a7b14.  v1:= temp @kind object;
  #L2a7b16.  v2:= "copyOf(this, newSize)" @kind object;
  #L2a7b1a.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7b20.  return v1 @kind object;
}
procedure `void` `resetAt`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a7bc4.  v0:= "<this>" @kind object;
  #L2a7bc8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7bce.  v0:= 0I;
  #L2a7bd0.  v1[v2]:= v0 @kind object;
  #L2a7bd4.  return @kind void;
}
procedure `void` `resetRange`(`java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetRange:([Ljava/lang/Object;II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2a7be8.  v0:= "<this>" @kind object;
  #L2a7bec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7bf2.  if v2 >= v3 then goto L2a7c02;
  #L2a7bf6.  call `resetAt`(v1, v2) @signature `Lkotlin/collections/builders/ListBuilderKt;.resetAt:([Ljava/lang/Object;I)V` @kind static;
  #L2a7bfc.  v2:= v2 + 1;
  #L2a7c00.  goto L2a7bf2;
  #L2a7c02.  return @kind void;
}
procedure `boolean` `subarrayContentEquals`(`java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 , `java.util.List` v7 @kind object) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentEquals:([Ljava/lang/Object;IILjava/util/List;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a7a1c.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a7a22.  v0:= temp;
  #L2a7a24.  v1:= 0I;
  #L2a7a26.  if v6 == v0 then goto L2a7a2c;
  #L2a7a2a.  return v1;
  #L2a7a2c.  v0:= 0I;
  #L2a7a2e.  if v0 >= v6 then goto L2a7a56;
  #L2a7a32.  v2:= v5 + v0 @kind int;
  #L2a7a36.  v2:= v4[v2] @kind object;
  #L2a7a3a.  call temp:= `get`(v7, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a7a40.  v3:= temp @kind object;
  #L2a7a42.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a7a48.  v2:= temp;
  #L2a7a4a.  if v2 != 0 then goto L2a7a50;
  #L2a7a4e.  return v1;
  #L2a7a50.  v0:= v0 + 1;
  #L2a7a54.  goto L2a7a2e;
  #L2a7a56.  v4:= 1I;
  #L2a7a58.  return v4;
}
procedure `int` `subarrayContentHashCode`(`java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentHashCode:([Ljava/lang/Object;II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a7a88.  v0:= 0I;
  #L2a7a8a.  v1:= 1I;
  #L2a7a8c.  v2:= 0I;
  #L2a7a8e.  if v2 >= v6 then goto L2a7ab6;
  #L2a7a92.  v3:= v5 + v2 @kind int;
  #L2a7a96.  v3:= v4[v3] @kind object;
  #L2a7a9a.  v1:= v1 * 31;
  #L2a7a9e.  if v3 == 0 then goto L2a7aac;
  #L2a7aa2.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a7aa8.  v3:= temp;
  #L2a7aaa.  goto L2a7aae;
  #L2a7aac.  v3:= 0I;
  #L2a7aae.  v1:= v1 + v3 @kind int;
  #L2a7ab0.  v2:= v2 + 1;
  #L2a7ab4.  goto L2a7a8e;
  #L2a7ab6.  return v1;
}
procedure `java.lang.String` `subarrayContentToString`(`java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/builders/ListBuilderKt;.subarrayContentToString:([Ljava/lang/Object;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2a7b50.  v0:= new `java.lang.StringBuilder`;
  #L2a7b54.  v1:= v5 * 3;
  #L2a7b58.  v1:= v1 + 2;
  #L2a7b5c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2a7b62.  v1:= "[" @kind object;
  #L2a7b66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7b6c.  v1:= 0I;
  #L2a7b6e.  if v1 >= v5 then goto L2a7b94;
  #L2a7b72.  if v1 <= 0 then goto L2a7b80;
  #L2a7b76.  v2:= ", " @kind object;
  #L2a7b7a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7b80.  v2:= v4 + v1 @kind int;
  #L2a7b84.  v2:= v3[v2] @kind object;
  #L2a7b88.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7b8e.  v1:= v1 + 1;
  #L2a7b92.  goto L2a7b6e;
  #L2a7b94.  v3:= "]" @kind object;
  #L2a7b98.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7b9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a7ba4.  v3:= temp @kind object;
  #L2a7ba6.  v4:= "sb.toString()" @kind object;
  #L2a7baa.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a7bb0.  return v3 @kind object;
}
