record `kotlin.collections.MutableMapWithDefaultImpl` @kind class @AccessFlag FINAL extends `kotlin.collections.MutableMapWithDefault` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlin.collections.MutableMapWithDefaultImpl.default` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `kotlin.collections.MutableMapWithDefaultImpl.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.util.Map` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.<init>:(Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a59cc.  v0:= "map" @kind object;
  #L2a59d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a59d6.  v0:= "default" @kind object;
  #L2a59da.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a59e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a59e6.  v1.`kotlin.collections.MutableMapWithDefaultImpl.map` @type ^`java.util.Map` := v2 @kind object;
  #L2a59ea.  v1.`kotlin.collections.MutableMapWithDefaultImpl.default` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L2a59ee.  return @kind void;
}
procedure `void` `clear`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5a00.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5a06.  v0:= temp @kind object;
  #L2a5a08.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2a5a0e.  return @kind void;
}
procedure `boolean` `containsKey`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5730.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5736.  v0:= temp @kind object;
  #L2a5738.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2a573e.  v2:= temp;
  #L2a5740.  return v2;
}
procedure `boolean` `containsValue`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5754.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a575a.  v0:= temp @kind object;
  #L2a575c.  call temp:= `containsValue`(v0, v2) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L2a5762.  v2:= temp;
  #L2a5764.  return v2;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a594c.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L2a5952.  v0:= temp @kind object;
  #L2a5954.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5778.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a577e.  v0:= temp @kind object;
  #L2a5780.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a5786.  v2:= temp;
  #L2a5788.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5824.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a582a.  v0:= temp @kind object;
  #L2a582c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a5832.  v2:= temp @kind object;
  #L2a5834.  return v2 @kind object;
}
procedure `java.util.Set` `getEntries`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5968.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a596e.  v0:= temp @kind object;
  #L2a5970.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2a5976.  v0:= temp @kind object;
  #L2a5978.  return v0 @kind object;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a598c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5992.  v0:= temp @kind object;
  #L2a5994.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2a599a.  v0:= temp @kind object;
  #L2a599c.  return v0 @kind object;
}
procedure `java.util.Map` `getMap`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5934.  v0:= v1.`kotlin.collections.MutableMapWithDefaultImpl.map` @type ^`java.util.Map` @kind object;
  #L2a5938.  return v0 @kind object;
}
procedure `java.lang.Object` `getOrImplicitDefault`(`kotlin.collections.MutableMapWithDefaultImpl` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getOrImplicitDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a5848.  call temp:= `getMap`(v2) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a584e.  v0:= temp @kind object;
  #L2a5850.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a5856.  v1:= temp @kind object;
  #L2a5858.  if v1 != 0 then goto L2a5874;
  #L2a585c.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2a5862.  v0:= temp;
  #L2a5864.  if v0 != 0 then goto L2a5874;
  #L2a5868.  v0:= v2.`kotlin.collections.MutableMapWithDefaultImpl.default` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2a586c.  call temp:= `invoke`(v0, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a5872.  v1:= temp @kind object;
  #L2a5874.  return v1 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a57c0.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a57c6.  v0:= temp @kind object;
  #L2a57c8.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2a57ce.  v0:= temp;
  #L2a57d0.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a58f4.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a58fa.  v0:= temp @kind object;
  #L2a58fc.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2a5902.  v0:= temp @kind object;
  #L2a5904.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a57e4.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a57ea.  v0:= temp @kind object;
  #L2a57ec.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2a57f2.  v0:= temp;
  #L2a57f4.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a579c.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a57a2.  v0:= temp @kind object;
  #L2a57a4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2a57aa.  v0:= temp;
  #L2a57ac.  return v0;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a59b0.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L2a59b6.  v0:= temp @kind object;
  #L2a59b8.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5888.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a588e.  v0:= temp @kind object;
  #L2a5890.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a5896.  v2:= temp @kind object;
  #L2a5898.  return v2 @kind object;
}
procedure `void` `putAll`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5a20.  v0:= "from" @kind object;
  #L2a5a24.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a5a2a.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a5a30.  v0:= temp @kind object;
  #L2a5a32.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L2a5a38.  return @kind void;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a58ac.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a58b2.  v0:= temp @kind object;
  #L2a58b4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a58ba.  v2:= temp @kind object;
  #L2a58bc.  return v2 @kind object;
}
procedure `int` `size`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a5808.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getSize:()I` @kind virtual;
  #L2a580e.  v0:= temp;
  #L2a5810.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a58d0.  call temp:= `getMap`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getMap:()Ljava/util/Map;` @kind virtual;
  #L2a58d6.  v0:= temp @kind object;
  #L2a58d8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a58de.  v0:= temp @kind object;
  #L2a58e0.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`kotlin.collections.MutableMapWithDefaultImpl` v1 @kind this) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a5918.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/MutableMapWithDefaultImpl;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L2a591e.  v0:= temp @kind object;
  #L2a5920.  return v0 @kind object;
}
