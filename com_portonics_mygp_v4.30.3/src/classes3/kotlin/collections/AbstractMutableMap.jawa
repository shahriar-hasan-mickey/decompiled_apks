record `kotlin.collections.AbstractMutableMap` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.AbstractMap` @kind class, `java.util.Map` @kind interface, `kotlin.jvm.internal.markers.KMutableMap` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.AbstractMutableMap` v0 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L29f70c.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L29f712.  return @kind void;
}
procedure `java.util.Set` `entrySet`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L29f6b8.  call temp:= `getEntries`(v1) @signature `Lkotlin/collections/AbstractMutableMap;.getEntries:()Ljava/util/Set;` @kind virtual;
  #L29f6be.  v0:= temp @kind object;
  #L29f6c0.  return v0 @kind object;
}
procedure `java.util.Set` `getEntries`() @signature `Lkotlin/collections/AbstractMutableMap;.getEntries:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `getKeys`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.getKeys:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29f6d4.  call temp:= `keySet`(v1) @signature `Ljava/util/AbstractMap;.keySet:()Ljava/util/Set;` @kind super;
  #L29f6da.  v0:= temp @kind object;
  #L29f6dc.  return v0 @kind object;
}
procedure `int` `getSize`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29f648.  call temp:= `size`(v1) @signature `Ljava/util/AbstractMap;.size:()I` @kind super;
  #L29f64e.  v0:= temp;
  #L29f650.  return v0;
}
procedure `java.util.Collection` `getValues`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.getValues:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29f680.  call temp:= `values`(v1) @signature `Ljava/util/AbstractMap;.values:()Ljava/util/Collection;` @kind super;
  #L29f686.  v0:= temp @kind object;
  #L29f688.  return v0 @kind object;
}
procedure `java.util.Set` `keySet`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L29f6f0.  call temp:= `getKeys`(v1) @signature `Lkotlin/collections/AbstractMutableMap;.getKeys:()Ljava/util/Set;` @kind virtual;
  #L29f6f6.  v0:= temp @kind object;
  #L29f6f8.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/collections/AbstractMutableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L29f664.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/AbstractMutableMap;.getSize:()I` @kind virtual;
  #L29f66a.  v0:= temp;
  #L29f66c.  return v0;
}
procedure `java.util.Collection` `values`(`kotlin.collections.AbstractMutableMap` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableMap;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L29f69c.  call temp:= `getValues`(v1) @signature `Lkotlin/collections/AbstractMutableMap;.getValues:()Ljava/util/Collection;` @kind virtual;
  #L29f6a2.  v0:= temp @kind object;
  #L29f6a4.  return v0 @kind object;
}
