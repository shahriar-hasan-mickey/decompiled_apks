record `kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `boolean`[] `kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8.$this_asSequence$inlined` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8` v0 @kind this, `boolean`[] v1 @kind object) @signature `Lkotlin/collections/ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8;.<init>:([Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a2040.  v0.`kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8.$this_asSequence$inlined` @type ^`boolean`[] := v1 @kind object;
  #L2a2044.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a204a.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8` v1 @kind this) @signature `Lkotlin/collections/ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2020.  v0:= v1.`kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8.$this_asSequence$inlined` @type ^`boolean`[] @kind object;
  #L2a2024.  call temp:= `iterator`(v0) @signature `Lkotlin/jvm/internal/ArrayIteratorsKt;.iterator:([Z)Lkotlin/collections/BooleanIterator;` @kind static;
  #L2a202a.  v0:= temp @kind object;
  #L2a202c.  return v0 @kind object;
}
