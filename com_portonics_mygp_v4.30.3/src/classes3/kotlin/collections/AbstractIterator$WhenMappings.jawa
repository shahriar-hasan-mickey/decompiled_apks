record `kotlin.collections.AbstractIterator$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.collections.AbstractIterator$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/AbstractIterator$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L29e3dc.  call temp:= `values`() @signature `Lkotlin/collections/State;.values:()[Lkotlin/collections/State;` @kind static;
  #L29e3e2.  v0:= temp @kind object;
  #L29e3e4.  v0:= length @variable v0;
  #L29e3e6.  v0:= new `int`[v0];
  #L29e3ea.  v1:= `@@kotlin.collections.State.Done` @type ^`kotlin.collections.State` @kind object;
  #L29e3ee.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L29e3f4.  v1:= temp;
  #L29e3f6.  v2:= 1I;
  #L29e3f8.  v0[v1]:= v2;
  #L29e3fc.  v1:= `@@kotlin.collections.State.Ready` @type ^`kotlin.collections.State` @kind object;
  #L29e400.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L29e406.  v1:= temp;
  #L29e408.  v2:= 2I;
  #L29e40a.  v0[v1]:= v2;
  #L29e40e.  `@@kotlin.collections.AbstractIterator$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L29e412.  return @kind void;
}
