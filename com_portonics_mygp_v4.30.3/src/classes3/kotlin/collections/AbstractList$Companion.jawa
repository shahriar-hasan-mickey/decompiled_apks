record `kotlin.collections.AbstractList$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.collections.AbstractList$Companion` v0 @kind this) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L29e648.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29e64e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.AbstractList$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L29e660.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractList$Companion;.<init>:()V` @kind direct;
  #L29e666.  return @kind void;
}
procedure `void` `checkBoundsIndexes$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkBoundsIndexes$kotlin_stdlib:(III)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29e678.  v0:= "startIndex: " @kind object;
  #L29e67c.  if v4 < 0 then goto L29e6c4;
  #L29e680.  if v5 > v6 then goto L29e6c4;
  #L29e684.  if v4 > v5 then goto L29e68a;
  #L29e688.  return @kind void;
  #L29e68a.  v6:= new `java.lang.IllegalArgumentException`;
  #L29e68e.  v1:= new `java.lang.StringBuilder`;
  #L29e692.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e698.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e69e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6a4.  v4:= " > endIndex: " @kind object;
  #L29e6a8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6ae.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6b4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e6ba.  v4:= temp @kind object;
  #L29e6bc.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e6c2.  throw v6;
  #L29e6c4.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L29e6c8.  v2:= new `java.lang.StringBuilder`;
  #L29e6cc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e6d2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6d8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6de.  v4:= ", endIndex: " @kind object;
  #L29e6e2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6e8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6ee.  v4:= ", size: " @kind object;
  #L29e6f2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6f8.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6fe.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e704.  v4:= temp @kind object;
  #L29e706.  call `<init>`(v1, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e70c.  throw v1;
}
procedure `void` `checkElementIndex$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkElementIndex$kotlin_stdlib:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29e720.  if v4 < 0 then goto L29e72a;
  #L29e724.  if v4 >= v5 then goto L29e72a;
  #L29e728.  return @kind void;
  #L29e72a.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L29e72e.  v1:= new `java.lang.StringBuilder`;
  #L29e732.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e738.  v2:= "index: " @kind object;
  #L29e73c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e742.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e748.  v4:= ", size: " @kind object;
  #L29e74c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e752.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e758.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e75e.  v4:= temp @kind object;
  #L29e760.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e766.  throw v0;
}
procedure `void` `checkPositionIndex$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkPositionIndex$kotlin_stdlib:(II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29e778.  if v4 < 0 then goto L29e782;
  #L29e77c.  if v4 > v5 then goto L29e782;
  #L29e780.  return @kind void;
  #L29e782.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L29e786.  v1:= new `java.lang.StringBuilder`;
  #L29e78a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e790.  v2:= "index: " @kind object;
  #L29e794.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e79a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7a0.  v4:= ", size: " @kind object;
  #L29e7a4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7aa.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e7b6.  v4:= temp @kind object;
  #L29e7b8.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e7be.  throw v0;
}
procedure `void` `checkRangeIndexes$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lkotlin/collections/AbstractList$Companion;.checkRangeIndexes$kotlin_stdlib:(III)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29e7d0.  v0:= "fromIndex: " @kind object;
  #L29e7d4.  if v4 < 0 then goto L29e81c;
  #L29e7d8.  if v5 > v6 then goto L29e81c;
  #L29e7dc.  if v4 > v5 then goto L29e7e2;
  #L29e7e0.  return @kind void;
  #L29e7e2.  v6:= new `java.lang.IllegalArgumentException`;
  #L29e7e6.  v1:= new `java.lang.StringBuilder`;
  #L29e7ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e7f0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7fc.  v4:= " > toIndex: " @kind object;
  #L29e800.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e806.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e80c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e812.  v4:= temp @kind object;
  #L29e814.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e81a.  throw v6;
  #L29e81c.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L29e820.  v2:= new `java.lang.StringBuilder`;
  #L29e824.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e82a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e830.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e836.  v4:= ", toIndex: " @kind object;
  #L29e83a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e840.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e846.  v4:= ", size: " @kind object;
  #L29e84a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e850.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e856.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e85c.  v4:= temp @kind object;
  #L29e85e.  call `<init>`(v1, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29e864.  throw v1;
}
procedure `boolean` `orderedEquals$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v3 @kind this, `java.util.Collection` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.orderedEquals$kotlin_stdlib:(Ljava/util/Collection;Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29e578.  v0:= "c" @kind object;
  #L29e57c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29e582.  v0:= "other" @kind object;
  #L29e586.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29e58c.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L29e592.  v0:= temp;
  #L29e594.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L29e59a.  v1:= temp;
  #L29e59c.  v2:= 0I;
  #L29e59e.  if v0 == v1 then goto L29e5a4;
  #L29e5a2.  return v2;
  #L29e5a4.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L29e5aa.  v5:= temp @kind object;
  #L29e5ac.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L29e5b2.  v4:= temp @kind object;
  #L29e5b4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L29e5ba.  v0:= temp;
  #L29e5bc.  if v0 == 0 then goto L29e5de;
  #L29e5c0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L29e5c6.  v0:= temp @kind object;
  #L29e5c8.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L29e5ce.  v1:= temp @kind object;
  #L29e5d0.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L29e5d6.  v0:= temp;
  #L29e5d8.  if v0 != 0 then goto L29e5b4;
  #L29e5dc.  return v2;
  #L29e5de.  v4:= 1I;
  #L29e5e0.  return v4;
}
procedure `int` `orderedHashCode$kotlin_stdlib`(`kotlin.collections.AbstractList$Companion` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lkotlin/collections/AbstractList$Companion;.orderedHashCode$kotlin_stdlib:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L29e5f4.  v0:= "c" @kind object;
  #L29e5f8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29e5fe.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L29e604.  v3:= temp @kind object;
  #L29e606.  v0:= 1I;
  #L29e608.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L29e60e.  v1:= temp;
  #L29e610.  if v1 == 0 then goto L29e634;
  #L29e614.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L29e61a.  v1:= temp @kind object;
  #L29e61c.  v0:= v0 * 31;
  #L29e620.  if v1 == 0 then goto L29e62e;
  #L29e624.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29e62a.  v1:= temp;
  #L29e62c.  goto L29e630;
  #L29e62e.  v1:= 0I;
  #L29e630.  v0:= v0 + v1 @kind int;
  #L29e632.  goto L29e608;
  #L29e634.  return v0;
}
