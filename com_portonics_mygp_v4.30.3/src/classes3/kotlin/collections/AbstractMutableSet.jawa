record `kotlin.collections.AbstractMutableSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.AbstractSet` @kind class, `java.util.Set` @kind interface, `kotlin.jvm.internal.markers.KMutableSet` @kind interface {
}
procedure `void` `<init>`(`kotlin.collections.AbstractMutableSet` v0 @kind this) @signature `Lkotlin/collections/AbstractMutableSet;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L29f740.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L29f746.  return @kind void;
}
procedure `boolean` `add`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/collections/AbstractMutableSet;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getSize`() @signature `Lkotlin/collections/AbstractMutableSet;.getSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`(`kotlin.collections.AbstractMutableSet` v1 @kind this) @signature `Lkotlin/collections/AbstractMutableSet;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L29f724.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/AbstractMutableSet;.getSize:()I` @kind virtual;
  #L29f72a.  v0:= temp;
  #L29f72c.  return v0;
}
