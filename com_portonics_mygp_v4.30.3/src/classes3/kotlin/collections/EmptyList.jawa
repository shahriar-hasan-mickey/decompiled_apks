record `kotlin.collections.EmptyList` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.List` @kind interface, `java.io.Serializable` @kind interface, `java.util.RandomAccess` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
}
global `kotlin.collections.EmptyList` `@@kotlin.collections.EmptyList.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.collections.EmptyList.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/collections/EmptyList;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a40e0.  v0:= new `kotlin.collections.EmptyList`;
  #L2a40e4.  call `<init>`(v0) @signature `Lkotlin/collections/EmptyList;.<init>:()V` @kind direct;
  #L2a40ea.  `@@kotlin.collections.EmptyList.INSTANCE` @type ^`kotlin.collections.EmptyList` := v0 @kind object;
  #L2a40ee.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.EmptyList` v0 @kind this) @signature `Lkotlin/collections/EmptyList;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a4100.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a4106.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2a3ed8.  v0:= `@@kotlin.collections.EmptyList.INSTANCE` @type ^`kotlin.collections.EmptyList` @kind object;
  #L2a3edc.  return v0 @kind object;
}
procedure `void` `add`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a4118.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a411c.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a4120.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4126.  throw v1;
}
procedure `void` `add`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(ILjava/lang/Void;)V` @AccessFlag PUBLIC {
    temp;

  #L2a4138.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a413c.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a4140.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4146.  throw v1;
}
procedure `boolean` `add`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a3c4c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3c50.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3c54.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3c5a.  throw v2;
}
procedure `boolean` `add`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.add:(Ljava/lang/Void;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3c6c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3c70.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3c74.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3c7a.  throw v2;
}
procedure `boolean` `addAll`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a3c8c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a3c90.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a3c94.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3c9a.  throw v1;
}
procedure `boolean` `addAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3cac.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3cb0.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3cb4.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3cba.  throw v2;
}
procedure `void` `clear`(`kotlin.collections.EmptyList` v2 @kind this) @signature `Lkotlin/collections/EmptyList;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a4158.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2a415c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L2a4160.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4166.  throw v0;
}
procedure `boolean` `contains`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a3ccc.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L2a3cd0.  if v0 != 0 then goto L2a3cd8;
  #L2a3cd4.  v2:= 0I;
  #L2a3cd6.  return v2;
  #L2a3cd8.  v2:= (`java.lang.Void`) v2 @kind object;
  #L2a3cdc.  call temp:= `contains`(v1, v2) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Void;)Z` @kind virtual;
  #L2a3ce2.  v2:= temp;
  #L2a3ce4.  return v2;
}
procedure `boolean` `contains`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.contains:(Ljava/lang/Void;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3cf8.  v0:= "element" @kind object;
  #L2a3cfc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3d02.  v2:= 0I;
  #L2a3d04.  return v2;
}
procedure `boolean` `containsAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3d18.  v0:= "elements" @kind object;
  #L2a3d1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3d22.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2a3d28.  v2:= temp;
  #L2a3d2a.  return v2;
}
procedure `boolean` `equals`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3d3c.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L2a3d40.  if v0 == 0 then goto L2a3d58;
  #L2a3d44.  v2:= (`java.util.List`) v2 @kind object;
  #L2a3d48.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2a3d4e.  v2:= temp;
  #L2a3d50.  if v2 == 0 then goto L2a3d58;
  #L2a3d54.  v2:= 1I;
  #L2a3d56.  goto L2a3d5a;
  #L2a3d58.  v2:= 0I;
  #L2a3d5a.  return v2;
}
procedure `java.lang.Object` `get`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 ) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a3ebc.  call temp:= `get`(v0, v1) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Void;` @kind virtual;
  #L2a3ec2.  v1:= temp @kind object;
  #L2a3ec4.  return v1 @kind object;
}
procedure `java.lang.Void` `get`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 ) @signature `Lkotlin/collections/EmptyList;.get:(I)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a3f88.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2a3f8c.  v1:= new `java.lang.StringBuilder`;
  #L2a3f90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a3f96.  v2:= "Empty list doesn't contain element at index " @kind object;
  #L2a3f9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a3fa0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a3fa6.  v4:= 46I;
  #L2a3faa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a3fb0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a3fb6.  v4:= temp @kind object;
  #L2a3fb8.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3fbe.  throw v0;
}
procedure `int` `getSize`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3de0.  v0:= 0I;
  #L2a3de2.  return v0;
}
procedure `int` `hashCode`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3df4.  v0:= 1I;
  #L2a3df6.  return v0;
}
procedure `int` `indexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a3e08.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L2a3e0c.  if v0 != 0 then goto L2a3e14;
  #L2a3e10.  v2:= -1I;
  #L2a3e12.  return v2;
  #L2a3e14.  v2:= (`java.lang.Void`) v2 @kind object;
  #L2a3e18.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Void;)I` @kind virtual;
  #L2a3e1e.  v2:= temp;
  #L2a3e20.  return v2;
}
procedure `int` `indexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.indexOf:(Ljava/lang/Void;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3e34.  v0:= "element" @kind object;
  #L2a3e38.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3e3e.  v2:= -1I;
  #L2a3e40.  return v2;
}
procedure `boolean` `isEmpty`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3d6c.  v0:= 1I;
  #L2a3d6e.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4010.  v0:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L2a4014.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a3e54.  v0:= instanceof @variable v2 @type ^`java.lang.Void` @kind boolean;
  #L2a3e58.  if v0 != 0 then goto L2a3e60;
  #L2a3e5c.  v2:= -1I;
  #L2a3e5e.  return v2;
  #L2a3e60.  v2:= (`java.lang.Void`) v2 @kind object;
  #L2a3e64.  call temp:= `lastIndexOf`(v1, v2) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Void;)I` @kind virtual;
  #L2a3e6a.  v2:= temp;
  #L2a3e6c.  return v2;
}
procedure `int` `lastIndexOf`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.lastIndexOf:(Ljava/lang/Void;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3e80.  v0:= "element" @kind object;
  #L2a3e84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3e8a.  v2:= -1I;
  #L2a3e8c.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4080.  v0:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L2a4084.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 ) @signature `Lkotlin/collections/EmptyList;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a4098.  if v4 != 0 then goto L2a40a2;
  #L2a409c.  v4:= `@@kotlin.collections.EmptyIterator.INSTANCE` @type ^`kotlin.collections.EmptyIterator` @kind object;
  #L2a40a0.  return v4 @kind object;
  #L2a40a2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2a40a6.  v1:= new `java.lang.StringBuilder`;
  #L2a40aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a40b0.  v2:= "Index: " @kind object;
  #L2a40b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a40ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a40c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a40c6.  v4:= temp @kind object;
  #L2a40c8.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a40ce.  throw v0;
}
procedure `java.lang.Object` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/EmptyList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a3ef0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3ef4.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3ef8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3efe.  throw v2;
}
procedure `java.lang.Void` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `int` v2 ) @signature `Lkotlin/collections/EmptyList;.remove:(I)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3fd0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3fd4.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3fd8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3fde.  throw v2;
}
procedure `boolean` `remove`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3d80.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3d84.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3d88.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3d8e.  throw v2;
}
procedure `boolean` `removeAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3da0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3da4.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3da8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3dae.  throw v2;
}
procedure `boolean` `retainAll`(`kotlin.collections.EmptyList` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3dc0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2a3dc4.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L2a3dc8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3dce.  throw v2;
}
procedure `java.lang.Object` `set`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a3f10.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a3f14.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a3f18.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3f1e.  throw v1;
}
procedure `java.lang.Void` `set`(`kotlin.collections.EmptyList` v0 @kind this, `int` v1 , `java.lang.Void` v2 @kind object) @signature `Lkotlin/collections/EmptyList;.set:(ILjava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L2a3ff0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2a3ff4.  v2:= "Operation is not supported for read-only collection" @kind object;
  #L2a3ff8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a3ffe.  throw v1;
}
procedure `int` `size`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2a3ea0.  call temp:= `getSize`(v1) @signature `Lkotlin/collections/EmptyList;.getSize:()I` @kind virtual;
  #L2a3ea6.  v0:= temp;
  #L2a3ea8.  return v0;
}
procedure `java.util.List` `subList`(`kotlin.collections.EmptyList` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lkotlin/collections/EmptyList;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a4028.  if v4 != 0 then goto L2a4032;
  #L2a402c.  if v5 != 0 then goto L2a4032;
  #L2a4030.  return v3 @kind object;
  #L2a4032.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2a4036.  v1:= new `java.lang.StringBuilder`;
  #L2a403a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a4040.  v2:= "fromIndex: " @kind object;
  #L2a4044.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a404a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4050.  v4:= ", toIndex: " @kind object;
  #L2a4054.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a405a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4060.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a4066.  v4:= temp @kind object;
  #L2a4068.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a406e.  throw v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3f30.  call temp:= `toArray`(v1) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @kind static;
  #L2a3f36.  v0:= temp @kind object;
  #L2a3f38.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.collections.EmptyList` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/collections/EmptyList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3f4c.  v0:= "array" @kind object;
  #L2a3f50.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2a3f56.  call temp:= `toArray`(v1, v2) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L2a3f5c.  v2:= temp @kind object;
  #L2a3f5e.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.collections.EmptyList` v1 @kind this) @signature `Lkotlin/collections/EmptyList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3f70.  v0:= "[]" @kind object;
  #L2a3f74.  return v0 @kind object;
}
