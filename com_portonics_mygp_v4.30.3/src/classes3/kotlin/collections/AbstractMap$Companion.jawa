record `kotlin.collections.AbstractMap$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.collections.AbstractMap$Companion` v0 @kind this) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L29ee34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29ee3a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.collections.AbstractMap$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L29ee4c.  call `<init>`(v0) @signature `Lkotlin/collections/AbstractMap$Companion;.<init>:()V` @kind direct;
  #L29ee52.  return @kind void;
}
procedure `boolean` `entryEquals$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v3 @kind this, `java.util.Map$Entry` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryEquals$kotlin_stdlib:(Ljava/util/Map$Entry;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29ed28.  v0:= "e" @kind object;
  #L29ed2c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29ed32.  v0:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L29ed36.  v1:= 0I;
  #L29ed38.  if v0 != 0 then goto L29ed3e;
  #L29ed3c.  return v1;
  #L29ed3e.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29ed44.  v0:= temp @kind object;
  #L29ed46.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L29ed4a.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29ed50.  v2:= temp @kind object;
  #L29ed52.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L29ed58.  v0:= temp;
  #L29ed5a.  if v0 == 0 then goto L29ed7c;
  #L29ed5e.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L29ed64.  v4:= temp @kind object;
  #L29ed66.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L29ed6c.  v5:= temp @kind object;
  #L29ed6e.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L29ed74.  v4:= temp;
  #L29ed76.  if v4 == 0 then goto L29ed7c;
  #L29ed7a.  v1:= 1I;
  #L29ed7c.  return v1;
}
procedure `int` `entryHashCode$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryHashCode$kotlin_stdlib:(Ljava/util/Map$Entry;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L29ed90.  v0:= "e" @kind object;
  #L29ed94.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29ed9a.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29eda0.  v0:= temp @kind object;
  #L29eda2.  v1:= 0I;
  #L29eda4.  if v0 == 0 then goto L29edb2;
  #L29eda8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29edae.  v0:= temp;
  #L29edb0.  goto L29edb4;
  #L29edb2.  v0:= 0I;
  #L29edb4.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L29edba.  v3:= temp @kind object;
  #L29edbc.  if v3 == 0 then goto L29edc8;
  #L29edc0.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29edc6.  v1:= temp;
  #L29edc8.  v3:= v0 ^~ v1 @kind int;
  #L29edcc.  return v3;
}
procedure `java.lang.String` `entryToString$kotlin_stdlib`(`kotlin.collections.AbstractMap$Companion` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lkotlin/collections/AbstractMap$Companion;.entryToString$kotlin_stdlib:(Ljava/util/Map$Entry;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L29ede0.  v0:= "e" @kind object;
  #L29ede4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29edea.  v0:= new `java.lang.StringBuilder`;
  #L29edee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29edf4.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29edfa.  v1:= temp @kind object;
  #L29edfc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29ee02.  v1:= 61I;
  #L29ee06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29ee0c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L29ee12.  v3:= temp @kind object;
  #L29ee14.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29ee1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29ee20.  v3:= temp @kind object;
  #L29ee22.  return v3 @kind object;
}
