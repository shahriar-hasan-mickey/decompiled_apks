record `kotlin.text.RegexKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.text.MatchResult` `access$findNext`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c66b4.  call temp:= `findNext`(v0, v1, v2) @signature `Lkotlin/text/RegexKt;.findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L2c66ba.  v0:= temp @kind object;
  #L2c66bc.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `access$matchEntire`(`java.util.regex.Matcher` v0 @kind object, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c66d0.  call temp:= `matchEntire`(v0, v1) @signature `Lkotlin/text/RegexKt;.matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L2c66d6.  v0:= temp @kind object;
  #L2c66d8.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c6624.  call temp:= `range`(v0) @signature `Lkotlin/text/RegexKt;.range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L2c662a.  v0:= temp @kind object;
  #L2c662c.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object, `int` v1 ) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c6640.  call temp:= `range`(v0, v1) @signature `Lkotlin/text/RegexKt;.range:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @kind static;
  #L2c6646.  v0:= temp @kind object;
  #L2c6648.  return v0 @kind object;
}
procedure `int` `access$toInt`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c656c.  call temp:= `toInt`(v0) @signature `Lkotlin/text/RegexKt;.toInt:(Ljava/lang/Iterable;)I` @kind static;
  #L2c6572.  v0:= temp;
  #L2c6574.  return v0;
}
procedure `kotlin.text.MatchResult` `findNext`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2c66ec.  call temp:= `find`(v0, v1) @signature `Ljava/util/regex/Matcher;.find:(I)Z` @kind virtual;
  #L2c66f2.  v1:= temp;
  #L2c66f4.  if v1 != 0 then goto L2c66fc;
  #L2c66f8.  v0:= 0I;
  #L2c66fa.  goto L2c6708;
  #L2c66fc.  v1:= new `kotlin.text.MatcherMatchResult`;
  #L2c6700.  call `<init>`(v1, v0, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L2c6706.  v0:= v1 @kind object;
  #L2c6708.  return v0 @kind object;
}
procedure `java.util.Set` `fromInt`(`int` v2 ) @signature `Lkotlin/text/RegexKt;.fromInt:(I)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2c65c8.  v0:= 4I;
  #L2c65ca.  v1:= "T" @kind object;
  #L2c65ce.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L2c65d4.  v0:= constclass @type ^`java.lang.Enum` @kind object;
  #L2c65d8.  call temp:= `allOf`(v0) @signature `Ljava/util/EnumSet;.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L2c65de.  v0:= temp @kind object;
  #L2c65e0.  v1:= "" @kind object;
  #L2c65e4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c65ea.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L2c65f0.  v1:= new `kotlin.text.RegexKt$fromInt$1$1`;
  #L2c65f4.  call `<init>`(v1, v2) @signature `Lkotlin/text/RegexKt$fromInt$1$1;.<init>:(I)V` @kind direct;
  #L2c65fa.  call temp:= `retainAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.retainAll:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z` @kind static;
  #L2c6600.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L2c6606.  v2:= temp @kind object;
  #L2c6608.  v0:= "unmodifiableSet(EnumSet.â€¦mask == it.value }\n    })" @kind object;
  #L2c660c.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6612.  return v2 @kind object;
}
procedure `kotlin.text.MatchResult` `matchEntire`(`java.util.regex.Matcher` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2c671c.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2c6722.  v0:= temp;
  #L2c6724.  if v0 != 0 then goto L2c672c;
  #L2c6728.  v1:= 0I;
  #L2c672a.  goto L2c6738;
  #L2c672c.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L2c6730.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L2c6736.  v1:= v0 @kind object;
  #L2c6738.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `range`(`java.util.regex.MatchResult` v1 @kind object) @signature `Lkotlin/text/RegexKt;.range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2c665c.  call temp:= `start`(v1) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L2c6662.  v0:= temp;
  #L2c6664.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L2c666a.  v1:= temp;
  #L2c666c.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L2c6672.  v1:= temp @kind object;
  #L2c6674.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `range`(`java.util.regex.MatchResult` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/RegexKt;.range:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2c6688.  call temp:= `start`(v1, v2) @signature `Ljava/util/regex/MatchResult;.start:(I)I` @kind interface;
  #L2c668e.  v0:= temp;
  #L2c6690.  call temp:= `end`(v1, v2) @signature `Ljava/util/regex/MatchResult;.end:(I)I` @kind interface;
  #L2c6696.  v1:= temp;
  #L2c6698.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L2c669e.  v1:= temp @kind object;
  #L2c66a0.  return v1 @kind object;
}
procedure `int` `toInt`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/text/RegexKt;.toInt:(Ljava/lang/Iterable;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6588.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c658e.  v2:= temp @kind object;
  #L2c6590.  v0:= 0I;
  #L2c6592.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c6598.  v1:= temp;
  #L2c659a.  if v1 == 0 then goto L2c65b6;
  #L2c659e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c65a4.  v1:= temp @kind object;
  #L2c65a6.  v1:= (`kotlin.text.FlagEnum`) v1 @kind object;
  #L2c65aa.  call temp:= `getValue`(v1) @signature `Lkotlin/text/FlagEnum;.getValue:()I` @kind interface;
  #L2c65b0.  v1:= temp;
  #L2c65b2.  v0:= v0 ^| v1 @kind int;
  #L2c65b4.  goto L2c6592;
  #L2c65b6.  return v0;
}
