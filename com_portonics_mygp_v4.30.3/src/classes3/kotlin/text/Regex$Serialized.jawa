record `kotlin.text.Regex$Serialized` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `int` `kotlin.text.Regex$Serialized.flags` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.text.Regex$Serialized.pattern` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.text.Regex$Serialized$Companion` `@@kotlin.text.Regex$Serialized.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.text.Regex$Serialized.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/text/Regex$Serialized;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c6104.  v0:= new `kotlin.text.Regex$Serialized$Companion`;
  #L2c6108.  v1:= 0I;
  #L2c610a.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex$Serialized$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2c6110.  `@@kotlin.text.Regex$Serialized.Companion` @type ^`kotlin.text.Regex$Serialized$Companion` := v0 @kind object;
  #L2c6114.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex$Serialized` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lkotlin/text/Regex$Serialized;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c6128.  v0:= "pattern" @kind object;
  #L2c612c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6132.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c6138.  v1.`kotlin.text.Regex$Serialized.pattern` @type ^`java.lang.String` := v2 @kind object;
  #L2c613c.  v1.`kotlin.text.Regex$Serialized.flags` @type ^`int` := v3;
  #L2c6140.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.text.Regex$Serialized` v3 @kind this) @signature `Lkotlin/text/Regex$Serialized;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c60b4.  v0:= new `kotlin.text.Regex`;
  #L2c60b8.  v1:= v3.`kotlin.text.Regex$Serialized.pattern` @type ^`java.lang.String` @kind object;
  #L2c60bc.  v2:= v3.`kotlin.text.Regex$Serialized.flags` @type ^`int`;
  #L2c60c0.  call temp:= `compile`(v1, v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L2c60c6.  v1:= temp @kind object;
  #L2c60c8.  v2:= "compile(pattern, flags)" @kind object;
  #L2c60cc.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c60d2.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L2c60d8.  return v0 @kind object;
}
procedure `int` `getFlags`(`kotlin.text.Regex$Serialized` v1 @kind this) @signature `Lkotlin/text/Regex$Serialized;.getFlags:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c609c.  v0:= v1.`kotlin.text.Regex$Serialized.flags` @type ^`int`;
  #L2c60a0.  return v0;
}
procedure `java.lang.String` `getPattern`(`kotlin.text.Regex$Serialized` v1 @kind this) @signature `Lkotlin/text/Regex$Serialized;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c60ec.  v0:= v1.`kotlin.text.Regex$Serialized.pattern` @type ^`java.lang.String` @kind object;
  #L2c60f0.  return v0 @kind object;
}
