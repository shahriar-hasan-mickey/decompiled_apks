record `kotlin.text.Regex` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.util.Set` `kotlin.text.Regex._options` @AccessFlag PRIVATE;
  `java.util.regex.Pattern` `kotlin.text.Regex.nativePattern` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.text.Regex$Companion` `@@kotlin.text.Regex.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/text/Regex;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c6f80.  v0:= new `kotlin.text.Regex$Companion`;
  #L2c6f84.  v1:= 0I;
  #L2c6f86.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2c6f8c.  `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` := v0 @kind object;
  #L2c6f90.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c6fa4.  v0:= "pattern" @kind object;
  #L2c6fa8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6fae.  call temp:= `compile`(v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2c6fb4.  v2:= temp @kind object;
  #L2c6fb6.  v0:= "compile(pattern)" @kind object;
  #L2c6fba.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6fc0.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L2c6fc6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Set` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c6fd8.  v0:= "pattern" @kind object;
  #L2c6fdc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6fe2.  v0:= "options" @kind object;
  #L2c6fe6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6fec.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L2c6ff0.  call temp:= `access$toInt`(v3) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @kind static;
  #L2c6ff6.  v3:= temp;
  #L2c6ff8.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L2c6ffe.  v3:= temp;
  #L2c7000.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L2c7006.  v2:= temp @kind object;
  #L2c7008.  v3:= "compile(pattern, ensureUâ€¦odeCase(options.toInt()))" @kind object;
  #L2c700c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c7012.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L2c7018.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.text.RegexOption` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Lkotlin/text/RegexOption;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c702c.  v0:= "pattern" @kind object;
  #L2c7030.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c7036.  v0:= "option" @kind object;
  #L2c703a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c7040.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L2c7044.  call temp:= `getValue`(v3) @signature `Lkotlin/text/RegexOption;.getValue:()I` @kind virtual;
  #L2c704a.  v3:= temp;
  #L2c704c.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L2c7052.  v3:= temp;
  #L2c7054.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L2c705a.  v2:= temp @kind object;
  #L2c705c.  v3:= "compile(pattern, ensureUnicodeCase(option.value))" @kind object;
  #L2c7060.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c7066.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L2c706c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.util.regex.Pattern` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c7080.  v0:= "nativePattern" @kind object;
  #L2c7084.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c708a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c7090.  v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` := v2 @kind object;
  #L2c7094.  return @kind void;
}
procedure `java.util.regex.Pattern` `access$getNativePattern$p`(`kotlin.text.Regex` v0 @kind object) @signature `Lkotlin/text/Regex;.access$getNativePattern$p:(Lkotlin/text/Regex;)Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c6d3c.  v0:= v0.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6d40.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `find$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2c6e74.  v3:= v3 ^& 2;
  #L2c6e78.  if v3 == 0 then goto L2c6e7e;
  #L2c6e7c.  v2:= 0I;
  #L2c6e7e.  call temp:= `find`(v0, v1, v2) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @kind virtual;
  #L2c6e84.  v0:= temp @kind object;
  #L2c6e86.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.findAll$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2c6d6c.  v3:= v3 ^& 2;
  #L2c6d70.  if v3 == 0 then goto L2c6d76;
  #L2c6d74.  v2:= 0I;
  #L2c6d76.  call temp:= `findAll`(v0, v1, v2) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L2c6d7c.  v0:= temp @kind object;
  #L2c6d7e.  return v0 @kind object;
}
procedure `java.util.List` `split$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.split$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2c6be0.  v3:= v3 ^& 2;
  #L2c6be4.  if v3 == 0 then goto L2c6bea;
  #L2c6be8.  v2:= 0I;
  #L2c6bea.  call temp:= `split`(v0, v1, v2) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @kind virtual;
  #L2c6bf0.  v0:= temp @kind object;
  #L2c6bf2.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.splitToSequence$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2c6e18.  v3:= v3 ^& 2;
  #L2c6e1c.  if v3 == 0 then goto L2c6e22;
  #L2c6e20.  v2:= 0I;
  #L2c6e22.  call temp:= `splitToSequence`(v0, v1, v2) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L2c6e28.  v0:= temp @kind object;
  #L2c6e2a.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c69fc.  v0:= new `kotlin.text.Regex$Serialized`;
  #L2c6a00.  v1:= v3.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6a04.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L2c6a0a.  v1:= temp @kind object;
  #L2c6a0c.  v2:= "nativePattern.pattern()" @kind object;
  #L2c6a10.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6a16.  v2:= v3.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6a1a.  call temp:= `flags`(v2) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L2c6a20.  v2:= temp;
  #L2c6a22.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/Regex$Serialized;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2c6a28.  return v0 @kind object;
}
procedure `boolean` `containsMatchIn`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.containsMatchIn:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c6948.  v0:= "input" @kind object;
  #L2c694c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6952.  v0:= v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6956.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c695c.  v2:= temp @kind object;
  #L2c695e.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L2c6964.  v2:= temp;
  #L2c6966.  return v2;
}
procedure `kotlin.text.MatchResult` `find`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6e98.  v0:= "input" @kind object;
  #L2c6e9c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6ea2.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6ea6.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6eac.  v0:= temp @kind object;
  #L2c6eae.  v1:= "nativePattern.matcher(input)" @kind object;
  #L2c6eb2.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6eb8.  call temp:= `access$findNext`(v0, v4, v3) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L2c6ebe.  v3:= temp @kind object;
  #L2c6ec0.  return v3 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll`(`kotlin.text.Regex` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c6d90.  v0:= "input" @kind object;
  #L2c6d94.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6d9a.  if v5 < 0 then goto L2c6dc2;
  #L2c6d9e.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c6da4.  v0:= temp;
  #L2c6da6.  if v5 > v0 then goto L2c6dc2;
  #L2c6daa.  v0:= new `kotlin.text.Regex$findAll$1`;
  #L2c6dae.  call `<init>`(v0, v3, v4, v5) @signature `Lkotlin/text/Regex$findAll$1;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;I)V` @kind direct;
  #L2c6db4.  v4:= `@@kotlin.text.Regex$findAll$2.INSTANCE` @type ^`kotlin.text.Regex$findAll$2` @kind object;
  #L2c6db8.  call temp:= `generateSequence`(v0, v4) @signature `Lkotlin/sequences/SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L2c6dbe.  v4:= temp @kind object;
  #L2c6dc0.  return v4 @kind object;
  #L2c6dc2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2c6dc6.  v1:= new `java.lang.StringBuilder`;
  #L2c6dca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c6dd0.  v2:= "Start index out of bounds: " @kind object;
  #L2c6dd4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6dda.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6de0.  v5:= ", input length: " @kind object;
  #L2c6de4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6dea.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c6df0.  v4:= temp;
  #L2c6df2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6df8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6dfe.  v4:= temp @kind object;
  #L2c6e00.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c6e06.  throw v0;
}
procedure `java.util.Set` `getOptions`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.getOptions:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c6cd8.  v0:= v3.`kotlin.text.Regex._options` @type ^`java.util.Set` @kind object;
  #L2c6cdc.  if v0 != 0 then goto L2c6d28;
  #L2c6ce0.  v0:= v3.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6ce4.  call temp:= `flags`(v0) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L2c6cea.  v0:= temp;
  #L2c6cec.  v1:= constclass @type ^`kotlin.text.RegexOption` @kind object;
  #L2c6cf0.  call temp:= `allOf`(v1) @signature `Ljava/util/EnumSet;.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L2c6cf6.  v1:= temp @kind object;
  #L2c6cf8.  v2:= "" @kind object;
  #L2c6cfc.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6d02.  v2:= new `kotlin.text.Regex$special$$inlined$fromInt$1`;
  #L2c6d06.  call `<init>`(v2, v0) @signature `Lkotlin/text/Regex$special$$inlined$fromInt$1;.<init>:(I)V` @kind direct;
  #L2c6d0c.  call temp:= `retainAll`(v1, v2) @signature `Lkotlin/collections/CollectionsKt;.retainAll:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z` @kind static;
  #L2c6d12.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L2c6d18.  v0:= temp @kind object;
  #L2c6d1a.  v1:= "unmodifiableSet(EnumSet.â€¦mask == it.value }\n    })" @kind object;
  #L2c6d1e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6d24.  v3.`kotlin.text.Regex._options` @type ^`java.util.Set` := v0 @kind object;
  #L2c6d28.  return v0 @kind object;
}
procedure `java.lang.String` `getPattern`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6a3c.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6a40.  call temp:= `pattern`(v0) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L2c6a46.  v0:= temp @kind object;
  #L2c6a48.  v1:= "nativePattern.pattern()" @kind object;
  #L2c6a4c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6a52.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchAt:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6ed4.  v0:= "input" @kind object;
  #L2c6ed8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6ede.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6ee2.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6ee8.  v0:= temp @kind object;
  #L2c6eea.  v1:= 0I;
  #L2c6eec.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6ef2.  v0:= temp @kind object;
  #L2c6ef4.  v1:= 1I;
  #L2c6ef6.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6efc.  v0:= temp @kind object;
  #L2c6efe.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c6f04.  v1:= temp;
  #L2c6f06.  call temp:= `region`(v0, v4, v1) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6f0c.  v4:= temp @kind object;
  #L2c6f0e.  call temp:= `lookingAt`(v4) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L2c6f14.  v0:= temp;
  #L2c6f16.  if v0 == 0 then goto L2c6f30;
  #L2c6f1a.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L2c6f1e.  v1:= "this" @kind object;
  #L2c6f22.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6f28.  call `<init>`(v0, v4, v3) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L2c6f2e.  goto L2c6f32;
  #L2c6f30.  v0:= 0I;
  #L2c6f32.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchEntire`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/Regex;.matchEntire:(Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6f44.  v0:= "input" @kind object;
  #L2c6f48.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6f4e.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6f52.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6f58.  v0:= temp @kind object;
  #L2c6f5a.  v1:= "nativePattern.matcher(input)" @kind object;
  #L2c6f5e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6f64.  call temp:= `access$matchEntire`(v0, v3) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L2c6f6a.  v3:= temp @kind object;
  #L2c6f6c.  return v3 @kind object;
}
procedure `boolean` `matches`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c6978.  v0:= "input" @kind object;
  #L2c697c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6982.  v0:= v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6986.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c698c.  v2:= temp @kind object;
  #L2c698e.  call temp:= `matches`(v2) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2c6994.  v2:= temp;
  #L2c6996.  return v2;
}
procedure `boolean` `matchesAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchesAt:(Ljava/lang/CharSequence;I)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c69a8.  v0:= "input" @kind object;
  #L2c69ac.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c69b2.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c69b6.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c69bc.  v0:= temp @kind object;
  #L2c69be.  v1:= 0I;
  #L2c69c0.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c69c6.  v0:= temp @kind object;
  #L2c69c8.  v1:= 1I;
  #L2c69ca.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c69d0.  v0:= temp @kind object;
  #L2c69d2.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c69d8.  v3:= temp;
  #L2c69da.  call temp:= `region`(v0, v4, v3) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c69e0.  v3:= temp @kind object;
  #L2c69e2.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L2c69e8.  v3:= temp;
  #L2c69ea.  return v3;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c6a64.  v0:= "input" @kind object;
  #L2c6a68.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6a6e.  v0:= "replacement" @kind object;
  #L2c6a72.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6a78.  v0:= v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6a7c.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6a82.  v2:= temp @kind object;
  #L2c6a84.  call temp:= `replaceAll`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2c6a8a.  v2:= temp @kind object;
  #L2c6a8c.  v3:= "nativePattern.matcher(inâ€¦).replaceAll(replacement)" @kind object;
  #L2c6a90.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6a96.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v5 @kind this, `java.lang.CharSequence` v6 @kind object, `kotlin.jvm.functions.Function1` v7 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c6aa8.  v0:= "input" @kind object;
  #L2c6aac.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6ab2.  v0:= "transform" @kind object;
  #L2c6ab6.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6abc.  v0:= 0I;
  #L2c6abe.  v1:= 2I;
  #L2c6ac0.  v2:= 0I;
  #L2c6ac2.  call temp:= `find$default`(v5, v6, v0, v1, v2) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @kind static;
  #L2c6ac8.  v1:= temp @kind object;
  #L2c6aca.  if v1 != 0 then goto L2c6ad8;
  #L2c6ace.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6ad4.  v6:= temp @kind object;
  #L2c6ad6.  return v6 @kind object;
  #L2c6ad8.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c6ade.  v2:= temp;
  #L2c6ae0.  v3:= new `java.lang.StringBuilder`;
  #L2c6ae4.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c6aea.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L2c6af0.  v4:= temp @kind object;
  #L2c6af2.  call temp:= `getStart`(v4) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L2c6af8.  v4:= temp @kind object;
  #L2c6afa.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c6b00.  v4:= temp;
  #L2c6b02.  call temp:= `append`(v3, v6, v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6b08.  call temp:= `invoke`(v7, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c6b0e.  v0:= temp @kind object;
  #L2c6b10.  v0:= (`java.lang.CharSequence`) v0 @kind object;
  #L2c6b14.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6b1a.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L2c6b20.  v0:= temp @kind object;
  #L2c6b22.  call temp:= `getEndInclusive`(v0) @signature `Lkotlin/ranges/IntRange;.getEndInclusive:()Ljava/lang/Integer;` @kind virtual;
  #L2c6b28.  v0:= temp @kind object;
  #L2c6b2a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c6b30.  v0:= temp;
  #L2c6b32.  v0:= v0 + 1;
  #L2c6b36.  call temp:= `next`(v1) @signature `Lkotlin/text/MatchResult;.next:()Lkotlin/text/MatchResult;` @kind interface;
  #L2c6b3c.  v1:= temp @kind object;
  #L2c6b3e.  if v0 >= v2 then goto L2c6b46;
  #L2c6b42.  if v1 != 0 then goto L2c6aea;
  #L2c6b46.  if v0 >= v2 then goto L2c6b50;
  #L2c6b4a.  call temp:= `append`(v3, v6, v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6b50.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6b56.  v6:= temp @kind object;
  #L2c6b58.  v7:= "sb.toString()" @kind object;
  #L2c6b5c.  call `checkNotNullExpressionValue`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6b62.  return v6 @kind object;
}
procedure `java.lang.String` `replaceFirst`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replaceFirst:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c6b74.  v0:= "input" @kind object;
  #L2c6b78.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6b7e.  v0:= "replacement" @kind object;
  #L2c6b82.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6b88.  v0:= v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6b8c.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6b92.  v2:= temp @kind object;
  #L2c6b94.  call temp:= `replaceFirst`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2c6b9a.  v2:= temp @kind object;
  #L2c6b9c.  v3:= "nativePattern.matcher(inâ€¦replaceFirst(replacement)" @kind object;
  #L2c6ba0.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6ba6.  return v2 @kind object;
}
procedure `java.util.List` `split`(`kotlin.text.Regex` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `int` v6 ) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6c04.  v0:= "input" @kind object;
  #L2c6c08.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6c0e.  call `requireNonNegativeLimit`(v6) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L2c6c14.  v0:= v4.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6c18.  call temp:= `matcher`(v0, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c6c1e.  v0:= temp @kind object;
  #L2c6c20.  v1:= 1I;
  #L2c6c22.  if v6 == v1 then goto L2c6cb4;
  #L2c6c26.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L2c6c2c.  v2:= temp;
  #L2c6c2e.  if v2 != 0 then goto L2c6c34;
  #L2c6c32.  goto L2c6cb4;
  #L2c6c34.  v2:= new `java.util.ArrayList`;
  #L2c6c38.  v3:= 10I;
  #L2c6c3c.  if v6 <= 0 then goto L2c6c48;
  #L2c6c40.  call temp:= `coerceAtMost`(v6, v3) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L2c6c46.  v3:= temp;
  #L2c6c48.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2c6c4e.  v3:= 0I;
  #L2c6c50.  v6:= v6 - v1 @kind int;
  #L2c6c52.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L2c6c58.  v1:= temp;
  #L2c6c5a.  call temp:= `subSequence`(v5, v3, v1) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L2c6c60.  v1:= temp @kind object;
  #L2c6c62.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6c68.  v1:= temp @kind object;
  #L2c6c6a.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c6c70.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L2c6c76.  v3:= temp;
  #L2c6c78.  if v6 < 0 then goto L2c6c88;
  #L2c6c7c.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2c6c82.  v1:= temp;
  #L2c6c84.  if v1 == v6 then goto L2c6c94;
  #L2c6c88.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L2c6c8e.  v1:= temp;
  #L2c6c90.  if v1 != 0 then goto L2c6c52;
  #L2c6c94.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c6c9a.  v6:= temp;
  #L2c6c9c.  call temp:= `subSequence`(v5, v3, v6) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L2c6ca2.  v5:= temp @kind object;
  #L2c6ca4.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6caa.  v5:= temp @kind object;
  #L2c6cac.  call temp:= `add`(v2, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c6cb2.  return v2 @kind object;
  #L2c6cb4.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6cba.  v5:= temp @kind object;
  #L2c6cbc.  call temp:= `listOf`(v5) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2c6cc2.  v5:= temp @kind object;
  #L2c6cc4.  return v5 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c6e3c.  v0:= "input" @kind object;
  #L2c6e40.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6e46.  call `requireNonNegativeLimit`(v4) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L2c6e4c.  v0:= new `kotlin.text.Regex$splitToSequence$1`;
  #L2c6e50.  v1:= 0I;
  #L2c6e52.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lkotlin/text/Regex$splitToSequence$1;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c6e58.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L2c6e5e.  v3:= temp @kind object;
  #L2c6e60.  return v3 @kind object;
}
procedure `java.util.regex.Pattern` `toPattern`(`kotlin.text.Regex` v1 @kind this) @signature `Lkotlin/text/Regex;.toPattern:()Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c6d54.  v0:= v1.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6d58.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c6bb8.  v0:= v2.`kotlin.text.Regex.nativePattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2c6bbc.  call temp:= `toString`(v0) @signature `Ljava/util/regex/Pattern;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6bc2.  v0:= temp @kind object;
  #L2c6bc4.  v1:= "nativePattern.toString()" @kind object;
  #L2c6bc8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c6bce.  return v0 @kind object;
}
