record `kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `char`[] `kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$delimiters` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$ignoreCase` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1` v0 @kind this, `char`[] v1 @kind object, `boolean` v2 ) @signature `Lkotlin/text/StringsKt__StringsKt$rangesDelimitedBy$1;.<init>:([CZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c74a8.  v0.`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$delimiters` @type ^`char`[] := v1 @kind object;
  #L2c74ac.  v0.`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$ignoreCase` @type ^`boolean` := v2 @kind boolean;
  #L2c74b0.  v1:= 2I;
  #L2c74b2.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2c74b8.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$rangesDelimitedBy$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c742c.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L2c7430.  v2:= (`java.lang.Number`) v2 @kind object;
  #L2c7434.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2c743a.  v2:= temp;
  #L2c743c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/text/StringsKt__StringsKt$rangesDelimitedBy$1;.invoke:(Ljava/lang/CharSequence;I)Lkotlin/Pair;` @kind virtual;
  #L2c7442.  v1:= temp @kind object;
  #L2c7444.  return v1 @kind object;
}
procedure `kotlin.Pair` `invoke`(`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/StringsKt__StringsKt$rangesDelimitedBy$1;.invoke:(Ljava/lang/CharSequence;I)Lkotlin/Pair;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c7458.  v0:= "$this$$receiver" @kind object;
  #L2c745c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c7462.  v0:= v2.`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$delimiters` @type ^`char`[] @kind object;
  #L2c7466.  v1:= v2.`kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1.$ignoreCase` @type ^`boolean` @kind boolean;
  #L2c746a.  call temp:= `indexOfAny`(v3, v0, v4, v1) @signature `Lkotlin/text/StringsKt__StringsKt;.indexOfAny:(Ljava/lang/CharSequence;[CIZ)I` @kind static;
  #L2c7470.  v3:= temp;
  #L2c7472.  if v3 >= 0 then goto L2c747a;
  #L2c7476.  v3:= 0I;
  #L2c7478.  goto L2c7494;
  #L2c747a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c7480.  v3:= temp @kind object;
  #L2c7482.  v4:= 1I;
  #L2c7484.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c748a.  v4:= temp @kind object;
  #L2c748c.  call temp:= `to`(v3, v4) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2c7492.  v3:= temp @kind object;
  #L2c7494.  return v3 @kind object;
}
