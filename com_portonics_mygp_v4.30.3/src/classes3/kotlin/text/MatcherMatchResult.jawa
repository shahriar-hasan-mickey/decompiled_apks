record `kotlin.text.MatcherMatchResult` @kind class @AccessFlag FINAL extends `kotlin.text.MatchResult` @kind interface {
  `java.util.List` `kotlin.text.MatcherMatchResult.groupValues_` @AccessFlag PRIVATE;
  `kotlin.text.MatchGroupCollection` `kotlin.text.MatcherMatchResult.groups` @AccessFlag PRIVATE_FINAL;
  `java.lang.CharSequence` `kotlin.text.MatcherMatchResult.input` @AccessFlag PRIVATE_FINAL;
  `java.util.regex.Matcher` `kotlin.text.MatcherMatchResult.matcher` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.text.MatcherMatchResult` v1 @kind this, `java.util.regex.Matcher` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c5f30.  v0:= "matcher" @kind object;
  #L2c5f34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c5f3a.  v0:= "input" @kind object;
  #L2c5f3e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c5f44.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c5f4a.  v1.`kotlin.text.MatcherMatchResult.matcher` @type ^`java.util.regex.Matcher` := v2 @kind object;
  #L2c5f4e.  v1.`kotlin.text.MatcherMatchResult.input` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L2c5f52.  v2:= new `kotlin.text.MatcherMatchResult$groups$1`;
  #L2c5f56.  call `<init>`(v2, v1) @signature `Lkotlin/text/MatcherMatchResult$groups$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L2c5f5c.  v1.`kotlin.text.MatcherMatchResult.groups` @type ^`kotlin.text.MatchGroupCollection` := v2 @kind object;
  #L2c5f60.  return @kind void;
}
procedure `java.util.regex.MatchResult` `access$getMatchResult`(`kotlin.text.MatcherMatchResult` v0 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.access$getMatchResult:(Lkotlin/text/MatcherMatchResult;)Ljava/util/regex/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c5e14.  call temp:= `getMatchResult`(v0) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5e1a.  v0:= temp @kind object;
  #L2c5e1c.  return v0 @kind object;
}
procedure `java.util.regex.MatchResult` `getMatchResult`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2c5e30.  v0:= v1.`kotlin.text.MatcherMatchResult.matcher` @type ^`java.util.regex.Matcher` @kind object;
  #L2c5e34.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult$Destructured` `getDestructured`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getDestructured:()Lkotlin/text/MatchResult$Destructured;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5f14.  call temp:= `getDestructured`(v1) @signature `Lkotlin/text/MatchResult$DefaultImpls;.getDestructured:(Lkotlin/text/MatchResult;)Lkotlin/text/MatchResult$Destructured;` @kind static;
  #L2c5f1a.  v0:= temp @kind object;
  #L2c5f1c.  return v0 @kind object;
}
procedure `java.util.List` `getGroupValues`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroupValues:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5de0.  v0:= v1.`kotlin.text.MatcherMatchResult.groupValues_` @type ^`java.util.List` @kind object;
  #L2c5de4.  if v0 != 0 then goto L2c5df6;
  #L2c5de8.  v0:= new `kotlin.text.MatcherMatchResult$groupValues$1`;
  #L2c5dec.  call `<init>`(v0, v1) @signature `Lkotlin/text/MatcherMatchResult$groupValues$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L2c5df2.  v1.`kotlin.text.MatcherMatchResult.groupValues_` @type ^`java.util.List` := v0 @kind object;
  #L2c5df6.  v0:= v1.`kotlin.text.MatcherMatchResult.groupValues_` @type ^`java.util.List` @kind object;
  #L2c5dfa.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L2c5e00.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroupCollection` `getGroups`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroups:()Lkotlin/text/MatchGroupCollection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5e6c.  v0:= v1.`kotlin.text.MatcherMatchResult.groups` @type ^`kotlin.text.MatchGroupCollection` @kind object;
  #L2c5e70.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `getRange`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5e48.  call temp:= `getMatchResult`(v1) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5e4e.  v0:= temp @kind object;
  #L2c5e50.  call temp:= `access$range`(v0) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L2c5e56.  v0:= temp @kind object;
  #L2c5e58.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`kotlin.text.MatcherMatchResult` v2 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c5db4.  call temp:= `getMatchResult`(v2) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5dba.  v0:= temp @kind object;
  #L2c5dbc.  call temp:= `group`(v0) @signature `Ljava/util/regex/MatchResult;.group:()Ljava/lang/String;` @kind interface;
  #L2c5dc2.  v0:= temp @kind object;
  #L2c5dc4.  v1:= "matchResult.group()" @kind object;
  #L2c5dc8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c5dce.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `next`(`kotlin.text.MatcherMatchResult` v3 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.next:()Lkotlin/text/MatchResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c5e84.  call temp:= `getMatchResult`(v3) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5e8a.  v0:= temp @kind object;
  #L2c5e8c.  call temp:= `end`(v0) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L2c5e92.  v0:= temp;
  #L2c5e94.  call temp:= `getMatchResult`(v3) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5e9a.  v1:= temp @kind object;
  #L2c5e9c.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L2c5ea2.  v1:= temp;
  #L2c5ea4.  call temp:= `getMatchResult`(v3) @signature `Lkotlin/text/MatcherMatchResult;.getMatchResult:()Ljava/util/regex/MatchResult;` @kind direct;
  #L2c5eaa.  v2:= temp @kind object;
  #L2c5eac.  call temp:= `start`(v2) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L2c5eb2.  v2:= temp;
  #L2c5eb4.  if v1 != v2 then goto L2c5ebc;
  #L2c5eb8.  v1:= 1I;
  #L2c5eba.  goto L2c5ebe;
  #L2c5ebc.  v1:= 0I;
  #L2c5ebe.  v0:= v0 + v1 @kind int;
  #L2c5ec0.  v1:= v3.`kotlin.text.MatcherMatchResult.input` @type ^`java.lang.CharSequence` @kind object;
  #L2c5ec4.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2c5eca.  v1:= temp;
  #L2c5ecc.  if v0 > v1 then goto L2c5f00;
  #L2c5ed0.  v1:= v3.`kotlin.text.MatcherMatchResult.matcher` @type ^`java.util.regex.Matcher` @kind object;
  #L2c5ed4.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Matcher;.pattern:()Ljava/util/regex/Pattern;` @kind virtual;
  #L2c5eda.  v1:= temp @kind object;
  #L2c5edc.  v2:= v3.`kotlin.text.MatcherMatchResult.input` @type ^`java.lang.CharSequence` @kind object;
  #L2c5ee0.  call temp:= `matcher`(v1, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2c5ee6.  v1:= temp @kind object;
  #L2c5ee8.  v2:= "matcher.pattern().matcher(input)" @kind object;
  #L2c5eec.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c5ef2.  v2:= v3.`kotlin.text.MatcherMatchResult.input` @type ^`java.lang.CharSequence` @kind object;
  #L2c5ef6.  call temp:= `access$findNext`(v1, v0, v2) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L2c5efc.  v0:= temp @kind object;
  #L2c5efe.  goto L2c5f02;
  #L2c5f00.  v0:= 0I;
  #L2c5f02.  return v0 @kind object;
}
