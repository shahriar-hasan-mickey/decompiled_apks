record `kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.lang.CharSequence` `kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1.$this_asIterable$inlined` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/StringsKt___StringsKt$asIterable$$inlined$Iterable$1;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c7670.  v0.`kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1.$this_asIterable$inlined` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L2c7674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c767a.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1` v1 @kind this) @signature `Lkotlin/text/StringsKt___StringsKt$asIterable$$inlined$Iterable$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c7650.  v0:= v1.`kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1.$this_asIterable$inlined` @type ^`java.lang.CharSequence` @kind object;
  #L2c7654.  call temp:= `iterator`(v0) @signature `Lkotlin/text/StringsKt__StringsKt;.iterator:(Ljava/lang/CharSequence;)Lkotlin/collections/CharIterator;` @kind static;
  #L2c765a.  v0:= temp @kind object;
  #L2c765c.  return v0 @kind object;
}
