record `kotlin.text.MatchGroup` @kind class @AccessFlag PUBLIC_FINAL {
  `kotlin.ranges.IntRange` `kotlin.text.MatchGroup.range` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.text.MatchGroup.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.text.MatchGroup` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.ranges.IntRange` v3 @kind object) @signature `Lkotlin/text/MatchGroup;.<init>:(Ljava/lang/String;Lkotlin/ranges/IntRange;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c57a4.  v0:= "value" @kind object;
  #L2c57a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c57ae.  v0:= "range" @kind object;
  #L2c57b2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c57b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c57be.  v1.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` := v2 @kind object;
  #L2c57c2.  v1.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` := v3 @kind object;
  #L2c57c6.  return @kind void;
}
procedure `kotlin.text.MatchGroup` `copy$default`(`kotlin.text.MatchGroup` v0 @kind object, `java.lang.String` v1 @kind object, `kotlin.ranges.IntRange` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/MatchGroup;.copy$default:(Lkotlin/text/MatchGroup;Ljava/lang/String;Lkotlin/ranges/IntRange;ILjava/lang/Object;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2c5740.  v4:= v3 ^& 1;
  #L2c5744.  if v4 == 0 then goto L2c574c;
  #L2c5748.  v1:= v0.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c574c.  v3:= v3 ^& 2;
  #L2c5750.  if v3 == 0 then goto L2c5758;
  #L2c5754.  v2:= v0.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c5758.  call temp:= `copy`(v0, v1, v2) @signature `Lkotlin/text/MatchGroup;.copy:(Ljava/lang/String;Lkotlin/ranges/IntRange;)Lkotlin/text/MatchGroup;` @kind virtual;
  #L2c575e.  v0:= temp @kind object;
  #L2c5760.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c5688.  v0:= v1.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c568c.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `component2`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.component2:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c5710.  v0:= v1.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c5714.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroup` `copy`(`kotlin.text.MatchGroup` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.ranges.IntRange` v3 @kind object) @signature `Lkotlin/text/MatchGroup;.copy:(Ljava/lang/String;Lkotlin/ranges/IntRange;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c5774.  v0:= "value" @kind object;
  #L2c5778.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c577e.  v0:= "range" @kind object;
  #L2c5782.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c5788.  v0:= new `kotlin.text.MatchGroup`;
  #L2c578c.  call `<init>`(v0, v2, v3) @signature `Lkotlin/text/MatchGroup;.<init>:(Ljava/lang/String;Lkotlin/ranges/IntRange;)V` @kind direct;
  #L2c5792.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.text.MatchGroup` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/text/MatchGroup;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c5600.  v0:= 1I;
  #L2c5602.  if v4 != v5 then goto L2c5608;
  #L2c5606.  return v0;
  #L2c5608.  v1:= instanceof @variable v5 @type ^`kotlin.text.MatchGroup` @kind boolean;
  #L2c560c.  v2:= 0I;
  #L2c560e.  if v1 != 0 then goto L2c5614;
  #L2c5612.  return v2;
  #L2c5614.  v5:= (`kotlin.text.MatchGroup`) v5 @kind object;
  #L2c5618.  v1:= v4.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c561c.  v3:= v5.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c5620.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2c5626.  v1:= temp;
  #L2c5628.  if v1 != 0 then goto L2c562e;
  #L2c562c.  return v2;
  #L2c562e.  v1:= v4.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c5632.  v5:= v5.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c5636.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2c563c.  v5:= temp;
  #L2c563e.  if v5 != 0 then goto L2c5644;
  #L2c5642.  return v2;
  #L2c5644.  return v0;
}
procedure `kotlin.ranges.IntRange` `getRange`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c5728.  v0:= v1.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c572c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`kotlin.text.MatchGroup` v1 @kind this) @signature `Lkotlin/text/MatchGroup;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c56a0.  v0:= v1.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c56a4.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.text.MatchGroup` v2 @kind this) @signature `Lkotlin/text/MatchGroup;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c5658.  v0:= v2.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c565c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2c5662.  v0:= temp;
  #L2c5664.  v0:= v0 * 31;
  #L2c5668.  v1:= v2.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c566c.  call temp:= `hashCode`(v1) @signature `Lkotlin/ranges/IntRange;.hashCode:()I` @kind virtual;
  #L2c5672.  v1:= temp;
  #L2c5674.  v0:= v0 + v1 @kind int;
  #L2c5676.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.text.MatchGroup` v2 @kind this) @signature `Lkotlin/text/MatchGroup;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c56b8.  v0:= new `java.lang.StringBuilder`;
  #L2c56bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c56c2.  v1:= "MatchGroup(value=" @kind object;
  #L2c56c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c56cc.  v1:= v2.`kotlin.text.MatchGroup.value` @type ^`java.lang.String` @kind object;
  #L2c56d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c56d6.  v1:= ", range=" @kind object;
  #L2c56da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c56e0.  v1:= v2.`kotlin.text.MatchGroup.range` @type ^`kotlin.ranges.IntRange` @kind object;
  #L2c56e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c56ea.  v1:= 41I;
  #L2c56ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c56f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c56fa.  v0:= temp @kind object;
  #L2c56fc.  return v0 @kind object;
}
