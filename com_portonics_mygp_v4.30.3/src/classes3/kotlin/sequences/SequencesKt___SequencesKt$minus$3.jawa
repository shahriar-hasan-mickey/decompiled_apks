record `kotlin.sequences.SequencesKt___SequencesKt$minus$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `java.lang.Iterable` `kotlin.sequences.SequencesKt___SequencesKt$minus$3.$elements` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$3.$this_minus` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$minus$3` v0 @kind this, `java.lang.Iterable` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3;.<init>:(Ljava/lang/Iterable;Lkotlin/sequences/Sequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c23c8.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.$elements` @type ^`java.lang.Iterable` := v1 @kind object;
  #L2c23cc.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.$this_minus` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L2c23d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c23d6.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$minus$3` v3 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c2370.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.$elements` @type ^`java.lang.Iterable` @kind object;
  #L2c2374.  call temp:= `convertToSetForSetOperation`(v0) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Ljava/lang/Iterable;)Ljava/util/Collection;` @kind static;
  #L2c237a.  v0:= temp @kind object;
  #L2c237c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2c2382.  v1:= temp;
  #L2c2384.  if v1 == 0 then goto L2c2396;
  #L2c2388.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.$this_minus` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c238c.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c2392.  v0:= temp @kind object;
  #L2c2394.  return v0 @kind object;
  #L2c2396.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.$this_minus` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c239a.  v2:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1`;
  #L2c239e.  call `<init>`(v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3$iterator$1;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2c23a4.  call temp:= `filterNot`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L2c23aa.  v0:= temp @kind object;
  #L2c23ac.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c23b2.  v0:= temp @kind object;
  #L2c23b4.  return v0 @kind object;
}
