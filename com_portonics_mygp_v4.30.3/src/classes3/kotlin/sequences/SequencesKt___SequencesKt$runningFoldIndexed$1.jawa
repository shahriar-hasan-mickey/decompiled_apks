record `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$operation` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$this_runningFoldIndexed` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.I$0` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$1` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$2` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c2908.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial` @type ^`java.lang.Object` := v1 @kind object;
  #L2c290c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$this_runningFoldIndexed` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L2c2910.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L2c2914.  v1:= 2I;
  #L2c2916.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c291c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c28dc.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1`;
  #L2c28e0.  v1:= v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial` @type ^`java.lang.Object` @kind object;
  #L2c28e4.  v2:= v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$this_runningFoldIndexed` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c28e8.  v3:= v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2c28ec.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c28f2.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2c28f6.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c2774.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c2778.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2c277c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c2782.  v1:= temp @kind object;
  #L2c2784.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c2798.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2c279e.  v1:= temp @kind object;
  #L2c27a0.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1`) v1 @kind object;
  #L2c27a4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c27a8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c27ae.  v1:= temp @kind object;
  #L2c27b0.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2c27c4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c27ca.  v0:= temp @kind object;
  #L2c27cc.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label` @type ^`int`;
  #L2c27d0.  v2:= 2I;
  #L2c27d2.  v3:= 1I;
  #L2c27d4.  if v1 == 0 then goto L2c2824;
  #L2c27d8.  if v1 == v3 then goto L2c2814;
  #L2c27dc.  if v1 != v2 then goto L2c2804;
  #L2c27e0.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.I$0` @type ^`int`;
  #L2c27e4.  v3:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$2` @type ^`java.lang.Object` @kind object;
  #L2c27e8.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L2c27ec.  v4:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2c27f0.  v5:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c27f4.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L2c27f8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c27fe.  v10:= v1;
  #L2c2800.  v1:= v4 @kind object;
  #L2c2802.  goto L2c2866;
  #L2c2804.  v10:= new `java.lang.IllegalStateException`;
  #L2c2808.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c280c.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2812.  throw v10;
  #L2c2814.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c2818.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c281c.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c2822.  goto L2c284e;
  #L2c2824.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c282a.  v10:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c282e.  v1:= v10 @kind object;
  #L2c2830.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c2834.  v10:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial` @type ^`java.lang.Object` @kind object;
  #L2c2838.  v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` := v1 @kind object;
  #L2c283c.  v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label` @type ^`int` := v3;
  #L2c2840.  call temp:= `yield`(v1, v10, v9) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c2846.  v10:= temp @kind object;
  #L2c2848.  if v10 != v0 then goto L2c284e;
  #L2c284c.  return v0 @kind object;
  #L2c284e.  v10:= 0I;
  #L2c2850.  v3:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$initial` @type ^`java.lang.Object` @kind object;
  #L2c2854.  v4:= v9.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$this_runningFoldIndexed` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2858.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c285e.  v4:= temp @kind object;
  #L2c2860.  v5:= v1 @kind object;
  #L2c2862.  v1:= v3 @kind object;
  #L2c2864.  v3:= v4 @kind object;
  #L2c2866.  v4:= v9 @kind object;
  #L2c2868.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c286e.  v6:= temp;
  #L2c2870.  if v6 == 0 then goto L2c28c6;
  #L2c2874.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c287a.  v6:= temp @kind object;
  #L2c287c.  v7:= v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2c2880.  v8:= v10 + 1;
  #L2c2884.  if v10 >= 0 then goto L2c288e;
  #L2c2888.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L2c288e.  call temp:= `boxInt`(v10) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L2c2894.  v10:= temp @kind object;
  #L2c2896.  call temp:= `invoke`(v7, v10, v1, v6) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c289c.  v10:= temp @kind object;
  #L2c289e.  v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2c28a2.  v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$1` @type ^`java.lang.Object` := v10 @kind object;
  #L2c28a6.  v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.L$2` @type ^`java.lang.Object` := v3 @kind object;
  #L2c28aa.  v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.I$0` @type ^`int` := v8;
  #L2c28ae.  v4.`kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1.label` @type ^`int` := v2;
  #L2c28b2.  call temp:= `yield`(v5, v10, v4) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c28b8.  v1:= temp @kind object;
  #L2c28ba.  if v1 != v0 then goto L2c28c0;
  #L2c28be.  return v0 @kind object;
  #L2c28c0.  v1:= v10 @kind object;
  #L2c28c2.  v10:= v8;
  #L2c28c4.  goto L2c2868;
  #L2c28c6.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c28ca.  return v10 @kind object;
}
