record `kotlin.sequences.SequencesKt___SequencesKt$minus$4` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$4.$elements` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$4.$this_minus` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$minus$4` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$4;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c24a4.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$4.$elements` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L2c24a8.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$4.$this_minus` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L2c24ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c24b2.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$minus$4` v3 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$4;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c244c.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$4.$elements` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2450.  call temp:= `convertToSetForSetOperation`(v0) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:(Lkotlin/sequences/Sequence;)Ljava/util/Collection;` @kind static;
  #L2c2456.  v0:= temp @kind object;
  #L2c2458.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L2c245e.  v1:= temp;
  #L2c2460.  if v1 == 0 then goto L2c2472;
  #L2c2464.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$4.$this_minus` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2468.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c246e.  v0:= temp @kind object;
  #L2c2470.  return v0 @kind object;
  #L2c2472.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$4.$this_minus` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2476.  v2:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1`;
  #L2c247a.  call `<init>`(v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$4$iterator$1;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2c2480.  call temp:= `filterNot`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L2c2486.  v0:= temp @kind object;
  #L2c2488.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c248e.  v0:= temp @kind object;
  #L2c2490.  return v0 @kind object;
}
