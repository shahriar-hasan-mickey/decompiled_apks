record `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$defaultValue` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$this_ifEmpty` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c19b4.  v0.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$this_ifEmpty` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L2c19b8.  v0.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$defaultValue` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L2c19bc.  v1:= 2I;
  #L2c19be.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c19c4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c198c.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1`;
  #L2c1990.  v1:= v3.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$this_ifEmpty` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c1994.  v2:= v3.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$defaultValue` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L2c1998.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c199e.  v0.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2c19a2.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c1894.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c1898.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2c189c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c18a2.  v1:= temp @kind object;
  #L2c18a4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c18b8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2c18be.  v1:= temp @kind object;
  #L2c18c0.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1`) v1 @kind object;
  #L2c18c4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c18c8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c18ce.  v1:= temp @kind object;
  #L2c18d0.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c18e4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c18ea.  v0:= temp @kind object;
  #L2c18ec.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.label` @type ^`int`;
  #L2c18f0.  v2:= 2I;
  #L2c18f2.  v3:= 1I;
  #L2c18f4.  if v1 == 0 then goto L2c191a;
  #L2c18f8.  if v1 == v3 then goto L2c1912;
  #L2c18fc.  if v1 != v2 then goto L2c1902;
  #L2c1900.  goto L2c1912;
  #L2c1902.  v6:= new `java.lang.IllegalStateException`;
  #L2c1906.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c190a.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c1910.  throw v6;
  #L2c1912.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c1918.  goto L2c1974;
  #L2c191a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c1920.  v6:= v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c1924.  v6:= (`kotlin.sequences.SequenceScope`) v6 @kind object;
  #L2c1928.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$this_ifEmpty` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c192c.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c1932.  v1:= temp @kind object;
  #L2c1934.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c193a.  v4:= temp;
  #L2c193c.  if v4 == 0 then goto L2c1952;
  #L2c1940.  v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.label` @type ^`int` := v3;
  #L2c1944.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c194a.  v6:= temp @kind object;
  #L2c194c.  if v6 != v0 then goto L2c1974;
  #L2c1950.  return v0 @kind object;
  #L2c1952.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.$defaultValue` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L2c1956.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2c195c.  v1:= temp @kind object;
  #L2c195e.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L2c1962.  v5.`kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1.label` @type ^`int` := v2;
  #L2c1966.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Lkotlin/sequences/Sequence;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c196c.  v6:= temp @kind object;
  #L2c196e.  if v6 != v0 then goto L2c1974;
  #L2c1972.  return v0 @kind object;
  #L2c1974.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c1978.  return v6 @kind object;
}
