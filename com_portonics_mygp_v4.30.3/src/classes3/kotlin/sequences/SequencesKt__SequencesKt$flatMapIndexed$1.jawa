record `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$iterator` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$source` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$transform` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.I$0` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$1` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c169c.  v0.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$source` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L2c16a0.  v0.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$transform` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L2c16a4.  v0.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$iterator` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L2c16a8.  v1:= 2I;
  #L2c16aa.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c16b0.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c1670.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1`;
  #L2c1674.  v1:= v4.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$source` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c1678.  v2:= v4.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2c167c.  v3:= v4.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$iterator` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2c1680.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c1686.  v0.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2c168a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c1540.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c1544.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2c1548.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c154e.  v1:= temp @kind object;
  #L2c1550.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c1564.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2c156a.  v1:= temp @kind object;
  #L2c156c.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1`) v1 @kind object;
  #L2c1570.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c1574.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c157a.  v1:= temp @kind object;
  #L2c157c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c1590.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c1596.  v0:= temp @kind object;
  #L2c1598.  v1:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.label` @type ^`int`;
  #L2c159c.  v2:= 1I;
  #L2c159e.  if v1 == 0 then goto L2c15d2;
  #L2c15a2.  if v1 != v2 then goto L2c15c2;
  #L2c15a6.  v1:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.I$0` @type ^`int`;
  #L2c15aa.  v3:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2c15ae.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L2c15b2.  v4:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c15b6.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L2c15ba.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c15c0.  goto L2c15f0;
  #L2c15c2.  v9:= new `java.lang.IllegalStateException`;
  #L2c15c6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c15ca.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c15d0.  throw v9;
  #L2c15d2.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c15d8.  v9:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c15dc.  v9:= (`kotlin.sequences.SequenceScope`) v9 @kind object;
  #L2c15e0.  v1:= 0I;
  #L2c15e2.  v3:= v8.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$source` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c15e6.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c15ec.  v3:= temp @kind object;
  #L2c15ee.  v4:= v9 @kind object;
  #L2c15f0.  v9:= v8 @kind object;
  #L2c15f2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c15f8.  v5:= temp;
  #L2c15fa.  if v5 == 0 then goto L2c165a;
  #L2c15fe.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c1604.  v5:= temp @kind object;
  #L2c1606.  v6:= v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$transform` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2c160a.  v7:= v1 + 1;
  #L2c160e.  if v1 >= 0 then goto L2c1618;
  #L2c1612.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L2c1618.  call temp:= `boxInt`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L2c161e.  v1:= temp @kind object;
  #L2c1620.  call temp:= `invoke`(v6, v1, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c1626.  v1:= temp @kind object;
  #L2c1628.  v5:= v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.$iterator` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2c162c.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c1632.  v1:= temp @kind object;
  #L2c1634.  v1:= (`java.util.Iterator`) v1 @kind object;
  #L2c1638.  v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2c163c.  v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.L$1` @type ^`java.lang.Object` := v3 @kind object;
  #L2c1640.  v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.I$0` @type ^`int` := v7;
  #L2c1644.  v9.`kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1.label` @type ^`int` := v2;
  #L2c1648.  call temp:= `yieldAll`(v4, v1, v9) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c164e.  v1:= temp @kind object;
  #L2c1650.  if v1 != v0 then goto L2c1656;
  #L2c1654.  return v0 @kind object;
  #L2c1656.  v1:= v7;
  #L2c1658.  goto L2c15f2;
  #L2c165a.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c165e.  return v9 @kind object;
}
