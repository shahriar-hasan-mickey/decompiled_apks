record `kotlin.sequences.USequencesKt___USequencesKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.sequences.USequencesKt___USequencesKt` v0 @kind this) @signature `Lkotlin/sequences/USequencesKt___USequencesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c3d5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c3d62.  return @kind void;
}
procedure `int` `sumOfUByte`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/USequencesKt___USequencesKt;.sumOfUByte:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2c3bf0.  v0:= "<this>" @kind object;
  #L2c3bf4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c3bfa.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c3c00.  v2:= temp @kind object;
  #L2c3c02.  v0:= 0I;
  #L2c3c04.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c3c0a.  v1:= temp;
  #L2c3c0c.  if v1 == 0 then goto L2c3c3c;
  #L2c3c10.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c3c16.  v1:= temp @kind object;
  #L2c3c18.  v1:= (`kotlin.UByte`) v1 @kind object;
  #L2c3c1c.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L2c3c22.  v1:= temp;
  #L2c3c24.  v1:= v1 ^& 255;
  #L2c3c28.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2c3c2e.  v1:= temp;
  #L2c3c30.  v0:= v0 + v1 @kind int;
  #L2c3c32.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2c3c38.  v0:= temp;
  #L2c3c3a.  goto L2c3c04;
  #L2c3c3c.  return v0;
}
procedure `int` `sumOfUInt`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/USequencesKt___USequencesKt;.sumOfUInt:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2c3c50.  v0:= "<this>" @kind object;
  #L2c3c54.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c3c5a.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c3c60.  v2:= temp @kind object;
  #L2c3c62.  v0:= 0I;
  #L2c3c64.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c3c6a.  v1:= temp;
  #L2c3c6c.  if v1 == 0 then goto L2c3c90;
  #L2c3c70.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c3c76.  v1:= temp @kind object;
  #L2c3c78.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L2c3c7c.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L2c3c82.  v1:= temp;
  #L2c3c84.  v0:= v0 + v1 @kind int;
  #L2c3c86.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2c3c8c.  v0:= temp;
  #L2c3c8e.  goto L2c3c64;
  #L2c3c90.  return v0;
}
procedure `long` `sumOfULong`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/USequencesKt___USequencesKt;.sumOfULong:(Lkotlin/sequences/Sequence;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c3d08.  v0:= "<this>" @kind object;
  #L2c3d0c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c3d12.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c3d18.  v4:= temp @kind object;
  #L2c3d1a.  v0:= 0L;
  #L2c3d1e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c3d24.  v2:= temp;
  #L2c3d26.  if v2 == 0 then goto L2c3d4a;
  #L2c3d2a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c3d30.  v2:= temp @kind object;
  #L2c3d32.  v2:= (`kotlin.ULong`) v2 @kind object;
  #L2c3d36.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L2c3d3c.  v2:= temp @kind wide;
  #L2c3d3e.  v0:= v0 + v2 @kind long;
  #L2c3d40.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2c3d46.  v0:= temp @kind wide;
  #L2c3d48.  goto L2c3d1e;
  #L2c3d4a.  return v0 @kind wide;
}
procedure `int` `sumOfUShort`(`kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/USequencesKt___USequencesKt;.sumOfUShort:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c3ca4.  v0:= "<this>" @kind object;
  #L2c3ca8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c3cae.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c3cb4.  v3:= temp @kind object;
  #L2c3cb6.  v0:= 0I;
  #L2c3cb8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c3cbe.  v1:= temp;
  #L2c3cc0.  if v1 == 0 then goto L2c3cf4;
  #L2c3cc4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c3cca.  v1:= temp @kind object;
  #L2c3ccc.  v1:= (`kotlin.UShort`) v1 @kind object;
  #L2c3cd0.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L2c3cd6.  v1:= temp;
  #L2c3cd8.  v2:= 65535I;
  #L2c3cde.  v1:= v1 ^& v2 @kind int;
  #L2c3ce0.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2c3ce6.  v1:= temp;
  #L2c3ce8.  v0:= v0 + v1 @kind int;
  #L2c3cea.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2c3cf0.  v0:= temp;
  #L2c3cf2.  goto L2c3cb8;
  #L2c3cf4.  return v0;
}
