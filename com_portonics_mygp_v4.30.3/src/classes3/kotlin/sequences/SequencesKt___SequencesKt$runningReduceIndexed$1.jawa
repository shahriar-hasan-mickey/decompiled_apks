record `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$operation` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$this_runningReduceIndexed` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.I$0` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$1` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$2` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.label` @AccessFlag ;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c2c68.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$this_runningReduceIndexed` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L2c2c6c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L2c2c70.  v1:= 2I;
  #L2c2c72.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c2c78.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2c2c40.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1`;
  #L2c2c44.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$this_runningReduceIndexed` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2c48.  v2:= v3.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2c2c4c.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2c2c52.  v0.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` := v4 @kind object;
  #L2c2c56.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c2abc.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L2c2ac0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L2c2ac4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c2aca.  v1:= temp @kind object;
  #L2c2acc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.invoke:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c2ae0.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L2c2ae6.  v1:= temp @kind object;
  #L2c2ae8.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1`) v1 @kind object;
  #L2c2aec.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c2af0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2c2af6.  v1:= temp @kind object;
  #L2c2af8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2c2b0c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2c2b12.  v0:= temp @kind object;
  #L2c2b14.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.label` @type ^`int`;
  #L2c2b18.  v2:= 2I;
  #L2c2b1a.  v3:= 1I;
  #L2c2b1c.  if v1 == 0 then goto L2c2b7c;
  #L2c2b20.  if v1 == v3 then goto L2c2b60;
  #L2c2b24.  if v1 != v2 then goto L2c2b50;
  #L2c2b28.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.I$0` @type ^`int`;
  #L2c2b2c.  v3:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$2` @type ^`java.lang.Object` @kind object;
  #L2c2b30.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2c2b34.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L2c2b38.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c2b3c.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L2c2b40.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c2b46.  v11:= v10 @kind object;
  #L2c2b48.  v9:= v3 @kind object;
  #L2c2b4a.  v3:= v1;
  #L2c2b4c.  v1:= v9 @kind object;
  #L2c2b4e.  goto L2c2bcc;
  #L2c2b50.  v11:= new `java.lang.IllegalStateException`;
  #L2c2b54.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L2c2b58.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2b5e.  throw v11;
  #L2c2b60.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$2` @type ^`java.lang.Object` @kind object;
  #L2c2b64.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$1` @type ^`java.lang.Object` @kind object;
  #L2c2b68.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L2c2b6c.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c2b70.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L2c2b74.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c2b7a.  goto L2c2bca;
  #L2c2b7c.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L2c2b82.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` @kind object;
  #L2c2b86.  v5:= v11 @kind object;
  #L2c2b88.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L2c2b8c.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$this_runningReduceIndexed` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c2b90.  call temp:= `iterator`(v11) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c2b96.  v4:= temp @kind object;
  #L2c2b98.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c2b9e.  v11:= temp;
  #L2c2ba0.  if v11 == 0 then goto L2c2c2a;
  #L2c2ba4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c2baa.  v1:= temp @kind object;
  #L2c2bac.  v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2c2bb0.  v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2c2bb4.  v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$2` @type ^`java.lang.Object` := v1 @kind object;
  #L2c2bb8.  v10.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.label` @type ^`int` := v3;
  #L2c2bbc.  call temp:= `yield`(v5, v1, v10) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c2bc2.  v11:= temp @kind object;
  #L2c2bc4.  if v11 != v0 then goto L2c2bca;
  #L2c2bc8.  return v0 @kind object;
  #L2c2bca.  v11:= v10 @kind object;
  #L2c2bcc.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c2bd2.  v6:= temp;
  #L2c2bd4.  if v6 == 0 then goto L2c2c2a;
  #L2c2bd8.  v6:= v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.$operation` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2c2bdc.  v7:= v3 + 1;
  #L2c2be0.  if v3 >= 0 then goto L2c2bea;
  #L2c2be4.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L2c2bea.  call temp:= `boxInt`(v3) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L2c2bf0.  v3:= temp @kind object;
  #L2c2bf2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c2bf8.  v8:= temp @kind object;
  #L2c2bfa.  call temp:= `invoke`(v6, v3, v1, v8) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c2c00.  v3:= temp @kind object;
  #L2c2c02.  v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$0` @type ^`java.lang.Object` := v5 @kind object;
  #L2c2c06.  v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$1` @type ^`java.lang.Object` := v4 @kind object;
  #L2c2c0a.  v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.L$2` @type ^`java.lang.Object` := v3 @kind object;
  #L2c2c0e.  v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.I$0` @type ^`int` := v7;
  #L2c2c12.  v11.`kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1.label` @type ^`int` := v2;
  #L2c2c16.  call temp:= `yield`(v5, v3, v11) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L2c2c1c.  v1:= temp @kind object;
  #L2c2c1e.  if v1 != v0 then goto L2c2c24;
  #L2c2c22.  return v0 @kind object;
  #L2c2c24.  v1:= v3 @kind object;
  #L2c2c26.  v3:= v7;
  #L2c2c28.  goto L2c2bcc;
  #L2c2c2a.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L2c2c2e.  return v11 @kind object;
}
