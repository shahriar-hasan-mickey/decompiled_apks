record `kotlin.sequences.FlatteningSequence` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlin.sequences.FlatteningSequence.iterator` @AccessFlag PRIVATE_FINAL;
  `kotlin.sequences.Sequence` `kotlin.sequences.FlatteningSequence.sequence` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.sequences.FlatteningSequence.transformer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.sequences.FlatteningSequence` v1 @kind this, `kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/FlatteningSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c0b68.  v0:= "sequence" @kind object;
  #L2c0b6c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c0b72.  v0:= "transformer" @kind object;
  #L2c0b76.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c0b7c.  v0:= "iterator" @kind object;
  #L2c0b80.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c0b86.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c0b8c.  v1.`kotlin.sequences.FlatteningSequence.sequence` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L2c0b90.  v1.`kotlin.sequences.FlatteningSequence.transformer` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L2c0b94.  v1.`kotlin.sequences.FlatteningSequence.iterator` @type ^`kotlin.jvm.functions.Function1` := v4 @kind object;
  #L2c0b98.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `access$getIterator$p`(`kotlin.sequences.FlatteningSequence` v0 @kind object) @signature `Lkotlin/sequences/FlatteningSequence;.access$getIterator$p:(Lkotlin/sequences/FlatteningSequence;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c0b20.  v0:= v0.`kotlin.sequences.FlatteningSequence.iterator` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2c0b24.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `access$getSequence$p`(`kotlin.sequences.FlatteningSequence` v0 @kind object) @signature `Lkotlin/sequences/FlatteningSequence;.access$getSequence$p:(Lkotlin/sequences/FlatteningSequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c0b50.  v0:= v0.`kotlin.sequences.FlatteningSequence.sequence` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c0b54.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `access$getTransformer$p`(`kotlin.sequences.FlatteningSequence` v0 @kind object) @signature `Lkotlin/sequences/FlatteningSequence;.access$getTransformer$p:(Lkotlin/sequences/FlatteningSequence;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L2c0b38.  v0:= v0.`kotlin.sequences.FlatteningSequence.transformer` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2c0b3c.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.FlatteningSequence` v1 @kind this) @signature `Lkotlin/sequences/FlatteningSequence;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c0b04.  v0:= new `kotlin.sequences.FlatteningSequence$iterator$1`;
  #L2c0b08.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/FlatteningSequence$iterator$1;.<init>:(Lkotlin/sequences/FlatteningSequence;)V` @kind direct;
  #L2c0b0e.  return v0 @kind object;
}
