record `kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` `@@kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c1e8c.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1`;
  #L2c1e90.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.<init>:()V` @kind direct;
  #L2c1e96.  `@@kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` := v0 @kind object;
  #L2c1e9a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c1eac.  v0:= 1I;
  #L2c1eae.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2c1eb4.  return @kind void;
}
procedure `java.lang.Boolean` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c1e4c.  if v1 != 0 then goto L2c1e54;
  #L2c1e50.  v1:= 1I;
  #L2c1e52.  goto L2c1e56;
  #L2c1e54.  v1:= 0I;
  #L2c1e56.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2c1e5c.  v1:= temp @kind object;
  #L2c1e5e.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c1e70.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterNotNull$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Boolean;` @kind virtual;
  #L2c1e76.  v1:= temp @kind object;
  #L2c1e78.  return v1 @kind object;
}
