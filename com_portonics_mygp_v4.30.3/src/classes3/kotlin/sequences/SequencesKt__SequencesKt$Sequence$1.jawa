record `kotlin.sequences.SequencesKt__SequencesKt$Sequence$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.$iterator` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$Sequence$1` v0 @kind this, `kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$Sequence$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c14f0.  v0.`kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.$iterator` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L2c14f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c14fa.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt__SequencesKt$Sequence$1` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$Sequence$1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c14cc.  v0:= v1.`kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.$iterator` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L2c14d0.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2c14d6.  v0:= temp @kind object;
  #L2c14d8.  v0:= (`java.util.Iterator`) v0 @kind object;
  #L2c14dc.  return v0 @kind object;
}
