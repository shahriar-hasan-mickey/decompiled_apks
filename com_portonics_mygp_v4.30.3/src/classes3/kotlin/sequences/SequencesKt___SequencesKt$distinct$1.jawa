record `kotlin.sequences.SequencesKt___SequencesKt$distinct$1` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.sequences.SequencesKt___SequencesKt$distinct$1` `@@kotlin.sequences.SequencesKt___SequencesKt$distinct$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt___SequencesKt$distinct$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c1bf4.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$distinct$1`;
  #L2c1bf8.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$distinct$1;.<init>:()V` @kind direct;
  #L2c1bfe.  `@@kotlin.sequences.SequencesKt___SequencesKt$distinct$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$distinct$1` := v0 @kind object;
  #L2c1c02.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$distinct$1` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$distinct$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c1c14.  v0:= 1I;
  #L2c1c16.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L2c1c1c.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$distinct$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$distinct$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2c1be0.  return v1 @kind object;
}
