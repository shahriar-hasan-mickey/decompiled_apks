record `kotlin.sequences.SequencesKt___SequencesKt$minus$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `java.lang.Object`[] `kotlin.sequences.SequencesKt___SequencesKt$minus$2.$elements` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$2.$this_minus` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$minus$2` v0 @kind this, `java.lang.Object`[] v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$2;.<init>:([Ljava/lang/Object;Lkotlin/sequences/Sequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c22ec.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$2.$elements` @type ^`java.lang.Object`[] := v1 @kind object;
  #L2c22f0.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$2.$this_minus` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L2c22f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c22fa.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$minus$2` v3 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$2;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c22b0.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$2.$elements` @type ^`java.lang.Object`[] @kind object;
  #L2c22b4.  call temp:= `convertToSetForSetOperation`(v0) @signature `Lkotlin/collections/BrittleContainsOptimizationKt;.convertToSetForSetOperation:([Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L2c22ba.  v0:= temp @kind object;
  #L2c22bc.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$2.$this_minus` @type ^`kotlin.sequences.Sequence` @kind object;
  #L2c22c0.  v2:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1`;
  #L2c22c4.  call `<init>`(v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$2$iterator$1;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2c22ca.  call temp:= `filterNot`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L2c22d0.  v0:= temp @kind object;
  #L2c22d2.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c22d8.  v0:= temp @kind object;
  #L2c22da.  return v0 @kind object;
}
