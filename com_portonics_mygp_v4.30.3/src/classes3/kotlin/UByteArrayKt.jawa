record `kotlin.UByteArrayKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `byte`[] `UByteArray`(`int` v3 , `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/UByteArrayKt;.UByteArray:(ILkotlin/jvm/functions/Function1;)[B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L29967c.  v0:= "init" @kind object;
  #L299680.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L299686.  v0:= new `byte`[v3];
  #L29968a.  v1:= 0I;
  #L29968c.  if v1 >= v3 then goto L2996b6;
  #L299690.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L299696.  v2:= temp @kind object;
  #L299698.  call temp:= `invoke`(v4, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29969e.  v2:= temp @kind object;
  #L2996a0.  v2:= (`kotlin.UByte`) v2 @kind object;
  #L2996a4.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L2996aa.  v2:= temp;
  #L2996ac.  v0[v1]:= v2 @kind byte;
  #L2996b0.  v1:= v1 + 1;
  #L2996b4.  goto L29968c;
  #L2996b6.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UByteArray;.constructor-impl:([B)[B` @kind static;
  #L2996bc.  v3:= temp @kind object;
  #L2996be.  return v3 @kind object;
}
procedure `byte`[] `ubyteArrayOf-GBYM_sE`(`byte`[] v1 @kind object) @signature `Lkotlin/UByteArrayKt;.ubyteArrayOf-GBYM_sE:([B)[B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2996d0.  v0:= "elements" @kind object;
  #L2996d4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2996da.  return v1 @kind object;
}
