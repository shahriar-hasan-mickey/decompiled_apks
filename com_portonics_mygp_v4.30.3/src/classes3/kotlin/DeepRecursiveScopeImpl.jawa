record `kotlin.DeepRecursiveScopeImpl` @kind class @AccessFlag FINAL extends `kotlin.DeepRecursiveScope` @kind class, `kotlin.coroutines.Continuation` @kind interface {
  `kotlin.coroutines.Continuation` `kotlin.DeepRecursiveScopeImpl.cont` @AccessFlag PRIVATE;
  `kotlin.jvm.functions.Function3` `kotlin.DeepRecursiveScopeImpl.function` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.result` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.DeepRecursiveScopeImpl.value` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `kotlin.jvm.functions.Function3` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.<init>:(Lkotlin/jvm/functions/Function3;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L296200.  v0:= "block" @kind object;
  #L296204.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29620a.  v0:= 0I;
  #L29620c.  call `<init>`(v1, v0) @signature `Lkotlin/DeepRecursiveScope;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L296212.  v1.`kotlin.DeepRecursiveScopeImpl.function` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L296216.  v1.`kotlin.DeepRecursiveScopeImpl.value` @type ^`java.lang.Object` := v3 @kind object;
  #L29621a.  v1.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L29621e.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L296224.  v2:= temp @kind object;
  #L296226.  v1.`kotlin.DeepRecursiveScopeImpl.result` @type ^`java.lang.Object` := v2 @kind object;
  #L29622a.  return @kind void;
}
procedure `void` `access$setCont$p`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.access$setCont$p:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L29623c.  v0.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L296240.  return @kind void;
}
procedure `void` `access$setFunction$p`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `kotlin.jvm.functions.Function3` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.access$setFunction$p:(Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L296254.  v0.`kotlin.DeepRecursiveScopeImpl.function` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L296258.  return @kind void;
}
procedure `void` `access$setResult$p`(`kotlin.DeepRecursiveScopeImpl` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.access$setResult$p:(Lkotlin/DeepRecursiveScopeImpl;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L29626c.  v0.`kotlin.DeepRecursiveScopeImpl.result` @type ^`java.lang.Object` := v1 @kind object;
  #L296270.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `crossFunctionCompletion`(`kotlin.DeepRecursiveScopeImpl` v2 @kind this, `kotlin.jvm.functions.Function3` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.crossFunctionCompletion:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L2961c8.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2961cc.  v1:= new `kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1`;
  #L2961d0.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lkotlin/DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/DeepRecursiveScopeImpl;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L2961d6.  return v1 @kind object;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L296088.  v1.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L29608c.  v1.`kotlin.DeepRecursiveScopeImpl.value` @type ^`java.lang.Object` := v2 @kind object;
  #L296090.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L296096.  v2:= temp @kind object;
  #L296098.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L29609e.  v0:= temp @kind object;
  #L2960a0.  if v2 != v0 then goto L2960aa;
  #L2960a4.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L2960aa.  return v2 @kind object;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `kotlin.DeepRecursiveFunction` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.callRecursive:(Lkotlin/DeepRecursiveFunction;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2960bc.  call temp:= `getBlock$kotlin_stdlib`(v2) @signature `Lkotlin/DeepRecursiveFunction;.getBlock$kotlin_stdlib:()Lkotlin/jvm/functions/Function3;` @kind virtual;
  #L2960c2.  v2:= temp @kind object;
  #L2960c4.  v0:= v1.`kotlin.DeepRecursiveScopeImpl.function` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2960c8.  if v2 == v0 then goto L2960de;
  #L2960cc.  v1.`kotlin.DeepRecursiveScopeImpl.function` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L2960d0.  call temp:= `crossFunctionCompletion`(v1, v0, v4) @signature `Lkotlin/DeepRecursiveScopeImpl;.crossFunctionCompletion:(Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind direct;
  #L2960d6.  v2:= temp @kind object;
  #L2960d8.  v1.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v2 @kind object;
  #L2960dc.  goto L2960e2;
  #L2960de.  v1.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v4 @kind object;
  #L2960e2.  v1.`kotlin.DeepRecursiveScopeImpl.value` @type ^`java.lang.Object` := v3 @kind object;
  #L2960e6.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2960ec.  v2:= temp @kind object;
  #L2960ee.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L2960f4.  v3:= temp @kind object;
  #L2960f6.  if v2 != v3 then goto L296100;
  #L2960fa.  call `probeCoroutineSuspended`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L296100.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2961e8.  v0:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L2961ec.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlin.DeepRecursiveScopeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/DeepRecursiveScopeImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L296284.  v0:= 0I;
  #L296286.  v1.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` := v0 @kind object;
  #L29628a.  v1.`kotlin.DeepRecursiveScopeImpl.result` @type ^`java.lang.Object` := v2 @kind object;
  #L29628e.  return @kind void;
}
procedure `java.lang.Object` `runCallLoop`(`kotlin.DeepRecursiveScopeImpl` v4 @kind this) @signature `Lkotlin/DeepRecursiveScopeImpl;.runCallLoop:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L296114.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.result` @type ^`java.lang.Object` @kind object;
  #L296118.  v1:= v4.`kotlin.DeepRecursiveScopeImpl.cont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L29611c.  if v1 != 0 then goto L296128;
  #L296120.  call `throwOnFailure`(v0) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L296126.  return v0 @kind object;
  #L296128.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L29612e.  v2:= temp @kind object;
  #L296130.  call temp:= `equals-impl0`(v2, v0) @signature `Lkotlin/Result;.equals-impl0:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L296136.  v2:= temp;
  #L296138.  if v2 == 0 then goto L296198;
  #L29613c.  v0:= v4.`kotlin.DeepRecursiveScopeImpl.function` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L296140.  v2:= v4.`kotlin.DeepRecursiveScopeImpl.value` @type ^`java.lang.Object` @kind object;
  #L296144.  v3:= 3I;
  #L296146.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L29614c.  v0:= temp @kind object;
  #L29614e.  v0:= (`kotlin.jvm.functions.Function3`) v0 @kind object;
  #L296152.  call temp:= `invoke`(v0, v4, v2, v1) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L296158.  v0:= temp @kind object;
  #L29615a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L296160.  v2:= temp @kind object;
  #L296162.  if v0 == v2 then goto L296114;
  #L296166.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L29616a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L296170.  v0:= temp @kind object;
  #L296172.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L296178.  goto L296114;
  #L29617a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29617c.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L296180.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L296186.  v0:= temp @kind object;
  #L296188.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29618e.  v0:= temp @kind object;
  #L296190.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L296196.  goto L296114;
  #L296198.  call temp:= `access$getUNDEFINED_RESULT$p`() @signature `Lkotlin/DeepRecursiveKt;.access$getUNDEFINED_RESULT$p:()Ljava/lang/Object;` @kind static;
  #L29619e.  v2:= temp @kind object;
  #L2961a0.  v4.`kotlin.DeepRecursiveScopeImpl.result` @type ^`java.lang.Object` := v2 @kind object;
  #L2961a4.  call `resumeWith`(v1, v0) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2961aa.  goto L296114;
  catch `java.lang.Throwable` @[L29613c..L29615a] goto L29617a;
}
