record `kotlin.experimental.BitwiseOperationsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `byte` `and`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.and:(BB)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af5d0.  v0:= v0 ^& v1 @kind int;
  #L2af5d2.  v0:= (`byte`) v0 @kind i2b;
  #L2af5d4.  return v0;
}
procedure `short` `and`(`short` v0 , `short` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.and:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af630.  v0:= v0 ^& v1 @kind int;
  #L2af632.  v0:= (`short`) v0 @kind i2s;
  #L2af634.  return v0;
}
procedure `byte` `inv`(`byte` v0 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.inv:(B)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af5e8.  v0:= v0 ^~ -1;
  #L2af5ec.  v0:= (`byte`) v0 @kind i2b;
  #L2af5ee.  return v0;
}
procedure `short` `inv`(`short` v0 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.inv:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af648.  v0:= v0 ^~ -1;
  #L2af64c.  v0:= (`short`) v0 @kind i2s;
  #L2af64e.  return v0;
}
procedure `byte` `or`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.or:(BB)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af600.  v0:= v0 ^| v1 @kind int;
  #L2af602.  v0:= (`byte`) v0 @kind i2b;
  #L2af604.  return v0;
}
procedure `short` `or`(`short` v0 , `short` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.or:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af660.  v0:= v0 ^| v1 @kind int;
  #L2af662.  v0:= (`short`) v0 @kind i2s;
  #L2af664.  return v0;
}
procedure `byte` `xor`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.xor:(BB)B` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af618.  v0:= v0 ^~ v1 @kind int;
  #L2af61a.  v0:= (`byte`) v0 @kind i2b;
  #L2af61c.  return v0;
}
procedure `short` `xor`(`short` v0 , `short` v1 ) @signature `Lkotlin/experimental/BitwiseOperationsKt;.xor:(SS)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L2af678.  v0:= v0 ^~ v1 @kind int;
  #L2af67a.  v0:= (`short`) v0 @kind i2s;
  #L2af67c.  return v0;
}
