record `kotlin.NotImplementedError` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Error` @kind class {
}
procedure `void` `<init>`(`kotlin.NotImplementedError` v2 @kind this) @signature `Lkotlin/NotImplementedError;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L296c5c.  v0:= 0I;
  #L296c5e.  v1:= 1I;
  #L296c60.  call `<init>`(v2, v0, v1, v0) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L296c66.  return @kind void;
}
procedure `void` `<init>`(`kotlin.NotImplementedError` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L296c78.  v0:= "message" @kind object;
  #L296c7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L296c82.  call `<init>`(v1, v2) @signature `Ljava/lang/Error;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L296c88.  return @kind void;
}
procedure `void` `<init>`(`kotlin.NotImplementedError` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L296c9c.  v2:= v2 ^& 1;
  #L296ca0.  if v2 == 0 then goto L296ca8;
  #L296ca4.  v1:= "An operation is not implemented." @kind object;
  #L296ca8.  call `<init>`(v0, v1) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L296cae.  return @kind void;
}
