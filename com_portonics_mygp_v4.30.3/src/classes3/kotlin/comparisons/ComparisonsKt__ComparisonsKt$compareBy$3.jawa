record `kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Comparator` @kind interface {
  `java.util.Comparator` `kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$comparator` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$selector` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3` v0 @kind this, `java.util.Comparator` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/comparisons/ComparisonsKt__ComparisonsKt$compareBy$3;.<init>:(Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ab0e4.  v0.`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$comparator` @type ^`java.util.Comparator` := v1 @kind object;
  #L2ab0e8.  v0.`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$selector` @type ^`kotlin.jvm.functions.Function1` := v2 @kind object;
  #L2ab0ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ab0f2.  return @kind void;
}
procedure `int` `compare`(`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/comparisons/ComparisonsKt__ComparisonsKt$compareBy$3;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2ab0b0.  v0:= v2.`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$comparator` @type ^`java.util.Comparator` @kind object;
  #L2ab0b4.  v1:= v2.`kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3.$selector` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2ab0b8.  call temp:= `invoke`(v1, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ab0be.  v3:= temp @kind object;
  #L2ab0c0.  call temp:= `invoke`(v1, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ab0c6.  v4:= temp @kind object;
  #L2ab0c8.  call temp:= `compare`(v0, v3, v4) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2ab0ce.  v3:= temp;
  #L2ab0d0.  return v3;
}
