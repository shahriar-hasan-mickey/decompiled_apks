record `kotlin.jvm.internal.FunInterfaceConstructorReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.FunctionReference` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b4b14.  v0:= 1I;
  #L2b4b16.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(I)V` @kind direct;
  #L2b4b1c.  v1.`kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @type ^`java.lang.Class` := v2 @kind object;
  #L2b4b20.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4a3c.  if v1 != v2 then goto L2b4a44;
  #L2b4a40.  v2:= 1I;
  #L2b4a42.  return v2;
  #L2b4a44.  v0:= instanceof @variable v2 @type ^`kotlin.jvm.internal.FunInterfaceConstructorReference` @kind boolean;
  #L2b4a48.  if v0 != 0 then goto L2b4a50;
  #L2b4a4c.  v2:= 0I;
  #L2b4a4e.  return v2;
  #L2b4a50.  v2:= (`kotlin.jvm.internal.FunInterfaceConstructorReference`) v2 @kind object;
  #L2b4a54.  v0:= v1.`kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @type ^`java.lang.Class` @kind object;
  #L2b4a58.  v2:= v2.`kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @type ^`java.lang.Class` @kind object;
  #L2b4a5c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4a62.  v2:= temp;
  #L2b4a64.  return v2;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L2b4ad8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4ade.  v0:= temp @kind object;
  #L2b4ae0.  return v0 @kind object;
}
procedure `kotlin.reflect.KFunction` `getReflected`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.getReflected:()Lkotlin/reflect/KFunction;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2b4af4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2b4af8.  v1:= "Functional interface constructor does not support reflection" @kind object;
  #L2b4afc.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b4b02.  throw v0;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4a78.  v0:= v1.`kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @type ^`java.lang.Class` @kind object;
  #L2b4a7c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2b4a82.  v0:= temp;
  #L2b4a84.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.FunInterfaceConstructorReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunInterfaceConstructorReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4a98.  v0:= new `java.lang.StringBuilder`;
  #L2b4a9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b4aa2.  v1:= "fun interface " @kind object;
  #L2b4aa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4aac.  v1:= v2.`kotlin.jvm.internal.FunInterfaceConstructorReference.funInterface` @type ^`java.lang.Class` @kind object;
  #L2b4ab0.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4ab6.  v1:= temp @kind object;
  #L2b4ab8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4abe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b4ac4.  v0:= temp @kind object;
  #L2b4ac6.  return v0 @kind object;
}
