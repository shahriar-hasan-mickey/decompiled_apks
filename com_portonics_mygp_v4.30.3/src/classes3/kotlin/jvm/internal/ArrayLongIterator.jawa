record `kotlin.jvm.internal.ArrayLongIterator` @kind class @AccessFlag FINAL extends `kotlin.collections.LongIterator` @kind class {
  `long`[] `kotlin.jvm.internal.ArrayLongIterator.array` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.ArrayLongIterator.index` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ArrayLongIterator` v1 @kind this, `long`[] v2 @kind object) @signature `Lkotlin/jvm/internal/ArrayLongIterator;.<init>:([J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b2e20.  v0:= "array" @kind object;
  #L2b2e24.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b2e2a.  call `<init>`(v1) @signature `Lkotlin/collections/LongIterator;.<init>:()V` @kind direct;
  #L2b2e30.  v1.`kotlin.jvm.internal.ArrayLongIterator.array` @type ^`long`[] := v2 @kind object;
  #L2b2e34.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.ArrayLongIterator` v2 @kind this) @signature `Lkotlin/jvm/internal/ArrayLongIterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b2da0.  v0:= v2.`kotlin.jvm.internal.ArrayLongIterator.index` @type ^`int`;
  #L2b2da4.  v1:= v2.`kotlin.jvm.internal.ArrayLongIterator.array` @type ^`long`[] @kind object;
  #L2b2da8.  v1:= length @variable v1;
  #L2b2daa.  if v0 >= v1 then goto L2b2db2;
  #L2b2dae.  v0:= 1I;
  #L2b2db0.  goto L2b2db4;
  #L2b2db2.  v0:= 0I;
  #L2b2db4.  return v0;
}
procedure `long` `nextLong`(`kotlin.jvm.internal.ArrayLongIterator` v3 @kind this) @signature `Lkotlin/jvm/internal/ArrayLongIterator;.nextLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2dc8.  v0:= v3.`kotlin.jvm.internal.ArrayLongIterator.array` @type ^`long`[] @kind object;
  #L2b2dcc.  v1:= v3.`kotlin.jvm.internal.ArrayLongIterator.index` @type ^`int`;
  #L2b2dd0.  v2:= v1 + 1;
  #L2b2dd4.  v3.`kotlin.jvm.internal.ArrayLongIterator.index` @type ^`int` := v2;
  #L2b2dd8.  v1:= v0[v1] @kind wide;
  #L2b2ddc.  return v1 @kind wide;
  #L2b2dde.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2b2de0.  v1:= v3.`kotlin.jvm.internal.ArrayLongIterator.index` @type ^`int`;
  #L2b2de4.  v1:= v1 + -1;
  #L2b2de8.  v3.`kotlin.jvm.internal.ArrayLongIterator.index` @type ^`int` := v1;
  #L2b2dec.  v1:= new `java.util.NoSuchElementException`;
  #L2b2df0.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2b2df6.  v0:= temp @kind object;
  #L2b2df8.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2dfe.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2b2dc8..L2b2ddc] goto L2b2dde;
}
