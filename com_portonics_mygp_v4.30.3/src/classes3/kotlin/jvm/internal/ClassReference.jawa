record `kotlin.jvm.internal.ClassReference` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.reflect.KClass` @kind interface, `kotlin.jvm.internal.ClassBasedDeclarationContainer` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.ClassReference.jClass` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.jvm.internal.ClassReference$Companion` `@@kotlin.jvm.internal.ClassReference.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.classFqNames` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.primitiveFqNames` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.primitiveWrapperFqNames` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.simpleNames` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/ClassReference;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2b3ca4.  v0:= new `kotlin.jvm.internal.ClassReference$Companion`;
  #L2b3ca8.  v1:= 0I;
  #L2b3caa.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2b3cb0.  `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` := v0 @kind object;
  #L2b3cb4.  v0:= 23I;
  #L2b3cb8.  v0:= new `java.lang.Class`[v0];
  #L2b3cbc.  v2:= constclass @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L2b3cc0.  v3:= 0I;
  #L2b3cc2.  v0[v3]:= v2 @kind object;
  #L2b3cc6.  v2:= constclass @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L2b3cca.  v4:= 1I;
  #L2b3ccc.  v0[v4]:= v2 @kind object;
  #L2b3cd0.  v2:= constclass @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L2b3cd4.  v4:= 2I;
  #L2b3cd6.  v0[v4]:= v2 @kind object;
  #L2b3cda.  v2:= 3I;
  #L2b3cdc.  v5:= constclass @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L2b3ce0.  v0[v2]:= v5 @kind object;
  #L2b3ce4.  v2:= 4I;
  #L2b3ce6.  v5:= constclass @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L2b3cea.  v0[v2]:= v5 @kind object;
  #L2b3cee.  v2:= 5I;
  #L2b3cf0.  v5:= constclass @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L2b3cf4.  v0[v2]:= v5 @kind object;
  #L2b3cf8.  v2:= 6I;
  #L2b3cfa.  v5:= constclass @type ^`kotlin.jvm.functions.Function6` @kind object;
  #L2b3cfe.  v0[v2]:= v5 @kind object;
  #L2b3d02.  v2:= 7I;
  #L2b3d04.  v5:= constclass @type ^`kotlin.jvm.functions.Function7` @kind object;
  #L2b3d08.  v0[v2]:= v5 @kind object;
  #L2b3d0c.  v2:= 8I;
  #L2b3d10.  v5:= constclass @type ^`kotlin.jvm.functions.Function8` @kind object;
  #L2b3d14.  v0[v2]:= v5 @kind object;
  #L2b3d18.  v2:= 9I;
  #L2b3d1c.  v5:= constclass @type ^`kotlin.jvm.functions.Function9` @kind object;
  #L2b3d20.  v0[v2]:= v5 @kind object;
  #L2b3d24.  v2:= constclass @type ^`kotlin.jvm.functions.Function10` @kind object;
  #L2b3d28.  v5:= 10I;
  #L2b3d2c.  v0[v5]:= v2 @kind object;
  #L2b3d30.  v2:= 11I;
  #L2b3d34.  v6:= constclass @type ^`kotlin.jvm.functions.Function11` @kind object;
  #L2b3d38.  v0[v2]:= v6 @kind object;
  #L2b3d3c.  v2:= 12I;
  #L2b3d40.  v6:= constclass @type ^`kotlin.jvm.functions.Function12` @kind object;
  #L2b3d44.  v0[v2]:= v6 @kind object;
  #L2b3d48.  v2:= 13I;
  #L2b3d4c.  v6:= constclass @type ^`kotlin.jvm.functions.Function13` @kind object;
  #L2b3d50.  v0[v2]:= v6 @kind object;
  #L2b3d54.  v2:= 14I;
  #L2b3d58.  v6:= constclass @type ^`kotlin.jvm.functions.Function14` @kind object;
  #L2b3d5c.  v0[v2]:= v6 @kind object;
  #L2b3d60.  v2:= 15I;
  #L2b3d64.  v6:= constclass @type ^`kotlin.jvm.functions.Function15` @kind object;
  #L2b3d68.  v0[v2]:= v6 @kind object;
  #L2b3d6c.  v2:= 16I;
  #L2b3d70.  v6:= constclass @type ^`kotlin.jvm.functions.Function16` @kind object;
  #L2b3d74.  v0[v2]:= v6 @kind object;
  #L2b3d78.  v2:= 17I;
  #L2b3d7c.  v6:= constclass @type ^`kotlin.jvm.functions.Function17` @kind object;
  #L2b3d80.  v0[v2]:= v6 @kind object;
  #L2b3d84.  v2:= 18I;
  #L2b3d88.  v6:= constclass @type ^`kotlin.jvm.functions.Function18` @kind object;
  #L2b3d8c.  v0[v2]:= v6 @kind object;
  #L2b3d90.  v2:= 19I;
  #L2b3d94.  v6:= constclass @type ^`kotlin.jvm.functions.Function19` @kind object;
  #L2b3d98.  v0[v2]:= v6 @kind object;
  #L2b3d9c.  v2:= 20I;
  #L2b3da0.  v6:= constclass @type ^`kotlin.jvm.functions.Function20` @kind object;
  #L2b3da4.  v0[v2]:= v6 @kind object;
  #L2b3da8.  v2:= 21I;
  #L2b3dac.  v6:= constclass @type ^`kotlin.jvm.functions.Function21` @kind object;
  #L2b3db0.  v0[v2]:= v6 @kind object;
  #L2b3db4.  v2:= 22I;
  #L2b3db8.  v6:= constclass @type ^`kotlin.jvm.functions.Function22` @kind object;
  #L2b3dbc.  v0[v2]:= v6 @kind object;
  #L2b3dc0.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b3dc6.  v0:= temp @kind object;
  #L2b3dc8.  v2:= new `java.util.ArrayList`;
  #L2b3dcc.  call temp:= `collectionSizeOrDefault`(v0, v5) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L2b3dd2.  v5:= temp;
  #L2b3dd4.  call `<init>`(v2, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2b3dda.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b3de0.  v0:= temp @kind object;
  #L2b3de2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b3de8.  v5:= temp;
  #L2b3dea.  if v5 == 0 then goto L2b3e22;
  #L2b3dee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b3df4.  v5:= temp @kind object;
  #L2b3df6.  v6:= v3 + 1;
  #L2b3dfa.  if v3 >= 0 then goto L2b3e04;
  #L2b3dfe.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L2b3e04.  v5:= (`java.lang.Class`) v5 @kind object;
  #L2b3e08.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b3e0e.  v3:= temp @kind object;
  #L2b3e10.  call temp:= `to`(v5, v3) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2b3e16.  v3:= temp @kind object;
  #L2b3e18.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b3e1e.  v3:= v6;
  #L2b3e20.  goto L2b3de2;
  #L2b3e22.  call temp:= `toMap`(v2) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @kind static;
  #L2b3e28.  v0:= temp @kind object;
  #L2b3e2a.  `@@kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES` @type ^`java.util.Map` := v0 @kind object;
  #L2b3e2e.  v0:= new `java.util.HashMap`;
  #L2b3e32.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b3e38.  v2:= "boolean" @kind object;
  #L2b3e3c.  v3:= "kotlin.Boolean" @kind object;
  #L2b3e40.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e46.  v2:= "char" @kind object;
  #L2b3e4a.  v5:= "kotlin.Char" @kind object;
  #L2b3e4e.  call temp:= `put`(v0, v2, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e54.  v2:= "byte" @kind object;
  #L2b3e58.  v6:= "kotlin.Byte" @kind object;
  #L2b3e5c.  call temp:= `put`(v0, v2, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e62.  v2:= "short" @kind object;
  #L2b3e66.  v7:= "kotlin.Short" @kind object;
  #L2b3e6a.  call temp:= `put`(v0, v2, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e70.  v2:= "int" @kind object;
  #L2b3e74.  v8:= "kotlin.Int" @kind object;
  #L2b3e78.  call temp:= `put`(v0, v2, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e7e.  v2:= "float" @kind object;
  #L2b3e82.  v9:= "kotlin.Float" @kind object;
  #L2b3e86.  call temp:= `put`(v0, v2, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e8c.  v2:= "long" @kind object;
  #L2b3e90.  v10:= "kotlin.Long" @kind object;
  #L2b3e94.  call temp:= `put`(v0, v2, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3e9a.  v2:= "double" @kind object;
  #L2b3e9e.  v11:= "kotlin.Double" @kind object;
  #L2b3ea2.  call temp:= `put`(v0, v2, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ea8.  `@@kotlin.jvm.internal.ClassReference.primitiveFqNames` @type ^`java.util.HashMap` := v0 @kind object;
  #L2b3eac.  v2:= new `java.util.HashMap`;
  #L2b3eb0.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b3eb6.  v12:= "java.lang.Boolean" @kind object;
  #L2b3eba.  call temp:= `put`(v2, v12, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ec0.  v3:= "java.lang.Character" @kind object;
  #L2b3ec4.  call temp:= `put`(v2, v3, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3eca.  v3:= "java.lang.Byte" @kind object;
  #L2b3ece.  call temp:= `put`(v2, v3, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ed4.  v3:= "java.lang.Short" @kind object;
  #L2b3ed8.  call temp:= `put`(v2, v3, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ede.  v3:= "java.lang.Integer" @kind object;
  #L2b3ee2.  call temp:= `put`(v2, v3, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ee8.  v3:= "java.lang.Float" @kind object;
  #L2b3eec.  call temp:= `put`(v2, v3, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ef2.  v3:= "java.lang.Long" @kind object;
  #L2b3ef6.  call temp:= `put`(v2, v3, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3efc.  v3:= "java.lang.Double" @kind object;
  #L2b3f00.  call temp:= `put`(v2, v3, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f06.  `@@kotlin.jvm.internal.ClassReference.primitiveWrapperFqNames` @type ^`java.util.HashMap` := v2 @kind object;
  #L2b3f0a.  v3:= new `java.util.HashMap`;
  #L2b3f0e.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b3f14.  v5:= "java.lang.Object" @kind object;
  #L2b3f18.  v6:= "kotlin.Any" @kind object;
  #L2b3f1c.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f22.  v5:= "java.lang.String" @kind object;
  #L2b3f26.  v6:= "kotlin.String" @kind object;
  #L2b3f2a.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f30.  v5:= "java.lang.CharSequence" @kind object;
  #L2b3f34.  v6:= "kotlin.CharSequence" @kind object;
  #L2b3f38.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f3e.  v5:= "java.lang.Throwable" @kind object;
  #L2b3f42.  v6:= "kotlin.Throwable" @kind object;
  #L2b3f46.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f4c.  v5:= "java.lang.Cloneable" @kind object;
  #L2b3f50.  v6:= "kotlin.Cloneable" @kind object;
  #L2b3f54.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f5a.  v5:= "java.lang.Number" @kind object;
  #L2b3f5e.  v6:= "kotlin.Number" @kind object;
  #L2b3f62.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f68.  v5:= "java.lang.Comparable" @kind object;
  #L2b3f6c.  v6:= "kotlin.Comparable" @kind object;
  #L2b3f70.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f76.  v5:= "java.lang.Enum" @kind object;
  #L2b3f7a.  v6:= "kotlin.Enum" @kind object;
  #L2b3f7e.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f84.  v5:= "java.lang.annotation.Annotation" @kind object;
  #L2b3f88.  v6:= "kotlin.Annotation" @kind object;
  #L2b3f8c.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3f92.  v5:= "java.lang.Iterable" @kind object;
  #L2b3f96.  v6:= "kotlin.collections.Iterable" @kind object;
  #L2b3f9a.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fa0.  v5:= "java.util.Iterator" @kind object;
  #L2b3fa4.  v6:= "kotlin.collections.Iterator" @kind object;
  #L2b3fa8.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fae.  v5:= "java.util.Collection" @kind object;
  #L2b3fb2.  v6:= "kotlin.collections.Collection" @kind object;
  #L2b3fb6.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fbc.  v5:= "java.util.List" @kind object;
  #L2b3fc0.  v6:= "kotlin.collections.List" @kind object;
  #L2b3fc4.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fca.  v5:= "java.util.Set" @kind object;
  #L2b3fce.  v6:= "kotlin.collections.Set" @kind object;
  #L2b3fd2.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fd8.  v5:= "java.util.ListIterator" @kind object;
  #L2b3fdc.  v6:= "kotlin.collections.ListIterator" @kind object;
  #L2b3fe0.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3fe6.  v5:= "java.util.Map" @kind object;
  #L2b3fea.  v6:= "kotlin.collections.Map" @kind object;
  #L2b3fee.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3ff4.  v5:= "java.util.Map$Entry" @kind object;
  #L2b3ff8.  v6:= "kotlin.collections.Map.Entry" @kind object;
  #L2b3ffc.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b4002.  v5:= "kotlin.jvm.internal.StringCompanionObject" @kind object;
  #L2b4006.  v6:= "kotlin.String.Companion" @kind object;
  #L2b400a.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b4010.  v5:= "kotlin.jvm.internal.EnumCompanionObject" @kind object;
  #L2b4014.  v6:= "kotlin.Enum.Companion" @kind object;
  #L2b4018.  call temp:= `put`(v3, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b401e.  call `putAll`(v3, v0) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L2b4024.  call `putAll`(v3, v2) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L2b402a.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L2b4030.  v0:= temp @kind object;
  #L2b4032.  v2:= "primitiveFqNames.values" @kind object;
  #L2b4036.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b403c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4042.  v0:= temp @kind object;
  #L2b4044.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b404a.  v2:= temp;
  #L2b404c.  v5:= 46I;
  #L2b4050.  if v2 == 0 then goto L2b40e0;
  #L2b4054.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b405a.  v2:= temp @kind object;
  #L2b405c.  v2:= (`java.lang.String`) v2 @kind object;
  #L2b4060.  v6:= new `java.lang.StringBuilder`;
  #L2b4064.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b406a.  v7:= "kotlin.jvm.internal." @kind object;
  #L2b406e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4074.  v7:= "kotlinName" @kind object;
  #L2b4078.  call `checkNotNullExpressionValue`(v2, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b407e.  call temp:= `substringAfterLast$default`(v2, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b4084.  v5:= temp @kind object;
  #L2b4086.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b408c.  v5:= "CompanionObject" @kind object;
  #L2b4090.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4096.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b409c.  v5:= temp @kind object;
  #L2b409e.  v6:= new `java.lang.StringBuilder`;
  #L2b40a2.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b40a8.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b40ae.  v2:= ".Companion" @kind object;
  #L2b40b2.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b40b8.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b40be.  v2:= temp @kind object;
  #L2b40c0.  call temp:= `to`(v5, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L2b40c6.  v2:= temp @kind object;
  #L2b40c8.  call temp:= `getFirst`(v2) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L2b40ce.  v5:= temp @kind object;
  #L2b40d0.  call temp:= `getSecond`(v2) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L2b40d6.  v2:= temp @kind object;
  #L2b40d8.  call temp:= `put`(v3, v5, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b40de.  goto L2b4044;
  #L2b40e0.  v0:= `@@kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES` @type ^`java.util.Map` @kind object;
  #L2b40e4.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2b40ea.  v0:= temp @kind object;
  #L2b40ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b40f2.  v0:= temp @kind object;
  #L2b40f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b40fa.  v2:= temp;
  #L2b40fc.  if v2 == 0 then goto L2b415e;
  #L2b4100.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b4106.  v2:= temp @kind object;
  #L2b4108.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2b410c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2b4112.  v6:= temp @kind object;
  #L2b4114.  v6:= (`java.lang.Class`) v6 @kind object;
  #L2b4118.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2b411e.  v2:= temp @kind object;
  #L2b4120.  v2:= (`java.lang.Number`) v2 @kind object;
  #L2b4124.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2b412a.  v2:= temp;
  #L2b412c.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4132.  v6:= temp @kind object;
  #L2b4134.  v7:= new `java.lang.StringBuilder`;
  #L2b4138.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b413e.  v8:= "kotlin.Function" @kind object;
  #L2b4142.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4148.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b414e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b4154.  v2:= temp @kind object;
  #L2b4156.  call temp:= `put`(v3, v6, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b415c.  goto L2b40f4;
  #L2b415e.  `@@kotlin.jvm.internal.ClassReference.classFqNames` @type ^`java.util.HashMap` := v3 @kind object;
  #L2b4162.  v0:= new `java.util.LinkedHashMap`;
  #L2b4166.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2b416c.  v2:= temp;
  #L2b416e.  call temp:= `mapCapacity`(v2) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L2b4174.  v2:= temp;
  #L2b4176.  call `<init>`(v0, v2) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L2b417c.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2b4182.  v2:= temp @kind object;
  #L2b4184.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b418a.  v2:= temp @kind object;
  #L2b418c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4192.  v3:= temp;
  #L2b4194.  if v3 == 0 then goto L2b41c8;
  #L2b4198.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b419e.  v3:= temp @kind object;
  #L2b41a0.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2b41a4.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2b41aa.  v6:= temp @kind object;
  #L2b41ac.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2b41b2.  v3:= temp @kind object;
  #L2b41b4.  v3:= (`java.lang.String`) v3 @kind object;
  #L2b41b8.  call temp:= `substringAfterLast$default`(v3, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b41be.  v3:= temp @kind object;
  #L2b41c0.  call temp:= `put`(v0, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b41c6.  goto L2b418c;
  #L2b41c8.  `@@kotlin.jvm.internal.ClassReference.simpleNames` @type ^`java.util.Map` := v0 @kind object;
  #L2b41cc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b41e0.  v0:= "jClass" @kind object;
  #L2b41e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b41ea.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b41f0.  v1.`kotlin.jvm.internal.ClassReference.jClass` @type ^`java.lang.Class` := v2 @kind object;
  #L2b41f4.  return @kind void;
}
procedure `java.util.HashMap` `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2b3ba8.  v0:= `@@kotlin.jvm.internal.ClassReference.classFqNames` @type ^`java.util.HashMap` @kind object;
  #L2b3bac.  return v0 @kind object;
}
procedure `java.util.Map` `access$getFUNCTION_CLASSES$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getFUNCTION_CLASSES$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2b3c50.  v0:= `@@kotlin.jvm.internal.ClassReference.FUNCTION_CLASSES` @type ^`java.util.Map` @kind object;
  #L2b3c54.  return v0 @kind object;
}
procedure `java.util.Map` `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2b3c68.  v0:= `@@kotlin.jvm.internal.ClassReference.simpleNames` @type ^`java.util.Map` @kind object;
  #L2b3c6c.  return v0 @kind object;
}
procedure `java.lang.Void` `error`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2b3b20.  v0:= new `kotlin.jvm.KotlinReflectionNotSupportedError`;
  #L2b3b24.  call `<init>`(v0) @signature `Lkotlin/jvm/KotlinReflectionNotSupportedError;.<init>:()V` @kind direct;
  #L2b3b2a.  throw v0;
}
procedure `void` `getSealedSubclasses$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4208.  return @kind void;
}
procedure `void` `getSupertypes$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b421c.  return @kind void;
}
procedure `void` `getTypeParameters$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4230.  return @kind void;
}
procedure `void` `getVisibility$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4244.  return @kind void;
}
procedure `void` `isAbstract$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4258.  return @kind void;
}
procedure `void` `isCompanion$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b426c.  return @kind void;
}
procedure `void` `isData$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4280.  return @kind void;
}
procedure `void` `isFinal$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFinal$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b4294.  return @kind void;
}
procedure `void` `isFun$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFun$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b42a8.  return @kind void;
}
procedure `void` `isInner$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isInner$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b42bc.  return @kind void;
}
procedure `void` `isOpen$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isOpen$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b42d0.  return @kind void;
}
procedure `void` `isSealed$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isSealed$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b42e4.  return @kind void;
}
procedure `void` `isValue$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isValue$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2b42f8.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3880.  v0:= instanceof @variable v2 @type ^`kotlin.jvm.internal.ClassReference` @kind boolean;
  #L2b3884.  if v0 == 0 then goto L2b38ac;
  #L2b3888.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L2b388e.  v0:= temp @kind object;
  #L2b3890.  v2:= (`kotlin.reflect.KClass`) v2 @kind object;
  #L2b3894.  call temp:= `getJavaObjectType`(v2) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L2b389a.  v2:= temp @kind object;
  #L2b389c.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b38a2.  v2:= temp;
  #L2b38a4.  if v2 == 0 then goto L2b38ac;
  #L2b38a8.  v2:= 1I;
  #L2b38aa.  goto L2b38ae;
  #L2b38ac.  v2:= 0I;
  #L2b38ae.  return v2;
}
procedure `java.util.List` `getAnnotations`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getAnnotations:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3bc0.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3bc6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3bca.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3bd0.  throw v0;
}
procedure `java.util.Collection` `getConstructors`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getConstructors:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3b3c.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3b42.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3b46.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3b4c.  throw v0;
}
procedure `java.lang.Class` `getJClass`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3a50.  v0:= v1.`kotlin.jvm.internal.ClassReference.jClass` @type ^`java.lang.Class` @kind object;
  #L2b3a54.  return v0 @kind object;
}
procedure `java.util.Collection` `getMembers`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getMembers:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3b60.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3b66.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3b6a.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3b70.  throw v0;
}
procedure `java.util.Collection` `getNestedClasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getNestedClasses:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3b84.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3b8a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3b8e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3b94.  throw v0;
}
procedure `java.lang.Object` `getObjectInstance`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getObjectInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3a68.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3a6e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3a72.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3a78.  throw v0;
}
procedure `java.lang.String` `getQualifiedName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getQualifiedName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3a8c.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L2b3a90.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L2b3a96.  v1:= temp @kind object;
  #L2b3a98.  call temp:= `getClassQualifiedName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L2b3a9e.  v0:= temp @kind object;
  #L2b3aa0.  return v0 @kind object;
}
procedure `java.util.List` `getSealedSubclasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3be4.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3bea.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3bee.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3bf4.  throw v0;
}
procedure `java.lang.String` `getSimpleName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSimpleName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3ab4.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L2b3ab8.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L2b3abe.  v1:= temp @kind object;
  #L2b3ac0.  call temp:= `getClassSimpleName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L2b3ac6.  v0:= temp @kind object;
  #L2b3ac8.  return v0 @kind object;
}
procedure `java.util.List` `getSupertypes`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3c08.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3c0e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3c12.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3c18.  throw v0;
}
procedure `java.util.List` `getTypeParameters`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3c2c.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3c32.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3c36.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3c3c.  throw v0;
}
procedure `kotlin.reflect.KVisibility` `getVisibility`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility:()Lkotlin/reflect/KVisibility;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3c80.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3c86.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3c8a.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3c90.  throw v0;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3a2c.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L2b3a32.  v0:= temp @kind object;
  #L2b3a34.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Class;.hashCode:()I` @kind virtual;
  #L2b3a3a.  v0:= temp;
  #L2b3a3c.  return v0;
}
procedure `boolean` `isAbstract`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b38c0.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b38c6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b38ca.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b38d0.  throw v0;
}
procedure `boolean` `isCompanion`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b38e4.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b38ea.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b38ee.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b38f4.  throw v0;
}
procedure `boolean` `isData`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3908.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b390e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3912.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3918.  throw v0;
}
procedure `boolean` `isFinal`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b392c.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3932.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3936.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b393c.  throw v0;
}
procedure `boolean` `isFun`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFun:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3950.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3956.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b395a.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3960.  throw v0;
}
procedure `boolean` `isInner`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isInner:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3974.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b397a.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b397e.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3984.  throw v0;
}
procedure `boolean` `isInstance`(`kotlin.jvm.internal.ClassReference` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3998.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L2b399c.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L2b39a2.  v1:= temp @kind object;
  #L2b39a4.  call temp:= `isInstance`(v0, v3, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.isInstance:(Ljava/lang/Object;Ljava/lang/Class;)Z` @kind virtual;
  #L2b39aa.  v3:= temp;
  #L2b39ac.  return v3;
}
procedure `boolean` `isOpen`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b39c0.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b39c6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b39ca.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b39d0.  throw v0;
}
procedure `boolean` `isSealed`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isSealed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b39e4.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b39ea.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b39ee.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b39f4.  throw v0;
}
procedure `boolean` `isValue`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3a08.  call temp:= `error`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.error:()Ljava/lang/Void;` @kind direct;
  #L2b3a0e.  v0:= new `kotlin.KotlinNothingValueException`;
  #L2b3a12.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L2b3a18.  throw v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3adc.  v0:= new `java.lang.StringBuilder`;
  #L2b3ae0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3ae6.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L2b3aec.  v1:= temp @kind object;
  #L2b3aee.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3af4.  v1:= temp @kind object;
  #L2b3af6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3afc.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L2b3b00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3b06.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3b0c.  v0:= temp @kind object;
  #L2b3b0e.  return v0 @kind object;
}
