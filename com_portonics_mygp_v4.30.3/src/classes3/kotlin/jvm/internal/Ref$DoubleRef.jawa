record `kotlin.jvm.internal.Ref$DoubleRef` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `double` `kotlin.jvm.internal.Ref$DoubleRef.element` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlin.jvm.internal.Ref$DoubleRef` v0 @kind this) @signature `Lkotlin/jvm/internal/Ref$DoubleRef;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b64d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b64da.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.Ref$DoubleRef` v2 @kind this) @signature `Lkotlin/jvm/internal/Ref$DoubleRef;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b64b4.  v0:= v2.`kotlin.jvm.internal.Ref$DoubleRef.element` @type ^`double` @kind wide;
  #L2b64b8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(D)Ljava/lang/String;` @kind static;
  #L2b64be.  v0:= temp @kind object;
  #L2b64c0.  return v0 @kind object;
}
