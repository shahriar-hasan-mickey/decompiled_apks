record `kotlin.jvm.internal.ArrayIntIterator` @kind class @AccessFlag FINAL extends `kotlin.collections.IntIterator` @kind class {
  `int`[] `kotlin.jvm.internal.ArrayIntIterator.array` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.ArrayIntIterator.index` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ArrayIntIterator` v1 @kind this, `int`[] v2 @kind object) @signature `Lkotlin/jvm/internal/ArrayIntIterator;.<init>:([I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b2b30.  v0:= "array" @kind object;
  #L2b2b34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b2b3a.  call `<init>`(v1) @signature `Lkotlin/collections/IntIterator;.<init>:()V` @kind direct;
  #L2b2b40.  v1.`kotlin.jvm.internal.ArrayIntIterator.array` @type ^`int`[] := v2 @kind object;
  #L2b2b44.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.ArrayIntIterator` v2 @kind this) @signature `Lkotlin/jvm/internal/ArrayIntIterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b2ab0.  v0:= v2.`kotlin.jvm.internal.ArrayIntIterator.index` @type ^`int`;
  #L2b2ab4.  v1:= v2.`kotlin.jvm.internal.ArrayIntIterator.array` @type ^`int`[] @kind object;
  #L2b2ab8.  v1:= length @variable v1;
  #L2b2aba.  if v0 >= v1 then goto L2b2ac2;
  #L2b2abe.  v0:= 1I;
  #L2b2ac0.  goto L2b2ac4;
  #L2b2ac2.  v0:= 0I;
  #L2b2ac4.  return v0;
}
procedure `int` `nextInt`(`kotlin.jvm.internal.ArrayIntIterator` v3 @kind this) @signature `Lkotlin/jvm/internal/ArrayIntIterator;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2ad8.  v0:= v3.`kotlin.jvm.internal.ArrayIntIterator.array` @type ^`int`[] @kind object;
  #L2b2adc.  v1:= v3.`kotlin.jvm.internal.ArrayIntIterator.index` @type ^`int`;
  #L2b2ae0.  v2:= v1 + 1;
  #L2b2ae4.  v3.`kotlin.jvm.internal.ArrayIntIterator.index` @type ^`int` := v2;
  #L2b2ae8.  v0:= v0[v1];
  #L2b2aec.  return v0;
  #L2b2aee.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2b2af0.  v1:= v3.`kotlin.jvm.internal.ArrayIntIterator.index` @type ^`int`;
  #L2b2af4.  v1:= v1 + -1;
  #L2b2af8.  v3.`kotlin.jvm.internal.ArrayIntIterator.index` @type ^`int` := v1;
  #L2b2afc.  v1:= new `java.util.NoSuchElementException`;
  #L2b2b00.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2b2b06.  v0:= temp @kind object;
  #L2b2b08.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2b0e.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2b2ad8..L2b2aec] goto L2b2aee;
}
