record `kotlin.jvm.internal.ArrayFloatIterator` @kind class @AccessFlag FINAL extends `kotlin.collections.FloatIterator` @kind class {
  `float`[] `kotlin.jvm.internal.ArrayFloatIterator.array` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.ArrayFloatIterator.index` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ArrayFloatIterator` v1 @kind this, `float`[] v2 @kind object) @signature `Lkotlin/jvm/internal/ArrayFloatIterator;.<init>:([F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b2a88.  v0:= "array" @kind object;
  #L2b2a8c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b2a92.  call `<init>`(v1) @signature `Lkotlin/collections/FloatIterator;.<init>:()V` @kind direct;
  #L2b2a98.  v1.`kotlin.jvm.internal.ArrayFloatIterator.array` @type ^`float`[] := v2 @kind object;
  #L2b2a9c.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.ArrayFloatIterator` v2 @kind this) @signature `Lkotlin/jvm/internal/ArrayFloatIterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b2a08.  v0:= v2.`kotlin.jvm.internal.ArrayFloatIterator.index` @type ^`int`;
  #L2b2a0c.  v1:= v2.`kotlin.jvm.internal.ArrayFloatIterator.array` @type ^`float`[] @kind object;
  #L2b2a10.  v1:= length @variable v1;
  #L2b2a12.  if v0 >= v1 then goto L2b2a1a;
  #L2b2a16.  v0:= 1I;
  #L2b2a18.  goto L2b2a1c;
  #L2b2a1a.  v0:= 0I;
  #L2b2a1c.  return v0;
}
procedure `float` `nextFloat`(`kotlin.jvm.internal.ArrayFloatIterator` v3 @kind this) @signature `Lkotlin/jvm/internal/ArrayFloatIterator;.nextFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2a30.  v0:= v3.`kotlin.jvm.internal.ArrayFloatIterator.array` @type ^`float`[] @kind object;
  #L2b2a34.  v1:= v3.`kotlin.jvm.internal.ArrayFloatIterator.index` @type ^`int`;
  #L2b2a38.  v2:= v1 + 1;
  #L2b2a3c.  v3.`kotlin.jvm.internal.ArrayFloatIterator.index` @type ^`int` := v2;
  #L2b2a40.  v0:= v0[v1];
  #L2b2a44.  return v0;
  #L2b2a46.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L2b2a48.  v1:= v3.`kotlin.jvm.internal.ArrayFloatIterator.index` @type ^`int`;
  #L2b2a4c.  v1:= v1 + -1;
  #L2b2a50.  v3.`kotlin.jvm.internal.ArrayFloatIterator.index` @type ^`int` := v1;
  #L2b2a54.  v1:= new `java.util.NoSuchElementException`;
  #L2b2a58.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2b2a5e.  v0:= temp @kind object;
  #L2b2a60.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2a66.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L2b2a30..L2b2a44] goto L2b2a46;
}
