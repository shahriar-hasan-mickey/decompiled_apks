record `kotlin.jvm.internal.Reflection` @kind class @AccessFlag PUBLIC {
}
global `kotlin.reflect.KClass`[] `@@kotlin.jvm.internal.Reflection.EMPTY_K_CLASS_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@kotlin.jvm.internal.Reflection.REFLECTION_NOT_AVAILABLE` @AccessFlag STATIC_FINAL;
global `kotlin.jvm.internal.ReflectionFactory` `@@kotlin.jvm.internal.Reflection.factory` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/Reflection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b6d4c.  v0:= 0I;
  #L2b6d4e.  v1:= "kotlin.reflect.jvm.internal.ReflectionFactoryImpl" @kind object;
  #L2b6d52.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2b6d58.  v1:= temp @kind object;
  #L2b6d5a.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L2b6d60.  v1:= temp @kind object;
  #L2b6d62.  v1:= (`kotlin.jvm.internal.ReflectionFactory`) v1 @kind object;
  #L2b6d66.  v0:= v1 @kind object;
  #L2b6d68.  goto L2b6d6c;
  #L2b6d6a.  
  #L2b6d6c.  if v0 == 0 then goto L2b6d72;
  #L2b6d70.  goto L2b6d7c;
  #L2b6d72.  v0:= new `kotlin.jvm.internal.ReflectionFactory`;
  #L2b6d76.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/ReflectionFactory;.<init>:()V` @kind direct;
  #L2b6d7c.  `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` := v0 @kind object;
  #L2b6d80.  v0:= 0I;
  #L2b6d82.  v0:= new `kotlin.reflect.KClass`[v0];
  #L2b6d86.  `@@kotlin.jvm.internal.Reflection.EMPTY_K_CLASS_ARRAY` @type ^`kotlin.reflect.KClass`[] := v0 @kind object;
  #L2b6d8a.  return @kind void;
  catch `java.lang.ClassCastException` @[L2b6d4e..L2b6d66] goto L2b6d6a;
  catch `java.lang.ClassNotFoundException` @[L2b6d4e..L2b6d66] goto L2b6d6a;
  catch `java.lang.InstantiationException` @[L2b6d4e..L2b6d66] goto L2b6d6a;
  catch `java.lang.IllegalAccessException` @[L2b6d4e..L2b6d66] goto L2b6d6a;
}
procedure `void` `<init>`(`kotlin.jvm.internal.Reflection` v0 @kind this) @signature `Lkotlin/jvm/internal/Reflection;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b6db4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b6dba.  return @kind void;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b68f8.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b68fc.  call temp:= `createKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L2b6902.  v1:= temp @kind object;
  #L2b6904.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6918.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b691c.  call temp:= `createKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L2b6922.  v1:= temp @kind object;
  #L2b6924.  return v1 @kind object;
}
procedure `kotlin.reflect.KFunction` `function`(`kotlin.jvm.internal.FunctionReference` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b69fc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6a00.  call temp:= `function`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b6a06.  v1:= temp @kind object;
  #L2b6a08.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6938.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b693c.  call temp:= `getOrCreateKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L2b6942.  v1:= temp @kind object;
  #L2b6944.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6958.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b695c.  call temp:= `getOrCreateKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L2b6962.  v1:= temp @kind object;
  #L2b6964.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass`[] `getOrCreateKotlinClasses`(`java.lang.Class`[] v4 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClasses:([Ljava/lang/Class;)[Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b6978.  v0:= length @variable v4;
  #L2b697a.  if v0 != 0 then goto L2b6984;
  #L2b697e.  v4:= `@@kotlin.jvm.internal.Reflection.EMPTY_K_CLASS_ARRAY` @type ^`kotlin.reflect.KClass`[] @kind object;
  #L2b6982.  return v4 @kind object;
  #L2b6984.  v1:= new `kotlin.reflect.KClass`[v0];
  #L2b6988.  v2:= 0I;
  #L2b698a.  if v2 >= v0 then goto L2b69a4;
  #L2b698e.  v3:= v4[v2] @kind object;
  #L2b6992.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6998.  v3:= temp @kind object;
  #L2b699a.  v1[v2]:= v3 @kind object;
  #L2b699e.  v2:= v2 + 1;
  #L2b69a2.  goto L2b698a;
  #L2b69a4.  return v1 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2b69b8.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b69bc.  v1:= "" @kind object;
  #L2b69c0.  call temp:= `getOrCreateKotlinPackage`(v0, v2, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b69c6.  v2:= temp @kind object;
  #L2b69c8.  return v2 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b69dc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b69e0.  call temp:= `getOrCreateKotlinPackage`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b69e6.  v1:= temp @kind object;
  #L2b69e8.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `mutableCollectionType`(`kotlin.reflect.KType` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableCollectionType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6adc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6ae0.  call temp:= `mutableCollectionType`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableCollectionType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6ae6.  v1:= temp @kind object;
  #L2b6ae8.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty0` `mutableProperty0`(`kotlin.jvm.internal.MutablePropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6a1c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6a20.  call temp:= `mutableProperty0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @kind virtual;
  #L2b6a26.  v1:= temp @kind object;
  #L2b6a28.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty1` `mutableProperty1`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6a3c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6a40.  call temp:= `mutableProperty1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @kind virtual;
  #L2b6a46.  v1:= temp @kind object;
  #L2b6a48.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty2` `mutableProperty2`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6a5c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6a60.  call temp:= `mutableProperty2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @kind virtual;
  #L2b6a66.  v1:= temp @kind object;
  #L2b6a68.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `nothingType`(`kotlin.reflect.KType` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nothingType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6afc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6b00.  call temp:= `nothingType`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.nothingType:(Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6b06.  v1:= temp @kind object;
  #L2b6b08.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6b1c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6b20.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6b26.  v3:= temp @kind object;
  #L2b6b28.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2b6b2e.  v1:= temp @kind object;
  #L2b6b30.  v2:= 1I;
  #L2b6b32.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6b38.  v3:= temp @kind object;
  #L2b6b3a.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2b6b4c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6b50.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6b56.  v2:= temp @kind object;
  #L2b6b58.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6b5e.  v3:= temp @kind object;
  #L2b6b60.  v1:= 1I;
  #L2b6b62.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6b68.  v2:= temp @kind object;
  #L2b6b6a.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6b7c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6b80.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6b86.  v3:= temp @kind object;
  #L2b6b88.  v1:= 2I;
  #L2b6b8a.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L2b6b8e.  v2:= 0I;
  #L2b6b90.  v1[v2]:= v4 @kind object;
  #L2b6b94.  v4:= 1I;
  #L2b6b96.  v1[v4]:= v5 @kind object;
  #L2b6b9a.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6ba0.  v5:= temp @kind object;
  #L2b6ba2.  call temp:= `typeOf`(v0, v3, v5, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6ba8.  v3:= temp @kind object;
  #L2b6baa.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2b6bbc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6bc0.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6bc6.  v2:= temp @kind object;
  #L2b6bc8.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6bce.  v3:= temp @kind object;
  #L2b6bd0.  v1:= 1I;
  #L2b6bd2.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6bd8.  v2:= temp @kind object;
  #L2b6bda.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6bec.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6bf0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2b6bf6.  v1:= temp @kind object;
  #L2b6bf8.  v2:= 1I;
  #L2b6bfa.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6c00.  v3:= temp @kind object;
  #L2b6c02.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `platformType`(`kotlin.reflect.KType` v1 @kind object, `kotlin.reflect.KType` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.platformType:(Lkotlin/reflect/KType;Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6c14.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6c18.  call temp:= `platformType`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.platformType:(Lkotlin/reflect/KType;Lkotlin/reflect/KType;)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6c1e.  v1:= temp @kind object;
  #L2b6c20.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty0` `property0`(`kotlin.jvm.internal.PropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6a7c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6a80.  call temp:= `property0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @kind virtual;
  #L2b6a86.  v1:= temp @kind object;
  #L2b6a88.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty1` `property1`(`kotlin.jvm.internal.PropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6a9c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6aa0.  call temp:= `property1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind virtual;
  #L2b6aa6.  v1:= temp @kind object;
  #L2b6aa8.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty2` `property2`(`kotlin.jvm.internal.PropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6abc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6ac0.  call temp:= `property2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @kind virtual;
  #L2b6ac6.  v1:= temp @kind object;
  #L2b6ac8.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.FunctionBase` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b68b8.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b68bc.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind virtual;
  #L2b68c2.  v1:= temp @kind object;
  #L2b68c4.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.Lambda` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b68d8.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b68dc.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @kind virtual;
  #L2b68e2.  v1:= temp @kind object;
  #L2b68e4.  return v1 @kind object;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6dcc.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6dd0.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6dd6.  v2:= temp @kind object;
  #L2b6dd8.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L2b6dde.  return @kind void;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType`[] v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;[Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6df0.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6df4.  call temp:= `toList`(v2) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6dfa.  v2:= temp @kind object;
  #L2b6dfc.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L2b6e02.  return @kind void;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6c34.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6c38.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6c3e.  v3:= temp @kind object;
  #L2b6c40.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2b6c46.  v1:= temp @kind object;
  #L2b6c48.  v2:= 0I;
  #L2b6c4a.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6c50.  v3:= temp @kind object;
  #L2b6c52.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2b6c64.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6c68.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6c6e.  v2:= temp @kind object;
  #L2b6c70.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6c76.  v3:= temp @kind object;
  #L2b6c78.  v1:= 0I;
  #L2b6c7a.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6c80.  v2:= temp @kind object;
  #L2b6c82.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6c94.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6c98.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6c9e.  v3:= temp @kind object;
  #L2b6ca0.  v1:= 2I;
  #L2b6ca2.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L2b6ca6.  v2:= 0I;
  #L2b6ca8.  v1[v2]:= v4 @kind object;
  #L2b6cac.  v4:= 1I;
  #L2b6cae.  v1[v4]:= v5 @kind object;
  #L2b6cb2.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6cb8.  v4:= temp @kind object;
  #L2b6cba.  call temp:= `typeOf`(v0, v3, v4, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6cc0.  v3:= temp @kind object;
  #L2b6cc2.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2b6cd4.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6cd8.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b6cde.  v2:= temp @kind object;
  #L2b6ce0.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2b6ce6.  v3:= temp @kind object;
  #L2b6ce8.  v1:= 0I;
  #L2b6cea.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6cf0.  v2:= temp @kind object;
  #L2b6cf2.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6d04.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6d08.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2b6d0e.  v1:= temp @kind object;
  #L2b6d10.  v2:= 0I;
  #L2b6d12.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L2b6d18.  v3:= temp @kind object;
  #L2b6d1a.  return v3 @kind object;
}
procedure `kotlin.reflect.KTypeParameter` `typeParameter`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `kotlin.reflect.KVariance` v3 @kind object, `boolean` v4 ) @signature `Lkotlin/jvm/internal/Reflection;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b6d2c.  v0:= `@@kotlin.jvm.internal.Reflection.factory` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L2b6d30.  call temp:= `typeParameter`(v0, v1, v2, v3, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @kind virtual;
  #L2b6d36.  v1:= temp @kind object;
  #L2b6d38.  return v1 @kind object;
}
