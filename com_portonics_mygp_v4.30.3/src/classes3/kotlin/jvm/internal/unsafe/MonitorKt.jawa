record `kotlin.jvm.internal.unsafe.MonitorKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `monitorEnter`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/unsafe/MonitorKt;.monitorEnter:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2b8434.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2b8438.  v0:= "This function can only be used privately" @kind object;
  #L2b843c.  call `<init>`(v1, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b8442.  throw v1;
}
procedure `void` `monitorExit`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/unsafe/MonitorKt;.monitorExit:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2b8454.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2b8458.  v0:= "This function can only be used privately" @kind object;
  #L2b845c.  call `<init>`(v1, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b8462.  throw v1;
}
