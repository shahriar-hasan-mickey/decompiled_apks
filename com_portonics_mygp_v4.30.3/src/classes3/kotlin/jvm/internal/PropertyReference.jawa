record `kotlin.jvm.internal.PropertyReference` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.CallableReference` @kind class, `kotlin.reflect.KProperty` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v0 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b63a8.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:()V` @kind direct;
  #L2b63ae.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b63c0.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2b63c6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v7 @kind this, `java.lang.Object` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b63d8.  v0:= 1I;
  #L2b63da.  v12:= v12 ^& v0 @kind int;
  #L2b63dc.  if v12 != v0 then goto L2b63e4;
  #L2b63e0.  v6:= 1I;
  #L2b63e2.  goto L2b63e8;
  #L2b63e4.  v0:= 0I;
  #L2b63e6.  v6:= 0I;
  #L2b63e8.  v1:= v7 @kind object;
  #L2b63ea.  v2:= v8 @kind object;
  #L2b63ec.  v3:= v9 @kind object;
  #L2b63ee.  v4:= v10 @kind object;
  #L2b63f0.  v5:= v11 @kind object;
  #L2b63f2.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2b63f8.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.PropertyReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b61c0.  v0:= 1I;
  #L2b61c2.  if v5 != v4 then goto L2b61c8;
  #L2b61c6.  return v0;
  #L2b61c8.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.PropertyReference` @kind boolean;
  #L2b61cc.  v2:= 0I;
  #L2b61ce.  if v1 == 0 then goto L2b624c;
  #L2b61d2.  v5:= (`kotlin.jvm.internal.PropertyReference`) v5 @kind object;
  #L2b61d6.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b61dc.  v1:= temp @kind object;
  #L2b61de.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b61e4.  v3:= temp @kind object;
  #L2b61e6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b61ec.  v1:= temp;
  #L2b61ee.  if v1 == 0 then goto L2b6248;
  #L2b61f2.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b61f8.  v1:= temp @kind object;
  #L2b61fa.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b6200.  v3:= temp @kind object;
  #L2b6202.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b6208.  v1:= temp;
  #L2b620a.  if v1 == 0 then goto L2b6248;
  #L2b620e.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b6214.  v1:= temp @kind object;
  #L2b6216.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b621c.  v3:= temp @kind object;
  #L2b621e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b6224.  v1:= temp;
  #L2b6226.  if v1 == 0 then goto L2b6248;
  #L2b622a.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L2b6230.  v1:= temp @kind object;
  #L2b6232.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L2b6238.  v5:= temp @kind object;
  #L2b623a.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b6240.  v5:= temp;
  #L2b6242.  if v5 == 0 then goto L2b6248;
  #L2b6246.  goto L2b624a;
  #L2b6248.  v0:= 0I;
  #L2b624a.  return v0;
  #L2b624c.  v0:= instanceof @variable v5 @type ^`kotlin.reflect.KProperty` @kind boolean;
  #L2b6250.  if v0 == 0 then goto L2b6266;
  #L2b6254.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L2b625a.  v0:= temp @kind object;
  #L2b625c.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b6262.  v5:= temp;
  #L2b6264.  return v5;
  #L2b6266.  return v2;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L2b636c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b6372.  v0:= temp @kind object;
  #L2b6374.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty` `getReflected`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b6388.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/CallableReference;.getReflected:()Lkotlin/reflect/KCallable;` @kind super;
  #L2b638e.  v0:= temp @kind object;
  #L2b6390.  v0:= (`kotlin.reflect.KProperty`) v0 @kind object;
  #L2b6394.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.PropertyReference` v2 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b62c0.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b62c6.  v0:= temp @kind object;
  #L2b62c8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2b62ce.  v0:= temp;
  #L2b62d0.  v0:= v0 * 31;
  #L2b62d4.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b62da.  v1:= temp @kind object;
  #L2b62dc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2b62e2.  v1:= temp;
  #L2b62e4.  v0:= v0 + v1 @kind int;
  #L2b62e6.  v0:= v0 * 31;
  #L2b62ea.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b62f0.  v1:= temp @kind object;
  #L2b62f2.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2b62f8.  v1:= temp;
  #L2b62fa.  v0:= v0 + v1 @kind int;
  #L2b62fc.  return v0;
}
procedure `boolean` `isConst`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.isConst:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b6278.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b627e.  v0:= temp @kind object;
  #L2b6280.  call temp:= `isConst`(v0) @signature `Lkotlin/reflect/KProperty;.isConst:()Z` @kind interface;
  #L2b6286.  v0:= temp;
  #L2b6288.  return v0;
}
procedure `boolean` `isLateinit`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.isLateinit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b629c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b62a2.  v0:= temp @kind object;
  #L2b62a4.  call temp:= `isLateinit`(v0) @signature `Lkotlin/reflect/KProperty;.isLateinit:()Z` @kind interface;
  #L2b62aa.  v0:= temp;
  #L2b62ac.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.PropertyReference` v2 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b6310.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L2b6316.  v0:= temp @kind object;
  #L2b6318.  if v0 == v2 then goto L2b6326;
  #L2b631c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b6322.  v0:= temp @kind object;
  #L2b6324.  return v0 @kind object;
  #L2b6326.  v0:= new `java.lang.StringBuilder`;
  #L2b632a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b6330.  v1:= "property " @kind object;
  #L2b6334.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b633a.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b6340.  v1:= temp @kind object;
  #L2b6342.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6348.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L2b634c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6352.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b6358.  v0:= temp @kind object;
  #L2b635a.  return v0 @kind object;
}
