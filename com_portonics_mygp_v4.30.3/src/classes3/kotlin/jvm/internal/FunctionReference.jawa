record `kotlin.jvm.internal.FunctionReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.CallableReference` @kind class, `kotlin.jvm.internal.FunctionBase` @kind interface, `kotlin.reflect.KFunction` @kind interface {
  `int` `kotlin.jvm.internal.FunctionReference.arity` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.FunctionReference.flags` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b4e80.  v2:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L2b4e84.  v3:= 0I;
  #L2b4e86.  v4:= 0I;
  #L2b4e88.  v5:= 0I;
  #L2b4e8a.  v6:= 0I;
  #L2b4e8c.  v0:= v7 @kind object;
  #L2b4e8e.  v1:= v8;
  #L2b4e90.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2b4e96.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 , `java.lang.Object` v9 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b4ea8.  v3:= 0I;
  #L2b4eaa.  v4:= 0I;
  #L2b4eac.  v5:= 0I;
  #L2b4eae.  v6:= 0I;
  #L2b4eb0.  v0:= v7 @kind object;
  #L2b4eb2.  v1:= v8;
  #L2b4eb4.  v2:= v9 @kind object;
  #L2b4eb6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2b4ebc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v8 @kind this, `int` v9 , `java.lang.Object` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `int` v14 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b4ed0.  v0:= v14 ^& 1;
  #L2b4ed4.  v1:= 1I;
  #L2b4ed6.  if v0 != v1 then goto L2b4ede;
  #L2b4eda.  v7:= 1I;
  #L2b4edc.  goto L2b4ee2;
  #L2b4ede.  v0:= 0I;
  #L2b4ee0.  v7:= 0I;
  #L2b4ee2.  v2:= v8 @kind object;
  #L2b4ee4.  v3:= v10 @kind object;
  #L2b4ee6.  v4:= v11 @kind object;
  #L2b4ee8.  v5:= v12 @kind object;
  #L2b4eea.  v6:= v13 @kind object;
  #L2b4eec.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2b4ef2.  v8.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int` := v9;
  #L2b4ef6.  v9:= v14 ^> 1;
  #L2b4efa.  v8.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int` := v9;
  #L2b4efe.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b4e28.  call temp:= `function`(v1) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind static;
  #L2b4e2e.  v0:= temp @kind object;
  #L2b4e30.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.FunctionReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b4bb0.  v0:= 1I;
  #L2b4bb2.  if v5 != v4 then goto L2b4bb8;
  #L2b4bb6.  return v0;
  #L2b4bb8.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.FunctionReference` @kind boolean;
  #L2b4bbc.  v2:= 0I;
  #L2b4bbe.  if v1 == 0 then goto L2b4c54;
  #L2b4bc2.  v5:= (`kotlin.jvm.internal.FunctionReference`) v5 @kind object;
  #L2b4bc6.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4bcc.  v1:= temp @kind object;
  #L2b4bce.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4bd4.  v3:= temp @kind object;
  #L2b4bd6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4bdc.  v1:= temp;
  #L2b4bde.  if v1 == 0 then goto L2b4c50;
  #L2b4be2.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b4be8.  v1:= temp @kind object;
  #L2b4bea.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b4bf0.  v3:= temp @kind object;
  #L2b4bf2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4bf8.  v1:= temp;
  #L2b4bfa.  if v1 == 0 then goto L2b4c50;
  #L2b4bfe.  v1:= v4.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int`;
  #L2b4c02.  v3:= v5.`kotlin.jvm.internal.FunctionReference.flags` @type ^`int`;
  #L2b4c06.  if v1 != v3 then goto L2b4c50;
  #L2b4c0a.  v1:= v4.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L2b4c0e.  v3:= v5.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L2b4c12.  if v1 != v3 then goto L2b4c50;
  #L2b4c16.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L2b4c1c.  v1:= temp @kind object;
  #L2b4c1e.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L2b4c24.  v3:= temp @kind object;
  #L2b4c26.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b4c2c.  v1:= temp;
  #L2b4c2e.  if v1 == 0 then goto L2b4c50;
  #L2b4c32.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b4c38.  v1:= temp @kind object;
  #L2b4c3a.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b4c40.  v5:= temp @kind object;
  #L2b4c42.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2b4c48.  v5:= temp;
  #L2b4c4a.  if v5 == 0 then goto L2b4c50;
  #L2b4c4e.  goto L2b4c52;
  #L2b4c50.  v0:= 0I;
  #L2b4c52.  return v0;
  #L2b4c54.  v0:= instanceof @variable v5 @type ^`kotlin.reflect.KFunction` @kind boolean;
  #L2b4c58.  if v0 == 0 then goto L2b4c6e;
  #L2b4c5c.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L2b4c62.  v0:= temp @kind object;
  #L2b4c64.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4c6a.  v5:= temp;
  #L2b4c6c.  return v5;
  #L2b4c6e.  return v2;
}
procedure `int` `getArity`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4d34.  v0:= v1.`kotlin.jvm.internal.FunctionReference.arity` @type ^`int`;
  #L2b4d38.  return v0;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L2b4e44.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4e4a.  v0:= temp @kind object;
  #L2b4e4c.  return v0 @kind object;
}
procedure `kotlin.reflect.KFunction` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b4e60.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/CallableReference;.getReflected:()Lkotlin/reflect/KCallable;` @kind super;
  #L2b4e66.  v0:= temp @kind object;
  #L2b4e68.  v0:= (`kotlin.reflect.KFunction`) v0 @kind object;
  #L2b4e6c.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4d4c.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b4d52.  v0:= temp @kind object;
  #L2b4d54.  if v0 != 0 then goto L2b4d5c;
  #L2b4d58.  v0:= 0I;
  #L2b4d5a.  goto L2b4d70;
  #L2b4d5c.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L2b4d62.  v0:= temp @kind object;
  #L2b4d64.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2b4d6a.  v0:= temp;
  #L2b4d6c.  v0:= v0 * 31;
  #L2b4d70.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4d76.  v1:= temp @kind object;
  #L2b4d78.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2b4d7e.  v1:= temp;
  #L2b4d80.  v0:= v0 + v1 @kind int;
  #L2b4d82.  v0:= v0 * 31;
  #L2b4d86.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L2b4d8c.  v1:= temp @kind object;
  #L2b4d8e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2b4d94.  v1:= temp;
  #L2b4d96.  v0:= v0 + v1 @kind int;
  #L2b4d98.  return v0;
}
procedure `boolean` `isExternal`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isExternal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4c80.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4c86.  v0:= temp @kind object;
  #L2b4c88.  call temp:= `isExternal`(v0) @signature `Lkotlin/reflect/KFunction;.isExternal:()Z` @kind interface;
  #L2b4c8e.  v0:= temp;
  #L2b4c90.  return v0;
}
procedure `boolean` `isInfix`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInfix:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4ca4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4caa.  v0:= temp @kind object;
  #L2b4cac.  call temp:= `isInfix`(v0) @signature `Lkotlin/reflect/KFunction;.isInfix:()Z` @kind interface;
  #L2b4cb2.  v0:= temp;
  #L2b4cb4.  return v0;
}
procedure `boolean` `isInline`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4cc8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4cce.  v0:= temp @kind object;
  #L2b4cd0.  call temp:= `isInline`(v0) @signature `Lkotlin/reflect/KFunction;.isInline:()Z` @kind interface;
  #L2b4cd6.  v0:= temp;
  #L2b4cd8.  return v0;
}
procedure `boolean` `isOperator`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isOperator:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4cec.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4cf2.  v0:= temp @kind object;
  #L2b4cf4.  call temp:= `isOperator`(v0) @signature `Lkotlin/reflect/KFunction;.isOperator:()Z` @kind interface;
  #L2b4cfa.  v0:= temp;
  #L2b4cfc.  return v0;
}
procedure `boolean` `isSuspend`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isSuspend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b4d10.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L2b4d16.  v0:= temp @kind object;
  #L2b4d18.  call temp:= `isSuspend`(v0) @signature `Lkotlin/reflect/KFunction;.isSuspend:()Z` @kind interface;
  #L2b4d1e.  v0:= temp;
  #L2b4d20.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4dac.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L2b4db2.  v0:= temp @kind object;
  #L2b4db4.  if v0 == v2 then goto L2b4dc2;
  #L2b4db8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b4dbe.  v0:= temp @kind object;
  #L2b4dc0.  return v0 @kind object;
  #L2b4dc2.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4dc8.  v0:= temp @kind object;
  #L2b4dca.  v1:= "<init>" @kind object;
  #L2b4dce.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b4dd4.  v0:= temp;
  #L2b4dd6.  if v0 == 0 then goto L2b4de0;
  #L2b4dda.  v0:= "constructor (Kotlin reflection is not available)" @kind object;
  #L2b4dde.  goto L2b4e14;
  #L2b4de0.  v0:= new `java.lang.StringBuilder`;
  #L2b4de4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b4dea.  v1:= "function " @kind object;
  #L2b4dee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4df4.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b4dfa.  v1:= temp @kind object;
  #L2b4dfc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4e02.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L2b4e06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b4e0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b4e12.  v0:= temp @kind object;
  #L2b4e14.  return v0 @kind object;
}
