record `kotlin.jvm.internal.SpreadBuilder` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `kotlin.jvm.internal.SpreadBuilder.list` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/jvm/internal/SpreadBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b6f88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b6f8e.  v0:= new `java.util.ArrayList`;
  #L2b6f92.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2b6f98.  v1.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` := v0 @kind object;
  #L2b6f9c.  return @kind void;
}
procedure `void` `add`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b6fb0.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b6fb4.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b6fba.  return @kind void;
}
procedure `void` `addSpread`(`kotlin.jvm.internal.SpreadBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.addSpread:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b6fcc.  if v4 != 0 then goto L2b6fd2;
  #L2b6fd0.  return @kind void;
  #L2b6fd2.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L2b6fd6.  if v0 == 0 then goto L2b7006;
  #L2b6fda.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L2b6fde.  v0:= length @variable v4;
  #L2b6fe0.  if v0 <= 0 then goto L2b707e;
  #L2b6fe4.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b6fe8.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2b6fee.  v1:= temp;
  #L2b6ff0.  v2:= length @variable v4;
  #L2b6ff2.  v1:= v1 + v2 @kind int;
  #L2b6ff4.  call `ensureCapacity`(v0, v1) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L2b6ffa.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b6ffe.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L2b7004.  goto L2b707e;
  #L2b7006.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L2b700a.  if v0 == 0 then goto L2b701e;
  #L2b700e.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b7012.  v4:= (`java.util.Collection`) v4 @kind object;
  #L2b7016.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L2b701c.  goto L2b707e;
  #L2b701e.  v0:= instanceof @variable v4 @type ^`java.lang.Iterable` @kind boolean;
  #L2b7022.  if v0 == 0 then goto L2b7052;
  #L2b7026.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L2b702a.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b7030.  v4:= temp @kind object;
  #L2b7032.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b7038.  v0:= temp;
  #L2b703a.  if v0 == 0 then goto L2b707e;
  #L2b703e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b7044.  v0:= temp @kind object;
  #L2b7046.  v1:= v3.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b704a.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b7050.  goto L2b7032;
  #L2b7052.  v0:= instanceof @variable v4 @type ^`java.util.Iterator` @kind boolean;
  #L2b7056.  if v0 == 0 then goto L2b7080;
  #L2b705a.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L2b705e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b7064.  v0:= temp;
  #L2b7066.  if v0 == 0 then goto L2b707e;
  #L2b706a.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b706e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b7074.  v1:= temp @kind object;
  #L2b7076.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b707c.  goto L2b705e;
  #L2b707e.  return @kind void;
  #L2b7080.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2b7084.  v1:= new `java.lang.StringBuilder`;
  #L2b7088.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b708e.  v2:= "Don't know how to spread " @kind object;
  #L2b7092.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b7098.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2b709e.  v4:= temp @kind object;
  #L2b70a0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b70a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b70ac.  v4:= temp @kind object;
  #L2b70ae.  call `<init>`(v0, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b70b4.  goto L2b70b8;
  #L2b70b6.  throw v0;
  #L2b70b8.  goto L2b70b6;
}
procedure `int` `size`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this) @signature `Lkotlin/jvm/internal/SpreadBuilder;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b6f48.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b6f4c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2b6f52.  v0:= temp;
  #L2b6f54.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b6f68.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.list` @type ^`java.util.ArrayList` @kind object;
  #L2b6f6c.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L2b6f72.  v2:= temp @kind object;
  #L2b6f74.  return v2 @kind object;
}
