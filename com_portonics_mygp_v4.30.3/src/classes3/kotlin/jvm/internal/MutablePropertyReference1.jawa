record `kotlin.jvm.internal.MutablePropertyReference1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.MutablePropertyReference` @kind class, `kotlin.reflect.KMutableProperty1` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference1` v0 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b5858.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:()V` @kind direct;
  #L2b585e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b5870.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2b5876.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b5888.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L2b588e.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b57b4.  call temp:= `mutableProperty1`(v1) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @kind static;
  #L2b57ba.  v0:= temp @kind object;
  #L2b57bc.  return v0 @kind object;
}
procedure `java.lang.Object` `getDelegate`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getDelegate:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5770.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b5776.  v0:= temp @kind object;
  #L2b5778.  v0:= (`kotlin.reflect.KMutableProperty1`) v0 @kind object;
  #L2b577c.  call temp:= `getDelegate`(v0, v2) @signature `Lkotlin/reflect/KProperty1;.getDelegate:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b5782.  v2:= temp @kind object;
  #L2b5784.  return v2 @kind object;
}
procedure `kotlin.reflect.KProperty$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getGetter:()Lkotlin/reflect/KProperty$Getter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2b5814.  call temp:= `getGetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @kind virtual;
  #L2b581a.  v0:= temp @kind object;
  #L2b581c.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty1$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5830.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b5836.  v0:= temp @kind object;
  #L2b5838.  v0:= (`kotlin.reflect.KMutableProperty1`) v0 @kind object;
  #L2b583c.  call temp:= `getGetter`(v0) @signature `Lkotlin/reflect/KProperty1;.getGetter:()Lkotlin/reflect/KProperty1$Getter;` @kind interface;
  #L2b5842.  v0:= temp @kind object;
  #L2b5844.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getSetter:()Lkotlin/reflect/KMutableProperty$Setter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2b57d0.  call temp:= `getSetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getSetter:()Lkotlin/reflect/KMutableProperty1$Setter;` @kind virtual;
  #L2b57d6.  v0:= temp @kind object;
  #L2b57d8.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty1$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.getSetter:()Lkotlin/reflect/KMutableProperty1$Setter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b57ec.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L2b57f2.  v0:= temp @kind object;
  #L2b57f4.  v0:= (`kotlin.reflect.KMutableProperty1`) v0 @kind object;
  #L2b57f8.  call temp:= `getSetter`(v0) @signature `Lkotlin/reflect/KMutableProperty1;.getSetter:()Lkotlin/reflect/KMutableProperty1$Setter;` @kind interface;
  #L2b57fe.  v0:= temp @kind object;
  #L2b5800.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.MutablePropertyReference1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2b5798.  call temp:= `get`(v0, v1) @signature `Lkotlin/reflect/KProperty1;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b579e.  v1:= temp @kind object;
  #L2b57a0.  return v1 @kind object;
}
