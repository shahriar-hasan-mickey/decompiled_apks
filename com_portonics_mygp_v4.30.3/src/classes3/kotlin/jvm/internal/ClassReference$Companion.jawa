record `kotlin.jvm.internal.ClassReference$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference$Companion` v0 @kind this) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b3850.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b3856.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b3868.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:()V` @kind direct;
  #L2b386e.  return @kind void;
}
procedure `java.lang.String` `getClassQualifiedName`(`kotlin.jvm.internal.ClassReference$Companion` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b3604.  v0:= "jClass" @kind object;
  #L2b3608.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b360e.  call temp:= `isAnonymousClass`(v3) @signature `Ljava/lang/Class;.isAnonymousClass:()Z` @kind virtual;
  #L2b3614.  v0:= temp;
  #L2b3616.  v1:= 0I;
  #L2b3618.  if v0 == 0 then goto L2b361e;
  #L2b361c.  goto L2b36c4;
  #L2b361e.  call temp:= `isLocalClass`(v3) @signature `Ljava/lang/Class;.isLocalClass:()Z` @kind virtual;
  #L2b3624.  v0:= temp;
  #L2b3626.  if v0 == 0 then goto L2b362c;
  #L2b362a.  goto L2b36c4;
  #L2b362c.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2b3632.  v0:= temp;
  #L2b3634.  if v0 == 0 then goto L2b369a;
  #L2b3638.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L2b363e.  v3:= temp @kind object;
  #L2b3640.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L2b3646.  v0:= temp;
  #L2b3648.  if v0 == 0 then goto L2b3690;
  #L2b364c.  call temp:= `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @kind static;
  #L2b3652.  v0:= temp @kind object;
  #L2b3654.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b365a.  v3:= temp @kind object;
  #L2b365c.  call temp:= `get`(v0, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b3662.  v3:= temp @kind object;
  #L2b3664.  v3:= (`java.lang.String`) v3 @kind object;
  #L2b3668.  if v3 == 0 then goto L2b3690;
  #L2b366c.  v0:= new `java.lang.StringBuilder`;
  #L2b3670.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3676.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b367c.  v3:= "Array" @kind object;
  #L2b3680.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3686.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b368c.  v3:= temp @kind object;
  #L2b368e.  v1:= v3 @kind object;
  #L2b3690.  if v1 != 0 then goto L2b36c4;
  #L2b3694.  v1:= "kotlin.Array" @kind object;
  #L2b3698.  goto L2b36c4;
  #L2b369a.  call temp:= `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @kind static;
  #L2b36a0.  v0:= temp @kind object;
  #L2b36a2.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b36a8.  v1:= temp @kind object;
  #L2b36aa.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b36b0.  v0:= temp @kind object;
  #L2b36b2.  v1:= v0 @kind object;
  #L2b36b4.  v1:= (`java.lang.String`) v1 @kind object;
  #L2b36b8.  if v1 != 0 then goto L2b36c4;
  #L2b36bc.  call temp:= `getCanonicalName`(v3) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2b36c2.  v1:= temp @kind object;
  #L2b36c4.  return v1 @kind object;
}
procedure `java.lang.String` `getClassSimpleName`(`kotlin.jvm.internal.ClassReference$Companion` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b36d8.  v0:= "jClass" @kind object;
  #L2b36dc.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b36e2.  call temp:= `isAnonymousClass`(v8) @signature `Ljava/lang/Class;.isAnonymousClass:()Z` @kind virtual;
  #L2b36e8.  v0:= temp;
  #L2b36ea.  v1:= "Array" @kind object;
  #L2b36ee.  v2:= 0I;
  #L2b36f0.  if v0 == 0 then goto L2b36fa;
  #L2b36f4.  v1:= v2 @kind object;
  #L2b36f6.  goto L2b383c;
  #L2b36fa.  call temp:= `isLocalClass`(v8) @signature `Ljava/lang/Class;.isLocalClass:()Z` @kind virtual;
  #L2b3700.  v0:= temp;
  #L2b3702.  if v0 == 0 then goto L2b37ae;
  #L2b3706.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2b370c.  v0:= temp @kind object;
  #L2b370e.  call temp:= `getEnclosingMethod`(v8) @signature `Ljava/lang/Class;.getEnclosingMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L2b3714.  v1:= temp @kind object;
  #L2b3716.  v3:= 2I;
  #L2b3718.  v4:= 36I;
  #L2b371c.  v5:= "name" @kind object;
  #L2b3720.  if v1 == 0 then goto L2b375c;
  #L2b3724.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b372a.  v6:= new `java.lang.StringBuilder`;
  #L2b372e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3734.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b373a.  v1:= temp @kind object;
  #L2b373c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3742.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3748.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b374e.  v1:= temp @kind object;
  #L2b3750.  call temp:= `substringAfter$default`(v0, v1, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b3756.  v1:= temp @kind object;
  #L2b3758.  if v1 != 0 then goto L2b383c;
  #L2b375c.  call temp:= `getEnclosingConstructor`(v8) @signature `Ljava/lang/Class;.getEnclosingConstructor:()Ljava/lang/reflect/Constructor;` @kind virtual;
  #L2b3762.  v8:= temp @kind object;
  #L2b3764.  if v8 == 0 then goto L2b379e;
  #L2b3768.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b376e.  v1:= new `java.lang.StringBuilder`;
  #L2b3772.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3778.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Constructor;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b377e.  v8:= temp @kind object;
  #L2b3780.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3786.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b378c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3792.  v8:= temp @kind object;
  #L2b3794.  call temp:= `substringAfter$default`(v0, v8, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b379a.  v1:= temp @kind object;
  #L2b379c.  goto L2b383c;
  #L2b379e.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b37a4.  call temp:= `substringAfter$default`(v0, v4, v2, v3, v2) @signature `Lkotlin/text/StringsKt;.substringAfter$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b37aa.  v1:= temp @kind object;
  #L2b37ac.  goto L2b383c;
  #L2b37ae.  call temp:= `isArray`(v8) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2b37b4.  v0:= temp;
  #L2b37b6.  if v0 == 0 then goto L2b3812;
  #L2b37ba.  call temp:= `getComponentType`(v8) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L2b37c0.  v8:= temp @kind object;
  #L2b37c2.  call temp:= `isPrimitive`(v8) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L2b37c8.  v0:= temp;
  #L2b37ca.  if v0 == 0 then goto L2b380c;
  #L2b37ce.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L2b37d4.  v0:= temp @kind object;
  #L2b37d6.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b37dc.  v8:= temp @kind object;
  #L2b37de.  call temp:= `get`(v0, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b37e4.  v8:= temp @kind object;
  #L2b37e6.  v8:= (`java.lang.String`) v8 @kind object;
  #L2b37ea.  if v8 == 0 then goto L2b380c;
  #L2b37ee.  v0:= new `java.lang.StringBuilder`;
  #L2b37f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b37f8.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b37fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3804.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b380a.  v2:= temp @kind object;
  #L2b380c.  if v2 != 0 then goto L2b36f4;
  #L2b3810.  goto L2b383c;
  #L2b3812.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L2b3818.  v0:= temp @kind object;
  #L2b381a.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2b3820.  v1:= temp @kind object;
  #L2b3822.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b3828.  v0:= temp @kind object;
  #L2b382a.  v1:= v0 @kind object;
  #L2b382c.  v1:= (`java.lang.String`) v1 @kind object;
  #L2b3830.  if v1 != 0 then goto L2b383c;
  #L2b3834.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2b383a.  v1:= temp @kind object;
  #L2b383c.  return v1 @kind object;
}
procedure `boolean` `isInstance`(`kotlin.jvm.internal.ClassReference$Companion` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.isInstance:(Ljava/lang/Object;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b3598.  v0:= "jClass" @kind object;
  #L2b359c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b35a2.  call temp:= `access$getFUNCTION_CLASSES$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getFUNCTION_CLASSES$cp:()Ljava/util/Map;` @kind static;
  #L2b35a8.  v0:= temp @kind object;
  #L2b35aa.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b35b0.  v0:= temp @kind object;
  #L2b35b2.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b35b6.  if v0 == 0 then goto L2b35cc;
  #L2b35ba.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2b35c0.  v3:= temp;
  #L2b35c2.  call temp:= `isFunctionOfArity`(v2, v3) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @kind static;
  #L2b35c8.  v2:= temp;
  #L2b35ca.  return v2;
  #L2b35cc.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L2b35d2.  v0:= temp;
  #L2b35d4.  if v0 == 0 then goto L2b35e8;
  #L2b35d8.  call temp:= `getKotlinClass`(v3) @signature `Lkotlin/jvm/JvmClassMappingKt;.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L2b35de.  v3:= temp @kind object;
  #L2b35e0.  call temp:= `getJavaObjectType`(v3) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L2b35e6.  v3:= temp @kind object;
  #L2b35e8.  call temp:= `isInstance`(v3, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b35ee.  v2:= temp;
  #L2b35f0.  return v2;
}
