record `kotlin.jvm.internal.CollectionToArray` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object`[] `@@kotlin.jvm.internal.CollectionToArray.EMPTY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.jvm.internal.CollectionToArray.MAX_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/CollectionToArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b45f8.  v0:= 0I;
  #L2b45fa.  v0:= new `java.lang.Object`[v0];
  #L2b45fe.  `@@kotlin.jvm.internal.CollectionToArray.EMPTY` @type ^`java.lang.Object`[] := v0 @kind object;
  #L2b4602.  return @kind void;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v4 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b430c.  v0:= "collection" @kind object;
  #L2b4310.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b4316.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2b431c.  v0:= temp;
  #L2b431e.  if v0 != 0 then goto L2b4328;
  #L2b4322.  v4:= `@@kotlin.jvm.internal.CollectionToArray.EMPTY` @type ^`java.lang.Object`[] @kind object;
  #L2b4326.  goto L2b43ca;
  #L2b4328.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b432e.  v4:= temp @kind object;
  #L2b4330.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4336.  v1:= temp;
  #L2b4338.  if v1 != 0 then goto L2b433e;
  #L2b433c.  goto L2b4322;
  #L2b433e.  v0:= new `java.lang.Object`[v0];
  #L2b4342.  v1:= 0I;
  #L2b4344.  v2:= v1 + 1;
  #L2b4348.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b434e.  v3:= temp @kind object;
  #L2b4350.  v0[v1]:= v3 @kind object;
  #L2b4354.  v1:= length @variable v0;
  #L2b4356.  if v2 < v1 then goto L2b43ac;
  #L2b435a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4360.  v1:= temp;
  #L2b4362.  if v1 != 0 then goto L2b436a;
  #L2b4366.  v4:= v0 @kind object;
  #L2b4368.  goto L2b43ca;
  #L2b436a.  v1:= v2 * 3;
  #L2b436e.  v1:= v1 + 1;
  #L2b4372.  v1:= v1 ^>> 1;
  #L2b4376.  v3:= 2147483645I;
  #L2b437c.  if v1 > v2 then goto L2b4398;
  #L2b4380.  if v2 >= v3 then goto L2b438c;
  #L2b4384.  v1:= 2147483645I;
  #L2b438a.  goto L2b4398;
  #L2b438c.  v4:= new `java.lang.OutOfMemoryError`;
  #L2b4390.  call `<init>`(v4) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2b4396.  throw v4;
  #L2b4398.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2b439e.  v0:= temp @kind object;
  #L2b43a0.  v1:= "copyOf(result, newSize)" @kind object;
  #L2b43a4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b43aa.  goto L2b43cc;
  #L2b43ac.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b43b2.  v1:= temp;
  #L2b43b4.  if v1 != 0 then goto L2b43cc;
  #L2b43b8.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2b43be.  v4:= temp @kind object;
  #L2b43c0.  v0:= "copyOf(result, size)" @kind object;
  #L2b43c4.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b43ca.  return v4 @kind object;
  #L2b43cc.  v1:= v2;
  #L2b43ce.  goto L2b4344;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b43e0.  v0:= "collection" @kind object;
  #L2b43e4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b43ea.  call temp:= `requireNonNull`(v6) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2b43f0.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2b43f6.  v0:= temp;
  #L2b43f8.  v1:= 0I;
  #L2b43fa.  v2:= 0I;
  #L2b43fc.  if v0 != 0 then goto L2b440e;
  #L2b4400.  v5:= length @variable v6;
  #L2b4402.  if v5 <= 0 then goto L2b44f0;
  #L2b4406.  v6[v2]:= v1 @kind object;
  #L2b440a.  goto L2b44f0;
  #L2b440e.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4414.  v5:= temp @kind object;
  #L2b4416.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b441c.  v3:= temp;
  #L2b441e.  if v3 != 0 then goto L2b442e;
  #L2b4422.  v5:= length @variable v6;
  #L2b4424.  if v5 <= 0 then goto L2b44f0;
  #L2b4428.  v6[v2]:= v1 @kind object;
  #L2b442c.  goto L2b44f0;
  #L2b442e.  v3:= length @variable v6;
  #L2b4430.  if v0 > v3 then goto L2b4438;
  #L2b4434.  v0:= v6 @kind object;
  #L2b4436.  goto L2b445e;
  #L2b4438.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2b443e.  v3:= temp @kind object;
  #L2b4440.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L2b4446.  v3:= temp @kind object;
  #L2b4448.  call temp:= `newInstance`(v3, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L2b444e.  v0:= temp @kind object;
  #L2b4450.  v3:= "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>" @kind object;
  #L2b4454.  call temp:= `requireNonNull`(v0, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b445a.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L2b445e.  v3:= v2 + 1;
  #L2b4462.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b4468.  v4:= temp @kind object;
  #L2b446a.  v0[v2]:= v4 @kind object;
  #L2b446e.  v2:= length @variable v0;
  #L2b4470.  if v3 < v2 then goto L2b44c6;
  #L2b4474.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b447a.  v2:= temp;
  #L2b447c.  if v2 != 0 then goto L2b4484;
  #L2b4480.  v6:= v0 @kind object;
  #L2b4482.  goto L2b44f0;
  #L2b4484.  v2:= v3 * 3;
  #L2b4488.  v2:= v2 + 1;
  #L2b448c.  v2:= v2 ^>> 1;
  #L2b4490.  v4:= 2147483645I;
  #L2b4496.  if v2 > v3 then goto L2b44b2;
  #L2b449a.  if v3 >= v4 then goto L2b44a6;
  #L2b449e.  v2:= 2147483645I;
  #L2b44a4.  goto L2b44b2;
  #L2b44a6.  v5:= new `java.lang.OutOfMemoryError`;
  #L2b44aa.  call `<init>`(v5) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2b44b0.  throw v5;
  #L2b44b2.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2b44b8.  v0:= temp @kind object;
  #L2b44ba.  v2:= "copyOf(result, newSize)" @kind object;
  #L2b44be.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b44c4.  goto L2b44f2;
  #L2b44c6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b44cc.  v2:= temp;
  #L2b44ce.  if v2 != 0 then goto L2b44f2;
  #L2b44d2.  if v0 != v6 then goto L2b44dc;
  #L2b44d6.  v6[v3]:= v1 @kind object;
  #L2b44da.  goto L2b44f0;
  #L2b44dc.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2b44e2.  v5:= temp @kind object;
  #L2b44e4.  v6:= "copyOf(result, size)" @kind object;
  #L2b44e8.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b44ee.  v6:= v5 @kind object;
  #L2b44f0.  return v6 @kind object;
  #L2b44f2.  v2:= v3;
  #L2b44f4.  goto L2b445e;
}
procedure `java.lang.Object`[] `toArrayImpl`(`java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArrayImpl:(Ljava/util/Collection;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2b4508.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2b450e.  v0:= temp;
  #L2b4510.  if v0 != 0 then goto L2b4522;
  #L2b4514.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2b451a.  v2:= temp @kind object;
  #L2b451c.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2b4520.  return v2 @kind object;
  #L2b4522.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4528.  v2:= temp @kind object;
  #L2b452a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4530.  v1:= temp;
  #L2b4532.  if v1 != 0 then goto L2b4544;
  #L2b4536.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2b453c.  v2:= temp @kind object;
  #L2b453e.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2b4542.  return v2 @kind object;
  #L2b4544.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b454a.  v3:= temp @kind object;
  #L2b454c.  call temp:= `invoke`(v4, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b4552.  v3:= temp @kind object;
  #L2b4554.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L2b4558.  v4:= 0I;
  #L2b455a.  v0:= v4 + 1;
  #L2b455e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b4564.  v1:= temp @kind object;
  #L2b4566.  v3[v4]:= v1 @kind object;
  #L2b456a.  v4:= length @variable v3;
  #L2b456c.  if v0 < v4 then goto L2b45c0;
  #L2b4570.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4576.  v4:= temp;
  #L2b4578.  if v4 != 0 then goto L2b457e;
  #L2b457c.  return v3 @kind object;
  #L2b457e.  v4:= v0 * 3;
  #L2b4582.  v4:= v4 + 1;
  #L2b4586.  v4:= v4 ^>> 1;
  #L2b458a.  v1:= 2147483645I;
  #L2b4590.  if v4 > v0 then goto L2b45ac;
  #L2b4594.  if v0 >= v1 then goto L2b45a0;
  #L2b4598.  v4:= 2147483645I;
  #L2b459e.  goto L2b45ac;
  #L2b45a0.  v2:= new `java.lang.OutOfMemoryError`;
  #L2b45a4.  call `<init>`(v2) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2b45aa.  throw v2;
  #L2b45ac.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L2b45b2.  v3:= temp @kind object;
  #L2b45b4.  v4:= "copyOf(result, newSize)" @kind object;
  #L2b45b8.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b45be.  goto L2b45e2;
  #L2b45c0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b45c6.  v4:= temp;
  #L2b45c8.  if v4 != 0 then goto L2b45e2;
  #L2b45cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b45d2.  v2:= temp @kind object;
  #L2b45d4.  call temp:= `invoke`(v5, v3, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b45da.  v2:= temp @kind object;
  #L2b45dc.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L2b45e0.  return v2 @kind object;
  #L2b45e2.  v4:= v0;
  #L2b45e4.  goto L2b455a;
}
