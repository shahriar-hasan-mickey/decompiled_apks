record `kotlin.UShortArray$Iterator` @kind class @AccessFlag FINAL extends `kotlin.collections.UShortIterator` @kind class {
  `short`[] `kotlin.UShortArray$Iterator.array` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.UShortArray$Iterator.index` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.UShortArray$Iterator` v1 @kind this, `short`[] v2 @kind object) @signature `Lkotlin/UShortArray$Iterator;.<init>:([S)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29cb10.  v0:= "array" @kind object;
  #L29cb14.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29cb1a.  call `<init>`(v1) @signature `Lkotlin/collections/UShortIterator;.<init>:()V` @kind direct;
  #L29cb20.  v1.`kotlin.UShortArray$Iterator.array` @type ^`short`[] := v2 @kind object;
  #L29cb24.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.UShortArray$Iterator` v2 @kind this) @signature `Lkotlin/UShortArray$Iterator;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29ca9c.  v0:= v2.`kotlin.UShortArray$Iterator.index` @type ^`int`;
  #L29caa0.  v1:= v2.`kotlin.UShortArray$Iterator.array` @type ^`short`[] @kind object;
  #L29caa4.  v1:= length @variable v1;
  #L29caa6.  if v0 >= v1 then goto L29caae;
  #L29caaa.  v0:= 1I;
  #L29caac.  goto L29cab0;
  #L29caae.  v0:= 0I;
  #L29cab0.  return v0;
}
procedure `short` `nextUShort-Mh2AYeg`(`kotlin.UShortArray$Iterator` v3 @kind this) @signature `Lkotlin/UShortArray$Iterator;.nextUShort-Mh2AYeg:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29cac4.  v0:= v3.`kotlin.UShortArray$Iterator.index` @type ^`int`;
  #L29cac8.  v1:= v3.`kotlin.UShortArray$Iterator.array` @type ^`short`[] @kind object;
  #L29cacc.  v2:= length @variable v1;
  #L29cace.  if v0 >= v2 then goto L29cae8;
  #L29cad2.  v2:= v0 + 1;
  #L29cad6.  v3.`kotlin.UShortArray$Iterator.index` @type ^`int` := v2;
  #L29cada.  v0:= v1[v0] @kind short;
  #L29cade.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29cae4.  v0:= temp;
  #L29cae6.  return v0;
  #L29cae8.  v0:= new `java.util.NoSuchElementException`;
  #L29caec.  v1:= v3.`kotlin.UShortArray$Iterator.index` @type ^`int`;
  #L29caf0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L29caf6.  v1:= temp @kind object;
  #L29caf8.  call `<init>`(v0, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29cafe.  throw v0;
}
