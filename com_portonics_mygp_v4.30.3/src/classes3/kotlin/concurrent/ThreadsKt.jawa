record `kotlin.concurrent.ThreadsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `getOrSet`(`java.lang.ThreadLocal` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/concurrent/ThreadsKt;.getOrSet:(Ljava/lang/ThreadLocal;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2acb9c.  v0:= "<this>" @kind object;
  #L2acba0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2acba6.  v0:= "default" @kind object;
  #L2acbaa.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2acbb0.  call temp:= `get`(v1) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L2acbb6.  v0:= temp @kind object;
  #L2acbb8.  if v0 != 0 then goto L2acbca;
  #L2acbbc.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2acbc2.  v0:= temp @kind object;
  #L2acbc4.  call `set`(v1, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L2acbca.  return v0 @kind object;
}
procedure `java.lang.Thread` `thread`(`boolean` v1 , `boolean` v2 , `java.lang.ClassLoader` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `kotlin.jvm.functions.Function0` v6 @kind object) @signature `Lkotlin/concurrent/ThreadsKt;.thread:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;)Ljava/lang/Thread;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2acc48.  v0:= "block" @kind object;
  #L2acc4c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2acc52.  v0:= new `kotlin.concurrent.ThreadsKt$thread$thread$1`;
  #L2acc56.  call `<init>`(v0, v6) @signature `Lkotlin/concurrent/ThreadsKt$thread$thread$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L2acc5c.  if v2 == 0 then goto L2acc68;
  #L2acc60.  v2:= 1I;
  #L2acc62.  call `setDaemon`(v0, v2) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L2acc68.  if v5 <= 0 then goto L2acc72;
  #L2acc6c.  call `setPriority`(v0, v5) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L2acc72.  if v4 == 0 then goto L2acc7c;
  #L2acc76.  call `setName`(v0, v4) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L2acc7c.  if v3 == 0 then goto L2acc86;
  #L2acc80.  call `setContextClassLoader`(v0, v3) @signature `Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V` @kind virtual;
  #L2acc86.  if v1 == 0 then goto L2acc90;
  #L2acc8a.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L2acc90.  return v0 @kind object;
}
procedure `java.lang.Thread` `thread$default`(`boolean` v6 , `boolean` v7 , `java.lang.ClassLoader` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `kotlin.jvm.functions.Function0` v11 @kind object, `int` v12 , `java.lang.Object` v13 @kind object) @signature `Lkotlin/concurrent/ThreadsKt;.thread$default:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/Thread;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2acbdc.  v13:= v12 ^& 1;
  #L2acbe0.  if v13 == 0 then goto L2acbea;
  #L2acbe4.  v6:= 1I;
  #L2acbe6.  v0:= 1I;
  #L2acbe8.  goto L2acbec;
  #L2acbea.  v0:= v6;
  #L2acbec.  v6:= v12 ^& 2;
  #L2acbf0.  if v6 == 0 then goto L2acbfa;
  #L2acbf4.  v7:= 0I;
  #L2acbf6.  v1:= 0I;
  #L2acbf8.  goto L2acbfc;
  #L2acbfa.  v1:= v7;
  #L2acbfc.  v6:= v12 ^& 4;
  #L2acc00.  v7:= 0I;
  #L2acc02.  if v6 == 0 then goto L2acc0a;
  #L2acc06.  v2:= v7 @kind object;
  #L2acc08.  goto L2acc0c;
  #L2acc0a.  v2:= v8 @kind object;
  #L2acc0c.  v6:= v12 ^& 8;
  #L2acc10.  if v6 == 0 then goto L2acc18;
  #L2acc14.  v3:= v7 @kind object;
  #L2acc16.  goto L2acc1a;
  #L2acc18.  v3:= v9 @kind object;
  #L2acc1a.  v6:= v12 ^& 16;
  #L2acc1e.  if v6 == 0 then goto L2acc28;
  #L2acc22.  v10:= -1I;
  #L2acc24.  v4:= -1I;
  #L2acc26.  goto L2acc2a;
  #L2acc28.  v4:= v10;
  #L2acc2a.  v5:= v11 @kind object;
  #L2acc2c.  call temp:= `thread`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/concurrent/ThreadsKt;.thread:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;)Ljava/lang/Thread;` @kind static;
  #L2acc32.  v6:= temp @kind object;
  #L2acc34.  return v6 @kind object;
}
