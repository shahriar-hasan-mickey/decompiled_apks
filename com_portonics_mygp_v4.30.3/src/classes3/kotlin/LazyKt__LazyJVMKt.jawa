record `kotlin.LazyKt__LazyJVMKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.LazyKt__LazyJVMKt` v0 @kind this) @signature `Lkotlin/LazyKt__LazyJVMKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L296a58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L296a5e.  return @kind void;
}
procedure `kotlin.Lazy` `lazy`(`java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L29698c.  v0:= "initializer" @kind object;
  #L296990.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L296996.  v0:= new `kotlin.SynchronizedLazyImpl`;
  #L29699a.  call `<init>`(v0, v2, v1) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V` @kind direct;
  #L2969a0.  return v0 @kind object;
}
procedure `kotlin.Lazy` `lazy`(`kotlin.LazyThreadSafetyMode` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Lkotlin/LazyThreadSafetyMode;Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2969b4.  v0:= "mode" @kind object;
  #L2969b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2969be.  v0:= "initializer" @kind object;
  #L2969c2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2969c8.  v0:= `@@kotlin.LazyKt__LazyJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L2969cc.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2969d2.  v2:= temp;
  #L2969d4.  v2:= v0[v2];
  #L2969d8.  v0:= 1I;
  #L2969da.  v1:= 2I;
  #L2969dc.  if v2 == v0 then goto L296a0e;
  #L2969e0.  if v2 == v1 then goto L296a02;
  #L2969e4.  v0:= 3I;
  #L2969e6.  if v2 != v0 then goto L2969f6;
  #L2969ea.  v2:= new `kotlin.UnsafeLazyImpl`;
  #L2969ee.  call `<init>`(v2, v3) @signature `Lkotlin/UnsafeLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L2969f4.  goto L296a1a;
  #L2969f6.  v2:= new `kotlin.NoWhenBranchMatchedException`;
  #L2969fa.  call `<init>`(v2) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L296a00.  throw v2;
  #L296a02.  v2:= new `kotlin.SafePublicationLazyImpl`;
  #L296a06.  call `<init>`(v2, v3) @signature `Lkotlin/SafePublicationLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L296a0c.  goto L296a1a;
  #L296a0e.  v2:= new `kotlin.SynchronizedLazyImpl`;
  #L296a12.  v0:= 0I;
  #L296a14.  call `<init>`(v2, v3, v0, v1, v0) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L296a1a.  return v2 @kind object;
}
procedure `kotlin.Lazy` `lazy`(`kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/LazyKt__LazyJVMKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L296a2c.  v0:= "initializer" @kind object;
  #L296a30.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L296a36.  v0:= new `kotlin.SynchronizedLazyImpl`;
  #L296a3a.  v1:= 0I;
  #L296a3c.  v2:= 2I;
  #L296a3e.  call `<init>`(v0, v3, v1, v2, v1) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L296a44.  return v0 @kind object;
}
