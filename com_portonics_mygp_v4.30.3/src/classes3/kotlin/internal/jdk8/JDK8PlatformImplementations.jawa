record `kotlin.internal.jdk8.JDK8PlatformImplementations` @kind class @AccessFlag PUBLIC extends `kotlin.internal.jdk7.JDK7PlatformImplementations` @kind class {
}
procedure `void` `<init>`(`kotlin.internal.jdk8.JDK8PlatformImplementations` v0 @kind this) @signature `Lkotlin/internal/jdk8/JDK8PlatformImplementations;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b0164.  call `<init>`(v0) @signature `Lkotlin/internal/jdk7/JDK7PlatformImplementations;.<init>:()V` @kind direct;
  #L2b016a.  return @kind void;
}
procedure `kotlin.random.Random` `defaultPlatformRandom`(`kotlin.internal.jdk8.JDK8PlatformImplementations` v1 @kind this) @signature `Lkotlin/internal/jdk8/JDK8PlatformImplementations;.defaultPlatformRandom:()Lkotlin/random/Random;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b00ac.  v0:= new `kotlin.random.jdk8.PlatformThreadLocalRandom`;
  #L2b00b0.  call `<init>`(v0) @signature `Lkotlin/random/jdk8/PlatformThreadLocalRandom;.<init>:()V` @kind direct;
  #L2b00b6.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroup` `getMatchResultNamedGroup`(`kotlin.internal.jdk8.JDK8PlatformImplementations` v4 @kind this, `java.util.regex.MatchResult` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lkotlin/internal/jdk8/JDK8PlatformImplementations;.getMatchResultNamedGroup:(Ljava/util/regex/MatchResult;Ljava/lang/String;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b00c8.  v0:= "matchResult" @kind object;
  #L2b00cc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b00d2.  v0:= "name" @kind object;
  #L2b00d6.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b00dc.  v0:= instanceof @variable v5 @type ^`java.util.regex.Matcher` @kind boolean;
  #L2b00e0.  v1:= 0I;
  #L2b00e2.  if v0 == 0 then goto L2b00ec;
  #L2b00e6.  v5:= (`java.util.regex.Matcher`) v5 @kind object;
  #L2b00ea.  goto L2b00ee;
  #L2b00ec.  v5:= v1 @kind object;
  #L2b00ee.  if v5 == 0 then goto L2b0142;
  #L2b00f2.  v0:= new `kotlin.ranges.IntRange`;
  #L2b00f6.  call temp:= `start`(v5, v6) @signature `Ljava/util/regex/Matcher;.start:(Ljava/lang/String;)I` @kind virtual;
  #L2b00fc.  v2:= temp;
  #L2b00fe.  call temp:= `end`(v5, v6) @signature `Ljava/util/regex/Matcher;.end:(Ljava/lang/String;)I` @kind virtual;
  #L2b0104.  v3:= temp;
  #L2b0106.  v3:= v3 + -1;
  #L2b010a.  call `<init>`(v0, v2, v3) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L2b0110.  call temp:= `getStart`(v0) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L2b0116.  v2:= temp @kind object;
  #L2b0118.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b011e.  v2:= temp;
  #L2b0120.  if v2 < 0 then goto L2b0140;
  #L2b0124.  v1:= new `kotlin.text.MatchGroup`;
  #L2b0128.  call temp:= `group`(v5, v6) @signature `Ljava/util/regex/Matcher;.group:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b012e.  v5:= temp @kind object;
  #L2b0130.  v6:= "matcher.group(name)" @kind object;
  #L2b0134.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b013a.  call `<init>`(v1, v5, v0) @signature `Lkotlin/text/MatchGroup;.<init>:(Ljava/lang/String;Lkotlin/ranges/IntRange;)V` @kind direct;
  #L2b0140.  return v1 @kind object;
  #L2b0142.  v5:= new `java.lang.UnsupportedOperationException`;
  #L2b0146.  v6:= "Retrieving groups by name is not supported on this platform." @kind object;
  #L2b014a.  call `<init>`(v5, v6) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b0150.  throw v5;
}
