record `kotlin.internal.PlatformImplementations` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.internal.PlatformImplementations` v0 @kind this) @signature `Lkotlin/internal/PlatformImplementations;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2afce8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2afcee.  return @kind void;
}
procedure `void` `addSuppressed`(`kotlin.internal.PlatformImplementations` v3 @kind this, `java.lang.Throwable` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlin/internal/PlatformImplementations;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2afd00.  v0:= "cause" @kind object;
  #L2afd04.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2afd0a.  v0:= "exception" @kind object;
  #L2afd0e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2afd14.  v0:= `@@kotlin.internal.PlatformImplementations$ReflectThrowable.addSuppressed` @type ^`java.lang.reflect.Method` @kind object;
  #L2afd18.  if v0 == 0 then goto L2afd2e;
  #L2afd1c.  v1:= 1I;
  #L2afd1e.  v1:= new `java.lang.Object`[v1];
  #L2afd22.  v2:= 0I;
  #L2afd24.  v1[v2]:= v5 @kind object;
  #L2afd28.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2afd2e.  return @kind void;
}
procedure `kotlin.random.Random` `defaultPlatformRandom`(`kotlin.internal.PlatformImplementations` v1 @kind this) @signature `Lkotlin/internal/PlatformImplementations;.defaultPlatformRandom:()Lkotlin/random/Random;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2afc98.  v0:= new `kotlin.random.FallbackThreadLocalRandom`;
  #L2afc9c.  call `<init>`(v0) @signature `Lkotlin/random/FallbackThreadLocalRandom;.<init>:()V` @kind direct;
  #L2afca2.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroup` `getMatchResultNamedGroup`(`kotlin.internal.PlatformImplementations` v1 @kind this, `java.util.regex.MatchResult` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/internal/PlatformImplementations;.getMatchResultNamedGroup:(Ljava/util/regex/MatchResult;Ljava/lang/String;)Lkotlin/text/MatchGroup;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2afcb4.  v0:= "matchResult" @kind object;
  #L2afcb8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2afcbe.  v2:= "name" @kind object;
  #L2afcc2.  call `checkNotNullParameter`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2afcc8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L2afccc.  v3:= "Retrieving groups by name is not supported on this platform." @kind object;
  #L2afcd0.  call `<init>`(v2, v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afcd6.  throw v2;
}
procedure `java.util.List` `getSuppressed`(`kotlin.internal.PlatformImplementations` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlin/internal/PlatformImplementations;.getSuppressed:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2afc48.  v0:= "exception" @kind object;
  #L2afc4c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2afc52.  v0:= `@@kotlin.internal.PlatformImplementations$ReflectThrowable.getSuppressed` @type ^`java.lang.reflect.Method` @kind object;
  #L2afc56.  if v0 == 0 then goto L2afc7c;
  #L2afc5a.  v1:= 0I;
  #L2afc5c.  v1:= new `java.lang.Object`[v1];
  #L2afc60.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2afc66.  v3:= temp @kind object;
  #L2afc68.  if v3 == 0 then goto L2afc7c;
  #L2afc6c.  v3:= (`java.lang.Throwable`[]) v3 @kind object;
  #L2afc70.  call temp:= `asList`(v3) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2afc76.  v3:= temp @kind object;
  #L2afc78.  if v3 != 0 then goto L2afc84;
  #L2afc7c.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L2afc82.  v3:= temp @kind object;
  #L2afc84.  return v3 @kind object;
}
