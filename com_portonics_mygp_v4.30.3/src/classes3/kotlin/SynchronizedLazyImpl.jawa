record `kotlin.SynchronizedLazyImpl` @kind class @AccessFlag FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Object` `kotlin.SynchronizedLazyImpl._value` @AccessFlag PRIVATE_VOLATILE;
  `kotlin.jvm.functions.Function0` `kotlin.SynchronizedLazyImpl.initializer` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlin.SynchronizedLazyImpl.lock` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.SynchronizedLazyImpl` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2990ec.  v0:= "initializer" @kind object;
  #L2990f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2990f6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2990fc.  v1.`kotlin.SynchronizedLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L299100.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L299104.  v1.`kotlin.SynchronizedLazyImpl._value` @type ^`java.lang.Object` := v2 @kind object;
  #L299108.  if v3 != 0 then goto L29910e;
  #L29910c.  v3:= v1 @kind object;
  #L29910e.  v1.`kotlin.SynchronizedLazyImpl.lock` @type ^`java.lang.Object` := v3 @kind object;
  #L299112.  return @kind void;
}
procedure `void` `<init>`(`kotlin.SynchronizedLazyImpl` v0 @kind this, `kotlin.jvm.functions.Function0` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L299124.  v3:= v3 ^& 2;
  #L299128.  if v3 == 0 then goto L29912e;
  #L29912c.  v2:= 0I;
  #L29912e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/SynchronizedLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V` @kind direct;
  #L299134.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.SynchronizedLazyImpl` v2 @kind this) @signature `Lkotlin/SynchronizedLazyImpl;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L299094.  v0:= new `kotlin.InitializedLazyImpl`;
  #L299098.  call temp:= `getValue`(v2) @signature `Lkotlin/SynchronizedLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L29909e.  v1:= temp @kind object;
  #L2990a0.  call `<init>`(v0, v1) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2990a6.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.SynchronizedLazyImpl` v3 @kind this) @signature `Lkotlin/SynchronizedLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L299034.  v0:= v3.`kotlin.SynchronizedLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L299038.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L29903c.  if v0 == v1 then goto L299042;
  #L299040.  return v0 @kind object;
  #L299042.  v0:= v3.`kotlin.SynchronizedLazyImpl.lock` @type ^`java.lang.Object` @kind object;
  #L299046.  @monitorenter v0
  #L299048.  v2:= v3.`kotlin.SynchronizedLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L29904c.  if v2 == v1 then goto L299052;
  #L299050.  goto L29906e;
  #L299052.  v1:= v3.`kotlin.SynchronizedLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L299056.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L29905c.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L299062.  v2:= temp @kind object;
  #L299064.  v3.`kotlin.SynchronizedLazyImpl._value` @type ^`java.lang.Object` := v2 @kind object;
  #L299068.  v1:= 0I;
  #L29906a.  v3.`kotlin.SynchronizedLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L29906e.  @monitorexit v0
  #L299070.  return v2 @kind object;
  #L299072.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L299074.  @monitorexit v0
  #L299076.  throw v1;
  catch `java.lang.Throwable` @[L299048..L29906e] goto L299072;
}
procedure `boolean` `isInitialized`(`kotlin.SynchronizedLazyImpl` v2 @kind this) @signature `Lkotlin/SynchronizedLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L299010.  v0:= v2.`kotlin.SynchronizedLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L299014.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L299018.  if v0 == v1 then goto L299020;
  #L29901c.  v0:= 1I;
  #L29901e.  goto L299022;
  #L299020.  v0:= 0I;
  #L299022.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.SynchronizedLazyImpl` v1 @kind this) @signature `Lkotlin/SynchronizedLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2990b8.  call temp:= `isInitialized`(v1) @signature `Lkotlin/SynchronizedLazyImpl;.isInitialized:()Z` @kind virtual;
  #L2990be.  v0:= temp;
  #L2990c0.  if v0 == 0 then goto L2990d6;
  #L2990c4.  call temp:= `getValue`(v1) @signature `Lkotlin/SynchronizedLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L2990ca.  v0:= temp @kind object;
  #L2990cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2990d2.  v0:= temp @kind object;
  #L2990d4.  goto L2990da;
  #L2990d6.  v0:= "Lazy value not initialized yet." @kind object;
  #L2990da.  return v0 @kind object;
}
