record `kotlin.PreconditionsKt__PreconditionsKt` @kind class @AccessFlag  extends `kotlin.PreconditionsKt__AssertionsJVMKt` @kind class {
}
procedure `void` `<init>`(`kotlin.PreconditionsKt__PreconditionsKt` v0 @kind this) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29835c.  call `<init>`(v0) @signature `Lkotlin/PreconditionsKt__AssertionsJVMKt;.<init>:()V` @kind direct;
  #L298362.  return @kind void;
}
procedure `void` `check`(`boolean` v1 ) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.check:(Z)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L298374.  if v1 == 0 then goto L29837a;
  #L298378.  return @kind void;
  #L29837a.  v1:= new `java.lang.IllegalStateException`;
  #L29837e.  v0:= "Check failed." @kind object;
  #L298382.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L298388.  v0:= temp @kind object;
  #L29838a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L298390.  throw v1;
}
procedure `void` `check`(`boolean` v1 , `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.check:(ZLkotlin/jvm/functions/Function0;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2983a4.  v0:= "lazyMessage" @kind object;
  #L2983a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2983ae.  if v1 == 0 then goto L2983b4;
  #L2983b2.  return @kind void;
  #L2983b4.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L2983ba.  v1:= temp @kind object;
  #L2983bc.  v2:= new `java.lang.IllegalStateException`;
  #L2983c0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2983c6.  v1:= temp @kind object;
  #L2983c8.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2983ce.  throw v2;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L298254.  if v1 == 0 then goto L29825a;
  #L298258.  return v1 @kind object;
  #L29825a.  v1:= new `java.lang.IllegalStateException`;
  #L29825e.  v0:= "Required value was null." @kind object;
  #L298262.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L298268.  v0:= temp @kind object;
  #L29826a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L298270.  throw v1;
}
procedure `java.lang.Object` `checkNotNull`(`java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.checkNotNull:(Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L298284.  v0:= "lazyMessage" @kind object;
  #L298288.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29828e.  if v1 == 0 then goto L298294;
  #L298292.  return v1 @kind object;
  #L298294.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L29829a.  v1:= temp @kind object;
  #L29829c.  v2:= new `java.lang.IllegalStateException`;
  #L2982a0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2982a6.  v1:= temp @kind object;
  #L2982a8.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2982ae.  throw v2;
}
procedure `java.lang.Void` `error`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.error:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L29832c.  v0:= "message" @kind object;
  #L298330.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L298336.  v0:= new `java.lang.IllegalStateException`;
  #L29833a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L298340.  v1:= temp @kind object;
  #L298342.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L298348.  throw v0;
}
procedure `void` `require`(`boolean` v1 ) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.require:(Z)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2983e0.  if v1 == 0 then goto L2983e6;
  #L2983e4.  return @kind void;
  #L2983e6.  v1:= new `java.lang.IllegalArgumentException`;
  #L2983ea.  v0:= "Failed requirement." @kind object;
  #L2983ee.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2983f4.  v0:= temp @kind object;
  #L2983f6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2983fc.  throw v1;
}
procedure `void` `require`(`boolean` v1 , `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.require:(ZLkotlin/jvm/functions/Function0;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L298410.  v0:= "lazyMessage" @kind object;
  #L298414.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29841a.  if v1 == 0 then goto L298420;
  #L29841e.  return @kind void;
  #L298420.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L298426.  v1:= temp @kind object;
  #L298428.  v2:= new `java.lang.IllegalArgumentException`;
  #L29842c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L298432.  v1:= temp @kind object;
  #L298434.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29843a.  throw v2;
}
procedure `java.lang.Object` `requireNotNull`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.requireNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2982c0.  if v1 == 0 then goto L2982c6;
  #L2982c4.  return v1 @kind object;
  #L2982c6.  v1:= new `java.lang.IllegalArgumentException`;
  #L2982ca.  v0:= "Required value was null." @kind object;
  #L2982ce.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2982d4.  v0:= temp @kind object;
  #L2982d6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2982dc.  throw v1;
}
procedure `java.lang.Object` `requireNotNull`(`java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/PreconditionsKt__PreconditionsKt;.requireNotNull:(Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2982f0.  v0:= "lazyMessage" @kind object;
  #L2982f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2982fa.  if v1 == 0 then goto L298300;
  #L2982fe.  return v1 @kind object;
  #L298300.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L298306.  v1:= temp @kind object;
  #L298308.  v2:= new `java.lang.IllegalArgumentException`;
  #L29830c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L298312.  v1:= temp @kind object;
  #L298314.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29831a.  throw v2;
}
