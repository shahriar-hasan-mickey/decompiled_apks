record `kotlin.ranges.ULongProgression` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `long` `kotlin.ranges.ULongProgression.first` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.ULongProgression.last` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.ULongProgression.step` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ranges.ULongProgression$Companion` `@@kotlin.ranges.ULongProgression.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/ULongProgression;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bd6f8.  v0:= new `kotlin.ranges.ULongProgression$Companion`;
  #L2bd6fc.  v1:= 0I;
  #L2bd6fe.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/ULongProgression$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bd704.  `@@kotlin.ranges.ULongProgression.Companion` @type ^`kotlin.ranges.ULongProgression$Companion` := v0 @kind object;
  #L2bd708.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongProgression` v3 @kind this, `long` v4 , `long` v6 , `long` v8 ) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bd71c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd722.  v0:= 0L;
  #L2bd726.  v2:= lcmp(v8, v0);
  #L2bd72a.  if v2 == 0 then goto L2bd760;
  #L2bd72e.  v0:= -9223372036854775808L;
  #L2bd732.  v2:= lcmp(v8, v0);
  #L2bd736.  if v2 == 0 then goto L2bd750;
  #L2bd73a.  v3.`kotlin.ranges.ULongProgression.first` @type ^`long` := v4 @kind wide;
  #L2bd73e.  call temp:= `getProgressionLastElement-7ftBX0g`(v4, v6, v8) @signature `Lkotlin/internal/UProgressionUtilKt;.getProgressionLastElement-7ftBX0g:(JJJ)J` @kind static;
  #L2bd744.  v4:= temp @kind wide;
  #L2bd746.  v3.`kotlin.ranges.ULongProgression.last` @type ^`long` := v4 @kind wide;
  #L2bd74a.  v3.`kotlin.ranges.ULongProgression.step` @type ^`long` := v8 @kind wide;
  #L2bd74e.  return @kind void;
  #L2bd750.  v4:= new `java.lang.IllegalArgumentException`;
  #L2bd754.  v5:= "Step must be greater than Long.MIN_VALUE to avoid overflow on negation." @kind object;
  #L2bd758.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bd75e.  throw v4;
  #L2bd760.  v4:= new `java.lang.IllegalArgumentException`;
  #L2bd764.  v5:= "Step must be non-zero." @kind object;
  #L2bd768.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bd76e.  throw v4;
}
procedure `void` `<init>`(`kotlin.ranges.ULongProgression` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v7 @kind object) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2bd780.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJ)V` @kind direct;
  #L2bd786.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.ranges.ULongProgression` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/ranges/ULongProgression;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bd458.  v0:= instanceof @variable v6 @type ^`kotlin.ranges.ULongProgression` @kind boolean;
  #L2bd45c.  if v0 == 0 then goto L2bd4c6;
  #L2bd460.  call temp:= `isEmpty`(v5) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L2bd466.  v0:= temp;
  #L2bd468.  if v0 == 0 then goto L2bd47e;
  #L2bd46c.  v0:= v6 @kind object;
  #L2bd46e.  v0:= (`kotlin.ranges.ULongProgression`) v0 @kind object;
  #L2bd472.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L2bd478.  v0:= temp;
  #L2bd47a.  if v0 != 0 then goto L2bd4c2;
  #L2bd47e.  call temp:= `getFirst-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd484.  v0:= temp @kind wide;
  #L2bd486.  v6:= (`kotlin.ranges.ULongProgression`) v6 @kind object;
  #L2bd48a.  call temp:= `getFirst-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd490.  v2:= temp @kind wide;
  #L2bd492.  v4:= lcmp(v0, v2);
  #L2bd496.  if v4 != 0 then goto L2bd4c6;
  #L2bd49a.  call temp:= `getLast-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd4a0.  v0:= temp @kind wide;
  #L2bd4a2.  call temp:= `getLast-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd4a8.  v2:= temp @kind wide;
  #L2bd4aa.  v4:= lcmp(v0, v2);
  #L2bd4ae.  if v4 != 0 then goto L2bd4c6;
  #L2bd4b2.  v0:= v5.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd4b6.  v2:= v6.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd4ba.  v6:= lcmp(v0, v2);
  #L2bd4be.  if v6 != 0 then goto L2bd4c6;
  #L2bd4c2.  v6:= 1I;
  #L2bd4c4.  goto L2bd4c8;
  #L2bd4c6.  v6:= 0I;
  #L2bd4c8.  return v6;
}
procedure `long` `getFirst-s-VKNKU`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2bd6b0.  v0:= v2.`kotlin.ranges.ULongProgression.first` @type ^`long` @kind wide;
  #L2bd6b4.  return v0 @kind wide;
}
procedure `long` `getLast-s-VKNKU`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2bd6c8.  v0:= v2.`kotlin.ranges.ULongProgression.last` @type ^`long` @kind wide;
  #L2bd6cc.  return v0 @kind wide;
}
procedure `long` `getStep`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getStep:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2bd6e0.  v0:= v2.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd6e4.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlin.ranges.ULongProgression` v7 @kind this) @signature `Lkotlin/ranges/ULongProgression;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bd528.  call temp:= `isEmpty`(v7) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L2bd52e.  v0:= temp;
  #L2bd530.  if v0 == 0 then goto L2bd538;
  #L2bd534.  v0:= -1I;
  #L2bd536.  goto L2bd5a0;
  #L2bd538.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd53e.  v0:= temp @kind wide;
  #L2bd540.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd546.  v2:= temp @kind wide;
  #L2bd548.  v4:= 32I;
  #L2bd54c.  v2:= v2 ^>> v4 @kind long;
  #L2bd54e.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bd554.  v2:= temp @kind wide;
  #L2bd556.  v0:= v0 ^~ v2 @kind long;
  #L2bd558.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bd55e.  v0:= temp @kind wide;
  #L2bd560.  v1:= (`int`) v0 @kind l2i;
  #L2bd562.  v1:= v1 * 31;
  #L2bd566.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd56c.  v2:= temp @kind wide;
  #L2bd56e.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd574.  v5:= temp @kind wide;
  #L2bd576.  v5:= v5 ^>> v4 @kind long;
  #L2bd578.  call temp:= `constructor-impl`(v5) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bd57e.  v5:= temp @kind wide;
  #L2bd580.  v2:= v2 ^~ v5 @kind long;
  #L2bd582.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bd588.  v2:= temp @kind wide;
  #L2bd58a.  v0:= (`int`) v2 @kind l2i;
  #L2bd58c.  v1:= v1 + v0 @kind int;
  #L2bd58e.  v1:= v1 * 31;
  #L2bd592.  v2:= v7.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd596.  v4:= v2 ^>> v4 @kind long;
  #L2bd59a.  v2:= v2 ^~ v4 @kind long;
  #L2bd59c.  v0:= (`int`) v2 @kind l2i;
  #L2bd59e.  v0:= v0 + v1 @kind int;
  #L2bd5a0.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ULongProgression` v7 @kind this) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bd4dc.  v0:= v7.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd4e0.  v2:= 1I;
  #L2bd4e2.  v3:= 0I;
  #L2bd4e4.  v4:= 0L;
  #L2bd4e8.  v6:= lcmp(v0, v4);
  #L2bd4ec.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd4f2.  v0:= temp @kind wide;
  #L2bd4f4.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd4fa.  v4:= temp @kind wide;
  #L2bd4fc.  call temp:= `ulongCompare`(v0, v4) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L2bd502.  v0:= temp;
  #L2bd504.  if v6 <= 0 then goto L2bd50e;
  #L2bd508.  if v0 <= 0 then goto L2bd514;
  #L2bd50c.  goto L2bd516;
  #L2bd50e.  if v0 >= 0 then goto L2bd514;
  #L2bd512.  goto L2bd516;
  #L2bd514.  v2:= 0I;
  #L2bd516.  return v2;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.ULongProgression` v9 @kind this) @signature `Lkotlin/ranges/ULongProgression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2bd67c.  v8:= new `kotlin.ranges.ULongProgressionIterator`;
  #L2bd680.  call temp:= `getFirst-s-VKNKU`(v9) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd686.  v1:= temp @kind wide;
  #L2bd688.  call temp:= `getLast-s-VKNKU`(v9) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd68e.  v3:= temp @kind wide;
  #L2bd690.  v5:= v9.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd694.  v7:= 0I;
  #L2bd696.  v0:= v8 @kind object;
  #L2bd698.  call `<init>`(v0, v1, v3, v5, v7) @signature `Lkotlin/ranges/ULongProgressionIterator;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bd69e.  return v8 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.ULongProgression` v6 @kind this) @signature `Lkotlin/ranges/ULongProgression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bd5b4.  v0:= v6.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd5b8.  v2:= " step " @kind object;
  #L2bd5bc.  v3:= 0L;
  #L2bd5c0.  v5:= lcmp(v0, v3);
  #L2bd5c4.  v0:= new `java.lang.StringBuilder`;
  #L2bd5c8.  if v5 <= 0 then goto L2bd614;
  #L2bd5cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bd5d2.  call temp:= `getFirst-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd5d8.  v3:= temp @kind wide;
  #L2bd5da.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L2bd5e0.  v1:= temp @kind object;
  #L2bd5e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd5e8.  v1:= ".." @kind object;
  #L2bd5ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd5f2.  call temp:= `getLast-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd5f8.  v3:= temp @kind wide;
  #L2bd5fa.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L2bd600.  v1:= temp @kind object;
  #L2bd602.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd608.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd60e.  v1:= v6.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd612.  goto L2bd65c;
  #L2bd614.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bd61a.  call temp:= `getFirst-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bd620.  v3:= temp @kind wide;
  #L2bd622.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L2bd628.  v1:= temp @kind object;
  #L2bd62a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd630.  v1:= " downTo " @kind object;
  #L2bd634.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd63a.  call temp:= `getLast-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bd640.  v3:= temp @kind wide;
  #L2bd642.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L2bd648.  v1:= temp @kind object;
  #L2bd64a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd650.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd656.  v1:= v6.`kotlin.ranges.ULongProgression.step` @type ^`long` @kind wide;
  #L2bd65a.  v1:= -v1 @kind long;
  #L2bd65c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd662.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bd668.  v0:= temp @kind object;
  #L2bd66a.  return v0 @kind object;
}
