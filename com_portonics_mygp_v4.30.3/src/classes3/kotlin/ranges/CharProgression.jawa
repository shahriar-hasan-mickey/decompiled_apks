record `kotlin.ranges.CharProgression` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `char` `kotlin.ranges.CharProgression.first` @AccessFlag PRIVATE_FINAL;
  `char` `kotlin.ranges.CharProgression.last` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.ranges.CharProgression.step` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ranges.CharProgression$Companion` `@@kotlin.ranges.CharProgression.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/CharProgression;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bb320.  v0:= new `kotlin.ranges.CharProgression$Companion`;
  #L2bb324.  v1:= 0I;
  #L2bb326.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/CharProgression$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bb32c.  `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` := v0 @kind object;
  #L2bb330.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.CharProgression` v1 @kind this, `char` v2 , `char` v3 , `int` v4 ) @signature `Lkotlin/ranges/CharProgression;.<init>:(CCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bb344.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bb34a.  if v4 == 0 then goto L2bb37e;
  #L2bb34e.  v0:= -2147483648I;
  #L2bb352.  if v4 == v0 then goto L2bb36e;
  #L2bb356.  v1.`kotlin.ranges.CharProgression.first` @type ^`char` := v2 @kind char;
  #L2bb35a.  call temp:= `getProgressionLastElement`(v2, v3, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(III)I` @kind static;
  #L2bb360.  v2:= temp;
  #L2bb362.  v2:= (`char`) v2 @kind i2c;
  #L2bb364.  v1.`kotlin.ranges.CharProgression.last` @type ^`char` := v2 @kind char;
  #L2bb368.  v1.`kotlin.ranges.CharProgression.step` @type ^`int` := v4;
  #L2bb36c.  return @kind void;
  #L2bb36e.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bb372.  v3:= "Step must be greater than Int.MIN_VALUE to avoid overflow on negation." @kind object;
  #L2bb376.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bb37c.  throw v2;
  #L2bb37e.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bb382.  v3:= "Step must be non-zero." @kind object;
  #L2bb386.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bb38c.  throw v2;
}
procedure `boolean` `equals`(`kotlin.ranges.CharProgression` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/CharProgression;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bb110.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.CharProgression` @kind boolean;
  #L2bb114.  if v0 == 0 then goto L2bb162;
  #L2bb118.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L2bb11e.  v0:= temp;
  #L2bb120.  if v0 == 0 then goto L2bb136;
  #L2bb124.  v0:= v3 @kind object;
  #L2bb126.  v0:= (`kotlin.ranges.CharProgression`) v0 @kind object;
  #L2bb12a.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L2bb130.  v0:= temp;
  #L2bb132.  if v0 != 0 then goto L2bb15e;
  #L2bb136.  v0:= v2.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb13a.  v3:= (`kotlin.ranges.CharProgression`) v3 @kind object;
  #L2bb13e.  v1:= v3.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb142.  if v0 != v1 then goto L2bb162;
  #L2bb146.  v0:= v2.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb14a.  v1:= v3.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb14e.  if v0 != v1 then goto L2bb162;
  #L2bb152.  v0:= v2.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb156.  v3:= v3.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb15a.  if v0 != v3 then goto L2bb162;
  #L2bb15e.  v3:= 1I;
  #L2bb160.  goto L2bb164;
  #L2bb162.  v3:= 0I;
  #L2bb164.  return v3;
}
procedure `char` `getFirst`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bb1c4.  v0:= v1.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb1c8.  return v0;
}
procedure `char` `getLast`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bb1dc.  v0:= v1.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb1e0.  return v0;
}
procedure `int` `getStep`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getStep:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2bb1f4.  v0:= v1.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb1f8.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.CharProgression` v2 @kind this) @signature `Lkotlin/ranges/CharProgression;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bb20c.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L2bb212.  v0:= temp;
  #L2bb214.  if v0 == 0 then goto L2bb21c;
  #L2bb218.  v0:= -1I;
  #L2bb21a.  goto L2bb234;
  #L2bb21c.  v0:= v2.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb220.  v0:= v0 * 31;
  #L2bb224.  v1:= v2.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb228.  v0:= v0 + v1 @kind int;
  #L2bb22a.  v0:= v0 * 31;
  #L2bb22e.  v1:= v2.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb232.  v0:= v0 + v1 @kind int;
  #L2bb234.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bb178.  v0:= v4.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb17c.  v1:= 1I;
  #L2bb17e.  v2:= 0I;
  #L2bb180.  if v0 <= 0 then goto L2bb19a;
  #L2bb184.  v0:= v4.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb188.  v3:= v4.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb18c.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L2bb192.  v0:= temp;
  #L2bb194.  if v0 <= 0 then goto L2bb1b0;
  #L2bb198.  goto L2bb1b2;
  #L2bb19a.  v0:= v4.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb19e.  v3:= v4.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb1a2.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L2bb1a8.  v0:= temp;
  #L2bb1aa.  if v0 >= 0 then goto L2bb1b0;
  #L2bb1ae.  goto L2bb1b2;
  #L2bb1b0.  v1:= 0I;
  #L2bb1b2.  return v1;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2bb2dc.  call temp:= `iterator`(v1) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @kind virtual;
  #L2bb2e2.  v0:= temp @kind object;
  #L2bb2e4.  return v0 @kind object;
}
procedure `kotlin.collections.CharIterator` `iterator`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bb2f8.  v0:= new `kotlin.ranges.CharProgressionIterator`;
  #L2bb2fc.  v1:= v4.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb300.  v2:= v4.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb304.  v3:= v4.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb308.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlin/ranges/CharProgressionIterator;.<init>:(CCI)V` @kind direct;
  #L2bb30e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.CharProgression` v3 @kind this) @signature `Lkotlin/ranges/CharProgression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bb248.  v0:= v3.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb24c.  v1:= " step " @kind object;
  #L2bb250.  if v0 <= 0 then goto L2bb288;
  #L2bb254.  v0:= new `java.lang.StringBuilder`;
  #L2bb258.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bb25e.  v2:= v3.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb262.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb268.  v2:= ".." @kind object;
  #L2bb26c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb272.  v2:= v3.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb276.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb27c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb282.  v1:= v3.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb286.  goto L2bb2bc;
  #L2bb288.  v0:= new `java.lang.StringBuilder`;
  #L2bb28c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bb292.  v2:= v3.`kotlin.ranges.CharProgression.first` @type ^`char` @kind char;
  #L2bb296.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb29c.  v2:= " downTo " @kind object;
  #L2bb2a0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb2a6.  v2:= v3.`kotlin.ranges.CharProgression.last` @type ^`char` @kind char;
  #L2bb2aa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb2b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb2b6.  v1:= v3.`kotlin.ranges.CharProgression.step` @type ^`int`;
  #L2bb2ba.  v1:= -v1 @kind int;
  #L2bb2bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb2c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bb2c8.  v0:= temp @kind object;
  #L2bb2ca.  return v0 @kind object;
}
