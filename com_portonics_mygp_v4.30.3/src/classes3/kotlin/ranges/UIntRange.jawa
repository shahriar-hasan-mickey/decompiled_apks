record `kotlin.ranges.UIntRange` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.UIntProgression` @kind class, `kotlin.ranges.ClosedRange` @kind interface {
}
global `kotlin.ranges.UIntRange$Companion` `@@kotlin.ranges.UIntRange.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.UIntRange` `@@kotlin.ranges.UIntRange.EMPTY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/UIntRange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd2b4.  v0:= new `kotlin.ranges.UIntRange$Companion`;
  #L2bd2b8.  v1:= 0I;
  #L2bd2ba.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/UIntRange$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bd2c0.  `@@kotlin.ranges.UIntRange.Companion` @type ^`kotlin.ranges.UIntRange$Companion` := v0 @kind object;
  #L2bd2c4.  v0:= new `kotlin.ranges.UIntRange`;
  #L2bd2c8.  v2:= -1I;
  #L2bd2ca.  v3:= 0I;
  #L2bd2cc.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bd2d2.  `@@kotlin.ranges.UIntRange.EMPTY` @type ^`kotlin.ranges.UIntRange` := v0 @kind object;
  #L2bd2d6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bd2e8.  v0:= 1I;
  #L2bd2ea.  v1:= 0I;
  #L2bd2ec.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lkotlin/ranges/UIntProgression;.<init>:(IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2bd2f2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v0 @kind this, `int` v1 , `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2bd304.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @kind direct;
  #L2bd30a.  return @kind void;
}
procedure `kotlin.ranges.UIntRange` `access$getEMPTY$cp`() @signature `Lkotlin/ranges/UIntRange;.access$getEMPTY$cp:()Lkotlin/ranges/UIntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L2bd29c.  v0:= `@@kotlin.ranges.UIntRange.EMPTY` @type ^`kotlin.ranges.UIntRange` @kind object;
  #L2bd2a0.  return v0 @kind object;
}
procedure `boolean` `contains`(`kotlin.ranges.UIntRange` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lkotlin/ranges/UIntRange;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd080.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L2bd084.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L2bd08a.  v1:= temp;
  #L2bd08c.  call temp:= `contains-WZ4Q5Ns`(v0, v1) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @kind virtual;
  #L2bd092.  v1:= temp;
  #L2bd094.  return v1;
}
procedure `boolean` `contains-WZ4Q5Ns`(`kotlin.ranges.UIntRange` v1 @kind this, `int` v2 ) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd0a8.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd0ae.  v0:= temp;
  #L2bd0b0.  call temp:= `uintCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2bd0b6.  v0:= temp;
  #L2bd0b8.  if v0 > 0 then goto L2bd0d4;
  #L2bd0bc.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd0c2.  v0:= temp;
  #L2bd0c4.  call temp:= `uintCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2bd0ca.  v2:= temp;
  #L2bd0cc.  if v2 > 0 then goto L2bd0d4;
  #L2bd0d0.  v2:= 1I;
  #L2bd0d2.  goto L2bd0d6;
  #L2bd0d4.  v2:= 0I;
  #L2bd0d6.  return v2;
}
procedure `boolean` `equals`(`kotlin.ranges.UIntRange` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd0e8.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.UIntRange` @kind boolean;
  #L2bd0ec.  if v0 == 0 then goto L2bd13e;
  #L2bd0f0.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L2bd0f6.  v0:= temp;
  #L2bd0f8.  if v0 == 0 then goto L2bd10e;
  #L2bd0fc.  v0:= v3 @kind object;
  #L2bd0fe.  v0:= (`kotlin.ranges.UIntRange`) v0 @kind object;
  #L2bd102.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L2bd108.  v0:= temp;
  #L2bd10a.  if v0 != 0 then goto L2bd13a;
  #L2bd10e.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd114.  v0:= temp;
  #L2bd116.  v3:= (`kotlin.ranges.UIntRange`) v3 @kind object;
  #L2bd11a.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd120.  v1:= temp;
  #L2bd122.  if v0 != v1 then goto L2bd13e;
  #L2bd126.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd12c.  v0:= temp;
  #L2bd12e.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd134.  v3:= temp;
  #L2bd136.  if v0 != v3 then goto L2bd13e;
  #L2bd13a.  v3:= 1I;
  #L2bd13c.  goto L2bd140;
  #L2bd13e.  v3:= 0I;
  #L2bd140.  return v3;
}
procedure `java.lang.Comparable` `getEndInclusive`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2bd1f8.  call temp:= `getEndInclusive-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @kind virtual;
  #L2bd1fe.  v0:= temp;
  #L2bd200.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L2bd206.  v0:= temp @kind object;
  #L2bd208.  return v0 @kind object;
}
procedure `int` `getEndInclusive-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd188.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd18e.  v0:= temp;
  #L2bd190.  return v0;
}
procedure `java.lang.Comparable` `getStart`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2bd21c.  call temp:= `getStart-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @kind virtual;
  #L2bd222.  v0:= temp;
  #L2bd224.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L2bd22a.  v0:= temp @kind object;
  #L2bd22c.  return v0 @kind object;
}
procedure `int` `getStart-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd1a4.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd1aa.  v0:= temp;
  #L2bd1ac.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd1c0.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L2bd1c6.  v0:= temp;
  #L2bd1c8.  if v0 == 0 then goto L2bd1d0;
  #L2bd1cc.  v0:= -1I;
  #L2bd1ce.  goto L2bd1e6;
  #L2bd1d0.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd1d6.  v0:= temp;
  #L2bd1d8.  v0:= v0 * 31;
  #L2bd1dc.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd1e2.  v1:= temp;
  #L2bd1e4.  v0:= v0 + v1 @kind int;
  #L2bd1e6.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd154.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd15a.  v0:= temp;
  #L2bd15c.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd162.  v1:= temp;
  #L2bd164.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2bd16a.  v0:= temp;
  #L2bd16c.  if v0 <= 0 then goto L2bd174;
  #L2bd170.  v0:= 1I;
  #L2bd172.  goto L2bd176;
  #L2bd174.  v0:= 0I;
  #L2bd176.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd240.  v0:= new `java.lang.StringBuilder`;
  #L2bd244.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bd24a.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2bd250.  v1:= temp;
  #L2bd252.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L2bd258.  v1:= temp @kind object;
  #L2bd25a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd260.  v1:= ".." @kind object;
  #L2bd264.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd26a.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2bd270.  v1:= temp;
  #L2bd272.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L2bd278.  v1:= temp @kind object;
  #L2bd27a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd280.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bd286.  v0:= temp @kind object;
  #L2bd288.  return v0 @kind object;
}
