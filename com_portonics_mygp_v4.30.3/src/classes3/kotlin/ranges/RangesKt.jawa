record `kotlin.ranges.RangesKt` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.RangesKt___RangesKt` @kind class {
}
procedure `void` `<init>`(`kotlin.ranges.RangesKt` v0 @kind this) @signature `Lkotlin/ranges/RangesKt;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bcc08.  call `<init>`(v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.<init>:()V` @kind direct;
  #L2bcc0e.  return @kind void;
}
procedure `int` `coerceAtLeast`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcaf0.  call temp:= `coerceAtLeast`(v0, v1) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L2bcaf6.  v0:= temp;
  #L2bcaf8.  return v0;
}
procedure `long` `coerceAtLeast`(`long` v0 , `long` v2 ) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(JJ)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb98.  call temp:= `coerceAtLeast`(v0, v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(JJ)J` @kind static;
  #L2bcb9e.  v0:= temp @kind wide;
  #L2bcba0.  return v0 @kind wide;
}
procedure `int` `coerceAtMost`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb0c.  call temp:= `coerceAtMost`(v0, v1) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(II)I` @kind static;
  #L2bcb12.  v0:= temp;
  #L2bcb14.  return v0;
}
procedure `long` `coerceAtMost`(`long` v0 , `long` v2 ) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(JJ)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcbb4.  call temp:= `coerceAtMost`(v0, v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(JJ)J` @kind static;
  #L2bcbba.  v0:= temp @kind wide;
  #L2bcbbc.  return v0 @kind wide;
}
procedure `int` `coerceIn`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(III)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb28.  call temp:= `coerceIn`(v0, v1, v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(III)I` @kind static;
  #L2bcb2e.  v0:= temp;
  #L2bcb30.  return v0;
}
procedure `long` `coerceIn`(`long` v0 , `long` v2 , `long` v4 ) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcbec.  call temp:= `coerceIn`(v0, v2, v4) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L2bcbf2.  v0:= temp @kind wide;
  #L2bcbf4.  return v0 @kind wide;
}
procedure `long` `coerceIn`(`long` v0 , `kotlin.ranges.ClosedRange` v2 @kind object) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcbd0.  call temp:= `coerceIn`(v0, v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L2bcbd6.  v0:= temp @kind wide;
  #L2bcbd8.  return v0 @kind wide;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb44.  call temp:= `downTo`(v0, v1) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @kind static;
  #L2bcb4a.  v0:= temp @kind object;
  #L2bcb4c.  return v0 @kind object;
}
procedure `kotlin.ranges.IntProgression` `step`(`kotlin.ranges.IntProgression` v0 @kind object, `int` v1 ) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb60.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt___RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L2bcb66.  v0:= temp @kind object;
  #L2bcb68.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2bcb7c.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L2bcb82.  v0:= temp @kind object;
  #L2bcb84.  return v0 @kind object;
}
