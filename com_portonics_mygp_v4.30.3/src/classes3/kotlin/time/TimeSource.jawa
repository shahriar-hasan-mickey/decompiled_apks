record `kotlin.time.TimeSource` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `kotlin.time.TimeSource$Companion` `@@kotlin.time.TimeSource.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/TimeSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c9648.  v0:= `@@kotlin.time.TimeSource$Companion.$$INSTANCE` @type ^`kotlin.time.TimeSource$Companion` @kind object;
  #L2c964c.  `@@kotlin.time.TimeSource.Companion` @type ^`kotlin.time.TimeSource$Companion` := v0 @kind object;
  #L2c9650.  return @kind void;
}
procedure `kotlin.time.TimeMark` `markNow`() @signature `Lkotlin/time/TimeSource;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
