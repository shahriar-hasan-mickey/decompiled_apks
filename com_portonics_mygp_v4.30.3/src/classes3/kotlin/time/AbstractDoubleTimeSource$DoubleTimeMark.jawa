record `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark` @kind class @AccessFlag FINAL extends `kotlin.time.TimeMark` @kind class {
  `long` `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.offset` @AccessFlag PRIVATE_FINAL;
  `double` `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.startedAt` @AccessFlag PRIVATE_FINAL;
  `kotlin.time.AbstractDoubleTimeSource` `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.timeSource` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark` v0 @kind this, `double` v1 , `kotlin.time.AbstractDoubleTimeSource` v3 @kind object, `long` v4 ) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c86f8.  call `<init>`(v0) @signature `Lkotlin/time/TimeMark;.<init>:()V` @kind direct;
  #L2c86fe.  v0.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.startedAt` @type ^`double` := v1 @kind wide;
  #L2c8702.  v0.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.timeSource` @type ^`kotlin.time.AbstractDoubleTimeSource` := v3 @kind object;
  #L2c8706.  v0.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.offset` @type ^`long` := v4 @kind wide;
  #L2c870a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark` v0 @kind this, `double` v1 , `kotlin.time.AbstractDoubleTimeSource` v3 @kind object, `long` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v6 @kind object) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2c871c.  call `<init>`(v0, v1, v3, v4) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;J)V` @kind direct;
  #L2c8722.  return @kind void;
}
procedure `long` `elapsedNow-UwyO8pc`(`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark` v4 @kind this) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.elapsedNow-UwyO8pc:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c86b4.  v0:= v4.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.timeSource` @type ^`kotlin.time.AbstractDoubleTimeSource` @kind object;
  #L2c86b8.  call temp:= `read`(v0) @signature `Lkotlin/time/AbstractDoubleTimeSource;.read:()D` @kind virtual;
  #L2c86be.  v0:= temp @kind wide;
  #L2c86c0.  v2:= v4.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.startedAt` @type ^`double` @kind wide;
  #L2c86c4.  v0:= v0 - v2 @kind double;
  #L2c86c6.  v2:= v4.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.timeSource` @type ^`kotlin.time.AbstractDoubleTimeSource` @kind object;
  #L2c86ca.  call temp:= `getUnit`(v2) @signature `Lkotlin/time/AbstractDoubleTimeSource;.getUnit:()Lkotlin/time/DurationUnit;` @kind virtual;
  #L2c86d0.  v2:= temp @kind object;
  #L2c86d2.  call temp:= `toDuration`(v0, v2) @signature `Lkotlin/time/DurationKt;.toDuration:(DLkotlin/time/DurationUnit;)J` @kind static;
  #L2c86d8.  v0:= temp @kind wide;
  #L2c86da.  v2:= v4.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.offset` @type ^`long` @kind wide;
  #L2c86de.  call temp:= `minus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @kind static;
  #L2c86e4.  v0:= temp @kind wide;
  #L2c86e6.  return v0 @kind wide;
}
procedure `kotlin.time.TimeMark` `plus-LRDsOJo`(`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark` v8 @kind this, `long` v9 ) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c8680.  v7:= new `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark`;
  #L2c8684.  v1:= v8.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.startedAt` @type ^`double` @kind wide;
  #L2c8688.  v3:= v8.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.timeSource` @type ^`kotlin.time.AbstractDoubleTimeSource` @kind object;
  #L2c868c.  v4:= v8.`kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark.offset` @type ^`long` @kind wide;
  #L2c8690.  call temp:= `plus-LRDsOJo`(v4, v9) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L2c8696.  v4:= temp @kind wide;
  #L2c8698.  v6:= 0I;
  #L2c869a.  v0:= v7 @kind object;
  #L2c869c.  call `<init>`(v0, v1, v3, v4, v6) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2c86a2.  return v7 @kind object;
}
