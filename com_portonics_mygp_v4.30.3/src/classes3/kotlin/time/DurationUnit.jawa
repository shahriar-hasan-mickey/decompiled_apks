record `kotlin.time.DurationUnit` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.util.concurrent.TimeUnit` `kotlin.time.DurationUnit.timeUnit` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.time.DurationUnit`[] `@@kotlin.time.DurationUnit.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.DAYS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.HOURS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MICROSECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MILLISECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.MINUTES` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.NANOSECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.time.DurationUnit` `@@kotlin.time.DurationUnit.SECONDS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.time.DurationUnit`[] `$values`() @signature `Lkotlin/time/DurationUnit;.$values:()[Lkotlin/time/DurationUnit;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2c90c8.  v0:= 7I;
  #L2c90ca.  v0:= new `kotlin.time.DurationUnit`[v0];
  #L2c90ce.  v1:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90d2.  v2:= 0I;
  #L2c90d4.  v0[v2]:= v1 @kind object;
  #L2c90d8.  v1:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90dc.  v2:= 1I;
  #L2c90de.  v0[v2]:= v1 @kind object;
  #L2c90e2.  v1:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90e6.  v2:= 2I;
  #L2c90e8.  v0[v2]:= v1 @kind object;
  #L2c90ec.  v1:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90f0.  v2:= 3I;
  #L2c90f2.  v0[v2]:= v1 @kind object;
  #L2c90f6.  v1:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90fa.  v2:= 4I;
  #L2c90fc.  v0[v2]:= v1 @kind object;
  #L2c9100.  v1:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c9104.  v2:= 5I;
  #L2c9106.  v0[v2]:= v1 @kind object;
  #L2c910a.  v1:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c910e.  v2:= 6I;
  #L2c9110.  v0[v2]:= v1 @kind object;
  #L2c9114.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/time/DurationUnit;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c914c.  v0:= new `kotlin.time.DurationUnit`;
  #L2c9150.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c9154.  v2:= "NANOSECONDS" @kind object;
  #L2c9158.  v3:= 0I;
  #L2c915a.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c9160.  `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c9164.  v0:= new `kotlin.time.DurationUnit`;
  #L2c9168.  v1:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c916c.  v2:= "MICROSECONDS" @kind object;
  #L2c9170.  v3:= 1I;
  #L2c9172.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c9178.  `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c917c.  v0:= new `kotlin.time.DurationUnit`;
  #L2c9180.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c9184.  v2:= "MILLISECONDS" @kind object;
  #L2c9188.  v3:= 2I;
  #L2c918a.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c9190.  `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c9194.  v0:= new `kotlin.time.DurationUnit`;
  #L2c9198.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c919c.  v2:= "SECONDS" @kind object;
  #L2c91a0.  v3:= 3I;
  #L2c91a2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c91a8.  `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c91ac.  v0:= new `kotlin.time.DurationUnit`;
  #L2c91b0.  v1:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c91b4.  v2:= "MINUTES" @kind object;
  #L2c91b8.  v3:= 4I;
  #L2c91ba.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c91c0.  `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c91c4.  v0:= new `kotlin.time.DurationUnit`;
  #L2c91c8.  v1:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c91cc.  v2:= "HOURS" @kind object;
  #L2c91d0.  v3:= 5I;
  #L2c91d2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c91d8.  `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c91dc.  v0:= new `kotlin.time.DurationUnit`;
  #L2c91e0.  v1:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c91e4.  v2:= "DAYS" @kind object;
  #L2c91e8.  v3:= 6I;
  #L2c91ea.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L2c91f0.  `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` := v0 @kind object;
  #L2c91f4.  call temp:= `$values`() @signature `Lkotlin/time/DurationUnit;.$values:()[Lkotlin/time/DurationUnit;` @kind static;
  #L2c91fa.  v0:= temp @kind object;
  #L2c91fc.  `@@kotlin.time.DurationUnit.$VALUES` @type ^`kotlin.time.DurationUnit`[] := v0 @kind object;
  #L2c9200.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.DurationUnit` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lkotlin/time/DurationUnit;.<init>:(Ljava/lang/String;ILjava/util/concurrent/TimeUnit;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c9214.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2c921a.  v0.`kotlin.time.DurationUnit.timeUnit` @type ^`java.util.concurrent.TimeUnit` := v3 @kind object;
  #L2c921e.  return @kind void;
}
procedure `kotlin.time.DurationUnit` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/time/DurationUnit;.valueOf:(Ljava/lang/String;)Lkotlin/time/DurationUnit;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c90a4.  v0:= constclass @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c90a8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2c90ae.  v1:= temp @kind object;
  #L2c90b0.  v1:= (`kotlin.time.DurationUnit`) v1 @kind object;
  #L2c90b4.  return v1 @kind object;
}
procedure `kotlin.time.DurationUnit`[] `values`() @signature `Lkotlin/time/DurationUnit;.values:()[Lkotlin/time/DurationUnit;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c9128.  v0:= `@@kotlin.time.DurationUnit.$VALUES` @type ^`kotlin.time.DurationUnit`[] @kind object;
  #L2c912c.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2c9132.  v0:= temp @kind object;
  #L2c9134.  v0:= (`kotlin.time.DurationUnit`[]) v0 @kind object;
  #L2c9138.  return v0 @kind object;
}
procedure `java.util.concurrent.TimeUnit` `getTimeUnit$kotlin_stdlib`(`kotlin.time.DurationUnit` v1 @kind this) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c908c.  v0:= v1.`kotlin.time.DurationUnit.timeUnit` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2c9090.  return v0 @kind object;
}
