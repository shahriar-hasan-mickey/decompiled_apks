record `kotlin.time.jdk8.DurationConversionsJDK8Kt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.time.Duration` `toJavaDuration-LRDsOJo`(`long` v2 ) @signature `Lkotlin/time/jdk8/DurationConversionsJDK8Kt;.toJavaDuration-LRDsOJo:(J)Ljava/time/Duration;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2c9840.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L2c9846.  v0:= temp @kind wide;
  #L2c9848.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L2c984e.  v2:= temp;
  #L2c9850.  v2:= (`long`) v2 @kind i2l;
  #L2c9852.  call temp:= `ofSeconds`(v0, v2) @signature `Ljava/time/Duration;.ofSeconds:(JJ)Ljava/time/Duration;` @kind static;
  #L2c9858.  v2:= temp @kind object;
  #L2c985a.  v3:= "toJavaDuration-LRDsOJo" @kind object;
  #L2c985e.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c9864.  return v2 @kind object;
}
procedure `long` `toKotlinDuration`(`java.time.Duration` v4 @kind object) @signature `Lkotlin/time/jdk8/DurationConversionsJDK8Kt;.toKotlinDuration:(Ljava/time/Duration;)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c9878.  v0:= "<this>" @kind object;
  #L2c987c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c9882.  call temp:= `getSeconds`(v4) @signature `Ljava/time/Duration;.getSeconds:()J` @kind virtual;
  #L2c9888.  v0:= temp @kind wide;
  #L2c988a.  v2:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c988e.  call temp:= `toDuration`(v0, v2) @signature `Lkotlin/time/DurationKt;.toDuration:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L2c9894.  v0:= temp @kind wide;
  #L2c9896.  call temp:= `getNano`(v4) @signature `Ljava/time/Duration;.getNano:()I` @kind virtual;
  #L2c989c.  v4:= temp;
  #L2c989e.  v2:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c98a2.  call temp:= `toDuration`(v4, v2) @signature `Lkotlin/time/DurationKt;.toDuration:(ILkotlin/time/DurationUnit;)J` @kind static;
  #L2c98a8.  v2:= temp @kind wide;
  #L2c98aa.  call temp:= `plus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L2c98b0.  v0:= temp @kind wide;
  #L2c98b2.  return v0 @kind wide;
}
