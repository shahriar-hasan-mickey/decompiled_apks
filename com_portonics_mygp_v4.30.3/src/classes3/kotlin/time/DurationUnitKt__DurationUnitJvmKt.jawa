record `kotlin.time.DurationUnitKt__DurationUnitJvmKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.time.DurationUnitKt__DurationUnitJvmKt` v0 @kind this) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c8d20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c8d26.  return @kind void;
}
procedure `double` `convertDurationUnit`(`double` v7 , `kotlin.time.DurationUnit` v9 @kind object, `kotlin.time.DurationUnit` v10 @kind object) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(DLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c8b70.  v0:= "sourceUnit" @kind object;
  #L2c8b74.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8b7a.  v0:= "targetUnit" @kind object;
  #L2c8b7e.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8b84.  call temp:= `getTimeUnit$kotlin_stdlib`(v10) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8b8a.  v0:= temp @kind object;
  #L2c8b8c.  call temp:= `getTimeUnit$kotlin_stdlib`(v9) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8b92.  v1:= temp @kind object;
  #L2c8b94.  v2:= 1L;
  #L2c8b98.  call temp:= `convert`(v0, v2, v1) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2c8b9e.  v0:= temp @kind wide;
  #L2c8ba0.  v4:= 0L;
  #L2c8ba4.  v6:= lcmp(v0, v4);
  #L2c8ba8.  if v6 <= 0 then goto L2c8bba;
  #L2c8bac.  v9:= (`double`) v0 @kind l2d;
  #L2c8bae.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2c8bb4.  v7:= v7 * v9 @kind double;
  #L2c8bb8.  return v7 @kind wide;
  #L2c8bba.  call temp:= `getTimeUnit$kotlin_stdlib`(v9) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8bc0.  v9:= temp @kind object;
  #L2c8bc2.  call temp:= `getTimeUnit$kotlin_stdlib`(v10) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8bc8.  v10:= temp @kind object;
  #L2c8bca.  call temp:= `convert`(v9, v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2c8bd0.  v9:= temp @kind wide;
  #L2c8bd2.  v9:= (`double`) v9 @kind l2d;
  #L2c8bd4.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2c8bda.  v7:= v7 / v9 @kind double;
  #L2c8bdc.  return v7 @kind wide;
}
procedure `long` `convertDurationUnit`(`long` v1 , `kotlin.time.DurationUnit` v3 @kind object, `kotlin.time.DurationUnit` v4 @kind object) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(JLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2c8ca0.  v0:= "sourceUnit" @kind object;
  #L2c8ca4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8caa.  v0:= "targetUnit" @kind object;
  #L2c8cae.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8cb4.  call temp:= `getTimeUnit$kotlin_stdlib`(v4) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8cba.  v4:= temp @kind object;
  #L2c8cbc.  call temp:= `getTimeUnit$kotlin_stdlib`(v3) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8cc2.  v3:= temp @kind object;
  #L2c8cc4.  call temp:= `convert`(v4, v1, v3) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2c8cca.  v1:= temp @kind wide;
  #L2c8ccc.  return v1 @kind wide;
}
procedure `long` `convertDurationUnitOverflow`(`long` v1 , `kotlin.time.DurationUnit` v3 @kind object, `kotlin.time.DurationUnit` v4 @kind object) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnitOverflow:(JLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2c8ce0.  v0:= "sourceUnit" @kind object;
  #L2c8ce4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8cea.  v0:= "targetUnit" @kind object;
  #L2c8cee.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8cf4.  call temp:= `getTimeUnit$kotlin_stdlib`(v4) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8cfa.  v4:= temp @kind object;
  #L2c8cfc.  call temp:= `getTimeUnit$kotlin_stdlib`(v3) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8d02.  v3:= temp @kind object;
  #L2c8d04.  call temp:= `convert`(v4, v1, v3) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L2c8d0a.  v1:= temp @kind wide;
  #L2c8d0c.  return v1 @kind wide;
}
procedure `kotlin.time.DurationUnit` `toDurationUnit`(`java.util.concurrent.TimeUnit` v1 @kind object) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.toDurationUnit:(Ljava/util/concurrent/TimeUnit;)Lkotlin/time/DurationUnit;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2c8c14.  v0:= "<this>" @kind object;
  #L2c8c18.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8c1e.  v0:= `@@kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L2c8c22.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L2c8c28.  v1:= temp;
  #L2c8c2a.  v1:= v0[v1];
  #L2c8c2e.  goto L2c8c6c;
  #L2c8c34.  v1:= new `kotlin.NoWhenBranchMatchedException`;
  #L2c8c38.  call `<init>`(v1) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L2c8c3e.  throw v1;
  #L2c8c40.  v1:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c44.  goto L2c8c68;
  #L2c8c46.  v1:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c4a.  goto L2c8c68;
  #L2c8c4c.  v1:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c50.  goto L2c8c68;
  #L2c8c52.  v1:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c56.  goto L2c8c68;
  #L2c8c58.  v1:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c5c.  goto L2c8c68;
  #L2c8c5e.  v1:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c62.  goto L2c8c68;
  #L2c8c64.  v1:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8c68.  return v1 @kind object;
  #L2c8c6a.  
  #L2c8c6c.  switch v1
                  | 1 => goto L2c8c64
                  | 2 => goto L2c8c5e
                  | 3 => goto L2c8c58
                  | 4 => goto L2c8c52
                  | 5 => goto L2c8c4c
                  | 6 => goto L2c8c46
                  | 7 => goto L2c8c40
                  | else => goto L2c8c34;
}
procedure `java.util.concurrent.TimeUnit` `toTimeUnit`(`kotlin.time.DurationUnit` v1 @kind object) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.toTimeUnit:(Lkotlin/time/DurationUnit;)Ljava/util/concurrent/TimeUnit;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2c8bf0.  v0:= "<this>" @kind object;
  #L2c8bf4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c8bfa.  call temp:= `getTimeUnit$kotlin_stdlib`(v1) @signature `Lkotlin/time/DurationUnit;.getTimeUnit$kotlin_stdlib:()Ljava/util/concurrent/TimeUnit;` @kind virtual;
  #L2c8c00.  v1:= temp @kind object;
  #L2c8c02.  return v1 @kind object;
}
