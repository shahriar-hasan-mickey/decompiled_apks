record `kotlin.time.AdjustedTimeMark` @kind class @AccessFlag FINAL extends `kotlin.time.TimeMark` @kind class {
  `long` `kotlin.time.AdjustedTimeMark.adjustment` @AccessFlag PRIVATE_FINAL;
  `kotlin.time.TimeMark` `kotlin.time.AdjustedTimeMark.mark` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AdjustedTimeMark` v0 @kind this, `kotlin.time.TimeMark` v1 @kind object, `long` v2 ) @signature `Lkotlin/time/AdjustedTimeMark;.<init>:(Lkotlin/time/TimeMark;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c896c.  call `<init>`(v0) @signature `Lkotlin/time/TimeMark;.<init>:()V` @kind direct;
  #L2c8972.  v0.`kotlin.time.AdjustedTimeMark.mark` @type ^`kotlin.time.TimeMark` := v1 @kind object;
  #L2c8976.  v0.`kotlin.time.AdjustedTimeMark.adjustment` @type ^`long` := v2 @kind wide;
  #L2c897a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.AdjustedTimeMark` v0 @kind this, `kotlin.time.TimeMark` v1 @kind object, `long` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlin/time/AdjustedTimeMark;.<init>:(Lkotlin/time/TimeMark;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2c898c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/time/AdjustedTimeMark;.<init>:(Lkotlin/time/TimeMark;J)V` @kind direct;
  #L2c8992.  return @kind void;
}
procedure `long` `elapsedNow-UwyO8pc`(`kotlin.time.AdjustedTimeMark` v4 @kind this) @signature `Lkotlin/time/AdjustedTimeMark;.elapsedNow-UwyO8pc:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c8924.  v0:= v4.`kotlin.time.AdjustedTimeMark.mark` @type ^`kotlin.time.TimeMark` @kind object;
  #L2c8928.  call temp:= `elapsedNow-UwyO8pc`(v0) @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @kind virtual;
  #L2c892e.  v0:= temp @kind wide;
  #L2c8930.  call temp:= `getAdjustment-UwyO8pc`(v4) @signature `Lkotlin/time/AdjustedTimeMark;.getAdjustment-UwyO8pc:()J` @kind virtual;
  #L2c8936.  v2:= temp @kind wide;
  #L2c8938.  call temp:= `minus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @kind static;
  #L2c893e.  v0:= temp @kind wide;
  #L2c8940.  return v0 @kind wide;
}
procedure `long` `getAdjustment-UwyO8pc`(`kotlin.time.AdjustedTimeMark` v2 @kind this) @signature `Lkotlin/time/AdjustedTimeMark;.getAdjustment-UwyO8pc:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2c8954.  v0:= v2.`kotlin.time.AdjustedTimeMark.adjustment` @type ^`long` @kind wide;
  #L2c8958.  return v0 @kind wide;
}
procedure `kotlin.time.TimeMark` `getMark`(`kotlin.time.AdjustedTimeMark` v1 @kind this) @signature `Lkotlin/time/AdjustedTimeMark;.getMark:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2c88d8.  v0:= v1.`kotlin.time.AdjustedTimeMark.mark` @type ^`kotlin.time.TimeMark` @kind object;
  #L2c88dc.  return v0 @kind object;
}
procedure `kotlin.time.TimeMark` `plus-LRDsOJo`(`kotlin.time.AdjustedTimeMark` v4 @kind this, `long` v5 ) @signature `Lkotlin/time/AdjustedTimeMark;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c88f0.  v0:= new `kotlin.time.AdjustedTimeMark`;
  #L2c88f4.  v1:= v4.`kotlin.time.AdjustedTimeMark.mark` @type ^`kotlin.time.TimeMark` @kind object;
  #L2c88f8.  call temp:= `getAdjustment-UwyO8pc`(v4) @signature `Lkotlin/time/AdjustedTimeMark;.getAdjustment-UwyO8pc:()J` @kind virtual;
  #L2c88fe.  v2:= temp @kind wide;
  #L2c8900.  call temp:= `plus-LRDsOJo`(v2, v5) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L2c8906.  v5:= temp @kind wide;
  #L2c8908.  v2:= 0I;
  #L2c890a.  call `<init>`(v0, v1, v5, v2) @signature `Lkotlin/time/AdjustedTimeMark;.<init>:(Lkotlin/time/TimeMark;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2c8910.  return v0 @kind object;
}
