record `kotlin.time.AbstractDoubleTimeSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.time.TimeSource` @kind interface {
  `kotlin.time.DurationUnit` `kotlin.time.AbstractDoubleTimeSource.unit` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AbstractDoubleTimeSource` v1 @kind this, `kotlin.time.DurationUnit` v2 @kind object) @signature `Lkotlin/time/AbstractDoubleTimeSource;.<init>:(Lkotlin/time/DurationUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c8784.  v0:= "unit" @kind object;
  #L2c8788.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2c878e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c8794.  v1.`kotlin.time.AbstractDoubleTimeSource.unit` @type ^`kotlin.time.DurationUnit` := v2 @kind object;
  #L2c8798.  return @kind void;
}
procedure `kotlin.time.DurationUnit` `getUnit`(`kotlin.time.AbstractDoubleTimeSource` v1 @kind this) @signature `Lkotlin/time/AbstractDoubleTimeSource;.getUnit:()Lkotlin/time/DurationUnit;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L2c8734.  v0:= v1.`kotlin.time.AbstractDoubleTimeSource.unit` @type ^`kotlin.time.DurationUnit` @kind object;
  #L2c8738.  return v0 @kind object;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.AbstractDoubleTimeSource` v8 @kind this) @signature `Lkotlin/time/AbstractDoubleTimeSource;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c874c.  v7:= new `kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark`;
  #L2c8750.  call temp:= `read`(v8) @signature `Lkotlin/time/AbstractDoubleTimeSource;.read:()D` @kind virtual;
  #L2c8756.  v1:= temp @kind wide;
  #L2c8758.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L2c875c.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L2c8762.  v4:= temp @kind wide;
  #L2c8764.  v6:= 0I;
  #L2c8766.  v0:= v7 @kind object;
  #L2c8768.  v3:= v8 @kind object;
  #L2c876a.  call `<init>`(v0, v1, v3, v4, v6) @signature `Lkotlin/time/AbstractDoubleTimeSource$DoubleTimeMark;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2c8770.  return v7 @kind object;
}
procedure `double` `read`() @signature `Lkotlin/time/AbstractDoubleTimeSource;.read:()D` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
