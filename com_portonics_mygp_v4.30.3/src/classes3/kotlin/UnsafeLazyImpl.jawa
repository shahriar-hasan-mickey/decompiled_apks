record `kotlin.UnsafeLazyImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.Lazy` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Object` `kotlin.UnsafeLazyImpl._value` @AccessFlag PRIVATE;
  `kotlin.jvm.functions.Function0` `kotlin.UnsafeLazyImpl.initializer` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.UnsafeLazyImpl` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/UnsafeLazyImpl;.<init>:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29dc9c.  v0:= "initializer" @kind object;
  #L29dca0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L29dca6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29dcac.  v1.`kotlin.UnsafeLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L29dcb0.  v2:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L29dcb4.  v1.`kotlin.UnsafeLazyImpl._value` @type ^`java.lang.Object` := v2 @kind object;
  #L29dcb8.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L29dc44.  v0:= new `kotlin.InitializedLazyImpl`;
  #L29dc48.  call temp:= `getValue`(v2) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L29dc4e.  v1:= temp @kind object;
  #L29dc50.  call `<init>`(v0, v1) @signature `Lkotlin/InitializedLazyImpl;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L29dc56.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29dc04.  v0:= v2.`kotlin.UnsafeLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L29dc08.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L29dc0c.  if v0 != v1 then goto L29dc2c;
  #L29dc10.  v0:= v2.`kotlin.UnsafeLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L29dc14.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L29dc1a.  call temp:= `invoke`(v0) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L29dc20.  v0:= temp @kind object;
  #L29dc22.  v2.`kotlin.UnsafeLazyImpl._value` @type ^`java.lang.Object` := v0 @kind object;
  #L29dc26.  v0:= 0I;
  #L29dc28.  v2.`kotlin.UnsafeLazyImpl.initializer` @type ^`kotlin.jvm.functions.Function0` := v0 @kind object;
  #L29dc2c.  v0:= v2.`kotlin.UnsafeLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L29dc30.  return v0 @kind object;
}
procedure `boolean` `isInitialized`(`kotlin.UnsafeLazyImpl` v2 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.isInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29dbe0.  v0:= v2.`kotlin.UnsafeLazyImpl._value` @type ^`java.lang.Object` @kind object;
  #L29dbe4.  v1:= `@@kotlin.UNINITIALIZED_VALUE.INSTANCE` @type ^`kotlin.UNINITIALIZED_VALUE` @kind object;
  #L29dbe8.  if v0 == v1 then goto L29dbf0;
  #L29dbec.  v0:= 1I;
  #L29dbee.  goto L29dbf2;
  #L29dbf0.  v0:= 0I;
  #L29dbf2.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.UnsafeLazyImpl` v1 @kind this) @signature `Lkotlin/UnsafeLazyImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29dc68.  call temp:= `isInitialized`(v1) @signature `Lkotlin/UnsafeLazyImpl;.isInitialized:()Z` @kind virtual;
  #L29dc6e.  v0:= temp;
  #L29dc70.  if v0 == 0 then goto L29dc86;
  #L29dc74.  call temp:= `getValue`(v1) @signature `Lkotlin/UnsafeLazyImpl;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L29dc7a.  v0:= temp @kind object;
  #L29dc7c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L29dc82.  v0:= temp @kind object;
  #L29dc84.  goto L29dc8a;
  #L29dc86.  v0:= "Lazy value not initialized yet." @kind object;
  #L29dc8a.  return v0 @kind object;
}
