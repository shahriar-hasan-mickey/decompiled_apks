record `kotlin.UShortKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `short` `toUShort`(`byte` v0 ) @signature `Lkotlin/UShortKt;.toUShort:(B)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d098.  v0:= (`short`) v0 @kind i2s;
  #L29d09a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d0a0.  v0:= temp;
  #L29d0a2.  return v0;
}
procedure `short` `toUShort`(`int` v0 ) @signature `Lkotlin/UShortKt;.toUShort:(I)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d0b4.  v0:= (`short`) v0 @kind i2s;
  #L29d0b6.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d0bc.  v0:= temp;
  #L29d0be.  return v0;
}
procedure `short` `toUShort`(`long` v0 ) @signature `Lkotlin/UShortKt;.toUShort:(J)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d0d0.  v1:= (`int`) v0 @kind l2i;
  #L29d0d2.  v0:= (`short`) v1 @kind i2s;
  #L29d0d4.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d0da.  v0:= temp;
  #L29d0dc.  return v0;
}
procedure `short` `toUShort`(`short` v0 ) @signature `Lkotlin/UShortKt;.toUShort:(S)S` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L29d0f0.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UShort;.constructor-impl:(S)S` @kind static;
  #L29d0f6.  v0:= temp;
  #L29d0f8.  return v0;
}
