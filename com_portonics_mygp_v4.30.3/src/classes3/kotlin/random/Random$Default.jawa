record `kotlin.random.Random$Default` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.random.Random` @kind class, `java.io.Serializable` @kind interface {
}
procedure `void` `<init>`(`kotlin.random.Random$Default` v0 @kind this) @signature `Lkotlin/random/Random$Default;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b9fb4.  call `<init>`(v0) @signature `Lkotlin/random/Random;.<init>:()V` @kind direct;
  #L2b9fba.  return @kind void;
}
procedure `void` `<init>`(`kotlin.random.Random$Default` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/random/Random$Default;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b9fcc.  call `<init>`(v0) @signature `Lkotlin/random/Random$Default;.<init>:()V` @kind direct;
  #L2b9fd2.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.random.Random$Default` v1 @kind this) @signature `Lkotlin/random/Random$Default;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L2b9f30.  v0:= `@@kotlin.random.Random$Default$Serialized.INSTANCE` @type ^`kotlin.random.Random$Default$Serialized` @kind object;
  #L2b9f34.  return v0 @kind object;
}
procedure `int` `nextBits`(`kotlin.random.Random$Default` v1 @kind this, `int` v2 ) @signature `Lkotlin/random/Random$Default;.nextBits:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ea0.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9ea6.  v0:= temp @kind object;
  #L2b9ea8.  call temp:= `nextBits`(v0, v2) @signature `Lkotlin/random/Random;.nextBits:(I)I` @kind virtual;
  #L2b9eae.  v2:= temp;
  #L2b9eb0.  return v2;
}
procedure `boolean` `nextBoolean`(`kotlin.random.Random$Default` v1 @kind this) @signature `Lkotlin/random/Random$Default;.nextBoolean:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9d70.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9d76.  v0:= temp @kind object;
  #L2b9d78.  call temp:= `nextBoolean`(v0) @signature `Lkotlin/random/Random;.nextBoolean:()Z` @kind virtual;
  #L2b9d7e.  v0:= temp;
  #L2b9d80.  return v0;
}
procedure `byte`[] `nextBytes`(`kotlin.random.Random$Default` v1 @kind this, `int` v2 ) @signature `Lkotlin/random/Random$Default;.nextBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9dec.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9df2.  v0:= temp @kind object;
  #L2b9df4.  call temp:= `nextBytes`(v0, v2) @signature `Lkotlin/random/Random;.nextBytes:(I)[B` @kind virtual;
  #L2b9dfa.  v2:= temp @kind object;
  #L2b9dfc.  return v2 @kind object;
}
procedure `byte`[] `nextBytes`(`kotlin.random.Random$Default` v1 @kind this, `byte`[] v2 @kind object) @signature `Lkotlin/random/Random$Default;.nextBytes:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9d94.  v0:= "array" @kind object;
  #L2b9d98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b9d9e.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9da4.  v0:= temp @kind object;
  #L2b9da6.  call temp:= `nextBytes`(v0, v2) @signature `Lkotlin/random/Random;.nextBytes:([B)[B` @kind virtual;
  #L2b9dac.  v2:= temp @kind object;
  #L2b9dae.  return v2 @kind object;
}
procedure `byte`[] `nextBytes`(`kotlin.random.Random$Default` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/random/Random$Default;.nextBytes:([BII)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9dc0.  v0:= "array" @kind object;
  #L2b9dc4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b9dca.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9dd0.  v0:= temp @kind object;
  #L2b9dd2.  call temp:= `nextBytes`(v0, v2, v3, v4) @signature `Lkotlin/random/Random;.nextBytes:([BII)[B` @kind virtual;
  #L2b9dd8.  v2:= temp @kind object;
  #L2b9dda.  return v2 @kind object;
}
procedure `double` `nextDouble`(`kotlin.random.Random$Default` v2 @kind this) @signature `Lkotlin/random/Random$Default;.nextDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9e10.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9e16.  v0:= temp @kind object;
  #L2b9e18.  call temp:= `nextDouble`(v0) @signature `Lkotlin/random/Random;.nextDouble:()D` @kind virtual;
  #L2b9e1e.  v0:= temp @kind wide;
  #L2b9e20.  return v0 @kind wide;
}
procedure `double` `nextDouble`(`kotlin.random.Random$Default` v1 @kind this, `double` v2 ) @signature `Lkotlin/random/Random$Default;.nextDouble:(D)D` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9e34.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9e3a.  v0:= temp @kind object;
  #L2b9e3c.  call temp:= `nextDouble`(v0, v2) @signature `Lkotlin/random/Random;.nextDouble:(D)D` @kind virtual;
  #L2b9e42.  v2:= temp @kind wide;
  #L2b9e44.  return v2 @kind wide;
}
procedure `double` `nextDouble`(`kotlin.random.Random$Default` v1 @kind this, `double` v2 , `double` v4 ) @signature `Lkotlin/random/Random$Default;.nextDouble:(DD)D` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9e58.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9e5e.  v0:= temp @kind object;
  #L2b9e60.  call temp:= `nextDouble`(v0, v2, v4) @signature `Lkotlin/random/Random;.nextDouble:(DD)D` @kind virtual;
  #L2b9e66.  v2:= temp @kind wide;
  #L2b9e68.  return v2 @kind wide;
}
procedure `float` `nextFloat`(`kotlin.random.Random$Default` v1 @kind this) @signature `Lkotlin/random/Random$Default;.nextFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9e7c.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9e82.  v0:= temp @kind object;
  #L2b9e84.  call temp:= `nextFloat`(v0) @signature `Lkotlin/random/Random;.nextFloat:()F` @kind virtual;
  #L2b9e8a.  v0:= temp;
  #L2b9e8c.  return v0;
}
procedure `int` `nextInt`(`kotlin.random.Random$Default` v1 @kind this) @signature `Lkotlin/random/Random$Default;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ec4.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9eca.  v0:= temp @kind object;
  #L2b9ecc.  call temp:= `nextInt`(v0) @signature `Lkotlin/random/Random;.nextInt:()I` @kind virtual;
  #L2b9ed2.  v0:= temp;
  #L2b9ed4.  return v0;
}
procedure `int` `nextInt`(`kotlin.random.Random$Default` v1 @kind this, `int` v2 ) @signature `Lkotlin/random/Random$Default;.nextInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ee8.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9eee.  v0:= temp @kind object;
  #L2b9ef0.  call temp:= `nextInt`(v0, v2) @signature `Lkotlin/random/Random;.nextInt:(I)I` @kind virtual;
  #L2b9ef6.  v2:= temp;
  #L2b9ef8.  return v2;
}
procedure `int` `nextInt`(`kotlin.random.Random$Default` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lkotlin/random/Random$Default;.nextInt:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9f0c.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9f12.  v0:= temp @kind object;
  #L2b9f14.  call temp:= `nextInt`(v0, v2, v3) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L2b9f1a.  v2:= temp;
  #L2b9f1c.  return v2;
}
procedure `long` `nextLong`(`kotlin.random.Random$Default` v2 @kind this) @signature `Lkotlin/random/Random$Default;.nextLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9f48.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9f4e.  v0:= temp @kind object;
  #L2b9f50.  call temp:= `nextLong`(v0) @signature `Lkotlin/random/Random;.nextLong:()J` @kind virtual;
  #L2b9f56.  v0:= temp @kind wide;
  #L2b9f58.  return v0 @kind wide;
}
procedure `long` `nextLong`(`kotlin.random.Random$Default` v1 @kind this, `long` v2 ) @signature `Lkotlin/random/Random$Default;.nextLong:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9f6c.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9f72.  v0:= temp @kind object;
  #L2b9f74.  call temp:= `nextLong`(v0, v2) @signature `Lkotlin/random/Random;.nextLong:(J)J` @kind virtual;
  #L2b9f7a.  v2:= temp @kind wide;
  #L2b9f7c.  return v2 @kind wide;
}
procedure `long` `nextLong`(`kotlin.random.Random$Default` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lkotlin/random/Random$Default;.nextLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9f90.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/random/Random;.access$getDefaultRandom$cp:()Lkotlin/random/Random;` @kind static;
  #L2b9f96.  v0:= temp @kind object;
  #L2b9f98.  call temp:= `nextLong`(v0, v2, v4) @signature `Lkotlin/random/Random;.nextLong:(JJ)J` @kind virtual;
  #L2b9f9e.  v2:= temp @kind wide;
  #L2b9fa0.  return v2 @kind wide;
}
