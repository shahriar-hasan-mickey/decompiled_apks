record `kotlin.random.URandomKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `checkUIntRangeBounds-J1ME1BU`(`int` v1 , `int` v2 ) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2bacfc.  call temp:= `uintCompare`(v2, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2bad02.  v0:= temp;
  #L2bad04.  if v0 <= 0 then goto L2bad0c;
  #L2bad08.  v0:= 1I;
  #L2bad0a.  goto L2bad0e;
  #L2bad0c.  v0:= 0I;
  #L2bad0e.  if v0 == 0 then goto L2bad14;
  #L2bad12.  return @kind void;
  #L2bad14.  call temp:= `box-impl`(v1) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L2bad1a.  v1:= temp @kind object;
  #L2bad1c.  call temp:= `box-impl`(v2) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L2bad22.  v2:= temp @kind object;
  #L2bad24.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2bad2a.  v1:= temp @kind object;
  #L2bad2c.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bad30.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bad36.  v1:= temp @kind object;
  #L2bad38.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bad3e.  throw v2;
}
procedure `void` `checkULongRangeBounds-eb3DHEI`(`long` v1 , `long` v3 ) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2bad50.  call temp:= `ulongCompare`(v3, v1) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L2bad56.  v0:= temp;
  #L2bad58.  if v0 <= 0 then goto L2bad60;
  #L2bad5c.  v0:= 1I;
  #L2bad5e.  goto L2bad62;
  #L2bad60.  v0:= 0I;
  #L2bad62.  if v0 == 0 then goto L2bad68;
  #L2bad66.  return @kind void;
  #L2bad68.  call temp:= `box-impl`(v1) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L2bad6e.  v1:= temp @kind object;
  #L2bad70.  call temp:= `box-impl`(v3) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L2bad76.  v2:= temp @kind object;
  #L2bad78.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2bad7e.  v1:= temp @kind object;
  #L2bad80.  v2:= new `java.lang.IllegalArgumentException`;
  #L2bad84.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bad8a.  v1:= temp @kind object;
  #L2bad8c.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bad92.  throw v2;
}
procedure `byte`[] `nextUBytes`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUBytes:(Lkotlin/random/Random;I)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2ba920.  v0:= "<this>" @kind object;
  #L2ba924.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba92a.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:(I)[B` @kind virtual;
  #L2ba930.  v1:= temp @kind object;
  #L2ba932.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UByteArray;.constructor-impl:([B)[B` @kind static;
  #L2ba938.  v1:= temp @kind object;
  #L2ba93a.  return v1 @kind object;
}
procedure `byte`[] `nextUBytes-EVgfTAA`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-EVgfTAA:(Lkotlin/random/Random;[B)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2ba94c.  v0:= "$this$nextUBytes" @kind object;
  #L2ba950.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba956.  v0:= "array" @kind object;
  #L2ba95a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba960.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:([B)[B` @kind virtual;
  #L2ba966.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2ba9ac.  v0:= "$this$nextUBytes" @kind object;
  #L2ba9b0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba9b6.  v0:= "array" @kind object;
  #L2ba9ba.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba9c0.  call temp:= `nextBytes`(v1, v2, v3, v4) @signature `Lkotlin/random/Random;.nextBytes:([BII)[B` @kind virtual;
  #L2ba9c6.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4$default`(`kotlin.random.Random` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4$default:(Lkotlin/random/Random;[BIIILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2ba978.  v5:= v4 ^& 2;
  #L2ba97c.  if v5 == 0 then goto L2ba982;
  #L2ba980.  v2:= 0I;
  #L2ba982.  v4:= v4 ^& 4;
  #L2ba986.  if v4 == 0 then goto L2ba992;
  #L2ba98a.  call temp:= `getSize-impl`(v1) @signature `Lkotlin/UByteArray;.getSize-impl:([B)I` @kind static;
  #L2ba990.  v3:= temp;
  #L2ba992.  call temp:= `nextUBytes-Wvrt4B4`(v0, v1, v2, v3) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @kind static;
  #L2ba998.  v0:= temp @kind object;
  #L2ba99a.  return v0 @kind object;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v1 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2ba9d8.  v0:= "<this>" @kind object;
  #L2ba9dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2ba9e2.  call temp:= `nextInt`(v1) @signature `Lkotlin/random/Random;.nextInt:()I` @kind virtual;
  #L2ba9e8.  v1:= temp;
  #L2ba9ea.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2ba9f0.  v1:= temp;
  #L2ba9f2.  return v1;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v2 @kind object, `kotlin.ranges.UIntRange` v3 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;Lkotlin/ranges/UIntRange;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2baa04.  v0:= "<this>" @kind object;
  #L2baa08.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2baa0e.  v0:= "range" @kind object;
  #L2baa12.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2baa18.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L2baa1e.  v0:= temp;
  #L2baa20.  if v0 != 0 then goto L2baab2;
  #L2baa24.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2baa2a.  v0:= temp;
  #L2baa2c.  v1:= -1I;
  #L2baa2e.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2baa34.  v0:= temp;
  #L2baa36.  if v0 >= 0 then goto L2baa60;
  #L2baa3a.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2baa40.  v0:= temp;
  #L2baa42.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2baa48.  v3:= temp;
  #L2baa4a.  v3:= v3 + 1;
  #L2baa4e.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2baa54.  v3:= temp;
  #L2baa56.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L2baa5c.  v2:= temp;
  #L2baa5e.  goto L2baab0;
  #L2baa60.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2baa66.  v0:= temp;
  #L2baa68.  v1:= 0I;
  #L2baa6a.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L2baa70.  v0:= temp;
  #L2baa72.  if v0 <= 0 then goto L2baaa8;
  #L2baa76.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L2baa7c.  v0:= temp;
  #L2baa7e.  v0:= v0 + -1;
  #L2baa82.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2baa88.  v0:= temp;
  #L2baa8a.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L2baa90.  v3:= temp;
  #L2baa92.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L2baa98.  v2:= temp;
  #L2baa9a.  v2:= v2 + 1;
  #L2baa9e.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2baaa4.  v2:= temp;
  #L2baaa6.  goto L2baab0;
  #L2baaa8.  call temp:= `nextUInt`(v2) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @kind static;
  #L2baaae.  v2:= temp;
  #L2baab0.  return v2;
  #L2baab2.  v2:= new `java.lang.IllegalArgumentException`;
  #L2baab6.  v0:= new `java.lang.StringBuilder`;
  #L2baaba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2baac0.  v1:= "Cannot get random in empty range: " @kind object;
  #L2baac4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baaca.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2baad0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2baad6.  v3:= temp @kind object;
  #L2baad8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2baade.  throw v2;
}
procedure `int` `nextUInt-a8DCA5k`(`kotlin.random.Random` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2baaf0.  v0:= "$this$nextUInt" @kind object;
  #L2baaf4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2baafa.  call `checkUIntRangeBounds-J1ME1BU`(v2, v3) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @kind static;
  #L2bab00.  v0:= -2147483648I;
  #L2bab04.  v2:= v2 ^~ v0 @kind int;
  #L2bab06.  v3:= v3 ^~ v0 @kind int;
  #L2bab08.  call temp:= `nextInt`(v1, v2, v3) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L2bab0e.  v1:= temp;
  #L2bab10.  v1:= v1 ^~ v0 @kind int;
  #L2bab12.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L2bab18.  v1:= temp;
  #L2bab1a.  return v1;
}
procedure `int` `nextUInt-qCasIEU`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUInt-qCasIEU:(Lkotlin/random/Random;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2bab2c.  v0:= "$this$nextUInt" @kind object;
  #L2bab30.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bab36.  v0:= 0I;
  #L2bab38.  call temp:= `nextUInt-a8DCA5k`(v1, v0, v2) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L2bab3e.  v1:= temp;
  #L2bab40.  return v1;
}
procedure `long` `nextULong`(`kotlin.random.Random` v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2bab54.  v0:= "<this>" @kind object;
  #L2bab58.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bab5e.  call temp:= `nextLong`(v2) @signature `Lkotlin/random/Random;.nextLong:()J` @kind virtual;
  #L2bab64.  v0:= temp @kind wide;
  #L2bab66.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bab6c.  v0:= temp @kind wide;
  #L2bab6e.  return v0 @kind wide;
}
procedure `long` `nextULong`(`kotlin.random.Random` v10 @kind object, `kotlin.ranges.ULongRange` v11 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;Lkotlin/ranges/ULongRange;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2bab80.  v0:= "<this>" @kind object;
  #L2bab84.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bab8a.  v0:= "range" @kind object;
  #L2bab8e.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bab94.  call temp:= `isEmpty`(v11) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L2bab9a.  v0:= temp;
  #L2bab9c.  if v0 != 0 then goto L2bac58;
  #L2baba0.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2baba6.  v0:= temp @kind wide;
  #L2baba8.  v2:= -1L;
  #L2babac.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L2babb2.  v0:= temp;
  #L2babb4.  v1:= 4294967295L;
  #L2babbe.  v3:= 1I;
  #L2babc0.  if v0 >= 0 then goto L2babf4;
  #L2babc4.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2babca.  v4:= temp @kind wide;
  #L2babcc.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2babd2.  v6:= temp @kind wide;
  #L2babd4.  v8:= (`long`) v3 @kind i2l;
  #L2babd6.  v1:= v1 ^& v8 @kind long;
  #L2babd8.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2babde.  v0:= temp @kind wide;
  #L2babe0.  v6:= v6 + v0 @kind long;
  #L2babe2.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2babe8.  v0:= temp @kind wide;
  #L2babea.  call temp:= `nextULong-jmpaW-c`(v10, v4, v0) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L2babf0.  v10:= temp @kind wide;
  #L2babf2.  goto L2bac56;
  #L2babf4.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2babfa.  v4:= temp @kind wide;
  #L2babfc.  v6:= 0L;
  #L2bac00.  call temp:= `ulongCompare`(v4, v6) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L2bac06.  v0:= temp;
  #L2bac08.  if v0 <= 0 then goto L2bac4e;
  #L2bac0c.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L2bac12.  v4:= temp @kind wide;
  #L2bac14.  v6:= (`long`) v3 @kind i2l;
  #L2bac16.  v1:= v1 ^& v6 @kind long;
  #L2bac18.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bac1e.  v6:= temp @kind wide;
  #L2bac20.  v4:= v4 - v6 @kind long;
  #L2bac22.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bac28.  v3:= temp @kind wide;
  #L2bac2a.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L2bac30.  v5:= temp @kind wide;
  #L2bac32.  call temp:= `nextULong-jmpaW-c`(v10, v3, v5) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L2bac38.  v10:= temp @kind wide;
  #L2bac3a.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bac40.  v0:= temp @kind wide;
  #L2bac42.  v10:= v10 + v0 @kind long;
  #L2bac44.  call temp:= `constructor-impl`(v10) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bac4a.  v10:= temp @kind wide;
  #L2bac4c.  goto L2bac56;
  #L2bac4e.  call temp:= `nextULong`(v10) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @kind static;
  #L2bac54.  v10:= temp @kind wide;
  #L2bac56.  return v10 @kind wide;
  #L2bac58.  v10:= new `java.lang.IllegalArgumentException`;
  #L2bac5c.  v0:= new `java.lang.StringBuilder`;
  #L2bac60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bac66.  v1:= "Cannot get random in empty range: " @kind object;
  #L2bac6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bac70.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bac76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bac7c.  v11:= temp @kind object;
  #L2bac7e.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bac84.  throw v10;
}
procedure `long` `nextULong-V1Xi4fY`(`kotlin.random.Random` v2 @kind object, `long` v3 ) @signature `Lkotlin/random/URandomKt;.nextULong-V1Xi4fY:(Lkotlin/random/Random;J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2bac98.  v0:= "$this$nextULong" @kind object;
  #L2bac9c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2baca2.  v0:= 0L;
  #L2baca6.  call temp:= `nextULong-jmpaW-c`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L2bacac.  v2:= temp @kind wide;
  #L2bacae.  return v2 @kind wide;
}
procedure `long` `nextULong-jmpaW-c`(`kotlin.random.Random` v2 @kind object, `long` v3 , `long` v5 ) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2bacc0.  v0:= "$this$nextULong" @kind object;
  #L2bacc4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2bacca.  call `checkULongRangeBounds-eb3DHEI`(v3, v5) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @kind static;
  #L2bacd0.  v0:= -9223372036854775808L;
  #L2bacd4.  v3:= v3 ^~ v0 @kind long;
  #L2bacd6.  v5:= v5 ^~ v0 @kind long;
  #L2bacd8.  call temp:= `nextLong`(v2, v3, v5) @signature `Lkotlin/random/Random;.nextLong:(JJ)J` @kind virtual;
  #L2bacde.  v2:= temp @kind wide;
  #L2bace0.  v2:= v2 ^~ v0 @kind long;
  #L2bace2.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L2bace8.  v2:= temp @kind wide;
  #L2bacea.  return v2 @kind wide;
}
