record `kotlin.random.PlatformRandomKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.Random` `asJavaRandom`(`kotlin.random.Random` v1 @kind object) @signature `Lkotlin/random/PlatformRandomKt;.asJavaRandom:(Lkotlin/random/Random;)Ljava/util/Random;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2b9c0c.  v0:= "<this>" @kind object;
  #L2b9c10.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b9c16.  v0:= instanceof @variable v1 @type ^`kotlin.random.AbstractPlatformRandom` @kind boolean;
  #L2b9c1a.  if v0 == 0 then goto L2b9c26;
  #L2b9c1e.  v0:= v1 @kind object;
  #L2b9c20.  v0:= (`kotlin.random.AbstractPlatformRandom`) v0 @kind object;
  #L2b9c24.  goto L2b9c28;
  #L2b9c26.  v0:= 0I;
  #L2b9c28.  if v0 == 0 then goto L2b9c38;
  #L2b9c2c.  call temp:= `getImpl`(v0) @signature `Lkotlin/random/AbstractPlatformRandom;.getImpl:()Ljava/util/Random;` @kind virtual;
  #L2b9c32.  v0:= temp @kind object;
  #L2b9c34.  if v0 != 0 then goto L2b9c42;
  #L2b9c38.  v0:= new `kotlin.random.KotlinRandom`;
  #L2b9c3c.  call `<init>`(v0, v1) @signature `Lkotlin/random/KotlinRandom;.<init>:(Lkotlin/random/Random;)V` @kind direct;
  #L2b9c42.  return v0 @kind object;
}
procedure `kotlin.random.Random` `asKotlinRandom`(`java.util.Random` v1 @kind object) @signature `Lkotlin/random/PlatformRandomKt;.asKotlinRandom:(Ljava/util/Random;)Lkotlin/random/Random;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L2b9c54.  v0:= "<this>" @kind object;
  #L2b9c58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b9c5e.  v0:= instanceof @variable v1 @type ^`kotlin.random.KotlinRandom` @kind boolean;
  #L2b9c62.  if v0 == 0 then goto L2b9c6e;
  #L2b9c66.  v0:= v1 @kind object;
  #L2b9c68.  v0:= (`kotlin.random.KotlinRandom`) v0 @kind object;
  #L2b9c6c.  goto L2b9c70;
  #L2b9c6e.  v0:= 0I;
  #L2b9c70.  if v0 == 0 then goto L2b9c80;
  #L2b9c74.  call temp:= `getImpl`(v0) @signature `Lkotlin/random/KotlinRandom;.getImpl:()Lkotlin/random/Random;` @kind virtual;
  #L2b9c7a.  v0:= temp @kind object;
  #L2b9c7c.  if v0 != 0 then goto L2b9c8a;
  #L2b9c80.  v0:= new `kotlin.random.PlatformRandom`;
  #L2b9c84.  call `<init>`(v0, v1) @signature `Lkotlin/random/PlatformRandom;.<init>:(Ljava/util/Random;)V` @kind direct;
  #L2b9c8a.  return v0 @kind object;
}
procedure `kotlin.random.Random` `defaultPlatformRandom`() @signature `Lkotlin/random/PlatformRandomKt;.defaultPlatformRandom:()Lkotlin/random/Random;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L2b9c9c.  v0:= `@@kotlin.internal.PlatformImplementationsKt.IMPLEMENTATIONS` @type ^`kotlin.internal.PlatformImplementations` @kind object;
  #L2b9ca0.  call temp:= `defaultPlatformRandom`(v0) @signature `Lkotlin/internal/PlatformImplementations;.defaultPlatformRandom:()Lkotlin/random/Random;` @kind virtual;
  #L2b9ca6.  v0:= temp @kind object;
  #L2b9ca8.  return v0 @kind object;
}
procedure `double` `doubleFromParts`(`int` v2 , `int` v3 ) @signature `Lkotlin/random/PlatformRandomKt;.doubleFromParts:(II)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L2b9be0.  v0:= (`long`) v2 @kind i2l;
  #L2b9be2.  v2:= 27I;
  #L2b9be6.  v0:= v0 ^< v2 @kind long;
  #L2b9be8.  v2:= (`long`) v3 @kind i2l;
  #L2b9bea.  v0:= v0 + v2 @kind long;
  #L2b9bec.  v2:= (`double`) v0 @kind l2d;
  #L2b9bee.  v0:= 9.007199254740992E15D;
  #L2b9bf2.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2b9bf8.  v2:= v2 / v0 @kind double;
  #L2b9bfa.  return v2 @kind wide;
}
