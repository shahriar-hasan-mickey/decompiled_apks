record `kotlin.random.PlatformRandom` @kind class @AccessFlag FINAL extends `kotlin.random.AbstractPlatformRandom` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Random` `kotlin.random.PlatformRandom.impl` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.random.PlatformRandom$Companion` `@@kotlin.random.PlatformRandom.Companion` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.random.PlatformRandom.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/random/PlatformRandom;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b9cd4.  v0:= new `kotlin.random.PlatformRandom$Companion`;
  #L2b9cd8.  v1:= 0I;
  #L2b9cda.  call `<init>`(v0, v1) @signature `Lkotlin/random/PlatformRandom$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L2b9ce0.  `@@kotlin.random.PlatformRandom.Companion` @type ^`kotlin.random.PlatformRandom$Companion` := v0 @kind object;
  #L2b9ce4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.random.PlatformRandom` v1 @kind this, `java.util.Random` v2 @kind object) @signature `Lkotlin/random/PlatformRandom;.<init>:(Ljava/util/Random;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b9cf8.  v0:= "impl" @kind object;
  #L2b9cfc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2b9d02.  call `<init>`(v1) @signature `Lkotlin/random/AbstractPlatformRandom;.<init>:()V` @kind direct;
  #L2b9d08.  v1.`kotlin.random.PlatformRandom.impl` @type ^`java.util.Random` := v2 @kind object;
  #L2b9d0c.  return @kind void;
}
procedure `java.util.Random` `getImpl`(`kotlin.random.PlatformRandom` v1 @kind this) @signature `Lkotlin/random/PlatformRandom;.getImpl:()Ljava/util/Random;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9cbc.  v0:= v1.`kotlin.random.PlatformRandom.impl` @type ^`java.util.Random` @kind object;
  #L2b9cc0.  return v0 @kind object;
}
