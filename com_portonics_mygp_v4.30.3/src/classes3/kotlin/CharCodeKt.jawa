record `kotlin.CharCodeKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `char` `Char`(`int` v3 ) @signature `Lkotlin/CharCodeKt;.Char:(I)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L295e90.  if v3 < 0 then goto L295ea2;
  #L295e94.  v0:= 65535I;
  #L295e9a.  if v3 > v0 then goto L295ea2;
  #L295e9e.  v3:= (`char`) v3 @kind i2c;
  #L295ea0.  return v3;
  #L295ea2.  v0:= new `java.lang.IllegalArgumentException`;
  #L295ea6.  v1:= new `java.lang.StringBuilder`;
  #L295eaa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L295eb0.  v2:= "Invalid Char code: " @kind object;
  #L295eb4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295eba.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L295ec0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L295ec6.  v3:= temp @kind object;
  #L295ec8.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L295ece.  throw v0;
}
procedure `int` `getCode`(`char` v0 ) @signature `Lkotlin/CharCodeKt;.getCode:(C)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L295ee0.  return v0;
}
procedure `void` `getCode$annotations`(`char` v0 ) @signature `Lkotlin/CharCodeKt;.getCode$annotations:(C)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L295ef4.  return @kind void;
}
