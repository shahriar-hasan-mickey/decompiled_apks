record `kotlin.contracts.InvocationKind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.contracts.InvocationKind`[] `@@kotlin.contracts.InvocationKind.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.contracts.InvocationKind` `@@kotlin.contracts.InvocationKind.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlin.contracts.InvocationKind`[] `$values`() @signature `Lkotlin/contracts/InvocationKind;.$values:()[Lkotlin/contracts/InvocationKind;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2ad180.  v0:= 4I;
  #L2ad182.  v0:= new `kotlin.contracts.InvocationKind`[v0];
  #L2ad186.  v1:= `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L2ad18a.  v2:= 0I;
  #L2ad18c.  v0[v2]:= v1 @kind object;
  #L2ad190.  v1:= `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L2ad194.  v2:= 1I;
  #L2ad196.  v0[v2]:= v1 @kind object;
  #L2ad19a.  v1:= `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L2ad19e.  v2:= 2I;
  #L2ad1a0.  v0[v2]:= v1 @kind object;
  #L2ad1a4.  v1:= `@@kotlin.contracts.InvocationKind.UNKNOWN` @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L2ad1a8.  v2:= 3I;
  #L2ad1aa.  v0[v2]:= v1 @kind object;
  #L2ad1ae.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlin/contracts/InvocationKind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2ad1e4.  v0:= new `kotlin.contracts.InvocationKind`;
  #L2ad1e8.  v1:= "AT_MOST_ONCE" @kind object;
  #L2ad1ec.  v2:= 0I;
  #L2ad1ee.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ad1f4.  `@@kotlin.contracts.InvocationKind.AT_MOST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L2ad1f8.  v0:= new `kotlin.contracts.InvocationKind`;
  #L2ad1fc.  v1:= "AT_LEAST_ONCE" @kind object;
  #L2ad200.  v2:= 1I;
  #L2ad202.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ad208.  `@@kotlin.contracts.InvocationKind.AT_LEAST_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L2ad20c.  v0:= new `kotlin.contracts.InvocationKind`;
  #L2ad210.  v1:= "EXACTLY_ONCE" @kind object;
  #L2ad214.  v2:= 2I;
  #L2ad216.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ad21c.  `@@kotlin.contracts.InvocationKind.EXACTLY_ONCE` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L2ad220.  v0:= new `kotlin.contracts.InvocationKind`;
  #L2ad224.  v1:= "UNKNOWN" @kind object;
  #L2ad228.  v2:= 3I;
  #L2ad22a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ad230.  `@@kotlin.contracts.InvocationKind.UNKNOWN` @type ^`kotlin.contracts.InvocationKind` := v0 @kind object;
  #L2ad234.  call temp:= `$values`() @signature `Lkotlin/contracts/InvocationKind;.$values:()[Lkotlin/contracts/InvocationKind;` @kind static;
  #L2ad23a.  v0:= temp @kind object;
  #L2ad23c.  `@@kotlin.contracts.InvocationKind.$VALUES` @type ^`kotlin.contracts.InvocationKind`[] := v0 @kind object;
  #L2ad240.  return @kind void;
}
procedure `void` `<init>`(`kotlin.contracts.InvocationKind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/contracts/InvocationKind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ad254.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2ad25a.  return @kind void;
}
procedure `kotlin.contracts.InvocationKind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/contracts/InvocationKind;.valueOf:(Ljava/lang/String;)Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad15c.  v0:= constclass @type ^`kotlin.contracts.InvocationKind` @kind object;
  #L2ad160.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2ad166.  v1:= temp @kind object;
  #L2ad168.  v1:= (`kotlin.contracts.InvocationKind`) v1 @kind object;
  #L2ad16c.  return v1 @kind object;
}
procedure `kotlin.contracts.InvocationKind`[] `values`() @signature `Lkotlin/contracts/InvocationKind;.values:()[Lkotlin/contracts/InvocationKind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad1c0.  v0:= `@@kotlin.contracts.InvocationKind.$VALUES` @type ^`kotlin.contracts.InvocationKind`[] @kind object;
  #L2ad1c4.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ad1ca.  v0:= temp @kind object;
  #L2ad1cc.  v0:= (`kotlin.contracts.InvocationKind`[]) v0 @kind object;
  #L2ad1d0.  return v0 @kind object;
}
