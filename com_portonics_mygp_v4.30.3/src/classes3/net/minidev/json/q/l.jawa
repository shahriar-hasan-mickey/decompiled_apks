record `net.minidev.json.q.l` @kind class @AccessFlag  extends `net.minidev.json.q.z` @kind interface {
  `net.minidev.json.q.y` `net.minidev.json.q.l.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`net.minidev.json.q.l` v0 @kind this, `net.minidev.json.q.y` v1 @kind object) @signature `Lnet/minidev/json/q/l;.<init>:(Lnet/minidev/json/q/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3eac.  v0.`net.minidev.json.q.l.a` @type ^`net.minidev.json.q.y` := v1 @kind object;
  #L2f3eb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3eb6.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/l;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3ec8.  v1:= (`long`[]) v1 @kind object;
  #L2f3ecc.  call `b`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/l;.b:([JLjava/lang/Appendable;Lnet/minidev/json/e;)V` @kind virtual;
  #L2f3ed2.  return @kind void;
}
procedure `void` `b`(`net.minidev.json.q.l` v5 @kind this, `long`[] v6 @kind object, `java.lang.Appendable` v7 @kind object, `net.minidev.json.e` v8 @kind object) @signature `Lnet/minidev/json/q/l;.b:([JLjava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f3ee4.  call `c`(v8, v7) @signature `Lnet/minidev/json/e;.c:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3eea.  v0:= length @variable v6;
  #L2f3eec.  v1:= 0I;
  #L2f3eee.  v2:= 0I;
  #L2f3ef0.  if v1 >= v0 then goto L2f3f1a;
  #L2f3ef4.  v3:= v6[v1] @kind wide;
  #L2f3ef8.  if v2 == 0 then goto L2f3f04;
  #L2f3efc.  call `m`(v8, v7) @signature `Lnet/minidev/json/e;.m:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3f02.  goto L2f3f06;
  #L2f3f04.  v2:= 1I;
  #L2f3f06.  call temp:= `toString`(v3) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L2f3f0c.  v3:= temp @kind object;
  #L2f3f0e.  call temp:= `append`(v7, v3) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f3f14.  v1:= v1 + 1;
  #L2f3f18.  goto L2f3ef0;
  #L2f3f1a.  call `d`(v8, v7) @signature `Lnet/minidev/json/e;.d:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3f20.  return @kind void;
}
