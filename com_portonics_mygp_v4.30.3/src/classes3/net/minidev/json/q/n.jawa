record `net.minidev.json.q.n` @kind class @AccessFlag  extends `net.minidev.json.q.z` @kind interface {
  `net.minidev.json.q.y` `net.minidev.json.q.n.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`net.minidev.json.q.n` v0 @kind this, `net.minidev.json.q.y` v1 @kind object) @signature `Lnet/minidev/json/q/n;.<init>:(Lnet/minidev/json/q/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3fbc.  v0.`net.minidev.json.q.n.a` @type ^`net.minidev.json.q.y` := v1 @kind object;
  #L2f3fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3fc6.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.n` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/n;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f4028.  v1:= (`double`[]) v1 @kind object;
  #L2f402c.  call `b`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/n;.b:([DLjava/lang/Appendable;Lnet/minidev/json/e;)V` @kind virtual;
  #L2f4032.  return @kind void;
}
procedure `void` `b`(`net.minidev.json.q.n` v5 @kind this, `double`[] v6 @kind object, `java.lang.Appendable` v7 @kind object, `net.minidev.json.e` v8 @kind object) @signature `Lnet/minidev/json/q/n;.b:([DLjava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f3fd8.  call `c`(v8, v7) @signature `Lnet/minidev/json/e;.c:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3fde.  v0:= length @variable v6;
  #L2f3fe0.  v1:= 0I;
  #L2f3fe2.  v2:= 0I;
  #L2f3fe4.  if v1 >= v0 then goto L2f400e;
  #L2f3fe8.  v3:= v6[v1] @kind wide;
  #L2f3fec.  if v2 == 0 then goto L2f3ff8;
  #L2f3ff0.  call `m`(v8, v7) @signature `Lnet/minidev/json/e;.m:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3ff6.  goto L2f3ffa;
  #L2f3ff8.  v2:= 1I;
  #L2f3ffa.  call temp:= `toString`(v3) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L2f4000.  v3:= temp @kind object;
  #L2f4002.  call temp:= `append`(v7, v3) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f4008.  v1:= v1 + 1;
  #L2f400c.  goto L2f3fe4;
  #L2f400e.  call `d`(v8, v7) @signature `Lnet/minidev/json/e;.d:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f4014.  return @kind void;
}
