record `net.minidev.json.q.i` @kind class @AccessFlag  extends `net.minidev.json.q.z` @kind interface {
  `net.minidev.json.q.y` `net.minidev.json.q.i.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`net.minidev.json.q.i` v0 @kind this, `net.minidev.json.q.y` v1 @kind object) @signature `Lnet/minidev/json/q/i;.<init>:(Lnet/minidev/json/q/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3d50.  v0.`net.minidev.json.q.i.a` @type ^`net.minidev.json.q.y` := v1 @kind object;
  #L2f3d54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3d5a.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.i` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/i;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3dbc.  v1:= (`int`[]) v1 @kind object;
  #L2f3dc0.  call `b`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/i;.b:([ILjava/lang/Appendable;Lnet/minidev/json/e;)V` @kind virtual;
  #L2f3dc6.  return @kind void;
}
procedure `void` `b`(`net.minidev.json.q.i` v4 @kind this, `int`[] v5 @kind object, `java.lang.Appendable` v6 @kind object, `net.minidev.json.e` v7 @kind object) @signature `Lnet/minidev/json/q/i;.b:([ILjava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f3d6c.  call `c`(v7, v6) @signature `Lnet/minidev/json/e;.c:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3d72.  v0:= length @variable v5;
  #L2f3d74.  v1:= 0I;
  #L2f3d76.  v2:= 0I;
  #L2f3d78.  if v1 >= v0 then goto L2f3da2;
  #L2f3d7c.  v3:= v5[v1];
  #L2f3d80.  if v2 == 0 then goto L2f3d8c;
  #L2f3d84.  call `m`(v7, v6) @signature `Lnet/minidev/json/e;.m:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3d8a.  goto L2f3d8e;
  #L2f3d8c.  v2:= 1I;
  #L2f3d8e.  call temp:= `toString`(v3) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L2f3d94.  v3:= temp @kind object;
  #L2f3d96.  call temp:= `append`(v6, v3) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f3d9c.  v1:= v1 + 1;
  #L2f3da0.  goto L2f3d78;
  #L2f3da2.  call `d`(v7, v6) @signature `Lnet/minidev/json/e;.d:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3da8.  return @kind void;
}
