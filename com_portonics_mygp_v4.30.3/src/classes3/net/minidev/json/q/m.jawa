record `net.minidev.json.q.m` @kind class @AccessFlag  extends `net.minidev.json.q.z` @kind interface {
  `net.minidev.json.q.y` `net.minidev.json.q.m.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`net.minidev.json.q.m` v0 @kind this, `net.minidev.json.q.y` v1 @kind object) @signature `Lnet/minidev/json/q/m;.<init>:(Lnet/minidev/json/q/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3f34.  v0.`net.minidev.json.q.m.a` @type ^`net.minidev.json.q.y` := v1 @kind object;
  #L2f3f38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3f3e.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.m` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/m;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3fa0.  v1:= (`float`[]) v1 @kind object;
  #L2f3fa4.  call `b`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/m;.b:([FLjava/lang/Appendable;Lnet/minidev/json/e;)V` @kind virtual;
  #L2f3faa.  return @kind void;
}
procedure `void` `b`(`net.minidev.json.q.m` v4 @kind this, `float`[] v5 @kind object, `java.lang.Appendable` v6 @kind object, `net.minidev.json.e` v7 @kind object) @signature `Lnet/minidev/json/q/m;.b:([FLjava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f3f50.  call `c`(v7, v6) @signature `Lnet/minidev/json/e;.c:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3f56.  v0:= length @variable v5;
  #L2f3f58.  v1:= 0I;
  #L2f3f5a.  v2:= 0I;
  #L2f3f5c.  if v1 >= v0 then goto L2f3f86;
  #L2f3f60.  v3:= v5[v1];
  #L2f3f64.  if v2 == 0 then goto L2f3f70;
  #L2f3f68.  call `m`(v7, v6) @signature `Lnet/minidev/json/e;.m:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3f6e.  goto L2f3f72;
  #L2f3f70.  v2:= 1I;
  #L2f3f72.  call temp:= `toString`(v3) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L2f3f78.  v3:= temp @kind object;
  #L2f3f7a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f3f80.  v1:= v1 + 1;
  #L2f3f84.  goto L2f3f5c;
  #L2f3f86.  call `d`(v7, v6) @signature `Lnet/minidev/json/e;.d:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f3f8c.  return @kind void;
}
