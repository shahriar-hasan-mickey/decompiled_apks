record `net.minidev.json.q.v` @kind class @AccessFlag FINAL extends `net.minidev.json.q.z` @kind interface {
}
procedure `void` `<init>`(`net.minidev.json.q.v` v0 @kind this) @signature `Lnet/minidev/json/q/v;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f437c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f4382.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.v` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Appendable` v12 @kind object, `net.minidev.json.e` v13 @kind object) @signature `Lnet/minidev/json/q/v;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2f4394.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2f439a.  v0:= temp @kind object;
  #L2f439c.  call `n`(v13, v12) @signature `Lnet/minidev/json/e;.n:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f43a2.  v1:= 0I;
  #L2f43a4.  v2:= 0I;
  #L2f43a6.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L2f43aa.  if v0 == v3 then goto L2f4490;
  #L2f43ae.  call temp:= `getDeclaredFields`(v0) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L2f43b4.  v3:= temp @kind object;
  #L2f43b6.  v4:= length @variable v3;
  #L2f43b8.  v5:= 0I;
  #L2f43ba.  if v5 >= v4 then goto L2f4486;
  #L2f43be.  v6:= v3[v5] @kind object;
  #L2f43c2.  call temp:= `getModifiers`(v6) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L2f43c8.  v7:= temp;
  #L2f43ca.  v8:= v7 ^& 152;
  #L2f43ce.  if v8 <= 0 then goto L2f43d4;
  #L2f43d2.  goto L2f4480;
  #L2f43d4.  v7:= v7 ^& 1;
  #L2f43d8.  if v7 <= 0 then goto L2f43e6;
  #L2f43dc.  call temp:= `get`(v6, v11) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f43e2.  v7:= temp @kind object;
  #L2f43e4.  goto L2f4452;
  #L2f43e6.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L2f43ec.  v7:= temp @kind object;
  #L2f43ee.  call temp:= `a`(v7) @signature `Lnet/minidev/json/f;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2f43f4.  v7:= temp @kind object;
  #L2f43f6.  v8:= 0I;
  #L2f43f8.  v9:= new `java.lang.Class`[v1];
  #L2f43fc.  call temp:= `getDeclaredMethod`(v0, v7, v9) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2f4402.  v8:= temp @kind object;
  #L2f4404.  goto L2f4408;
  #L2f4406.  
  #L2f4408.  if v8 != 0 then goto L2f4440;
  #L2f440c.  call temp:= `getType`(v6) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L2f4412.  v7:= temp @kind object;
  #L2f4414.  v9:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L2f4418.  if v7 == v9 then goto L2f4424;
  #L2f441c.  v9:= constclass @type ^`java.lang.Boolean` @kind object;
  #L2f4420.  if v7 != v9 then goto L2f4440;
  #L2f4424.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L2f442a.  v7:= temp @kind object;
  #L2f442c.  call temp:= `b`(v7) @signature `Lnet/minidev/json/f;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2f4432.  v7:= temp @kind object;
  #L2f4434.  v8:= new `java.lang.Class`[v1];
  #L2f4438.  call temp:= `getDeclaredMethod`(v0, v7, v8) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2f443e.  v8:= temp @kind object;
  #L2f4440.  if v8 != 0 then goto L2f4446;
  #L2f4444.  goto L2f4480;
  #L2f4446.  v7:= new `java.lang.Object`[v1];
  #L2f444a.  call temp:= `invoke`(v8, v11, v7) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f4450.  v7:= temp @kind object;
  #L2f4452.  if v7 != 0 then goto L2f4464;
  #L2f4456.  call temp:= `g`(v13) @signature `Lnet/minidev/json/e;.g:()Z` @kind virtual;
  #L2f445c.  v8:= temp;
  #L2f445e.  if v8 == 0 then goto L2f4464;
  #L2f4462.  goto L2f4480;
  #L2f4464.  if v2 == 0 then goto L2f4470;
  #L2f4468.  call `m`(v13, v12) @signature `Lnet/minidev/json/e;.m:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f446e.  goto L2f4472;
  #L2f4470.  v2:= 1I;
  #L2f4472.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L2f4478.  v6:= temp @kind object;
  #L2f447a.  call `f`(v6, v7, v12, v13) @signature `Lnet/minidev/json/q/y;.f:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind static;
  #L2f4480.  v5:= v5 + 1;
  #L2f4484.  goto L2f43ba;
  #L2f4486.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L2f448c.  v0:= temp @kind object;
  #L2f448e.  goto L2f43a6;
  #L2f4490.  call `o`(v13, v12) @signature `Lnet/minidev/json/e;.o:(Ljava/lang/Appendable;)V` @kind virtual;
  #L2f4496.  return @kind void;
  #L2f4498.  v11:= Exception @type ^`java.lang.Exception` @kind object;
  #L2f449a.  v12:= new `java.lang.RuntimeException`;
  #L2f449e.  call `<init>`(v12, v11) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2f44a4.  goto L2f44a8;
  #L2f44a6.  throw v12;
  #L2f44a8.  goto L2f44a6;
  catch `java.lang.Exception` @[L2f4394..L2f43f6] goto L2f4498;
  catch `java.lang.Exception` @[L2f43f8..L2f4404] goto L2f4406;
  catch `java.lang.Exception` @[L2f440c..L2f4496] goto L2f4498;
}
