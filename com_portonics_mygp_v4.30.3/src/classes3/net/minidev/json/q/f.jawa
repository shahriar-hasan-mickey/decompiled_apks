record `net.minidev.json.q.f` @kind class @AccessFlag  extends `net.minidev.json.q.z` @kind interface {
  `net.minidev.json.q.y` `net.minidev.json.q.f.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`net.minidev.json.q.f` v0 @kind this, `net.minidev.json.q.y` v1 @kind object) @signature `Lnet/minidev/json/q/f;.<init>:(Lnet/minidev/json/q/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f3c48.  v0.`net.minidev.json.q.f.a` @type ^`net.minidev.json.q.y` := v1 @kind object;
  #L2f3c4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3c52.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.q.f` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/f;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3c84.  v1:= (`java.lang.Number`) v1 @kind object;
  #L2f3c88.  call `b`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/f;.b:(Ljava/lang/Number;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind virtual;
  #L2f3c8e.  return @kind void;
}
procedure `void` `b`(`net.minidev.json.q.f` v0 @kind this, `java.lang.Number` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/q/f;.b:(Ljava/lang/Number;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;

  #L2f3c64.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f3c6a.  v1:= temp @kind object;
  #L2f3c6c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f3c72.  return @kind void;
}
