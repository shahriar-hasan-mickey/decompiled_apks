record `net.minidev.json.g` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `net.minidev.json.e` `@@net.minidev.json.g.a` @AccessFlag PUBLIC_STATIC;
global `net.minidev.json.parser.FakeContainerFactory` `@@net.minidev.json.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `net.minidev.json.q.y` `@@net.minidev.json.g.c` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lnet/minidev/json/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f1610.  v0:= `@@net.minidev.json.e.a` @type ^`net.minidev.json.e` @kind object;
  #L2f1614.  `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` := v0 @kind object;
  #L2f1618.  v0:= new `net.minidev.json.parser.FakeContainerFactory`;
  #L2f161c.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/FakeContainerFactory;.<init>:()V` @kind direct;
  #L2f1622.  `@@net.minidev.json.g.b` @type ^`net.minidev.json.parser.FakeContainerFactory` := v0 @kind object;
  #L2f1626.  v0:= new `net.minidev.json.q.y`;
  #L2f162a.  call `<init>`(v0) @signature `Lnet/minidev/json/q/y;.<init>:()V` @kind direct;
  #L2f1630.  `@@net.minidev.json.g.c` @type ^`net.minidev.json.q.y` := v0 @kind object;
  #L2f1634.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object) @signature `Lnet/minidev/json/g;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f15bc.  v0:= `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` @kind object;
  #L2f15c0.  call temp:= `b`(v1, v0) @signature `Lnet/minidev/json/g;.b:(Ljava/lang/String;Lnet/minidev/json/e;)Ljava/lang/String;` @kind static;
  #L2f15c6.  v1:= temp @kind object;
  #L2f15c8.  return v1 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v1 @kind object, `net.minidev.json.e` v2 @kind object) @signature `Lnet/minidev/json/g;.b:(Ljava/lang/String;Lnet/minidev/json/e;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f15dc.  if v1 != 0 then goto L2f15e4;
  #L2f15e0.  v1:= 0I;
  #L2f15e2.  return v1 @kind object;
  #L2f15e4.  v0:= new `java.lang.StringBuilder`;
  #L2f15e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f15ee.  call `f`(v2, v1, v0) @signature `Lnet/minidev/json/e;.f:(Ljava/lang/String;Ljava/lang/Appendable;)V` @kind virtual;
  #L2f15f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f15fa.  v1:= temp @kind object;
  #L2f15fc.  return v1 @kind object;
}
procedure `void` `c`(`java.lang.String` v0 @kind object, `java.lang.Appendable` v1 @kind object, `net.minidev.json.e` v2 @kind object) @signature `Lnet/minidev/json/g;.c:(Ljava/lang/String;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2f1648.  if v0 != 0 then goto L2f164e;
  #L2f164c.  return @kind void;
  #L2f164e.  call `f`(v2, v0, v1) @signature `Lnet/minidev/json/e;.f:(Ljava/lang/String;Ljava/lang/Appendable;)V` @kind virtual;
  #L2f1654.  return @kind void;
}
procedure `void` `d`(`java.lang.Object` v5 @kind object, `java.lang.Appendable` v6 @kind object, `net.minidev.json.e` v7 @kind object) @signature `Lnet/minidev/json/g;.d:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f1668.  if v5 != 0 then goto L2f1678;
  #L2f166c.  v5:= "null" @kind object;
  #L2f1670.  call temp:= `append`(v6, v5) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f1676.  return @kind void;
  #L2f1678.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2f167e.  v0:= temp @kind object;
  #L2f1680.  v1:= `@@net.minidev.json.g.c` @type ^`net.minidev.json.q.y` @kind object;
  #L2f1684.  call temp:= `b`(v1, v0) @signature `Lnet/minidev/json/q/y;.b:(Ljava/lang/Class;)Lnet/minidev/json/q/z;` @kind virtual;
  #L2f168a.  v1:= temp @kind object;
  #L2f168c.  if v1 != 0 then goto L2f16d4;
  #L2f1690.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2f1696.  v1:= temp;
  #L2f1698.  if v1 == 0 then goto L2f16a2;
  #L2f169c.  v1:= `@@net.minidev.json.q.y.i` @type ^`net.minidev.json.q.z` @kind object;
  #L2f16a0.  goto L2f16be;
  #L2f16a2.  v1:= `@@net.minidev.json.g.c` @type ^`net.minidev.json.q.y` @kind object;
  #L2f16a6.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2f16ac.  v2:= temp @kind object;
  #L2f16ae.  call temp:= `c`(v1, v2) @signature `Lnet/minidev/json/q/y;.c:(Ljava/lang/Class;)Lnet/minidev/json/q/z;` @kind virtual;
  #L2f16b4.  v1:= temp @kind object;
  #L2f16b6.  if v1 != 0 then goto L2f16be;
  #L2f16ba.  v1:= `@@net.minidev.json.q.y.h` @type ^`net.minidev.json.q.z` @kind object;
  #L2f16be.  v2:= `@@net.minidev.json.g.c` @type ^`net.minidev.json.q.y` @kind object;
  #L2f16c2.  v3:= 1I;
  #L2f16c4.  v3:= new `java.lang.Class`[v3];
  #L2f16c8.  v4:= 0I;
  #L2f16ca.  v3[v4]:= v0 @kind object;
  #L2f16ce.  call `e`(v2, v1, v3) @signature `Lnet/minidev/json/q/y;.e:(Lnet/minidev/json/q/z;[Ljava/lang/Class;)V` @kind virtual;
  #L2f16d4.  call `a`(v1, v5, v6, v7) @signature `Lnet/minidev/json/q/z;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind interface;
  #L2f16da.  return @kind void;
}
