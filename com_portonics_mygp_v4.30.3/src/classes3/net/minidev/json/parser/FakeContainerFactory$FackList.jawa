record `net.minidev.json.parser.FakeContainerFactory$FackList` @kind class @AccessFlag  extends `java.util.ArrayList` @kind class {
}
procedure `void` `<init>`(`net.minidev.json.parser.FakeContainerFactory$FackList` v0 @kind this) @signature `Lnet/minidev/json/parser/FakeContainerFactory$FackList;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f213c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2f2142.  return @kind void;
}
procedure `boolean` `add`(`net.minidev.json.parser.FakeContainerFactory$FackList` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lnet/minidev/json/parser/FakeContainerFactory$FackList;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2f2100.  v1:= 0I;
  #L2f2102.  return v1;
}
procedure `java.lang.Object` `get`(`net.minidev.json.parser.FakeContainerFactory$FackList` v0 @kind this, `int` v1 ) @signature `Lnet/minidev/json/parser/FakeContainerFactory$FackList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2f2128.  v1:= 0I;
  #L2f212a.  return v1 @kind object;
}
procedure `int` `size`(`net.minidev.json.parser.FakeContainerFactory$FackList` v1 @kind this) @signature `Lnet/minidev/json/parser/FakeContainerFactory$FackList;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2114.  v0:= 0I;
  #L2f2116.  return v0;
}
