record `net.minidev.json.parser.c` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `net.minidev.json.parser.c` `@@net.minidev.json.parser.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `net.minidev.json.parser.c` `@@net.minidev.json.parser.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lnet/minidev/json/parser/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f1fe4.  v0:= new `net.minidev.json.parser.a`;
  #L2f1fe8.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/a;.<init>:()V` @kind direct;
  #L2f1fee.  `@@net.minidev.json.parser.c.a` @type ^`net.minidev.json.parser.c` := v0 @kind object;
  #L2f1ff2.  v0:= new `net.minidev.json.parser.b`;
  #L2f1ff6.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/b;.<init>:()V` @kind direct;
  #L2f1ffc.  `@@net.minidev.json.parser.c.b` @type ^`net.minidev.json.parser.c` := v0 @kind object;
  #L2f2000.  return @kind void;
}
procedure `java.util.List` `a`() @signature `Lnet/minidev/json/parser/c;.a:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `b`() @signature `Lnet/minidev/json/parser/c;.b:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
