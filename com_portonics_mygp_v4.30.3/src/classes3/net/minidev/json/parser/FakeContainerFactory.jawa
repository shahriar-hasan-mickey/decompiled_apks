record `net.minidev.json.parser.FakeContainerFactory` @kind class @AccessFlag PUBLIC extends `net.minidev.json.parser.c` @kind interface {
  `net.minidev.json.parser.FakeContainerFactory$FackList` `net.minidev.json.parser.FakeContainerFactory.c` @AccessFlag PUBLIC;
  `net.minidev.json.parser.f` `net.minidev.json.parser.FakeContainerFactory.d` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`net.minidev.json.parser.FakeContainerFactory` v0 @kind this) @signature `Lnet/minidev/json/parser/FakeContainerFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f220c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f2212.  return @kind void;
}
procedure `java.util.List` `a`(`net.minidev.json.parser.FakeContainerFactory` v1 @kind this) @signature `Lnet/minidev/json/parser/FakeContainerFactory;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f21b4.  v0:= v1.`net.minidev.json.parser.FakeContainerFactory.c` @type ^`net.minidev.json.parser.FakeContainerFactory$FackList` @kind object;
  #L2f21b8.  if v0 != 0 then goto L2f21ca;
  #L2f21bc.  v0:= new `net.minidev.json.parser.FakeContainerFactory$FackList`;
  #L2f21c0.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/FakeContainerFactory$FackList;.<init>:()V` @kind direct;
  #L2f21c6.  v1.`net.minidev.json.parser.FakeContainerFactory.c` @type ^`net.minidev.json.parser.FakeContainerFactory$FackList` := v0 @kind object;
  #L2f21ca.  v0:= v1.`net.minidev.json.parser.FakeContainerFactory.c` @type ^`net.minidev.json.parser.FakeContainerFactory$FackList` @kind object;
  #L2f21ce.  return v0 @kind object;
}
procedure `java.util.Map` `b`(`net.minidev.json.parser.FakeContainerFactory` v1 @kind this) @signature `Lnet/minidev/json/parser/FakeContainerFactory;.b:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f21e0.  v0:= v1.`net.minidev.json.parser.FakeContainerFactory.d` @type ^`net.minidev.json.parser.f` @kind object;
  #L2f21e4.  if v0 != 0 then goto L2f21f6;
  #L2f21e8.  v0:= new `net.minidev.json.parser.f`;
  #L2f21ec.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/f;.<init>:()V` @kind direct;
  #L2f21f2.  v1.`net.minidev.json.parser.FakeContainerFactory.d` @type ^`net.minidev.json.parser.f` := v0 @kind object;
  #L2f21f6.  v0:= v1.`net.minidev.json.parser.FakeContainerFactory.d` @type ^`net.minidev.json.parser.f` @kind object;
  #L2f21fa.  return v0 @kind object;
}
