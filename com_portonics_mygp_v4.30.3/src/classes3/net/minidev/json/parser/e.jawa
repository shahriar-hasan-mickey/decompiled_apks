record `net.minidev.json.parser.e` @kind class @AccessFlag PUBLIC extends `net.minidev.json.parser.d` @kind interface {
}
global `net.minidev.json.parser.e` `@@net.minidev.json.parser.e.a` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lnet/minidev/json/parser/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f20a0.  v0:= new `net.minidev.json.parser.e`;
  #L2f20a4.  call `<init>`(v0) @signature `Lnet/minidev/json/parser/e;.<init>:()V` @kind direct;
  #L2f20aa.  `@@net.minidev.json.parser.e.a` @type ^`net.minidev.json.parser.e` := v0 @kind object;
  #L2f20ae.  return @kind void;
}
procedure `void` `<init>`(`net.minidev.json.parser.e` v0 @kind this) @signature `Lnet/minidev/json/parser/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f20c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f20c6.  return @kind void;
}
procedure `boolean` `a`(`net.minidev.json.parser.e` v1 @kind this) @signature `Lnet/minidev/json/parser/e;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2078.  v0:= 0I;
  #L2f207a.  return v0;
}
procedure `boolean` `b`(`net.minidev.json.parser.e` v1 @kind this) @signature `Lnet/minidev/json/parser/e;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f203c.  v0:= 0I;
  #L2f203e.  return v0;
}
procedure `boolean` `c`(`net.minidev.json.parser.e` v1 @kind this) @signature `Lnet/minidev/json/parser/e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2064.  v0:= 0I;
  #L2f2066.  return v0;
}
procedure `boolean` `d`(`net.minidev.json.parser.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lnet/minidev/json/parser/e;.d:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2f2050.  v1:= 0I;
  #L2f2052.  return v1;
}
procedure `void` `e`(`net.minidev.json.parser.e` v0 @kind this) @signature `Lnet/minidev/json/parser/e;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L2f20ec.  return @kind void;
}
procedure `boolean` `f`(`net.minidev.json.parser.e` v1 @kind this) @signature `Lnet/minidev/json/parser/e;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2028.  v0:= 0I;
  #L2f202a.  return v0;
}
procedure `boolean` `g`(`net.minidev.json.parser.e` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lnet/minidev/json/parser/e;.g:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L2f208c.  v1:= 0I;
  #L2f208e.  return v1;
}
procedure `void` `h`(`net.minidev.json.parser.e` v0 @kind this) @signature `Lnet/minidev/json/parser/e;.h:()V` @AccessFlag PUBLIC {
    temp;

  #L2f20d8.  return @kind void;
}
procedure `boolean` `i`(`net.minidev.json.parser.e` v1 @kind this) @signature `Lnet/minidev/json/parser/e;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2014.  v0:= 0I;
  #L2f2016.  return v0;
}
