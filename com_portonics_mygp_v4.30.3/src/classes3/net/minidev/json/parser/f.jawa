record `net.minidev.json.parser.f` @kind class @AccessFlag  extends `java.util.AbstractMap` @kind class {
}
procedure `void` `<init>`(`net.minidev.json.parser.f` v0 @kind this) @signature `Lnet/minidev/json/parser/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f219c.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L2f21a2.  return @kind void;
}
procedure `java.lang.Object` `a`(`net.minidev.json.parser.f` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lnet/minidev/json/parser/f;.a:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2f2174.  v1:= 0I;
  #L2f2176.  return v1 @kind object;
}
procedure `java.util.Set` `entrySet`(`net.minidev.json.parser.f` v1 @kind this) @signature `Lnet/minidev/json/parser/f;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f2188.  v0:= 0I;
  #L2f218a.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`net.minidev.json.parser.f` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lnet/minidev/json/parser/f;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f2154.  v1:= (`java.lang.String`) v1 @kind object;
  #L2f2158.  call temp:= `a`(v0, v1, v2) @signature `Lnet/minidev/json/parser/f;.a:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f215e.  v1:= temp @kind object;
  #L2f2160.  return v1 @kind object;
}
