record `net.minidev.json.JSONArray` @kind class @AccessFlag PUBLIC extends `java.util.ArrayList` @kind class, `java.util.List` @kind interface, `net.minidev.json.b` @kind interface, `net.minidev.json.d` @kind interface {
}
global `long` `@@net.minidev.json.JSONArray.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`net.minidev.json.JSONArray` v0 @kind this) @signature `Lnet/minidev/json/JSONArray;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f0d34.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2f0d3a.  return @kind void;
}
procedure `java.lang.String` `toJSONString`(`java.util.List` v1 @kind object) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0c84.  v0:= `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` @kind object;
  #L2f0c88.  call temp:= `toJSONString`(v1, v0) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Ljava/util/List;Lnet/minidev/json/e;)Ljava/lang/String;` @kind static;
  #L2f0c8e.  v1:= temp @kind object;
  #L2f0c90.  return v1 @kind object;
}
procedure `java.lang.String` `toJSONString`(`java.util.List` v1 @kind object, `net.minidev.json.e` v2 @kind object) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Ljava/util/List;Lnet/minidev/json/e;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0ca4.  v0:= new `java.lang.StringBuilder`;
  #L2f0ca8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f0cae.  call `writeJSONString`(v1, v0, v2) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Iterable;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind static;
  #L2f0cb4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f0cba.  v1:= temp @kind object;
  #L2f0cbc.  return v1 @kind object;
  catch `java.io.IOException` @[L2f0cae..L2f0cb4] goto L2f0cb4;
}
procedure `void` `writeJSONString`(`java.lang.Iterable` v1 @kind object, `java.lang.Appendable` v2 @kind object, `net.minidev.json.e` v3 @kind object) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Iterable;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0d98.  if v1 != 0 then goto L2f0da8;
  #L2f0d9c.  v1:= "null" @kind object;
  #L2f0da0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f0da6.  return @kind void;
  #L2f0da8.  v0:= `@@net.minidev.json.q.y.e` @type ^`net.minidev.json.q.z` @kind object;
  #L2f0dac.  call `a`(v0, v1, v2, v3) @signature `Lnet/minidev/json/q/z;.a:(Ljava/lang/Object;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind interface;
  #L2f0db2.  return @kind void;
}
procedure `void` `writeJSONString`(`java.util.List` v1 @kind object, `java.lang.Appendable` v2 @kind object) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/util/List;Ljava/lang/Appendable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f0dc4.  v0:= `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` @kind object;
  #L2f0dc8.  call `writeJSONString`(v1, v2, v0) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Iterable;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind static;
  #L2f0dce.  return @kind void;
}
procedure `void` `merge`(`net.minidev.json.JSONArray` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lnet/minidev/json/JSONArray;.merge:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L2f0d4c.  call temp:= `merge`(v0, v1) @signature `Lnet/minidev/json/JSONObject;.merge:(Lnet/minidev/json/JSONArray;Ljava/lang/Object;)Lnet/minidev/json/JSONArray;` @kind static;
  #L2f0d52.  return @kind void;
}
procedure `java.lang.String` `toJSONString`(`net.minidev.json.JSONArray` v1 @kind this) @signature `Lnet/minidev/json/JSONArray;.toJSONString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f0c64.  v0:= `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` @kind object;
  #L2f0c68.  call temp:= `toJSONString`(v1, v0) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Ljava/util/List;Lnet/minidev/json/e;)Ljava/lang/String;` @kind static;
  #L2f0c6e.  v0:= temp @kind object;
  #L2f0c70.  return v0 @kind object;
}
procedure `java.lang.String` `toJSONString`(`net.minidev.json.JSONArray` v0 @kind this, `net.minidev.json.e` v1 @kind object) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Lnet/minidev/json/e;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2f0ce0.  call temp:= `toJSONString`(v0, v1) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Ljava/util/List;Lnet/minidev/json/e;)Ljava/lang/String;` @kind static;
  #L2f0ce6.  v1:= temp @kind object;
  #L2f0ce8.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`net.minidev.json.JSONArray` v1 @kind this) @signature `Lnet/minidev/json/JSONArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f0cfc.  call temp:= `toJSONString`(v1) @signature `Lnet/minidev/json/JSONArray;.toJSONString:()Ljava/lang/String;` @kind virtual;
  #L2f0d02.  v0:= temp @kind object;
  #L2f0d04.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`net.minidev.json.JSONArray` v0 @kind this, `net.minidev.json.e` v1 @kind object) @signature `Lnet/minidev/json/JSONArray;.toString:(Lnet/minidev/json/e;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2f0d18.  call temp:= `toJSONString`(v0, v1) @signature `Lnet/minidev/json/JSONArray;.toJSONString:(Lnet/minidev/json/e;)Ljava/lang/String;` @kind virtual;
  #L2f0d1e.  v1:= temp @kind object;
  #L2f0d20.  return v1 @kind object;
}
procedure `void` `writeJSONString`(`net.minidev.json.JSONArray` v1 @kind this, `java.lang.Appendable` v2 @kind object) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Appendable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f0d64.  v0:= `@@net.minidev.json.g.a` @type ^`net.minidev.json.e` @kind object;
  #L2f0d68.  call `writeJSONString`(v1, v2, v0) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Iterable;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind static;
  #L2f0d6e.  return @kind void;
}
procedure `void` `writeJSONString`(`net.minidev.json.JSONArray` v0 @kind this, `java.lang.Appendable` v1 @kind object, `net.minidev.json.e` v2 @kind object) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @AccessFlag PUBLIC {
    temp;

  #L2f0d80.  call `writeJSONString`(v0, v1, v2) @signature `Lnet/minidev/json/JSONArray;.writeJSONString:(Ljava/lang/Iterable;Ljava/lang/Appendable;Lnet/minidev/json/e;)V` @kind static;
  #L2f0d86.  return @kind void;
}
