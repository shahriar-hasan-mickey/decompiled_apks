record `net.minidev.json.j` @kind class @AccessFlag  extends `net.minidev.json.o` @kind interface {
}
procedure `void` `<init>`(`net.minidev.json.j` v0 @kind this) @signature `Lnet/minidev/json/j;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f18ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f18b2.  return @kind void;
}
procedure `void` `<init>`(`net.minidev.json.j` v0 @kind this, `net.minidev.json.h` v1 @kind object) @signature `Lnet/minidev/json/j;.<init>:(Lnet/minidev/json/h;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f18c4.  call `<init>`(v0) @signature `Lnet/minidev/json/j;.<init>:()V` @kind direct;
  #L2f18ca.  return @kind void;
}
procedure `void` `a`(`net.minidev.json.j` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Appendable` v7 @kind object) @signature `Lnet/minidev/json/j;.a:(Ljava/lang/String;Ljava/lang/Appendable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f18dc.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f18e2.  v0:= temp;
  #L2f18e4.  v1:= 0I;
  #L2f18e6.  if v1 >= v0 then goto L2f1a0e;
  #L2f18ea.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f18f0.  v2:= temp;
  #L2f18f2.  v3:= 12I;
  #L2f18f6.  if v2 == v3 then goto L2f19fc;
  #L2f18fa.  v3:= 13I;
  #L2f18fe.  if v2 == v3 then goto L2f19f0;
  #L2f1902.  v3:= 34I;
  #L2f1906.  if v2 == v3 then goto L2f19e4;
  #L2f190a.  v3:= 92I;
  #L2f190e.  if v2 == v3 then goto L2f19d8;
  #L2f1912.  goto L2f1a24;
  #L2f1918.  if v2 < 0 then goto L2f1924;
  #L2f191c.  v3:= 31I;
  #L2f1920.  if v2 <= v3 then goto L2f1944;
  #L2f1924.  v3:= 127I;
  #L2f1928.  if v2 < v3 then goto L2f1934;
  #L2f192c.  v3:= 159I;
  #L2f1930.  if v2 <= v3 then goto L2f1944;
  #L2f1934.  v3:= 8192I;
  #L2f1938.  if v2 < v3 then goto L2f19ac;
  #L2f193c.  v3:= 8447I;
  #L2f1940.  if v2 > v3 then goto L2f19ac;
  #L2f1944.  v3:= "\\u" @kind object;
  #L2f1948.  call temp:= `append`(v7, v3) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f194e.  v3:= "0123456789ABCDEF" @kind object;
  #L2f1952.  v4:= v2 ^> 12;
  #L2f1956.  v4:= v4 ^& 15;
  #L2f195a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1960.  v4:= temp;
  #L2f1962.  call temp:= `append`(v7, v4) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L2f1968.  v4:= v2 ^> 8;
  #L2f196c.  v4:= v4 ^& 15;
  #L2f1970.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1976.  v4:= temp;
  #L2f1978.  call temp:= `append`(v7, v4) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L2f197e.  v4:= v2 ^> 4;
  #L2f1982.  v4:= v4 ^& 15;
  #L2f1986.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f198c.  v4:= temp;
  #L2f198e.  call temp:= `append`(v7, v4) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L2f1994.  v2:= v2 ^> 0;
  #L2f1998.  v2:= v2 ^& 15;
  #L2f199c.  call temp:= `charAt`(v3, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f19a2.  v2:= temp;
  #L2f19a4.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L2f19aa.  goto L2f1a06;
  #L2f19ac.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L2f19b2.  goto L2f1a06;
  #L2f19b4.  v2:= "\\n" @kind object;
  #L2f19b8.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19be.  goto L2f1a06;
  #L2f19c0.  v2:= "\\t" @kind object;
  #L2f19c4.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19ca.  goto L2f1a06;
  #L2f19cc.  v2:= "\\b" @kind object;
  #L2f19d0.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19d6.  goto L2f1a06;
  #L2f19d8.  v2:= "\\\\" @kind object;
  #L2f19dc.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19e2.  goto L2f1a06;
  #L2f19e4.  v2:= "\\\"" @kind object;
  #L2f19e8.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19ee.  goto L2f1a06;
  #L2f19f0.  v2:= "\\r" @kind object;
  #L2f19f4.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f19fa.  goto L2f1a06;
  #L2f19fc.  v2:= "\\f" @kind object;
  #L2f1a00.  call temp:= `append`(v7, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L2f1a06.  v1:= v1 + 1;
  #L2f1a0a.  goto L2f18e6;
  #L2f1a0e.  return @kind void;
  #L2f1a10.  v6:= new `java.lang.RuntimeException`;
  #L2f1a14.  v7:= "Impossible Exeption" @kind object;
  #L2f1a18.  call `<init>`(v6, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f1a1e.  goto L2f1a22;
  #L2f1a20.  throw v6;
  #L2f1a22.  goto L2f1a20;
  #L2f1a24.  switch v2
                  | 8 => goto L2f19cc
                  | 9 => goto L2f19c0
                  | 10 => goto L2f19b4
                  | else => goto L2f1918;
  catch `java.io.IOException` @[L2f18dc..L2f1a06] goto L2f1a10;
}
