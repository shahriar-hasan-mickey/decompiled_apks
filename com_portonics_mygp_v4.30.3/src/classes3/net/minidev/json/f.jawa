record `net.minidev.json.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.String` `a`(`java.lang.String` v6 @kind object) @signature `Lnet/minidev/json/f;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f14b4.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f14ba.  v0:= temp;
  #L2f14bc.  v1:= v0 + 3;
  #L2f14c0.  v1:= new `char`[v1];
  #L2f14c4.  v2:= 103I;
  #L2f14c8.  v3:= 0I;
  #L2f14ca.  v1[v3]:= v2 @kind char;
  #L2f14ce.  v2:= 101I;
  #L2f14d2.  v4:= 1I;
  #L2f14d4.  v1[v4]:= v2 @kind char;
  #L2f14d8.  v2:= 2I;
  #L2f14da.  v5:= 116I;
  #L2f14de.  v1[v2]:= v5 @kind char;
  #L2f14e2.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f14e8.  v2:= temp;
  #L2f14ea.  v3:= 97I;
  #L2f14ee.  if v2 < v3 then goto L2f1500;
  #L2f14f2.  v3:= 122I;
  #L2f14f6.  if v2 > v3 then goto L2f1500;
  #L2f14fa.  v2:= v2 + -32;
  #L2f14fe.  v2:= (`char`) v2 @kind i2c;
  #L2f1500.  v3:= 3I;
  #L2f1502.  v1[v3]:= v2 @kind char;
  #L2f1506.  if v4 >= v0 then goto L2f1520;
  #L2f150a.  v2:= v4 + 3;
  #L2f150e.  call temp:= `charAt`(v6, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1514.  v3:= temp;
  #L2f1516.  v1[v2]:= v3 @kind char;
  #L2f151a.  v4:= v4 + 1;
  #L2f151e.  goto L2f1506;
  #L2f1520.  v6:= new `java.lang.String`;
  #L2f1524.  call `<init>`(v6, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L2f152a.  return v6 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v5 @kind object) @signature `Lnet/minidev/json/f;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f153c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f1542.  v0:= temp;
  #L2f1544.  v1:= v0 + 2;
  #L2f1548.  v1:= new `char`[v1];
  #L2f154c.  v2:= 105I;
  #L2f1550.  v3:= 0I;
  #L2f1552.  v1[v3]:= v2 @kind char;
  #L2f1556.  v2:= 115I;
  #L2f155a.  v4:= 1I;
  #L2f155c.  v1[v4]:= v2 @kind char;
  #L2f1560.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1566.  v2:= temp;
  #L2f1568.  v3:= 97I;
  #L2f156c.  if v2 < v3 then goto L2f157e;
  #L2f1570.  v3:= 122I;
  #L2f1574.  if v2 > v3 then goto L2f157e;
  #L2f1578.  v2:= v2 + -32;
  #L2f157c.  v2:= (`char`) v2 @kind i2c;
  #L2f157e.  v3:= 2I;
  #L2f1580.  v1[v3]:= v2 @kind char;
  #L2f1584.  if v4 >= v0 then goto L2f159e;
  #L2f1588.  v2:= v4 + 2;
  #L2f158c.  call temp:= `charAt`(v5, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1592.  v3:= temp;
  #L2f1594.  v1[v2]:= v3 @kind char;
  #L2f1598.  v4:= v4 + 1;
  #L2f159c.  goto L2f1584;
  #L2f159e.  v5:= new `java.lang.String`;
  #L2f15a2.  call `<init>`(v5, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L2f15a8.  return v5 @kind object;
}
