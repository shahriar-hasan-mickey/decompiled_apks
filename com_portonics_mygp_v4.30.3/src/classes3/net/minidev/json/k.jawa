record `net.minidev.json.k` @kind class @AccessFlag  extends `net.minidev.json.n` @kind interface {
}
procedure `void` `<init>`(`net.minidev.json.k` v0 @kind this) @signature `Lnet/minidev/json/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f1bc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f1bc6.  return @kind void;
}
procedure `void` `<init>`(`net.minidev.json.k` v0 @kind this, `net.minidev.json.h` v1 @kind object) @signature `Lnet/minidev/json/k;.<init>:(Lnet/minidev/json/h;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f1bd8.  call `<init>`(v0) @signature `Lnet/minidev/json/k;.<init>:()V` @kind direct;
  #L2f1bde.  return @kind void;
}
procedure `boolean` `a`(`net.minidev.json.k` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lnet/minidev/json/k;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2f1a58.  v0:= 0I;
  #L2f1a5a.  if v10 != 0 then goto L2f1a60;
  #L2f1a5e.  return v0;
  #L2f1a60.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f1a66.  v1:= temp;
  #L2f1a68.  v2:= 1I;
  #L2f1a6a.  if v1 != 0 then goto L2f1a70;
  #L2f1a6e.  return v2;
  #L2f1a70.  call temp:= `trim`(v10) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2f1a76.  v3:= temp @kind object;
  #L2f1a78.  if v3 == v10 then goto L2f1a7e;
  #L2f1a7c.  return v2;
  #L2f1a7e.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1a84.  v3:= temp;
  #L2f1a86.  call temp:= `c`(v3) @signature `Lnet/minidev/json/p;.c:(C)Z` @kind static;
  #L2f1a8c.  v4:= temp;
  #L2f1a8e.  if v4 != 0 then goto L2f1bac;
  #L2f1a92.  call temp:= `f`(v3) @signature `Lnet/minidev/json/p;.f:(C)Z` @kind static;
  #L2f1a98.  v3:= temp;
  #L2f1a9a.  if v3 == 0 then goto L2f1aa2;
  #L2f1a9e.  goto L2f1bac;
  #L2f1aa2.  v3:= 1I;
  #L2f1aa4.  if v3 >= v1 then goto L2f1ad2;
  #L2f1aa8.  call temp:= `charAt`(v10, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1aae.  v4:= temp;
  #L2f1ab0.  call temp:= `e`(v4) @signature `Lnet/minidev/json/p;.e:(C)Z` @kind static;
  #L2f1ab6.  v5:= temp;
  #L2f1ab8.  if v5 != 0 then goto L2f1ad0;
  #L2f1abc.  call temp:= `f`(v4) @signature `Lnet/minidev/json/p;.f:(C)Z` @kind static;
  #L2f1ac2.  v4:= temp;
  #L2f1ac4.  if v4 == 0 then goto L2f1aca;
  #L2f1ac8.  goto L2f1ad0;
  #L2f1aca.  v3:= v3 + 1;
  #L2f1ace.  goto L2f1aa4;
  #L2f1ad0.  return v2;
  #L2f1ad2.  call temp:= `a`(v10) @signature `Lnet/minidev/json/p;.a:(Ljava/lang/String;)Z` @kind static;
  #L2f1ad8.  v3:= temp;
  #L2f1ada.  if v3 == 0 then goto L2f1ae0;
  #L2f1ade.  return v2;
  #L2f1ae0.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1ae6.  v3:= temp;
  #L2f1ae8.  v4:= 45I;
  #L2f1aec.  v5:= 57I;
  #L2f1af0.  v6:= 48I;
  #L2f1af4.  if v3 < v6 then goto L2f1afc;
  #L2f1af8.  if v3 <= v5 then goto L2f1b00;
  #L2f1afc.  if v3 != v4 then goto L2f1baa;
  #L2f1b00.  v7:= 1I;
  #L2f1b02.  if v7 >= v1 then goto L2f1b1e;
  #L2f1b06.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1b0c.  v3:= temp;
  #L2f1b0e.  if v3 < v6 then goto L2f1b1e;
  #L2f1b12.  if v3 <= v5 then goto L2f1b18;
  #L2f1b16.  goto L2f1b1e;
  #L2f1b18.  v7:= v7 + 1;
  #L2f1b1c.  goto L2f1b02;
  #L2f1b1e.  if v7 != v1 then goto L2f1b24;
  #L2f1b22.  return v2;
  #L2f1b24.  v8:= 46I;
  #L2f1b28.  if v3 != v8 then goto L2f1b30;
  #L2f1b2c.  v7:= v7 + 1;
  #L2f1b30.  if v7 >= v1 then goto L2f1b44;
  #L2f1b34.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1b3a.  v3:= temp;
  #L2f1b3c.  if v3 < v6 then goto L2f1b44;
  #L2f1b40.  if v3 <= v5 then goto L2f1b2c;
  #L2f1b44.  if v7 != v1 then goto L2f1b4a;
  #L2f1b48.  return v2;
  #L2f1b4a.  v8:= 69I;
  #L2f1b4e.  if v3 == v8 then goto L2f1b5a;
  #L2f1b52.  v8:= 101I;
  #L2f1b56.  if v3 != v8 then goto L2f1b82;
  #L2f1b5a.  v7:= v7 + 1;
  #L2f1b5e.  if v7 != v1 then goto L2f1b64;
  #L2f1b62.  return v0;
  #L2f1b64.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1b6a.  v3:= temp;
  #L2f1b6c.  v8:= 43I;
  #L2f1b70.  if v3 == v8 then goto L2f1b78;
  #L2f1b74.  if v3 != v4 then goto L2f1b82;
  #L2f1b78.  v7:= v7 + 1;
  #L2f1b7c.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1b82.  if v7 != v1 then goto L2f1b88;
  #L2f1b86.  return v0;
  #L2f1b88.  if v7 >= v1 then goto L2f1ba4;
  #L2f1b8c.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f1b92.  v3:= temp;
  #L2f1b94.  if v3 < v6 then goto L2f1ba4;
  #L2f1b98.  if v3 <= v5 then goto L2f1b9e;
  #L2f1b9c.  goto L2f1ba4;
  #L2f1b9e.  v7:= v7 + 1;
  #L2f1ba2.  goto L2f1b88;
  #L2f1ba4.  if v7 != v1 then goto L2f1baa;
  #L2f1ba8.  return v2;
  #L2f1baa.  return v0;
  #L2f1bac.  return v2;
}
