record `h.h.a.c` @kind class @AccessFlag  {
  `h.h.a.b` `h.h.a.c.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`h.h.a.c` v0 @kind this) @signature `Lh/h/a/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e3024.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e302a.  return @kind void;
}
procedure `h.h.a.b` `a`(`h.h.a.c` v2 @kind this) @signature `Lh/h/a/c;.a:()Lh/h/a/b;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1e2ff4.  v0:= v2.`h.h.a.c.a` @type ^`h.h.a.b` @kind object;
  #L1e2ff8.  if v0 != 0 then goto L1e3008;
  #L1e2ffc.  v0:= new `h.h.a.b`;
  #L1e3000.  call `<init>`(v0) @signature `Lh/h/a/b;.<init>:()V` @kind direct;
  #L1e3006.  goto L1e3010;
  #L1e3008.  v1:= v0.`h.h.a.b.c` @type ^`h.h.a.b` @kind object;
  #L1e300c.  v2.`h.h.a.c.a` @type ^`h.h.a.b` := v1 @kind object;
  #L1e3010.  return v0 @kind object;
}
procedure `void` `b`(`h.h.a.c` v1 @kind this, `h.h.a.b` v2 @kind object) @signature `Lh/h/a/c;.b:(Lh/h/a/b;)V` @AccessFlag  {
    temp;
    v0;

  #L1e303c.  v0:= v1.`h.h.a.c.a` @type ^`h.h.a.b` @kind object;
  #L1e3040.  v2.`h.h.a.b.c` @type ^`h.h.a.b` := v0 @kind object;
  #L1e3044.  v1.`h.h.a.c.a` @type ^`h.h.a.b` := v2 @kind object;
  #L1e3048.  return @kind void;
}
