record `h.g.a.a.j` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.lang.String` `a`(`java.lang.String` v5 @kind object) @signature `Lh/g/a/a/j;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d8680.  if v5 != 0 then goto L1d8688;
  #L1d8684.  v5:= "" @kind object;
  #L1d8688.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1d868e.  v0:= temp;
  #L1d8690.  if v0 == 0 then goto L1d8696;
  #L1d8694.  return v5 @kind object;
  #L1d8696.  v0:= new `java.lang.StringBuilder`;
  #L1d869a.  call `<init>`(v0, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d86a0.  v5:= 0I;
  #L1d86a2.  v1:= 1I;
  #L1d86a4.  v2:= 0I;
  #L1d86a6.  v3:= 1I;
  #L1d86a8.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L1d86ae.  v4:= temp;
  #L1d86b0.  if v2 >= v4 then goto L1d86f2;
  #L1d86b4.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L1d86ba.  v4:= temp;
  #L1d86bc.  if v3 == 0 then goto L1d86de;
  #L1d86c0.  v3:= 97I;
  #L1d86c4.  if v4 < v3 then goto L1d86de;
  #L1d86c8.  v3:= 122I;
  #L1d86cc.  if v4 > v3 then goto L1d86de;
  #L1d86d0.  v4:= v4 + -32;
  #L1d86d4.  v3:= (`char`) v4 @kind i2c;
  #L1d86d6.  call `setCharAt`(v0, v2, v3) @signature `Ljava/lang/StringBuilder;.setCharAt:(IC)V` @kind virtual;
  #L1d86dc.  goto L1d86e6;
  #L1d86de.  v3:= 32I;
  #L1d86e2.  if v4 == v3 then goto L1d86ea;
  #L1d86e6.  v3:= 0I;
  #L1d86e8.  goto L1d86ec;
  #L1d86ea.  v3:= 1I;
  #L1d86ec.  v2:= v2 + 1;
  #L1d86f0.  goto L1d86a8;
  #L1d86f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d86f8.  v5:= temp @kind object;
  #L1d86fa.  return v5 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v0 @kind object) @signature `Lh/g/a/a/j;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1d870c.  if v0 != 0 then goto L1d8714;
  #L1d8710.  v0:= "" @kind object;
  #L1d8714.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`java.lang.String` v2 @kind object) @signature `Lh/g/a/a/j;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d8728.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1d872e.  v2:= temp @kind object;
  #L1d8730.  v0:= "\\s+" @kind object;
  #L1d8734.  v1:= " " @kind object;
  #L1d8738.  call temp:= `replaceAll`(v2, v0, v1) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d873e.  v2:= temp @kind object;
  #L1d8740.  return v2 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lh/g/a/a/j;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1d8754.  call temp:= `replaceAll`(v0, v1, v2) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d875a.  v0:= temp @kind object;
  #L1d875c.  return v0 @kind object;
}
