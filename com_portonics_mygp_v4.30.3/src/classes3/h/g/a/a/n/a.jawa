record `h.g.a.a.n.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `android.os.Handler` `@@h.g.a.a.n.a.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `a`() @signature `Lh/g/a/a/n/a;.a:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d8f08.  v0:= `@@h.g.a.a.n.a.a` @type ^`android.os.Handler` @kind object;
  #L1d8f0c.  call `b`(v0) @signature `Lh/g/a/a/n/a;.b:(Landroid/os/Handler;)V` @kind static;
  #L1d8f12.  return @kind void;
}
procedure `void` `b`(`android.os.Handler` v1 @kind object) @signature `Lh/g/a/a/n/a;.b:(Landroid/os/Handler;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d8f24.  if v1 != 0 then goto L1d8f2a;
  #L1d8f28.  return @kind void;
  #L1d8f2a.  v0:= 0I;
  #L1d8f2c.  call `removeCallbacksAndMessages`(v1, v0) @signature `Landroid/os/Handler;.removeCallbacksAndMessages:(Ljava/lang/Object;)V` @kind virtual;
  #L1d8f32.  return @kind void;
}
procedure `android.os.Handler` `c`() @signature `Lh/g/a/a/n/a;.c:()Landroid/os/Handler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d8eb8.  v0:= `@@h.g.a.a.n.a.a` @type ^`android.os.Handler` @kind object;
  #L1d8ebc.  if v0 != 0 then goto L1d8ecc;
  #L1d8ec0.  call temp:= `d`() @signature `Lh/g/a/a/n/a;.d:()Landroid/os/Handler;` @kind static;
  #L1d8ec6.  v0:= temp @kind object;
  #L1d8ec8.  `@@h.g.a.a.n.a.a` @type ^`android.os.Handler` := v0 @kind object;
  #L1d8ecc.  v0:= `@@h.g.a.a.n.a.a` @type ^`android.os.Handler` @kind object;
  #L1d8ed0.  return v0 @kind object;
}
procedure `android.os.Handler` `d`() @signature `Lh/g/a/a/n/a;.d:()Landroid/os/Handler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d8ee4.  v0:= new `android.os.Handler`;
  #L1d8ee8.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1d8eee.  v1:= temp @kind object;
  #L1d8ef0.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1d8ef6.  return v0 @kind object;
}
