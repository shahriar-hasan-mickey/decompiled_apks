record `h.j.q0` @kind class @AccessFlag  extends `h.j.l0` @kind class {
  `h.j.k0` `h.j.q0.b` @AccessFlag FINAL_SYNTHETIC;
  `h.j.s0` `h.j.q0.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.j.q0` v0 @kind this, `h.j.s0` v1 @kind object, `h.j.k0` v2 @kind object) @signature `Lh/j/q0;.<init>:(Lh/j/s0;Lh/j/k0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f8ab8.  v0.`h.j.q0.c` @type ^`h.j.s0` := v1 @kind object;
  #L1f8abc.  v0.`h.j.q0.b` @type ^`h.j.k0` := v2 @kind object;
  #L1f8ac0.  call `<init>`(v0) @signature `Lh/j/l0;.<init>:()V` @kind direct;
  #L1f8ac6.  return @kind void;
}
procedure `void` `b`(`h.j.q0` v1 @kind this, `h.j.k0` v2 @kind object) @signature `Lh/j/q0;.b:(Lh/j/k0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8ad8.  v0:= v1.`h.j.q0.b` @type ^`h.j.k0` @kind object;
  #L1f8adc.  call `T`(v0) @signature `Lh/j/k0;.T:()V` @kind virtual;
  #L1f8ae2.  call temp:= `Q`(v2, v1) @signature `Lh/j/k0;.Q:(Lh/j/k0$a;)Lh/j/k0;` @kind virtual;
  #L1f8ae8.  return @kind void;
}
