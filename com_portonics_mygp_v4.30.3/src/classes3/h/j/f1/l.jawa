record `h.j.f1.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.lang.Object`[] `@@h.j.f1.l.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[] `@@h.j.f1.l.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[] `@@h.j.f1.l.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[] `@@h.j.f1.l.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[] `@@h.j.f1.l.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/j/f1/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fcc40.  v0:= 0I;
  #L1fcc42.  v0:= new `java.lang.Object`[v0];
  #L1fcc46.  `@@h.j.f1.l.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1fcc4a.  v0:= 1I;
  #L1fcc4c.  v0:= new `java.lang.Object`[v0];
  #L1fcc50.  `@@h.j.f1.l.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1fcc54.  v0:= 2I;
  #L1fcc56.  v0:= new `java.lang.Object`[v0];
  #L1fcc5a.  `@@h.j.f1.l.c` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1fcc5e.  v0:= 3I;
  #L1fcc60.  v0:= new `java.lang.Object`[v0];
  #L1fcc64.  `@@h.j.f1.l.d` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1fcc68.  v0:= 4I;
  #L1fcc6a.  v0:= new `java.lang.Object`[v0];
  #L1fcc6e.  `@@h.j.f1.l.e` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1fcc72.  return @kind void;
}
procedure `java.lang.Class` `a`(`java.lang.String` v0 @kind object) @signature `Lh/j/f1/l;.a:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1fca30.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1fca36.  v0:= temp @kind object;
  #L1fca38.  return v0 @kind object;
  #L1fca3a.  v0:= 0I;
  #L1fca3c.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L1fca30..L1fca38] goto L1fca3a;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.reflect.Field` v2 @kind object) @signature `Lh/j/f1/l;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1fca60.  if v2 != 0 then goto L1fca66;
  #L1fca64.  return v1 @kind object;
  #L1fca66.  call temp:= `get`(v2, v0) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fca6c.  v0:= temp @kind object;
  #L1fca6e.  return v0 @kind object;
  #L1fca70.  return v1 @kind object;
  catch `java.lang.Exception` @[L1fca66..L1fca6e] goto L1fca70;
}
procedure `java.lang.reflect.Method` `c`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lh/j/f1/l;.c:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fcbb8.  v0:= 0I;
  #L1fcbba.  if v2 == 0 then goto L1fcbd6;
  #L1fcbbe.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1fcbc4.  v1:= temp;
  #L1fcbc6.  if v1 == 0 then goto L1fcbcc;
  #L1fcbca.  goto L1fcbd6;
  #L1fcbcc.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1fcbd2.  v2:= temp @kind object;
  #L1fcbd4.  return v2 @kind object;
  #L1fcbd6.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L1fcbcc..L1fcbd4] goto L1fcbd6;
  catch `java.lang.NoSuchMethodException` @[L1fcbcc..L1fcbd4] goto L1fcbd6;
}
procedure `java.lang.reflect.Field` `d`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lh/j/f1/l;.d:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fcb5c.  v0:= 0I;
  #L1fcb5e.  if v2 == 0 then goto L1fcb94;
  #L1fcb62.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1fcb68.  v1:= temp;
  #L1fcb6a.  if v1 == 0 then goto L1fcb70;
  #L1fcb6e.  goto L1fcb94;
  #L1fcb70.  call temp:= `getDeclaredField`(v2, v3) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1fcb76.  v2:= temp @kind object;
  #L1fcb78.  v3:= 1I;
  #L1fcb7a.  call `setAccessible`(v2, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1fcb80.  return v2 @kind object;
  #L1fcb82.  v2:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L1fcb84.  call `printStackTrace`(v2) @signature `Ljava/lang/NoSuchFieldException;.printStackTrace:()V` @kind virtual;
  #L1fcb8a.  goto L1fcb94;
  #L1fcb8c.  v2:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L1fcb8e.  call `printStackTrace`(v2) @signature `Ljava/lang/SecurityException;.printStackTrace:()V` @kind virtual;
  #L1fcb94.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L1fcb70..L1fcb80] goto L1fcb8c;
  catch `java.lang.NoSuchFieldException` @[L1fcb70..L1fcb80] goto L1fcb82;
}
procedure `java.lang.reflect.Method` `e`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Class`[] v4 @kind object) @signature `Lh/j/f1/l;.e:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fcbf8.  v0:= 0I;
  #L1fcbfa.  if v2 == 0 then goto L1fcc1e;
  #L1fcbfe.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1fcc04.  v1:= temp;
  #L1fcc06.  if v1 == 0 then goto L1fcc0c;
  #L1fcc0a.  goto L1fcc1e;
  #L1fcc0c.  call temp:= `getDeclaredMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1fcc12.  v2:= temp @kind object;
  #L1fcc14.  v3:= 1I;
  #L1fcc16.  call `setAccessible`(v2, v3) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L1fcc1c.  return v2 @kind object;
  #L1fcc1e.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L1fcc0c..L1fcc1c] goto L1fcc1e;
  catch `java.lang.NoSuchMethodException` @[L1fcc0c..L1fcc1c] goto L1fcc1e;
}
procedure `java.lang.Object` `f`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.reflect.Method` v3 @kind object) @signature `Lh/j/f1/l;.f:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fca94.  v0:= `@@h.j.f1.l.a` @type ^`java.lang.Object`[] @kind object;
  #L1fca98.  call temp:= `i`(v1, v2, v3, v0) @signature `Lh/j/f1/l;.i:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1fca9e.  v1:= temp @kind object;
  #L1fcaa0.  return v1 @kind object;
}
procedure `java.lang.Object` `g`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lh/j/f1/l;.g:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fcab4.  v0:= `@@h.j.f1.l.b` @type ^`java.lang.Object`[] @kind object;
  #L1fcab8.  v1:= 0I;
  #L1fcaba.  v0[v1]:= v5 @kind object;
  #L1fcabe.  call temp:= `i`(v2, v3, v4, v0) @signature `Lh/j/f1/l;.i:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1fcac4.  v2:= temp @kind object;
  #L1fcac6.  v3:= 0I;
  #L1fcac8.  v0[v1]:= v3 @kind object;
  #L1fcacc.  return v2 @kind object;
}
procedure `java.lang.Object` `h`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lh/j/f1/l;.h:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fcae0.  v0:= `@@h.j.f1.l.e` @type ^`java.lang.Object`[] @kind object;
  #L1fcae4.  v1:= 0I;
  #L1fcae6.  v0[v1]:= v5 @kind object;
  #L1fcaea.  v5:= 1I;
  #L1fcaec.  v0[v5]:= v6 @kind object;
  #L1fcaf0.  v6:= 2I;
  #L1fcaf2.  v0[v6]:= v7 @kind object;
  #L1fcaf6.  v7:= 3I;
  #L1fcaf8.  v0[v7]:= v8 @kind object;
  #L1fcafc.  call temp:= `i`(v2, v3, v4, v0) @signature `Lh/j/f1/l;.i:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1fcb02.  v2:= temp @kind object;
  #L1fcb04.  v3:= 0I;
  #L1fcb06.  v0[v1]:= v3 @kind object;
  #L1fcb0a.  v0[v5]:= v3 @kind object;
  #L1fcb0e.  v0[v6]:= v3 @kind object;
  #L1fcb12.  v0[v7]:= v3 @kind object;
  #L1fcb16.  return v2 @kind object;
}
procedure `java.lang.Object` `i`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lh/j/f1/l;.i:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1fcb28.  if v2 != 0 then goto L1fcb2e;
  #L1fcb2c.  return v1 @kind object;
  #L1fcb2e.  call temp:= `invoke`(v2, v0, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fcb34.  v0:= temp @kind object;
  #L1fcb36.  return v0 @kind object;
  #L1fcb38.  return v1 @kind object;
  catch `java.lang.Exception` @[L1fcb2e..L1fcb36] goto L1fcb38;
}
procedure `void` `j`(`java.lang.Object` v0 @kind object, `java.lang.reflect.Field` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lh/j/f1/l;.j:(Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1fcc84.  if v1 != 0 then goto L1fcc8a;
  #L1fcc88.  return @kind void;
  #L1fcc8a.  call `set`(v1, v0, v2) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1fcc90.  return @kind void;
  catch `java.lang.Exception` @[L1fcc8a..L1fcc90] goto L1fcc90;
}
