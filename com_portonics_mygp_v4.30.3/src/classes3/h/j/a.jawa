record `h.j.a` @kind class @AccessFlag PUBLIC extends `h.j.s0` @kind class {
}
procedure `void` `<init>`(`h.j.a` v0 @kind this) @signature `Lh/j/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f6c1c.  call `<init>`(v0) @signature `Lh/j/s0;.<init>:()V` @kind direct;
  #L1f6c22.  call `k0`(v0) @signature `Lh/j/a;.k0:()V` @kind direct;
  #L1f6c28.  return @kind void;
}
procedure `void` `k0`(`h.j.a` v3 @kind this) @signature `Lh/j/a;.k0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1f6c3c.  v0:= 1I;
  #L1f6c3e.  call temp:= `h0`(v3, v0) @signature `Lh/j/s0;.h0:(I)Lh/j/s0;` @kind virtual;
  #L1f6c44.  v1:= new `h.j.q`;
  #L1f6c48.  v2:= 2I;
  #L1f6c4a.  call `<init>`(v1, v2) @signature `Lh/j/q;.<init>:(I)V` @kind direct;
  #L1f6c50.  call temp:= `b0`(v3, v1) @signature `Lh/j/s0;.b0:(Lh/j/k0;)Lh/j/s0;` @kind virtual;
  #L1f6c56.  v1:= temp @kind object;
  #L1f6c58.  v2:= new `h.j.l`;
  #L1f6c5c.  call `<init>`(v2) @signature `Lh/j/l;.<init>:()V` @kind direct;
  #L1f6c62.  call temp:= `b0`(v1, v2) @signature `Lh/j/s0;.b0:(Lh/j/k0;)Lh/j/s0;` @kind virtual;
  #L1f6c68.  v1:= temp @kind object;
  #L1f6c6a.  v2:= new `h.j.q`;
  #L1f6c6e.  call `<init>`(v2, v0) @signature `Lh/j/q;.<init>:(I)V` @kind direct;
  #L1f6c74.  call temp:= `b0`(v1, v2) @signature `Lh/j/s0;.b0:(Lh/j/k0;)Lh/j/s0;` @kind virtual;
  #L1f6c7a.  return @kind void;
}
