record `okhttp3.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `okhttp3.Challenge.authParams` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.scheme` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Challenge` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f6db0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6db6.  v0:= "scheme == null" @kind object;
  #L2f6dba.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f6dc0.  v0:= "realm == null" @kind object;
  #L2f6dc4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f6dca.  v1.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v2 @kind object;
  #L2f6dce.  v2:= "realm" @kind object;
  #L2f6dd2.  call temp:= `singletonMap`(v2, v3) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L2f6dd8.  v2:= temp @kind object;
  #L2f6dda.  v1.`okhttp3.Challenge.authParams` @type ^`java.util.Map` := v2 @kind object;
  #L2f6dde.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Challenge` v3 @kind this, `java.lang.String` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2f6df0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6df6.  v0:= "scheme == null" @kind object;
  #L2f6dfa.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f6e00.  v0:= "authParams == null" @kind object;
  #L2f6e04.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f6e0a.  v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v4 @kind object;
  #L2f6e0e.  v4:= new `java.util.LinkedHashMap`;
  #L2f6e12.  call `<init>`(v4) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2f6e18.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2f6e1e.  v5:= temp @kind object;
  #L2f6e20.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2f6e26.  v5:= temp @kind object;
  #L2f6e28.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f6e2e.  v0:= temp;
  #L2f6e30.  if v0 == 0 then goto L2f6e7c;
  #L2f6e34.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f6e3a.  v0:= temp @kind object;
  #L2f6e3c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2f6e40.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2f6e46.  v1:= temp @kind object;
  #L2f6e48.  if v1 != 0 then goto L2f6e50;
  #L2f6e4c.  v1:= 0I;
  #L2f6e4e.  goto L2f6e68;
  #L2f6e50.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2f6e56.  v1:= temp @kind object;
  #L2f6e58.  v1:= (`java.lang.String`) v1 @kind object;
  #L2f6e5c.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2f6e60.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2f6e66.  v1:= temp @kind object;
  #L2f6e68.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2f6e6e.  v0:= temp @kind object;
  #L2f6e70.  v0:= (`java.lang.String`) v0 @kind object;
  #L2f6e74.  call temp:= `put`(v4, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f6e7a.  goto L2f6e28;
  #L2f6e7c.  call temp:= `unmodifiableMap`(v4) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L2f6e82.  v4:= temp @kind object;
  #L2f6e84.  v3.`okhttp3.Challenge.authParams` @type ^`java.util.Map` := v4 @kind object;
  #L2f6e88.  return @kind void;
}
procedure `java.util.Map` `authParams`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.authParams:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f6d4c.  v0:= v1.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6d50.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6d04.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6d08.  v1:= "charset" @kind object;
  #L2f6d0c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f6d12.  v0:= temp @kind object;
  #L2f6d14.  v0:= (`java.lang.String`) v0 @kind object;
  #L2f6d18.  if v0 == 0 then goto L2f6d26;
  #L2f6d1c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2f6d22.  v0:= temp @kind object;
  #L2f6d24.  return v0 @kind object;
  #L2f6d26.  v0:= `@@java.nio.charset.StandardCharsets.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L2f6d2a.  return v0 @kind object;
  catch `java.lang.Exception` @[L2f6d1c..L2f6d24] goto L2f6d26;
}
procedure `boolean` `equals`(`okhttp3.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6bfc.  v0:= instanceof @variable v3 @type ^`okhttp3.Challenge` @kind boolean;
  #L2f6c00.  if v0 == 0 then goto L2f6c34;
  #L2f6c04.  v3:= (`okhttp3.Challenge`) v3 @kind object;
  #L2f6c08.  v0:= v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6c0c.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6c10.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f6c16.  v0:= temp;
  #L2f6c18.  if v0 == 0 then goto L2f6c34;
  #L2f6c1c.  v3:= v3.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6c20.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6c24.  call temp:= `equals`(v3, v0) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2f6c2a.  v3:= temp;
  #L2f6c2c.  if v3 == 0 then goto L2f6c34;
  #L2f6c30.  v3:= 1I;
  #L2f6c32.  goto L2f6c36;
  #L2f6c34.  v3:= 0I;
  #L2f6c36.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6c48.  v0:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6c4c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f6c52.  v0:= temp;
  #L2f6c54.  v1:= 899I;
  #L2f6c58.  v1:= v1 + v0 @kind int;
  #L2f6c5a.  v1:= v1 * 31;
  #L2f6c5e.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6c62.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L2f6c68.  v0:= temp;
  #L2f6c6a.  v1:= v1 + v0 @kind int;
  #L2f6c6c.  return v1;
}
procedure `java.lang.String` `realm`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6c80.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6c84.  v1:= "realm" @kind object;
  #L2f6c88.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f6c8e.  v0:= temp @kind object;
  #L2f6c90.  v0:= (`java.lang.String`) v0 @kind object;
  #L2f6c94.  return v0 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f6ca8.  v0:= v1.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6cac.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6cc0.  v0:= new `java.lang.StringBuilder`;
  #L2f6cc4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f6cca.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6cce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6cd4.  v1:= " authParams=" @kind object;
  #L2f6cd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6cde.  v1:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6ce2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6ce8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f6cee.  v0:= temp @kind object;
  #L2f6cf0.  return v0 @kind object;
}
procedure `okhttp3.Challenge` `withCharset`(`okhttp3.Challenge` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokhttp3/Challenge;.withCharset:(Ljava/nio/charset/Charset;)Lokhttp3/Challenge;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6d64.  v0:= "charset == null" @kind object;
  #L2f6d68.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f6d6e.  v0:= new `java.util.LinkedHashMap`;
  #L2f6d72.  v1:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L2f6d76.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2f6d7c.  call temp:= `name`(v3) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L2f6d82.  v3:= temp @kind object;
  #L2f6d84.  v1:= "charset" @kind object;
  #L2f6d88.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f6d8e.  v3:= new `okhttp3.Challenge`;
  #L2f6d92.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L2f6d96.  call `<init>`(v3, v1, v0) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L2f6d9c.  return v3 @kind object;
}
