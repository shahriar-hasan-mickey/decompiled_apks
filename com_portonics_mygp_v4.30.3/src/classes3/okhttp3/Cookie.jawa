record `okhttp3.Cookie` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie.domain` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cookie.expiresAt` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.hostOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.httpOnly` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.path` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.persistent` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.secure` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.value` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.TIME_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.YEAR_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cookie;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f90b0.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L2f90b4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2f90ba.  v0:= temp @kind object;
  #L2f90bc.  `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2f90c0.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L2f90c4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2f90ca.  v0:= temp @kind object;
  #L2f90cc.  `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2f90d0.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L2f90d4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2f90da.  v0:= temp @kind object;
  #L2f90dc.  `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2f90e0.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L2f90e4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2f90ea.  v0:= temp @kind object;
  #L2f90ec.  `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2f90f0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f9104.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f910a.  v0.`okhttp3.Cookie.name` @type ^`java.lang.String` := v1 @kind object;
  #L2f910e.  v0.`okhttp3.Cookie.value` @type ^`java.lang.String` := v2 @kind object;
  #L2f9112.  v0.`okhttp3.Cookie.expiresAt` @type ^`long` := v3 @kind wide;
  #L2f9116.  v0.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v5 @kind object;
  #L2f911a.  v0.`okhttp3.Cookie.path` @type ^`java.lang.String` := v6 @kind object;
  #L2f911e.  v0.`okhttp3.Cookie.secure` @type ^`boolean` := v7 @kind boolean;
  #L2f9122.  v0.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v8 @kind boolean;
  #L2f9126.  v0.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v9 @kind boolean;
  #L2f912a.  v0.`okhttp3.Cookie.persistent` @type ^`boolean` := v10 @kind boolean;
  #L2f912e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v4 @kind this, `okhttp3.Cookie$Builder` v5 @kind object) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f9140.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f9146.  v0:= v5.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` @kind object;
  #L2f914a.  v1:= "builder.name == null" @kind object;
  #L2f914e.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f9154.  v1:= v5.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` @kind object;
  #L2f9158.  v2:= "builder.value == null" @kind object;
  #L2f915c.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f9162.  v2:= v5.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` @kind object;
  #L2f9166.  v3:= "builder.domain == null" @kind object;
  #L2f916a.  call temp:= `requireNonNull`(v2, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2f9170.  v4.`okhttp3.Cookie.name` @type ^`java.lang.String` := v0 @kind object;
  #L2f9174.  v4.`okhttp3.Cookie.value` @type ^`java.lang.String` := v1 @kind object;
  #L2f9178.  v0:= v5.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` @kind wide;
  #L2f917c.  v4.`okhttp3.Cookie.expiresAt` @type ^`long` := v0 @kind wide;
  #L2f9180.  v4.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v2 @kind object;
  #L2f9184.  v0:= v5.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` @kind object;
  #L2f9188.  v4.`okhttp3.Cookie.path` @type ^`java.lang.String` := v0 @kind object;
  #L2f918c.  v0:= v5.`okhttp3.Cookie$Builder.secure` @type ^`boolean` @kind boolean;
  #L2f9190.  v4.`okhttp3.Cookie.secure` @type ^`boolean` := v0 @kind boolean;
  #L2f9194.  v0:= v5.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` @kind boolean;
  #L2f9198.  v4.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L2f919c.  v0:= v5.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` @kind boolean;
  #L2f91a0.  v4.`okhttp3.Cookie.persistent` @type ^`boolean` := v0 @kind boolean;
  #L2f91a4.  v5:= v5.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` @kind boolean;
  #L2f91a8.  v4.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v5 @kind boolean;
  #L2f91ac.  return @kind void;
}
procedure `int` `dateCharacterOffset`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2f879c.  if v4 >= v5 then goto L2f8812;
  #L2f87a0.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f87a6.  v0:= temp;
  #L2f87a8.  v1:= 32I;
  #L2f87ac.  v2:= 1I;
  #L2f87ae.  if v0 >= v1 then goto L2f87ba;
  #L2f87b2.  v1:= 9I;
  #L2f87b6.  if v0 != v1 then goto L2f8800;
  #L2f87ba.  v1:= 127I;
  #L2f87be.  if v0 >= v1 then goto L2f8800;
  #L2f87c2.  v1:= 48I;
  #L2f87c6.  if v0 < v1 then goto L2f87d2;
  #L2f87ca.  v1:= 57I;
  #L2f87ce.  if v0 <= v1 then goto L2f8800;
  #L2f87d2.  v1:= 97I;
  #L2f87d6.  if v0 < v1 then goto L2f87e2;
  #L2f87da.  v1:= 122I;
  #L2f87de.  if v0 <= v1 then goto L2f8800;
  #L2f87e2.  v1:= 65I;
  #L2f87e6.  if v0 < v1 then goto L2f87f2;
  #L2f87ea.  v1:= 90I;
  #L2f87ee.  if v0 <= v1 then goto L2f8800;
  #L2f87f2.  v1:= 58I;
  #L2f87f6.  if v0 != v1 then goto L2f87fc;
  #L2f87fa.  goto L2f8800;
  #L2f87fc.  v0:= 0I;
  #L2f87fe.  goto L2f8802;
  #L2f8800.  v0:= 1I;
  #L2f8802.  v1:= v6 ^~ 1;
  #L2f8806.  if v0 != v1 then goto L2f880c;
  #L2f880a.  return v4;
  #L2f880c.  v4:= v4 + 1;
  #L2f8810.  goto L2f879c;
  #L2f8812.  return v5;
}
procedure `boolean` `domainMatch`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2f8548.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f854e.  v0:= temp;
  #L2f8550.  v1:= 1I;
  #L2f8552.  if v0 == 0 then goto L2f8558;
  #L2f8556.  return v1;
  #L2f8558.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f855e.  v0:= temp;
  #L2f8560.  if v0 == 0 then goto L2f8596;
  #L2f8564.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f856a.  v0:= temp;
  #L2f856c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8572.  v3:= temp;
  #L2f8574.  v0:= v0 - v3 @kind int;
  #L2f8576.  v0:= v0 - v1 @kind int;
  #L2f8578.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f857e.  v3:= temp;
  #L2f8580.  v0:= 46I;
  #L2f8584.  if v3 != v0 then goto L2f8596;
  #L2f8588.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L2f858e.  v2:= temp;
  #L2f8590.  if v2 != 0 then goto L2f8596;
  #L2f8594.  return v1;
  #L2f8596.  v2:= 0I;
  #L2f8598.  return v2;
}
procedure `okhttp3.Cookie` `parse`(`long` v23 , `okhttp3.HttpUrl` v25 @kind object, `java.lang.String` v26 @kind object) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L2f8de8.  v0:= v26 @kind object;
  #L2f8dec.  call temp:= `length`(v26) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8df2.  v1:= temp;
  #L2f8df4.  v2:= 0I;
  #L2f8df6.  v3:= 59I;
  #L2f8dfa.  call temp:= `delimiterOffset`(v0, v2, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L2f8e00.  v4:= temp;
  #L2f8e02.  v5:= 61I;
  #L2f8e06.  call temp:= `delimiterOffset`(v0, v2, v4, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L2f8e0c.  v6:= temp;
  #L2f8e0e.  v7:= 0I;
  #L2f8e10.  if v6 != v4 then goto L2f8e16;
  #L2f8e14.  return v7 @kind object;
  #L2f8e16.  call temp:= `trimSubstring`(v0, v2, v6) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L2f8e1c.  v9:= temp @kind object;
  #L2f8e1e.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2f8e24.  v8:= temp;
  #L2f8e26.  if v8 != 0 then goto L2f9052;
  #L2f8e2a.  call temp:= `indexOfControlOrNonAscii`(v9) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L2f8e30.  v8:= temp;
  #L2f8e32.  v10:= -1I;
  #L2f8e34.  if v8 == v10 then goto L2f8e3c;
  #L2f8e38.  goto L2f9052;
  #L2f8e3c.  v8:= 1I;
  #L2f8e3e.  v6:= v6 + v8 @kind int;
  #L2f8e40.  call temp:= `trimSubstring`(v0, v6, v4) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L2f8e46.  v6:= temp @kind object;
  #L2f8e48.  call temp:= `indexOfControlOrNonAscii`(v6) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L2f8e4e.  v11:= temp;
  #L2f8e50.  if v11 == v10 then goto L2f8e56;
  #L2f8e54.  return v7 @kind object;
  #L2f8e56.  v4:= v4 + v8 @kind int;
  #L2f8e58.  v10:= -1L;
  #L2f8e5c.  v12:= 253402300799999L;
  #L2f8e66.  v8:= v7 @kind object;
  #L2f8e68.  v14:= v8 @kind object;
  #L2f8e6a.  v19:= v10 @kind wide;
  #L2f8e6e.  v21:= v12 @kind wide;
  #L2f8e72.  v15:= 0I;
  #L2f8e74.  v16:= 0I;
  #L2f8e78.  v17:= 1I;
  #L2f8e7c.  v18:= 0I;
  #L2f8e80.  if v4 >= v1 then goto L2f8f5c;
  #L2f8e84.  call temp:= `delimiterOffset`(v0, v4, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L2f8e8a.  v7:= temp;
  #L2f8e8c.  call temp:= `delimiterOffset`(v0, v4, v7, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L2f8e92.  v3:= temp;
  #L2f8e94.  call temp:= `trimSubstring`(v0, v4, v3) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L2f8e9a.  v4:= temp @kind object;
  #L2f8e9c.  if v3 >= v7 then goto L2f8eae;
  #L2f8ea0.  v3:= v3 + 1;
  #L2f8ea4.  call temp:= `trimSubstring`(v0, v3, v7) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L2f8eaa.  v3:= temp @kind object;
  #L2f8eac.  goto L2f8eb2;
  #L2f8eae.  v3:= "" @kind object;
  #L2f8eb2.  v5:= "expires" @kind object;
  #L2f8eb6.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8ebc.  v5:= temp;
  #L2f8ebe.  if v5 == 0 then goto L2f8ed4;
  #L2f8ec2.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8ec8.  v4:= temp;
  #L2f8eca.  call temp:= `parseExpires`(v3, v2, v4) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @kind static;
  #L2f8ed0.  v21:= temp @kind wide;
  #L2f8ed2.  goto L2f8eec;
  #L2f8ed4.  v5:= "max-age" @kind object;
  #L2f8ed8.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8ede.  v5:= temp;
  #L2f8ee0.  if v5 == 0 then goto L2f8ef2;
  #L2f8ee4.  call temp:= `parseMaxAge`(v3) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @kind static;
  #L2f8eea.  v19:= temp @kind wide;
  #L2f8eec.  v18:= 1I;
  #L2f8ef0.  goto L2f8f4c;
  #L2f8ef2.  v5:= "domain" @kind object;
  #L2f8ef6.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8efc.  v5:= temp;
  #L2f8efe.  if v5 == 0 then goto L2f8f10;
  #L2f8f02.  call temp:= `parseDomain`(v3) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2f8f08.  v14:= temp @kind object;
  #L2f8f0a.  v17:= 0I;
  #L2f8f0e.  goto L2f8f4c;
  #L2f8f10.  v5:= "path" @kind object;
  #L2f8f14.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8f1a.  v5:= temp;
  #L2f8f1c.  if v5 == 0 then goto L2f8f24;
  #L2f8f20.  v8:= v3 @kind object;
  #L2f8f22.  goto L2f8f4c;
  #L2f8f24.  v3:= "secure" @kind object;
  #L2f8f28.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8f2e.  v3:= temp;
  #L2f8f30.  if v3 == 0 then goto L2f8f38;
  #L2f8f34.  v15:= 1I;
  #L2f8f36.  goto L2f8f4c;
  #L2f8f38.  v3:= "httponly" @kind object;
  #L2f8f3c.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8f42.  v3:= temp;
  #L2f8f44.  if v3 == 0 then goto L2f8f4c;
  #L2f8f48.  v16:= 1I;
  #L2f8f4c.  v4:= v7 + 1;
  #L2f8f50.  v3:= 59I;
  #L2f8f54.  v5:= 61I;
  #L2f8f58.  v7:= 0I;
  #L2f8f5a.  goto L2f8e80;
  #L2f8f5c.  v0:= -9223372036854775808L;
  #L2f8f60.  v3:= lcmp(v19, v0);
  #L2f8f64.  if v3 != 0 then goto L2f8f6c;
  #L2f8f68.  v11:= v0 @kind wide;
  #L2f8f6a.  goto L2f8fb6;
  #L2f8f6c.  v0:= lcmp(v19, v10);
  #L2f8f70.  if v0 == 0 then goto L2f8fb2;
  #L2f8f74.  v0:= 9223372036854775L;
  #L2f8f7e.  v3:= lcmp(v19, v0);
  #L2f8f82.  if v3 > 0 then goto L2f8f90;
  #L2f8f86.  v0:= 1000L;
  #L2f8f8a.  v19:= v19 * v0 @kind long;
  #L2f8f8e.  goto L2f8f9a;
  #L2f8f90.  v19:= 9223372036854775807L;
  #L2f8f9a.  v0:= v23 + v19 @kind long;
  #L2f8f9e.  v3:= lcmp(v0, v23);
  #L2f8fa2.  if v3 < 0 then goto L2f8fae;
  #L2f8fa6.  v3:= lcmp(v0, v12);
  #L2f8faa.  if v3 <= 0 then goto L2f8f68;
  #L2f8fae.  v11:= v12 @kind wide;
  #L2f8fb0.  goto L2f8fb6;
  #L2f8fb2.  v11:= v21 @kind wide;
  #L2f8fb6.  call temp:= `host`(v25) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2f8fbc.  v0:= temp @kind object;
  #L2f8fbe.  if v14 != 0 then goto L2f8fc8;
  #L2f8fc2.  v13:= v0 @kind object;
  #L2f8fc4.  v1:= 0I;
  #L2f8fc6.  goto L2f8fdc;
  #L2f8fc8.  call temp:= `domainMatch`(v0, v14) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L2f8fce.  v1:= temp;
  #L2f8fd0.  if v1 != 0 then goto L2f8fd8;
  #L2f8fd4.  v1:= 0I;
  #L2f8fd6.  return v1 @kind object;
  #L2f8fd8.  v1:= 0I;
  #L2f8fda.  v13:= v14 @kind object;
  #L2f8fdc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8fe2.  v0:= temp;
  #L2f8fe4.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8fea.  v3:= temp;
  #L2f8fec.  if v0 == v3 then goto L2f9006;
  #L2f8ff0.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L2f8ff6.  v0:= temp @kind object;
  #L2f8ff8.  call temp:= `getEffectiveTldPlusOne`(v0, v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2f8ffe.  v0:= temp @kind object;
  #L2f9000.  if v0 != 0 then goto L2f9006;
  #L2f9004.  return v1 @kind object;
  #L2f9006.  v0:= "/" @kind object;
  #L2f900a.  if v8 == 0 then goto L2f9020;
  #L2f900e.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f9014.  v1:= temp;
  #L2f9016.  if v1 != 0 then goto L2f901c;
  #L2f901a.  goto L2f9020;
  #L2f901c.  v14:= v8 @kind object;
  #L2f901e.  goto L2f9042;
  #L2f9020.  call temp:= `encodedPath`(v25) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L2f9026.  v1:= temp @kind object;
  #L2f9028.  v3:= 47I;
  #L2f902c.  call temp:= `lastIndexOf`(v1, v3) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L2f9032.  v3:= temp;
  #L2f9034.  if v3 == 0 then goto L2f9040;
  #L2f9038.  call temp:= `substring`(v1, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2f903e.  v0:= temp @kind object;
  #L2f9040.  v14:= v0 @kind object;
  #L2f9042.  v0:= new `okhttp3.Cookie`;
  #L2f9046.  v8:= v0 @kind object;
  #L2f9048.  v10:= v6 @kind object;
  #L2f904a.  call `<init>`(v8, v9, v10, v11, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L2f9050.  return v0 @kind object;
  #L2f9052.  v0:= v7 @kind object;
  #L2f9054.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2f8ec2..L2f8ed2] goto L2f8f4c;
  catch `java.lang.NumberFormatException` @[L2f8ee4..L2f8eec] goto L2f8f4c;
  catch `java.lang.IllegalArgumentException` @[L2f8f02..L2f8f0a] goto L2f8f4c;
}
procedure `okhttp3.Cookie` `parse`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2f908c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2f9092.  v0:= temp @kind wide;
  #L2f9094.  call temp:= `parse`(v0, v2, v3) @signature `Lokhttp3/Cookie;.parse:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L2f909a.  v2:= temp @kind object;
  #L2f909c.  return v2 @kind object;
}
procedure `java.util.List` `parseAll`(`okhttp3.HttpUrl` v4 @kind object, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Cookie;.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f8a94.  v0:= "Set-Cookie" @kind object;
  #L2f8a98.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L2f8a9e.  v5:= temp @kind object;
  #L2f8aa0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f8aa6.  v0:= temp;
  #L2f8aa8.  v1:= 0I;
  #L2f8aaa.  v2:= 0I;
  #L2f8aac.  if v2 >= v0 then goto L2f8ae4;
  #L2f8ab0.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f8ab6.  v3:= temp @kind object;
  #L2f8ab8.  v3:= (`java.lang.String`) v3 @kind object;
  #L2f8abc.  call temp:= `parse`(v4, v3) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L2f8ac2.  v3:= temp @kind object;
  #L2f8ac4.  if v3 != 0 then goto L2f8aca;
  #L2f8ac8.  goto L2f8ade;
  #L2f8aca.  if v1 != 0 then goto L2f8ad8;
  #L2f8ace.  v1:= new `java.util.ArrayList`;
  #L2f8ad2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2f8ad8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2f8ade.  v2:= v2 + 1;
  #L2f8ae2.  goto L2f8aac;
  #L2f8ae4.  if v1 == 0 then goto L2f8af2;
  #L2f8ae8.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2f8aee.  v4:= temp @kind object;
  #L2f8af0.  goto L2f8afa;
  #L2f8af2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2f8af8.  v4:= temp @kind object;
  #L2f8afa.  return v4 @kind object;
}
procedure `java.lang.String` `parseDomain`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2f88fc.  v0:= "." @kind object;
  #L2f8900.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8906.  v1:= temp;
  #L2f8908.  if v1 != 0 then goto L2f893c;
  #L2f890c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8912.  v0:= temp;
  #L2f8914.  if v0 == 0 then goto L2f8922;
  #L2f8918.  v0:= 1I;
  #L2f891a.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2f8920.  v2:= temp @kind object;
  #L2f8922.  call temp:= `canonicalizeHost`(v2) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2f8928.  v2:= temp @kind object;
  #L2f892a.  if v2 == 0 then goto L2f8930;
  #L2f892e.  return v2 @kind object;
  #L2f8930.  v2:= new `java.lang.IllegalArgumentException`;
  #L2f8934.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f893a.  throw v2;
  #L2f893c.  v2:= new `java.lang.IllegalArgumentException`;
  #L2f8940.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8946.  throw v2;
}
procedure `long` `parseExpires`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2f8b24.  v0:= 0I;
  #L2f8b26.  call temp:= `dateCharacterOffset`(v12, v13, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2f8b2c.  v13:= temp;
  #L2f8b2e.  v1:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2f8b32.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8b38.  v1:= temp @kind object;
  #L2f8b3a.  v2:= -1I;
  #L2f8b3c.  v3:= -1I;
  #L2f8b3e.  v4:= -1I;
  #L2f8b40.  v5:= -1I;
  #L2f8b42.  v6:= -1I;
  #L2f8b44.  v7:= -1I;
  #L2f8b46.  v8:= -1I;
  #L2f8b48.  v9:= 2I;
  #L2f8b4a.  v10:= 1I;
  #L2f8b4c.  if v13 >= v14 then goto L2f8c62;
  #L2f8b50.  v11:= v13 + 1;
  #L2f8b54.  call temp:= `dateCharacterOffset`(v12, v11, v14, v10) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2f8b5a.  v11:= temp;
  #L2f8b5c.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8b62.  if v4 != v2 then goto L2f8bb2;
  #L2f8b66.  v13:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2f8b6a.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8b70.  v13:= temp @kind object;
  #L2f8b72.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2f8b78.  v13:= temp;
  #L2f8b7a.  if v13 == 0 then goto L2f8bb2;
  #L2f8b7e.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8b84.  v13:= temp @kind object;
  #L2f8b86.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2f8b8c.  v4:= temp;
  #L2f8b8e.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8b94.  v13:= temp @kind object;
  #L2f8b96.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2f8b9c.  v7:= temp;
  #L2f8b9e.  v13:= 3I;
  #L2f8ba0.  call temp:= `group`(v1, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8ba6.  v13:= temp @kind object;
  #L2f8ba8.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2f8bae.  v8:= temp;
  #L2f8bb0.  goto L2f8c52;
  #L2f8bb2.  if v5 != v2 then goto L2f8be0;
  #L2f8bb6.  v13:= `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2f8bba.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8bc0.  v13:= temp @kind object;
  #L2f8bc2.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2f8bc8.  v13:= temp;
  #L2f8bca.  if v13 == 0 then goto L2f8be0;
  #L2f8bce.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8bd4.  v13:= temp @kind object;
  #L2f8bd6.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2f8bdc.  v5:= temp;
  #L2f8bde.  goto L2f8c52;
  #L2f8be0.  if v6 != v2 then goto L2f8c26;
  #L2f8be4.  v13:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2f8be8.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8bee.  v9:= temp @kind object;
  #L2f8bf0.  call temp:= `matches`(v9) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2f8bf6.  v9:= temp;
  #L2f8bf8.  if v9 == 0 then goto L2f8c26;
  #L2f8bfc.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8c02.  v6:= temp @kind object;
  #L2f8c04.  v9:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2f8c08.  call temp:= `toLowerCase`(v6, v9) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2f8c0e.  v6:= temp @kind object;
  #L2f8c10.  call temp:= `pattern`(v13) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L2f8c16.  v13:= temp @kind object;
  #L2f8c18.  call temp:= `indexOf`(v13, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L2f8c1e.  v13:= temp;
  #L2f8c20.  v6:= v13 / 4;
  #L2f8c24.  goto L2f8c52;
  #L2f8c26.  if v3 != v2 then goto L2f8c52;
  #L2f8c2a.  v13:= `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2f8c2e.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2f8c34.  v13:= temp @kind object;
  #L2f8c36.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2f8c3c.  v13:= temp;
  #L2f8c3e.  if v13 == 0 then goto L2f8c52;
  #L2f8c42.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2f8c48.  v13:= temp @kind object;
  #L2f8c4a.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2f8c50.  v3:= temp;
  #L2f8c52.  v11:= v11 + 1;
  #L2f8c56.  call temp:= `dateCharacterOffset`(v12, v11, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2f8c5c.  v13:= temp;
  #L2f8c5e.  goto L2f8b48;
  #L2f8c62.  v12:= 70I;
  #L2f8c66.  if v3 < v12 then goto L2f8c76;
  #L2f8c6a.  v12:= 99I;
  #L2f8c6e.  if v3 > v12 then goto L2f8c76;
  #L2f8c72.  v3:= v3 + 1900;
  #L2f8c76.  if v3 < 0 then goto L2f8c86;
  #L2f8c7a.  v12:= 69I;
  #L2f8c7e.  if v3 > v12 then goto L2f8c86;
  #L2f8c82.  v3:= v3 + 2000;
  #L2f8c86.  v12:= 1601I;
  #L2f8c8a.  if v3 < v12 then goto L2f8d56;
  #L2f8c8e.  if v6 == v2 then goto L2f8d4a;
  #L2f8c92.  if v5 < v10 then goto L2f8d3e;
  #L2f8c96.  v12:= 31I;
  #L2f8c9a.  if v5 > v12 then goto L2f8d3e;
  #L2f8c9e.  if v4 < 0 then goto L2f8d32;
  #L2f8ca2.  v12:= 23I;
  #L2f8ca6.  if v4 > v12 then goto L2f8d32;
  #L2f8caa.  if v7 < 0 then goto L2f8d26;
  #L2f8cae.  v12:= 59I;
  #L2f8cb2.  if v7 > v12 then goto L2f8d26;
  #L2f8cb6.  if v8 < 0 then goto L2f8d1a;
  #L2f8cba.  if v8 > v12 then goto L2f8d1a;
  #L2f8cbe.  v12:= new `java.util.GregorianCalendar`;
  #L2f8cc2.  v13:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L2f8cc6.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L2f8ccc.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L2f8cd2.  call `set`(v12, v10, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8cd8.  v6:= v6 - v10 @kind int;
  #L2f8cda.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8ce0.  v13:= 5I;
  #L2f8ce2.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8ce8.  v13:= 11I;
  #L2f8cec.  call `set`(v12, v13, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8cf2.  v13:= 12I;
  #L2f8cf6.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8cfc.  v13:= 13I;
  #L2f8d00.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8d06.  v13:= 14I;
  #L2f8d0a.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2f8d10.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L2f8d16.  v12:= temp @kind wide;
  #L2f8d18.  return v12 @kind wide;
  #L2f8d1a.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d1e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d24.  throw v12;
  #L2f8d26.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d2a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d30.  throw v12;
  #L2f8d32.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d36.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d3c.  throw v12;
  #L2f8d3e.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d42.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d48.  throw v12;
  #L2f8d4a.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d4e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d54.  throw v12;
  #L2f8d56.  v12:= new `java.lang.IllegalArgumentException`;
  #L2f8d5a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2f8d60.  goto L2f8d64;
  #L2f8d62.  throw v12;
  #L2f8d64.  goto L2f8d62;
}
procedure `long` `parseMaxAge`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f8d78.  v0:= -9223372036854775808L;
  #L2f8d7c.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2f8d82.  v2:= temp @kind wide;
  #L2f8d84.  v4:= 0L;
  #L2f8d88.  v6:= lcmp(v2, v4);
  #L2f8d8c.  if v6 > 0 then goto L2f8d92;
  #L2f8d90.  goto L2f8d94;
  #L2f8d92.  v0:= v2 @kind wide;
  #L2f8d94.  return v0 @kind wide;
  #L2f8d96.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L2f8d98.  v3:= "-?\\d+" @kind object;
  #L2f8d9c.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8da2.  v3:= temp;
  #L2f8da4.  if v3 == 0 then goto L2f8dc6;
  #L2f8da8.  v2:= "-" @kind object;
  #L2f8dac.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8db2.  v6:= temp;
  #L2f8db4.  if v6 == 0 then goto L2f8dba;
  #L2f8db8.  goto L2f8dc4;
  #L2f8dba.  v0:= 9223372036854775807L;
  #L2f8dc4.  return v0 @kind wide;
  #L2f8dc6.  throw v2;
  catch `java.lang.NumberFormatException` @[L2f8d7c..L2f8d84] goto L2f8d96;
}
procedure `boolean` `pathMatch`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2f8708.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L2f870e.  v2:= temp @kind object;
  #L2f8710.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f8716.  v0:= temp;
  #L2f8718.  v1:= 1I;
  #L2f871a.  if v0 == 0 then goto L2f8720;
  #L2f871e.  return v1;
  #L2f8720.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8726.  v0:= temp;
  #L2f8728.  if v0 == 0 then goto L2f8758;
  #L2f872c.  v0:= "/" @kind object;
  #L2f8730.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f8736.  v0:= temp;
  #L2f8738.  if v0 == 0 then goto L2f873e;
  #L2f873c.  return v1;
  #L2f873e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f8744.  v3:= temp;
  #L2f8746.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f874c.  v2:= temp;
  #L2f874e.  v3:= 47I;
  #L2f8752.  if v2 != v3 then goto L2f8758;
  #L2f8756.  return v1;
  #L2f8758.  v2:= 0I;
  #L2f875a.  return v2;
}
procedure `java.lang.String` `domain`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.domain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f88cc.  v0:= v1.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f88d0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Cookie` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lokhttp3/Cookie;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f85ac.  v0:= instanceof @variable v7 @type ^`okhttp3.Cookie` @kind boolean;
  #L2f85b0.  v1:= 0I;
  #L2f85b2.  if v0 != 0 then goto L2f85b8;
  #L2f85b6.  return v1;
  #L2f85b8.  v7:= (`okhttp3.Cookie`) v7 @kind object;
  #L2f85bc.  v0:= v7.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L2f85c0.  v2:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L2f85c4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f85ca.  v0:= temp;
  #L2f85cc.  if v0 == 0 then goto L2f864e;
  #L2f85d0.  v0:= v7.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L2f85d4.  v2:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L2f85d8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f85de.  v0:= temp;
  #L2f85e0.  if v0 == 0 then goto L2f864e;
  #L2f85e4.  v0:= v7.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f85e8.  v2:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f85ec.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f85f2.  v0:= temp;
  #L2f85f4.  if v0 == 0 then goto L2f864e;
  #L2f85f8.  v0:= v7.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f85fc.  v2:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f8600.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f8606.  v0:= temp;
  #L2f8608.  if v0 == 0 then goto L2f864e;
  #L2f860c.  v2:= v7.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f8610.  v4:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f8614.  v0:= lcmp(v2, v4);
  #L2f8618.  if v0 != 0 then goto L2f864e;
  #L2f861c.  v0:= v7.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f8620.  v2:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f8624.  if v0 != v2 then goto L2f864e;
  #L2f8628.  v0:= v7.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L2f862c.  v2:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L2f8630.  if v0 != v2 then goto L2f864e;
  #L2f8634.  v0:= v7.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L2f8638.  v2:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L2f863c.  if v0 != v2 then goto L2f864e;
  #L2f8640.  v7:= v7.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f8644.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f8648.  if v7 != v0 then goto L2f864e;
  #L2f864c.  v1:= 1I;
  #L2f864e.  return v1;
}
procedure `long` `expiresAt`(`okhttp3.Cookie` v2 @kind this) @signature `Lokhttp3/Cookie;.expiresAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f8b0c.  v0:= v2.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f8b10.  return v0 @kind wide;
}
procedure `int` `hashCode`(`okhttp3.Cookie` v6 @kind this) @signature `Lokhttp3/Cookie;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f8824.  v0:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L2f8828.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f882e.  v0:= temp;
  #L2f8830.  v1:= 527I;
  #L2f8834.  v1:= v1 + v0 @kind int;
  #L2f8836.  v1:= v1 * 31;
  #L2f883a.  v0:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L2f883e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f8844.  v0:= temp;
  #L2f8846.  v1:= v1 + v0 @kind int;
  #L2f8848.  v1:= v1 * 31;
  #L2f884c.  v0:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f8850.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f8856.  v0:= temp;
  #L2f8858.  v1:= v1 + v0 @kind int;
  #L2f885a.  v1:= v1 * 31;
  #L2f885e.  v0:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f8862.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f8868.  v0:= temp;
  #L2f886a.  v1:= v1 + v0 @kind int;
  #L2f886c.  v1:= v1 * 31;
  #L2f8870.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f8874.  v0:= 32I;
  #L2f8878.  v4:= v2 ^>> v0 @kind long;
  #L2f887c.  v2:= v2 ^~ v4 @kind long;
  #L2f887e.  v0:= (`int`) v2 @kind l2i;
  #L2f8880.  v1:= v1 + v0 @kind int;
  #L2f8882.  v1:= v1 * 31;
  #L2f8886.  v0:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f888a.  v0:= v0 ^~ 1;
  #L2f888e.  v1:= v1 + v0 @kind int;
  #L2f8890.  v1:= v1 * 31;
  #L2f8894.  v0:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L2f8898.  v0:= v0 ^~ 1;
  #L2f889c.  v1:= v1 + v0 @kind int;
  #L2f889e.  v1:= v1 * 31;
  #L2f88a2.  v0:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L2f88a6.  v0:= v0 ^~ 1;
  #L2f88aa.  v1:= v1 + v0 @kind int;
  #L2f88ac.  v1:= v1 * 31;
  #L2f88b0.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f88b4.  v0:= v0 ^~ 1;
  #L2f88b8.  v1:= v1 + v0 @kind int;
  #L2f88ba.  return v1;
}
procedure `boolean` `hostOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.hostOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8660.  v0:= v1.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f8664.  return v0;
}
procedure `boolean` `httpOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.httpOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8678.  v0:= v1.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L2f867c.  return v0;
}
procedure `boolean` `matches`(`okhttp3.Cookie` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/Cookie;.matches:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f8690.  v0:= v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f8694.  if v0 == 0 then goto L2f86ae;
  #L2f8698.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2f869e.  v0:= temp @kind object;
  #L2f86a0.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f86a4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f86aa.  v0:= temp;
  #L2f86ac.  goto L2f86c2;
  #L2f86ae.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2f86b4.  v0:= temp @kind object;
  #L2f86b6.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f86ba.  call temp:= `domainMatch`(v0, v1) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L2f86c0.  v0:= temp;
  #L2f86c2.  v1:= 0I;
  #L2f86c4.  if v0 != 0 then goto L2f86ca;
  #L2f86c8.  return v1;
  #L2f86ca.  v0:= v2.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f86ce.  call temp:= `pathMatch`(v3, v0) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @kind static;
  #L2f86d4.  v0:= temp;
  #L2f86d6.  if v0 != 0 then goto L2f86dc;
  #L2f86da.  return v1;
  #L2f86dc.  v0:= v2.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f86e0.  if v0 == 0 then goto L2f86f2;
  #L2f86e4.  call temp:= `isHttps`(v3) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L2f86ea.  v3:= temp;
  #L2f86ec.  if v3 != 0 then goto L2f86f2;
  #L2f86f0.  return v1;
  #L2f86f2.  v3:= 1I;
  #L2f86f4.  return v3;
}
procedure `java.lang.String` `name`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f88e4.  v0:= v1.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L2f88e8.  return v0 @kind object;
}
procedure `java.lang.String` `path`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.path:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8958.  v0:= v1.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f895c.  return v0 @kind object;
}
procedure `boolean` `persistent`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.persistent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f876c.  v0:= v1.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L2f8770.  return v0;
}
procedure `boolean` `secure`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.secure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8784.  v0:= v1.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f8788.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8970.  v0:= 0I;
  #L2f8972.  call temp:= `toString`(v1, v0) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @kind virtual;
  #L2f8978.  v0:= temp @kind object;
  #L2f897a.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v6 @kind this, `boolean` v7 ) @signature `Lokhttp3/Cookie;.toString:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f898c.  v0:= new `java.lang.StringBuilder`;
  #L2f8990.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f8996.  v1:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L2f899a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89a0.  v1:= 61I;
  #L2f89a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89aa.  v1:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L2f89ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89b4.  v1:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L2f89b8.  if v1 == 0 then goto L2f89fe;
  #L2f89bc.  v1:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f89c0.  v3:= -9223372036854775808L;
  #L2f89c4.  v5:= lcmp(v1, v3);
  #L2f89c8.  if v5 != 0 then goto L2f89d8;
  #L2f89cc.  v1:= "; max-age=0" @kind object;
  #L2f89d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89d6.  goto L2f89fe;
  #L2f89d8.  v1:= "; expires=" @kind object;
  #L2f89dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89e2.  v1:= new `java.util.Date`;
  #L2f89e6.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L2f89ea.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L2f89f0.  call temp:= `format`(v1) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L2f89f6.  v1:= temp @kind object;
  #L2f89f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f89fe.  v1:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L2f8a02.  if v1 != 0 then goto L2f8a28;
  #L2f8a06.  v1:= "; domain=" @kind object;
  #L2f8a0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a10.  if v7 == 0 then goto L2f8a1e;
  #L2f8a14.  v7:= "." @kind object;
  #L2f8a18.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a1e.  v7:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L2f8a22.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a28.  v7:= "; path=" @kind object;
  #L2f8a2c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a32.  v7:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L2f8a36.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a3c.  v7:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L2f8a40.  if v7 == 0 then goto L2f8a4e;
  #L2f8a44.  v7:= "; secure" @kind object;
  #L2f8a48.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a4e.  v7:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L2f8a52.  if v7 == 0 then goto L2f8a60;
  #L2f8a56.  v7:= "; httponly" @kind object;
  #L2f8a5a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f8a60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f8a66.  v7:= temp @kind object;
  #L2f8a68.  return v7 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8a7c.  v0:= v1.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L2f8a80.  return v0 @kind object;
}
