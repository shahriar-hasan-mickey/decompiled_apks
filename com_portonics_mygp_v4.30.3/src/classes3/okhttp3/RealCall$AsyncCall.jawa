record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `java.util.concurrent.atomic.AtomicInteger` `okhttp3.RealCall$AsyncCall.callsPerHost` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.RealCall$AsyncCall.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/RealCall$AsyncCall;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fe844.  v0:= constclass @type ^`okhttp3.RealCall` @kind object;
  #L2fe848.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v2 @kind this, `okhttp3.RealCall` v3 @kind object, `okhttp3.Callback` v4 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fe85c.  v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v3 @kind object;
  #L2fe860.  v0:= 1I;
  #L2fe862.  v0:= new `java.lang.Object`[v0];
  #L2fe866.  call temp:= `redactedUrl`(v3) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L2fe86c.  v3:= temp @kind object;
  #L2fe86e.  v1:= 0I;
  #L2fe870.  v0[v1]:= v3 @kind object;
  #L2fe874.  v3:= "OkHttp %s" @kind object;
  #L2fe878.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2fe87e.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L2fe882.  call `<init>`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L2fe888.  v2.`okhttp3.RealCall$AsyncCall.callsPerHost` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L2fe88c.  v2.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v4 @kind object;
  #L2fe890.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `callsPerHost`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.callsPerHost:()Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag  {
    temp;
    v0;

  #L2fe7f8.  v0:= v1.`okhttp3.RealCall$AsyncCall.callsPerHost` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2fe7fc.  return v0 @kind object;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v5 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2fe8a4.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe8a8.  call temp:= `access$000`(v0) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/internal/connection/Transmitter;` @kind static;
  #L2fe8ae.  v0:= temp @kind object;
  #L2fe8b0.  call `timeoutEnter`(v0) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutEnter:()V` @kind virtual;
  #L2fe8b6.  v0:= 0I;
  #L2fe8b8.  v1:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe8bc.  call temp:= `getResponseWithInterceptorChain`(v1) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L2fe8c2.  v0:= temp @kind object;
  #L2fe8c4.  v1:= 1I;
  #L2fe8c6.  v2:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2fe8ca.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe8ce.  call `onResponse`(v2, v3, v0) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #L2fe8d4.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe8d8.  v0:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2fe8dc.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2fe8e2.  v0:= temp @kind object;
  #L2fe8e4.  call `finished`(v0, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2fe8ea.  goto L2fe9a8;
  #L2fe8ec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fe8ee.  goto L2fe8fa;
  #L2fe8f0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2fe8f2.  goto L2fe954;
  #L2fe8f4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fe8f6.  v0:= v1 @kind object;
  #L2fe8f8.  v1:= 0I;
  #L2fe8fa.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe8fe.  call `cancel`(v2) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #L2fe904.  if v1 != 0 then goto L2fe948;
  #L2fe908.  v1:= new `java.io.IOException`;
  #L2fe90c.  v2:= new `java.lang.StringBuilder`;
  #L2fe910.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fe916.  v3:= "canceled due to " @kind object;
  #L2fe91a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fe920.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fe926.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fe92c.  v2:= temp @kind object;
  #L2fe92e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fe934.  call `addSuppressed`(v1, v0) @signature `Ljava/io/IOException;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2fe93a.  v2:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2fe93e.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe942.  call `onFailure`(v2, v3, v1) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2fe948.  throw v0;
  #L2fe94a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fe94c.  goto L2fe9aa;
  #L2fe94e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2fe950.  v0:= v1 @kind object;
  #L2fe952.  v1:= 0I;
  #L2fe954.  if v1 == 0 then goto L2fe998;
  #L2fe958.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2fe95e.  v1:= temp @kind object;
  #L2fe960.  v2:= 4I;
  #L2fe962.  v3:= new `java.lang.StringBuilder`;
  #L2fe966.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fe96c.  v4:= "Callback failure for " @kind object;
  #L2fe970.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fe976.  v4:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe97a.  call temp:= `toLoggableString`(v4) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L2fe980.  v4:= temp @kind object;
  #L2fe982.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fe988.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fe98e.  v3:= temp @kind object;
  #L2fe990.  call `log`(v1, v2, v3, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2fe996.  goto L2fe8d4;
  #L2fe998.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2fe99c.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe9a0.  call `onFailure`(v1, v2, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2fe9a6.  goto L2fe8d4;
  #L2fe9a8.  return @kind void;
  #L2fe9aa.  v1:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe9ae.  v1:= v1.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2fe9b2.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2fe9b8.  v1:= temp @kind object;
  #L2fe9ba.  call `finished`(v1, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2fe9c0.  goto L2fe9c4;
  #L2fe9c2.  throw v0;
  #L2fe9c4.  goto L2fe9c2;
  catch `java.io.IOException` @[L2fe8b8..L2fe8c4] goto L2fe94e;
  catch `java.lang.Throwable` @[L2fe8b8..L2fe8c4] goto L2fe8f4;
  catch `java.io.IOException` @[L2fe8c6..L2fe8d4] goto L2fe8f0;
  catch `java.lang.Throwable` @[L2fe8c6..L2fe8d4] goto L2fe8ec;
  catch `java.lang.Throwable` @[L2fe8fa..L2fe9a6] goto L2fe94a;
}
procedure `void` `executeOn`(`okhttp3.RealCall$AsyncCall` v2 @kind this, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.executeOn:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2fea00.  call `execute`(v3, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2fea06.  goto L2fea58;
  #L2fea08.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fea0a.  goto L2fea5a;
  #L2fea0c.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L2fea0e.  v0:= new `java.io.InterruptedIOException`;
  #L2fea12.  v1:= "executor rejected" @kind object;
  #L2fea16.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fea1c.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2fea22.  v3:= v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fea26.  call temp:= `access$000`(v3) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/internal/connection/Transmitter;` @kind static;
  #L2fea2c.  v3:= temp @kind object;
  #L2fea2e.  call temp:= `noMoreExchanges`(v3, v0) @signature `Lokhttp3/internal/connection/Transmitter;.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2fea34.  v3:= v2.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2fea38.  v1:= v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fea3c.  call `onFailure`(v3, v1, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2fea42.  v3:= v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fea46.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2fea4a.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2fea50.  v3:= temp @kind object;
  #L2fea52.  call `finished`(v3, v2) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2fea58.  return @kind void;
  #L2fea5a.  v0:= v2.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fea5e.  v0:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2fea62.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2fea68.  v0:= temp @kind object;
  #L2fea6a.  call `finished`(v0, v2) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2fea70.  throw v3;
  catch `java.util.concurrent.RejectedExecutionException` @[L2fea00..L2fea06] goto L2fea0c;
  catch `java.lang.Throwable` @[L2fea00..L2fea06] goto L2fea08;
  catch `java.lang.Throwable` @[L2fea0e..L2fea42] goto L2fea08;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L2fe810.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe814.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L2fe7cc.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe7d0.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L2fe7d4.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2fe7da.  v0:= temp @kind object;
  #L2fe7dc.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2fe7e2.  v0:= temp @kind object;
  #L2fe7e4.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L2fe828.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2fe82c.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L2fe830.  return v0 @kind object;
}
procedure `void` `reuseCallsPerHostFrom`(`okhttp3.RealCall$AsyncCall` v0 @kind this, `okhttp3.RealCall$AsyncCall` v1 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.reuseCallsPerHostFrom:(Lokhttp3/RealCall$AsyncCall;)V` @AccessFlag  {
    temp;

  #L2fea9c.  v1:= v1.`okhttp3.RealCall$AsyncCall.callsPerHost` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L2feaa0.  v0.`okhttp3.RealCall$AsyncCall.callsPerHost` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L2feaa4.  return @kind void;
}
