record `okhttp3.RequestBody$2` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `int` `okhttp3.RequestBody$2.val$byteCount` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `okhttp3.RequestBody$2.val$content` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.MediaType` `okhttp3.RequestBody$2.val$contentType` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.RequestBody$2.val$offset` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RequestBody$2` v0 @kind this, `okhttp3.MediaType` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lokhttp3/RequestBody$2;.<init>:(Lokhttp3/MediaType;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ff4e0.  v0.`okhttp3.RequestBody$2.val$contentType` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L2ff4e4.  v0.`okhttp3.RequestBody$2.val$byteCount` @type ^`int` := v2;
  #L2ff4e8.  v0.`okhttp3.RequestBody$2.val$content` @type ^`byte`[] := v3 @kind object;
  #L2ff4ec.  v0.`okhttp3.RequestBody$2.val$offset` @type ^`int` := v4;
  #L2ff4f0.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2ff4f6.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.RequestBody$2` v2 @kind this) @signature `Lokhttp3/RequestBody$2;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ff4b0.  v0:= v2.`okhttp3.RequestBody$2.val$byteCount` @type ^`int`;
  #L2ff4b4.  v0:= (`long`) v0 @kind i2l;
  #L2ff4b6.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.RequestBody$2` v1 @kind this) @signature `Lokhttp3/RequestBody$2;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ff4c8.  v0:= v1.`okhttp3.RequestBody$2.val$contentType` @type ^`okhttp3.MediaType` @kind object;
  #L2ff4cc.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.RequestBody$2` v3 @kind this, `okio.n` v4 @kind object) @signature `Lokhttp3/RequestBody$2;.writeTo:(Lokio/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ff508.  v0:= v3.`okhttp3.RequestBody$2.val$content` @type ^`byte`[] @kind object;
  #L2ff50c.  v1:= v3.`okhttp3.RequestBody$2.val$offset` @type ^`int`;
  #L2ff510.  v2:= v3.`okhttp3.RequestBody$2.val$byteCount` @type ^`int`;
  #L2ff514.  call temp:= `b`(v4, v0, v1, v2) @signature `Lokio/n;.b:([BII)Lokio/n;` @kind interface;
  #L2ff51a.  return @kind void;
}
