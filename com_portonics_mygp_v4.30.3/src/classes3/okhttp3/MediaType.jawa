record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fd4cc.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L2fd4d0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2fd4d6.  v0:= temp @kind object;
  #L2fd4d8.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2fd4dc.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L2fd4e0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2fd4e6.  v0:= temp @kind object;
  #L2fd4e8.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2fd4ec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2fd500.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd506.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L2fd50a.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L2fd50e.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L2fd512.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L2fd516.  return @kind void;
}
procedure `okhttp3.MediaType` `get`(`java.lang.String` v11 @kind object) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2fd29c.  v0:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L2fd2a0.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2fd2a6.  v0:= temp @kind object;
  #L2fd2a8.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L2fd2ae.  v1:= temp;
  #L2fd2b0.  v2:= 34I;
  #L2fd2b4.  if v1 == 0 then goto L2fd454;
  #L2fd2b8.  v1:= 1I;
  #L2fd2ba.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2fd2c0.  v3:= temp @kind object;
  #L2fd2c2.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2fd2c6.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2fd2cc.  v3:= temp @kind object;
  #L2fd2ce.  v5:= 2I;
  #L2fd2d0.  call temp:= `group`(v0, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2fd2d6.  v6:= temp @kind object;
  #L2fd2d8.  call temp:= `toLowerCase`(v6, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2fd2de.  v4:= temp @kind object;
  #L2fd2e0.  v6:= 0I;
  #L2fd2e2.  v7:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L2fd2e6.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2fd2ec.  v7:= temp @kind object;
  #L2fd2ee.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L2fd2f4.  v0:= temp;
  #L2fd2f6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fd2fc.  v8:= temp;
  #L2fd2fe.  if v0 >= v8 then goto L2fd448;
  #L2fd302.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fd308.  v8:= temp;
  #L2fd30a.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L2fd310.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L2fd316.  v8:= temp;
  #L2fd318.  v9:= "\" for: \"" @kind object;
  #L2fd31c.  if v8 == 0 then goto L2fd400;
  #L2fd320.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2fd326.  v0:= temp @kind object;
  #L2fd328.  if v0 == 0 then goto L2fd3f4;
  #L2fd32c.  v8:= "charset" @kind object;
  #L2fd330.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2fd336.  v0:= temp;
  #L2fd338.  if v0 != 0 then goto L2fd33e;
  #L2fd33c.  goto L2fd3f4;
  #L2fd33e.  call temp:= `group`(v7, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2fd344.  v0:= temp @kind object;
  #L2fd346.  if v0 == 0 then goto L2fd386;
  #L2fd34a.  v8:= "'" @kind object;
  #L2fd34e.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2fd354.  v10:= temp;
  #L2fd356.  if v10 == 0 then goto L2fd390;
  #L2fd35a.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2fd360.  v8:= temp;
  #L2fd362.  if v8 == 0 then goto L2fd390;
  #L2fd366.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fd36c.  v8:= temp;
  #L2fd36e.  if v8 <= v5 then goto L2fd390;
  #L2fd372.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fd378.  v8:= temp;
  #L2fd37a.  v8:= v8 - v1 @kind int;
  #L2fd37c.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2fd382.  v0:= temp @kind object;
  #L2fd384.  goto L2fd390;
  #L2fd386.  v0:= 3I;
  #L2fd388.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2fd38e.  v0:= temp @kind object;
  #L2fd390.  if v6 == 0 then goto L2fd3f2;
  #L2fd394.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2fd39a.  v8:= temp;
  #L2fd39c.  if v8 == 0 then goto L2fd3a2;
  #L2fd3a0.  goto L2fd3f2;
  #L2fd3a2.  v1:= new `java.lang.IllegalArgumentException`;
  #L2fd3a6.  v3:= new `java.lang.StringBuilder`;
  #L2fd3aa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd3b0.  v4:= "Multiple charsets defined: \"" @kind object;
  #L2fd3b4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3ba.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3c0.  v4:= "\" and: \"" @kind object;
  #L2fd3c4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3ca.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3d0.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3d6.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3dc.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd3e2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd3e8.  v11:= temp @kind object;
  #L2fd3ea.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd3f0.  throw v1;
  #L2fd3f2.  v6:= v0 @kind object;
  #L2fd3f4.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L2fd3fa.  v0:= temp;
  #L2fd3fc.  goto L2fd2f6;
  #L2fd400.  v1:= new `java.lang.IllegalArgumentException`;
  #L2fd404.  v3:= new `java.lang.StringBuilder`;
  #L2fd408.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd40e.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L2fd412.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd418.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2fd41e.  v0:= temp @kind object;
  #L2fd420.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd426.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd42c.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd432.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd438.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd43e.  v11:= temp @kind object;
  #L2fd440.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd446.  throw v1;
  #L2fd448.  v0:= new `okhttp3.MediaType`;
  #L2fd44c.  call `<init>`(v0, v11, v3, v4, v6) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2fd452.  return v0 @kind object;
  #L2fd454.  v0:= new `java.lang.IllegalArgumentException`;
  #L2fd458.  v1:= new `java.lang.StringBuilder`;
  #L2fd45c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd462.  v3:= "No subtype found for: \"" @kind object;
  #L2fd466.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd46c.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd472.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd478.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd47e.  v11:= temp @kind object;
  #L2fd480.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd486.  goto L2fd48a;
  #L2fd488.  throw v0;
  #L2fd48a.  goto L2fd488;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2fd49c.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2fd4a2.  v0:= temp @kind object;
  #L2fd4a4.  return v0 @kind object;
  #L2fd4a6.  v0:= 0I;
  #L2fd4a8.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2fd49c..L2fd4a4] goto L2fd4a6;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd24c.  v0:= 0I;
  #L2fd24e.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L2fd254.  v0:= temp @kind object;
  #L2fd256.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd268.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L2fd26c.  if v0 == 0 then goto L2fd278;
  #L2fd270.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2fd276.  v2:= temp @kind object;
  #L2fd278.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2fd268..L2fd278] goto L2fd278;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd1ac.  v0:= instanceof @variable v2 @type ^`okhttp3.MediaType` @kind boolean;
  #L2fd1b0.  if v0 == 0 then goto L2fd1d0;
  #L2fd1b4.  v2:= (`okhttp3.MediaType`) v2 @kind object;
  #L2fd1b8.  v2:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L2fd1bc.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L2fd1c0.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2fd1c6.  v2:= temp;
  #L2fd1c8.  if v2 == 0 then goto L2fd1d0;
  #L2fd1cc.  v2:= 1I;
  #L2fd1ce.  goto L2fd1d2;
  #L2fd1d0.  v2:= 0I;
  #L2fd1d2.  return v2;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd1e4.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L2fd1e8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2fd1ee.  v0:= temp;
  #L2fd1f0.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd204.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L2fd208.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd21c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L2fd220.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd234.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L2fd238.  return v0 @kind object;
}
