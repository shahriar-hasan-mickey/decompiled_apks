record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L300a04.  v0:= new `okhttp3.TlsVersion`;
  #L300a08.  v1:= "TLS_1_3" @kind object;
  #L300a0c.  v2:= 0I;
  #L300a0e.  v3:= "TLSv1.3" @kind object;
  #L300a12.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L300a18.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L300a1c.  v1:= new `okhttp3.TlsVersion`;
  #L300a20.  v3:= "TLS_1_2" @kind object;
  #L300a24.  v4:= 1I;
  #L300a26.  v5:= "TLSv1.2" @kind object;
  #L300a2a.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L300a30.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v1 @kind object;
  #L300a34.  v3:= new `okhttp3.TlsVersion`;
  #L300a38.  v5:= "TLS_1_1" @kind object;
  #L300a3c.  v6:= 2I;
  #L300a3e.  v7:= "TLSv1.1" @kind object;
  #L300a42.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L300a48.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v3 @kind object;
  #L300a4c.  v5:= new `okhttp3.TlsVersion`;
  #L300a50.  v7:= "TLS_1_0" @kind object;
  #L300a54.  v8:= 3I;
  #L300a56.  v9:= "TLSv1" @kind object;
  #L300a5a.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L300a60.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v5 @kind object;
  #L300a64.  v7:= new `okhttp3.TlsVersion`;
  #L300a68.  v9:= "SSL_3_0" @kind object;
  #L300a6c.  v10:= 4I;
  #L300a6e.  v11:= "SSLv3" @kind object;
  #L300a72.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L300a78.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v7 @kind object;
  #L300a7c.  v9:= 5I;
  #L300a7e.  v9:= new `okhttp3.TlsVersion`[v9];
  #L300a82.  v9[v2]:= v0 @kind object;
  #L300a86.  v9[v4]:= v1 @kind object;
  #L300a8a.  v9[v6]:= v3 @kind object;
  #L300a8e.  v9[v8]:= v5 @kind object;
  #L300a92.  v9[v10]:= v7 @kind object;
  #L300a96.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v9 @kind object;
  #L300a9a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L300aac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L300ab2.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L300ab6.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L30088c.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L300892.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L300898.  v0:= temp;
  #L30089a.  v1:= -1I;
  #L30089c.  goto L300964;
  #L3008a2.  goto L300910;
  #L3008a4.  v0:= "TLSv1" @kind object;
  #L3008a8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3008ae.  v0:= temp;
  #L3008b0.  if v0 != 0 then goto L3008b6;
  #L3008b4.  goto L300910;
  #L3008b6.  v1:= 4I;
  #L3008b8.  goto L300910;
  #L3008ba.  v0:= "SSLv3" @kind object;
  #L3008be.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3008c4.  v0:= temp;
  #L3008c6.  if v0 != 0 then goto L3008cc;
  #L3008ca.  goto L300910;
  #L3008cc.  v1:= 3I;
  #L3008ce.  goto L300910;
  #L3008d0.  v0:= "TLSv1.3" @kind object;
  #L3008d4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3008da.  v0:= temp;
  #L3008dc.  if v0 != 0 then goto L3008e2;
  #L3008e0.  goto L300910;
  #L3008e2.  v1:= 2I;
  #L3008e4.  goto L300910;
  #L3008e6.  v0:= "TLSv1.2" @kind object;
  #L3008ea.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3008f0.  v0:= temp;
  #L3008f2.  if v0 != 0 then goto L3008f8;
  #L3008f6.  goto L300910;
  #L3008f8.  v1:= 1I;
  #L3008fa.  goto L300910;
  #L3008fc.  v0:= "TLSv1.1" @kind object;
  #L300900.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L300906.  v0:= temp;
  #L300908.  if v0 != 0 then goto L30090e;
  #L30090c.  goto L300910;
  #L30090e.  v1:= 0I;
  #L300910.  goto L300990;
  #L300916.  v0:= new `java.lang.IllegalArgumentException`;
  #L30091a.  v1:= new `java.lang.StringBuilder`;
  #L30091e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L300924.  v2:= "Unexpected TLS version: " @kind object;
  #L300928.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30092e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300934.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30093a.  v3:= temp @kind object;
  #L30093c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L300942.  throw v0;
  #L300944.  v3:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L300948.  return v3 @kind object;
  #L30094a.  v3:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L30094e.  return v3 @kind object;
  #L300950.  v3:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L300954.  return v3 @kind object;
  #L300956.  v3:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L30095a.  return v3 @kind object;
  #L30095c.  v3:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L300960.  return v3 @kind object;
  #L300962.  
  #L300964.  switch v0
                  | -503070503 => goto L3008fc
                  | -503070502 => goto L3008e6
                  | -503070501 => goto L3008d0
                  | 79201641 => goto L3008ba
                  | 79923350 => goto L3008a4
                  | else => goto L3008a2;
  #L300990.  switch v1
                  | 0 => goto L30095c
                  | 1 => goto L300956
                  | 2 => goto L300950
                  | 3 => goto L30094a
                  | 4 => goto L300944
                  | else => goto L300916;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L300844.  v0:= new `java.util.ArrayList`;
  #L300848.  v1:= length @variable v4;
  #L30084a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L300850.  v1:= length @variable v4;
  #L300852.  v2:= 0I;
  #L300854.  if v2 >= v1 then goto L300870;
  #L300858.  v3:= v4[v2] @kind object;
  #L30085c.  call temp:= `forJavaName`(v3) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L300862.  v3:= temp @kind object;
  #L300864.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30086a.  v2:= v2 + 1;
  #L30086e.  goto L300854;
  #L300870.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L300876.  v4:= temp @kind object;
  #L300878.  return v4 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3009bc.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L3009c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3009c6.  v1:= temp @kind object;
  #L3009c8.  v1:= (`okhttp3.TlsVersion`) v1 @kind object;
  #L3009cc.  return v1 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3009e0.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L3009e4.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3009ea.  v0:= temp @kind object;
  #L3009ec.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L3009f0.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30082c.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L300830.  return v0 @kind object;
}
