record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f561c.  v0:= new `java.lang.StringBuilder`;
  #L2f5620.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f5626.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2f562c.  v1:= temp @kind object;
  #L2f562e.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L2f5634.  v1:= temp @kind object;
  #L2f5636.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f563c.  v1:= "-Sent-Millis" @kind object;
  #L2f5640.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5646.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f564c.  v0:= temp @kind object;
  #L2f564e.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L2f5652.  v0:= new `java.lang.StringBuilder`;
  #L2f5656.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f565c.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2f5662.  v1:= temp @kind object;
  #L2f5664.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L2f566a.  v1:= temp @kind object;
  #L2f566c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5672.  v1:= "-Received-Millis" @kind object;
  #L2f5676.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f567c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f5682.  v0:= temp @kind object;
  #L2f5684.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L2f5688.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f569c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f56a2.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2f56a8.  v0:= temp @kind object;
  #L2f56aa.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2f56b0.  v0:= temp @kind object;
  #L2f56b2.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f56b8.  v0:= temp @kind object;
  #L2f56ba.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L2f56be.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L2f56c4.  v0:= temp @kind object;
  #L2f56c6.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L2f56ca.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2f56d0.  v0:= temp @kind object;
  #L2f56d2.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2f56d8.  v0:= temp @kind object;
  #L2f56da.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L2f56de.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L2f56e4.  v0:= temp @kind object;
  #L2f56e6.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L2f56ea.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L2f56f0.  v0:= temp;
  #L2f56f2.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L2f56f6.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L2f56fc.  v0:= temp @kind object;
  #L2f56fe.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L2f5702.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L2f5708.  v0:= temp @kind object;
  #L2f570a.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L2f570e.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L2f5714.  v0:= temp @kind object;
  #L2f5716.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2f571a.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L2f5720.  v0:= temp @kind wide;
  #L2f5722.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L2f5726.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L2f572c.  v0:= temp @kind wide;
  #L2f572e.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L2f5732.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v8 @kind this, `okio.i0` v9 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/i0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2f5744.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f574a.  call temp:= `d`(v9) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L2f5750.  v0:= temp @kind object;
  #L2f5752.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f5758.  v1:= temp @kind object;
  #L2f575a.  v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v1 @kind object;
  #L2f575e.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f5764.  v1:= temp @kind object;
  #L2f5766.  v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v1 @kind object;
  #L2f576a.  v1:= new `okhttp3.Headers$Builder`;
  #L2f576e.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2f5774.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/o;)I` @kind static;
  #L2f577a.  v2:= temp;
  #L2f577c.  v3:= 0I;
  #L2f577e.  v4:= 0I;
  #L2f5780.  if v4 >= v2 then goto L2f5798;
  #L2f5784.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f578a.  v5:= temp @kind object;
  #L2f578c.  call temp:= `addLenient`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2f5792.  v4:= v4 + 1;
  #L2f5796.  goto L2f5780;
  #L2f5798.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2f579e.  v1:= temp @kind object;
  #L2f57a0.  v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L2f57a4.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f57aa.  v1:= temp @kind object;
  #L2f57ac.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L2f57b2.  v1:= temp @kind object;
  #L2f57b4.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L2f57b8.  v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L2f57bc.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L2f57c0.  v8.`okhttp3.Cache$Entry.code` @type ^`int` := v2;
  #L2f57c4.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L2f57c8.  v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v1 @kind object;
  #L2f57cc.  v1:= new `okhttp3.Headers$Builder`;
  #L2f57d0.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2f57d6.  call temp:= `readInt`(v0) @signature `Lokhttp3/Cache;.readInt:(Lokio/o;)I` @kind static;
  #L2f57dc.  v2:= temp;
  #L2f57de.  if v3 >= v2 then goto L2f57f6;
  #L2f57e2.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f57e8.  v4:= temp @kind object;
  #L2f57ea.  call temp:= `addLenient`(v1, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2f57f0.  v3:= v3 + 1;
  #L2f57f4.  goto L2f57de;
  #L2f57f6.  v2:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L2f57fa.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2f5800.  v3:= temp @kind object;
  #L2f5802.  v4:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L2f5806.  call temp:= `get`(v1, v4) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2f580c.  v5:= temp @kind object;
  #L2f580e.  call temp:= `removeAll`(v1, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2f5814.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2f581a.  v6:= 0L;
  #L2f581e.  if v3 == 0 then goto L2f582c;
  #L2f5822.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2f5828.  v2:= temp @kind wide;
  #L2f582a.  goto L2f582e;
  #L2f582c.  v2:= v6 @kind wide;
  #L2f582e.  v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v2 @kind wide;
  #L2f5832.  if v5 == 0 then goto L2f583e;
  #L2f5836.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2f583c.  v6:= temp @kind wide;
  #L2f583e.  v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L2f5842.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2f5848.  v1:= temp @kind object;
  #L2f584a.  v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L2f584e.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L2f5854.  v1:= temp;
  #L2f5856.  if v1 == 0 then goto L2f58f6;
  #L2f585a.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f5860.  v1:= temp @kind object;
  #L2f5862.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f5868.  v2:= temp;
  #L2f586a.  if v2 > 0 then goto L2f58be;
  #L2f586e.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f5874.  v1:= temp @kind object;
  #L2f5876.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L2f587c.  v1:= temp @kind object;
  #L2f587e.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/o;)Ljava/util/List;` @kind direct;
  #L2f5884.  v2:= temp @kind object;
  #L2f5886.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/o;)Ljava/util/List;` @kind direct;
  #L2f588c.  v3:= temp @kind object;
  #L2f588e.  call temp:= `O`(v0) @signature `Lokio/o;.O:()Z` @kind interface;
  #L2f5894.  v4:= temp;
  #L2f5896.  if v4 != 0 then goto L2f58ac;
  #L2f589a.  call temp:= `n0`(v0) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f58a0.  v0:= temp @kind object;
  #L2f58a2.  call temp:= `forJavaName`(v0) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L2f58a8.  v0:= temp @kind object;
  #L2f58aa.  goto L2f58b0;
  #L2f58ac.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L2f58b0.  call temp:= `get`(v0, v1, v2, v3) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L2f58b6.  v0:= temp @kind object;
  #L2f58b8.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2f58bc.  goto L2f58fc;
  #L2f58be.  v0:= new `java.io.IOException`;
  #L2f58c2.  v2:= new `java.lang.StringBuilder`;
  #L2f58c6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f58cc.  v3:= "expected \"\" but was \"" @kind object;
  #L2f58d0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f58d6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f58dc.  v1:= "\"" @kind object;
  #L2f58e0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f58e6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f58ec.  v1:= temp @kind object;
  #L2f58ee.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f58f4.  throw v0;
  #L2f58f6.  v0:= 0I;
  #L2f58f8.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2f58fc.  call `close`(v9) @signature `Lokio/i0;.close:()V` @kind interface;
  #L2f5902.  return @kind void;
  #L2f5904.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f5906.  call `close`(v9) @signature `Lokio/i0;.close:()V` @kind interface;
  #L2f590c.  goto L2f5910;
  #L2f590e.  throw v0;
  #L2f5910.  goto L2f590e;
  catch `java.lang.Throwable` @[L2f574a..L2f58fc] goto L2f5904;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2f5400.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2f5404.  v1:= "https://" @kind object;
  #L2f5408.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f540e.  v0:= temp;
  #L2f5410.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v6 @kind this, `okio.o` v7 @kind object) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/o;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f5484.  call temp:= `readInt`(v7) @signature `Lokhttp3/Cache;.readInt:(Lokio/o;)I` @kind static;
  #L2f548a.  v0:= temp;
  #L2f548c.  v1:= -1I;
  #L2f548e.  if v0 != v1 then goto L2f549c;
  #L2f5492.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2f5498.  v7:= temp @kind object;
  #L2f549a.  return v7 @kind object;
  #L2f549c.  v1:= "X.509" @kind object;
  #L2f54a0.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L2f54a6.  v1:= temp @kind object;
  #L2f54a8.  v2:= new `java.util.ArrayList`;
  #L2f54ac.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2f54b2.  v3:= 0I;
  #L2f54b4.  if v3 >= v0 then goto L2f54f4;
  #L2f54b8.  call temp:= `n0`(v7) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f54be.  v4:= temp @kind object;
  #L2f54c0.  v5:= new `okio.k`;
  #L2f54c4.  call `<init>`(v5) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L2f54ca.  call temp:= `decodeBase64`(v4) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2f54d0.  v4:= temp @kind object;
  #L2f54d2.  call temp:= `j1`(v5, v4) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L2f54d8.  call temp:= `J0`(v5) @signature `Lokio/k;.J0:()Ljava/io/InputStream;` @kind virtual;
  #L2f54de.  v4:= temp @kind object;
  #L2f54e0.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L2f54e6.  v4:= temp @kind object;
  #L2f54e8.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2f54ee.  v3:= v3 + 1;
  #L2f54f2.  goto L2f54b4;
  #L2f54f4.  return v2 @kind object;
  #L2f54f6.  v7:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L2f54f8.  v0:= new `java.io.IOException`;
  #L2f54fc.  call temp:= `getMessage`(v7) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2f5502.  v7:= temp @kind object;
  #L2f5504.  call `<init>`(v0, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f550a.  goto L2f550e;
  #L2f550c.  throw v0;
  #L2f550e.  goto L2f550c;
  catch `java.security.cert.CertificateException` @[L2f549c..L2f54ee] goto L2f54f6;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v4 @kind this, `okio.n` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/n;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f5930.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f5936.  v0:= temp;
  #L2f5938.  v0:= (`long`) v0 @kind i2l;
  #L2f593a.  call temp:= `F0`(v5, v0) @signature `Lokio/n;.F0:(J)Lokio/n;` @kind interface;
  #L2f5940.  v0:= temp @kind object;
  #L2f5942.  v1:= 10I;
  #L2f5946.  call temp:= `P`(v0, v1) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f594c.  v0:= 0I;
  #L2f594e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f5954.  v2:= temp;
  #L2f5956.  if v0 >= v2 then goto L2f5992;
  #L2f595a.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f5960.  v3:= temp @kind object;
  #L2f5962.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L2f5966.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L2f596c.  v3:= temp @kind object;
  #L2f596e.  call temp:= `of`(v3) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L2f5974.  v3:= temp @kind object;
  #L2f5976.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L2f597c.  v3:= temp @kind object;
  #L2f597e.  call temp:= `b0`(v5, v3) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5984.  v3:= temp @kind object;
  #L2f5986.  call temp:= `P`(v3, v1) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f598c.  v0:= v0 + 1;
  #L2f5990.  goto L2f5956;
  #L2f5992.  return @kind void;
  #L2f5994.  v5:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L2f5996.  v6:= new `java.io.IOException`;
  #L2f599a.  call temp:= `getMessage`(v5) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2f59a0.  v5:= temp @kind object;
  #L2f59a2.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f59a8.  goto L2f59ac;
  #L2f59aa.  throw v6;
  #L2f59ac.  goto L2f59aa;
  catch `java.security.cert.CertificateEncodingException` @[L2f5930..L2f598c] goto L2f5994;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5424.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2f5428.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2f542e.  v1:= temp @kind object;
  #L2f5430.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f5436.  v1:= temp @kind object;
  #L2f5438.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f543e.  v0:= temp;
  #L2f5440.  if v0 == 0 then goto L2f5470;
  #L2f5444.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L2f5448.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2f544e.  v1:= temp @kind object;
  #L2f5450.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f5456.  v0:= temp;
  #L2f5458.  if v0 == 0 then goto L2f5470;
  #L2f545c.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5460.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L2f5466.  v3:= temp;
  #L2f5468.  if v3 == 0 then goto L2f5470;
  #L2f546c.  v3:= 1I;
  #L2f546e.  goto L2f5472;
  #L2f5470.  v3:= 0I;
  #L2f5472.  return v3;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f5530.  v0:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5534.  v1:= "Content-Type" @kind object;
  #L2f5538.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2f553e.  v0:= temp @kind object;
  #L2f5540.  v1:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5544.  v2:= "Content-Length" @kind object;
  #L2f5548.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2f554e.  v1:= temp @kind object;
  #L2f5550.  v2:= new `okhttp3.Request$Builder`;
  #L2f5554.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L2f555a.  v3:= v5.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2f555e.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2f5564.  v2:= temp @kind object;
  #L2f5566.  v3:= v5.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L2f556a.  v4:= 0I;
  #L2f556c.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2f5572.  v2:= temp @kind object;
  #L2f5574.  v3:= v5.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5578.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2f557e.  v2:= temp @kind object;
  #L2f5580.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L2f5586.  v2:= temp @kind object;
  #L2f5588.  v3:= new `okhttp3.Response$Builder`;
  #L2f558c.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L2f5592.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f5598.  v2:= temp @kind object;
  #L2f559a.  v3:= v5.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L2f559e.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55a4.  v2:= temp @kind object;
  #L2f55a6.  v3:= v5.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L2f55aa.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55b0.  v2:= temp @kind object;
  #L2f55b2.  v3:= v5.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L2f55b6.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55bc.  v2:= temp @kind object;
  #L2f55be.  v3:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f55c2.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55c8.  v2:= temp @kind object;
  #L2f55ca.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L2f55ce.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2f55d4.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55da.  v6:= temp @kind object;
  #L2f55dc.  v0:= v5.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2f55e0.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55e6.  v6:= temp @kind object;
  #L2f55e8.  v0:= v5.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L2f55ec.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55f2.  v6:= temp @kind object;
  #L2f55f4.  v0:= v5.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L2f55f8.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2f55fe.  v6:= temp @kind object;
  #L2f5600.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2f5606.  v6:= temp @kind object;
  #L2f5608.  return v6 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f59d0.  v0:= 0I;
  #L2f59d2.  call temp:= `newSink`(v8, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/g0;` @kind virtual;
  #L2f59d8.  v8:= temp @kind object;
  #L2f59da.  call temp:= `c`(v8) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L2f59e0.  v8:= temp @kind object;
  #L2f59e2.  v1:= v7.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2f59e6.  call temp:= `b0`(v8, v1) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f59ec.  v1:= temp @kind object;
  #L2f59ee.  v2:= 10I;
  #L2f59f2.  call temp:= `P`(v1, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f59f8.  v1:= v7.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L2f59fc.  call temp:= `b0`(v8, v1) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5a02.  v1:= temp @kind object;
  #L2f5a04.  call temp:= `P`(v1, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5a0a.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5a0e.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2f5a14.  v1:= temp;
  #L2f5a16.  v3:= (`long`) v1 @kind i2l;
  #L2f5a18.  call temp:= `F0`(v8, v3) @signature `Lokio/n;.F0:(J)Lokio/n;` @kind interface;
  #L2f5a1e.  v1:= temp @kind object;
  #L2f5a20.  call temp:= `P`(v1, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5a26.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5a2a.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2f5a30.  v1:= temp;
  #L2f5a32.  v3:= 0I;
  #L2f5a34.  v4:= ": " @kind object;
  #L2f5a38.  if v3 >= v1 then goto L2f5a78;
  #L2f5a3c.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5a40.  call temp:= `name`(v5, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2f5a46.  v5:= temp @kind object;
  #L2f5a48.  call temp:= `b0`(v8, v5) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5a4e.  v5:= temp @kind object;
  #L2f5a50.  call temp:= `b0`(v5, v4) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5a56.  v4:= temp @kind object;
  #L2f5a58.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5a5c.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2f5a62.  v5:= temp @kind object;
  #L2f5a64.  call temp:= `b0`(v4, v5) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5a6a.  v4:= temp @kind object;
  #L2f5a6c.  call temp:= `P`(v4, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5a72.  v3:= v3 + 1;
  #L2f5a76.  goto L2f5a34;
  #L2f5a78.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L2f5a7c.  v3:= v7.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L2f5a80.  v5:= v7.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L2f5a84.  v6:= v7.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L2f5a88.  call `<init>`(v1, v3, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L2f5a8e.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f5a94.  v1:= temp @kind object;
  #L2f5a96.  call temp:= `b0`(v8, v1) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5a9c.  v1:= temp @kind object;
  #L2f5a9e.  call temp:= `P`(v1, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5aa4.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5aa8.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2f5aae.  v1:= temp;
  #L2f5ab0.  v1:= v1 + 2;
  #L2f5ab4.  v5:= (`long`) v1 @kind i2l;
  #L2f5ab6.  call temp:= `F0`(v8, v5) @signature `Lokio/n;.F0:(J)Lokio/n;` @kind interface;
  #L2f5abc.  v1:= temp @kind object;
  #L2f5abe.  call temp:= `P`(v1, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5ac4.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5ac8.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2f5ace.  v1:= temp;
  #L2f5ad0.  if v0 >= v1 then goto L2f5b10;
  #L2f5ad4.  v3:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5ad8.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2f5ade.  v3:= temp @kind object;
  #L2f5ae0.  call temp:= `b0`(v8, v3) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5ae6.  v3:= temp @kind object;
  #L2f5ae8.  call temp:= `b0`(v3, v4) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5aee.  v3:= temp @kind object;
  #L2f5af0.  v5:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2f5af4.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2f5afa.  v5:= temp @kind object;
  #L2f5afc.  call temp:= `b0`(v3, v5) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b02.  v3:= temp @kind object;
  #L2f5b04.  call temp:= `P`(v3, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5b0a.  v0:= v0 + 1;
  #L2f5b0e.  goto L2f5ad0;
  #L2f5b10.  v0:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L2f5b14.  call temp:= `b0`(v8, v0) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b1a.  v0:= temp @kind object;
  #L2f5b1c.  call temp:= `b0`(v0, v4) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b22.  v0:= temp @kind object;
  #L2f5b24.  v5:= v7.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L2f5b28.  call temp:= `F0`(v0, v5) @signature `Lokio/n;.F0:(J)Lokio/n;` @kind interface;
  #L2f5b2e.  v0:= temp @kind object;
  #L2f5b30.  call temp:= `P`(v0, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5b36.  v0:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L2f5b3a.  call temp:= `b0`(v8, v0) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b40.  v0:= temp @kind object;
  #L2f5b42.  call temp:= `b0`(v0, v4) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b48.  v0:= temp @kind object;
  #L2f5b4a.  v3:= v7.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L2f5b4e.  call temp:= `F0`(v0, v3) @signature `Lokio/n;.F0:(J)Lokio/n;` @kind interface;
  #L2f5b54.  v0:= temp @kind object;
  #L2f5b56.  call temp:= `P`(v0, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5b5c.  call temp:= `isHttps`(v7) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L2f5b62.  v0:= temp;
  #L2f5b64.  if v0 == 0 then goto L2f5bd6;
  #L2f5b68.  call temp:= `P`(v8, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5b6e.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2f5b72.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L2f5b78.  v0:= temp @kind object;
  #L2f5b7a.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L2f5b80.  v0:= temp @kind object;
  #L2f5b82.  call temp:= `b0`(v8, v0) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5b88.  v0:= temp @kind object;
  #L2f5b8a.  call temp:= `P`(v0, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5b90.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2f5b94.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L2f5b9a.  v0:= temp @kind object;
  #L2f5b9c.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/n;Ljava/util/List;)V` @kind direct;
  #L2f5ba2.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2f5ba6.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L2f5bac.  v0:= temp @kind object;
  #L2f5bae.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/n;Ljava/util/List;)V` @kind direct;
  #L2f5bb4.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2f5bb8.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L2f5bbe.  v0:= temp @kind object;
  #L2f5bc0.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L2f5bc6.  v0:= temp @kind object;
  #L2f5bc8.  call temp:= `b0`(v8, v0) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L2f5bce.  v0:= temp @kind object;
  #L2f5bd0.  call temp:= `P`(v0, v2) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L2f5bd6.  call `close`(v8) @signature `Lokio/g0;.close:()V` @kind interface;
  #L2f5bdc.  return @kind void;
}
