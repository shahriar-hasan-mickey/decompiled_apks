record `okhttp3.RequestBody$3` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `okhttp3.MediaType` `okhttp3.RequestBody$3.val$contentType` @AccessFlag FINAL_SYNTHETIC;
  `java.io.File` `okhttp3.RequestBody$3.val$file` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RequestBody$3` v0 @kind this, `okhttp3.MediaType` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lokhttp3/RequestBody$3;.<init>:(Lokhttp3/MediaType;Ljava/io/File;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ff564.  v0.`okhttp3.RequestBody$3.val$contentType` @type ^`okhttp3.MediaType` := v1 @kind object;
  #L2ff568.  v0.`okhttp3.RequestBody$3.val$file` @type ^`java.io.File` := v2 @kind object;
  #L2ff56c.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2ff572.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.RequestBody$3` v2 @kind this) @signature `Lokhttp3/RequestBody$3;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ff52c.  v0:= v2.`okhttp3.RequestBody$3.val$file` @type ^`java.io.File` @kind object;
  #L2ff530.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L2ff536.  v0:= temp @kind wide;
  #L2ff538.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.RequestBody$3` v1 @kind this) @signature `Lokhttp3/RequestBody$3;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ff54c.  v0:= v1.`okhttp3.RequestBody$3.val$contentType` @type ^`okhttp3.MediaType` @kind object;
  #L2ff550.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.RequestBody$3` v2 @kind this, `okio.n` v3 @kind object) @signature `Lokhttp3/RequestBody$3;.writeTo:(Lokio/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ff584.  v0:= v2.`okhttp3.RequestBody$3.val$file` @type ^`java.io.File` @kind object;
  #L2ff588.  call temp:= `k`(v0) @signature `Lokio/v;.k:(Ljava/io/File;)Lokio/i0;` @kind static;
  #L2ff58e.  v0:= temp @kind object;
  #L2ff590.  call temp:= `i0`(v3, v0) @signature `Lokio/n;.i0:(Lokio/i0;)J` @kind interface;
  #L2ff596.  if v0 == 0 then goto L2ff5a0;
  #L2ff59a.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L2ff5a0.  return @kind void;
  #L2ff5a2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ff5a4.  throw v3;
  #L2ff5a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ff5a8.  if v0 == 0 then goto L2ff5bc;
  #L2ff5ac.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L2ff5b2.  goto L2ff5bc;
  #L2ff5b4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ff5b6.  call `addSuppressed`(v3, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2ff5bc.  throw v1;
  catch `java.lang.Throwable` @[L2ff590..L2ff596] goto L2ff5a2;
  catch `java.lang.Throwable` @[L2ff5a4..L2ff5a6] goto L2ff5a6;
  catch `java.lang.Throwable` @[L2ff5ac..L2ff5b2] goto L2ff5b4;
}
