record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v1 @kind this, `okhttp3.Address` v2 @kind object, `java.net.Proxy` v3 @kind object, `java.net.InetSocketAddress` v4 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3007e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3007ee.  v0:= "address == null" @kind object;
  #L3007f2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3007f8.  v0:= "proxy == null" @kind object;
  #L3007fc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L300802.  v0:= "inetSocketAddress == null" @kind object;
  #L300806.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L30080c.  v1.`okhttp3.Route.address` @type ^`okhttp3.Address` := v2 @kind object;
  #L300810.  v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v3 @kind object;
  #L300814.  v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v4 @kind object;
  #L300818.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3007d0.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L3007d4.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30067c.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L300680.  if v0 == 0 then goto L3006c8;
  #L300684.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L300688.  v0:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L30068c.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L300690.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L300696.  v0:= temp;
  #L300698.  if v0 == 0 then goto L3006c8;
  #L30069c.  v0:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L3006a0.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L3006a4.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3006aa.  v0:= temp;
  #L3006ac.  if v0 == 0 then goto L3006c8;
  #L3006b0.  v3:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L3006b4.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L3006b8.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3006be.  v3:= temp;
  #L3006c0.  if v3 == 0 then goto L3006c8;
  #L3006c4.  v3:= 1I;
  #L3006c6.  goto L3006ca;
  #L3006c8.  v3:= 0I;
  #L3006ca.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L300714.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L300718.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L30071e.  v0:= temp;
  #L300720.  v1:= 527I;
  #L300724.  v1:= v1 + v0 @kind int;
  #L300726.  v1:= v1 * 31;
  #L30072a.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L30072e.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L300734.  v0:= temp;
  #L300736.  v1:= v1 + v0 @kind int;
  #L300738.  v1:= v1 * 31;
  #L30073c.  v0:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L300740.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L300746.  v0:= temp;
  #L300748.  v1:= v1 + v0 @kind int;
  #L30074a.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3007b8.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L3007bc.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3006dc.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L3006e0.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3006e4.  if v0 == 0 then goto L300700;
  #L3006e8.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L3006ec.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3006f2.  v0:= temp @kind object;
  #L3006f4.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3006f8.  if v0 != v1 then goto L300700;
  #L3006fc.  v0:= 1I;
  #L3006fe.  goto L300702;
  #L300700.  v0:= 0I;
  #L300702.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3007a0.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L3007a4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30075c.  v0:= new `java.lang.StringBuilder`;
  #L300760.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L300766.  v1:= "Route{" @kind object;
  #L30076a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300770.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L300774.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30077a.  v1:= "}" @kind object;
  #L30077e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300784.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30078a.  v0:= temp @kind object;
  #L30078c.  return v0 @kind object;
}
