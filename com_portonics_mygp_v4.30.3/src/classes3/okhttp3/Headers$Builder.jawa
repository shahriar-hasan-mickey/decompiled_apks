record `okhttp3.Headers$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.Headers$Builder.namesAndValues` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers$Builder` v2 @kind this) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fa834.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fa83a.  v0:= new `java.util.ArrayList`;
  #L2fa83e.  v1:= 20I;
  #L2fa842.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2fa848.  v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L2fa84c.  return @kind void;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2fa484.  v0:= ":" @kind object;
  #L2fa488.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L2fa48e.  v0:= temp;
  #L2fa490.  v1:= -1I;
  #L2fa492.  if v0 == v1 then goto L2fa4be;
  #L2fa496.  v1:= 0I;
  #L2fa498.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2fa49e.  v1:= temp @kind object;
  #L2fa4a0.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2fa4a6.  v1:= temp @kind object;
  #L2fa4a8.  v0:= v0 + 1;
  #L2fa4ac.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2fa4b2.  v4:= temp @kind object;
  #L2fa4b4.  call temp:= `add`(v3, v1, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa4ba.  v4:= temp @kind object;
  #L2fa4bc.  return v4 @kind object;
  #L2fa4be.  v0:= new `java.lang.IllegalArgumentException`;
  #L2fa4c2.  v1:= new `java.lang.StringBuilder`;
  #L2fa4c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa4cc.  v2:= "Unexpected header: " @kind object;
  #L2fa4d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa4d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa4dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa4e2.  v4:= temp @kind object;
  #L2fa4e4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa4ea.  throw v0;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L2fa4fc.  call `checkName`(v1) @signature `Lokhttp3/Headers;.checkName:(Ljava/lang/String;)V` @kind static;
  #L2fa502.  call `checkValue`(v2, v1) @signature `Lokhttp3/Headers;.checkValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2fa508.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa50e.  v1:= temp @kind object;
  #L2fa510.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.time.Instant` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2fa524.  if v5 == 0 then goto L2fa544;
  #L2fa528.  v0:= new `java.util.Date`;
  #L2fa52c.  call temp:= `toEpochMilli`(v5) @signature `Ljava/time/Instant;.toEpochMilli:()J` @kind virtual;
  #L2fa532.  v1:= temp @kind wide;
  #L2fa534.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L2fa53a.  call temp:= `add`(v3, v4, v0) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa540.  v4:= temp @kind object;
  #L2fa542.  return v4 @kind object;
  #L2fa544.  v5:= new `java.lang.NullPointerException`;
  #L2fa548.  v0:= new `java.lang.StringBuilder`;
  #L2fa54c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa552.  v1:= "value for name " @kind object;
  #L2fa556.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa55c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa562.  v4:= " == null" @kind object;
  #L2fa566.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa56c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa572.  v4:= temp @kind object;
  #L2fa574.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa57a.  throw v5;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.Date` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fa58c.  if v4 == 0 then goto L2fa5a0;
  #L2fa590.  call temp:= `format`(v4) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L2fa596.  v4:= temp @kind object;
  #L2fa598.  call temp:= `add`(v2, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa59e.  return v2 @kind object;
  #L2fa5a0.  v4:= new `java.lang.NullPointerException`;
  #L2fa5a4.  v0:= new `java.lang.StringBuilder`;
  #L2fa5a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa5ae.  v1:= "value for name " @kind object;
  #L2fa5b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa5b8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa5be.  v3:= " == null" @kind object;
  #L2fa5c2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa5c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa5ce.  v3:= temp @kind object;
  #L2fa5d0.  call `<init>`(v4, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa5d6.  throw v4;
}
procedure `okhttp3.Headers$Builder` `addAll`(`okhttp3.Headers$Builder` v4 @kind this, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.addAll:(Lokhttp3/Headers;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fa5e8.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2fa5ee.  v0:= temp;
  #L2fa5f0.  v1:= 0I;
  #L2fa5f2.  if v1 >= v0 then goto L2fa612;
  #L2fa5f6.  call temp:= `name`(v5, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2fa5fc.  v2:= temp @kind object;
  #L2fa5fe.  call temp:= `value`(v5, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2fa604.  v3:= temp @kind object;
  #L2fa606.  call temp:= `addLenient`(v4, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa60c.  v1:= v1 + 1;
  #L2fa610.  goto L2fa5f2;
  #L2fa612.  return v4 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fa624.  v0:= ":" @kind object;
  #L2fa628.  v1:= 1I;
  #L2fa62a.  call temp:= `indexOf`(v5, v0, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L2fa630.  v2:= temp;
  #L2fa632.  v3:= -1I;
  #L2fa634.  if v2 == v3 then goto L2fa656;
  #L2fa638.  v0:= 0I;
  #L2fa63a.  call temp:= `substring`(v5, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2fa640.  v0:= temp @kind object;
  #L2fa642.  v2:= v2 + v1 @kind int;
  #L2fa644.  call temp:= `substring`(v5, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2fa64a.  v5:= temp @kind object;
  #L2fa64c.  call temp:= `addLenient`(v4, v0, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa652.  v5:= temp @kind object;
  #L2fa654.  return v5 @kind object;
  #L2fa656.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2fa65c.  v0:= temp;
  #L2fa65e.  v2:= "" @kind object;
  #L2fa662.  if v0 == 0 then goto L2fa678;
  #L2fa666.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2fa66c.  v5:= temp @kind object;
  #L2fa66e.  call temp:= `addLenient`(v4, v2, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa674.  v5:= temp @kind object;
  #L2fa676.  return v5 @kind object;
  #L2fa678.  call temp:= `addLenient`(v4, v2, v5) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa67e.  v5:= temp @kind object;
  #L2fa680.  return v5 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;

  #L2fa694.  v0:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa698.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2fa69e.  v2:= v1.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa6a2.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2fa6a8.  v3:= temp @kind object;
  #L2fa6aa.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2fa6b0.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `addUnsafeNonAscii`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.addUnsafeNonAscii:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L2fa6c4.  call `checkName`(v1) @signature `Lokhttp3/Headers;.checkName:(Ljava/lang/String;)V` @kind static;
  #L2fa6ca.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa6d0.  v1:= temp @kind object;
  #L2fa6d2.  return v1 @kind object;
}
procedure `okhttp3.Headers` `build`(`okhttp3.Headers$Builder` v1 @kind this) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fa468.  v0:= new `okhttp3.Headers`;
  #L2fa46c.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @kind direct;
  #L2fa472.  return v0 @kind object;
}
procedure `java.lang.String` `get`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fa408.  v0:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa40c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2fa412.  v0:= temp;
  #L2fa414.  v0:= v0 + -2;
  #L2fa418.  if v0 < 0 then goto L2fa454;
  #L2fa41c.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa420.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2fa426.  v1:= temp @kind object;
  #L2fa428.  v1:= (`java.lang.String`) v1 @kind object;
  #L2fa42c.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2fa432.  v1:= temp;
  #L2fa434.  if v1 == 0 then goto L2fa44e;
  #L2fa438.  v3:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa43c.  v0:= v0 + 1;
  #L2fa440.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2fa446.  v3:= temp @kind object;
  #L2fa448.  v3:= (`java.lang.String`) v3 @kind object;
  #L2fa44c.  return v3 @kind object;
  #L2fa44e.  v0:= v0 + -2;
  #L2fa452.  goto L2fa418;
  #L2fa454.  v3:= 0I;
  #L2fa456.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `removeAll`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fa6e4.  v0:= 0I;
  #L2fa6e6.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa6ea.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2fa6f0.  v1:= temp;
  #L2fa6f2.  if v0 >= v1 then goto L2fa730;
  #L2fa6f6.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa6fa.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2fa700.  v1:= temp @kind object;
  #L2fa702.  v1:= (`java.lang.String`) v1 @kind object;
  #L2fa706.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2fa70c.  v1:= temp;
  #L2fa70e.  if v1 == 0 then goto L2fa72a;
  #L2fa712.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa716.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2fa71c.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L2fa720.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2fa726.  v0:= v0 + -2;
  #L2fa72a.  v0:= v0 + 2;
  #L2fa72e.  goto L2fa6e6;
  #L2fa730.  return v2 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L2fa744.  call `checkName`(v1) @signature `Lokhttp3/Headers;.checkName:(Ljava/lang/String;)V` @kind static;
  #L2fa74a.  call `checkValue`(v2, v1) @signature `Lokhttp3/Headers;.checkValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L2fa750.  call temp:= `removeAll`(v0, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa756.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa75c.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.time.Instant` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2fa770.  if v5 == 0 then goto L2fa790;
  #L2fa774.  v0:= new `java.util.Date`;
  #L2fa778.  call temp:= `toEpochMilli`(v5) @signature `Ljava/time/Instant;.toEpochMilli:()J` @kind virtual;
  #L2fa77e.  v1:= temp @kind wide;
  #L2fa780.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L2fa786.  call temp:= `set`(v3, v4, v0) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa78c.  v4:= temp @kind object;
  #L2fa78e.  return v4 @kind object;
  #L2fa790.  v5:= new `java.lang.NullPointerException`;
  #L2fa794.  v0:= new `java.lang.StringBuilder`;
  #L2fa798.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa79e.  v1:= "value for name " @kind object;
  #L2fa7a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa7a8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa7ae.  v4:= " == null" @kind object;
  #L2fa7b2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa7b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa7be.  v4:= temp @kind object;
  #L2fa7c0.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa7c6.  throw v5;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.Date` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fa7d8.  if v4 == 0 then goto L2fa7ec;
  #L2fa7dc.  call temp:= `format`(v4) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L2fa7e2.  v4:= temp @kind object;
  #L2fa7e4.  call temp:= `set`(v2, v3, v4) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fa7ea.  return v2 @kind object;
  #L2fa7ec.  v4:= new `java.lang.NullPointerException`;
  #L2fa7f0.  v0:= new `java.lang.StringBuilder`;
  #L2fa7f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa7fa.  v1:= "value for name " @kind object;
  #L2fa7fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa804.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa80a.  v3:= " == null" @kind object;
  #L2fa80e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa814.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa81a.  v3:= temp @kind object;
  #L2fa81c.  call `<init>`(v4, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa822.  throw v4;
}
