record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2fd84c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd852.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L2fd856.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L2fd85a.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2fd70c.  v0:= "body == null" @kind object;
  #L2fd710.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2fd716.  if v1 == 0 then goto L2fd73c;
  #L2fd71a.  v0:= "Content-Type" @kind object;
  #L2fd71e.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2fd724.  v0:= temp @kind object;
  #L2fd726.  if v0 != 0 then goto L2fd72c;
  #L2fd72a.  goto L2fd73c;
  #L2fd72c.  v1:= new `java.lang.IllegalArgumentException`;
  #L2fd730.  v2:= "Unexpected header: Content-Type" @kind object;
  #L2fd734.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd73a.  throw v1;
  #L2fd73c.  if v1 == 0 then goto L2fd762;
  #L2fd740.  v0:= "Content-Length" @kind object;
  #L2fd744.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2fd74a.  v0:= temp @kind object;
  #L2fd74c.  if v0 != 0 then goto L2fd752;
  #L2fd750.  goto L2fd762;
  #L2fd752.  v1:= new `java.lang.IllegalArgumentException`;
  #L2fd756.  v2:= "Unexpected header: Content-Length" @kind object;
  #L2fd75a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd760.  throw v1;
  #L2fd762.  v0:= new `okhttp3.MultipartBody$Part`;
  #L2fd766.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L2fd76c.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2fd780.  v0:= 0I;
  #L2fd782.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L2fd788.  v1:= temp @kind object;
  #L2fd78a.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2fd79c.  v0:= 0I;
  #L2fd79e.  call temp:= `create`(v0, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L2fd7a4.  v2:= temp @kind object;
  #L2fd7a6.  call temp:= `createFormData`(v1, v0, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L2fd7ac.  v1:= temp @kind object;
  #L2fd7ae.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2fd7c0.  v0:= "name == null" @kind object;
  #L2fd7c4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2fd7ca.  v0:= new `java.lang.StringBuilder`;
  #L2fd7ce.  v1:= "form-data; name=" @kind object;
  #L2fd7d2.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd7d8.  call `appendQuotedString`(v0, v2) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind static;
  #L2fd7de.  if v3 == 0 then goto L2fd7f2;
  #L2fd7e2.  v2:= "; filename=" @kind object;
  #L2fd7e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd7ec.  call `appendQuotedString`(v0, v3) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind static;
  #L2fd7f2.  v2:= new `okhttp3.Headers$Builder`;
  #L2fd7f6.  call `<init>`(v2) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2fd7fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd802.  v3:= temp @kind object;
  #L2fd804.  v0:= "Content-Disposition" @kind object;
  #L2fd808.  call temp:= `addUnsafeNonAscii`(v2, v0, v3) @signature `Lokhttp3/Headers$Builder;.addUnsafeNonAscii:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2fd80e.  v2:= temp @kind object;
  #L2fd810.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2fd816.  v2:= temp @kind object;
  #L2fd818.  call temp:= `create`(v2, v4) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L2fd81e.  v2:= temp @kind object;
  #L2fd820.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd834.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L2fd838.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd6f4.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L2fd6f8.  return v0 @kind object;
}
