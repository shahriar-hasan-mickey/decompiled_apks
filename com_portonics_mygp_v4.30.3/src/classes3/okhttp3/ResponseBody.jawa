record `okhttp3.ResponseBody` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `java.io.Reader` `okhttp3.ResponseBody.reader` @AccessFlag PRIVATE;
}
procedure `void` `$closeResource`(`java.lang.Throwable` v0 @kind object, `java.lang.AutoCloseable` v1 @kind object) @signature `Lokhttp3/ResponseBody;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L300198.  if v0 == 0 then goto L3001ae;
  #L30019c.  call `close`(v1) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L3001a2.  goto L3001b4;
  #L3001a4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3001a6.  call `addSuppressed`(v0, v1) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3001ac.  goto L3001b4;
  #L3001ae.  call `close`(v1) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L3001b4.  return @kind void;
  catch `java.lang.Throwable` @[L30019c..L3001a2] goto L3001a4;
}
procedure `void` `<init>`(`okhttp3.ResponseBody` v0 @kind this) @signature `Lokhttp3/ResponseBody;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3001d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3001da.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.ResponseBody` v2 @kind this) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L300060.  call temp:= `contentType`(v2) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L300066.  v0:= temp @kind object;
  #L300068.  if v0 == 0 then goto L30007a;
  #L30006c.  v1:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L300070.  call temp:= `charset`(v0, v1) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L300076.  v0:= temp @kind object;
  #L300078.  goto L30007e;
  #L30007a.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L30007e.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v1 @kind object, `long` v2 , `okio.o` v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/o;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L300138.  v0:= "source == null" @kind object;
  #L30013c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L300142.  v0:= new `okhttp3.ResponseBody$1`;
  #L300146.  call `<init>`(v0, v1, v2, v4) @signature `Lokhttp3/ResponseBody$1;.<init>:(Lokhttp3/MediaType;JLokio/o;)V` @kind direct;
  #L30014c.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3000c0.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L3000c4.  if v2 == 0 then goto L300102;
  #L3000c8.  call temp:= `charset`(v2) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L3000ce.  v0:= temp @kind object;
  #L3000d0.  if v0 != 0 then goto L300102;
  #L3000d4.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L3000d8.  v1:= new `java.lang.StringBuilder`;
  #L3000dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3000e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3000e8.  v2:= "; charset=utf-8" @kind object;
  #L3000ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3000f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3000f8.  v2:= temp @kind object;
  #L3000fa.  call temp:= `parse`(v2) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L300100.  v2:= temp @kind object;
  #L300102.  v1:= new `okio.k`;
  #L300106.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L30010c.  call temp:= `u1`(v1, v3, v0) @signature `Lokio/k;.u1:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/k;` @kind virtual;
  #L300112.  v3:= temp @kind object;
  #L300114.  call temp:= `f1`(v3) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30011a.  v0:= temp @kind wide;
  #L30011c.  call temp:= `create`(v2, v0, v3) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/o;)Lokhttp3/ResponseBody;` @kind static;
  #L300122.  v2:= temp @kind object;
  #L300124.  return v2 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L300160.  v0:= new `okio.k`;
  #L300164.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L30016a.  call temp:= `j1`(v0, v4) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L300170.  v0:= temp @kind object;
  #L300172.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L300178.  v4:= temp;
  #L30017a.  v1:= (`long`) v4 @kind i2l;
  #L30017c.  call temp:= `create`(v3, v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/o;)Lokhttp3/ResponseBody;` @kind static;
  #L300182.  v3:= temp @kind object;
  #L300184.  return v3 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object, `byte`[] v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L300090.  v0:= new `okio.k`;
  #L300094.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L30009a.  call temp:= `k1`(v0, v4) @signature `Lokio/k;.k1:([B)Lokio/k;` @kind virtual;
  #L3000a0.  v0:= temp @kind object;
  #L3000a2.  v4:= length @variable v4;
  #L3000a4.  v1:= (`long`) v4 @kind i2l;
  #L3000a6.  call temp:= `create`(v3, v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/o;)Lokhttp3/ResponseBody;` @kind static;
  #L3000ac.  v3:= temp @kind object;
  #L3000ae.  return v3 @kind object;
}
procedure `java.io.InputStream` `byteStream`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fff9c.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L2fffa2.  v0:= temp @kind object;
  #L2fffa4.  call temp:= `J0`(v0) @signature `Lokio/o;.J0:()Ljava/io/InputStream;` @kind interface;
  #L2fffaa.  v0:= temp @kind object;
  #L2fffac.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`okhttp3.ResponseBody` v6 @kind this) @signature `Lokhttp3/ResponseBody;.bytes:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ffea0.  call temp:= `contentLength`(v6) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L2ffea6.  v0:= temp @kind wide;
  #L2ffea8.  v2:= 2147483647L;
  #L2ffeae.  v4:= lcmp(v0, v2);
  #L2ffeb2.  if v4 > 0 then goto L2fff46;
  #L2ffeb6.  call temp:= `source`(v6) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L2ffebc.  v2:= temp @kind object;
  #L2ffebe.  v3:= 0I;
  #L2ffec0.  call temp:= `L`(v2) @signature `Lokio/o;.L:()[B` @kind interface;
  #L2ffec6.  v4:= temp @kind object;
  #L2ffec8.  call `$closeResource`(v3, v2) @signature `Lokhttp3/ResponseBody;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L2ffece.  v2:= -1L;
  #L2ffed2.  v5:= lcmp(v0, v2);
  #L2ffed6.  if v5 == 0 then goto L2fff32;
  #L2ffeda.  v2:= length @variable v4;
  #L2ffedc.  v2:= (`long`) v2 @kind i2l;
  #L2ffede.  v5:= lcmp(v0, v2);
  #L2ffee2.  if v5 != 0 then goto L2ffee8;
  #L2ffee6.  goto L2fff32;
  #L2ffee8.  v2:= new `java.io.IOException`;
  #L2ffeec.  v3:= new `java.lang.StringBuilder`;
  #L2ffef0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ffef6.  v5:= "Content-Length (" @kind object;
  #L2ffefa.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff00.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff06.  v0:= ") and stream length (" @kind object;
  #L2fff0a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff10.  v0:= length @variable v4;
  #L2fff12.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff18.  v0:= ") disagree" @kind object;
  #L2fff1c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff22.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fff28.  v0:= temp @kind object;
  #L2fff2a.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fff30.  throw v2;
  #L2fff32.  return v4 @kind object;
  #L2fff34.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fff36.  throw v0;
  #L2fff38.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fff3a.  if v2 == 0 then goto L2fff44;
  #L2fff3e.  call `$closeResource`(v0, v2) @signature `Lokhttp3/ResponseBody;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L2fff44.  throw v1;
  #L2fff46.  v2:= new `java.io.IOException`;
  #L2fff4a.  v3:= new `java.lang.StringBuilder`;
  #L2fff4e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fff54.  v4:= "Cannot buffer entire body for content length: " @kind object;
  #L2fff58.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff5e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fff64.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fff6a.  v0:= temp @kind object;
  #L2fff6c.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fff72.  throw v2;
  catch `java.lang.Throwable` @[L2ffec0..L2ffec8] goto L2fff34;
  catch `java.lang.Throwable` @[L2fff36..L2fff38] goto L2fff38;
}
procedure `java.io.Reader` `charStream`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2fffc0.  v0:= v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` @kind object;
  #L2fffc4.  if v0 == 0 then goto L2fffca;
  #L2fffc8.  goto L2fffe8;
  #L2fffca.  v0:= new `okhttp3.ResponseBody$BomAwareReader`;
  #L2fffce.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L2fffd4.  v1:= temp @kind object;
  #L2fffd6.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L2fffdc.  v2:= temp @kind object;
  #L2fffde.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/ResponseBody$BomAwareReader;.<init>:(Lokio/o;Ljava/nio/charset/Charset;)V` @kind direct;
  #L2fffe4.  v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` := v0 @kind object;
  #L2fffe8.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3001ec.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L3001f2.  v0:= temp @kind object;
  #L3001f4.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L3001fa.  return @kind void;
}
procedure `long` `contentLength`() @signature `Lokhttp3/ResponseBody;.contentLength:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.MediaType` `contentType`() @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.o` `source`() @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `string`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ffffc.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L300002.  v0:= temp @kind object;
  #L300004.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L30000a.  v1:= temp @kind object;
  #L30000c.  call temp:= `bomAwareCharset`(v0, v1) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/o;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L300012.  v1:= temp @kind object;
  #L300014.  call temp:= `e0`(v0, v1) @signature `Lokio/o;.e0:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #L30001a.  v1:= temp @kind object;
  #L30001c.  v2:= 0I;
  #L30001e.  call `$closeResource`(v2, v0) @signature `Lokhttp3/ResponseBody;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L300024.  return v1 @kind object;
  #L300026.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L300028.  throw v1;
  #L30002a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30002c.  if v0 == 0 then goto L300036;
  #L300030.  call `$closeResource`(v1, v0) @signature `Lokhttp3/ResponseBody;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L300036.  throw v2;
  catch `java.lang.Throwable` @[L300004..L30001c] goto L300026;
  catch `java.lang.Throwable` @[L300028..L30002a] goto L30002a;
}
