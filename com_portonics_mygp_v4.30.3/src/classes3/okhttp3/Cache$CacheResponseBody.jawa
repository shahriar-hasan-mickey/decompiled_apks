record `okhttp3.Cache$CacheResponseBody` @kind class @AccessFlag  extends `okhttp3.ResponseBody` @kind class {
  `okio.o` `okhttp3.Cache$CacheResponseBody.bodySource` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentLength` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.Cache$CacheResponseBody.snapshot` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheResponseBody` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f53bc.  call `<init>`(v0) @signature `Lokhttp3/ResponseBody;.<init>:()V` @kind direct;
  #L2f53c2.  v0.`okhttp3.Cache$CacheResponseBody.snapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L2f53c6.  v0.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` := v2 @kind object;
  #L2f53ca.  v0.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` := v3 @kind object;
  #L2f53ce.  v2:= 1I;
  #L2f53d0.  call temp:= `getSource`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/i0;` @kind virtual;
  #L2f53d6.  v2:= temp @kind object;
  #L2f53d8.  v3:= new `okhttp3.Cache$CacheResponseBody$1`;
  #L2f53dc.  call `<init>`(v3, v0, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody$1;.<init>:(Lokhttp3/Cache$CacheResponseBody;Lokio/i0;Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V` @kind direct;
  #L2f53e2.  call temp:= `d`(v3) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L2f53e8.  v1:= temp @kind object;
  #L2f53ea.  v0.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.o` := v1 @kind object;
  #L2f53ee.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.Cache$CacheResponseBody` v3 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f5344.  v0:= -1L;
  #L2f5348.  v2:= v3.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L2f534c.  if v2 == 0 then goto L2f5358;
  #L2f5350.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2f5356.  v0:= temp @kind wide;
  #L2f5358.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L2f5348..L2f5358] goto L2f5358;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f537c.  v0:= v1.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` @kind object;
  #L2f5380.  if v0 == 0 then goto L2f538e;
  #L2f5384.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2f538a.  v0:= temp @kind object;
  #L2f538c.  goto L2f5390;
  #L2f538e.  v0:= 0I;
  #L2f5390.  return v0 @kind object;
}
procedure `okio.o` `source`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.source:()Lokio/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f53a4.  v0:= v1.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.o` @kind object;
  #L2f53a8.  return v0 @kind object;
}
