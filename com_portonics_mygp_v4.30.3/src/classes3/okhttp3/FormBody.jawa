record `okhttp3.FormBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.util.List` `okhttp3.FormBody.encodedNames` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.FormBody.encodedValues` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.FormBody.CONTENT_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/FormBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f9f8c.  v0:= "application/x-www-form-urlencoded" @kind object;
  #L2f9f90.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2f9f96.  v0:= temp @kind object;
  #L2f9f98.  `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2f9f9c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f9fb0.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L2f9fb6.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2f9fbc.  v1:= temp @kind object;
  #L2f9fbe.  v0.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` := v1 @kind object;
  #L2f9fc2.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2f9fc8.  v1:= temp @kind object;
  #L2f9fca.  v0.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` := v1 @kind object;
  #L2f9fce.  return @kind void;
}
procedure `long` `writeOrCountBytes`(`okhttp3.FormBody` v3 @kind this, `okio.n` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/n;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2f9ed4.  if v5 == 0 then goto L2f9ee4;
  #L2f9ed8.  v4:= new `okio.k`;
  #L2f9edc.  call `<init>`(v4) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L2f9ee2.  goto L2f9eec;
  #L2f9ee4.  call temp:= `q`(v4) @signature `Lokio/n;.q:()Lokio/k;` @kind interface;
  #L2f9eea.  v4:= temp @kind object;
  #L2f9eec.  v0:= 0I;
  #L2f9eee.  v1:= v3.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L2f9ef2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f9ef8.  v1:= temp;
  #L2f9efa.  if v0 >= v1 then goto L2f9f48;
  #L2f9efe.  if v0 <= 0 then goto L2f9f0c;
  #L2f9f02.  v2:= 38I;
  #L2f9f06.  call temp:= `n1`(v4, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L2f9f0c.  v2:= v3.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L2f9f10.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f9f16.  v2:= temp @kind object;
  #L2f9f18.  v2:= (`java.lang.String`) v2 @kind object;
  #L2f9f1c.  call temp:= `v1`(v4, v2) @signature `Lokio/k;.v1:(Ljava/lang/String;)Lokio/k;` @kind virtual;
  #L2f9f22.  v2:= 61I;
  #L2f9f26.  call temp:= `n1`(v4, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L2f9f2c.  v2:= v3.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L2f9f30.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f9f36.  v2:= temp @kind object;
  #L2f9f38.  v2:= (`java.lang.String`) v2 @kind object;
  #L2f9f3c.  call temp:= `v1`(v4, v2) @signature `Lokio/k;.v1:(Ljava/lang/String;)Lokio/k;` @kind virtual;
  #L2f9f42.  v0:= v0 + 1;
  #L2f9f46.  goto L2f9efa;
  #L2f9f48.  if v5 == 0 then goto L2f9f5c;
  #L2f9f4c.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L2f9f52.  v0:= temp @kind wide;
  #L2f9f54.  call `a`(v4) @signature `Lokio/k;.a:()V` @kind virtual;
  #L2f9f5a.  goto L2f9f60;
  #L2f9f5c.  v0:= 0L;
  #L2f9f60.  return v0 @kind wide;
}
procedure `long` `contentLength`(`okhttp3.FormBody` v2 @kind this) @signature `Lokhttp3/FormBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f9eb4.  v0:= 0I;
  #L2f9eb6.  v1:= 1I;
  #L2f9eb8.  call temp:= `writeOrCountBytes`(v2, v0, v1) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/n;Z)J` @kind direct;
  #L2f9ebe.  v0:= temp @kind wide;
  #L2f9ec0.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9f74.  v0:= `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L2f9f78.  return v0 @kind object;
}
procedure `java.lang.String` `encodedName`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e24.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L2f9e28.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f9e2e.  v2:= temp @kind object;
  #L2f9e30.  v2:= (`java.lang.String`) v2 @kind object;
  #L2f9e34.  return v2 @kind object;
}
procedure `java.lang.String` `encodedValue`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e48.  v0:= v1.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L2f9e4c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f9e52.  v2:= temp @kind object;
  #L2f9e54.  v2:= (`java.lang.String`) v2 @kind object;
  #L2f9e58.  return v2 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e6c.  call temp:= `encodedName`(v1, v2) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @kind virtual;
  #L2f9e72.  v2:= temp @kind object;
  #L2f9e74.  v0:= 1I;
  #L2f9e76.  call temp:= `percentDecode`(v2, v0) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L2f9e7c.  v2:= temp @kind object;
  #L2f9e7e.  return v2 @kind object;
}
procedure `int` `size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e04.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L2f9e08.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f9e0e.  v0:= temp;
  #L2f9e10.  return v0;
}
procedure `java.lang.String` `value`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e90.  call temp:= `encodedValue`(v1, v2) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @kind virtual;
  #L2f9e96.  v2:= temp @kind object;
  #L2f9e98.  v0:= 1I;
  #L2f9e9a.  call temp:= `percentDecode`(v2, v0) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L2f9ea0.  v2:= temp @kind object;
  #L2f9ea2.  return v2 @kind object;
}
procedure `void` `writeTo`(`okhttp3.FormBody` v1 @kind this, `okio.n` v2 @kind object) @signature `Lokhttp3/FormBody;.writeTo:(Lokio/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9fe0.  v0:= 0I;
  #L2f9fe2.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/n;Z)J` @kind direct;
  #L2f9fe8.  return @kind void;
}
