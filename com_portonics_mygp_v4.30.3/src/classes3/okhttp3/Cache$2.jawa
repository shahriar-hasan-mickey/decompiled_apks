record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f5148.  v0.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v1 @kind object;
  #L2f514c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f5152.  v1:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2f5156.  call temp:= `snapshots`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L2f515c.  v1:= temp @kind object;
  #L2f515e.  v0.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v1 @kind object;
  #L2f5162.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v5 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f502c.  v0:= v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L2f5030.  v1:= 1I;
  #L2f5032.  if v0 == 0 then goto L2f5038;
  #L2f5036.  return v1;
  #L2f5038.  v0:= 0I;
  #L2f503a.  v5.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v0 @kind boolean;
  #L2f503e.  v2:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L2f5042.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f5048.  v2:= temp;
  #L2f504a.  if v2 == 0 then goto L2f50a2;
  #L2f504e.  v2:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L2f5052.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f5058.  v2:= temp @kind object;
  #L2f505a.  v2:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v2 @kind object;
  #L2f505e.  call temp:= `getSource`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/i0;` @kind virtual;
  #L2f5064.  v3:= temp @kind object;
  #L2f5066.  call temp:= `d`(v3) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L2f506c.  v3:= temp @kind object;
  #L2f506e.  call temp:= `n0`(v3) @signature `Lokio/o;.n0:()Ljava/lang/String;` @kind interface;
  #L2f5074.  v3:= temp @kind object;
  #L2f5076.  v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v3 @kind object;
  #L2f507a.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L2f5080.  return v1;
  #L2f5082.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f5084.  throw v3;
  #L2f5086.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f5088.  if v2 == 0 then goto L2f509c;
  #L2f508c.  call `close`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L2f5092.  goto L2f509c;
  #L2f5094.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f5096.  call `addSuppressed`(v3, v2) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2f509c.  throw v4;
  #L2f509e.  
  #L2f50a0.  goto L2f503e;
  #L2f50a2.  return v0;
  catch `java.io.IOException` @[L2f504e..L2f505e] goto L2f509e;
  catch `java.lang.Throwable` @[L2f505e..L2f507a] goto L2f5082;
  catch `java.io.IOException` @[L2f507a..L2f5080] goto L2f509e;
  catch `java.lang.Throwable` @[L2f5084..L2f5086] goto L2f5086;
  catch `java.lang.Throwable` @[L2f508c..L2f5092] goto L2f5094;
  catch `java.io.IOException` @[L2f5096..L2f509e] goto L2f509e;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2f50f0.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L2f50f6.  v0:= temp @kind object;
  #L2f50f8.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f510c.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L2f5112.  v0:= temp;
  #L2f5114.  if v0 == 0 then goto L2f512a;
  #L2f5118.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L2f511c.  v1:= 0I;
  #L2f511e.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L2f5122.  v1:= 1I;
  #L2f5124.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L2f5128.  return v0 @kind object;
  #L2f512a.  v0:= new `java.util.NoSuchElementException`;
  #L2f512e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2f5134.  throw v0;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f5174.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L2f5178.  if v0 == 0 then goto L2f5188;
  #L2f517c.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L2f5180.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2f5186.  return @kind void;
  #L2f5188.  v0:= new `java.lang.IllegalStateException`;
  #L2f518c.  v1:= "remove() before next()" @kind object;
  #L2f5190.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f5196.  throw v0;
}
