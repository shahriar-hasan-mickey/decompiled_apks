record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_METHOD_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_PATH_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_SCHEME_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30bad0.  v0:= ":" @kind object;
  #L30bad4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bada.  v0:= temp @kind object;
  #L30badc.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L30bae0.  v0:= ":status" @kind object;
  #L30bae4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30baea.  v0:= temp @kind object;
  #L30baec.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L30baf0.  v0:= ":method" @kind object;
  #L30baf4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bafa.  v0:= temp @kind object;
  #L30bafc.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L30bb00.  v0:= ":path" @kind object;
  #L30bb04.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb0a.  v0:= temp @kind object;
  #L30bb0c.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L30bb10.  v0:= ":scheme" @kind object;
  #L30bb14.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb1a.  v0:= temp @kind object;
  #L30bb1c.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L30bb20.  v0:= ":authority" @kind object;
  #L30bb24.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb2a.  v0:= temp @kind object;
  #L30bb2c.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L30bb30.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30bb44.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb4a.  v1:= temp @kind object;
  #L30bb4c.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb52.  v2:= temp @kind object;
  #L30bb54.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L30bb5a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30bb6c.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30bb72.  v2:= temp @kind object;
  #L30bb74.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L30bb7a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30bb8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30bb92.  v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v1 @kind object;
  #L30bb96.  v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v2 @kind object;
  #L30bb9a.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L30bba0.  v1:= temp;
  #L30bba2.  v1:= v1 + 32;
  #L30bba6.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L30bbac.  v2:= temp;
  #L30bbae.  v1:= v1 + v2 @kind int;
  #L30bbb0.  v0.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v1;
  #L30bbb4.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30ba04.  v0:= instanceof @variable v4 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L30ba08.  v1:= 0I;
  #L30ba0a.  if v0 == 0 then goto L30ba3c;
  #L30ba0e.  v4:= (`okhttp3.internal.http2.Header`) v4 @kind object;
  #L30ba12.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L30ba16.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L30ba1a.  call temp:= `equals`(v0, v2) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ba20.  v0:= temp;
  #L30ba22.  if v0 == 0 then goto L30ba3c;
  #L30ba26.  v0:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L30ba2a.  v4:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L30ba2e.  call temp:= `equals`(v0, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ba34.  v4:= temp;
  #L30ba36.  if v4 == 0 then goto L30ba3c;
  #L30ba3a.  v1:= 1I;
  #L30ba3c.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30ba50.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L30ba54.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L30ba5a.  v0:= temp;
  #L30ba5c.  v1:= 527I;
  #L30ba60.  v1:= v1 + v0 @kind int;
  #L30ba62.  v1:= v1 * 31;
  #L30ba66.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L30ba6a.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L30ba70.  v0:= temp;
  #L30ba72.  v1:= v1 + v0 @kind int;
  #L30ba74.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30ba88.  v0:= 2I;
  #L30ba8a.  v0:= new `java.lang.Object`[v0];
  #L30ba8e.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L30ba92.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30ba98.  v1:= temp @kind object;
  #L30ba9a.  v2:= 0I;
  #L30ba9c.  v0[v2]:= v1 @kind object;
  #L30baa0.  v1:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L30baa4.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30baaa.  v1:= temp @kind object;
  #L30baac.  v2:= 1I;
  #L30baae.  v0[v2]:= v1 @kind object;
  #L30bab2.  v1:= "%s: %s" @kind object;
  #L30bab6.  call temp:= `format`(v1, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30babc.  v0:= temp @kind object;
  #L30babe.  return v0 @kind object;
}
