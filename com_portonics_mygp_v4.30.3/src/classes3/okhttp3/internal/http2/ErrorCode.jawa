record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L30b89c.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b8a0.  v1:= "NO_ERROR" @kind object;
  #L30b8a4.  v2:= 0I;
  #L30b8a6.  call `<init>`(v0, v1, v2, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b8ac.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L30b8b0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b8b4.  v3:= "PROTOCOL_ERROR" @kind object;
  #L30b8b8.  v4:= 1I;
  #L30b8ba.  call `<init>`(v1, v3, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b8c0.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L30b8c4.  v3:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b8c8.  v5:= "INTERNAL_ERROR" @kind object;
  #L30b8cc.  v6:= 2I;
  #L30b8ce.  call `<init>`(v3, v5, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b8d4.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v3 @kind object;
  #L30b8d8.  v5:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b8dc.  v7:= "FLOW_CONTROL_ERROR" @kind object;
  #L30b8e0.  v8:= 3I;
  #L30b8e2.  call `<init>`(v5, v7, v8, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b8e8.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v5 @kind object;
  #L30b8ec.  v7:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b8f0.  v9:= "REFUSED_STREAM" @kind object;
  #L30b8f4.  v10:= 4I;
  #L30b8f6.  v11:= 7I;
  #L30b8f8.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b8fe.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v7 @kind object;
  #L30b902.  v9:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b906.  v12:= "CANCEL" @kind object;
  #L30b90a.  v13:= 5I;
  #L30b90c.  v14:= 8I;
  #L30b910.  call `<init>`(v9, v12, v13, v14) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b916.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v9 @kind object;
  #L30b91a.  v12:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b91e.  v15:= "COMPRESSION_ERROR" @kind object;
  #L30b922.  v13:= 6I;
  #L30b924.  v10:= 9I;
  #L30b928.  call `<init>`(v12, v15, v13, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b92e.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v12 @kind object;
  #L30b932.  v15:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b936.  v13:= "CONNECT_ERROR" @kind object;
  #L30b93a.  v8:= 10I;
  #L30b93e.  call `<init>`(v15, v13, v11, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b944.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v15 @kind object;
  #L30b948.  v13:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b94c.  v11:= "ENHANCE_YOUR_CALM" @kind object;
  #L30b950.  v6:= 11I;
  #L30b954.  call `<init>`(v13, v11, v14, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b95a.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v13 @kind object;
  #L30b95e.  v11:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b962.  v14:= "INADEQUATE_SECURITY" @kind object;
  #L30b966.  v4:= 12I;
  #L30b96a.  call `<init>`(v11, v14, v10, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b970.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v11 @kind object;
  #L30b974.  v4:= new `okhttp3.internal.http2.ErrorCode`;
  #L30b978.  v14:= "HTTP_1_1_REQUIRED" @kind object;
  #L30b97c.  v10:= 13I;
  #L30b980.  call `<init>`(v4, v14, v8, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L30b986.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v4 @kind object;
  #L30b98a.  v6:= new `okhttp3.internal.http2.ErrorCode`[v6];
  #L30b98e.  v6[v2]:= v0 @kind object;
  #L30b992.  v0:= 1I;
  #L30b994.  v6[v0]:= v1 @kind object;
  #L30b998.  v0:= 2I;
  #L30b99a.  v6[v0]:= v3 @kind object;
  #L30b99e.  v0:= 3I;
  #L30b9a0.  v6[v0]:= v5 @kind object;
  #L30b9a4.  v0:= 4I;
  #L30b9a6.  v6[v0]:= v7 @kind object;
  #L30b9aa.  v0:= 5I;
  #L30b9ac.  v6[v0]:= v9 @kind object;
  #L30b9b0.  v0:= 6I;
  #L30b9b2.  v6[v0]:= v12 @kind object;
  #L30b9b6.  v0:= 7I;
  #L30b9b8.  v6[v0]:= v15 @kind object;
  #L30b9bc.  v0:= 8I;
  #L30b9c0.  v6[v0]:= v13 @kind object;
  #L30b9c4.  v0:= 9I;
  #L30b9c8.  v6[v0]:= v11 @kind object;
  #L30b9cc.  v6[v8]:= v4 @kind object;
  #L30b9d0.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v6 @kind object;
  #L30b9d4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L30b9e8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L30b9ee.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L30b9f2.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 ) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30b81c.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L30b822.  v0:= temp @kind object;
  #L30b824.  v1:= length @variable v0;
  #L30b826.  v2:= 0I;
  #L30b828.  if v2 >= v1 then goto L30b840;
  #L30b82c.  v3:= v0[v2] @kind object;
  #L30b830.  v4:= v3.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L30b834.  if v4 != v5 then goto L30b83a;
  #L30b838.  return v3 @kind object;
  #L30b83a.  v2:= v2 + 1;
  #L30b83e.  goto L30b828;
  #L30b840.  v5:= 0I;
  #L30b842.  return v5 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30b854.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30b858.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L30b85e.  v1:= temp @kind object;
  #L30b860.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L30b864.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30b878.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L30b87c.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L30b882.  v0:= temp @kind object;
  #L30b884.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L30b888.  return v0 @kind object;
}
