record `okhttp3.internal.http2.Http2Connection$6` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$6.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.k` `okhttp3.internal.http2.Http2Connection$6.val$buffer` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$6.val$byteCount` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$6.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$6.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$6` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `okio.k` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$6;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/k;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d0d0.  v0.`okhttp3.internal.http2.Http2Connection$6.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L30d0d4.  v0.`okhttp3.internal.http2.Http2Connection$6.val$streamId` @type ^`int` := v4;
  #L30d0d8.  v0.`okhttp3.internal.http2.Http2Connection$6.val$buffer` @type ^`okio.k` := v5 @kind object;
  #L30d0dc.  v0.`okhttp3.internal.http2.Http2Connection$6.val$byteCount` @type ^`int` := v6;
  #L30d0e0.  v0.`okhttp3.internal.http2.Http2Connection$6.val$inFinished` @type ^`boolean` := v7 @kind boolean;
  #L30d0e4.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d0ea.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$6` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$6;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30d0fc.  v0:= v5.`okhttp3.internal.http2.Http2Connection$6.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d100.  v0:= v0.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L30d104.  v1:= v5.`okhttp3.internal.http2.Http2Connection$6.val$streamId` @type ^`int`;
  #L30d108.  v2:= v5.`okhttp3.internal.http2.Http2Connection$6.val$buffer` @type ^`okio.k` @kind object;
  #L30d10c.  v3:= v5.`okhttp3.internal.http2.Http2Connection$6.val$byteCount` @type ^`int`;
  #L30d110.  v4:= v5.`okhttp3.internal.http2.Http2Connection$6.val$inFinished` @type ^`boolean` @kind boolean;
  #L30d114.  call temp:= `onData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/PushObserver;.onData:(ILokio/o;IZ)Z` @kind interface;
  #L30d11a.  v0:= temp;
  #L30d11c.  if v0 == 0 then goto L30d136;
  #L30d120.  v1:= v5.`okhttp3.internal.http2.Http2Connection$6.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d124.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L30d128.  v2:= v5.`okhttp3.internal.http2.Http2Connection$6.val$streamId` @type ^`int`;
  #L30d12c.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d130.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L30d136.  if v0 != 0 then goto L30d142;
  #L30d13a.  v0:= v5.`okhttp3.internal.http2.Http2Connection$6.val$inFinished` @type ^`boolean` @kind boolean;
  #L30d13e.  if v0 == 0 then goto L30d16c;
  #L30d142.  v0:= v5.`okhttp3.internal.http2.Http2Connection$6.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d146.  @monitorenter v0
  #L30d148.  v1:= v5.`okhttp3.internal.http2.Http2Connection$6.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d14c.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L30d150.  v2:= v5.`okhttp3.internal.http2.Http2Connection$6.val$streamId` @type ^`int`;
  #L30d154.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30d15a.  v2:= temp @kind object;
  #L30d15c.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L30d162.  @monitorexit v0
  #L30d164.  goto L30d16c;
  #L30d166.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d168.  @monitorexit v0
  #L30d16a.  throw v1;
  #L30d16c.  return @kind void;
  catch `java.io.IOException` @[L30d0fc..L30d148] goto L30d16c;
  catch `java.lang.Throwable` @[L30d148..L30d16a] goto L30d166;
  catch `java.io.IOException` @[L30d16a..L30d16c] goto L30d16c;
}
