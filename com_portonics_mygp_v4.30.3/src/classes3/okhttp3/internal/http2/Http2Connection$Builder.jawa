record `okhttp3.internal.http2.Http2Connection$Builder` @kind class @AccessFlag PUBLIC {
  `boolean` `okhttp3.internal.http2.Http2Connection$Builder.client` @AccessFlag ;
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$Builder.connectionName` @AccessFlag ;
  `okhttp3.internal.http2.Http2Connection$Listener` `okhttp3.internal.http2.Http2Connection$Builder.listener` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Connection$Builder.pingIntervalMillis` @AccessFlag ;
  `okhttp3.internal.http2.PushObserver` `okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @AccessFlag ;
  `okio.n` `okhttp3.internal.http2.Http2Connection$Builder.sink` @AccessFlag ;
  `java.net.Socket` `okhttp3.internal.http2.Http2Connection$Builder.socket` @AccessFlag ;
  `okio.o` `okhttp3.internal.http2.Http2Connection$Builder.source` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `boolean` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30d308.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d30e.  v0:= `@@okhttp3.internal.http2.Http2Connection$Listener.REFUSE_INCOMING_STREAMS` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L30d312.  v1.`okhttp3.internal.http2.Http2Connection$Builder.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v0 @kind object;
  #L30d316.  v0:= `@@okhttp3.internal.http2.PushObserver.CANCEL` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L30d31a.  v1.`okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` := v0 @kind object;
  #L30d31e.  v1.`okhttp3.internal.http2.Http2Connection$Builder.client` @type ^`boolean` := v2 @kind boolean;
  #L30d322.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Connection` `build`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d220.  v0:= new `okhttp3.internal.http2.Http2Connection`;
  #L30d224.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.<init>:(Lokhttp3/internal/http2/Http2Connection$Builder;)V` @kind direct;
  #L30d22a.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `listener`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `okhttp3.internal.http2.Http2Connection$Listener` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L30d23c.  v0.`okhttp3.internal.http2.Http2Connection$Builder.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v1 @kind object;
  #L30d240.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pingIntervalMillis`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L30d254.  v0.`okhttp3.internal.http2.Http2Connection$Builder.pingIntervalMillis` @type ^`int` := v1;
  #L30d258.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pushObserver`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `okhttp3.internal.http2.PushObserver` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pushObserver:(Lokhttp3/internal/http2/PushObserver;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L30d26c.  v0.`okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` := v1 @kind object;
  #L30d270.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v3 @kind this, `java.net.Socket` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30d284.  call temp:= `getRemoteSocketAddress`(v4) @signature `Ljava/net/Socket;.getRemoteSocketAddress:()Ljava/net/SocketAddress;` @kind virtual;
  #L30d28a.  v0:= temp @kind object;
  #L30d28c.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L30d290.  if v1 == 0 then goto L30d2a2;
  #L30d294.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L30d298.  call temp:= `getHostName`(v0) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L30d29e.  v0:= temp @kind object;
  #L30d2a0.  goto L30d2aa;
  #L30d2a2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30d2a8.  v0:= temp @kind object;
  #L30d2aa.  call temp:= `m`(v4) @signature `Lokio/v;.m:(Ljava/net/Socket;)Lokio/i0;` @kind static;
  #L30d2b0.  v1:= temp @kind object;
  #L30d2b2.  call temp:= `d`(v1) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L30d2b8.  v1:= temp @kind object;
  #L30d2ba.  call temp:= `i`(v4) @signature `Lokio/v;.i:(Ljava/net/Socket;)Lokio/g0;` @kind static;
  #L30d2c0.  v2:= temp @kind object;
  #L30d2c2.  call temp:= `c`(v2) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L30d2c8.  v2:= temp @kind object;
  #L30d2ca.  call temp:= `socket`(v3, v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/o;Lokio/n;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L30d2d0.  v4:= temp @kind object;
  #L30d2d2.  return v4 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `java.net.Socket` v1 @kind object, `java.lang.String` v2 @kind object, `okio.o` v3 @kind object, `okio.n` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/o;Lokio/n;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L30d2e4.  v0.`okhttp3.internal.http2.Http2Connection$Builder.socket` @type ^`java.net.Socket` := v1 @kind object;
  #L30d2e8.  v0.`okhttp3.internal.http2.Http2Connection$Builder.connectionName` @type ^`java.lang.String` := v2 @kind object;
  #L30d2ec.  v0.`okhttp3.internal.http2.Http2Connection$Builder.source` @type ^`okio.o` := v3 @kind object;
  #L30d2f0.  v0.`okhttp3.internal.http2.Http2Connection$Builder.sink` @type ^`okio.n` := v4 @kind object;
  #L30d2f4.  return v0 @kind object;
}
