record `okhttp3.internal.http2.Http2Connection$IntervalPingRunnable` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable` v2 @kind this, `okhttp3.internal.http2.Http2Connection` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$IntervalPingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30d334.  v2.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v3 @kind object;
  #L30d338.  v0:= 1I;
  #L30d33a.  v0:= new `java.lang.Object`[v0];
  #L30d33e.  v3:= v3.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30d342.  v1:= 0I;
  #L30d344.  v0[v1]:= v3 @kind object;
  #L30d348.  v3:= "OkHttp %s ping" @kind object;
  #L30d34c.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d352.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$IntervalPingRunnable;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30d364.  v0:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d368.  @monitorenter v0
  #L30d36a.  v1:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d36e.  call temp:= `access$100`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$100:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30d374.  v1:= temp @kind wide;
  #L30d376.  v3:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d37a.  call temp:= `access$200`(v3) @signature `Lokhttp3/internal/http2/Http2Connection;.access$200:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30d380.  v3:= temp @kind wide;
  #L30d382.  v5:= 1I;
  #L30d384.  v6:= 0I;
  #L30d386.  v7:= lcmp(v1, v3);
  #L30d38a.  if v7 >= 0 then goto L30d392;
  #L30d38e.  v1:= 1I;
  #L30d390.  goto L30d39e;
  #L30d392.  v1:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d396.  call temp:= `access$208`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$208:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30d39c.  v1:= 0I;
  #L30d39e.  @monitorexit v0
  #L30d3a0.  if v1 == 0 then goto L30d3b2;
  #L30d3a4.  v0:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d3a8.  v1:= 0I;
  #L30d3aa.  call `access$000`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$000:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L30d3b0.  goto L30d3bc;
  #L30d3b2.  v0:= v8.`okhttp3.internal.http2.Http2Connection$IntervalPingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d3b6.  call `writePing`(v0, v6, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:(ZII)V` @kind virtual;
  #L30d3bc.  return @kind void;
  #L30d3be.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d3c0.  @monitorexit v0
  #L30d3c2.  throw v1;
  catch `java.lang.Throwable` @[L30d36a..L30d3a0] goto L30d3be;
  catch `java.lang.Throwable` @[L30d3c0..L30d3c2] goto L30d3be;
}
