record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class, `okhttp3.internal.http2.Http2Reader$Handler` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `okhttp3.internal.http2.Http2Connection` v3 @kind object, `okhttp3.internal.http2.Http2Reader` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30d628.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v3 @kind object;
  #L30d62c.  v0:= 1I;
  #L30d62e.  v0:= new `java.lang.Object`[v0];
  #L30d632.  v3:= v3.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30d636.  v1:= 0I;
  #L30d638.  v0[v1]:= v3 @kind object;
  #L30d63c.  v3:= "OkHttp %s" @kind object;
  #L30d640.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d646.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` := v4 @kind object;
  #L30d64a.  return @kind void;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L30d65c.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L30d670.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this, `boolean` v6 , `okhttp3.internal.http2.Settings` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30d684.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d688.  v0:= v0.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L30d68c.  @monitorenter v0
  #L30d68e.  v1:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d692.  @monitorenter v1
  #L30d694.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d698.  v2:= v2.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L30d69c.  call temp:= `getInitialWindowSize`(v2) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L30d6a2.  v2:= temp;
  #L30d6a4.  if v6 == 0 then goto L30d6b6;
  #L30d6a8.  v6:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d6ac.  v6:= v6.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L30d6b0.  call `clear`(v6) @signature `Lokhttp3/internal/http2/Settings;.clear:()V` @kind virtual;
  #L30d6b6.  v6:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d6ba.  v6:= v6.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L30d6be.  call `merge`(v6, v7) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L30d6c4.  v6:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d6c8.  v6:= v6.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L30d6cc.  call temp:= `getInitialWindowSize`(v6) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L30d6d2.  v6:= temp;
  #L30d6d4.  v7:= -1I;
  #L30d6d6.  v3:= 0I;
  #L30d6d8.  if v6 == v7 then goto L30d72c;
  #L30d6dc.  if v6 == v2 then goto L30d72c;
  #L30d6e0.  v6:= v6 - v2 @kind int;
  #L30d6e2.  v6:= (`long`) v6 @kind i2l;
  #L30d6e4.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d6e8.  v2:= v2.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30d6ec.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L30d6f2.  v2:= temp;
  #L30d6f4.  if v2 != 0 then goto L30d730;
  #L30d6f8.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d6fc.  v2:= v2.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30d700.  call temp:= `values`(v2) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L30d706.  v2:= temp @kind object;
  #L30d708.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d70c.  v3:= v3.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30d710.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30d716.  v3:= temp;
  #L30d718.  v3:= new `okhttp3.internal.http2.Http2Stream`[v3];
  #L30d71c.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L30d722.  v2:= temp @kind object;
  #L30d724.  v2:= (`okhttp3.internal.http2.Http2Stream`[]) v2 @kind object;
  #L30d728.  v3:= v2 @kind object;
  #L30d72a.  goto L30d730;
  #L30d72c.  v6:= 0L;
  #L30d730.  @monitorexit v1
  #L30d732.  v1:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d736.  v2:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L30d73a.  v1:= v1.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L30d73e.  call `applyAndAckSettings`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L30d744.  goto L30d752;
  #L30d746.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L30d748.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d74c.  call `access$000`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$000:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L30d752.  @monitorexit v0
  #L30d754.  v0:= 0I;
  #L30d756.  if v3 == 0 then goto L30d77c;
  #L30d75a.  v1:= length @variable v3;
  #L30d75c.  v2:= 0I;
  #L30d75e.  if v2 >= v1 then goto L30d77c;
  #L30d762.  v4:= v3[v2] @kind object;
  #L30d766.  @monitorenter v4
  #L30d768.  call `addBytesToWriteWindow`(v4, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L30d76e.  @monitorexit v4
  #L30d770.  v2:= v2 + 1;
  #L30d774.  goto L30d75e;
  #L30d776.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d778.  @monitorexit v4
  #L30d77a.  throw v6;
  #L30d77c.  call temp:= `access$400`() @signature `Lokhttp3/internal/http2/Http2Connection;.access$400:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L30d782.  v6:= temp @kind object;
  #L30d784.  v7:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3`;
  #L30d788.  v1:= "OkHttp %s settings" @kind object;
  #L30d78c.  v2:= 1I;
  #L30d78e.  v2:= new `java.lang.Object`[v2];
  #L30d792.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d796.  v3:= v3.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30d79a.  v2[v0]:= v3 @kind object;
  #L30d79e.  call `<init>`(v7, v5, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d7a4.  call `execute`(v6, v7) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30d7aa.  return @kind void;
  #L30d7ac.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d7ae.  @monitorexit v1
  #L30d7b0.  throw v6;
  #L30d7b2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d7b4.  @monitorexit v0
  #L30d7b6.  goto L30d7ba;
  #L30d7b8.  throw v6;
  #L30d7ba.  goto L30d7b8;
  catch `java.lang.Throwable` @[L30d68e..L30d694] goto L30d7b2;
  catch `java.lang.Throwable` @[L30d694..L30d732] goto L30d7ac;
  catch `java.io.IOException` @[L30d732..L30d744] goto L30d746;
  catch `java.lang.Throwable` @[L30d732..L30d744] goto L30d7b2;
  catch `java.lang.Throwable` @[L30d748..L30d754] goto L30d7b2;
  catch `java.lang.Throwable` @[L30d768..L30d77a] goto L30d776;
  catch `java.lang.Throwable` @[L30d7ae..L30d7b0] goto L30d7ac;
  catch `java.lang.Throwable` @[L30d7b0..L30d7b6] goto L30d7b2;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `boolean` v3 , `int` v4 , `okio.o` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/o;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30d814.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d818.  call temp:= `pushedStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L30d81e.  v0:= temp;
  #L30d820.  if v0 == 0 then goto L30d830;
  #L30d824.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d828.  call `pushDataLater`(v0, v4, v5, v6, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater:(ILokio/o;IZ)V` @kind virtual;
  #L30d82e.  return @kind void;
  #L30d830.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d834.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L30d83a.  v0:= temp @kind object;
  #L30d83c.  if v0 != 0 then goto L30d862;
  #L30d840.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d844.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d848.  call `writeSynResetLater`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L30d84e.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d852.  v0:= (`long`) v6 @kind i2l;
  #L30d854.  call `updateConnectionFlowControl`(v3, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.updateConnectionFlowControl:(J)V` @kind virtual;
  #L30d85a.  call `skip`(v5, v0) @signature `Lokio/o;.skip:(J)V` @kind interface;
  #L30d860.  return @kind void;
  #L30d862.  call `receiveData`(v0, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveData:(Lokio/o;I)V` @kind virtual;
  #L30d868.  if v3 == 0 then goto L30d878;
  #L30d86c.  v3:= `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` @kind object;
  #L30d870.  v4:= 1I;
  #L30d872.  call `receiveHeaders`(v0, v3, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L30d878.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30d88c.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d890.  v1:= 0I;
  #L30d892.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L30d896.  call `readConnectionPreface`(v2, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L30d89c.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L30d8a0.  v3:= 0I;
  #L30d8a2.  call temp:= `nextFrame`(v2, v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L30d8a8.  v2:= temp;
  #L30d8aa.  if v2 == 0 then goto L30d8b0;
  #L30d8ae.  goto L30d89c;
  #L30d8b0.  v2:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d8b4.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d8b8.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d8bc.  call `close`(v3, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L30d8c2.  goto L30d8e0;
  #L30d8c4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L30d8c6.  goto L30d8d2;
  #L30d8c8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d8ca.  v2:= v0 @kind object;
  #L30d8cc.  goto L30d8ee;
  #L30d8ce.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L30d8d0.  v2:= v0 @kind object;
  #L30d8d2.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d8d6.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d8da.  call `close`(v2, v0, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L30d8e0.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L30d8e4.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30d8ea.  return @kind void;
  #L30d8ec.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d8ee.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d8f2.  call `close`(v4, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L30d8f8.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L30d8fc.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30d902.  goto L30d906;
  #L30d904.  throw v3;
  #L30d906.  goto L30d904;
  catch `java.io.IOException` @[L30d892..L30d8b4] goto L30d8ce;
  catch `java.lang.Throwable` @[L30d892..L30d8b4] goto L30d8c8;
  catch `java.io.IOException` @[L30d8b4..L30d8b8] goto L30d8c4;
  catch `java.lang.Throwable` @[L30d8b4..L30d8b8] goto L30d8ec;
  catch `java.lang.Throwable` @[L30d8d2..L30d8d6] goto L30d8ec;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okio.ByteString` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30d940.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L30d946.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d94a.  @monitorenter v5
  #L30d94c.  v6:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d950.  v6:= v6.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30d954.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L30d95a.  v6:= temp @kind object;
  #L30d95c.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d960.  v0:= v0.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30d964.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30d96a.  v0:= temp;
  #L30d96c.  v0:= new `okhttp3.internal.http2.Http2Stream`[v0];
  #L30d970.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L30d976.  v6:= temp @kind object;
  #L30d978.  v6:= (`okhttp3.internal.http2.Http2Stream`[]) v6 @kind object;
  #L30d97c.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d980.  v1:= 1I;
  #L30d982.  call temp:= `access$302`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$302:(Lokhttp3/internal/http2/Http2Connection;Z)Z` @kind static;
  #L30d988.  @monitorexit v5
  #L30d98a.  v5:= length @variable v6;
  #L30d98c.  v0:= 0I;
  #L30d98e.  if v0 >= v5 then goto L30d9d0;
  #L30d992.  v1:= v6[v0] @kind object;
  #L30d996.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L30d99c.  v2:= temp;
  #L30d99e.  if v2 <= v4 then goto L30d9ca;
  #L30d9a2.  call temp:= `isLocallyInitiated`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L30d9a8.  v2:= temp;
  #L30d9aa.  if v2 == 0 then goto L30d9ca;
  #L30d9ae.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d9b2.  call `receiveRstStream`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L30d9b8.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d9bc.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L30d9c2.  v1:= temp;
  #L30d9c4.  call temp:= `removeStream`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L30d9ca.  v0:= v0 + 1;
  #L30d9ce.  goto L30d98e;
  #L30d9d0.  return @kind void;
  #L30d9d2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d9d4.  @monitorexit v5
  #L30d9d6.  goto L30d9da;
  #L30d9d8.  throw v4;
  #L30d9da.  goto L30d9d8;
  catch `java.lang.Throwable` @[L30d94c..L30d98a] goto L30d9d2;
  catch `java.lang.Throwable` @[L30d9d4..L30d9d6] goto L30d9d2;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30da00.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da04.  call temp:= `pushedStream`(v12, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L30da0a.  v12:= temp;
  #L30da0c.  if v12 == 0 then goto L30da1c;
  #L30da10.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da14.  call `pushHeadersLater`(v12, v11, v13, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater:(ILjava/util/List;Z)V` @kind virtual;
  #L30da1a.  return @kind void;
  #L30da1c.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da20.  @monitorenter v12
  #L30da22.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da26.  call temp:= `getStream`(v0, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L30da2c.  v0:= temp @kind object;
  #L30da2e.  if v0 != 0 then goto L30dae2;
  #L30da32.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da36.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$300:(Lokhttp3/internal/http2/Http2Connection;)Z` @kind static;
  #L30da3c.  v0:= temp;
  #L30da3e.  if v0 == 0 then goto L30da46;
  #L30da42.  @monitorexit v12
  #L30da44.  return @kind void;
  #L30da46.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da4a.  v1:= v0.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int`;
  #L30da4e.  if v11 > v1 then goto L30da56;
  #L30da52.  @monitorexit v12
  #L30da54.  return @kind void;
  #L30da56.  v1:= v11 %% 2;
  #L30da5a.  v0:= v0.`okhttp3.internal.http2.Http2Connection.nextStreamId` @type ^`int`;
  #L30da5e.  v2:= 2I;
  #L30da60.  v0:= v0 %% v2 @kind int;
  #L30da62.  if v1 != v0 then goto L30da6a;
  #L30da66.  @monitorexit v12
  #L30da68.  return @kind void;
  #L30da6a.  call temp:= `toHeaders`(v13) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L30da70.  v8:= temp @kind object;
  #L30da72.  v13:= new `okhttp3.internal.http2.Http2Stream`;
  #L30da76.  v5:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da7a.  v6:= 0I;
  #L30da7c.  v3:= v13 @kind object;
  #L30da7e.  v4:= v11;
  #L30da80.  v7:= v10;
  #L30da82.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L30da88.  v10:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30da8c.  v10.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int` := v11;
  #L30da90.  v10:= v10.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L30da94.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30da9a.  v0:= temp @kind object;
  #L30da9c.  call temp:= `put`(v10, v0, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30daa2.  call temp:= `access$400`() @signature `Lokhttp3/internal/http2/Http2Connection;.access$400:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L30daa8.  v10:= temp @kind object;
  #L30daaa.  v0:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1`;
  #L30daae.  v1:= "OkHttp %s stream %d" @kind object;
  #L30dab2.  v2:= new `java.lang.Object`[v2];
  #L30dab6.  v3:= 0I;
  #L30dab8.  v4:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dabc.  v4:= v4.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30dac0.  v2[v3]:= v4 @kind object;
  #L30dac4.  v3:= 1I;
  #L30dac6.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30dacc.  v11:= temp @kind object;
  #L30dace.  v2[v3]:= v11 @kind object;
  #L30dad2.  call `<init>`(v0, v9, v1, v2, v13) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;)V` @kind direct;
  #L30dad8.  call `execute`(v10, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30dade.  @monitorexit v12
  #L30dae0.  return @kind void;
  #L30dae2.  @monitorexit v12
  #L30dae4.  call temp:= `toHeaders`(v13) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L30daea.  v11:= temp @kind object;
  #L30daec.  call `receiveHeaders`(v0, v11, v10) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L30daf2.  return @kind void;
  #L30daf4.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30daf6.  @monitorexit v12
  #L30daf8.  throw v10;
  catch `java.lang.Throwable` @[L30da22..L30dae4] goto L30daf4;
  catch `java.lang.Throwable` @[L30daf6..L30daf8] goto L30daf4;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30db20.  v0:= 1I;
  #L30db22.  if v4 == 0 then goto L30db74;
  #L30db26.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db2a.  @monitorenter v4
  #L30db2c.  if v5 != v0 then goto L30db40;
  #L30db30.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db34.  call temp:= `access$108`(v5) @signature `Lokhttp3/internal/http2/Http2Connection;.access$108:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30db3a.  goto L30db6c;
  #L30db3c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30db3e.  goto L30db70;
  #L30db40.  v6:= 2I;
  #L30db42.  if v5 != v6 then goto L30db52;
  #L30db46.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db4a.  call temp:= `access$608`(v5) @signature `Lokhttp3/internal/http2/Http2Connection;.access$608:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30db50.  goto L30db6c;
  #L30db52.  v6:= 3I;
  #L30db54.  if v5 != v6 then goto L30db6c;
  #L30db58.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db5c.  call temp:= `access$708`(v5) @signature `Lokhttp3/internal/http2/Http2Connection;.access$708:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L30db62.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db66.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30db6c.  @monitorexit v4
  #L30db6e.  goto L30db94;
  #L30db70.  @monitorexit v4
  #L30db72.  throw v5;
  #L30db74.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db78.  call temp:= `access$500`(v4) @signature `Lokhttp3/internal/http2/Http2Connection;.access$500:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L30db7e.  v4:= temp @kind object;
  #L30db80.  v1:= new `okhttp3.internal.http2.Http2Connection$PingRunnable`;
  #L30db84.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30db88.  call `<init>`(v1, v2, v0, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;ZII)V` @kind direct;
  #L30db8e.  call `execute`(v4, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30db94.  return @kind void;
  catch `java.lang.Throwable` @[L30db30..L30db72] goto L30db3c;
  catch `java.util.concurrent.RejectedExecutionException` @[L30db74..L30db94] goto L30db94;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L30dbc0.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L30dbd4.  v1:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dbd8.  call `pushRequestLater`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater:(ILjava/util/List;)V` @kind virtual;
  #L30dbde.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30dbf0.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dbf4.  call temp:= `pushedStream`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L30dbfa.  v0:= temp;
  #L30dbfc.  if v0 == 0 then goto L30dc0c;
  #L30dc00.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dc04.  call `pushResetLater`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L30dc0a.  return @kind void;
  #L30dc0c.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dc10.  call temp:= `removeStream`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L30dc16.  v2:= temp @kind object;
  #L30dc18.  if v2 == 0 then goto L30dc22;
  #L30dc1c.  call `receiveRstStream`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L30dc22.  return @kind void;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v8 @kind this, `boolean` v9 , `okhttp3.internal.http2.Settings` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30dc34.  v0:= v8.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dc38.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$500:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L30dc3e.  v0:= temp @kind object;
  #L30dc40.  v7:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$2`;
  #L30dc44.  v3:= "OkHttp %s ACK Settings" @kind object;
  #L30dc48.  v1:= 1I;
  #L30dc4a.  v4:= new `java.lang.Object`[v1];
  #L30dc4e.  v1:= 0I;
  #L30dc50.  v2:= v8.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dc54.  v2:= v2.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30dc58.  v4[v1]:= v2 @kind object;
  #L30dc5c.  v1:= v7 @kind object;
  #L30dc5e.  v2:= v8 @kind object;
  #L30dc60.  v5:= v9;
  #L30dc62.  v6:= v10 @kind object;
  #L30dc64.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$2;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;ZLokhttp3/internal/http2/Settings;)V` @kind direct;
  #L30dc6a.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30dc70.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L30dc34..L30dc70] goto L30dc70;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30dc94.  if v4 != 0 then goto L30dcbc;
  #L30dc98.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dc9c.  @monitorenter v0
  #L30dc9e.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dca2.  v1:= v4.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30dca6.  v1:= v1 + v5 @kind long;
  #L30dca8.  v4.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` := v1 @kind wide;
  #L30dcac.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30dcb2.  @monitorexit v0
  #L30dcb4.  goto L30dcde;
  #L30dcb6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30dcb8.  @monitorexit v0
  #L30dcba.  throw v4;
  #L30dcbc.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30dcc0.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L30dcc6.  v4:= temp @kind object;
  #L30dcc8.  if v4 == 0 then goto L30dcde;
  #L30dccc.  @monitorenter v4
  #L30dcce.  call `addBytesToWriteWindow`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L30dcd4.  @monitorexit v4
  #L30dcd6.  goto L30dcde;
  #L30dcd8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30dcda.  @monitorexit v4
  #L30dcdc.  throw v5;
  #L30dcde.  return @kind void;
  catch `java.lang.Throwable` @[L30dc9e..L30dcba] goto L30dcb6;
  catch `java.lang.Throwable` @[L30dcce..L30dcdc] goto L30dcd8;
}
