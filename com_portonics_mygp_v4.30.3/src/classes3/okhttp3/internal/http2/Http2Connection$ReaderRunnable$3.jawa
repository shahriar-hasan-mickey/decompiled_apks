record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d5e8.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v1 @kind object;
  #L30d5ec.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d5f2.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30d604.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L30d608.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d60c.  v1:= v0.`okhttp3.internal.http2.Http2Connection.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L30d610.  call `onSettings`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.onSettings:(Lokhttp3/internal/http2/Http2Connection;)V` @kind virtual;
  #L30d616.  return @kind void;
}
