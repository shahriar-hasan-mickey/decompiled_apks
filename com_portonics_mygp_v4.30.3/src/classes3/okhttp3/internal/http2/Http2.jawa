record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L311794.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L311798.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L31179e.  v0:= temp @kind object;
  #L3117a0.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v0 @kind object;
  #L3117a4.  v1:= "DATA" @kind object;
  #L3117a8.  v2:= "HEADERS" @kind object;
  #L3117ac.  v3:= "PRIORITY" @kind object;
  #L3117b0.  v4:= "RST_STREAM" @kind object;
  #L3117b4.  v5:= "SETTINGS" @kind object;
  #L3117b8.  v6:= "PUSH_PROMISE" @kind object;
  #L3117bc.  v7:= "PING" @kind object;
  #L3117c0.  v8:= "GOAWAY" @kind object;
  #L3117c4.  v9:= "WINDOW_UPDATE" @kind object;
  #L3117c8.  v10:= "CONTINUATION" @kind object;
  #L3117cc.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L3117d2.  v0:= temp @kind object;
  #L3117d4.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v0 @kind object;
  #L3117d8.  v0:= 64I;
  #L3117dc.  v0:= new `java.lang.String`[v0];
  #L3117e0.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L3117e4.  v0:= 256I;
  #L3117e8.  v0:= new `java.lang.String`[v0];
  #L3117ec.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v0 @kind object;
  #L3117f0.  v0:= 0I;
  #L3117f2.  v1:= 0I;
  #L3117f4.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L3117f8.  v3:= length @variable v2;
  #L3117fa.  v4:= 32I;
  #L3117fe.  v5:= 1I;
  #L311800.  if v1 >= v3 then goto L311836;
  #L311804.  v3:= new `java.lang.Object`[v5];
  #L311808.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L31180e.  v5:= temp @kind object;
  #L311810.  v3[v0]:= v5 @kind object;
  #L311814.  v5:= "%8s" @kind object;
  #L311818.  call temp:= `format`(v5, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31181e.  v3:= temp @kind object;
  #L311820.  v5:= 48I;
  #L311824.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L31182a.  v3:= temp @kind object;
  #L31182c.  v2[v1]:= v3 @kind object;
  #L311830.  v1:= v1 + 1;
  #L311834.  goto L3117f4;
  #L311836.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L31183a.  v2:= "" @kind object;
  #L31183e.  v1[v0]:= v2 @kind object;
  #L311842.  v2:= "END_STREAM" @kind object;
  #L311846.  v1[v5]:= v2 @kind object;
  #L31184a.  v2:= new `int`[v5];
  #L31184e.  v2[v0]:= v5;
  #L311852.  v3:= "PADDED" @kind object;
  #L311856.  v6:= 8I;
  #L31185a.  v1[v6]:= v3 @kind object;
  #L31185e.  v1:= 0I;
  #L311860.  v3:= "|PADDED" @kind object;
  #L311864.  if v1 >= v5 then goto L3118a0;
  #L311868.  v7:= v2[v1];
  #L31186c.  v8:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L311870.  v9:= v7 ^| 8;
  #L311874.  v10:= new `java.lang.StringBuilder`;
  #L311878.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31187e.  v7:= v8[v7] @kind object;
  #L311882.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311888.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31188e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L311894.  v3:= temp @kind object;
  #L311896.  v8[v9]:= v3 @kind object;
  #L31189a.  v1:= v1 + 1;
  #L31189e.  goto L311860;
  #L3118a0.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L3118a4.  v7:= 4I;
  #L3118a6.  v8:= "END_HEADERS" @kind object;
  #L3118aa.  v1[v7]:= v8 @kind object;
  #L3118ae.  v7:= "PRIORITY" @kind object;
  #L3118b2.  v1[v4]:= v7 @kind object;
  #L3118b6.  v4:= 36I;
  #L3118ba.  v7:= "END_HEADERS|PRIORITY" @kind object;
  #L3118be.  v1[v4]:= v7 @kind object;
  #L3118c2.  v1:= 3I;
  #L3118c4.  v4:= new `int`[v1];
  #L3118c8.  goto L311988;
  #L3118ce.  v7:= 0I;
  #L3118d0.  if v7 >= v1 then goto L311962;
  #L3118d4.  v8:= v4[v7];
  #L3118d8.  v9:= 0I;
  #L3118da.  if v9 >= v5 then goto L31195c;
  #L3118de.  v10:= v2[v9];
  #L3118e2.  v11:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L3118e6.  v12:= v10 ^| v8 @kind int;
  #L3118ea.  v13:= new `java.lang.StringBuilder`;
  #L3118ee.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3118f4.  v14:= v11[v10] @kind object;
  #L3118f8.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3118fe.  v14:= 124I;
  #L311902.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L311908.  v15:= v11[v8] @kind object;
  #L31190c.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311912.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L311918.  v13:= temp @kind object;
  #L31191a.  v11[v12]:= v13 @kind object;
  #L31191e.  v12:= v12 ^| v6 @kind int;
  #L311920.  v13:= new `java.lang.StringBuilder`;
  #L311924.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31192a.  v10:= v11[v10] @kind object;
  #L31192e.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311934.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31193a.  v10:= v11[v8] @kind object;
  #L31193e.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311944.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31194a.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L311950.  v10:= temp @kind object;
  #L311952.  v11[v12]:= v10 @kind object;
  #L311956.  v9:= v9 + 1;
  #L31195a.  goto L3118da;
  #L31195c.  v7:= v7 + 1;
  #L311960.  goto L3118d0;
  #L311962.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L311966.  v2:= length @variable v1;
  #L311968.  if v0 >= v2 then goto L311986;
  #L31196c.  v2:= v1[v0] @kind object;
  #L311970.  if v2 != 0 then goto L311980;
  #L311974.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L311978.  v2:= v2[v0] @kind object;
  #L31197c.  v1[v0]:= v2 @kind object;
  #L311980.  v0:= v0 + 1;
  #L311984.  goto L311962;
  #L311986.  return @kind void;
  #L311988.  v4:= (4I, 32I, 36I) @kind object;
  #L31199b.  goto L3118ce;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3119ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3119b2.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v2 , `byte` v3 ) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L311648.  if v3 != 0 then goto L311652;
  #L31164c.  v2:= "" @kind object;
  #L311650.  return v2 @kind object;
  #L311652.  v0:= 2I;
  #L311654.  if v2 == v0 then goto L3116e6;
  #L311658.  v0:= 3I;
  #L31165a.  if v2 == v0 then goto L3116e6;
  #L31165e.  v0:= 4I;
  #L311660.  if v2 == v0 then goto L3116d0;
  #L311664.  v0:= 6I;
  #L311666.  if v2 == v0 then goto L3116d0;
  #L31166a.  v0:= 7I;
  #L31166c.  if v2 == v0 then goto L3116e6;
  #L311670.  v0:= 8I;
  #L311674.  if v2 == v0 then goto L3116e6;
  #L311678.  v0:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L31167c.  v1:= length @variable v0;
  #L31167e.  if v3 >= v1 then goto L311688;
  #L311682.  v0:= v0[v3] @kind object;
  #L311686.  goto L311690;
  #L311688.  v0:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L31168c.  v0:= v0[v3] @kind object;
  #L311690.  v1:= 5I;
  #L311692.  if v2 != v1 then goto L3116b0;
  #L311696.  v1:= v3 ^& 4;
  #L31169a.  if v1 == 0 then goto L3116b0;
  #L31169e.  v2:= "HEADERS" @kind object;
  #L3116a2.  v3:= "PUSH_PROMISE" @kind object;
  #L3116a6.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3116ac.  v2:= temp @kind object;
  #L3116ae.  return v2 @kind object;
  #L3116b0.  if v2 != 0 then goto L3116ce;
  #L3116b4.  v2:= v3 ^& 32;
  #L3116b8.  if v2 == 0 then goto L3116ce;
  #L3116bc.  v2:= "PRIORITY" @kind object;
  #L3116c0.  v3:= "COMPRESSED" @kind object;
  #L3116c4.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3116ca.  v2:= temp @kind object;
  #L3116cc.  return v2 @kind object;
  #L3116ce.  return v0 @kind object;
  #L3116d0.  v2:= 1I;
  #L3116d2.  if v3 != v2 then goto L3116dc;
  #L3116d6.  v2:= "ACK" @kind object;
  #L3116da.  goto L3116e4;
  #L3116dc.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L3116e0.  v2:= v2[v3] @kind object;
  #L3116e4.  return v2 @kind object;
  #L3116e6.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L3116ea.  v2:= v2[v3] @kind object;
  #L3116ee.  return v2 @kind object;
}
procedure `java.lang.String` `frameLog`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L311700.  v0:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L311704.  v1:= length @variable v0;
  #L311706.  v2:= 0I;
  #L311708.  v3:= 1I;
  #L31170a.  if v7 >= v1 then goto L311714;
  #L31170e.  v0:= v0[v7] @kind object;
  #L311712.  goto L311730;
  #L311714.  v0:= new `java.lang.Object`[v3];
  #L311718.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L31171e.  v1:= temp @kind object;
  #L311720.  v0[v2]:= v1 @kind object;
  #L311724.  v1:= "0x%02x" @kind object;
  #L311728.  call temp:= `format`(v1, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31172e.  v0:= temp @kind object;
  #L311730.  call temp:= `formatFlags`(v7, v8) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L311736.  v7:= temp @kind object;
  #L311738.  v8:= 5I;
  #L31173a.  v8:= new `java.lang.Object`[v8];
  #L31173e.  if v4 == 0 then goto L311748;
  #L311742.  v4:= "<<" @kind object;
  #L311746.  goto L31174c;
  #L311748.  v4:= ">>" @kind object;
  #L31174c.  v8[v2]:= v4 @kind object;
  #L311750.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L311756.  v4:= temp @kind object;
  #L311758.  v8[v3]:= v4 @kind object;
  #L31175c.  v4:= 2I;
  #L31175e.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L311764.  v5:= temp @kind object;
  #L311766.  v8[v4]:= v5 @kind object;
  #L31176a.  v4:= 3I;
  #L31176c.  v8[v4]:= v0 @kind object;
  #L311770.  v4:= 4I;
  #L311772.  v8[v4]:= v7 @kind object;
  #L311776.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L31177a.  call temp:= `format`(v4, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L311780.  v4:= temp @kind object;
  #L311782.  return v4 @kind object;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L311624.  v0:= new `java.lang.IllegalArgumentException`;
  #L311628.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31162e.  v1:= temp @kind object;
  #L311630.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L311636.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L311600.  v0:= new `java.io.IOException`;
  #L311604.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31160a.  v1:= temp @kind object;
  #L31160c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L311612.  throw v0;
}
