record `okhttp3.internal.http2.Http2Connection$7` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$7.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.ErrorCode` `okhttp3.internal.http2.Http2Connection$7.val$errorCode` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$7.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$7` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$7;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d1a0.  v0.`okhttp3.internal.http2.Http2Connection$7.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L30d1a4.  v0.`okhttp3.internal.http2.Http2Connection$7.val$streamId` @type ^`int` := v4;
  #L30d1a8.  v0.`okhttp3.internal.http2.Http2Connection$7.val$errorCode` @type ^`okhttp3.internal.http2.ErrorCode` := v5 @kind object;
  #L30d1ac.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d1b2.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$7` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$7;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30d1c4.  v0:= v3.`okhttp3.internal.http2.Http2Connection$7.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d1c8.  v0:= v0.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L30d1cc.  v1:= v3.`okhttp3.internal.http2.Http2Connection$7.val$streamId` @type ^`int`;
  #L30d1d0.  v2:= v3.`okhttp3.internal.http2.Http2Connection$7.val$errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d1d4.  call `onReset`(v0, v1, v2) @signature `Lokhttp3/internal/http2/PushObserver;.onReset:(ILokhttp3/internal/http2/ErrorCode;)V` @kind interface;
  #L30d1da.  v0:= v3.`okhttp3.internal.http2.Http2Connection$7.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d1de.  @monitorenter v0
  #L30d1e0.  v1:= v3.`okhttp3.internal.http2.Http2Connection$7.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d1e4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L30d1e8.  v2:= v3.`okhttp3.internal.http2.Http2Connection$7.val$streamId` @type ^`int`;
  #L30d1ec.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30d1f2.  v2:= temp @kind object;
  #L30d1f4.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L30d1fa.  @monitorexit v0
  #L30d1fc.  return @kind void;
  #L30d1fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30d200.  @monitorexit v0
  #L30d202.  throw v1;
  catch `java.lang.Throwable` @[L30d1e0..L30d202] goto L30d1fe;
}
