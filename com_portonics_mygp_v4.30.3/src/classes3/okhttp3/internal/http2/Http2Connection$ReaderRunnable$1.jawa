record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.val$newStream` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1` v0 @kind this, `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `okhttp3.internal.http2.Http2Stream` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d4ec.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v1 @kind object;
  #L30d4f0.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.val$newStream` @type ^`okhttp3.internal.http2.Http2Stream` := v4 @kind object;
  #L30d4f4.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30d4fa.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30d50c.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L30d510.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d514.  v0:= v0.`okhttp3.internal.http2.Http2Connection.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L30d518.  v1:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.val$newStream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30d51c.  call `onStream`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @kind virtual;
  #L30d522.  goto L30d572;
  #L30d524.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L30d526.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L30d52c.  v1:= temp @kind object;
  #L30d52e.  v2:= 4I;
  #L30d530.  v3:= new `java.lang.StringBuilder`;
  #L30d534.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30d53a.  v4:= "Http2Connection.Listener failure for " @kind object;
  #L30d53e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d544.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L30d548.  v4:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30d54c.  v4:= v4.`okhttp3.internal.http2.Http2Connection.connectionName` @type ^`java.lang.String` @kind object;
  #L30d550.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d556.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30d55c.  v3:= temp @kind object;
  #L30d55e.  call `log`(v1, v2, v3, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L30d564.  v1:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$1.val$newStream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30d568.  v2:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30d56c.  call `close`(v1, v2, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L30d572.  return @kind void;
  catch `java.io.IOException` @[L30d50c..L30d522] goto L30d524;
  catch `java.io.IOException` @[L30d564..L30d572] goto L30d572;
}
