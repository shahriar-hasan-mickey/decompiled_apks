record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.g0` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.k` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Headers` `okhttp3.internal.http2.Http2Stream$FramingSink.trailers` @AccessFlag PRIVATE;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L30fc5c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30fc70.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L30fc74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30fc7a.  v1:= new `okio.k`;
  #L30fc7e.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L30fc84.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` := v1 @kind object;
  #L30fc88.  return @kind void;
}
procedure `okhttp3.Headers` `access$302`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind object, `okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.access$302:(Lokhttp3/internal/http2/Http2Stream$FramingSink;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30fc28.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.trailers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L30fc2c.  return v1 @kind object;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v11 @kind this, `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L30fdd8.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fddc.  @monitorenter v0
  #L30fdde.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fde2.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30fde6.  call `enter`(v1) @signature `Lokio/h;.enter:()V` @kind virtual;
  #L30fdec.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fdf0.  v2:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30fdf4.  v4:= 0L;
  #L30fdf8.  v6:= lcmp(v2, v4);
  #L30fdfc.  if v6 > 0 then goto L30fe20;
  #L30fe00.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L30fe04.  if v2 != 0 then goto L30fe20;
  #L30fe08.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L30fe0c.  if v2 != 0 then goto L30fe20;
  #L30fe10.  v2:= v1.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L30fe14.  if v2 != 0 then goto L30fe20;
  #L30fe18.  call `waitForIo`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #L30fe1e.  goto L30fdec;
  #L30fe20.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30fe24.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30fe2a.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fe2e.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L30fe34.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fe38.  v1:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30fe3c.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fe40.  call temp:= `f1`(v3) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30fe46.  v3:= temp @kind wide;
  #L30fe48.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L30fe4e.  v9:= temp @kind wide;
  #L30fe50.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fe54.  v2:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30fe58.  v2:= v2 - v9 @kind long;
  #L30fe5a.  v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L30fe5e.  @monitorexit v0
  #L30fe60.  v0:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30fe64.  call `enter`(v0) @signature `Lokio/h;.enter:()V` @kind virtual;
  #L30fe6a.  if v12 == 0 then goto L30fe8c;
  #L30fe6e.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fe72.  call temp:= `f1`(v12) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30fe78.  v0:= temp @kind wide;
  #L30fe7a.  v12:= lcmp(v9, v0);
  #L30fe7e.  if v12 != 0 then goto L30fe8c;
  #L30fe82.  v12:= 1I;
  #L30fe84.  v7:= 1I;
  #L30fe86.  goto L30fe90;
  #L30fe88.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30fe8a.  goto L30feb6;
  #L30fe8c.  v12:= 0I;
  #L30fe8e.  v7:= 0I;
  #L30fe90.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fe94.  v5:= v12.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30fe98.  v6:= v12.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L30fe9c.  v8:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fea0.  call `writeData`(v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/k;J)V` @kind virtual;
  #L30fea6.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30feaa.  v12:= v12.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30feae.  call `exitAndThrowIfTimedOut`(v12) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30feb4.  return @kind void;
  #L30feb6.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30feba.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30febe.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30fec4.  throw v12;
  #L30fec6.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30fec8.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fecc.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30fed0.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30fed6.  throw v12;
  #L30fed8.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30feda.  @monitorexit v0
  #L30fedc.  goto L30fee0;
  #L30fede.  throw v12;
  #L30fee0.  goto L30fede;
  catch `java.lang.Throwable` @[L30fdde..L30fdec] goto L30fed8;
  catch `java.lang.Throwable` @[L30fdec..L30fe1e] goto L30fec6;
  catch `java.lang.Throwable` @[L30fe20..L30fe60] goto L30fed8;
  catch `java.lang.Throwable` @[L30fe6e..L30fea6] goto L30fe88;
  catch `java.lang.Throwable` @[L30fec8..L30fedc] goto L30fed8;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30fc9c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fca0.  @monitorenter v0
  #L30fca2.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L30fca6.  if v1 == 0 then goto L30fcae;
  #L30fcaa.  @monitorexit v0
  #L30fcac.  return @kind void;
  #L30fcae.  @monitorexit v0
  #L30fcb0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fcb4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L30fcb8.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L30fcbc.  v1:= 1I;
  #L30fcbe.  if v0 != 0 then goto L30fd6a;
  #L30fcc2.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fcc6.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30fccc.  v2:= temp @kind wide;
  #L30fcce.  v0:= 0I;
  #L30fcd0.  v4:= 0L;
  #L30fcd4.  v6:= lcmp(v2, v4);
  #L30fcd8.  if v6 <= 0 then goto L30fce0;
  #L30fcdc.  v2:= 1I;
  #L30fcde.  goto L30fce2;
  #L30fce0.  v2:= 0I;
  #L30fce2.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.trailers` @type ^`okhttp3.Headers` @kind object;
  #L30fce6.  if v3 == 0 then goto L30fcee;
  #L30fcea.  v3:= 1I;
  #L30fcec.  goto L30fcf0;
  #L30fcee.  v3:= 0I;
  #L30fcf0.  if v3 == 0 then goto L30fd30;
  #L30fcf4.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fcf8.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30fcfe.  v2:= temp @kind wide;
  #L30fd00.  v6:= lcmp(v2, v4);
  #L30fd04.  if v6 <= 0 then goto L30fd10;
  #L30fd08.  call `emitFrame`(v8, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L30fd0e.  goto L30fcf4;
  #L30fd10.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fd14.  v2:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30fd18.  v0:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L30fd1c.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.trailers` @type ^`okhttp3.Headers` @kind object;
  #L30fd20.  call temp:= `toHeaderBlock`(v3) @signature `Lokhttp3/internal/Util;.toHeaderBlock:(Lokhttp3/Headers;)Ljava/util/List;` @kind static;
  #L30fd26.  v3:= temp @kind object;
  #L30fd28.  call `writeHeaders`(v2, v0, v1, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.writeHeaders:(IZLjava/util/List;)V` @kind virtual;
  #L30fd2e.  goto L30fd6a;
  #L30fd30.  if v2 == 0 then goto L30fd50;
  #L30fd34.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30fd38.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30fd3e.  v2:= temp @kind wide;
  #L30fd40.  v0:= lcmp(v2, v4);
  #L30fd44.  if v0 <= 0 then goto L30fd6a;
  #L30fd48.  call `emitFrame`(v8, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L30fd4e.  goto L30fd34;
  #L30fd50.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fd54.  v2:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30fd58.  v3:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L30fd5c.  v4:= 1I;
  #L30fd5e.  v5:= 0I;
  #L30fd60.  v6:= 0L;
  #L30fd64.  call `writeData`(v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/k;J)V` @kind virtual;
  #L30fd6a.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fd6e.  @monitorenter v2
  #L30fd70.  v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L30fd74.  @monitorexit v2
  #L30fd76.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fd7a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30fd7e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L30fd84.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fd88.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L30fd8e.  return @kind void;
  #L30fd90.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30fd92.  @monitorexit v2
  #L30fd94.  throw v0;
  #L30fd96.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30fd98.  @monitorexit v0
  #L30fd9a.  goto L30fd9e;
  #L30fd9c.  throw v1;
  #L30fd9e.  goto L30fd9c;
  catch `java.lang.Throwable` @[L30fca2..L30fcb0] goto L30fd96;
  catch `java.lang.Throwable` @[L30fd70..L30fd76] goto L30fd90;
  catch `java.lang.Throwable` @[L30fd92..L30fd94] goto L30fd90;
  catch `java.lang.Throwable` @[L30fd98..L30fd9a] goto L30fd96;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30ff24.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30ff28.  @monitorenter v0
  #L30ff2a.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30ff2e.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L30ff34.  @monitorexit v0
  #L30ff36.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30ff3a.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30ff40.  v0:= temp @kind wide;
  #L30ff42.  v2:= 0L;
  #L30ff46.  v4:= lcmp(v0, v2);
  #L30ff4a.  if v4 <= 0 then goto L30ff66;
  #L30ff4e.  v0:= 0I;
  #L30ff50.  call `emitFrame`(v5, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L30ff56.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30ff5a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30ff5e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L30ff64.  goto L30ff36;
  #L30ff66.  return @kind void;
  #L30ff68.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ff6a.  @monitorexit v0
  #L30ff6c.  goto L30ff70;
  #L30ff6e.  throw v1;
  #L30ff70.  goto L30ff6e;
  catch `java.lang.Throwable` @[L30ff2a..L30ff36] goto L30ff68;
  catch `java.lang.Throwable` @[L30ff6a..L30ff6c] goto L30ff68;
}
procedure `okio.l0` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30fc40.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L30fc44.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L30fc48.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v2 @kind this, `okio.k` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30ff98.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30ff9c.  call `write`(v0, v3, v4) @signature `Lokio/k;.write:(Lokio/k;J)V` @kind virtual;
  #L30ffa2.  v3:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.k` @kind object;
  #L30ffa6.  call temp:= `f1`(v3) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30ffac.  v3:= temp @kind wide;
  #L30ffae.  v0:= 16384L;
  #L30ffb2.  v5:= lcmp(v3, v0);
  #L30ffb6.  if v5 < 0 then goto L30ffc4;
  #L30ffba.  v3:= 0I;
  #L30ffbc.  call `emitFrame`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L30ffc2.  goto L30ffa2;
  #L30ffc4.  return @kind void;
}
