record `okhttp3.internal.NamedRunnable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `okhttp3.internal.NamedRunnable.name` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.NamedRunnable` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L300c2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L300c32.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L300c38.  v1:= temp @kind object;
  #L300c3a.  v0.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` := v1 @kind object;
  #L300c3e.  return @kind void;
}
procedure `void` `execute`() @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`okhttp3.internal.NamedRunnable` v3 @kind this) @signature `Lokhttp3/internal/NamedRunnable;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L300c50.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L300c56.  v0:= temp @kind object;
  #L300c58.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L300c5e.  v0:= temp @kind object;
  #L300c60.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L300c66.  v1:= temp @kind object;
  #L300c68.  v2:= v3.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` @kind object;
  #L300c6c.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L300c72.  call `execute`(v3) @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @kind virtual;
  #L300c78.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L300c7e.  v1:= temp @kind object;
  #L300c80.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L300c86.  return @kind void;
  #L300c88.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L300c8a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L300c90.  v2:= temp @kind object;
  #L300c92.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L300c98.  throw v1;
  catch `java.lang.Throwable` @[L300c72..L300c78] goto L300c88;
}
