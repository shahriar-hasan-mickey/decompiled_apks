record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.k` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.k$a` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.k` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.o` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.o` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/o;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3169f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3169fa.  v0:= new `okio.k`;
  #L3169fe.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L316a04.  v1.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` := v0 @kind object;
  #L316a08.  v0:= new `okio.k`;
  #L316a0c.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L316a12.  v1.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` := v0 @kind object;
  #L316a16.  v0:= "source == null" @kind object;
  #L316a1a.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L316a20.  v0:= "frameCallback == null" @kind object;
  #L316a24.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L316a2a.  v1.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v2 @kind boolean;
  #L316a2e.  v1.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` := v3 @kind object;
  #L316a32.  v1.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L316a36.  v3:= 0I;
  #L316a38.  if v2 == 0 then goto L316a40;
  #L316a3c.  v4:= v3 @kind object;
  #L316a3e.  goto L316a46;
  #L316a40.  v4:= 4I;
  #L316a42.  v4:= new `byte`[v4];
  #L316a46.  v1.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v4 @kind object;
  #L316a4a.  if v2 == 0 then goto L316a50;
  #L316a4e.  goto L316a5a;
  #L316a50.  v3:= new `okio.k$a`;
  #L316a54.  call `<init>`(v3) @signature `Lokio/k$a;.<init>:()V` @kind direct;
  #L316a5a.  v1.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` := v3 @kind object;
  #L316a5e.  return @kind void;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L316aa0.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L316aa4.  v2:= 0L;
  #L316aa8.  v4:= lcmp(v0, v2);
  #L316aac.  if v4 <= 0 then goto L316af6;
  #L316ab0.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316ab4.  v5:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316ab8.  call `S`(v4, v5, v0) @signature `Lokio/o;.S:(Lokio/k;J)V` @kind interface;
  #L316abe.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L316ac2.  if v0 != 0 then goto L316af6;
  #L316ac6.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316aca.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316ace.  call temp:= `T0`(v0, v1) @signature `Lokio/k;.T0:(Lokio/k$a;)Lokio/k$a;` @kind virtual;
  #L316ad4.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316ad8.  call temp:= `c`(v0, v2) @signature `Lokio/k$a;.c:(J)I` @kind virtual;
  #L316ade.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316ae2.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L316ae6.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/k$a;[B)V` @kind static;
  #L316aec.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316af0.  call `close`(v0) @signature `Lokio/k$a;.close:()V` @kind virtual;
  #L316af6.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L316afa.  goto L316be8;
  #L316b00.  v0:= new `java.net.ProtocolException`;
  #L316b04.  v1:= new `java.lang.StringBuilder`;
  #L316b08.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L316b0e.  v2:= "Unknown control opcode: " @kind object;
  #L316b12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316b18.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L316b1c.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L316b22.  v2:= temp @kind object;
  #L316b24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316b2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L316b30.  v1:= temp @kind object;
  #L316b32.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316b38.  throw v0;
  #L316b3a.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L316b3e.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316b42.  call temp:= `U0`(v1) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L316b48.  v1:= temp @kind object;
  #L316b4a.  call `onReadPong`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L316b50.  goto L316bd4;
  #L316b52.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L316b56.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316b5a.  call temp:= `U0`(v1) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L316b60.  v1:= temp @kind object;
  #L316b62.  call `onReadPing`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L316b68.  goto L316bd4;
  #L316b6a.  v0:= 1005I;
  #L316b6e.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316b72.  call temp:= `f1`(v1) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L316b78.  v4:= temp @kind wide;
  #L316b7a.  v6:= 1L;
  #L316b7e.  v1:= lcmp(v4, v6);
  #L316b82.  if v1 == 0 then goto L316bd6;
  #L316b86.  v1:= lcmp(v4, v2);
  #L316b8a.  if v1 == 0 then goto L316bc0;
  #L316b8e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316b92.  call temp:= `readShort`(v0) @signature `Lokio/k;.readShort:()S` @kind virtual;
  #L316b98.  v0:= temp;
  #L316b9a.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.k` @kind object;
  #L316b9e.  call temp:= `Y0`(v1) @signature `Lokio/k;.Y0:()Ljava/lang/String;` @kind virtual;
  #L316ba4.  v1:= temp @kind object;
  #L316ba6.  call temp:= `closeCodeExceptionMessage`(v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L316bac.  v2:= temp @kind object;
  #L316bae.  if v2 != 0 then goto L316bb4;
  #L316bb2.  goto L316bc4;
  #L316bb4.  v0:= new `java.net.ProtocolException`;
  #L316bb8.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316bbe.  throw v0;
  #L316bc0.  v1:= "" @kind object;
  #L316bc4.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L316bc8.  call `onReadClose`(v2, v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L316bce.  v0:= 1I;
  #L316bd0.  v8.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v0 @kind boolean;
  #L316bd4.  return @kind void;
  #L316bd6.  v0:= new `java.net.ProtocolException`;
  #L316bda.  v1:= "Malformed close payload length of 1." @kind object;
  #L316bde.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316be4.  throw v0;
  #L316be6.  
  #L316be8.  switch v0
                  | 8 => goto L316b6a
                  | 9 => goto L316b52
                  | 10 => goto L316b3a
                  | else => goto L316b00;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L316c0c.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L316c10.  if v0 != 0 then goto L316e2a;
  #L316c14.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316c18.  call temp:= `timeout`(v0) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L316c1e.  v0:= temp @kind object;
  #L316c20.  call temp:= `timeoutNanos`(v0) @signature `Lokio/l0;.timeoutNanos:()J` @kind virtual;
  #L316c26.  v0:= temp @kind wide;
  #L316c28.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316c2c.  call temp:= `timeout`(v2) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L316c32.  v2:= temp @kind object;
  #L316c34.  call temp:= `clearTimeout`(v2) @signature `Lokio/l0;.clearTimeout:()Lokio/l0;` @kind virtual;
  #L316c3a.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316c3e.  call temp:= `readByte`(v2) @signature `Lokio/o;.readByte:()B` @kind interface;
  #L316c44.  v2:= temp;
  #L316c46.  v2:= v2 ^& 255;
  #L316c4a.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316c4e.  call temp:= `timeout`(v3) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L316c54.  v3:= temp @kind object;
  #L316c56.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L316c5a.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L316c60.  v0:= v2 ^& 15;
  #L316c64.  v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v0;
  #L316c68.  v0:= v2 ^& 128;
  #L316c6c.  v1:= 1I;
  #L316c6e.  v3:= 0I;
  #L316c70.  if v0 == 0 then goto L316c78;
  #L316c74.  v0:= 1I;
  #L316c76.  goto L316c7a;
  #L316c78.  v0:= 0I;
  #L316c7a.  v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v0 @kind boolean;
  #L316c7e.  v4:= v2 ^& 8;
  #L316c82.  if v4 == 0 then goto L316c8a;
  #L316c86.  v4:= 1I;
  #L316c88.  goto L316c8c;
  #L316c8a.  v4:= 0I;
  #L316c8c.  v6.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v4 @kind boolean;
  #L316c90.  if v4 == 0 then goto L316caa;
  #L316c94.  if v0 == 0 then goto L316c9a;
  #L316c98.  goto L316caa;
  #L316c9a.  v0:= new `java.net.ProtocolException`;
  #L316c9e.  v1:= "Control frames must be final." @kind object;
  #L316ca2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316ca8.  throw v0;
  #L316caa.  v0:= v2 ^& 64;
  #L316cae.  if v0 == 0 then goto L316cb6;
  #L316cb2.  v0:= 1I;
  #L316cb4.  goto L316cb8;
  #L316cb6.  v0:= 0I;
  #L316cb8.  v4:= v2 ^& 32;
  #L316cbc.  if v4 == 0 then goto L316cc4;
  #L316cc0.  v4:= 1I;
  #L316cc2.  goto L316cc6;
  #L316cc4.  v4:= 0I;
  #L316cc6.  v2:= v2 ^& 16;
  #L316cca.  if v2 == 0 then goto L316cd2;
  #L316cce.  v2:= 1I;
  #L316cd0.  goto L316cd4;
  #L316cd2.  v2:= 0I;
  #L316cd4.  if v0 != 0 then goto L316e00;
  #L316cd8.  if v4 != 0 then goto L316e00;
  #L316cdc.  if v2 != 0 then goto L316e00;
  #L316ce0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316ce4.  call temp:= `readByte`(v0) @signature `Lokio/o;.readByte:()B` @kind interface;
  #L316cea.  v0:= temp;
  #L316cec.  v0:= v0 ^& 255;
  #L316cf0.  v2:= v0 ^& 128;
  #L316cf4.  if v2 == 0 then goto L316cfa;
  #L316cf8.  goto L316cfc;
  #L316cfa.  v1:= 0I;
  #L316cfc.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L316d00.  if v1 != v2 then goto L316d22;
  #L316d04.  v0:= new `java.net.ProtocolException`;
  #L316d08.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L316d0c.  if v1 == 0 then goto L316d16;
  #L316d10.  v1:= "Server-sent frames must not be masked." @kind object;
  #L316d14.  goto L316d1a;
  #L316d16.  v1:= "Client-sent frames must be masked." @kind object;
  #L316d1a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316d20.  throw v0;
  #L316d22.  v0:= v0 ^& 127;
  #L316d26.  v2:= (`long`) v0 @kind i2l;
  #L316d28.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L316d2c.  v4:= 126L;
  #L316d30.  v0:= lcmp(v2, v4);
  #L316d34.  if v0 != 0 then goto L316d54;
  #L316d38.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316d3c.  call temp:= `readShort`(v0) @signature `Lokio/o;.readShort:()S` @kind interface;
  #L316d42.  v0:= temp;
  #L316d44.  v2:= (`long`) v0 @kind i2l;
  #L316d46.  v4:= 65535L;
  #L316d4c.  v2:= v2 ^& v4 @kind long;
  #L316d4e.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L316d52.  goto L316dc2;
  #L316d54.  v4:= 127L;
  #L316d58.  v0:= lcmp(v2, v4);
  #L316d5c.  if v0 != 0 then goto L316dc2;
  #L316d60.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316d64.  call temp:= `readLong`(v0) @signature `Lokio/o;.readLong:()J` @kind interface;
  #L316d6a.  v2:= temp @kind wide;
  #L316d6c.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L316d70.  v4:= 0L;
  #L316d74.  v0:= lcmp(v2, v4);
  #L316d78.  if v0 < 0 then goto L316d7e;
  #L316d7c.  goto L316dc2;
  #L316d7e.  v0:= new `java.net.ProtocolException`;
  #L316d82.  v1:= new `java.lang.StringBuilder`;
  #L316d86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L316d8c.  v2:= "Frame length 0x" @kind object;
  #L316d90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316d96.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L316d9a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L316da0.  v2:= temp @kind object;
  #L316da2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316da8.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L316dac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316db2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L316db8.  v1:= temp @kind object;
  #L316dba.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316dc0.  throw v0;
  #L316dc2.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L316dc6.  if v0 == 0 then goto L316dec;
  #L316dca.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L316dce.  v4:= 125L;
  #L316dd2.  v0:= lcmp(v2, v4);
  #L316dd6.  if v0 > 0 then goto L316ddc;
  #L316dda.  goto L316dec;
  #L316ddc.  v0:= new `java.net.ProtocolException`;
  #L316de0.  v1:= "Control frame must be less than 125B." @kind object;
  #L316de4.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316dea.  throw v0;
  #L316dec.  if v1 == 0 then goto L316dfe;
  #L316df0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316df4.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L316df8.  call `readFully`(v0, v1) @signature `Lokio/o;.readFully:([B)V` @kind interface;
  #L316dfe.  return @kind void;
  #L316e00.  v0:= new `java.net.ProtocolException`;
  #L316e04.  v1:= "Reserved flags are unsupported." @kind object;
  #L316e08.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316e0e.  throw v0;
  #L316e10.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L316e12.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316e16.  call temp:= `timeout`(v3) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L316e1c.  v3:= temp @kind object;
  #L316e1e.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L316e22.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L316e28.  throw v2;
  #L316e2a.  v0:= new `java.io.IOException`;
  #L316e2e.  v1:= "closed" @kind object;
  #L316e32.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316e38.  throw v0;
  catch `java.lang.Throwable` @[L316c3a..L316c46] goto L316e10;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v5 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L316e58.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L316e5c.  if v0 != 0 then goto L316f1c;
  #L316e60.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L316e64.  v2:= 0L;
  #L316e68.  v4:= lcmp(v0, v2);
  #L316e6c.  if v4 <= 0 then goto L316ec8;
  #L316e70.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.o` @kind object;
  #L316e74.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` @kind object;
  #L316e78.  call `S`(v2, v3, v0) @signature `Lokio/o;.S:(Lokio/k;J)V` @kind interface;
  #L316e7e.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L316e82.  if v0 != 0 then goto L316ec8;
  #L316e86.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` @kind object;
  #L316e8a.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316e8e.  call temp:= `T0`(v0, v1) @signature `Lokio/k;.T0:(Lokio/k$a;)Lokio/k$a;` @kind virtual;
  #L316e94.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316e98.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` @kind object;
  #L316e9c.  call temp:= `f1`(v1) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L316ea2.  v1:= temp @kind wide;
  #L316ea4.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L316ea8.  v1:= v1 - v3 @kind long;
  #L316eaa.  call temp:= `c`(v0, v1) @signature `Lokio/k$a;.c:(J)I` @kind virtual;
  #L316eb0.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316eb4.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L316eb8.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/k$a;[B)V` @kind static;
  #L316ebe.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.k$a` @kind object;
  #L316ec2.  call `close`(v0) @signature `Lokio/k$a;.close:()V` @kind virtual;
  #L316ec8.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L316ecc.  if v0 == 0 then goto L316ed2;
  #L316ed0.  return @kind void;
  #L316ed2.  call `readUntilNonControlFrame`(v5) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L316ed8.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L316edc.  if v0 != 0 then goto L316ee2;
  #L316ee0.  goto L316e58;
  #L316ee2.  v0:= new `java.net.ProtocolException`;
  #L316ee6.  v1:= new `java.lang.StringBuilder`;
  #L316eea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L316ef0.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L316ef4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316efa.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L316efe.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L316f04.  v2:= temp @kind object;
  #L316f06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316f0c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L316f12.  v1:= temp @kind object;
  #L316f14.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316f1a.  throw v0;
  #L316f1c.  v0:= new `java.io.IOException`;
  #L316f20.  v1:= "closed" @kind object;
  #L316f24.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316f2a.  goto L316f2e;
  #L316f2c.  throw v0;
  #L316f2e.  goto L316f2c;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L316f40.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L316f44.  v1:= 1I;
  #L316f46.  if v0 == v1 then goto L316f88;
  #L316f4a.  v2:= 2I;
  #L316f4c.  if v0 != v2 then goto L316f52;
  #L316f50.  goto L316f88;
  #L316f52.  v1:= new `java.net.ProtocolException`;
  #L316f56.  v2:= new `java.lang.StringBuilder`;
  #L316f5a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L316f60.  v3:= "Unknown opcode: " @kind object;
  #L316f64.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316f6a.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L316f70.  v0:= temp @kind object;
  #L316f72.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316f78.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L316f7e.  v0:= temp @kind object;
  #L316f80.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316f86.  throw v1;
  #L316f88.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L316f8e.  if v0 != v1 then goto L316faa;
  #L316f92.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L316f96.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` @kind object;
  #L316f9a.  call temp:= `Y0`(v1) @signature `Lokio/k;.Y0:()Ljava/lang/String;` @kind virtual;
  #L316fa0.  v1:= temp @kind object;
  #L316fa2.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L316fa8.  goto L316fc0;
  #L316faa.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L316fae.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.k` @kind object;
  #L316fb2.  call temp:= `U0`(v1) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L316fb8.  v1:= temp @kind object;
  #L316fba.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L316fc0.  return @kind void;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L316fd4.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L316fd8.  if v0 != 0 then goto L316ff4;
  #L316fdc.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L316fe2.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L316fe6.  if v0 != 0 then goto L316fec;
  #L316fea.  goto L316ff4;
  #L316fec.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L316ff2.  goto L316fd4;
  #L316ff4.  return @kind void;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L316a70.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L316a76.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L316a7a.  if v0 == 0 then goto L316a86;
  #L316a7e.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L316a84.  goto L316a8c;
  #L316a86.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L316a8c.  return @kind void;
}
