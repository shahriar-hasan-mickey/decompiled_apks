record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.k` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `okio.k$a` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.n` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `okio.k` `okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.n` v3 @kind object, `java.util.Random` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/n;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3171f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3171f6.  v0:= new `okio.k`;
  #L3171fa.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L317200.  v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.k` := v0 @kind object;
  #L317204.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L317208.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L31720e.  v1.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L317212.  v0:= "sink == null" @kind object;
  #L317216.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31721c.  v0:= "random == null" @kind object;
  #L317220.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L317226.  v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v2 @kind boolean;
  #L31722a.  v1.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.n` := v3 @kind object;
  #L31722e.  call temp:= `q`(v3) @signature `Lokio/n;.q:()Lokio/k;` @kind interface;
  #L317234.  v3:= temp @kind object;
  #L317236.  v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` := v3 @kind object;
  #L31723a.  v1.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v4 @kind object;
  #L31723e.  v3:= 0I;
  #L317240.  if v2 == 0 then goto L31724c;
  #L317244.  v4:= 4I;
  #L317246.  v4:= new `byte`[v4];
  #L31724a.  goto L31724e;
  #L31724c.  v4:= v3 @kind object;
  #L31724e.  v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v4 @kind object;
  #L317252.  if v2 == 0 then goto L317260;
  #L317256.  v3:= new `okio.k$a`;
  #L31725a.  call `<init>`(v3) @signature `Lokio/k$a;.<init>:()V` @kind direct;
  #L317260.  v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` := v3 @kind object;
  #L317264.  return @kind void;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3172e8.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L3172ec.  if v0 != 0 then goto L3173c2;
  #L3172f0.  call temp:= `size`(v8) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L3172f6.  v0:= temp;
  #L3172f8.  v1:= (`long`) v0 @kind i2l;
  #L3172fa.  v3:= 125L;
  #L3172fe.  v5:= lcmp(v1, v3);
  #L317302.  if v5 > 0 then goto L3173b2;
  #L317306.  v7:= v7 ^| 128;
  #L31730a.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31730e.  call temp:= `n1`(v1, v7) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L317314.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L317318.  if v7 == 0 then goto L317392;
  #L31731c.  v7:= v0 ^| 128;
  #L317320.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317324.  call temp:= `n1`(v1, v7) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L31732a.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L31732e.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L317332.  call `nextBytes`(v7, v1) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L317338.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31733c.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L317340.  call temp:= `k1`(v7, v1) @signature `Lokio/k;.k1:([B)Lokio/k;` @kind virtual;
  #L317346.  if v0 <= 0 then goto L3173a6;
  #L31734a.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31734e.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L317354.  v0:= temp @kind wide;
  #L317356.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31735a.  call temp:= `j1`(v7, v8) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L317360.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317364.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L317368.  call temp:= `T0`(v7, v8) @signature `Lokio/k;.T0:(Lokio/k$a;)Lokio/k$a;` @kind virtual;
  #L31736e.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L317372.  call temp:= `c`(v7, v0) @signature `Lokio/k$a;.c:(J)I` @kind virtual;
  #L317378.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L31737c.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L317380.  call `toggleMask`(v7, v8) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/k$a;[B)V` @kind static;
  #L317386.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L31738a.  call `close`(v7) @signature `Lokio/k$a;.close:()V` @kind virtual;
  #L317390.  goto L3173a6;
  #L317392.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317396.  call temp:= `n1`(v7, v0) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L31739c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L3173a0.  call temp:= `j1`(v7, v8) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L3173a6.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.n` @kind object;
  #L3173aa.  call `flush`(v7) @signature `Lokio/n;.flush:()V` @kind interface;
  #L3173b0.  return @kind void;
  #L3173b2.  v7:= new `java.lang.IllegalArgumentException`;
  #L3173b6.  v8:= "Payload size must be less than or equal to 125" @kind object;
  #L3173ba.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3173c0.  throw v7;
  #L3173c2.  v7:= new `java.io.IOException`;
  #L3173c6.  v8:= "closed" @kind object;
  #L3173ca.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3173d0.  throw v7;
}
procedure `okio.g0` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/g0;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3171a8.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L3171ac.  if v0 != 0 then goto L3171ce;
  #L3171b0.  v0:= 1I;
  #L3171b2.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v0 @kind boolean;
  #L3171b6.  v1:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L3171ba.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L3171be.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L3171c2.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v0 @kind boolean;
  #L3171c6.  v3:= 0I;
  #L3171c8.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v3 @kind boolean;
  #L3171cc.  return v1 @kind object;
  #L3171ce.  v3:= new `java.lang.IllegalStateException`;
  #L3171d2.  v4:= "Another message writer is active. Did you call close()?" @kind object;
  #L3171d6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3171dc.  throw v3;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L317278.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L31727c.  if v2 != 0 then goto L317284;
  #L317280.  if v3 == 0 then goto L3172b0;
  #L317284.  if v2 == 0 then goto L31728e;
  #L317288.  call `validateCloseCode`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L31728e.  v0:= new `okio.k`;
  #L317292.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L317298.  call temp:= `s1`(v0, v2) @signature `Lokio/k;.s1:(I)Lokio/k;` @kind virtual;
  #L31729e.  if v3 == 0 then goto L3172a8;
  #L3172a2.  call temp:= `j1`(v0, v3) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L3172a8.  call temp:= `U0`(v0) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L3172ae.  v0:= temp @kind object;
  #L3172b0.  v2:= 8I;
  #L3172b4.  v3:= 1I;
  #L3172b6.  call `writeControlFrame`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L3172bc.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L3172c0.  return @kind void;
  #L3172c2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3172c4.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L3172c8.  throw v2;
  catch `java.lang.Throwable` @[L3172b6..L3172bc] goto L3172c2;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `long` v3 , `boolean` v5 , `boolean` v6 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;

  #L3173e4.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L3173e8.  if v0 != 0 then goto L317508;
  #L3173ec.  v0:= 0I;
  #L3173ee.  if v5 == 0 then goto L3173f4;
  #L3173f2.  goto L3173f6;
  #L3173f4.  v2:= 0I;
  #L3173f6.  if v6 == 0 then goto L3173fe;
  #L3173fa.  v2:= v2 ^| 128;
  #L3173fe.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317402.  call temp:= `n1`(v5, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L317408.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L31740c.  if v2 == 0 then goto L317414;
  #L317410.  v0:= 128I;
  #L317414.  v5:= 125L;
  #L317418.  v2:= lcmp(v3, v5);
  #L31741c.  if v2 > 0 then goto L317430;
  #L317420.  v2:= (`int`) v3 @kind l2i;
  #L317422.  v2:= v2 ^| v0 @kind int;
  #L317424.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317428.  call temp:= `n1`(v5, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L31742e.  goto L317472;
  #L317430.  v5:= 65535L;
  #L317436.  v2:= lcmp(v3, v5);
  #L31743a.  if v2 > 0 then goto L31745a;
  #L31743e.  v2:= v0 ^| 126;
  #L317442.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317446.  call temp:= `n1`(v5, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L31744c.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317450.  v5:= (`int`) v3 @kind l2i;
  #L317452.  call temp:= `s1`(v2, v5) @signature `Lokio/k;.s1:(I)Lokio/k;` @kind virtual;
  #L317458.  goto L317472;
  #L31745a.  v2:= v0 ^| 127;
  #L31745e.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L317462.  call temp:= `n1`(v5, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L317468.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31746c.  call temp:= `r1`(v2, v3) @signature `Lokio/k;.r1:(J)Lokio/k;` @kind virtual;
  #L317472.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L317476.  if v2 == 0 then goto L3174ee;
  #L31747a.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L31747e.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L317482.  call `nextBytes`(v2, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L317488.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L31748c.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L317490.  call temp:= `k1`(v2, v5) @signature `Lokio/k;.k1:([B)Lokio/k;` @kind virtual;
  #L317496.  v5:= 0L;
  #L31749a.  v2:= lcmp(v3, v5);
  #L31749e.  if v2 <= 0 then goto L3174fc;
  #L3174a2.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L3174a6.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L3174ac.  v5:= temp @kind wide;
  #L3174ae.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L3174b2.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.k` @kind object;
  #L3174b6.  call `write`(v2, v0, v3) @signature `Lokio/k;.write:(Lokio/k;J)V` @kind virtual;
  #L3174bc.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L3174c0.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L3174c4.  call temp:= `T0`(v2, v3) @signature `Lokio/k;.T0:(Lokio/k$a;)Lokio/k$a;` @kind virtual;
  #L3174ca.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L3174ce.  call temp:= `c`(v2, v5) @signature `Lokio/k$a;.c:(J)I` @kind virtual;
  #L3174d4.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L3174d8.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L3174dc.  call `toggleMask`(v2, v3) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/k$a;[B)V` @kind static;
  #L3174e2.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.k$a` @kind object;
  #L3174e6.  call `close`(v2) @signature `Lokio/k$a;.close:()V` @kind virtual;
  #L3174ec.  goto L3174fc;
  #L3174ee.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.k` @kind object;
  #L3174f2.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.k` @kind object;
  #L3174f6.  call `write`(v2, v5, v3) @signature `Lokio/k;.write:(Lokio/k;J)V` @kind virtual;
  #L3174fc.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.n` @kind object;
  #L317500.  call temp:= `G`(v2) @signature `Lokio/n;.G:()Lokio/n;` @kind interface;
  #L317506.  return @kind void;
  #L317508.  v2:= new `java.io.IOException`;
  #L31750c.  v3:= "closed" @kind object;
  #L317510.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L317516.  throw v2;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L317528.  v0:= 9I;
  #L31752c.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L317532.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L317544.  v0:= 10I;
  #L317548.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L31754e.  return @kind void;
}
