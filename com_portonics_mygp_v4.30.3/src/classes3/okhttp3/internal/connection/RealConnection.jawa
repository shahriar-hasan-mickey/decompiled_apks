record `okhttp3.internal.connection.RealConnection` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class, `okhttp3.Connection` @kind interface {
  `int` `okhttp3.internal.connection.RealConnection.allocationLimit` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.RealConnection.connectionPool` @AccessFlag PUBLIC_FINAL;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection.handshake` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.connection.RealConnection.http2Connection` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.RealConnection.idleAtNanos` @AccessFlag ;
  `boolean` `okhttp3.internal.connection.RealConnection.noNewExchanges` @AccessFlag ;
  `okhttp3.Protocol` `okhttp3.internal.connection.RealConnection.protocol` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.rawSocket` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.refusedStreamCount` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.RealConnection.route` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.connection.RealConnection.routeFailureCount` @AccessFlag ;
  `okio.n` `okhttp3.internal.connection.RealConnection.sink` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.socket` @AccessFlag PRIVATE;
  `okio.o` `okhttp3.internal.connection.RealConnection.source` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.successCount` @AccessFlag ;
  `java.util.List` `okhttp3.internal.connection.RealConnection.transmitters` @AccessFlag FINAL;
}
global `boolean` `@@okhttp3.internal.connection.RealConnection.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `int` `@@okhttp3.internal.connection.RealConnection.MAX_TUNNEL_ATTEMPTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.connection.RealConnection.NPE_THROW_WITH_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RealConnection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L306ccc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.internal.connection.RealConnectionPool` v3 @kind object, `okhttp3.Route` v4 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L306ce0.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L306ce6.  v0:= 1I;
  #L306ce8.  v2.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L306cec.  v0:= new `java.util.ArrayList`;
  #L306cf0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L306cf6.  v2.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` := v0 @kind object;
  #L306cfa.  v0:= 9223372036854775807L;
  #L306d04.  v2.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v0 @kind wide;
  #L306d08.  v2.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` := v3 @kind object;
  #L306d0c.  v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` := v4 @kind object;
  #L306d10.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.Call` v7 @kind object, `okhttp3.EventListener` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L307038.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L30703c.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L307042.  v0:= temp @kind object;
  #L307044.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307048.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L30704e.  v1:= temp @kind object;
  #L307050.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L307056.  v2:= temp @kind object;
  #L307058.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L30705c.  if v2 == v3 then goto L30707e;
  #L307060.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L307066.  v2:= temp @kind object;
  #L307068.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L30706c.  if v2 != v3 then goto L307072;
  #L307070.  goto L30707e;
  #L307072.  v1:= new `java.net.Socket`;
  #L307076.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L30707c.  goto L30708e;
  #L30707e.  call temp:= `socketFactory`(v1) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L307084.  v1:= temp @kind object;
  #L307086.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L30708c.  v1:= temp @kind object;
  #L30708e.  v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v1 @kind object;
  #L307092.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307096.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L30709c.  v1:= temp @kind object;
  #L30709e.  call `connectStart`(v8, v7, v1, v0) @signature `Lokhttp3/EventListener;.connectStart:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L3070a4.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L3070a8.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3070ae.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L3070b4.  v6:= temp @kind object;
  #L3070b6.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L3070ba.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3070be.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3070c4.  v8:= temp @kind object;
  #L3070c6.  call `connectSocket`(v6, v7, v8, v5) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L3070cc.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L3070d0.  call temp:= `m`(v5) @signature `Lokio/v;.m:(Ljava/net/Socket;)Lokio/i0;` @kind static;
  #L3070d6.  v5:= temp @kind object;
  #L3070d8.  call temp:= `d`(v5) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L3070de.  v5:= temp @kind object;
  #L3070e0.  v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` := v5 @kind object;
  #L3070e4.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L3070e8.  call temp:= `i`(v5) @signature `Lokio/v;.i:(Ljava/net/Socket;)Lokio/g0;` @kind static;
  #L3070ee.  v5:= temp @kind object;
  #L3070f0.  call temp:= `c`(v5) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L3070f6.  v5:= temp @kind object;
  #L3070f8.  v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` := v5 @kind object;
  #L3070fc.  goto L307118;
  #L3070fe.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L307100.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L307106.  v6:= temp @kind object;
  #L307108.  v7:= "throw with null exception" @kind object;
  #L30710c.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307112.  v6:= temp;
  #L307114.  if v6 != 0 then goto L30711a;
  #L307118.  return @kind void;
  #L30711a.  v6:= new `java.io.IOException`;
  #L30711e.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L307124.  throw v6;
  #L307126.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L307128.  v6:= new `java.net.ConnectException`;
  #L30712c.  v7:= new `java.lang.StringBuilder`;
  #L307130.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L307136.  v8:= "Failed to connect to " @kind object;
  #L30713a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307140.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307144.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L30714a.  v8:= temp @kind object;
  #L30714c.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307152.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L307158.  v7:= temp @kind object;
  #L30715a.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307160.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L307166.  throw v6;
  catch `java.net.ConnectException` @[L3070ae..L3070cc] goto L307126;
  catch `java.lang.NullPointerException` @[L3070cc..L3070fc] goto L3070fe;
}
procedure `void` `connectTls`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L307194.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307198.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L30719e.  v0:= temp @kind object;
  #L3071a0.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3071a6.  v1:= temp @kind object;
  #L3071a8.  v2:= 0I;
  #L3071aa.  v3:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L3071ae.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3071b4.  v4:= temp @kind object;
  #L3071b6.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L3071bc.  v4:= temp @kind object;
  #L3071be.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3071c4.  v5:= temp @kind object;
  #L3071c6.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L3071cc.  v5:= temp;
  #L3071ce.  v6:= 1I;
  #L3071d0.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L3071d6.  v1:= temp @kind object;
  #L3071d8.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L3071dc.  call temp:= `configureSecureSocket`(v8, v1) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;` @kind virtual;
  #L3071e2.  v8:= temp @kind object;
  #L3071e4.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L3071ea.  v3:= temp;
  #L3071ec.  if v3 == 0 then goto L307216;
  #L3071f0.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L3071f6.  v3:= temp @kind object;
  #L3071f8.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3071fe.  v4:= temp @kind object;
  #L307200.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L307206.  v4:= temp @kind object;
  #L307208.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L30720e.  v5:= temp @kind object;
  #L307210.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L307216.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L30721c.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L307222.  v3:= temp @kind object;
  #L307224.  call temp:= `get`(v3) @signature `Lokhttp3/Handshake;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind static;
  #L30722a.  v4:= temp @kind object;
  #L30722c.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L307232.  v5:= temp @kind object;
  #L307234.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30723a.  v6:= temp @kind object;
  #L30723c.  call temp:= `host`(v6) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L307242.  v6:= temp @kind object;
  #L307244.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L30724a.  v3:= temp;
  #L30724c.  if v3 != 0 then goto L307344;
  #L307250.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L307256.  v8:= temp @kind object;
  #L307258.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L30725e.  v2:= temp;
  #L307260.  v3:= "Hostname " @kind object;
  #L307264.  if v2 != 0 then goto L307300;
  #L307268.  v2:= 0I;
  #L30726a.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L307270.  v8:= temp @kind object;
  #L307272.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L307276.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L30727a.  v4:= new `java.lang.StringBuilder`;
  #L30727e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L307284.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30728a.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L307290.  v0:= temp @kind object;
  #L307292.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L307298.  v0:= temp @kind object;
  #L30729a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072a0.  v0:= " not verified:\n    certificate: " @kind object;
  #L3072a4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072aa.  call temp:= `pin`(v8) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L3072b0.  v0:= temp @kind object;
  #L3072b2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072b8.  v0:= "\n    DN: " @kind object;
  #L3072bc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072c2.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L3072c8.  v0:= temp @kind object;
  #L3072ca.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L3072d0.  v0:= temp @kind object;
  #L3072d2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072d8.  v0:= "\n    subjectAltNames: " @kind object;
  #L3072dc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072e2.  call temp:= `allSubjectAltNames`(v8) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L3072e8.  v8:= temp @kind object;
  #L3072ea.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3072f0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3072f6.  v8:= temp @kind object;
  #L3072f8.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3072fe.  throw v2;
  #L307300.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L307304.  v2:= new `java.lang.StringBuilder`;
  #L307308.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30730e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307314.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30731a.  v0:= temp @kind object;
  #L30731c.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L307322.  v0:= temp @kind object;
  #L307324.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30732a.  v0:= " not verified (no certificates)" @kind object;
  #L30732e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307334.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30733a.  v0:= temp @kind object;
  #L30733c.  call `<init>`(v8, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307342.  throw v8;
  #L307344.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L30734a.  v3:= temp @kind object;
  #L30734c.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L307352.  v0:= temp @kind object;
  #L307354.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L30735a.  v0:= temp @kind object;
  #L30735c.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L307362.  v5:= temp @kind object;
  #L307364.  call `check`(v3, v0, v5) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L30736a.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L307370.  v8:= temp;
  #L307372.  if v8 == 0 then goto L307386;
  #L307376.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L30737c.  v8:= temp @kind object;
  #L30737e.  call temp:= `getSelectedProtocol`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L307384.  v2:= temp @kind object;
  #L307386.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v1 @kind object;
  #L30738a.  call temp:= `m`(v1) @signature `Lokio/v;.m:(Ljava/net/Socket;)Lokio/i0;` @kind static;
  #L307390.  v8:= temp @kind object;
  #L307392.  call temp:= `d`(v8) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L307398.  v8:= temp @kind object;
  #L30739a.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` := v8 @kind object;
  #L30739e.  v8:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3073a2.  call temp:= `i`(v8) @signature `Lokio/v;.i:(Ljava/net/Socket;)Lokio/g0;` @kind static;
  #L3073a8.  v8:= temp @kind object;
  #L3073aa.  call temp:= `c`(v8) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L3073b0.  v8:= temp @kind object;
  #L3073b2.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` := v8 @kind object;
  #L3073b6.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v4 @kind object;
  #L3073ba.  if v2 == 0 then goto L3073c8;
  #L3073be.  call temp:= `get`(v2) @signature `Lokhttp3/Protocol;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind static;
  #L3073c4.  v8:= temp @kind object;
  #L3073c6.  goto L3073cc;
  #L3073c8.  v8:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L3073cc.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v8 @kind object;
  #L3073d0.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L3073d6.  v8:= temp @kind object;
  #L3073d8.  call `afterHandshake`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L3073de.  return @kind void;
  #L3073e0.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3073e2.  v2:= v1 @kind object;
  #L3073e4.  goto L30740c;
  #L3073e6.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3073e8.  v2:= v1 @kind object;
  #L3073ea.  goto L3073f2;
  #L3073ec.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3073ee.  goto L30740c;
  #L3073f0.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3073f2.  call temp:= `isAndroidGetsocknameError`(v8) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3073f8.  v0:= temp;
  #L3073fa.  if v0 == 0 then goto L30740a;
  #L3073fe.  v0:= new `java.io.IOException`;
  #L307402.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L307408.  throw v0;
  #L30740a.  throw v8;
  #L30740c.  if v2 == 0 then goto L30741e;
  #L307410.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L307416.  v0:= temp @kind object;
  #L307418.  call `afterHandshake`(v0, v2) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L30741e.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L307424.  throw v8;
  catch `java.lang.AssertionError` @[L3071aa..L3071dc] goto L3073f0;
  catch `java.lang.Throwable` @[L3071aa..L3071dc] goto L3073ec;
  catch `java.lang.AssertionError` @[L3071dc..L307260] goto L3073e6;
  catch `java.lang.Throwable` @[L3071dc..L307260] goto L3073e0;
  catch `java.lang.AssertionError` @[L30726a..L3073d0] goto L3073e6;
  catch `java.lang.Throwable` @[L30726a..L3073d0] goto L3073e0;
  catch `java.lang.Throwable` @[L3073f2..L30740c] goto L3073ec;
}
procedure `void` `connectTunnel`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.Call` v10 @kind object, `okhttp3.EventListener` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30746c.  call temp:= `createTunnelRequest`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @kind direct;
  #L307472.  v0:= temp @kind object;
  #L307474.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30747a.  v1:= temp @kind object;
  #L30747c.  v2:= 0I;
  #L30747e.  v3:= 21I;
  #L307482.  if v2 >= v3 then goto L3074d6;
  #L307486.  call `connectSocket`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L30748c.  call temp:= `createTunnel`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @kind direct;
  #L307492.  v0:= temp @kind object;
  #L307494.  if v0 != 0 then goto L30749a;
  #L307498.  goto L3074d6;
  #L30749a.  v3:= v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L30749e.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L3074a4.  v3:= 0I;
  #L3074a6.  v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v3 @kind object;
  #L3074aa.  v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` := v3 @kind object;
  #L3074ae.  v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` := v3 @kind object;
  #L3074b2.  v4:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3074b6.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3074bc.  v4:= temp @kind object;
  #L3074be.  v5:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3074c2.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L3074c8.  v5:= temp @kind object;
  #L3074ca.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L3074d0.  v2:= v2 + 1;
  #L3074d4.  goto L30747e;
  #L3074d6.  return @kind void;
}
procedure `okhttp3.Request` `createTunnel`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `okhttp3.Request` v9 @kind object, `okhttp3.HttpUrl` v10 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3068f0.  v0:= new `java.lang.StringBuilder`;
  #L3068f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3068fa.  v1:= "CONNECT " @kind object;
  #L3068fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306904.  v1:= 1I;
  #L306906.  call temp:= `hostHeader`(v10, v1) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L30690c.  v10:= temp @kind object;
  #L30690e.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306914.  v10:= " HTTP/1.1" @kind object;
  #L306918.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30691e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L306924.  v10:= temp @kind object;
  #L306926.  v0:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L30692a.  v1:= v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L30692e.  v2:= v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306932.  v3:= 0I;
  #L306934.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/o;Lokio/n;)V` @kind direct;
  #L30693a.  v1:= v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L30693e.  call temp:= `timeout`(v1) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L306944.  v1:= temp @kind object;
  #L306946.  v4:= (`long`) v7 @kind i2l;
  #L306948.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30694c.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L306952.  v1:= v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306956.  call temp:= `timeout`(v1) @signature `Lokio/g0;.timeout:()Lokio/l0;` @kind interface;
  #L30695c.  v1:= temp @kind object;
  #L30695e.  v4:= (`long`) v8 @kind i2l;
  #L306960.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L306966.  call temp:= `headers`(v9) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L30696c.  v1:= temp @kind object;
  #L30696e.  call `writeRequest`(v0, v1, v10) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V` @kind virtual;
  #L306974.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.finishRequest:()V` @kind virtual;
  #L30697a.  v1:= 0I;
  #L30697c.  call temp:= `readResponseHeaders`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L306982.  v1:= temp @kind object;
  #L306984.  call temp:= `request`(v1, v9) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30698a.  v9:= temp @kind object;
  #L30698c.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L306992.  v9:= temp @kind object;
  #L306994.  call `skipConnectBody`(v0, v9) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.skipConnectBody:(Lokhttp3/Response;)V` @kind virtual;
  #L30699a.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L3069a0.  v0:= temp;
  #L3069a2.  v1:= 200I;
  #L3069a6.  if v0 == v1 then goto L306a3e;
  #L3069aa.  v1:= 407I;
  #L3069ae.  if v0 != v1 then goto L306a08;
  #L3069b2.  v0:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3069b6.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L3069bc.  v0:= temp @kind object;
  #L3069be.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L3069c4.  v0:= temp @kind object;
  #L3069c6.  v1:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3069ca.  call temp:= `authenticate`(v0, v1, v9) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L3069d0.  v0:= temp @kind object;
  #L3069d2.  if v0 == 0 then goto L3069f8;
  #L3069d6.  v1:= "Connection" @kind object;
  #L3069da.  call temp:= `header`(v9, v1) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3069e0.  v9:= temp @kind object;
  #L3069e2.  v1:= "close" @kind object;
  #L3069e6.  call temp:= `equalsIgnoreCase`(v1, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3069ec.  v9:= temp;
  #L3069ee.  if v9 == 0 then goto L3069f4;
  #L3069f2.  return v0 @kind object;
  #L3069f4.  v9:= v0 @kind object;
  #L3069f6.  goto L306926;
  #L3069f8.  v7:= new `java.io.IOException`;
  #L3069fc.  v8:= "Failed to authenticate with proxy" @kind object;
  #L306a00.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306a06.  throw v7;
  #L306a08.  v7:= new `java.io.IOException`;
  #L306a0c.  v8:= new `java.lang.StringBuilder`;
  #L306a10.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L306a16.  v10:= "Unexpected response code for CONNECT: " @kind object;
  #L306a1a.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306a20.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L306a26.  v9:= temp;
  #L306a28.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L306a2e.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L306a34.  v8:= temp @kind object;
  #L306a36.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306a3c.  throw v7;
  #L306a3e.  v7:= v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L306a42.  call temp:= `N`(v7) @signature `Lokio/o;.N:()Lokio/k;` @kind interface;
  #L306a48.  v7:= temp @kind object;
  #L306a4a.  call temp:= `O`(v7) @signature `Lokio/k;.O:()Z` @kind virtual;
  #L306a50.  v7:= temp;
  #L306a52.  if v7 == 0 then goto L306a70;
  #L306a56.  v7:= v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306a5a.  call temp:= `q`(v7) @signature `Lokio/n;.q:()Lokio/k;` @kind interface;
  #L306a60.  v7:= temp @kind object;
  #L306a62.  call temp:= `O`(v7) @signature `Lokio/k;.O:()Z` @kind virtual;
  #L306a68.  v7:= temp;
  #L306a6a.  if v7 == 0 then goto L306a70;
  #L306a6e.  return v3 @kind object;
  #L306a70.  v7:= new `java.io.IOException`;
  #L306a74.  v8:= "TLS tunnel buffered too many bytes!" @kind object;
  #L306a78.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306a7e.  goto L306a82;
  #L306a80.  throw v7;
  #L306a82.  goto L306a80;
}
procedure `okhttp3.Request` `createTunnelRequest`(`okhttp3.internal.connection.RealConnection` v4 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306a94.  v0:= new `okhttp3.Request$Builder`;
  #L306a98.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L306a9e.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306aa2.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306aa8.  v1:= temp @kind object;
  #L306aaa.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L306ab0.  v1:= temp @kind object;
  #L306ab2.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L306ab8.  v0:= temp @kind object;
  #L306aba.  v1:= "CONNECT" @kind object;
  #L306abe.  v2:= 0I;
  #L306ac0.  call temp:= `method`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L306ac6.  v0:= temp @kind object;
  #L306ac8.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306acc.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306ad2.  v1:= temp @kind object;
  #L306ad4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L306ada.  v1:= temp @kind object;
  #L306adc.  v2:= 1I;
  #L306ade.  call temp:= `hostHeader`(v1, v2) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L306ae4.  v1:= temp @kind object;
  #L306ae6.  v2:= "Host" @kind object;
  #L306aea.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L306af0.  v0:= temp @kind object;
  #L306af2.  v1:= "Proxy-Connection" @kind object;
  #L306af6.  v2:= "Keep-Alive" @kind object;
  #L306afa.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L306b00.  v0:= temp @kind object;
  #L306b02.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L306b08.  v1:= temp @kind object;
  #L306b0a.  v2:= "User-Agent" @kind object;
  #L306b0e.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L306b14.  v0:= temp @kind object;
  #L306b16.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L306b1c.  v0:= temp @kind object;
  #L306b1e.  v1:= new `okhttp3.Response$Builder`;
  #L306b22.  call `<init>`(v1) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L306b28.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b2e.  v1:= temp @kind object;
  #L306b30.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L306b34.  call temp:= `protocol`(v1, v2) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b3a.  v1:= temp @kind object;
  #L306b3c.  v2:= 407I;
  #L306b40.  call temp:= `code`(v1, v2) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b46.  v1:= temp @kind object;
  #L306b48.  v2:= "Preemptive Authenticate" @kind object;
  #L306b4c.  call temp:= `message`(v1, v2) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b52.  v1:= temp @kind object;
  #L306b54.  v2:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L306b58.  call temp:= `body`(v1, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b5e.  v1:= temp @kind object;
  #L306b60.  v2:= -1L;
  #L306b64.  call temp:= `sentRequestAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b6a.  v1:= temp @kind object;
  #L306b6c.  call temp:= `receivedResponseAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b72.  v1:= temp @kind object;
  #L306b74.  v2:= "Proxy-Authenticate" @kind object;
  #L306b78.  v3:= "OkHttp-Preemptive" @kind object;
  #L306b7c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Response$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L306b82.  v1:= temp @kind object;
  #L306b84.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L306b8a.  v1:= temp @kind object;
  #L306b8c.  v2:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306b90.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306b96.  v2:= temp @kind object;
  #L306b98.  call temp:= `proxyAuthenticator`(v2) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L306b9e.  v2:= temp @kind object;
  #L306ba0.  v3:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306ba4.  call temp:= `authenticate`(v2, v3, v1) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L306baa.  v1:= temp @kind object;
  #L306bac.  if v1 == 0 then goto L306bb2;
  #L306bb0.  v0:= v1 @kind object;
  #L306bb2.  return v0 @kind object;
}
procedure `void` `establishProtocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v2 @kind object, `int` v3 , `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3074e8.  v0:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3074ec.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L3074f2.  v0:= temp @kind object;
  #L3074f4.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3074fa.  v0:= temp @kind object;
  #L3074fc.  if v0 != 0 then goto L30754a;
  #L307500.  v2:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307504.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L30750a.  v2:= temp @kind object;
  #L30750c.  call temp:= `protocols`(v2) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L307512.  v2:= temp @kind object;
  #L307514.  v4:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L307518.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30751e.  v2:= temp;
  #L307520.  if v2 == 0 then goto L307538;
  #L307524.  v2:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L307528.  v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L30752c.  v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v4 @kind object;
  #L307530.  call `startHttp2`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @kind direct;
  #L307536.  return @kind void;
  #L307538.  v2:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L30753c.  v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L307540.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L307544.  v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L307548.  return @kind void;
  #L30754a.  call `secureConnectStart`(v5, v4) @signature `Lokhttp3/EventListener;.secureConnectStart:(Lokhttp3/Call;)V` @kind virtual;
  #L307550.  call `connectTls`(v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @kind direct;
  #L307556.  v2:= v1.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L30755a.  call `secureConnectEnd`(v5, v4, v2) @signature `Lokhttp3/EventListener;.secureConnectEnd:(Lokhttp3/Call;Lokhttp3/Handshake;)V` @kind virtual;
  #L307560.  v2:= v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L307564.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L307568.  if v2 != v4 then goto L307572;
  #L30756c.  call `startHttp2`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @kind direct;
  #L307572.  return @kind void;
}
procedure `boolean` `routeMatchesAny`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.routeMatchesAny:(Ljava/util/List;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L306678.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30667e.  v0:= temp;
  #L306680.  v1:= 0I;
  #L306682.  v2:= 0I;
  #L306684.  if v2 >= v0 then goto L3066f2;
  #L306688.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30668e.  v3:= temp @kind object;
  #L306690.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L306694.  call temp:= `proxy`(v3) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L30669a.  v4:= temp @kind object;
  #L30669c.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3066a2.  v4:= temp @kind object;
  #L3066a4.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3066a8.  if v4 != v5 then goto L3066ec;
  #L3066ac.  v4:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3066b0.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L3066b6.  v4:= temp @kind object;
  #L3066b8.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3066be.  v4:= temp @kind object;
  #L3066c0.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3066c4.  if v4 != v5 then goto L3066ec;
  #L3066c8.  v4:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3066cc.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3066d2.  v4:= temp @kind object;
  #L3066d4.  call temp:= `socketAddress`(v3) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3066da.  v3:= temp @kind object;
  #L3066dc.  call temp:= `equals`(v4, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3066e2.  v3:= temp;
  #L3066e4.  if v3 == 0 then goto L3066ec;
  #L3066e8.  v7:= 1I;
  #L3066ea.  return v7;
  #L3066ec.  v2:= v2 + 1;
  #L3066f0.  goto L306684;
  #L3066f2.  return v1;
}
procedure `void` `startHttp2`(`okhttp3.internal.connection.RealConnection` v5 @kind this, `int` v6 ) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L307610.  v0:= v5.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L307614.  v1:= 0I;
  #L307616.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L30761c.  v0:= new `okhttp3.internal.http2.Http2Connection$Builder`;
  #L307620.  v1:= 1I;
  #L307622.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(Z)V` @kind direct;
  #L307628.  v1:= v5.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L30762c.  v2:= v5.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L307630.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L307636.  v2:= temp @kind object;
  #L307638.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30763e.  v2:= temp @kind object;
  #L307640.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L307646.  v2:= temp @kind object;
  #L307648.  v3:= v5.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L30764c.  v4:= v5.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L307650.  call temp:= `socket`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/o;Lokio/n;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L307656.  v0:= temp @kind object;
  #L307658.  call temp:= `listener`(v0, v5) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L30765e.  v0:= temp @kind object;
  #L307660.  call temp:= `pingIntervalMillis`(v0, v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L307666.  v6:= temp @kind object;
  #L307668.  call temp:= `build`(v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L30766e.  v6:= temp @kind object;
  #L307670.  v5.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v6 @kind object;
  #L307674.  call `start`(v6) @signature `Lokhttp3/internal/http2/Http2Connection;.start:()V` @kind virtual;
  #L30767a.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnection` `testConnection`(`okhttp3.internal.connection.RealConnectionPool` v1 @kind object, `okhttp3.Route` v2 @kind object, `java.net.Socket` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/RealConnection;.testConnection:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;` @AccessFlag STATIC {
    temp;
    v0;

  #L306bdc.  v0:= new `okhttp3.internal.connection.RealConnection`;
  #L306be0.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L306be6.  v0.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v3 @kind object;
  #L306bea.  v0.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v4 @kind wide;
  #L306bee.  return v0 @kind object;
}
procedure `void` `cancel`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306d24.  v0:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L306d28.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L306d2e.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.RealConnection` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.Call` v22 @kind object, `okhttp3.EventListener` v23 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L306d40.  v7:= v16 @kind object;
  #L306d44.  v8:= v22 @kind object;
  #L306d48.  v9:= v23 @kind object;
  #L306d4c.  v0:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L306d50.  if v0 != 0 then goto L306fe0;
  #L306d54.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306d58.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306d5e.  v0:= temp @kind object;
  #L306d60.  call temp:= `connectionSpecs`(v0) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L306d66.  v0:= temp @kind object;
  #L306d68.  v10:= new `okhttp3.internal.connection.ConnectionSpecSelector`;
  #L306d6c.  call `<init>`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @kind direct;
  #L306d72.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306d76.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306d7c.  v1:= temp @kind object;
  #L306d7e.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L306d84.  v1:= temp @kind object;
  #L306d86.  if v1 != 0 then goto L306e28;
  #L306d8a.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L306d8e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L306d94.  v0:= temp;
  #L306d96.  if v0 == 0 then goto L306e0e;
  #L306d9a.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306d9e.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306da4.  v0:= temp @kind object;
  #L306da6.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L306dac.  v0:= temp @kind object;
  #L306dae.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L306db4.  v0:= temp @kind object;
  #L306db6.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L306dbc.  v1:= temp @kind object;
  #L306dbe.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L306dc4.  v1:= temp;
  #L306dc6.  if v1 == 0 then goto L306dcc;
  #L306dca.  goto L306e4c;
  #L306dcc.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L306dd0.  v2:= new `java.net.UnknownServiceException`;
  #L306dd4.  v3:= new `java.lang.StringBuilder`;
  #L306dd8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L306dde.  v4:= "CLEARTEXT communication to " @kind object;
  #L306de2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306de8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306dee.  v0:= " not permitted by network security policy" @kind object;
  #L306df2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306df8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L306dfe.  v0:= temp @kind object;
  #L306e00.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306e06.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L306e0c.  throw v1;
  #L306e0e.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L306e12.  v1:= new `java.net.UnknownServiceException`;
  #L306e16.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L306e1a.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306e20.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L306e26.  throw v0;
  #L306e28.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306e2c.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306e32.  v0:= temp @kind object;
  #L306e34.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L306e3a.  v0:= temp @kind object;
  #L306e3c.  v1:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L306e40.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L306e46.  v0:= temp;
  #L306e48.  if v0 != 0 then goto L306fc6;
  #L306e4c.  v11:= 0I;
  #L306e4e.  v12:= v11 @kind object;
  #L306e50.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306e54.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L306e5a.  v0:= temp;
  #L306e5c.  if v0 == 0 then goto L306e92;
  #L306e60.  v1:= v16 @kind object;
  #L306e64.  v2:= v17;
  #L306e68.  v3:= v18;
  #L306e6c.  v4:= v19;
  #L306e70.  v5:= v22 @kind object;
  #L306e74.  v6:= v23 @kind object;
  #L306e78.  call `connectTunnel`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L306e7e.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L306e82.  if v0 != 0 then goto L306e88;
  #L306e86.  goto L306ecc;
  #L306e88.  v13:= v17;
  #L306e8c.  v14:= v18;
  #L306e90.  goto L306ea0;
  #L306e92.  v13:= v17;
  #L306e96.  v14:= v18;
  #L306e9a.  call `connectSocket`(v7, v13, v14, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L306ea0.  v15:= v20;
  #L306ea4.  call `establishProtocol`(v7, v10, v15, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L306eaa.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306eae.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L306eb4.  v0:= temp @kind object;
  #L306eb6.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306eba.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L306ec0.  v1:= temp @kind object;
  #L306ec2.  v2:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L306ec6.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L306ecc.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306ed0.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L306ed6.  v0:= temp;
  #L306ed8.  if v0 == 0 then goto L306f00;
  #L306edc.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L306ee0.  if v0 == 0 then goto L306ee6;
  #L306ee4.  goto L306f00;
  #L306ee6.  v0:= new `java.net.ProtocolException`;
  #L306eea.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L306eee.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306ef4.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L306ef8.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L306efe.  throw v1;
  #L306f00.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L306f04.  if v0 == 0 then goto L306f28;
  #L306f08.  v1:= v7.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L306f0c.  @monitorenter v1
  #L306f0e.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L306f12.  call temp:= `maxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L306f18.  v0:= temp;
  #L306f1a.  v7.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L306f1e.  @monitorexit v1
  #L306f20.  goto L306f28;
  #L306f22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L306f24.  @monitorexit v1
  #L306f26.  throw v0;
  #L306f28.  return @kind void;
  #L306f2a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L306f2c.  goto L306f40;
  #L306f2e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L306f30.  goto L306f3c;
  #L306f32.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L306f34.  v13:= v17;
  #L306f38.  v14:= v18;
  #L306f3c.  v15:= v20;
  #L306f40.  v1:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306f44.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L306f4a.  v1:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L306f4e.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L306f54.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v11 @kind object;
  #L306f58.  v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v11 @kind object;
  #L306f5c.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` := v11 @kind object;
  #L306f60.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` := v11 @kind object;
  #L306f64.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v11 @kind object;
  #L306f68.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L306f6c.  v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v11 @kind object;
  #L306f70.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306f74.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L306f7a.  v3:= temp @kind object;
  #L306f7c.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306f80.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L306f86.  v4:= temp @kind object;
  #L306f88.  v5:= 0I;
  #L306f8a.  v1:= v23 @kind object;
  #L306f8e.  v2:= v22 @kind object;
  #L306f92.  v6:= v0 @kind object;
  #L306f94.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/EventListener;.connectFailed:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L306f9a.  if v12 != 0 then goto L306faa;
  #L306f9e.  v12:= new `okhttp3.internal.connection.RouteException`;
  #L306fa2.  call `<init>`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L306fa8.  goto L306fb0;
  #L306faa.  call `addConnectException`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L306fb0.  if v21 == 0 then goto L306fc4;
  #L306fb4.  call temp:= `connectionFailed`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @kind virtual;
  #L306fba.  v0:= temp;
  #L306fbc.  if v0 == 0 then goto L306fc4;
  #L306fc0.  goto L306e50;
  #L306fc4.  throw v12;
  #L306fc6.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L306fca.  v1:= new `java.net.UnknownServiceException`;
  #L306fce.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L306fd2.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306fd8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L306fde.  throw v0;
  #L306fe0.  v0:= new `java.lang.IllegalStateException`;
  #L306fe4.  v1:= "already connected" @kind object;
  #L306fe8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306fee.  goto L306ff2;
  #L306ff0.  throw v0;
  #L306ff2.  goto L306ff0;
  catch `java.io.IOException` @[L306e50..L306e82] goto L306f32;
  catch `java.io.IOException` @[L306e9a..L306ea0] goto L306f2e;
  catch `java.io.IOException` @[L306ea4..L306ecc] goto L306f2a;
  catch `java.lang.Throwable` @[L306f0e..L306f26] goto L306f22;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3068c0.  v0:= v1.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L3068c4.  return v0 @kind object;
}
procedure `boolean` `isEligible`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.Address` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible:(Lokhttp3/Address;Ljava/util/List;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L306468.  v0:= v3.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L30646c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L306472.  v0:= temp;
  #L306474.  v1:= v3.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int`;
  #L306478.  v2:= 0I;
  #L30647a.  if v0 >= v1 then goto L30655a;
  #L30647e.  v0:= v3.`okhttp3.internal.connection.RealConnection.noNewExchanges` @type ^`boolean` @kind boolean;
  #L306482.  if v0 == 0 then goto L306488;
  #L306486.  goto L30655a;
  #L306488.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L30648c.  v1:= v3.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306490.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306496.  v1:= temp @kind object;
  #L306498.  call temp:= `equalsNonHost`(v0, v1, v4) @signature `Lokhttp3/internal/Internal;.equalsNonHost:(Lokhttp3/Address;Lokhttp3/Address;)Z` @kind virtual;
  #L30649e.  v0:= temp;
  #L3064a0.  if v0 != 0 then goto L3064a6;
  #L3064a4.  return v2;
  #L3064a6.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3064ac.  v0:= temp @kind object;
  #L3064ae.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L3064b4.  v0:= temp @kind object;
  #L3064b6.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L3064bc.  v1:= temp @kind object;
  #L3064be.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L3064c4.  v1:= temp @kind object;
  #L3064c6.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3064cc.  v1:= temp @kind object;
  #L3064ce.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L3064d4.  v1:= temp @kind object;
  #L3064d6.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3064dc.  v0:= temp;
  #L3064de.  v1:= 1I;
  #L3064e0.  if v0 == 0 then goto L3064e6;
  #L3064e4.  return v1;
  #L3064e6.  v0:= v3.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L3064ea.  if v0 != 0 then goto L3064f0;
  #L3064ee.  return v2;
  #L3064f0.  if v5 == 0 then goto L30655a;
  #L3064f4.  call temp:= `routeMatchesAny`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.routeMatchesAny:(Ljava/util/List;)Z` @kind direct;
  #L3064fa.  v5:= temp;
  #L3064fc.  if v5 != 0 then goto L306502;
  #L306500.  goto L30655a;
  #L306502.  call temp:= `hostnameVerifier`(v4) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L306508.  v5:= temp @kind object;
  #L30650a.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L30650e.  if v5 == v0 then goto L306514;
  #L306512.  return v2;
  #L306514.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30651a.  v5:= temp @kind object;
  #L30651c.  call temp:= `supportsUrl`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L306522.  v5:= temp;
  #L306524.  if v5 != 0 then goto L30652a;
  #L306528.  return v2;
  #L30652a.  call temp:= `certificatePinner`(v4) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L306530.  v5:= temp @kind object;
  #L306532.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L306538.  v4:= temp @kind object;
  #L30653a.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L306540.  v4:= temp @kind object;
  #L306542.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L306548.  v0:= temp @kind object;
  #L30654a.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L306550.  v0:= temp @kind object;
  #L306552.  call `check`(v5, v4, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L306558.  return v1;
  #L30655a.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L30652a..L306558] goto L30655a;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `boolean` v5 ) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30657c.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306580.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L306586.  v0:= temp;
  #L306588.  v1:= 0I;
  #L30658a.  if v0 != 0 then goto L306620;
  #L30658e.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306592.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L306598.  v0:= temp;
  #L30659a.  if v0 != 0 then goto L306620;
  #L30659e.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3065a2.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L3065a8.  v0:= temp;
  #L3065aa.  if v0 == 0 then goto L3065b0;
  #L3065ae.  goto L306620;
  #L3065b0.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L3065b4.  if v0 == 0 then goto L3065ca;
  #L3065b8.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3065be.  v1:= temp @kind wide;
  #L3065c0.  call temp:= `isHealthy`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.isHealthy:(J)Z` @kind virtual;
  #L3065c6.  v5:= temp;
  #L3065c8.  return v5;
  #L3065ca.  v0:= 1I;
  #L3065cc.  if v5 == 0 then goto L30661e;
  #L3065d0.  v5:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3065d4.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L3065da.  v5:= temp;
  #L3065dc.  v2:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3065e0.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3065e6.  v2:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L3065ea.  call temp:= `O`(v2) @signature `Lokio/o;.O:()Z` @kind interface;
  #L3065f0.  v2:= temp;
  #L3065f2.  if v2 == 0 then goto L306602;
  #L3065f6.  v2:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3065fa.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L306600.  return v1;
  #L306602.  v2:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306606.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L30660c.  return v0;
  #L30660e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L306610.  v3:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306614.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L30661a.  throw v2;
  #L30661c.  return v1;
  #L30661e.  return v0;
  #L306620.  return v1;
  catch `java.net.SocketTimeoutException` @[L3065d0..L3065dc] goto L30661e;
  catch `java.io.IOException` @[L3065d0..L3065dc] goto L30661c;
  catch `java.lang.Throwable` @[L3065dc..L3065f2] goto L30660e;
  catch `java.net.SocketTimeoutException` @[L3065f6..L30661c] goto L30661e;
  catch `java.io.IOException` @[L3065f6..L30661c] goto L30661c;
}
procedure `boolean` `isMultiplexed`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306658.  v0:= v1.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L30665c.  if v0 == 0 then goto L306664;
  #L306660.  v0:= 1I;
  #L306662.  goto L306666;
  #L306664.  v0:= 0I;
  #L306666.  return v0;
}
procedure `okhttp3.internal.http.ExchangeCodec` `newCodec`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.OkHttpClient` v5 @kind object, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;)Lokhttp3/internal/http/ExchangeCodec;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306c00.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L306c04.  if v0 == 0 then goto L306c18;
  #L306c08.  v0:= new `okhttp3.internal.http2.Http2ExchangeCodec`;
  #L306c0c.  v1:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L306c10.  call `<init>`(v0, v5, v4, v6, v1) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L306c16.  return v0 @kind object;
  #L306c18.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306c1c.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L306c22.  v1:= temp;
  #L306c24.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L306c2a.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L306c2e.  call temp:= `timeout`(v0) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L306c34.  v0:= temp @kind object;
  #L306c36.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L306c3c.  v1:= temp;
  #L306c3e.  v1:= (`long`) v1 @kind i2l;
  #L306c40.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L306c44.  call temp:= `timeout`(v0, v1, v3) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L306c4a.  v0:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306c4e.  call temp:= `timeout`(v0) @signature `Lokio/g0;.timeout:()Lokio/l0;` @kind interface;
  #L306c54.  v0:= temp @kind object;
  #L306c56.  call temp:= `writeTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.writeTimeoutMillis:()I` @kind interface;
  #L306c5c.  v6:= temp;
  #L306c5e.  v1:= (`long`) v6 @kind i2l;
  #L306c60.  call temp:= `timeout`(v0, v1, v3) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L306c66.  v6:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L306c6a.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L306c6e.  v1:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306c72.  call `<init>`(v6, v5, v4, v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/o;Lokio/n;)V` @kind direct;
  #L306c78.  return v6 @kind object;
}
procedure `okhttp3.internal.ws.RealWebSocket$Streams` `newWebSocketStreams`(`okhttp3.internal.connection.RealConnection` v8 @kind this, `okhttp3.internal.connection.Exchange` v9 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newWebSocketStreams:(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/ws/RealWebSocket$Streams;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L306c8c.  v0:= v8.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L306c90.  v1:= 0I;
  #L306c92.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L306c98.  call `noNewExchanges`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges:()V` @kind virtual;
  #L306c9e.  v0:= new `okhttp3.internal.connection.RealConnection$1`;
  #L306ca2.  v5:= v8.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.o` @kind object;
  #L306ca6.  v6:= v8.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.n` @kind object;
  #L306caa.  v4:= 1I;
  #L306cac.  v2:= v0 @kind object;
  #L306cae.  v3:= v8 @kind object;
  #L306cb0.  v7:= v9 @kind object;
  #L306cb2.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/RealConnection$1;.<init>:(Lokhttp3/internal/connection/RealConnection;ZLokio/o;Lokio/n;Lokhttp3/internal/connection/Exchange;)V` @kind direct;
  #L306cb8.  return v0 @kind object;
}
procedure `void` `noNewExchanges`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307584.  v0:= v2.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307588.  @monitorenter v0
  #L30758a.  v1:= 1I;
  #L30758c.  v2.`okhttp3.internal.connection.RealConnection.noNewExchanges` @type ^`boolean` := v1 @kind boolean;
  #L307590.  @monitorexit v0
  #L307592.  return @kind void;
  #L307594.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307596.  @monitorexit v0
  #L307598.  throw v1;
  catch `java.lang.Throwable` @[L30758c..L307598] goto L307594;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onSettings:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3075b8.  v0:= v1.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3075bc.  @monitorenter v0
  #L3075be.  call temp:= `maxConcurrentStreams`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L3075c4.  v2:= temp;
  #L3075c6.  v1.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v2;
  #L3075ca.  @monitorexit v0
  #L3075cc.  return @kind void;
  #L3075ce.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3075d0.  @monitorexit v0
  #L3075d2.  throw v2;
  catch `java.lang.Throwable` @[L3075be..L3075d2] goto L3075ce;
}
procedure `void` `onStream`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.internal.http2.Http2Stream` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3075f0.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3075f4.  v1:= 0I;
  #L3075f6.  call `close`(v3, v0, v1) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L3075fc.  return @kind void;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3068d8.  v0:= v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L3068dc.  return v0 @kind object;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306bc4.  v0:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306bc8.  return v0 @kind object;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3068a8.  v0:= v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L3068ac.  return v0 @kind object;
}
procedure `boolean` `supportsUrl`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306704.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L30670a.  v0:= temp;
  #L30670c.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306710.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306716.  v1:= temp @kind object;
  #L306718.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30671e.  v1:= temp @kind object;
  #L306720.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L306726.  v1:= temp;
  #L306728.  v2:= 0I;
  #L30672a.  if v0 == v1 then goto L306730;
  #L30672e.  return v2;
  #L306730.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L306736.  v0:= temp @kind object;
  #L306738.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L30673c.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L306742.  v1:= temp @kind object;
  #L306744.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30674a.  v1:= temp @kind object;
  #L30674c.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L306752.  v1:= temp @kind object;
  #L306754.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30675a.  v0:= temp;
  #L30675c.  v1:= 1I;
  #L30675e.  if v0 != 0 then goto L30679e;
  #L306762.  v0:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L306766.  if v0 == 0 then goto L30679c;
  #L30676a.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L30676e.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L306774.  v5:= temp @kind object;
  #L306776.  v3:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L30677a.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L306780.  v3:= temp @kind object;
  #L306782.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L306788.  v3:= temp @kind object;
  #L30678a.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L30678e.  call temp:= `verify`(v0, v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L306794.  v5:= temp;
  #L306796.  if v5 == 0 then goto L30679c;
  #L30679a.  v2:= 1I;
  #L30679c.  return v2;
  #L30679e.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3067b0.  v0:= new `java.lang.StringBuilder`;
  #L3067b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3067ba.  v1:= "Connection{" @kind object;
  #L3067be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3067c4.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3067c8.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L3067ce.  v1:= temp @kind object;
  #L3067d0.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3067d6.  v1:= temp @kind object;
  #L3067d8.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L3067de.  v1:= temp @kind object;
  #L3067e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3067e6.  v1:= ":" @kind object;
  #L3067ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3067f0.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L3067f4.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L3067fa.  v1:= temp @kind object;
  #L3067fc.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L306802.  v1:= temp @kind object;
  #L306804.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L30680a.  v1:= temp;
  #L30680c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L306812.  v1:= ", proxy=" @kind object;
  #L306816.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30681c.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L306820.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L306826.  v1:= temp @kind object;
  #L306828.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30682e.  v1:= " hostAddress=" @kind object;
  #L306832.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306838.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L30683c.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L306842.  v1:= temp @kind object;
  #L306844.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30684a.  v1:= " cipherSuite=" @kind object;
  #L30684e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306854.  v1:= v2.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L306858.  if v1 == 0 then goto L306866;
  #L30685c.  call temp:= `cipherSuite`(v1) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L306862.  v1:= temp @kind object;
  #L306864.  goto L30686a;
  #L306866.  v1:= "none" @kind object;
  #L30686a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306870.  v1:= " protocol=" @kind object;
  #L306874.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30687a.  v1:= v2.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L30687e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L306884.  v1:= 125I;
  #L306888.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30688e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L306894.  v0:= temp @kind object;
  #L306896.  return v0 @kind object;
}
procedure `void` `trackFailure`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.trackFailure:(Ljava/io/IOException;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30768c.  v0:= v4.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307690.  @monitorenter v0
  #L307692.  v1:= instanceof @variable v5 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L307696.  v2:= 1I;
  #L307698.  if v1 == 0 then goto L3076e2;
  #L30769c.  v5:= (`okhttp3.internal.http2.StreamResetException`) v5 @kind object;
  #L3076a0.  v5:= v5.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3076a4.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3076a8.  if v5 != v1 then goto L3076ca;
  #L3076ac.  v5:= v4.`okhttp3.internal.connection.RealConnection.refusedStreamCount` @type ^`int`;
  #L3076b0.  v5:= v5 + v2 @kind int;
  #L3076b2.  v4.`okhttp3.internal.connection.RealConnection.refusedStreamCount` @type ^`int` := v5;
  #L3076b6.  if v5 <= v2 then goto L30771e;
  #L3076ba.  v4.`okhttp3.internal.connection.RealConnection.noNewExchanges` @type ^`boolean` := v2 @kind boolean;
  #L3076be.  v5:= v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int`;
  #L3076c2.  v5:= v5 + v2 @kind int;
  #L3076c4.  v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int` := v5;
  #L3076c8.  goto L30771e;
  #L3076ca.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L3076ce.  if v5 == v1 then goto L30771e;
  #L3076d2.  v4.`okhttp3.internal.connection.RealConnection.noNewExchanges` @type ^`boolean` := v2 @kind boolean;
  #L3076d6.  v5:= v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int`;
  #L3076da.  v5:= v5 + v2 @kind int;
  #L3076dc.  v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int` := v5;
  #L3076e0.  goto L30771e;
  #L3076e2.  call temp:= `isMultiplexed`(v4) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L3076e8.  v1:= temp;
  #L3076ea.  if v1 == 0 then goto L3076f6;
  #L3076ee.  v1:= instanceof @variable v5 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L3076f2.  if v1 == 0 then goto L30771e;
  #L3076f6.  v4.`okhttp3.internal.connection.RealConnection.noNewExchanges` @type ^`boolean` := v2 @kind boolean;
  #L3076fa.  v1:= v4.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int`;
  #L3076fe.  if v1 != 0 then goto L30771e;
  #L307702.  if v5 == 0 then goto L307714;
  #L307706.  v1:= v4.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L30770a.  v3:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L30770e.  call `connectFailed`(v1, v3, v5) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @kind virtual;
  #L307714.  v5:= v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int`;
  #L307718.  v5:= v5 + v2 @kind int;
  #L30771a.  v4.`okhttp3.internal.connection.RealConnection.routeFailureCount` @type ^`int` := v5;
  #L30771e.  @monitorexit v0
  #L307720.  return @kind void;
  #L307722.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307724.  @monitorexit v0
  #L307726.  throw v5;
  catch `java.lang.Throwable` @[L307692..L307726] goto L307722;
}
