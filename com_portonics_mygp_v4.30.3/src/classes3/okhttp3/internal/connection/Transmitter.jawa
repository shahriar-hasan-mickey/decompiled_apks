record `okhttp3.internal.connection.Transmitter` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Call` `okhttp3.internal.connection.Transmitter.call` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `okhttp3.internal.connection.Transmitter.callStackTrace` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Transmitter.canceled` @AccessFlag PRIVATE;
  `okhttp3.OkHttpClient` `okhttp3.internal.connection.Transmitter.client` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RealConnection` `okhttp3.internal.connection.Transmitter.connection` @AccessFlag PUBLIC;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.Transmitter.connectionPool` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.Transmitter.eventListener` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.internal.connection.Transmitter.exchange` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.ExchangeFinder` `okhttp3.internal.connection.Transmitter.exchangeFinder` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Transmitter.exchangeRequestDone` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Transmitter.exchangeResponseDone` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Transmitter.noMoreExchanges` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.connection.Transmitter.request` @AccessFlag PRIVATE;
  `okio.h` `okhttp3.internal.connection.Transmitter.timeout` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.connection.Transmitter.timeoutEarlyExit` @AccessFlag PRIVATE;
}
global `boolean` `@@okhttp3.internal.connection.Transmitter.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/Transmitter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L308370.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Transmitter` v3 @kind this, `okhttp3.OkHttpClient` v4 @kind object, `okhttp3.Call` v5 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Call;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L308384.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30838a.  v0:= new `okhttp3.internal.connection.Transmitter$1`;
  #L30838e.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/connection/Transmitter$1;.<init>:(Lokhttp3/internal/connection/Transmitter;)V` @kind direct;
  #L308394.  v3.`okhttp3.internal.connection.Transmitter.timeout` @type ^`okio.h` := v0 @kind object;
  #L308398.  v3.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` := v4 @kind object;
  #L30839c.  v1:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L3083a0.  call temp:= `connectionPool`(v4) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @kind virtual;
  #L3083a6.  v2:= temp @kind object;
  #L3083a8.  call temp:= `realConnectionPool`(v1, v2) @signature `Lokhttp3/internal/Internal;.realConnectionPool:(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;` @kind virtual;
  #L3083ae.  v1:= temp @kind object;
  #L3083b0.  v3.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` := v1 @kind object;
  #L3083b4.  v3.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` := v5 @kind object;
  #L3083b8.  call temp:= `eventListenerFactory`(v4) @signature `Lokhttp3/OkHttpClient;.eventListenerFactory:()Lokhttp3/EventListener$Factory;` @kind virtual;
  #L3083be.  v1:= temp @kind object;
  #L3083c0.  call temp:= `create`(v1, v5) @signature `Lokhttp3/EventListener$Factory;.create:(Lokhttp3/Call;)Lokhttp3/EventListener;` @kind interface;
  #L3083c6.  v5:= temp @kind object;
  #L3083c8.  v3.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L3083cc.  call temp:= `callTimeoutMillis`(v4) @signature `Lokhttp3/OkHttpClient;.callTimeoutMillis:()I` @kind virtual;
  #L3083d2.  v4:= temp;
  #L3083d4.  v4:= (`long`) v4 @kind i2l;
  #L3083d6.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3083da.  call temp:= `timeout`(v0, v4, v1) @signature `Lokio/l0;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/l0;` @kind virtual;
  #L3083e0.  return @kind void;
}
procedure `okhttp3.Address` `createAddress`(`okhttp3.internal.connection.Transmitter` v17 @kind this, `okhttp3.HttpUrl` v18 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3081d8.  v0:= v17 @kind object;
  #L3081dc.  call temp:= `isHttps`(v18) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L3081e2.  v1:= temp;
  #L3081e4.  v2:= 0I;
  #L3081e6.  if v1 == 0 then goto L308216;
  #L3081ea.  v1:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L3081ee.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/OkHttpClient;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3081f4.  v2:= temp @kind object;
  #L3081f6.  v1:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L3081fa.  call temp:= `hostnameVerifier`(v1) @signature `Lokhttp3/OkHttpClient;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L308200.  v1:= temp @kind object;
  #L308202.  v3:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308206.  call temp:= `certificatePinner`(v3) @signature `Lokhttp3/OkHttpClient;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L30820c.  v3:= temp @kind object;
  #L30820e.  v10:= v1 @kind object;
  #L308210.  v9:= v2 @kind object;
  #L308212.  v11:= v3 @kind object;
  #L308214.  goto L30821c;
  #L308216.  v9:= v2 @kind object;
  #L308218.  v10:= v9 @kind object;
  #L30821a.  v11:= v10 @kind object;
  #L30821c.  v1:= new `okhttp3.Address`;
  #L308220.  call temp:= `host`(v18) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L308226.  v5:= temp @kind object;
  #L308228.  call temp:= `port`(v18) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L30822e.  v6:= temp;
  #L308230.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308234.  call temp:= `dns`(v2) @signature `Lokhttp3/OkHttpClient;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L30823a.  v7:= temp @kind object;
  #L30823c.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308240.  call temp:= `socketFactory`(v2) @signature `Lokhttp3/OkHttpClient;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L308246.  v8:= temp @kind object;
  #L308248.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30824c.  call temp:= `proxyAuthenticator`(v2) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L308252.  v12:= temp @kind object;
  #L308254.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308258.  call temp:= `proxy`(v2) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L30825e.  v13:= temp @kind object;
  #L308260.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308264.  call temp:= `protocols`(v2) @signature `Lokhttp3/OkHttpClient;.protocols:()Ljava/util/List;` @kind virtual;
  #L30826a.  v14:= temp @kind object;
  #L30826c.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308270.  call temp:= `connectionSpecs`(v2) @signature `Lokhttp3/OkHttpClient;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L308276.  v15:= temp @kind object;
  #L308278.  v2:= v0.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30827c.  call temp:= `proxySelector`(v2) @signature `Lokhttp3/OkHttpClient;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L308282.  v16:= temp @kind object;
  #L308284.  v4:= v1 @kind object;
  #L308286.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L30828c.  return v1 @kind object;
}
procedure `java.io.IOException` `maybeReleaseConnection`(`okhttp3.internal.connection.Transmitter` v5 @kind this, `java.io.IOException` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/Transmitter;.maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L307fac.  v0:= v5.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307fb0.  @monitorenter v0
  #L307fb2.  if v7 == 0 then goto L307fd0;
  #L307fb6.  v1:= v5.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L307fba.  if v1 != 0 then goto L307fc0;
  #L307fbe.  goto L307fd0;
  #L307fc0.  v6:= new `java.lang.IllegalStateException`;
  #L307fc4.  v7:= "cannot release connection while it is in use" @kind object;
  #L307fc8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307fce.  throw v6;
  #L307fd0.  v1:= v5.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L307fd4.  v2:= 0I;
  #L307fd6.  if v1 == 0 then goto L307ff8;
  #L307fda.  v3:= v5.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L307fde.  if v3 != 0 then goto L307ff8;
  #L307fe2.  if v7 != 0 then goto L307fee;
  #L307fe6.  v7:= v5.`okhttp3.internal.connection.Transmitter.noMoreExchanges` @type ^`boolean` @kind boolean;
  #L307fea.  if v7 == 0 then goto L307ff8;
  #L307fee.  call temp:= `releaseConnectionNoEvents`(v5) @signature `Lokhttp3/internal/connection/Transmitter;.releaseConnectionNoEvents:()Ljava/net/Socket;` @kind virtual;
  #L307ff4.  v7:= temp @kind object;
  #L307ff6.  goto L307ffa;
  #L307ff8.  v7:= v2 @kind object;
  #L307ffa.  v3:= v5.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L307ffe.  if v3 == 0 then goto L308004;
  #L308002.  v1:= v2 @kind object;
  #L308004.  v2:= v5.`okhttp3.internal.connection.Transmitter.noMoreExchanges` @type ^`boolean` @kind boolean;
  #L308008.  v3:= 1I;
  #L30800a.  v4:= 0I;
  #L30800c.  if v2 == 0 then goto L30801c;
  #L308010.  v2:= v5.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L308014.  if v2 != 0 then goto L30801c;
  #L308018.  v2:= 1I;
  #L30801a.  goto L30801e;
  #L30801c.  v2:= 0I;
  #L30801e.  @monitorexit v0
  #L308020.  call `closeQuietly`(v7) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L308026.  if v1 == 0 then goto L308038;
  #L30802a.  v7:= v5.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L30802e.  v0:= v5.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L308032.  call `connectionReleased`(v7, v0, v1) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L308038.  if v2 == 0 then goto L30806e;
  #L30803c.  if v6 == 0 then goto L308042;
  #L308040.  goto L308044;
  #L308042.  v3:= 0I;
  #L308044.  call temp:= `timeoutExit`(v5, v6) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutExit:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L30804a.  v6:= temp @kind object;
  #L30804c.  if v3 == 0 then goto L308060;
  #L308050.  v7:= v5.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L308054.  v0:= v5.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L308058.  call `callFailed`(v7, v0, v6) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L30805e.  goto L30806e;
  #L308060.  v7:= v5.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L308064.  v0:= v5.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L308068.  call `callEnd`(v7, v0) @signature `Lokhttp3/EventListener;.callEnd:(Lokhttp3/Call;)V` @kind virtual;
  #L30806e.  return v6 @kind object;
  #L308070.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308072.  @monitorexit v0
  #L308074.  throw v6;
  catch `java.lang.Throwable` @[L307fb6..L308020] goto L308070;
  catch `java.lang.Throwable` @[L308072..L308074] goto L308070;
}
procedure `java.io.IOException` `timeoutExit`(`okhttp3.internal.connection.Transmitter` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutExit:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3080e0.  v0:= v2.`okhttp3.internal.connection.Transmitter.timeoutEarlyExit` @type ^`boolean` @kind boolean;
  #L3080e4.  if v0 == 0 then goto L3080ea;
  #L3080e8.  return v3 @kind object;
  #L3080ea.  v0:= v2.`okhttp3.internal.connection.Transmitter.timeout` @type ^`okio.h` @kind object;
  #L3080ee.  call temp:= `exit`(v0) @signature `Lokio/h;.exit:()Z` @kind virtual;
  #L3080f4.  v0:= temp;
  #L3080f6.  if v0 != 0 then goto L3080fc;
  #L3080fa.  return v3 @kind object;
  #L3080fc.  v0:= new `java.io.InterruptedIOException`;
  #L308100.  v1:= "timeout" @kind object;
  #L308104.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30810a.  if v3 == 0 then goto L308114;
  #L30810e.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L308114.  return v0 @kind object;
}
procedure `void` `acquireConnectionNoEvents`(`okhttp3.internal.connection.Transmitter` v2 @kind this, `okhttp3.internal.connection.RealConnection` v3 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.acquireConnectionNoEvents:(Lokhttp3/internal/connection/RealConnection;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3083f4.  v0:= v2.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L3083f8.  if v0 != 0 then goto L30841a;
  #L3083fc.  v2.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` := v3 @kind object;
  #L308400.  v3:= v3.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L308404.  v0:= new `okhttp3.internal.connection.Transmitter$TransmitterReference`;
  #L308408.  v1:= v2.`okhttp3.internal.connection.Transmitter.callStackTrace` @type ^`java.lang.Object` @kind object;
  #L30840c.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/connection/Transmitter$TransmitterReference;.<init>:(Lokhttp3/internal/connection/Transmitter;Ljava/lang/Object;)V` @kind direct;
  #L308412.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L308418.  return @kind void;
  #L30841a.  v3:= new `java.lang.IllegalStateException`;
  #L30841e.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L308424.  throw v3;
}
procedure `void` `callStart`(`okhttp3.internal.connection.Transmitter` v2 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.callStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L308438.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L30843e.  v0:= temp @kind object;
  #L308440.  v1:= "response.body().close()" @kind object;
  #L308444.  call temp:= `getStackTraceForCloseable`(v0, v1) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L30844a.  v0:= temp @kind object;
  #L30844c.  v2.`okhttp3.internal.connection.Transmitter.callStackTrace` @type ^`java.lang.Object` := v0 @kind object;
  #L308450.  v0:= v2.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L308454.  v1:= v2.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L308458.  call `callStart`(v0, v1) @signature `Lokhttp3/EventListener;.callStart:(Lokhttp3/Call;)V` @kind virtual;
  #L30845e.  return @kind void;
}
procedure `boolean` `canRetry`(`okhttp3.internal.connection.Transmitter` v1 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.canRetry:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307e64.  v0:= v1.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L307e68.  call temp:= `hasStreamFailure`(v0) @signature `Lokhttp3/internal/connection/ExchangeFinder;.hasStreamFailure:()Z` @kind virtual;
  #L307e6e.  v0:= temp;
  #L307e70.  if v0 == 0 then goto L307e88;
  #L307e74.  v0:= v1.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L307e78.  call temp:= `hasRouteToTry`(v0) @signature `Lokhttp3/internal/connection/ExchangeFinder;.hasRouteToTry:()Z` @kind virtual;
  #L307e7e.  v0:= temp;
  #L307e80.  if v0 == 0 then goto L307e88;
  #L307e84.  v0:= 1I;
  #L307e86.  goto L307e8a;
  #L307e88.  v0:= 0I;
  #L307e8a.  return v0;
}
procedure `void` `cancel`(`okhttp3.internal.connection.Transmitter` v3 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L308470.  v0:= v3.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L308474.  @monitorenter v0
  #L308476.  v1:= 1I;
  #L308478.  v3.`okhttp3.internal.connection.Transmitter.canceled` @type ^`boolean` := v1 @kind boolean;
  #L30847c.  v1:= v3.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L308480.  v2:= v3.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L308484.  if v2 == 0 then goto L3084a2;
  #L308488.  call temp:= `connectingConnection`(v2) @signature `Lokhttp3/internal/connection/ExchangeFinder;.connectingConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L30848e.  v2:= temp @kind object;
  #L308490.  if v2 == 0 then goto L3084a2;
  #L308494.  v2:= v3.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L308498.  call temp:= `connectingConnection`(v2) @signature `Lokhttp3/internal/connection/ExchangeFinder;.connectingConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L30849e.  v2:= temp @kind object;
  #L3084a0.  goto L3084a6;
  #L3084a2.  v2:= v3.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L3084a6.  @monitorexit v0
  #L3084a8.  if v1 == 0 then goto L3084b4;
  #L3084ac.  call `cancel`(v1) @signature `Lokhttp3/internal/connection/Exchange;.cancel:()V` @kind virtual;
  #L3084b2.  goto L3084be;
  #L3084b4.  if v2 == 0 then goto L3084be;
  #L3084b8.  call `cancel`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @kind virtual;
  #L3084be.  return @kind void;
  #L3084c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3084c2.  @monitorexit v0
  #L3084c4.  throw v1;
  catch `java.lang.Throwable` @[L308478..L3084a8] goto L3084c0;
  catch `java.lang.Throwable` @[L3084c2..L3084c4] goto L3084c0;
}
procedure `void` `exchangeDoneDueToException`(`okhttp3.internal.connection.Transmitter` v2 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.exchangeDoneDueToException:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3084ec.  v0:= v2.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3084f0.  @monitorenter v0
  #L3084f2.  v1:= v2.`okhttp3.internal.connection.Transmitter.noMoreExchanges` @type ^`boolean` @kind boolean;
  #L3084f6.  if v1 != 0 then goto L308504;
  #L3084fa.  v1:= 0I;
  #L3084fc.  v2.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` := v1 @kind object;
  #L308500.  @monitorexit v0
  #L308502.  return @kind void;
  #L308504.  v1:= new `java.lang.IllegalStateException`;
  #L308508.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L30850e.  throw v1;
  #L308510.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308512.  @monitorexit v0
  #L308514.  throw v1;
  catch `java.lang.Throwable` @[L3084f2..L308514] goto L308510;
}
procedure `java.io.IOException` `exchangeMessageDone`(`okhttp3.internal.connection.Transmitter` v3 @kind this, `okhttp3.internal.connection.Exchange` v4 @kind object, `boolean` v5 , `boolean` v6 , `java.io.IOException` v7 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.exchangeMessageDone:(Lokhttp3/internal/connection/Exchange;ZZLjava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L307f08.  v0:= v3.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307f0c.  @monitorenter v0
  #L307f0e.  v1:= v3.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L307f12.  if v4 == v1 then goto L307f1a;
  #L307f16.  @monitorexit v0
  #L307f18.  return v7 @kind object;
  #L307f1a.  v4:= 0I;
  #L307f1c.  v2:= 1I;
  #L307f1e.  if v5 == 0 then goto L307f2e;
  #L307f22.  v5:= v3.`okhttp3.internal.connection.Transmitter.exchangeRequestDone` @type ^`boolean` @kind boolean;
  #L307f26.  v5:= v5 ^~ v2 @kind int;
  #L307f28.  v3.`okhttp3.internal.connection.Transmitter.exchangeRequestDone` @type ^`boolean` := v2 @kind boolean;
  #L307f2c.  goto L307f30;
  #L307f2e.  v5:= 0I;
  #L307f30.  if v6 == 0 then goto L307f42;
  #L307f34.  v6:= v3.`okhttp3.internal.connection.Transmitter.exchangeResponseDone` @type ^`boolean` @kind boolean;
  #L307f38.  if v6 != 0 then goto L307f3e;
  #L307f3c.  v5:= 1I;
  #L307f3e.  v3.`okhttp3.internal.connection.Transmitter.exchangeResponseDone` @type ^`boolean` := v2 @kind boolean;
  #L307f42.  v6:= v3.`okhttp3.internal.connection.Transmitter.exchangeRequestDone` @type ^`boolean` @kind boolean;
  #L307f46.  if v6 == 0 then goto L307f70;
  #L307f4a.  v6:= v3.`okhttp3.internal.connection.Transmitter.exchangeResponseDone` @type ^`boolean` @kind boolean;
  #L307f4e.  if v6 == 0 then goto L307f70;
  #L307f52.  if v5 == 0 then goto L307f70;
  #L307f56.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L307f5c.  v5:= temp @kind object;
  #L307f5e.  v6:= v5.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int`;
  #L307f62.  v6:= v6 + v2 @kind int;
  #L307f64.  v5.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int` := v6;
  #L307f68.  v5:= 0I;
  #L307f6a.  v3.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` := v5 @kind object;
  #L307f6e.  goto L307f72;
  #L307f70.  v2:= 0I;
  #L307f72.  @monitorexit v0
  #L307f74.  if v2 == 0 then goto L307f80;
  #L307f78.  call temp:= `maybeReleaseConnection`(v3, v7, v4) @signature `Lokhttp3/internal/connection/Transmitter;.maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L307f7e.  v7:= temp @kind object;
  #L307f80.  return v7 @kind object;
  #L307f82.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307f84.  @monitorexit v0
  #L307f86.  throw v4;
  catch `java.lang.Throwable` @[L307f0e..L307f74] goto L307f82;
  catch `java.lang.Throwable` @[L307f84..L307f86] goto L307f82;
}
procedure `boolean` `hasExchange`(`okhttp3.internal.connection.Transmitter` v2 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.hasExchange:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307e9c.  v0:= v2.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307ea0.  @monitorenter v0
  #L307ea2.  v1:= v2.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L307ea6.  if v1 == 0 then goto L307eae;
  #L307eaa.  v1:= 1I;
  #L307eac.  goto L307eb0;
  #L307eae.  v1:= 0I;
  #L307eb0.  @monitorexit v0
  #L307eb2.  return v1;
  #L307eb4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307eb6.  @monitorexit v0
  #L307eb8.  throw v1;
  catch `java.lang.Throwable` @[L307ea2..L307eb8] goto L307eb4;
}
procedure `boolean` `isCanceled`(`okhttp3.internal.connection.Transmitter` v2 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307ed8.  v0:= v2.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L307edc.  @monitorenter v0
  #L307ede.  v1:= v2.`okhttp3.internal.connection.Transmitter.canceled` @type ^`boolean` @kind boolean;
  #L307ee2.  @monitorexit v0
  #L307ee4.  return v1;
  #L307ee6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307ee8.  @monitorexit v0
  #L307eea.  throw v1;
  catch `java.lang.Throwable` @[L307ede..L307eea] goto L307ee6;
}
procedure `okhttp3.internal.connection.Exchange` `newExchange`(`okhttp3.internal.connection.Transmitter` v8 @kind this, `okhttp3.Interceptor$Chain` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/internal/connection/Transmitter;.newExchange:(Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/connection/Exchange;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3082a0.  v0:= v8.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3082a4.  @monitorenter v0
  #L3082a6.  v1:= v8.`okhttp3.internal.connection.Transmitter.noMoreExchanges` @type ^`boolean` @kind boolean;
  #L3082aa.  if v1 != 0 then goto L308310;
  #L3082ae.  v1:= v8.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L3082b2.  if v1 != 0 then goto L308300;
  #L3082b6.  @monitorexit v0
  #L3082b8.  v0:= v8.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L3082bc.  v1:= v8.`okhttp3.internal.connection.Transmitter.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L3082c0.  call temp:= `find`(v0, v1, v9, v10) @signature `Lokhttp3/internal/connection/ExchangeFinder;.find:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/ExchangeCodec;` @kind virtual;
  #L3082c6.  v7:= temp @kind object;
  #L3082c8.  v9:= new `okhttp3.internal.connection.Exchange`;
  #L3082cc.  v4:= v8.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L3082d0.  v5:= v8.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L3082d4.  v6:= v8.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L3082d8.  v2:= v9 @kind object;
  #L3082da.  v3:= v8 @kind object;
  #L3082dc.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/Exchange;.<init>:(Lokhttp3/internal/connection/Transmitter;Lokhttp3/Call;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V` @kind direct;
  #L3082e2.  v10:= v8.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3082e6.  @monitorenter v10
  #L3082e8.  v8.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` := v9 @kind object;
  #L3082ec.  v0:= 0I;
  #L3082ee.  v8.`okhttp3.internal.connection.Transmitter.exchangeRequestDone` @type ^`boolean` := v0 @kind boolean;
  #L3082f2.  v8.`okhttp3.internal.connection.Transmitter.exchangeResponseDone` @type ^`boolean` := v0 @kind boolean;
  #L3082f6.  @monitorexit v10
  #L3082f8.  return v9 @kind object;
  #L3082fa.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3082fc.  @monitorexit v10
  #L3082fe.  throw v9;
  #L308300.  v9:= new `java.lang.IllegalStateException`;
  #L308304.  v10:= "cannot make a new request because the previous response is still open: please call response.close()" @kind object;
  #L308308.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30830e.  throw v9;
  #L308310.  v9:= new `java.lang.IllegalStateException`;
  #L308314.  v10:= "released" @kind object;
  #L308318.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30831e.  throw v9;
  #L308320.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308322.  @monitorexit v0
  #L308324.  throw v9;
  catch `java.lang.Throwable` @[L3082a6..L3082b8] goto L308320;
  catch `java.lang.Throwable` @[L3082e8..L3082fe] goto L3082fa;
  catch `java.lang.Throwable` @[L308300..L308324] goto L308320;
}
procedure `java.io.IOException` `noMoreExchanges`(`okhttp3.internal.connection.Transmitter` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30809c.  v0:= v2.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3080a0.  @monitorenter v0
  #L3080a2.  v1:= 1I;
  #L3080a4.  v2.`okhttp3.internal.connection.Transmitter.noMoreExchanges` @type ^`boolean` := v1 @kind boolean;
  #L3080a8.  @monitorexit v0
  #L3080aa.  v0:= 0I;
  #L3080ac.  call temp:= `maybeReleaseConnection`(v2, v3, v0) @signature `Lokhttp3/internal/connection/Transmitter;.maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L3080b2.  v3:= temp @kind object;
  #L3080b4.  return v3 @kind object;
  #L3080b6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3080b8.  @monitorexit v0
  #L3080ba.  throw v3;
  catch `java.lang.Throwable` @[L3080a4..L3080aa] goto L3080b6;
  catch `java.lang.Throwable` @[L3080b8..L3080ba] goto L3080b6;
}
procedure `void` `prepareToConnect`(`okhttp3.internal.connection.Transmitter` v7 @kind this, `okhttp3.Request` v8 @kind object) @signature `Lokhttp3/internal/connection/Transmitter;.prepareToConnect:(Lokhttp3/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L308534.  v0:= v7.`okhttp3.internal.connection.Transmitter.request` @type ^`okhttp3.Request` @kind object;
  #L308538.  if v0 == 0 then goto L308596;
  #L30853c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L308542.  v0:= temp @kind object;
  #L308544.  call temp:= `url`(v8) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30854a.  v1:= temp @kind object;
  #L30854c.  call temp:= `sameConnection`(v0, v1) @signature `Lokhttp3/internal/Util;.sameConnection:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L308552.  v0:= temp;
  #L308554.  if v0 == 0 then goto L30856a;
  #L308558.  v0:= v7.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L30855c.  call temp:= `hasRouteToTry`(v0) @signature `Lokhttp3/internal/connection/ExchangeFinder;.hasRouteToTry:()Z` @kind virtual;
  #L308562.  v0:= temp;
  #L308564.  if v0 == 0 then goto L30856a;
  #L308568.  return @kind void;
  #L30856a.  v0:= v7.`okhttp3.internal.connection.Transmitter.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L30856e.  if v0 != 0 then goto L30858a;
  #L308572.  v0:= v7.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` @kind object;
  #L308576.  if v0 == 0 then goto L308596;
  #L30857a.  v0:= 1I;
  #L30857c.  v1:= 0I;
  #L30857e.  call temp:= `maybeReleaseConnection`(v7, v1, v0) @signature `Lokhttp3/internal/connection/Transmitter;.maybeReleaseConnection:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L308584.  v7.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` := v1 @kind object;
  #L308588.  goto L308596;
  #L30858a.  v8:= new `java.lang.IllegalStateException`;
  #L30858e.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L308594.  throw v8;
  #L308596.  v7.`okhttp3.internal.connection.Transmitter.request` @type ^`okhttp3.Request` := v8 @kind object;
  #L30859a.  v6:= new `okhttp3.internal.connection.ExchangeFinder`;
  #L30859e.  v2:= v7.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3085a2.  call temp:= `url`(v8) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3085a8.  v8:= temp @kind object;
  #L3085aa.  call temp:= `createAddress`(v7, v8) @signature `Lokhttp3/internal/connection/Transmitter;.createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;` @kind direct;
  #L3085b0.  v3:= temp @kind object;
  #L3085b2.  v4:= v7.`okhttp3.internal.connection.Transmitter.call` @type ^`okhttp3.Call` @kind object;
  #L3085b6.  v5:= v7.`okhttp3.internal.connection.Transmitter.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L3085ba.  v0:= v6 @kind object;
  #L3085bc.  v1:= v7 @kind object;
  #L3085be.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/ExchangeFinder;.<init>:(Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L3085c4.  v7.`okhttp3.internal.connection.Transmitter.exchangeFinder` @type ^`okhttp3.internal.connection.ExchangeFinder` := v6 @kind object;
  #L3085c8.  return @kind void;
}
procedure `java.net.Socket` `releaseConnectionNoEvents`(`okhttp3.internal.connection.Transmitter` v4 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.releaseConnectionNoEvents:()Ljava/net/Socket;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L308128.  v0:= 0I;
  #L30812a.  v1:= v4.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L30812e.  v1:= v1.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L308132.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L308138.  v1:= temp;
  #L30813a.  v2:= -1I;
  #L30813c.  if v0 >= v1 then goto L308168;
  #L308140.  v3:= v4.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L308144.  v3:= v3.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L308148.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30814e.  v3:= temp @kind object;
  #L308150.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L308154.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L30815a.  v3:= temp @kind object;
  #L30815c.  if v3 != v4 then goto L308162;
  #L308160.  goto L30816a;
  #L308162.  v0:= v0 + 1;
  #L308166.  goto L30813a;
  #L308168.  v0:= -1I;
  #L30816a.  if v0 == v2 then goto L3081b8;
  #L30816e.  v1:= v4.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L308172.  v2:= v1.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L308176.  call temp:= `remove`(v2, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L30817c.  v0:= 0I;
  #L30817e.  v4.`okhttp3.internal.connection.Transmitter.connection` @type ^`okhttp3.internal.connection.RealConnection` := v0 @kind object;
  #L308182.  v2:= v1.`okhttp3.internal.connection.RealConnection.transmitters` @type ^`java.util.List` @kind object;
  #L308186.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L30818c.  v2:= temp;
  #L30818e.  if v2 == 0 then goto L3081b6;
  #L308192.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L308198.  v2:= temp @kind wide;
  #L30819a.  v1.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v2 @kind wide;
  #L30819e.  v2:= v4.`okhttp3.internal.connection.Transmitter.connectionPool` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L3081a2.  call temp:= `connectionBecameIdle`(v2, v1) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectionBecameIdle:(Lokhttp3/internal/connection/RealConnection;)Z` @kind virtual;
  #L3081a8.  v2:= temp;
  #L3081aa.  if v2 == 0 then goto L3081b6;
  #L3081ae.  call temp:= `socket`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L3081b4.  v0:= temp @kind object;
  #L3081b6.  return v0 @kind object;
  #L3081b8.  v0:= new `java.lang.IllegalStateException`;
  #L3081bc.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3081c2.  goto L3081c6;
  #L3081c4.  throw v0;
  #L3081c6.  goto L3081c4;
}
procedure `okio.l0` `timeout`(`okhttp3.internal.connection.Transmitter` v1 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308358.  v0:= v1.`okhttp3.internal.connection.Transmitter.timeout` @type ^`okio.h` @kind object;
  #L30835c.  return v0 @kind object;
}
procedure `void` `timeoutEarlyExit`(`okhttp3.internal.connection.Transmitter` v1 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutEarlyExit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3085dc.  v0:= v1.`okhttp3.internal.connection.Transmitter.timeoutEarlyExit` @type ^`boolean` @kind boolean;
  #L3085e0.  if v0 != 0 then goto L3085f6;
  #L3085e4.  v0:= 1I;
  #L3085e6.  v1.`okhttp3.internal.connection.Transmitter.timeoutEarlyExit` @type ^`boolean` := v0 @kind boolean;
  #L3085ea.  v0:= v1.`okhttp3.internal.connection.Transmitter.timeout` @type ^`okio.h` @kind object;
  #L3085ee.  call temp:= `exit`(v0) @signature `Lokio/h;.exit:()Z` @kind virtual;
  #L3085f4.  return @kind void;
  #L3085f6.  v0:= new `java.lang.IllegalStateException`;
  #L3085fa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L308600.  throw v0;
}
procedure `void` `timeoutEnter`(`okhttp3.internal.connection.Transmitter` v1 @kind this) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutEnter:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308614.  v0:= v1.`okhttp3.internal.connection.Transmitter.timeout` @type ^`okio.h` @kind object;
  #L308618.  call `enter`(v0) @signature `Lokio/h;.enter:()V` @kind virtual;
  #L30861e.  return @kind void;
}
