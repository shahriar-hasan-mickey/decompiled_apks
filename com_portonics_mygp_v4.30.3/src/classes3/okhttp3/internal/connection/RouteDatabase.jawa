record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L307778.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30777e.  v0:= new `java.util.LinkedHashSet`;
  #L307782.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L307788.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L30778c.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3077a0.  @monitorenter v1
  #L3077a2.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L3077a6.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3077ac.  @monitorexit v1
  #L3077ae.  return @kind void;
  #L3077b0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3077b2.  @monitorexit v1
  #L3077b4.  throw v2;
  catch `java.lang.Throwable` @[L3077a2..L3077ac] goto L3077b0;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3077d4.  @monitorenter v1
  #L3077d6.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L3077da.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3077e0.  @monitorexit v1
  #L3077e2.  return @kind void;
  #L3077e4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3077e6.  @monitorexit v1
  #L3077e8.  throw v2;
  catch `java.lang.Throwable` @[L3077d6..L3077e0] goto L3077e4;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307744.  @monitorenter v1
  #L307746.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L30774a.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L307750.  v2:= temp;
  #L307752.  @monitorexit v1
  #L307754.  return v2;
  #L307756.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L307758.  @monitorexit v1
  #L30775a.  throw v2;
  catch `java.lang.Throwable` @[L307746..L307752] goto L307756;
}
