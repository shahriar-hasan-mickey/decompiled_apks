record `okhttp3.internal.connection.Exchange$ResponseBodySource` @kind class @AccessFlag FINAL extends `okio.q` @kind class {
  `long` `okhttp3.internal.connection.Exchange$ResponseBodySource.bytesReceived` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$ResponseBodySource.closed` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.Exchange$ResponseBodySource.completed` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.Exchange$ResponseBodySource.contentLength` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.internal.connection.Exchange$ResponseBodySource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v1 @kind this, `okhttp3.internal.connection.Exchange` v2 @kind object, `okio.i0` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.<init>:(Lokhttp3/internal/connection/Exchange;Lokio/i0;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L305418.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.this$0` @type ^`okhttp3.internal.connection.Exchange` := v2 @kind object;
  #L30541c.  call `<init>`(v1, v3) @signature `Lokio/q;.<init>:(Lokio/i0;)V` @kind direct;
  #L305422.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.contentLength` @type ^`long` := v4 @kind wide;
  #L305426.  v2:= 0L;
  #L30542a.  v0:= lcmp(v4, v2);
  #L30542e.  if v0 != 0 then goto L30543a;
  #L305432.  v2:= 0I;
  #L305434.  call temp:= `complete`(v1, v2) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L30543a.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v1 @kind this) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30544c.  v0:= v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.closed` @type ^`boolean` @kind boolean;
  #L305450.  if v0 == 0 then goto L305456;
  #L305454.  return @kind void;
  #L305456.  v0:= 1I;
  #L305458.  v1.`okhttp3.internal.connection.Exchange$ResponseBodySource.closed` @type ^`boolean` := v0 @kind boolean;
  #L30545c.  call `close`(v1) @signature `Lokio/q;.close:()V` @kind super;
  #L305462.  v0:= 0I;
  #L305464.  call temp:= `complete`(v1, v0) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L30546a.  return @kind void;
  #L30546c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L30546e.  call temp:= `complete`(v1, v0) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L305474.  v0:= temp @kind object;
  #L305476.  throw v0;
  catch `java.io.IOException` @[L30545c..L30546a] goto L30546c;
}
procedure `java.io.IOException` `complete`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L305304.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.completed` @type ^`boolean` @kind boolean;
  #L305308.  if v0 == 0 then goto L30530e;
  #L30530c.  return v8 @kind object;
  #L30530e.  v0:= 1I;
  #L305310.  v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.completed` @type ^`boolean` := v0 @kind boolean;
  #L305314.  v1:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.this$0` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L305318.  v2:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.bytesReceived` @type ^`long` @kind wide;
  #L30531c.  v4:= 1I;
  #L30531e.  v5:= 0I;
  #L305320.  v6:= v8 @kind object;
  #L305322.  call temp:= `bodyComplete`(v1, v2, v4, v5, v6) @signature `Lokhttp3/internal/connection/Exchange;.bodyComplete:(JZZLjava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L305328.  v8:= temp @kind object;
  #L30532a.  return v8 @kind object;
}
procedure `long` `read`(`okhttp3.internal.connection.Exchange$ResponseBodySource` v7 @kind this, `okio.k` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30533c.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.closed` @type ^`boolean` @kind boolean;
  #L305340.  if v0 != 0 then goto L3053e8;
  #L305344.  call temp:= `delegate`(v7) @signature `Lokio/q;.delegate:()Lokio/i0;` @kind virtual;
  #L30534a.  v0:= temp @kind object;
  #L30534c.  call temp:= `read`(v0, v8, v9) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L305352.  v8:= temp @kind wide;
  #L305354.  v10:= 0I;
  #L305356.  v0:= -1L;
  #L30535a.  v2:= lcmp(v8, v0);
  #L30535e.  if v2 != 0 then goto L30536a;
  #L305362.  call temp:= `complete`(v7, v10) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L305368.  return v0 @kind wide;
  #L30536a.  v2:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.bytesReceived` @type ^`long` @kind wide;
  #L30536e.  v2:= v2 + v8 @kind long;
  #L305370.  v4:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.contentLength` @type ^`long` @kind wide;
  #L305374.  v6:= lcmp(v4, v0);
  #L305378.  if v6 == 0 then goto L3053c8;
  #L30537c.  v0:= lcmp(v2, v4);
  #L305380.  if v0 > 0 then goto L305386;
  #L305384.  goto L3053c8;
  #L305386.  v8:= new `java.net.ProtocolException`;
  #L30538a.  v9:= new `java.lang.StringBuilder`;
  #L30538e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L305394.  v10:= "expected " @kind object;
  #L305398.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30539e.  v0:= v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.contentLength` @type ^`long` @kind wide;
  #L3053a2.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3053a8.  v10:= " bytes but received " @kind object;
  #L3053ac.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3053b2.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3053b8.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3053be.  v9:= temp @kind object;
  #L3053c0.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3053c6.  throw v8;
  #L3053c8.  v7.`okhttp3.internal.connection.Exchange$ResponseBodySource.bytesReceived` @type ^`long` := v2 @kind wide;
  #L3053cc.  v0:= lcmp(v2, v4);
  #L3053d0.  if v0 != 0 then goto L3053da;
  #L3053d4.  call temp:= `complete`(v7, v10) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3053da.  return v8 @kind wide;
  #L3053dc.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L3053de.  call temp:= `complete`(v7, v8) @signature `Lokhttp3/internal/connection/Exchange$ResponseBodySource;.complete:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3053e4.  v8:= temp @kind object;
  #L3053e6.  throw v8;
  #L3053e8.  v8:= new `java.lang.IllegalStateException`;
  #L3053ec.  v9:= "closed" @kind object;
  #L3053f0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3053f6.  throw v8;
  catch `java.io.IOException` @[L305344..L3053da] goto L3053dc;
}
