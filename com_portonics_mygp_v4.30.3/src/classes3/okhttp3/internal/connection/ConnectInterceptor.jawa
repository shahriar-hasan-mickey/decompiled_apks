record `okhttp3.internal.connection.ConnectInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.connection.ConnectInterceptor.client` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ConnectInterceptor` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L304f70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L304f76.  v0.`okhttp3.internal.connection.ConnectInterceptor.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L304f7a.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.connection.ConnectInterceptor` v5 @kind this, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L304f20.  v0:= v6 @kind object;
  #L304f22.  v0:= (`okhttp3.internal.http.RealInterceptorChain`) v0 @kind object;
  #L304f26.  call temp:= `request`(v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L304f2c.  v1:= temp @kind object;
  #L304f2e.  call temp:= `transmitter`(v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.transmitter:()Lokhttp3/internal/connection/Transmitter;` @kind virtual;
  #L304f34.  v2:= temp @kind object;
  #L304f36.  call temp:= `method`(v1) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L304f3c.  v3:= temp @kind object;
  #L304f3e.  v4:= "GET" @kind object;
  #L304f42.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L304f48.  v3:= temp;
  #L304f4a.  v3:= v3 ^~ 1;
  #L304f4e.  call temp:= `newExchange`(v2, v6, v3) @signature `Lokhttp3/internal/connection/Transmitter;.newExchange:(Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L304f54.  v6:= temp @kind object;
  #L304f56.  call temp:= `proceed`(v0, v1, v2, v6) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;` @kind virtual;
  #L304f5c.  v6:= temp @kind object;
  #L304f5e.  return v6 @kind object;
}
