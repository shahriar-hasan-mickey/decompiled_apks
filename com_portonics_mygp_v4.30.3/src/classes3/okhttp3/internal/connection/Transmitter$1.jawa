record `okhttp3.internal.connection.Transmitter$1` @kind class @AccessFlag  extends `okio.h` @kind class {
  `okhttp3.internal.connection.Transmitter` `okhttp3.internal.connection.Transmitter$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Transmitter$1` v0 @kind this, `okhttp3.internal.connection.Transmitter` v1 @kind object) @signature `Lokhttp3/internal/connection/Transmitter$1;.<init>:(Lokhttp3/internal/connection/Transmitter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L307e10.  v0.`okhttp3.internal.connection.Transmitter$1.this$0` @type ^`okhttp3.internal.connection.Transmitter` := v1 @kind object;
  #L307e14.  call `<init>`(v0) @signature `Lokio/h;.<init>:()V` @kind direct;
  #L307e1a.  return @kind void;
}
procedure `void` `timedOut`(`okhttp3.internal.connection.Transmitter$1` v1 @kind this) @signature `Lokhttp3/internal/connection/Transmitter$1;.timedOut:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L307e2c.  v0:= v1.`okhttp3.internal.connection.Transmitter$1.this$0` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L307e30.  call `cancel`(v0) @signature `Lokhttp3/internal/connection/Transmitter;.cancel:()V` @kind virtual;
  #L307e36.  return @kind void;
}
