record `okhttp3.internal.connection.Transmitter$TransmitterReference` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `java.lang.Object` `okhttp3.internal.connection.Transmitter$TransmitterReference.callStackTrace` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.Transmitter$TransmitterReference` v0 @kind this, `okhttp3.internal.connection.Transmitter` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/internal/connection/Transmitter$TransmitterReference;.<init>:(Lokhttp3/internal/connection/Transmitter;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L307e48.  call `<init>`(v0, v1) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L307e4e.  v0.`okhttp3.internal.connection.Transmitter$TransmitterReference.callStackTrace` @type ^`java.lang.Object` := v2 @kind object;
  #L307e52.  return @kind void;
}
