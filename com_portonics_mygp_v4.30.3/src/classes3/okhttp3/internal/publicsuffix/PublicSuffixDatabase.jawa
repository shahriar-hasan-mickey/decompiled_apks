record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3144f0.  v0:= 1I;
  #L3144f2.  v0:= new `byte`[v0];
  #L3144f6.  v1:= 42I;
  #L3144fa.  v2:= 0I;
  #L3144fc.  v0[v2]:= v1 @kind byte;
  #L314500.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v0 @kind object;
  #L314504.  v0:= new `java.lang.String`[v2];
  #L314508.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L31450c.  v0:= "*" @kind object;
  #L314510.  temp:= new `java.lang.String`[v0];
  #L314516.  v0:= temp @kind object;
  #L314518.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L31451c.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L314520.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L314526.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L31452a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31453c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L314542.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L314546.  v1:= 0I;
  #L314548.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L31454e.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L314552.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L314556.  v1:= 1I;
  #L314558.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L31455e.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L314562.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v17 @kind object, `byte`[][] v18 @kind object, `int` v19 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L314128.  v0:= v17 @kind object;
  #L31412c.  v1:= v18 @kind object;
  #L314130.  v2:= length @variable v0;
  #L314132.  v3:= 0I;
  #L314134.  v4:= 0I;
  #L314136.  if v4 >= v2 then goto L314238;
  #L31413a.  v5:= v4 + v2 @kind int;
  #L31413e.  v5:= v5 / 2;
  #L314142.  v6:= 10I;
  #L314146.  v7:= -1I;
  #L314148.  if v5 <= v7 then goto L31415a;
  #L31414c.  v8:= v0[v5] @kind byte;
  #L314150.  if v8 == v6 then goto L31415a;
  #L314154.  v5:= v5 + -1;
  #L314158.  goto L314142;
  #L31415a.  v5:= v5 + 1;
  #L31415e.  v8:= 1I;
  #L314160.  v9:= 1I;
  #L314162.  v10:= v5 + v9 @kind int;
  #L314166.  v11:= v0[v10] @kind byte;
  #L31416a.  if v11 == v6 then goto L314174;
  #L31416e.  v9:= v9 + 1;
  #L314172.  goto L314162;
  #L314174.  v6:= v10 - v5 @kind int;
  #L314178.  v11:= v19;
  #L31417c.  v9:= 0I;
  #L31417e.  v12:= 0I;
  #L314180.  v13:= 0I;
  #L314182.  if v9 == 0 then goto L31418e;
  #L314186.  v9:= 46I;
  #L31418a.  v14:= 0I;
  #L31418c.  goto L3141a4;
  #L31418e.  v14:= v1[v11] @kind object;
  #L314192.  v14:= v14[v12] @kind byte;
  #L314196.  v14:= v14 ^& 255;
  #L31419a.  v16:= v14;
  #L31419e.  v14:= v9;
  #L3141a0.  v9:= v16;
  #L3141a4.  v15:= v5 + v13 @kind int;
  #L3141a8.  v15:= v0[v15] @kind byte;
  #L3141ac.  v15:= v15 ^& 255;
  #L3141b0.  v9:= v9 - v15 @kind int;
  #L3141b2.  if v9 == 0 then goto L3141b8;
  #L3141b6.  goto L3141d8;
  #L3141b8.  v13:= v13 + 1;
  #L3141bc.  v12:= v12 + 1;
  #L3141c0.  if v13 != v6 then goto L3141c6;
  #L3141c4.  goto L3141d8;
  #L3141c6.  v15:= v1[v11] @kind object;
  #L3141ca.  v15:= length @variable v15;
  #L3141cc.  if v15 != v12 then goto L314234;
  #L3141d0.  v14:= length @variable v1;
  #L3141d2.  v14:= v14 - v8 @kind int;
  #L3141d4.  if v11 != v14 then goto L31422a;
  #L3141d8.  if v9 >= 0 then goto L3141e4;
  #L3141dc.  v5:= v5 + -1;
  #L3141e0.  v2:= v5;
  #L3141e2.  goto L314136;
  #L3141e4.  if v9 <= 0 then goto L3141ee;
  #L3141e8.  v4:= v10 + 1;
  #L3141ec.  goto L314136;
  #L3141ee.  v7:= v6 - v13 @kind int;
  #L3141f2.  v8:= v1[v11] @kind object;
  #L3141f6.  v8:= length @variable v8;
  #L3141f8.  v8:= v8 - v12 @kind int;
  #L3141fa.  v11:= v11 + 1;
  #L3141fe.  v9:= length @variable v1;
  #L314200.  if v11 >= v9 then goto L31420e;
  #L314204.  v9:= v1[v11] @kind object;
  #L314208.  v9:= length @variable v9;
  #L31420a.  v8:= v8 + v9 @kind int;
  #L31420c.  goto L3141fa;
  #L31420e.  if v8 >= v7 then goto L314214;
  #L314212.  goto L3141dc;
  #L314214.  if v8 <= v7 then goto L31421a;
  #L314218.  goto L3141e8;
  #L31421a.  v1:= new `java.lang.String`;
  #L31421e.  v2:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L314222.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L314228.  goto L31423a;
  #L31422a.  v11:= v11 + 1;
  #L31422e.  v9:= 1I;
  #L314230.  v12:= -1I;
  #L314232.  goto L314182;
  #L314234.  v9:= v14;
  #L314236.  goto L314182;
  #L314238.  v1:= 0I;
  #L31423a.  return v1 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L314314.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L314318.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L31431e.  v0:= temp;
  #L314320.  v1:= 0I;
  #L314322.  v2:= 1I;
  #L314324.  if v0 != 0 then goto L314340;
  #L314328.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L31432c.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L314332.  v0:= temp;
  #L314334.  if v0 == 0 then goto L314340;
  #L314338.  call `readTheListUninterruptibly`(v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L31433e.  goto L31435a;
  #L314340.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L314344.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L31434a.  goto L31435a;
  #L31434c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L314352.  v0:= temp @kind object;
  #L314354.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L31435a.  @monitorenter v8
  #L31435c.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L314360.  if v0 == 0 then goto L31448e;
  #L314364.  @monitorexit v8
  #L314366.  v0:= length @variable v9;
  #L314368.  v3:= new `byte`[][v0];
  #L31436c.  v4:= 0I;
  #L31436e.  v5:= length @variable v9;
  #L314370.  if v4 >= v5 then goto L31438e;
  #L314374.  v5:= v9[v4] @kind object;
  #L314378.  v6:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L31437c.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L314382.  v5:= temp @kind object;
  #L314384.  v3[v4]:= v5 @kind object;
  #L314388.  v4:= v4 + 1;
  #L31438c.  goto L31436e;
  #L31438e.  v9:= 0I;
  #L314390.  v4:= 0I;
  #L314392.  if v9 >= v0 then goto L3143ae;
  #L314396.  v5:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L31439a.  call temp:= `binarySearchBytes`(v5, v3, v9) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L3143a0.  v5:= temp @kind object;
  #L3143a2.  if v5 == 0 then goto L3143a8;
  #L3143a6.  goto L3143b0;
  #L3143a8.  v9:= v9 + 1;
  #L3143ac.  goto L314390;
  #L3143ae.  v5:= v4 @kind object;
  #L3143b0.  if v0 <= v2 then goto L3143ea;
  #L3143b4.  call temp:= `clone`(v3) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3143ba.  v9:= temp @kind object;
  #L3143bc.  v9:= (`byte`[][]) v9 @kind object;
  #L3143c0.  v6:= 0I;
  #L3143c2.  v7:= length @variable v9;
  #L3143c4.  v7:= v7 - v2 @kind int;
  #L3143c6.  if v6 >= v7 then goto L3143ea;
  #L3143ca.  v7:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L3143ce.  v9[v6]:= v7 @kind object;
  #L3143d2.  v7:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L3143d6.  call temp:= `binarySearchBytes`(v7, v9, v6) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L3143dc.  v7:= temp @kind object;
  #L3143de.  if v7 == 0 then goto L3143e4;
  #L3143e2.  goto L3143ec;
  #L3143e4.  v6:= v6 + 1;
  #L3143e8.  goto L3143c2;
  #L3143ea.  v7:= v4 @kind object;
  #L3143ec.  if v7 == 0 then goto L314412;
  #L3143f0.  v9:= v0 + -1;
  #L3143f4.  if v1 >= v9 then goto L314412;
  #L3143f8.  v9:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L3143fc.  call temp:= `binarySearchBytes`(v9, v3, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L314402.  v9:= temp @kind object;
  #L314404.  if v9 == 0 then goto L31440c;
  #L314408.  v4:= v9 @kind object;
  #L31440a.  goto L314412;
  #L31440c.  v1:= v1 + 1;
  #L314410.  goto L3143f0;
  #L314412.  if v4 == 0 then goto L314446;
  #L314416.  v9:= new `java.lang.StringBuilder`;
  #L31441a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L314420.  v0:= "!" @kind object;
  #L314424.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31442a.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L314430.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L314436.  v9:= temp @kind object;
  #L314438.  v0:= "\\." @kind object;
  #L31443c.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L314442.  v9:= temp @kind object;
  #L314444.  return v9 @kind object;
  #L314446.  if v5 != 0 then goto L314454;
  #L31444a.  if v7 != 0 then goto L314454;
  #L31444e.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L314452.  return v9 @kind object;
  #L314454.  if v5 == 0 then goto L314466;
  #L314458.  v9:= "\\." @kind object;
  #L31445c.  call temp:= `split`(v5, v9) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L314462.  v9:= temp @kind object;
  #L314464.  goto L31446a;
  #L314466.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L31446a.  if v7 == 0 then goto L31447c;
  #L31446e.  v0:= "\\." @kind object;
  #L314472.  call temp:= `split`(v7, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L314478.  v0:= temp @kind object;
  #L31447a.  goto L314480;
  #L31447c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L314480.  v1:= length @variable v9;
  #L314482.  v2:= length @variable v0;
  #L314484.  if v1 <= v2 then goto L31448a;
  #L314488.  goto L31448c;
  #L31448a.  v9:= v0 @kind object;
  #L31448c.  return v9 @kind object;
  #L31448e.  v9:= new `java.lang.IllegalStateException`;
  #L314492.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L314496.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31449c.  throw v9;
  #L31449e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3144a0.  @monitorexit v8
  #L3144a2.  goto L3144a6;
  #L3144a4.  throw v9;
  #L3144a6.  goto L3144a4;
  catch `java.lang.InterruptedException` @[L314340..L31434a] goto L31434c;
  catch `java.lang.Throwable` @[L31435c..L314366] goto L31449e;
  catch `java.lang.Throwable` @[L31448e..L3144a2] goto L31449e;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3144d8.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L3144dc.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L314574.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L314578.  v1:= "publicsuffixes.gz" @kind object;
  #L31457c.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L314582.  v0:= temp @kind object;
  #L314584.  if v0 != 0 then goto L31458a;
  #L314588.  return @kind void;
  #L31458a.  v1:= new `okio.s`;
  #L31458e.  call temp:= `l`(v0) @signature `Lokio/v;.l:(Ljava/io/InputStream;)Lokio/i0;` @kind static;
  #L314594.  v0:= temp @kind object;
  #L314596.  call `<init>`(v1, v0) @signature `Lokio/s;.<init>:(Lokio/i0;)V` @kind direct;
  #L31459c.  call temp:= `d`(v1) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L3145a2.  v0:= temp @kind object;
  #L3145a4.  call temp:= `readInt`(v0) @signature `Lokio/o;.readInt:()I` @kind interface;
  #L3145aa.  v1:= temp;
  #L3145ac.  v1:= new `byte`[v1];
  #L3145b0.  call `readFully`(v0, v1) @signature `Lokio/o;.readFully:([B)V` @kind interface;
  #L3145b6.  call temp:= `readInt`(v0) @signature `Lokio/o;.readInt:()I` @kind interface;
  #L3145bc.  v2:= temp;
  #L3145be.  v2:= new `byte`[v2];
  #L3145c2.  call `readFully`(v0, v2) @signature `Lokio/o;.readFully:([B)V` @kind interface;
  #L3145c8.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L3145ce.  @monitorenter v3
  #L3145d0.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L3145d4.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L3145d8.  @monitorexit v3
  #L3145da.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L3145de.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L3145e4.  return @kind void;
  #L3145e6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3145e8.  @monitorexit v3
  #L3145ea.  throw v0;
  #L3145ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3145ee.  throw v1;
  #L3145f0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3145f2.  if v0 == 0 then goto L314606;
  #L3145f6.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L3145fc.  goto L314606;
  #L3145fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L314600.  call `addSuppressed`(v1, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L314606.  throw v2;
  catch `java.lang.Throwable` @[L3145a4..L3145c8] goto L3145ec;
  catch `java.lang.Throwable` @[L3145d0..L3145da] goto L3145e6;
  catch `java.lang.Throwable` @[L3145e8..L3145ea] goto L3145e6;
  catch `java.lang.Throwable` @[L3145ee..L3145f0] goto L3145f0;
  catch `java.lang.Throwable` @[L3145f6..L3145fc] goto L3145fe;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31464c.  v0:= 0I;
  #L31464e.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #L314654.  if v0 == 0 then goto L314666;
  #L314658.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L31465e.  v0:= temp @kind object;
  #L314660.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L314666.  return @kind void;
  #L314668.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31466a.  goto L3146a0;
  #L31466c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L31466e.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L314674.  v2:= temp @kind object;
  #L314676.  v3:= 5I;
  #L314678.  v4:= "Failed to read public suffix list" @kind object;
  #L31467c.  call `log`(v2, v3, v4, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L314682.  if v0 == 0 then goto L314694;
  #L314686.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L31468c.  v0:= temp @kind object;
  #L31468e.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L314694.  return @kind void;
  #L314696.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L31469c.  v0:= 1I;
  #L31469e.  goto L31464e;
  #L3146a0.  if v0 == 0 then goto L3146b2;
  #L3146a4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3146aa.  v0:= temp @kind object;
  #L3146ac.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3146b2.  goto L3146b6;
  #L3146b4.  throw v1;
  #L3146b6.  goto L3146b4;
  catch `java.io.InterruptedIOException` @[L31464e..L314654] goto L314696;
  catch `java.io.IOException` @[L31464e..L314654] goto L31466c;
  catch `java.lang.Throwable` @[L31464e..L314654] goto L314668;
  catch `java.lang.Throwable` @[L31466e..L314682] goto L314668;
  catch `java.lang.Throwable` @[L314696..L31469c] goto L314668;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31424c.  v0:= "domain == null" @kind object;
  #L314250.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L314256.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L31425c.  v0:= temp @kind object;
  #L31425e.  v1:= "\\." @kind object;
  #L314262.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L314268.  v0:= temp @kind object;
  #L31426a.  call temp:= `findMatchingRule`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L314270.  v2:= temp @kind object;
  #L314272.  v3:= length @variable v0;
  #L314274.  v4:= length @variable v2;
  #L314276.  v5:= 33I;
  #L31427a.  v6:= 0I;
  #L31427c.  if v3 != v4 then goto L314294;
  #L314280.  v3:= v2[v6] @kind object;
  #L314284.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L31428a.  v3:= temp;
  #L31428c.  if v3 == v5 then goto L314294;
  #L314290.  v8:= 0I;
  #L314292.  return v8 @kind object;
  #L314294.  v3:= v2[v6] @kind object;
  #L314298.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L31429e.  v3:= temp;
  #L3142a0.  if v3 != v5 then goto L3142aa;
  #L3142a4.  v0:= length @variable v0;
  #L3142a6.  v2:= length @variable v2;
  #L3142a8.  goto L3142b2;
  #L3142aa.  v0:= length @variable v0;
  #L3142ac.  v2:= length @variable v2;
  #L3142ae.  v2:= v2 + 1;
  #L3142b2.  v0:= v0 - v2 @kind int;
  #L3142b4.  v2:= new `java.lang.StringBuilder`;
  #L3142b8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3142be.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3142c4.  v8:= temp @kind object;
  #L3142c6.  v1:= length @variable v8;
  #L3142c8.  if v0 >= v1 then goto L3142e6;
  #L3142cc.  v1:= v8[v0] @kind object;
  #L3142d0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3142d6.  v1:= 46I;
  #L3142da.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3142e0.  v0:= v0 + 1;
  #L3142e4.  goto L3142c6;
  #L3142e6.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3142ec.  v8:= temp;
  #L3142ee.  v8:= v8 + -1;
  #L3142f2.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3142f8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3142fe.  v8:= temp @kind object;
  #L314300.  return v8 @kind object;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag  {
    temp;

  #L3146ec.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L3146f0.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L3146f4.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3146f8.  v2:= 1I;
  #L3146fa.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L314700.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L314704.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L31470a.  return @kind void;
}
