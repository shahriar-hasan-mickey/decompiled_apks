record `okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` @kind class {
  `long` `okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1ExchangeCodec` `okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource` v2 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30accc.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` := v3 @kind object;
  #L30acd0.  v0:= 0I;
  #L30acd2.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/internal/http1/Http1ExchangeCodec$1;)V` @kind direct;
  #L30acd8.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L30acdc.  v0:= 0L;
  #L30ace0.  v3:= lcmp(v4, v0);
  #L30ace4.  if v3 != 0 then goto L30acee;
  #L30ace8.  call `responseBodyComplete`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @kind virtual;
  #L30acee.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource` v5 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30ad00.  v0:= v5.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.closed` @type ^`boolean` @kind boolean;
  #L30ad04.  if v0 == 0 then goto L30ad0a;
  #L30ad08.  return @kind void;
  #L30ad0a.  v0:= v5.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L30ad0e.  v2:= 0L;
  #L30ad12.  v4:= lcmp(v0, v2);
  #L30ad16.  if v4 == 0 then goto L30ad46;
  #L30ad1a.  v0:= 100I;
  #L30ad1e.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30ad22.  call temp:= `discard`(v5, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/i0;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L30ad28.  v0:= temp;
  #L30ad2a.  if v0 != 0 then goto L30ad46;
  #L30ad2e.  v0:= v5.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30ad32.  call temp:= `access$600`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$600:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/connection/RealConnection;` @kind static;
  #L30ad38.  v0:= temp @kind object;
  #L30ad3a.  call `noNewExchanges`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges:()V` @kind virtual;
  #L30ad40.  call `responseBodyComplete`(v5) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @kind virtual;
  #L30ad46.  v0:= 1I;
  #L30ad48.  v5.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L30ad4c.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource` v7 @kind this, `okio.k` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$FixedLengthSource;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30abfc.  v0:= 0L;
  #L30ac00.  v2:= lcmp(v9, v0);
  #L30ac04.  if v2 < 0 then goto L30ac8c;
  #L30ac08.  v2:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.closed` @type ^`boolean` @kind boolean;
  #L30ac0c.  if v2 != 0 then goto L30ac7c;
  #L30ac10.  v2:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L30ac14.  v4:= -1L;
  #L30ac18.  v6:= lcmp(v2, v0);
  #L30ac1c.  if v6 != 0 then goto L30ac22;
  #L30ac20.  return v4 @kind wide;
  #L30ac22.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L30ac28.  v9:= temp @kind wide;
  #L30ac2a.  call temp:= `read`(v7, v8, v9) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.read:(Lokio/k;J)J` @kind super;
  #L30ac30.  v8:= temp @kind wide;
  #L30ac32.  v10:= lcmp(v8, v4);
  #L30ac36.  if v10 == 0 then goto L30ac54;
  #L30ac3a.  v2:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L30ac3e.  v2:= v2 - v8 @kind long;
  #L30ac40.  v7.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.bytesRemaining` @type ^`long` := v2 @kind wide;
  #L30ac44.  v10:= lcmp(v2, v0);
  #L30ac48.  if v10 != 0 then goto L30ac52;
  #L30ac4c.  call `responseBodyComplete`(v7) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @kind virtual;
  #L30ac52.  return v8 @kind wide;
  #L30ac54.  v8:= v7.`okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30ac58.  call temp:= `access$600`(v8) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$600:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/connection/RealConnection;` @kind static;
  #L30ac5e.  v8:= temp @kind object;
  #L30ac60.  call `noNewExchanges`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges:()V` @kind virtual;
  #L30ac66.  v8:= new `java.net.ProtocolException`;
  #L30ac6a.  v9:= "unexpected end of stream" @kind object;
  #L30ac6e.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30ac74.  call `responseBodyComplete`(v7) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @kind virtual;
  #L30ac7a.  throw v8;
  #L30ac7c.  v8:= new `java.lang.IllegalStateException`;
  #L30ac80.  v9:= "closed" @kind object;
  #L30ac84.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30ac8a.  throw v8;
  #L30ac8c.  v8:= new `java.lang.IllegalArgumentException`;
  #L30ac90.  v0:= new `java.lang.StringBuilder`;
  #L30ac94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30ac9a.  v1:= "byteCount < 0: " @kind object;
  #L30ac9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30aca4.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30acaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30acb0.  v9:= temp @kind object;
  #L30acb2.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30acb8.  throw v8;
}
