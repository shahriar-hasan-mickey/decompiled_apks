record `okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` @kind class @AccessFlag ABSTRACT extends `okio.i0` @kind interface {
  `boolean` `okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.closed` @AccessFlag PROTECTED;
  `okhttp3.internal.http1.Http1ExchangeCodec` `okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.r` `okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.timeout` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` v1 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L30a6bc.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` := v2 @kind object;
  #L30a6c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30a6c6.  v0:= new `okio.r`;
  #L30a6ca.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$500:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/o;` @kind static;
  #L30a6d0.  v2:= temp @kind object;
  #L30a6d2.  call temp:= `timeout`(v2) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L30a6d8.  v2:= temp @kind object;
  #L30a6da.  call `<init>`(v0, v2) @signature `Lokio/r;.<init>:(Lokio/l0;)V` @kind direct;
  #L30a6e0.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.timeout` @type ^`okio.r` := v0 @kind object;
  #L30a6e4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` v0 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v1 @kind object, `okhttp3.internal.http1.Http1ExchangeCodec$1` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokhttp3/internal/http1/Http1ExchangeCodec$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30a6f8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;)V` @kind direct;
  #L30a6fe.  return @kind void;
}
procedure `void` `close`() @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.close:()V` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` v1 @kind this, `okio.k` v2 @kind object, `long` v3 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30a650.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a654.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$500:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/o;` @kind static;
  #L30a65a.  v0:= temp @kind object;
  #L30a65c.  call temp:= `read`(v0, v2, v3) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L30a662.  v2:= temp @kind wide;
  #L30a664.  return v2 @kind wide;
  #L30a666.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L30a668.  v3:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a66c.  call temp:= `access$600`(v3) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$600:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokhttp3/internal/connection/RealConnection;` @kind static;
  #L30a672.  v3:= temp @kind object;
  #L30a674.  call `noNewExchanges`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges:()V` @kind virtual;
  #L30a67a.  call `responseBodyComplete`(v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @kind virtual;
  #L30a680.  throw v2;
  catch `java.io.IOException` @[L30a650..L30a664] goto L30a666;
}
procedure `void` `responseBodyComplete`(`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` v3 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.responseBodyComplete:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30a710.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a714.  call temp:= `access$400`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$400:(Lokhttp3/internal/http1/Http1ExchangeCodec;)I` @kind static;
  #L30a71a.  v0:= temp;
  #L30a71c.  v1:= 6I;
  #L30a71e.  if v0 != v1 then goto L30a724;
  #L30a722.  return @kind void;
  #L30a724.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a728.  call temp:= `access$400`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$400:(Lokhttp3/internal/http1/Http1ExchangeCodec;)I` @kind static;
  #L30a72e.  v0:= temp;
  #L30a730.  v2:= 5I;
  #L30a732.  if v0 != v2 then goto L30a750;
  #L30a736.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a73a.  v2:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.timeout` @type ^`okio.r` @kind object;
  #L30a73e.  call `access$300`(v0, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$300:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokio/r;)V` @kind static;
  #L30a744.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a748.  call temp:= `access$402`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$402:(Lokhttp3/internal/http1/Http1ExchangeCodec;I)I` @kind static;
  #L30a74e.  return @kind void;
  #L30a750.  v0:= new `java.lang.IllegalStateException`;
  #L30a754.  v1:= new `java.lang.StringBuilder`;
  #L30a758.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30a75e.  v2:= "state: " @kind object;
  #L30a762.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a768.  v2:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L30a76c.  call temp:= `access$400`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$400:(Lokhttp3/internal/http1/Http1ExchangeCodec;)I` @kind static;
  #L30a772.  v2:= temp;
  #L30a774.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a77a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30a780.  v1:= temp @kind object;
  #L30a782.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a788.  throw v0;
}
procedure `okio.l0` `timeout`(`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$AbstractSource;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30a6a4.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.timeout` @type ^`okio.r` @kind object;
  #L30a6a8.  return v0 @kind object;
}
