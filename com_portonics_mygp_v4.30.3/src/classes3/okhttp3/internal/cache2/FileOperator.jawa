record `okhttp3.internal.cache2.FileOperator` @kind class @AccessFlag FINAL {
  `java.nio.channels.FileChannel` `okhttp3.internal.cache2.FileOperator.fileChannel` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.FileOperator` v0 @kind this, `java.nio.channels.FileChannel` v1 @kind object) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3046ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3046f2.  v0.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` := v1 @kind object;
  #L3046f6.  return @kind void;
}
procedure `void` `read`(`okhttp3.internal.cache2.FileOperator` v9 @kind this, `long` v10 , `okio.k` v12 @kind object, `long` v13 ) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L304708.  v0:= 0L;
  #L30470c.  v2:= lcmp(v13, v0);
  #L304710.  if v2 < 0 then goto L304736;
  #L304714.  v2:= lcmp(v13, v0);
  #L304718.  if v2 <= 0 then goto L304734;
  #L30471c.  v3:= v9.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L304720.  v4:= v10 @kind wide;
  #L304722.  v6:= v13 @kind wide;
  #L304724.  v8:= v12 @kind object;
  #L304726.  call temp:= `transferTo`(v3, v4, v6, v8) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L30472c.  v2:= temp @kind wide;
  #L30472e.  v10:= v10 + v2 @kind long;
  #L304730.  v13:= v13 - v2 @kind long;
  #L304732.  goto L304714;
  #L304734.  return @kind void;
  #L304736.  v10:= new `java.lang.IndexOutOfBoundsException`;
  #L30473a.  call `<init>`(v10) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L304740.  goto L304744;
  #L304742.  throw v10;
  #L304744.  goto L304742;
}
procedure `void` `write`(`okhttp3.internal.cache2.FileOperator` v13 @kind this, `long` v14 , `okio.k` v16 @kind object, `long` v17 ) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L304758.  v0:= 0L;
  #L30475c.  v2:= lcmp(v17, v0);
  #L304760.  if v2 < 0 then goto L3047a2;
  #L304764.  call temp:= `f1`(v16) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L30476a.  v2:= temp @kind wide;
  #L30476c.  v4:= lcmp(v17, v2);
  #L304770.  if v4 > 0 then goto L3047a2;
  #L304774.  v2:= v14 @kind wide;
  #L304776.  v11:= v17 @kind wide;
  #L30477a.  v4:= lcmp(v11, v0);
  #L30477e.  if v4 <= 0 then goto L30479e;
  #L304782.  v4:= v13 @kind object;
  #L304784.  v5:= v4.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L304788.  v6:= v16 @kind object;
  #L30478c.  v7:= v2 @kind wide;
  #L30478e.  v9:= v11 @kind wide;
  #L304790.  call temp:= `transferFrom`(v5, v6, v7, v9) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L304796.  v5:= temp @kind wide;
  #L304798.  v2:= v2 + v5 @kind long;
  #L30479a.  v11:= v11 - v5 @kind long;
  #L30479c.  goto L30477a;
  #L30479e.  v4:= v13 @kind object;
  #L3047a0.  return @kind void;
  #L3047a2.  v4:= v13 @kind object;
  #L3047a4.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3047a8.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3047ae.  goto L3047b2;
  #L3047b0.  throw v0;
  #L3047b2.  goto L3047b0;
}
