record `okhttp3.internal.cache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Editor.done` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Editor.entry` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Editor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean`[] `okhttp3.internal.cache.DiskLruCache$Editor.written` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Editor` v0 @kind this, `okhttp3.internal.cache.DiskLruCache` v1 @kind object, `okhttp3.internal.cache.DiskLruCache$Entry` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L302e94.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v1 @kind object;
  #L302e98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302e9e.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v2 @kind object;
  #L302ea2.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L302ea6.  if v2 == 0 then goto L302eae;
  #L302eaa.  v1:= 0I;
  #L302eac.  goto L302eb6;
  #L302eae.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L302eb2.  v1:= new `boolean`[v1];
  #L302eb6.  v0.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] := v1 @kind object;
  #L302eba.  return @kind void;
}
procedure `void` `abort`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L302ecc.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302ed0.  @monitorenter v0
  #L302ed2.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L302ed6.  if v1 != 0 then goto L302efc;
  #L302eda.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302ede.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302ee2.  if v1 != v3 then goto L302ef2;
  #L302ee6.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302eea.  v2:= 0I;
  #L302eec.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L302ef2.  v1:= 1I;
  #L302ef4.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v1 @kind boolean;
  #L302ef8.  @monitorexit v0
  #L302efa.  return @kind void;
  #L302efc.  v1:= new `java.lang.IllegalStateException`;
  #L302f00.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L302f06.  throw v1;
  #L302f08.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302f0a.  @monitorexit v0
  #L302f0c.  throw v1;
  catch `java.lang.Throwable` @[L302ed2..L302f0c] goto L302f08;
}
procedure `void` `abortUnlessCommitted`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L302f2c.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302f30.  @monitorenter v0
  #L302f32.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L302f36.  if v1 != 0 then goto L302f52;
  #L302f3a.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302f3e.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302f42.  if v1 != v3 then goto L302f52;
  #L302f46.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302f4a.  v2:= 0I;
  #L302f4c.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L302f52.  @monitorexit v0
  #L302f54.  return @kind void;
  #L302f56.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302f58.  @monitorexit v0
  #L302f5a.  throw v1;
  catch `java.lang.Throwable` @[L302f32..L302f42] goto L302f56;
  catch `java.io.IOException` @[L302f46..L302f52] goto L302f52;
  catch `java.lang.Throwable` @[L302f46..L302f52] goto L302f56;
  catch `java.lang.Throwable` @[L302f52..L302f5a] goto L302f56;
}
procedure `void` `commit`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L302f8c.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302f90.  @monitorenter v0
  #L302f92.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L302f96.  if v1 != 0 then goto L302fba;
  #L302f9a.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302f9e.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302fa2.  v2:= 1I;
  #L302fa4.  if v1 != v3 then goto L302fb2;
  #L302fa8.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302fac.  call `completeEdit`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L302fb2.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v2 @kind boolean;
  #L302fb6.  @monitorexit v0
  #L302fb8.  return @kind void;
  #L302fba.  v1:= new `java.lang.IllegalStateException`;
  #L302fbe.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L302fc4.  throw v1;
  #L302fc6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302fc8.  @monitorexit v0
  #L302fca.  throw v1;
  catch `java.lang.Throwable` @[L302f92..L302fca] goto L302fc6;
}
procedure `void` `detach`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.detach:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L302fe8.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302fec.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302ff0.  if v0 != v3 then goto L303028;
  #L302ff4.  v0:= 0I;
  #L302ff6.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302ffa.  v2:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L302ffe.  if v0 >= v2 then goto L30301e;
  #L303002.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L303006.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L30300a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L30300e.  v2:= v2[v0] @kind object;
  #L303012.  call `delete`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L303018.  v0:= v0 + 1;
  #L30301c.  goto L302ff6;
  #L30301e.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L303022.  v1:= 0I;
  #L303024.  v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v1 @kind object;
  #L303028.  return @kind void;
  catch `java.io.IOException` @[L303002..L303018] goto L303018;
}
procedure `okio.g0` `newSink`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L302d5c.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302d60.  @monitorenter v0
  #L302d62.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L302d66.  if v1 != 0 then goto L302dc6;
  #L302d6a.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302d6e.  v2:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302d72.  if v2 == v4 then goto L302d82;
  #L302d76.  call temp:= `b`() @signature `Lokio/v;.b:()Lokio/g0;` @kind static;
  #L302d7c.  v5:= temp @kind object;
  #L302d7e.  @monitorexit v0
  #L302d80.  return v5 @kind object;
  #L302d82.  v2:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L302d86.  if v2 != 0 then goto L302d94;
  #L302d8a.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L302d8e.  v3:= 1I;
  #L302d90.  v2[v5]:= v3 @kind boolean;
  #L302d94.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L302d98.  v5:= v1[v5] @kind object;
  #L302d9c.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302da0.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L302da4.  call temp:= `sink`(v1, v5) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/g0;` @kind interface;
  #L302daa.  v5:= temp @kind object;
  #L302dac.  v1:= new `okhttp3.internal.cache.DiskLruCache$Editor$1`;
  #L302db0.  call `<init>`(v1, v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Editor;Lokio/g0;)V` @kind direct;
  #L302db6.  @monitorexit v0
  #L302db8.  return v1 @kind object;
  #L302dba.  call temp:= `b`() @signature `Lokio/v;.b:()Lokio/g0;` @kind static;
  #L302dc0.  v5:= temp @kind object;
  #L302dc2.  @monitorexit v0
  #L302dc4.  return v5 @kind object;
  #L302dc6.  v5:= new `java.lang.IllegalStateException`;
  #L302dca.  call `<init>`(v5) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L302dd0.  throw v5;
  #L302dd2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302dd4.  @monitorexit v0
  #L302dd6.  throw v5;
  catch `java.lang.Throwable` @[L302d62..L302d9c] goto L302dd2;
  catch `java.io.FileNotFoundException` @[L302d9c..L302dac] goto L302dba;
  catch `java.lang.Throwable` @[L302d9c..L302dac] goto L302dd2;
  catch `java.lang.Throwable` @[L302dac..L302dd6] goto L302dd2;
}
procedure `okio.i0` `newSource`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSource:(I)Lokio/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L302e08.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302e0c.  @monitorenter v0
  #L302e0e.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L302e12.  if v1 != 0 then goto L302e52;
  #L302e16.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L302e1a.  v2:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L302e1e.  v3:= 0I;
  #L302e20.  if v2 == 0 then goto L302e4e;
  #L302e24.  v2:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L302e28.  if v2 == v4 then goto L302e2e;
  #L302e2c.  goto L302e4e;
  #L302e2e.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302e32.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L302e36.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L302e3a.  v5:= v1[v5] @kind object;
  #L302e3e.  call temp:= `source`(v2, v5) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/i0;` @kind interface;
  #L302e44.  v5:= temp @kind object;
  #L302e46.  @monitorexit v0
  #L302e48.  return v5 @kind object;
  #L302e4a.  @monitorexit v0
  #L302e4c.  return v3 @kind object;
  #L302e4e.  @monitorexit v0
  #L302e50.  return v3 @kind object;
  #L302e52.  v5:= new `java.lang.IllegalStateException`;
  #L302e56.  call `<init>`(v5) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L302e5c.  throw v5;
  #L302e5e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302e60.  @monitorexit v0
  #L302e62.  throw v5;
  catch `java.lang.Throwable` @[L302e0e..L302e28] goto L302e5e;
  catch `java.io.FileNotFoundException` @[L302e2e..L302e46] goto L302e4a;
  catch `java.lang.Throwable` @[L302e2e..L302e46] goto L302e5e;
  catch `java.lang.Throwable` @[L302e46..L302e62] goto L302e5e;
}
