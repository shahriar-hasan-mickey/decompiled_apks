record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this, `long` v4 , `okhttp3.Request` v6 @kind object, `okhttp3.Response` v7 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L302820.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302826.  v0:= -1I;
  #L302828.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v0;
  #L30282c.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v4 @kind wide;
  #L302830.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v6 @kind object;
  #L302834.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v7 @kind object;
  #L302838.  if v7 == 0 then goto L302914;
  #L30283c.  call temp:= `sentRequestAtMillis`(v7) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L302842.  v4:= temp @kind wide;
  #L302844.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v4 @kind wide;
  #L302848.  call temp:= `receivedResponseAtMillis`(v7) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L30284e.  v4:= temp @kind wide;
  #L302850.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v4 @kind wide;
  #L302854.  call temp:= `headers`(v7) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L30285a.  v4:= temp @kind object;
  #L30285c.  v5:= 0I;
  #L30285e.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L302864.  v6:= temp;
  #L302866.  if v5 >= v6 then goto L302914;
  #L30286a.  call temp:= `name`(v4, v5) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L302870.  v7:= temp @kind object;
  #L302872.  call temp:= `value`(v4, v5) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L302878.  v1:= temp @kind object;
  #L30287a.  v2:= "Date" @kind object;
  #L30287e.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L302884.  v2:= temp;
  #L302886.  if v2 == 0 then goto L30289c;
  #L30288a.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L302890.  v7:= temp @kind object;
  #L302892.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v7 @kind object;
  #L302896.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v1 @kind object;
  #L30289a.  goto L30290e;
  #L30289c.  v2:= "Expires" @kind object;
  #L3028a0.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3028a6.  v2:= temp;
  #L3028a8.  if v2 == 0 then goto L3028ba;
  #L3028ac.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L3028b2.  v7:= temp @kind object;
  #L3028b4.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v7 @kind object;
  #L3028b8.  goto L30290e;
  #L3028ba.  v2:= "Last-Modified" @kind object;
  #L3028be.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3028c4.  v2:= temp;
  #L3028c6.  if v2 == 0 then goto L3028dc;
  #L3028ca.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L3028d0.  v7:= temp @kind object;
  #L3028d2.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v7 @kind object;
  #L3028d6.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v1 @kind object;
  #L3028da.  goto L30290e;
  #L3028dc.  v2:= "ETag" @kind object;
  #L3028e0.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3028e6.  v2:= temp;
  #L3028e8.  if v2 == 0 then goto L3028f2;
  #L3028ec.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v1 @kind object;
  #L3028f0.  goto L30290e;
  #L3028f2.  v2:= "Age" @kind object;
  #L3028f6.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3028fc.  v7:= temp;
  #L3028fe.  if v7 == 0 then goto L30290e;
  #L302902.  call temp:= `parseSeconds`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L302908.  v7:= temp;
  #L30290a.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v7;
  #L30290e.  v5:= v5 + 1;
  #L302912.  goto L302866;
  #L302914.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L302434.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L302438.  v1:= 0L;
  #L30243c.  if v0 == 0 then goto L302456;
  #L302440.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L302444.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L30244a.  v5:= temp @kind wide;
  #L30244c.  v3:= v3 - v5 @kind long;
  #L30244e.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L302454.  v1:= temp @kind wide;
  #L302456.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L30245a.  v3:= -1I;
  #L30245c.  if v0 == v3 then goto L302476;
  #L302460.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L302464.  v4:= (`long`) v0 @kind i2l;
  #L302466.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L30246c.  v3:= temp @kind wide;
  #L30246e.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L302474.  v1:= temp @kind wide;
  #L302476.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L30247a.  v5:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L30247e.  v5:= v3 - v5 @kind long;
  #L302482.  v7:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L302486.  v7:= v7 - v3 @kind long;
  #L302488.  v1:= v1 + v5 @kind long;
  #L30248a.  v1:= v1 + v7 @kind long;
  #L30248c.  return v1 @kind wide;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v7 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3024a0.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L3024a4.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L3024aa.  v0:= temp @kind object;
  #L3024ac.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L3024b2.  v1:= temp;
  #L3024b4.  v2:= -1I;
  #L3024b6.  if v1 == v2 then goto L3024d2;
  #L3024ba.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3024be.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L3024c4.  v0:= temp;
  #L3024c6.  v2:= (`long`) v0 @kind i2l;
  #L3024c8.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3024ce.  v0:= temp @kind wide;
  #L3024d0.  return v0 @kind wide;
  #L3024d2.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L3024d6.  v1:= 0L;
  #L3024da.  if v0 == 0 then goto L30250e;
  #L3024de.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L3024e2.  if v0 == 0 then goto L3024f0;
  #L3024e6.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3024ec.  v3:= temp @kind wide;
  #L3024ee.  goto L3024f4;
  #L3024f0.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L3024f4.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L3024f8.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3024fe.  v5:= temp @kind wide;
  #L302500.  v5:= v5 - v3 @kind long;
  #L302502.  v0:= lcmp(v5, v1);
  #L302506.  if v0 <= 0 then goto L30250c;
  #L30250a.  v1:= v5 @kind wide;
  #L30250c.  return v1 @kind wide;
  #L30250e.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L302512.  if v0 == 0 then goto L30256a;
  #L302516.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L30251a.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L302520.  v0:= temp @kind object;
  #L302522.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L302528.  v0:= temp @kind object;
  #L30252a.  call temp:= `query`(v0) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L302530.  v0:= temp @kind object;
  #L302532.  if v0 != 0 then goto L30256a;
  #L302536.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L30253a.  if v0 == 0 then goto L302548;
  #L30253e.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L302544.  v3:= temp @kind wide;
  #L302546.  goto L30254c;
  #L302548.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L30254c.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L302550.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L302556.  v5:= temp @kind wide;
  #L302558.  v3:= v3 - v5 @kind long;
  #L30255a.  v0:= lcmp(v3, v1);
  #L30255e.  if v0 <= 0 then goto L30256a;
  #L302562.  v0:= 10L;
  #L302566.  v1:= v3 / v0 @kind long;
  #L30256a.  return v1 @kind wide;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v13 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3025c4.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L3025c8.  v1:= 0I;
  #L3025ca.  if v0 != 0 then goto L3025de;
  #L3025ce.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L3025d2.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L3025d6.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L3025dc.  return v0 @kind object;
  #L3025de.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L3025e2.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L3025e8.  v0:= temp;
  #L3025ea.  if v0 == 0 then goto L30260e;
  #L3025ee.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L3025f2.  call temp:= `handshake`(v0) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L3025f8.  v0:= temp @kind object;
  #L3025fa.  if v0 != 0 then goto L30260e;
  #L3025fe.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L302602.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L302606.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L30260c.  return v0 @kind object;
  #L30260e.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L302612.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L302616.  call temp:= `isCacheable`(v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L30261c.  v0:= temp;
  #L30261e.  if v0 != 0 then goto L302632;
  #L302622.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L302626.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L30262a.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L302630.  return v0 @kind object;
  #L302632.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L302636.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L30263c.  v0:= temp @kind object;
  #L30263e.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L302644.  v2:= temp;
  #L302646.  if v2 != 0 then goto L3027fe;
  #L30264a.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L30264e.  call temp:= `hasConditions`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L302654.  v2:= temp;
  #L302656.  if v2 == 0 then goto L30265e;
  #L30265a.  goto L3027fe;
  #L30265e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L302662.  call temp:= `cacheControl`(v2) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L302668.  v2:= temp @kind object;
  #L30266a.  call temp:= `cacheResponseAge`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L302670.  v3:= temp @kind wide;
  #L302672.  call temp:= `computeFreshnessLifetime`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L302678.  v5:= temp @kind wide;
  #L30267a.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L302680.  v7:= temp;
  #L302682.  v8:= -1I;
  #L302684.  if v7 == v8 then goto L3026a6;
  #L302688.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30268c.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L302692.  v9:= temp;
  #L302694.  v9:= (`long`) v9 @kind i2l;
  #L302696.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L30269c.  v9:= temp @kind wide;
  #L30269e.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3026a4.  v5:= temp @kind wide;
  #L3026a6.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L3026ac.  v7:= temp;
  #L3026ae.  v9:= 0L;
  #L3026b2.  if v7 == v8 then goto L3026ce;
  #L3026b6.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3026ba.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L3026c0.  v11:= temp;
  #L3026c2.  v11:= (`long`) v11 @kind i2l;
  #L3026c4.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3026ca.  v11:= temp @kind wide;
  #L3026cc.  goto L3026d0;
  #L3026ce.  v11:= v9 @kind wide;
  #L3026d0.  call temp:= `mustRevalidate`(v2) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L3026d6.  v7:= temp;
  #L3026d8.  if v7 != 0 then goto L3026fe;
  #L3026dc.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L3026e2.  v7:= temp;
  #L3026e4.  if v7 == v8 then goto L3026fe;
  #L3026e8.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3026ec.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L3026f2.  v0:= temp;
  #L3026f4.  v8:= (`long`) v0 @kind i2l;
  #L3026f6.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3026fc.  v9:= temp @kind wide;
  #L3026fe.  call temp:= `noCache`(v2) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L302704.  v0:= temp;
  #L302706.  if v0 != 0 then goto L302770;
  #L30270a.  v11:= v11 + v3 @kind long;
  #L30270c.  v9:= v9 + v5 @kind long;
  #L30270e.  v0:= lcmp(v11, v9);
  #L302712.  if v0 >= 0 then goto L302770;
  #L302716.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L30271a.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L302720.  v0:= temp @kind object;
  #L302722.  v2:= "Warning" @kind object;
  #L302726.  v7:= lcmp(v11, v5);
  #L30272a.  if v7 < 0 then goto L302738;
  #L30272e.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L302732.  call temp:= `addHeader`(v0, v2, v5) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302738.  v5:= 86400000L;
  #L30273e.  v7:= lcmp(v3, v5);
  #L302742.  if v7 <= 0 then goto L30275c;
  #L302746.  call temp:= `isFreshnessLifetimeHeuristic`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L30274c.  v3:= temp;
  #L30274e.  if v3 == 0 then goto L30275c;
  #L302752.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L302756.  call temp:= `addHeader`(v0, v2, v3) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30275c.  v2:= new `okhttp3.internal.cache.CacheStrategy`;
  #L302760.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L302766.  v0:= temp @kind object;
  #L302768.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L30276e.  return v2 @kind object;
  #L302770.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L302774.  v2:= "If-Modified-Since" @kind object;
  #L302778.  if v0 == 0 then goto L302782;
  #L30277c.  v2:= "If-None-Match" @kind object;
  #L302780.  goto L30279c;
  #L302782.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L302786.  if v0 == 0 then goto L302790;
  #L30278a.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L30278e.  goto L30279c;
  #L302790.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L302794.  if v0 == 0 then goto L3027ee;
  #L302798.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L30279c.  v1:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L3027a0.  call temp:= `headers`(v1) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L3027a6.  v1:= temp @kind object;
  #L3027a8.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L3027ae.  v1:= temp @kind object;
  #L3027b0.  v3:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L3027b4.  call `addLenient`(v3, v1, v2, v0) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3027ba.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L3027be.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L3027c4.  v0:= temp @kind object;
  #L3027c6.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L3027cc.  v1:= temp @kind object;
  #L3027ce.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L3027d4.  v0:= temp @kind object;
  #L3027d6.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L3027dc.  v0:= temp @kind object;
  #L3027de.  v1:= new `okhttp3.internal.cache.CacheStrategy`;
  #L3027e2.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L3027e6.  call `<init>`(v1, v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L3027ec.  return v1 @kind object;
  #L3027ee.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L3027f2.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L3027f6.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L3027fc.  return v0 @kind object;
  #L3027fe.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L302802.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L302806.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L30280c.  return v0 @kind object;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3023bc.  v0:= "If-Modified-Since" @kind object;
  #L3023c0.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3023c6.  v0:= temp @kind object;
  #L3023c8.  if v0 != 0 then goto L3023e2;
  #L3023cc.  v0:= "If-None-Match" @kind object;
  #L3023d0.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3023d6.  v1:= temp @kind object;
  #L3023d8.  if v1 == 0 then goto L3023de;
  #L3023dc.  goto L3023e2;
  #L3023de.  v1:= 0I;
  #L3023e0.  goto L3023e4;
  #L3023e2.  v1:= 1I;
  #L3023e4.  return v1;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3023f8.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L3023fc.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L302402.  v0:= temp @kind object;
  #L302404.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L30240a.  v0:= temp;
  #L30240c.  v1:= -1I;
  #L30240e.  if v0 != v1 then goto L30241e;
  #L302412.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L302416.  if v0 != 0 then goto L30241e;
  #L30241a.  v0:= 1I;
  #L30241c.  goto L302420;
  #L30241e.  v0:= 0I;
  #L302420.  return v0;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30257c.  call temp:= `getCandidate`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L302582.  v0:= temp @kind object;
  #L302584.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L302588.  if v1 == 0 then goto L3025b0;
  #L30258c.  v1:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L302590.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L302596.  v1:= temp @kind object;
  #L302598.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L30259e.  v1:= temp;
  #L3025a0.  if v1 == 0 then goto L3025b0;
  #L3025a4.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L3025a8.  v1:= 0I;
  #L3025aa.  call `<init>`(v0, v1, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L3025b0.  return v0 @kind object;
}
