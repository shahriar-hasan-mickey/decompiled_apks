record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.internal.cache.InternalCache` `okhttp3.internal.cache.CacheInterceptor.cache` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.internal.cache.InternalCache` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3023a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3023a6.  v0.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L3023aa.  return @kind void;
}
procedure `okhttp3.Response` `cacheWritingResponse`(`okhttp3.internal.cache.CacheInterceptor` v4 @kind this, `okhttp3.internal.cache.CacheRequest` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L302030.  if v5 != 0 then goto L302036;
  #L302034.  return v6 @kind object;
  #L302036.  call temp:= `body`(v5) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/g0;` @kind interface;
  #L30203c.  v0:= temp @kind object;
  #L30203e.  if v0 != 0 then goto L302044;
  #L302042.  return v6 @kind object;
  #L302044.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30204a.  v1:= temp @kind object;
  #L30204c.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L302052.  v1:= temp @kind object;
  #L302054.  call temp:= `c`(v0) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L30205a.  v0:= temp @kind object;
  #L30205c.  v2:= new `okhttp3.internal.cache.CacheInterceptor$1`;
  #L302060.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/o;Lokhttp3/internal/cache/CacheRequest;Lokio/n;)V` @kind direct;
  #L302066.  v5:= "Content-Type" @kind object;
  #L30206a.  call temp:= `header`(v6, v5) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L302070.  v5:= temp @kind object;
  #L302072.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L302078.  v0:= temp @kind object;
  #L30207a.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L302080.  v0:= temp @kind wide;
  #L302082.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L302088.  v6:= temp @kind object;
  #L30208a.  v3:= new `okhttp3.internal.http.RealResponseBody`;
  #L30208e.  call temp:= `d`(v2) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L302094.  v2:= temp @kind object;
  #L302096.  call `<init>`(v3, v5, v0, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/o;)V` @kind direct;
  #L30209c.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L3020a2.  v5:= temp @kind object;
  #L3020a4.  call temp:= `build`(v5) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L3020aa.  v5:= temp @kind object;
  #L3020ac.  return v5 @kind object;
}
procedure `okhttp3.Headers` `combine`(`okhttp3.Headers` v7 @kind object, `okhttp3.Headers` v8 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L301f50.  v0:= new `okhttp3.Headers$Builder`;
  #L301f54.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L301f5a.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L301f60.  v1:= temp;
  #L301f62.  v2:= 0I;
  #L301f64.  v3:= 0I;
  #L301f66.  if v3 >= v1 then goto L301fd0;
  #L301f6a.  call temp:= `name`(v7, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L301f70.  v4:= temp @kind object;
  #L301f72.  call temp:= `value`(v7, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L301f78.  v5:= temp @kind object;
  #L301f7a.  v6:= "Warning" @kind object;
  #L301f7e.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301f84.  v6:= temp;
  #L301f86.  if v6 == 0 then goto L301f9c;
  #L301f8a.  v6:= "1" @kind object;
  #L301f8e.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L301f94.  v6:= temp;
  #L301f96.  if v6 == 0 then goto L301f9c;
  #L301f9a.  goto L301fca;
  #L301f9c.  call temp:= `isContentSpecificHeader`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L301fa2.  v6:= temp;
  #L301fa4.  if v6 != 0 then goto L301fc0;
  #L301fa8.  call temp:= `isEndToEnd`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L301fae.  v6:= temp;
  #L301fb0.  if v6 == 0 then goto L301fc0;
  #L301fb4.  call temp:= `get`(v8, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L301fba.  v6:= temp @kind object;
  #L301fbc.  if v6 != 0 then goto L301fca;
  #L301fc0.  v6:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L301fc4.  call `addLenient`(v6, v0, v4, v5) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L301fca.  v3:= v3 + 1;
  #L301fce.  goto L301f66;
  #L301fd0.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L301fd6.  v7:= temp;
  #L301fd8.  if v2 >= v7 then goto L302014;
  #L301fdc.  call temp:= `name`(v8, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L301fe2.  v1:= temp @kind object;
  #L301fe4.  call temp:= `isContentSpecificHeader`(v1) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L301fea.  v3:= temp;
  #L301fec.  if v3 != 0 then goto L30200e;
  #L301ff0.  call temp:= `isEndToEnd`(v1) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L301ff6.  v3:= temp;
  #L301ff8.  if v3 == 0 then goto L30200e;
  #L301ffc.  v3:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L302000.  call temp:= `value`(v8, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L302006.  v4:= temp @kind object;
  #L302008.  call `addLenient`(v3, v0, v1, v4) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L30200e.  v2:= v2 + 1;
  #L302012.  goto L301fd8;
  #L302014.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L30201a.  v7:= temp @kind object;
  #L30201c.  return v7 @kind object;
}
procedure `boolean` `isContentSpecificHeader`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L301e6c.  v0:= "Content-Length" @kind object;
  #L301e70.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301e76.  v0:= temp;
  #L301e78.  if v0 != 0 then goto L301ea2;
  #L301e7c.  v0:= "Content-Encoding" @kind object;
  #L301e80.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301e86.  v0:= temp;
  #L301e88.  if v0 != 0 then goto L301ea2;
  #L301e8c.  v0:= "Content-Type" @kind object;
  #L301e90.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301e96.  v1:= temp;
  #L301e98.  if v1 == 0 then goto L301e9e;
  #L301e9c.  goto L301ea2;
  #L301e9e.  v1:= 0I;
  #L301ea0.  goto L301ea4;
  #L301ea2.  v1:= 1I;
  #L301ea4.  return v1;
}
procedure `boolean` `isEndToEnd`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L301eb8.  v0:= "Connection" @kind object;
  #L301ebc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301ec2.  v0:= temp;
  #L301ec4.  if v0 != 0 then goto L301f3c;
  #L301ec8.  v0:= "Keep-Alive" @kind object;
  #L301ecc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301ed2.  v0:= temp;
  #L301ed4.  if v0 != 0 then goto L301f3c;
  #L301ed8.  v0:= "Proxy-Authenticate" @kind object;
  #L301edc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301ee2.  v0:= temp;
  #L301ee4.  if v0 != 0 then goto L301f3c;
  #L301ee8.  v0:= "Proxy-Authorization" @kind object;
  #L301eec.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301ef2.  v0:= temp;
  #L301ef4.  if v0 != 0 then goto L301f3c;
  #L301ef8.  v0:= "TE" @kind object;
  #L301efc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301f02.  v0:= temp;
  #L301f04.  if v0 != 0 then goto L301f3c;
  #L301f08.  v0:= "Trailers" @kind object;
  #L301f0c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301f12.  v0:= temp;
  #L301f14.  if v0 != 0 then goto L301f3c;
  #L301f18.  v0:= "Transfer-Encoding" @kind object;
  #L301f1c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301f22.  v0:= temp;
  #L301f24.  if v0 != 0 then goto L301f3c;
  #L301f28.  v0:= "Upgrade" @kind object;
  #L301f2c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L301f32.  v1:= temp;
  #L301f34.  if v1 != 0 then goto L301f3c;
  #L301f38.  v1:= 1I;
  #L301f3a.  goto L301f3e;
  #L301f3c.  v1:= 0I;
  #L301f3e.  return v1;
}
procedure `okhttp3.Response` `stripBody`(`okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L302364.  if v1 == 0 then goto L30238e;
  #L302368.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30236e.  v0:= temp @kind object;
  #L302370.  if v0 == 0 then goto L30238e;
  #L302374.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L30237a.  v1:= temp @kind object;
  #L30237c.  v0:= 0I;
  #L30237e.  call temp:= `body`(v1, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302384.  v1:= temp @kind object;
  #L302386.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L30238c.  v1:= temp @kind object;
  #L30238e.  return v1 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v5 @kind this, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3020c0.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L3020c4.  if v0 == 0 then goto L3020da;
  #L3020c8.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L3020ce.  v1:= temp @kind object;
  #L3020d0.  call temp:= `get`(v0, v1) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L3020d6.  v0:= temp @kind object;
  #L3020d8.  goto L3020dc;
  #L3020da.  v0:= 0I;
  #L3020dc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3020e2.  v1:= temp @kind wide;
  #L3020e4.  v3:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L3020e8.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L3020ee.  v4:= temp @kind object;
  #L3020f0.  call `<init>`(v3, v1, v4, v0) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L3020f6.  call temp:= `get`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L3020fc.  v1:= temp @kind object;
  #L3020fe.  v2:= v1.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L302102.  v3:= v1.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L302106.  v4:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L30210a.  if v4 == 0 then goto L302114;
  #L30210e.  call `trackResponse`(v4, v1) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind interface;
  #L302114.  if v0 == 0 then goto L30212a;
  #L302118.  if v3 != 0 then goto L30212a;
  #L30211c.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L302122.  v1:= temp @kind object;
  #L302124.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30212a.  if v2 != 0 then goto L3021a2;
  #L30212e.  if v3 != 0 then goto L3021a2;
  #L302132.  v0:= new `okhttp3.Response$Builder`;
  #L302136.  call `<init>`(v0) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L30213c.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L302142.  v6:= temp @kind object;
  #L302144.  call temp:= `request`(v0, v6) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30214a.  v6:= temp @kind object;
  #L30214c.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L302150.  call temp:= `protocol`(v6, v0) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302156.  v6:= temp @kind object;
  #L302158.  v0:= 504I;
  #L30215c.  call temp:= `code`(v6, v0) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L302162.  v6:= temp @kind object;
  #L302164.  v0:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L302168.  call temp:= `message`(v6, v0) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30216e.  v6:= temp @kind object;
  #L302170.  v0:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L302174.  call temp:= `body`(v6, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30217a.  v6:= temp @kind object;
  #L30217c.  v0:= -1L;
  #L302180.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L302186.  v6:= temp @kind object;
  #L302188.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L30218e.  v0:= temp @kind wide;
  #L302190.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L302196.  v6:= temp @kind object;
  #L302198.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L30219e.  v6:= temp @kind object;
  #L3021a0.  return v6 @kind object;
  #L3021a2.  if v2 != 0 then goto L3021c8;
  #L3021a6.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L3021ac.  v6:= temp @kind object;
  #L3021ae.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L3021b4.  v0:= temp @kind object;
  #L3021b6.  call temp:= `cacheResponse`(v6, v0) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L3021bc.  v6:= temp @kind object;
  #L3021be.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L3021c4.  v6:= temp @kind object;
  #L3021c6.  return v6 @kind object;
  #L3021c8.  call temp:= `proceed`(v6, v2) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L3021ce.  v6:= temp @kind object;
  #L3021d0.  if v6 != 0 then goto L3021e6;
  #L3021d4.  if v0 == 0 then goto L3021e6;
  #L3021d8.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L3021de.  v0:= temp @kind object;
  #L3021e0.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L3021e6.  if v3 == 0 then goto L30229c;
  #L3021ea.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L3021f0.  v0:= temp;
  #L3021f2.  v1:= 304I;
  #L3021f6.  if v0 != v1 then goto L30228e;
  #L3021fa.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L302200.  v0:= temp @kind object;
  #L302202.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L302208.  v1:= temp @kind object;
  #L30220a.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L302210.  v2:= temp @kind object;
  #L302212.  call temp:= `combine`(v1, v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L302218.  v1:= temp @kind object;
  #L30221a.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302220.  v0:= temp @kind object;
  #L302222.  call temp:= `sentRequestAtMillis`(v6) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L302228.  v1:= temp @kind wide;
  #L30222a.  call temp:= `sentRequestAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L302230.  v0:= temp @kind object;
  #L302232.  call temp:= `receivedResponseAtMillis`(v6) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L302238.  v1:= temp @kind wide;
  #L30223a.  call temp:= `receivedResponseAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L302240.  v0:= temp @kind object;
  #L302242.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L302248.  v1:= temp @kind object;
  #L30224a.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302250.  v0:= temp @kind object;
  #L302252.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L302258.  v1:= temp @kind object;
  #L30225a.  call temp:= `networkResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L302260.  v0:= temp @kind object;
  #L302262.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L302268.  v0:= temp @kind object;
  #L30226a.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L302270.  v6:= temp @kind object;
  #L302272.  call `close`(v6) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L302278.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L30227c.  call `trackConditionalCacheHit`(v6) @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @kind interface;
  #L302282.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L302286.  call `update`(v6, v3, v0) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind interface;
  #L30228c.  return v0 @kind object;
  #L30228e.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L302294.  v0:= temp @kind object;
  #L302296.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30229c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L3022a2.  v0:= temp @kind object;
  #L3022a4.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L3022aa.  v1:= temp @kind object;
  #L3022ac.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L3022b2.  v0:= temp @kind object;
  #L3022b4.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L3022ba.  v6:= temp @kind object;
  #L3022bc.  call temp:= `networkResponse`(v0, v6) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L3022c2.  v6:= temp @kind object;
  #L3022c4.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L3022ca.  v6:= temp @kind object;
  #L3022cc.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L3022d0.  if v0 == 0 then goto L302320;
  #L3022d4.  call temp:= `hasBody`(v6) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L3022da.  v0:= temp;
  #L3022dc.  if v0 == 0 then goto L302302;
  #L3022e0.  call temp:= `isCacheable`(v6, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L3022e6.  v0:= temp;
  #L3022e8.  if v0 == 0 then goto L302302;
  #L3022ec.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L3022f0.  call temp:= `put`(v0, v6) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind interface;
  #L3022f6.  v0:= temp @kind object;
  #L3022f8.  call temp:= `cacheWritingResponse`(v5, v0, v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L3022fe.  v6:= temp @kind object;
  #L302300.  return v6 @kind object;
  #L302302.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L302308.  v0:= temp @kind object;
  #L30230a.  call temp:= `invalidatesCache`(v0) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L302310.  v0:= temp;
  #L302312.  if v0 == 0 then goto L302320;
  #L302316.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L30231a.  call `remove`(v0, v2) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @kind interface;
  #L302320.  return v6 @kind object;
  #L302322.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302324.  if v0 == 0 then goto L302336;
  #L302328.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30232e.  v0:= temp @kind object;
  #L302330.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L302336.  throw v6;
  catch `java.lang.Throwable` @[L3021c8..L3021d0] goto L302322;
  catch `java.io.IOException` @[L302316..L302320] goto L302320;
}
