record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L302c68.  v1.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L302c6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302c72.  v0:= new `java.util.ArrayList`;
  #L302c76.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.lruEntries` @type ^`java.util.LinkedHashMap` @kind object;
  #L302c7a.  call temp:= `values`(v2) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L302c80.  v2:= temp @kind object;
  #L302c82.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L302c88.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L302c8e.  v2:= temp @kind object;
  #L302c90.  v1.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v2 @kind object;
  #L302c94.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v5 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L302b84.  v0:= v5.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L302b88.  v1:= 1I;
  #L302b8a.  if v0 == 0 then goto L302b90;
  #L302b8e.  return v1;
  #L302b90.  v0:= v5.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302b94.  @monitorenter v0
  #L302b96.  v2:= v5.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302b9a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.closed` @type ^`boolean` @kind boolean;
  #L302b9e.  v3:= 0I;
  #L302ba0.  if v2 == 0 then goto L302ba8;
  #L302ba4.  @monitorexit v0
  #L302ba6.  return v3;
  #L302ba8.  v2:= v5.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L302bac.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L302bb2.  v2:= temp;
  #L302bb4.  if v2 == 0 then goto L302be8;
  #L302bb8.  v2:= v5.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L302bbc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L302bc2.  v2:= temp @kind object;
  #L302bc4.  v2:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v2 @kind object;
  #L302bc8.  v4:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L302bcc.  if v4 != 0 then goto L302bd2;
  #L302bd0.  goto L302ba8;
  #L302bd2.  call temp:= `snapshot`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L302bd8.  v2:= temp @kind object;
  #L302bda.  if v2 != 0 then goto L302be0;
  #L302bde.  goto L302ba8;
  #L302be0.  v5.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L302be4.  @monitorexit v0
  #L302be6.  return v1;
  #L302be8.  @monitorexit v0
  #L302bea.  return v3;
  #L302bec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302bee.  @monitorexit v0
  #L302bf0.  goto L302bf4;
  #L302bf2.  throw v1;
  #L302bf4.  goto L302bf2;
  catch `java.lang.Throwable` @[L302b96..L302bf0] goto L302bec;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L302c14.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L302c1a.  v0:= temp @kind object;
  #L302c1c.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v2 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L302c30.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L302c36.  v0:= temp;
  #L302c38.  if v0 == 0 then goto L302c4c;
  #L302c3c.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L302c40.  v2.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L302c44.  v1:= 0I;
  #L302c46.  v2.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L302c4a.  return v0 @kind object;
  #L302c4c.  v0:= new `java.util.NoSuchElementException`;
  #L302c50.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L302c56.  throw v0;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L302ca8.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L302cac.  if v0 == 0 then goto L302cd4;
  #L302cb0.  v1:= 0I;
  #L302cb2.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L302cb6.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.access$000:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L302cbc.  v0:= temp @kind object;
  #L302cbe.  call temp:= `remove`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L302cc4.  goto L302cce;
  #L302cc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L302cc8.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L302ccc.  throw v0;
  #L302cce.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L302cd2.  return @kind void;
  #L302cd4.  v0:= new `java.lang.IllegalStateException`;
  #L302cd8.  v1:= "remove() before next()" @kind object;
  #L302cdc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L302ce2.  throw v0;
  catch `java.io.IOException` @[L302cb2..L302cc4] goto L302cce;
  catch `java.lang.Throwable` @[L302cb2..L302cc4] goto L302cc6;
}
