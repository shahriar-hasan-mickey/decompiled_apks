record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_DNS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_IPA_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3158b4.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L3158b8.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L3158be.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L3158c2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3158d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3158da.  return @kind void;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3157a8.  v0:= 7I;
  #L3157aa.  call temp:= `getSubjectAltNames`(v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L3157b0.  v0:= temp @kind object;
  #L3157b2.  v1:= 2I;
  #L3157b4.  call temp:= `getSubjectAltNames`(v4, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L3157ba.  v4:= temp @kind object;
  #L3157bc.  v1:= new `java.util.ArrayList`;
  #L3157c0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3157c6.  v2:= temp;
  #L3157c8.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3157ce.  v3:= temp;
  #L3157d0.  v2:= v2 + v3 @kind int;
  #L3157d2.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3157d8.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3157de.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3157e4.  return v1 @kind object;
}
procedure `java.util.List` `getSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3157f8.  v0:= new `java.util.ArrayList`;
  #L3157fc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L315802.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L315808.  v4:= temp @kind object;
  #L31580a.  if v4 != 0 then goto L315818;
  #L31580e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L315814.  v4:= temp @kind object;
  #L315816.  return v4 @kind object;
  #L315818.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31581e.  v4:= temp @kind object;
  #L315820.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L315826.  v1:= temp;
  #L315828.  if v1 == 0 then goto L315886;
  #L31582c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L315832.  v1:= temp @kind object;
  #L315834.  v1:= (`java.util.List`) v1 @kind object;
  #L315838.  if v1 == 0 then goto L315820;
  #L31583c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L315842.  v2:= temp;
  #L315844.  v3:= 2I;
  #L315846.  if v2 >= v3 then goto L31584c;
  #L31584a.  goto L315820;
  #L31584c.  v2:= 0I;
  #L31584e.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L315854.  v2:= temp @kind object;
  #L315856.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L31585a.  if v2 != 0 then goto L315860;
  #L31585e.  goto L315820;
  #L315860.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L315866.  v2:= temp;
  #L315868.  if v2 != v5 then goto L315820;
  #L31586c.  v2:= 1I;
  #L31586e.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L315874.  v1:= temp @kind object;
  #L315876.  v1:= (`java.lang.String`) v1 @kind object;
  #L31587a.  if v1 == 0 then goto L315820;
  #L31587e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L315884.  goto L315820;
  #L315886.  return v0 @kind object;
  #L315888.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L31588e.  v4:= temp @kind object;
  #L315890.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L315802..L315884] goto L315888;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3156fc.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L315700.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L315706.  v2:= temp @kind object;
  #L315708.  v0:= 2I;
  #L31570a.  call temp:= `getSubjectAltNames`(v3, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L315710.  v3:= temp @kind object;
  #L315712.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L315718.  v3:= temp @kind object;
  #L31571a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L315720.  v0:= temp;
  #L315722.  if v0 == 0 then goto L315742;
  #L315726.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31572c.  v0:= temp @kind object;
  #L31572e.  v0:= (`java.lang.String`) v0 @kind object;
  #L315732.  call temp:= `verifyHostname`(v1, v2, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L315738.  v0:= temp;
  #L31573a.  if v0 == 0 then goto L31571a;
  #L31573e.  v2:= 1I;
  #L315740.  return v2;
  #L315742.  v2:= 0I;
  #L315744.  return v2;
}
procedure `boolean` `verifyIpAddress`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L315758.  v0:= 7I;
  #L31575a.  call temp:= `getSubjectAltNames`(v6, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L315760.  v6:= temp @kind object;
  #L315762.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L315768.  v0:= temp;
  #L31576a.  v1:= 0I;
  #L31576c.  v2:= 0I;
  #L31576e.  if v2 >= v0 then goto L315794;
  #L315772.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L315778.  v3:= temp @kind object;
  #L31577a.  v3:= (`java.lang.String`) v3 @kind object;
  #L31577e.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L315784.  v3:= temp;
  #L315786.  if v3 == 0 then goto L31578e;
  #L31578a.  v5:= 1I;
  #L31578c.  return v5;
  #L31578e.  v2:= v2 + 1;
  #L315792.  goto L31576e;
  #L315794.  return v1;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L315510.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L315516.  v0:= temp;
  #L315518.  if v0 == 0 then goto L315526;
  #L31551c.  call temp:= `verifyIpAddress`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L315522.  v2:= temp;
  #L315524.  goto L31552e;
  #L315526.  call temp:= `verifyHostname`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L31552c.  v2:= temp;
  #L31552e.  return v2;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L315540.  v0:= 0I;
  #L315542.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L315548.  v3:= temp @kind object;
  #L31554a.  v3:= v3[v0] @kind object;
  #L31554e.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L315552.  call temp:= `verify`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L315558.  v2:= temp;
  #L31555a.  return v2;
  #L31555c.  return v0;
  catch `javax.net.ssl.SSLException` @[L315542..L31555a] goto L31555c;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L315580.  v0:= 0I;
  #L315582.  if v8 == 0 then goto L3156e8;
  #L315586.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L31558c.  v1:= temp;
  #L31558e.  if v1 == 0 then goto L3156e8;
  #L315592.  v1:= "." @kind object;
  #L315596.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L31559c.  v2:= temp;
  #L31559e.  if v2 != 0 then goto L3156e8;
  #L3155a2.  v2:= ".." @kind object;
  #L3155a6.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3155ac.  v3:= temp;
  #L3155ae.  if v3 == 0 then goto L3155b6;
  #L3155b2.  goto L3156e8;
  #L3155b6.  if v9 == 0 then goto L3156e8;
  #L3155ba.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3155c0.  v3:= temp;
  #L3155c2.  if v3 == 0 then goto L3156e8;
  #L3155c6.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3155cc.  v3:= temp;
  #L3155ce.  if v3 != 0 then goto L3156e8;
  #L3155d2.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3155d8.  v2:= temp;
  #L3155da.  if v2 == 0 then goto L3155e2;
  #L3155de.  goto L3156e8;
  #L3155e2.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3155e8.  v2:= temp;
  #L3155ea.  v3:= 46I;
  #L3155ee.  if v2 != 0 then goto L315610;
  #L3155f2.  v2:= new `java.lang.StringBuilder`;
  #L3155f6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3155fc.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L315602.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L315608.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31560e.  v8:= temp @kind object;
  #L315610.  call temp:= `endsWith`(v9, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L315616.  v1:= temp;
  #L315618.  if v1 != 0 then goto L31563a;
  #L31561c.  v1:= new `java.lang.StringBuilder`;
  #L315620.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L315626.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31562c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L315632.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L315638.  v9:= temp @kind object;
  #L31563a.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L31563e.  call temp:= `toLowerCase`(v9, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L315644.  v9:= temp @kind object;
  #L315646.  v1:= "*" @kind object;
  #L31564a.  call temp:= `contains`(v9, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L315650.  v1:= temp;
  #L315652.  if v1 != 0 then goto L315660;
  #L315656.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31565c.  v8:= temp;
  #L31565e.  return v8;
  #L315660.  v1:= "*." @kind object;
  #L315664.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L31566a.  v2:= temp;
  #L31566c.  if v2 == 0 then goto L3156e8;
  #L315670.  v2:= 42I;
  #L315674.  v4:= 1I;
  #L315676.  call temp:= `indexOf`(v9, v2, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L31567c.  v2:= temp;
  #L31567e.  v5:= -1I;
  #L315680.  if v2 == v5 then goto L315686;
  #L315684.  goto L3156e8;
  #L315686.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L31568c.  v2:= temp;
  #L31568e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L315694.  v6:= temp;
  #L315696.  if v2 >= v6 then goto L31569c;
  #L31569a.  return v0;
  #L31569c.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3156a2.  v1:= temp;
  #L3156a4.  if v1 == 0 then goto L3156aa;
  #L3156a8.  return v0;
  #L3156aa.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3156b0.  v9:= temp @kind object;
  #L3156b2.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3156b8.  v1:= temp;
  #L3156ba.  if v1 != 0 then goto L3156c0;
  #L3156be.  return v0;
  #L3156c0.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3156c6.  v1:= temp;
  #L3156c8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3156ce.  v9:= temp;
  #L3156d0.  v1:= v1 - v9 @kind int;
  #L3156d2.  if v1 <= 0 then goto L3156e6;
  #L3156d6.  v1:= v1 - v4 @kind int;
  #L3156d8.  call temp:= `lastIndexOf`(v8, v3, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L3156de.  v8:= temp;
  #L3156e0.  if v8 == v5 then goto L3156e6;
  #L3156e4.  return v0;
  #L3156e6.  return v4;
  #L3156e8.  return v0;
}
