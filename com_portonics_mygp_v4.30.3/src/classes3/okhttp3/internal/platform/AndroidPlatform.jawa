record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslSocketClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.reflect.Method` v5 @kind object, `java.lang.reflect.Method` v6 @kind object, `java.lang.reflect.Method` v7 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L313124.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L31312a.  call temp:= `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L313130.  v0:= temp @kind object;
  #L313132.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L313136.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L31313a.  v1.`okhttp3.internal.platform.AndroidPlatform.sslSocketClass` @type ^`java.lang.Class` := v3 @kind object;
  #L31313e.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L313142.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`java.lang.reflect.Method` := v5 @kind object;
  #L313146.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`java.lang.reflect.Method` := v6 @kind object;
  #L31314a.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`java.lang.reflect.Method` := v7 @kind object;
  #L31314e.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L312c10.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L312c14.  v1:= 0I;
  #L312c16.  v2:= new `java.lang.Class`[v1];
  #L312c1a.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312c20.  v5:= temp @kind object;
  #L312c22.  v0:= new `java.lang.Object`[v1];
  #L312c26.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L312c2c.  v5:= temp @kind object;
  #L312c2e.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L312c32.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L312c38.  v4:= temp;
  #L312c3a.  return v4;
  #L312c3c.  call temp:= `isCleartextTrafficPermitted`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L312c42.  v4:= temp;
  #L312c44.  return v4;
  catch `java.lang.NoSuchMethodException` @[L312c10..L312c3a] goto L312c3c;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L312c68.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L312c6c.  v1:= 1I;
  #L312c6e.  v2:= new `java.lang.Class`[v1];
  #L312c72.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L312c76.  v4:= 0I;
  #L312c78.  v2[v4]:= v3 @kind object;
  #L312c7c.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312c82.  v0:= temp @kind object;
  #L312c84.  v1:= new `java.lang.Object`[v1];
  #L312c88.  v1[v4]:= v6 @kind object;
  #L312c8c.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L312c92.  v0:= temp @kind object;
  #L312c94.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L312c98.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L312c9e.  v6:= temp;
  #L312ca0.  return v6;
  #L312ca2.  call temp:= `api23IsCleartextTrafficPermitted`(v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L312ca8.  v6:= temp;
  #L312caa.  return v6;
  catch `java.lang.NoSuchMethodException` @[L312c68..L312ca0] goto L312ca2;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L312f30.  call temp:= `isAndroid`() @signature `Lokhttp3/internal/platform/Platform;.isAndroid:()Z` @kind static;
  #L312f36.  v0:= temp;
  #L312f38.  v1:= 0I;
  #L312f3a.  if v0 != 0 then goto L312f40;
  #L312f3e.  return v1 @kind object;
  #L312f40.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L312f44.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L312f4a.  v3:= temp @kind object;
  #L312f4c.  v0:= "com.android.org.conscrypt.OpenSSLSocketImpl" @kind object;
  #L312f50.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L312f56.  v4:= temp @kind object;
  #L312f58.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L312f5c.  v1:= 21I;
  #L312f60.  if v0 < v1 then goto L312fd0;
  #L312f64.  v0:= "setUseSessionTickets" @kind object;
  #L312f68.  v1:= 1I;
  #L312f6a.  v2:= new `java.lang.Class`[v1];
  #L312f6e.  v5:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L312f72.  v6:= 0I;
  #L312f74.  v2[v6]:= v5 @kind object;
  #L312f78.  call temp:= `getDeclaredMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312f7e.  v5:= temp @kind object;
  #L312f80.  v0:= "setHostname" @kind object;
  #L312f84.  v2:= new `java.lang.Class`[v1];
  #L312f88.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L312f8c.  v2[v6]:= v7 @kind object;
  #L312f90.  call temp:= `getMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312f96.  v0:= temp @kind object;
  #L312f98.  v2:= "getAlpnSelectedProtocol" @kind object;
  #L312f9c.  v7:= new `java.lang.Class`[v6];
  #L312fa0.  call temp:= `getMethod`(v4, v2, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312fa6.  v7:= temp @kind object;
  #L312fa8.  v2:= "setAlpnProtocols" @kind object;
  #L312fac.  v1:= new `java.lang.Class`[v1];
  #L312fb0.  v8:= constclass @type ^`byte`[] @kind object;
  #L312fb4.  v1[v6]:= v8 @kind object;
  #L312fb8.  call temp:= `getMethod`(v4, v2, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312fbe.  v8:= temp @kind object;
  #L312fc0.  v1:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L312fc4.  v2:= v1 @kind object;
  #L312fc6.  v6:= v0 @kind object;
  #L312fc8.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L312fce.  return v1 @kind object;
  #L312fd0.  v0:= new `java.lang.IllegalStateException`;
  #L312fd4.  v1:= new `java.lang.StringBuilder`;
  #L312fd8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312fde.  v2:= "Expected Android API level 21+ but was " @kind object;
  #L312fe2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312fe8.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L312fec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L312ff2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312ff8.  v1:= temp @kind object;
  #L312ffa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313000.  throw v0;
  #L313002.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L312f40..L312f58] goto L313002;
  catch `java.lang.NoSuchMethodException` @[L312f64..L312fce] goto L312fd0;
}
procedure `int` `getSdkInt`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSdkInt:()I` @AccessFlag STATIC {
    temp;
    v0;

  #L312d54.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L312d58.  return v0;
  #L312d5a.  v0:= 0I;
  #L312d5c.  return v0;
  catch `java.lang.NoClassDefFoundError` @[L312d54..L312d58] goto L312d5a;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v8 @kind this, `javax.net.ssl.X509TrustManager` v9 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L313030.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L313034.  v1:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L313038.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L31303e.  v1:= temp @kind object;
  #L313040.  v2:= 1I;
  #L313042.  v3:= new `java.lang.Class`[v2];
  #L313046.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L31304a.  v5:= 0I;
  #L31304c.  v3[v5]:= v4 @kind object;
  #L313050.  call temp:= `getConstructor`(v1, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L313056.  v3:= temp @kind object;
  #L313058.  v4:= new `java.lang.Object`[v2];
  #L31305c.  v4[v5]:= v9 @kind object;
  #L313060.  call temp:= `newInstance`(v3, v4) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L313066.  v3:= temp @kind object;
  #L313068.  v4:= "checkServerTrusted" @kind object;
  #L31306c.  v6:= 3I;
  #L31306e.  v6:= new `java.lang.Class`[v6];
  #L313072.  v7:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L313076.  v6[v5]:= v7 @kind object;
  #L31307a.  v6[v2]:= v0 @kind object;
  #L31307e.  v2:= 2I;
  #L313080.  v6[v2]:= v0 @kind object;
  #L313084.  call temp:= `getMethod`(v1, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L31308a.  v0:= temp @kind object;
  #L31308c.  v1:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L313090.  call `<init>`(v1, v3, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L313096.  return v1 @kind object;
  #L313098.  call temp:= `buildCertificateChainCleaner`(v8, v9) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L31309e.  v9:= temp @kind object;
  #L3130a0.  return v9 @kind object;
  catch `java.lang.Exception` @[L313034..L313096] goto L313098;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3130c4.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3130ca.  v0:= temp @kind object;
  #L3130cc.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L3130d0.  v2:= 1I;
  #L3130d2.  v3:= new `java.lang.Class`[v2];
  #L3130d6.  v4:= 0I;
  #L3130d8.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L3130dc.  v3[v4]:= v5 @kind object;
  #L3130e0.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3130e6.  v0:= temp @kind object;
  #L3130e8.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L3130ee.  v1:= new `okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex`;
  #L3130f2.  call `<init>`(v1, v7, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$CustomTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L3130f8.  return v1 @kind object;
  #L3130fa.  call temp:= `buildTrustRootIndex`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L313100.  v7:= temp @kind object;
  #L313102.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L3130c4..L3130f8] goto L3130fa;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313160.  v0:= v5.`okhttp3.internal.platform.AndroidPlatform.sslSocketClass` @type ^`java.lang.Class` @kind object;
  #L313164.  call temp:= `isInstance`(v0, v6) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L31316a.  v0:= temp;
  #L31316c.  if v0 != 0 then goto L313172;
  #L313170.  return @kind void;
  #L313172.  v0:= 0I;
  #L313174.  v1:= 1I;
  #L313176.  if v7 == 0 then goto L3131a2;
  #L31317a.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`java.lang.reflect.Method` @kind object;
  #L31317e.  v3:= new `java.lang.Object`[v1];
  #L313182.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L313186.  v3[v0]:= v4 @kind object;
  #L31318a.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L313190.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`java.lang.reflect.Method` @kind object;
  #L313194.  v3:= new `java.lang.Object`[v1];
  #L313198.  v3[v0]:= v7 @kind object;
  #L31319c.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3131a2.  v7:= v5.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`java.lang.reflect.Method` @kind object;
  #L3131a6.  v1:= new `java.lang.Object`[v1];
  #L3131aa.  call temp:= `concatLengthPrefixed`(v8) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L3131b0.  v8:= temp @kind object;
  #L3131b2.  v1[v0]:= v8 @kind object;
  #L3131b6.  call temp:= `invoke`(v7, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3131bc.  return @kind void;
  #L3131be.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3131c0.  goto L3131c4;
  #L3131c2.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3131c4.  v7:= new `java.lang.AssertionError`;
  #L3131c8.  call `<init>`(v7, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3131ce.  throw v7;
  catch `java.lang.IllegalAccessException` @[L31317a..L3131bc] goto L3131c2;
  catch `java.lang.reflect.InvocationTargetException` @[L31317a..L3131bc] goto L3131be;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L3131f0.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L3131f6.  return @kind void;
  #L3131f8.  v1:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L3131fa.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3131fe.  v3:= 26I;
  #L313202.  if v2 != v3 then goto L313216;
  #L313206.  v2:= new `java.io.IOException`;
  #L31320a.  v3:= "Exception in connect" @kind object;
  #L31320e.  call `<init>`(v2, v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313214.  throw v2;
  #L313216.  throw v1;
  #L313218.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L31321a.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L313220.  v2:= temp;
  #L313222.  if v2 == 0 then goto L313232;
  #L313226.  v2:= new `java.io.IOException`;
  #L31322a.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L313230.  throw v2;
  #L313232.  throw v1;
  catch `java.lang.AssertionError` @[L3131f0..L3131f6] goto L313218;
  catch `java.lang.ClassCastException` @[L3131f0..L3131f6] goto L3131f8;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L312e10.  v0:= 1I;
  #L312e12.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L312e16.  v2:= 16I;
  #L312e1a.  if v1 < v2 then goto L312e28;
  #L312e1e.  v2:= 22I;
  #L312e22.  if v1 >= v2 then goto L312e28;
  #L312e26.  goto L312e2e;
  #L312e28.  v0:= 0I;
  #L312e2a.  goto L312e2e;
  #L312e2c.  
  #L312e2e.  if v0 == 0 then goto L312e40;
  #L312e32.  v0:= "TLSv1.2" @kind object;
  #L312e36.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L312e3c.  v0:= temp @kind object;
  #L312e3e.  return v0 @kind object;
  #L312e40.  v0:= "TLS" @kind object;
  #L312e44.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L312e4a.  v0:= temp @kind object;
  #L312e4c.  return v0 @kind object;
  #L312e4e.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L312e50.  v1:= new `java.lang.IllegalStateException`;
  #L312e54.  v2:= "No TLS provider" @kind object;
  #L312e58.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L312e5e.  throw v1;
  catch `java.lang.NoClassDefFoundError` @[L312e12..L312e16] goto L312e2c;
  catch `java.security.NoSuchAlgorithmException` @[L312e32..L312e3e] goto L312e40;
  catch `java.security.NoSuchAlgorithmException` @[L312e40..L312e4c] goto L312e4e;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L312da0.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.sslSocketClass` @type ^`java.lang.Class` @kind object;
  #L312da4.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L312daa.  v0:= temp;
  #L312dac.  v1:= 0I;
  #L312dae.  if v0 != 0 then goto L312db4;
  #L312db2.  return v1 @kind object;
  #L312db4.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`java.lang.reflect.Method` @kind object;
  #L312db8.  v2:= 0I;
  #L312dba.  v2:= new `java.lang.Object`[v2];
  #L312dbe.  call temp:= `invoke`(v0, v4, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L312dc4.  v4:= temp @kind object;
  #L312dc6.  v4:= (`byte`[]) v4 @kind object;
  #L312dca.  if v4 == 0 then goto L312ddc;
  #L312dce.  v1:= new `java.lang.String`;
  #L312dd2.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L312dd6.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L312ddc.  return v1 @kind object;
  #L312dde.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L312de0.  goto L312de4;
  #L312de2.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L312de4.  v0:= new `java.lang.AssertionError`;
  #L312de8.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L312dee.  throw v0;
  catch `java.lang.IllegalAccessException` @[L312db4..L312ddc] goto L312de2;
  catch `java.lang.reflect.InvocationTargetException` @[L312db4..L312ddc] goto L312dde;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L312d80.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L312d84.  call temp:= `createAndOpen`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L312d8a.  v2:= temp @kind object;
  #L312d8c.  return v2 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L312ccc.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L312cd0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L312cd6.  v0:= temp @kind object;
  #L312cd8.  v1:= "getInstance" @kind object;
  #L312cdc.  v2:= 0I;
  #L312cde.  v3:= new `java.lang.Class`[v2];
  #L312ce2.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L312ce8.  v1:= temp @kind object;
  #L312cea.  v3:= 0I;
  #L312cec.  v2:= new `java.lang.Object`[v2];
  #L312cf0.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L312cf6.  v1:= temp @kind object;
  #L312cf8.  call temp:= `api24IsCleartextTrafficPermitted`(v4, v5, v0, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L312cfe.  v5:= temp;
  #L312d00.  return v5;
  #L312d02.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L312d04.  goto L312d0c;
  #L312d06.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L312d08.  goto L312d0c;
  #L312d0a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L312d0c.  v0:= new `java.lang.AssertionError`;
  #L312d10.  v1:= "unable to determine cleartext support" @kind object;
  #L312d14.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L312d1a.  throw v0;
  #L312d1c.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L312d22.  v5:= temp;
  #L312d24.  return v5;
  catch `java.lang.ClassNotFoundException` @[L312ccc..L312d00] goto L312d1c;
  catch `java.lang.NoSuchMethodException` @[L312ccc..L312d00] goto L312d1c;
  catch `java.lang.IllegalAccessException` @[L312ccc..L312d00] goto L312d0a;
  catch `java.lang.IllegalArgumentException` @[L312ccc..L312d00] goto L312d06;
  catch `java.lang.reflect.InvocationTargetException` @[L312ccc..L312d00] goto L312d02;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313254.  v0:= 5I;
  #L313256.  if v6 != v0 then goto L31325c;
  #L31325a.  goto L31325e;
  #L31325c.  v0:= 3I;
  #L31325e.  v6:= 10I;
  #L313262.  if v8 == 0 then goto L313292;
  #L313266.  v1:= new `java.lang.StringBuilder`;
  #L31326a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313270.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313276.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31327c.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L313282.  v7:= temp @kind object;
  #L313284.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31328a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L313290.  v7:= temp @kind object;
  #L313292.  v8:= 0I;
  #L313294.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L31329a.  v1:= temp;
  #L31329c.  if v8 >= v1 then goto L3132de;
  #L3132a0.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3132a6.  v2:= temp;
  #L3132a8.  v3:= -1I;
  #L3132aa.  if v2 == v3 then goto L3132b0;
  #L3132ae.  goto L3132b2;
  #L3132b0.  v2:= v1;
  #L3132b2.  v3:= v8 + 4000;
  #L3132b6.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3132bc.  v3:= temp;
  #L3132be.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3132c4.  v8:= temp @kind object;
  #L3132c6.  v4:= "OkHttp" @kind object;
  #L3132ca.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3132d0.  if v3 < v2 then goto L3132da;
  #L3132d4.  v8:= v3 + 1;
  #L3132d8.  goto L31329c;
  #L3132da.  v8:= v3;
  #L3132dc.  goto L3132b2;
  #L3132de.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3132f0.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L3132f4.  call temp:= `warnIfOpen`(v0, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @kind virtual;
  #L3132fa.  v3:= temp;
  #L3132fc.  if v3 != 0 then goto L31330a;
  #L313300.  v3:= 5I;
  #L313302.  v0:= 0I;
  #L313304.  call `log`(v1, v3, v2, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L31330a.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocketFactory` v5 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L312e98.  v0:= v4.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L312e9c.  v1:= "sslParameters" @kind object;
  #L312ea0.  call temp:= `readFieldOrNull`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312ea6.  v0:= temp @kind object;
  #L312ea8.  if v0 != 0 then goto L312ede;
  #L312eac.  v0:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L312eb0.  v2:= 0I;
  #L312eb2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L312eb8.  v3:= temp @kind object;
  #L312eba.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L312ec0.  v3:= temp @kind object;
  #L312ec2.  call temp:= `forName`(v0, v2, v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L312ec8.  v0:= temp @kind object;
  #L312eca.  call temp:= `readFieldOrNull`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312ed0.  v0:= temp @kind object;
  #L312ed2.  goto L312ede;
  #L312ed4.  call temp:= `trustManager`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L312eda.  v5:= temp @kind object;
  #L312edc.  return v5 @kind object;
  #L312ede.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L312ee2.  v1:= "x509TrustManager" @kind object;
  #L312ee6.  call temp:= `readFieldOrNull`(v0, v5, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312eec.  v5:= temp @kind object;
  #L312eee.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L312ef2.  if v5 == 0 then goto L312ef8;
  #L312ef6.  return v5 @kind object;
  #L312ef8.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L312efc.  v1:= "trustManager" @kind object;
  #L312f00.  call temp:= `readFieldOrNull`(v0, v5, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312f06.  v5:= temp @kind object;
  #L312f08.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L312f0c.  return v5 @kind object;
  catch `java.lang.ClassNotFoundException` @[L312eac..L312ed2] goto L312ed4;
}
