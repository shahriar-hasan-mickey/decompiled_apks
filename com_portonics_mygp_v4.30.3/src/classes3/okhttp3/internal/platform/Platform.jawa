record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L313fb4.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313fba.  v0:= temp @kind object;
  #L313fbc.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L313fc0.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L313fc4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L313fca.  v0:= temp @kind object;
  #L313fcc.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L313fd2.  v0:= temp @kind object;
  #L313fd4.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L313fd8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L313fec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L313ff2.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313d34.  v0:= new `java.util.ArrayList`;
  #L313d38.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L313d3e.  v1:= temp;
  #L313d40.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L313d46.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L313d4c.  v1:= temp;
  #L313d4e.  v2:= 0I;
  #L313d50.  if v2 >= v1 then goto L313d7e;
  #L313d54.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L313d5a.  v3:= temp @kind object;
  #L313d5c.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L313d60.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L313d64.  if v3 != v4 then goto L313d6a;
  #L313d68.  goto L313d78;
  #L313d6a.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L313d70.  v3:= temp @kind object;
  #L313d72.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L313d78.  v2:= v2 + 1;
  #L313d7c.  goto L313d50;
  #L313d7e.  return v0 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313b9c.  v0:= new `okio.k`;
  #L313ba0.  call `<init>`(v0) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L313ba6.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L313bac.  v1:= temp;
  #L313bae.  v2:= 0I;
  #L313bb0.  if v2 >= v1 then goto L313bf4;
  #L313bb4.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L313bba.  v3:= temp @kind object;
  #L313bbc.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L313bc0.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L313bc4.  if v3 != v4 then goto L313bca;
  #L313bc8.  goto L313bee;
  #L313bca.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L313bd0.  v4:= temp @kind object;
  #L313bd2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L313bd8.  v4:= temp;
  #L313bda.  call temp:= `n1`(v0, v4) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L313be0.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L313be6.  v3:= temp @kind object;
  #L313be8.  call temp:= `v1`(v0, v3) @signature `Lokio/k;.v1:(Ljava/lang/String;)Lokio/k;` @kind virtual;
  #L313bee.  v2:= v2 + 1;
  #L313bf2.  goto L313bb0;
  #L313bf4.  call temp:= `L`(v0) @signature `Lokio/k;.L:()[B` @kind virtual;
  #L313bfa.  v5:= temp @kind object;
  #L313bfc.  return v5 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findAndroidPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findAndroidPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L313e28.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Android10Platform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313e2e.  v0:= temp @kind object;
  #L313e30.  if v0 == 0 then goto L313e36;
  #L313e34.  return v0 @kind object;
  #L313e36.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313e3c.  v0:= temp @kind object;
  #L313e3e.  v1:= "No platform found on Android" @kind object;
  #L313e42.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313e48.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findJvmPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findJvmPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L313e5c.  call temp:= `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @kind static;
  #L313e62.  v0:= temp;
  #L313e64.  if v0 == 0 then goto L313e76;
  #L313e68.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.buildIfSupported:()Lokhttp3/internal/platform/ConscryptPlatform;` @kind static;
  #L313e6e.  v0:= temp @kind object;
  #L313e70.  if v0 == 0 then goto L313e76;
  #L313e74.  return v0 @kind object;
  #L313e76.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L313e7c.  v0:= temp @kind object;
  #L313e7e.  if v0 == 0 then goto L313e84;
  #L313e82.  return v0 @kind object;
  #L313e84.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313e8a.  v0:= temp @kind object;
  #L313e8c.  if v0 == 0 then goto L313e92;
  #L313e90.  return v0 @kind object;
  #L313e92.  v0:= new `okhttp3.internal.platform.Platform`;
  #L313e96.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L313e9c.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L313eb0.  call temp:= `isAndroid`() @signature `Lokhttp3/internal/platform/Platform;.isAndroid:()Z` @kind static;
  #L313eb6.  v0:= temp;
  #L313eb8.  if v0 == 0 then goto L313ec6;
  #L313ebc.  call temp:= `findAndroidPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findAndroidPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313ec2.  v0:= temp @kind object;
  #L313ec4.  return v0 @kind object;
  #L313ec6.  call temp:= `findJvmPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findJvmPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313ecc.  v0:= temp @kind object;
  #L313ece.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L313ee0.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L313ee4.  return v0 @kind object;
}
procedure `boolean` `isAndroid`() @signature `Lokhttp3/internal/platform/Platform;.isAndroid:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L313b04.  v0:= "java.vm.name" @kind object;
  #L313b08.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L313b0e.  v0:= temp @kind object;
  #L313b10.  v1:= "Dalvik" @kind object;
  #L313b14.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L313b1a.  v0:= temp;
  #L313b1c.  return v0;
}
procedure `boolean` `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L313b44.  v0:= "okhttp.platform" @kind object;
  #L313b48.  v1:= 0I;
  #L313b4a.  call temp:= `getSystemProperty`(v0, v1) @signature `Lokhttp3/internal/Util;.getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L313b50.  v0:= temp @kind object;
  #L313b52.  v1:= "conscrypt" @kind object;
  #L313b56.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L313b5c.  v0:= temp;
  #L313b5e.  if v0 == 0 then goto L313b66;
  #L313b62.  v0:= 1I;
  #L313b64.  return v0;
  #L313b66.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L313b6c.  v0:= temp @kind object;
  #L313b6e.  v1:= 0I;
  #L313b70.  v0:= v0[v1] @kind object;
  #L313b74.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L313b7a.  v0:= temp @kind object;
  #L313b7c.  v1:= "Conscrypt" @kind object;
  #L313b80.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L313b86.  v0:= temp;
  #L313b88.  return v0;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v5 @kind object, `java.lang.Class` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313c44.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L313c48.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L313c4e.  v1:= temp @kind object;
  #L313c50.  v2:= 0I;
  #L313c52.  if v1 == v0 then goto L313c9c;
  #L313c56.  call temp:= `getDeclaredField`(v1, v7) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L313c5c.  v3:= temp @kind object;
  #L313c5e.  v4:= 1I;
  #L313c60.  call `setAccessible`(v3, v4) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L313c66.  call temp:= `get`(v3, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L313c6c.  v3:= temp @kind object;
  #L313c6e.  call temp:= `isInstance`(v6, v3) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L313c74.  v4:= temp;
  #L313c76.  if v4 != 0 then goto L313c7c;
  #L313c7a.  return v2 @kind object;
  #L313c7c.  call temp:= `cast`(v6, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L313c82.  v5:= temp @kind object;
  #L313c84.  return v5 @kind object;
  #L313c86.  v5:= new `java.lang.AssertionError`;
  #L313c8a.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L313c90.  throw v5;
  #L313c92.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L313c98.  v1:= temp @kind object;
  #L313c9a.  goto L313c50;
  #L313c9c.  v1:= "delegate" @kind object;
  #L313ca0.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L313ca6.  v3:= temp;
  #L313ca8.  if v3 != 0 then goto L313cc2;
  #L313cac.  call temp:= `readFieldOrNull`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313cb2.  v5:= temp @kind object;
  #L313cb4.  if v5 == 0 then goto L313cc2;
  #L313cb8.  call temp:= `readFieldOrNull`(v5, v6, v7) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313cbe.  v5:= temp @kind object;
  #L313cc0.  return v5 @kind object;
  #L313cc2.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L313c56..L313c84] goto L313c92;
  catch `java.lang.IllegalAccessException` @[L313c56..L313c84] goto L313c86;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L314004.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313ef8.  call temp:= `trustManager`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L313efe.  v0:= temp @kind object;
  #L313f00.  if v0 == 0 then goto L313f0e;
  #L313f04.  call temp:= `buildCertificateChainCleaner`(v3, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L313f0a.  v4:= temp @kind object;
  #L313f0c.  return v4 @kind object;
  #L313f0e.  v0:= new `java.lang.IllegalStateException`;
  #L313f12.  v1:= new `java.lang.StringBuilder`;
  #L313f16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313f1c.  v2:= "Unable to extract the trust manager on " @kind object;
  #L313f20.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313f26.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L313f2c.  v2:= temp @kind object;
  #L313f2e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313f34.  v2:= ", sslSocketFactory is " @kind object;
  #L313f38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313f3e.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L313f44.  v4:= temp @kind object;
  #L313f46.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313f4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L313f52.  v4:= temp @kind object;
  #L313f54.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313f5a.  throw v0;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313f6c.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L313f70.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L313f76.  v2:= temp @kind object;
  #L313f78.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L313f7e.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313f90.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L313f94.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L313f9a.  v2:= temp @kind object;
  #L313f9c.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L313fa2.  return v0 @kind object;
}
procedure `void` `configureSslSocketFactory`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocketFactory` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureSslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L314018.  return @kind void;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L31402c.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L314040.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L314046.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313ce4.  v0:= "OkHttp" @kind object;
  #L313ce8.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.Platform` v3 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313d90.  v0:= "TLS" @kind object;
  #L313d94.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L313d9a.  v0:= temp @kind object;
  #L313d9c.  return v0 @kind object;
  #L313d9e.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L313da0.  v1:= new `java.lang.IllegalStateException`;
  #L313da4.  v2:= "No TLS provider" @kind object;
  #L313da8.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313dae.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L313d90..L313d9c] goto L313d9e;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L313cfc.  v1:= 0I;
  #L313cfe.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L313c10.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L313c14.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L313c18.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L313c1e.  v0:= temp;
  #L313c20.  if v0 == 0 then goto L313c30;
  #L313c24.  v0:= new `java.lang.Throwable`;
  #L313c28.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313c2e.  return v0 @kind object;
  #L313c30.  v3:= 0I;
  #L313c32.  return v3 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L313b30.  v1:= 1I;
  #L313b32.  return v1;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L314058.  v0:= 5I;
  #L31405a.  if v2 != v0 then goto L314064;
  #L31405e.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L314062.  goto L314068;
  #L314064.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L314068.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L31406c.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L314072.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L314084.  if v3 != 0 then goto L3140aa;
  #L314088.  v0:= new `java.lang.StringBuilder`;
  #L31408c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L314092.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L314098.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L31409c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3140a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3140a8.  v2:= temp @kind object;
  #L3140aa.  v0:= 5I;
  #L3140ac.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L3140b0.  call `log`(v1, v0, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3140b6.  return @kind void;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313d10.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L313d16.  v0:= temp @kind object;
  #L313d18.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L313d1e.  v0:= temp @kind object;
  #L313d20.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L313dd0.  v0:= 0I;
  #L313dd2.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L313dd6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L313ddc.  v1:= temp @kind object;
  #L313dde.  v2:= "context" @kind object;
  #L313de2.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313de8.  v4:= temp @kind object;
  #L313dea.  if v4 != 0 then goto L313df0;
  #L313dee.  return v0 @kind object;
  #L313df0.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L313df4.  v2:= "trustManager" @kind object;
  #L313df8.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313dfe.  v4:= temp @kind object;
  #L313e00.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L313e04.  return v4 @kind object;
  #L313e06.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L313dd2..L313e04] goto L313e06;
}
