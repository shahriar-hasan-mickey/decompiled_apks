record `okhttp3.internal.platform.Jdk8WithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L313858.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L31385e.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L313862.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L313866.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L31386a.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L31386e.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L313872.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L31373c.  v0:= 0I;
  #L31373e.  v1:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L313742.  v2:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L313746.  v3:= 1I;
  #L313748.  call temp:= `forName`(v2, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L31374e.  v2:= temp @kind object;
  #L313750.  v4:= new `java.lang.StringBuilder`;
  #L313754.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31375a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313760.  v5:= "$Provider" @kind object;
  #L313764.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31376a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L313770.  v4:= temp @kind object;
  #L313772.  call temp:= `forName`(v4, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L313778.  v4:= temp @kind object;
  #L31377a.  v5:= new `java.lang.StringBuilder`;
  #L31377e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313784.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31378a.  v6:= "$ClientProvider" @kind object;
  #L31378e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313794.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31379a.  v5:= temp @kind object;
  #L31379c.  call temp:= `forName`(v5, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L3137a2.  v10:= temp @kind object;
  #L3137a4.  v5:= new `java.lang.StringBuilder`;
  #L3137a8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3137ae.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3137b4.  v1:= "$ServerProvider" @kind object;
  #L3137b8.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3137be.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3137c4.  v1:= temp @kind object;
  #L3137c6.  call temp:= `forName`(v1, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L3137cc.  v11:= temp @kind object;
  #L3137ce.  v1:= "put" @kind object;
  #L3137d2.  v5:= 2I;
  #L3137d4.  v5:= new `java.lang.Class`[v5];
  #L3137d8.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3137dc.  v7:= 0I;
  #L3137de.  v5[v7]:= v6 @kind object;
  #L3137e2.  v5[v3]:= v4 @kind object;
  #L3137e6.  call temp:= `getMethod`(v2, v1, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3137ec.  v1:= temp @kind object;
  #L3137ee.  v4:= "get" @kind object;
  #L3137f2.  v5:= new `java.lang.Class`[v3];
  #L3137f6.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3137fa.  v5[v7]:= v6 @kind object;
  #L3137fe.  call temp:= `getMethod`(v2, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L313804.  v8:= temp @kind object;
  #L313806.  v4:= "remove" @kind object;
  #L31380a.  v3:= new `java.lang.Class`[v3];
  #L31380e.  v5:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L313812.  v3[v7]:= v5 @kind object;
  #L313816.  call temp:= `getMethod`(v2, v4, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L31381c.  v9:= temp @kind object;
  #L31381e.  v2:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform`;
  #L313822.  v6:= v2 @kind object;
  #L313824.  v7:= v1 @kind object;
  #L313826.  call `<init>`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L31382c.  return v2 @kind object;
  #L31382e.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L31373e..L313742] goto L31382e;
  catch `java.lang.NoSuchMethodException` @[L31373e..L313742] goto L31382e;
  catch `java.lang.ClassNotFoundException` @[L313748..L31382c] goto L31382e;
  catch `java.lang.NoSuchMethodException` @[L313748..L31382c] goto L31382e;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L313884.  v0:= v4.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L313888.  v1:= 0I;
  #L31388a.  v2:= 1I;
  #L31388c.  v2:= new `java.lang.Object`[v2];
  #L313890.  v3:= 0I;
  #L313892.  v2[v3]:= v5 @kind object;
  #L313896.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L31389c.  return @kind void;
  #L31389e.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3138a0.  goto L3138a4;
  #L3138a2.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3138a4.  v0:= new `java.lang.AssertionError`;
  #L3138a8.  v1:= "failed to remove ALPN" @kind object;
  #L3138ac.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3138b2.  throw v0;
  catch `java.lang.IllegalAccessException` @[L313884..L31389c] goto L3138a2;
  catch `java.lang.reflect.InvocationTargetException` @[L313884..L31389c] goto L31389e;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3138d4.  call temp:= `alpnProtocolNames`(v8) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3138da.  v7:= temp @kind object;
  #L3138dc.  v8:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L3138e0.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3138e6.  v8:= temp @kind object;
  #L3138e8.  v0:= 2I;
  #L3138ea.  v1:= new `java.lang.Class`[v0];
  #L3138ee.  v2:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L3138f2.  v3:= 0I;
  #L3138f4.  v1[v3]:= v2 @kind object;
  #L3138f8.  v2:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L3138fc.  v4:= 1I;
  #L3138fe.  v1[v4]:= v2 @kind object;
  #L313902.  v2:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider`;
  #L313906.  call `<init>`(v2, v7) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$AlpnProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L31390c.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L313912.  v7:= temp @kind object;
  #L313914.  v8:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L313918.  v1:= 0I;
  #L31391a.  v0:= new `java.lang.Object`[v0];
  #L31391e.  v0[v3]:= v6 @kind object;
  #L313922.  v0[v4]:= v7 @kind object;
  #L313926.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L31392c.  return @kind void;
  #L31392e.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L313930.  goto L313934;
  #L313932.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L313934.  v7:= new `java.lang.AssertionError`;
  #L313938.  v8:= "failed to set ALPN" @kind object;
  #L31393c.  call `<init>`(v7, v8, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313942.  throw v7;
  catch `java.lang.reflect.InvocationTargetException` @[L3138dc..L31392c] goto L313932;
  catch `java.lang.IllegalAccessException` @[L3138dc..L31392c] goto L31392e;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3136ac.  v0:= v3.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L3136b0.  v1:= 1I;
  #L3136b2.  v1:= new `java.lang.Object`[v1];
  #L3136b6.  v2:= 0I;
  #L3136b8.  v1[v2]:= v4 @kind object;
  #L3136bc.  v4:= 0I;
  #L3136be.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3136c4.  v0:= temp @kind object;
  #L3136c6.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L3136cc.  v0:= temp @kind object;
  #L3136ce.  v0:= (`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider`) v0 @kind object;
  #L3136d2.  v1:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.unsupported` @type ^`boolean` @kind boolean;
  #L3136d6.  if v1 != 0 then goto L3136f8;
  #L3136da.  v2:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.selected` @type ^`java.lang.String` @kind object;
  #L3136de.  if v2 != 0 then goto L3136f8;
  #L3136e2.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L3136e8.  v0:= temp @kind object;
  #L3136ea.  v1:= 4I;
  #L3136ec.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L3136f0.  call `log`(v0, v1, v2, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3136f6.  return v4 @kind object;
  #L3136f8.  if v1 == 0 then goto L3136fe;
  #L3136fc.  goto L313702;
  #L3136fe.  v4:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.selected` @type ^`java.lang.String` @kind object;
  #L313702.  return v4 @kind object;
  #L313704.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L313706.  goto L31370a;
  #L313708.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L31370a.  v0:= new `java.lang.AssertionError`;
  #L31370e.  v1:= "failed to get ALPN selected protocol" @kind object;
  #L313712.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313718.  throw v0;
  catch `java.lang.reflect.InvocationTargetException` @[L3136ac..L313702] goto L313708;
  catch `java.lang.IllegalAccessException` @[L3136ac..L313702] goto L313704;
}
