record `okhttp3.internal.http.CallServerInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `boolean` `okhttp3.internal.http.CallServerInterceptor.forWebSocket` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.CallServerInterceptor` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http/CallServerInterceptor;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L308bec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L308bf2.  v0.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` := v1 @kind boolean;
  #L308bf6.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.CallServerInterceptor` v8 @kind this, `okhttp3.Interceptor$Chain` v9 @kind object) @signature `Lokhttp3/internal/http/CallServerInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3088e4.  v9:= (`okhttp3.internal.http.RealInterceptorChain`) v9 @kind object;
  #L3088e8.  call temp:= `exchange`(v9) @signature `Lokhttp3/internal/http/RealInterceptorChain;.exchange:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L3088ee.  v0:= temp @kind object;
  #L3088f0.  call temp:= `request`(v9) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L3088f6.  v9:= temp @kind object;
  #L3088f8.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3088fe.  v1:= temp @kind wide;
  #L308900.  call `writeRequestHeaders`(v0, v9) @signature `Lokhttp3/internal/connection/Exchange;.writeRequestHeaders:(Lokhttp3/Request;)V` @kind virtual;
  #L308906.  call temp:= `method`(v9) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L30890c.  v3:= temp @kind object;
  #L30890e.  call temp:= `permitsRequestBody`(v3) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L308914.  v3:= temp;
  #L308916.  v4:= 0I;
  #L308918.  v5:= 0I;
  #L30891a.  if v3 == 0 then goto L3089e8;
  #L30891e.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L308924.  v3:= temp @kind object;
  #L308926.  if v3 == 0 then goto L3089e8;
  #L30892a.  v3:= "Expect" @kind object;
  #L30892e.  call temp:= `header`(v9, v3) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L308934.  v3:= temp @kind object;
  #L308936.  v6:= "100-continue" @kind object;
  #L30893a.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L308940.  v3:= temp;
  #L308942.  v6:= 1I;
  #L308944.  if v3 == 0 then goto L308960;
  #L308948.  call `flushRequest`(v0) @signature `Lokhttp3/internal/connection/Exchange;.flushRequest:()V` @kind virtual;
  #L30894e.  call `responseHeadersStart`(v0) @signature `Lokhttp3/internal/connection/Exchange;.responseHeadersStart:()V` @kind virtual;
  #L308954.  call temp:= `readResponseHeaders`(v0, v6) @signature `Lokhttp3/internal/connection/Exchange;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L30895a.  v5:= temp @kind object;
  #L30895c.  v3:= 1I;
  #L30895e.  goto L308962;
  #L308960.  v3:= 0I;
  #L308962.  if v5 != 0 then goto L3089c6;
  #L308966.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30896c.  v7:= temp @kind object;
  #L30896e.  call temp:= `isDuplex`(v7) @signature `Lokhttp3/RequestBody;.isDuplex:()Z` @kind virtual;
  #L308974.  v7:= temp;
  #L308976.  if v7 == 0 then goto L3089a0;
  #L30897a.  call `flushRequest`(v0) @signature `Lokhttp3/internal/connection/Exchange;.flushRequest:()V` @kind virtual;
  #L308980.  call temp:= `createRequestBody`(v0, v9, v6) @signature `Lokhttp3/internal/connection/Exchange;.createRequestBody:(Lokhttp3/Request;Z)Lokio/g0;` @kind virtual;
  #L308986.  v6:= temp @kind object;
  #L308988.  call temp:= `c`(v6) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L30898e.  v6:= temp @kind object;
  #L308990.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L308996.  v7:= temp @kind object;
  #L308998.  call `writeTo`(v7, v6) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/n;)V` @kind virtual;
  #L30899e.  goto L3089f0;
  #L3089a0.  call temp:= `createRequestBody`(v0, v9, v4) @signature `Lokhttp3/internal/connection/Exchange;.createRequestBody:(Lokhttp3/Request;Z)Lokio/g0;` @kind virtual;
  #L3089a6.  v6:= temp @kind object;
  #L3089a8.  call temp:= `c`(v6) @signature `Lokio/v;.c:(Lokio/g0;)Lokio/n;` @kind static;
  #L3089ae.  v6:= temp @kind object;
  #L3089b0.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L3089b6.  v7:= temp @kind object;
  #L3089b8.  call `writeTo`(v7, v6) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/n;)V` @kind virtual;
  #L3089be.  call `close`(v6) @signature `Lokio/g0;.close:()V` @kind interface;
  #L3089c4.  goto L3089f0;
  #L3089c6.  call `noRequestBody`(v0) @signature `Lokhttp3/internal/connection/Exchange;.noRequestBody:()V` @kind virtual;
  #L3089cc.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L3089d2.  v6:= temp @kind object;
  #L3089d4.  call temp:= `isMultiplexed`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L3089da.  v6:= temp;
  #L3089dc.  if v6 != 0 then goto L3089f0;
  #L3089e0.  call `noNewExchangesOnConnection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.noNewExchangesOnConnection:()V` @kind virtual;
  #L3089e6.  goto L3089f0;
  #L3089e8.  call `noRequestBody`(v0) @signature `Lokhttp3/internal/connection/Exchange;.noRequestBody:()V` @kind virtual;
  #L3089ee.  v3:= 0I;
  #L3089f0.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L3089f6.  v6:= temp @kind object;
  #L3089f8.  if v6 == 0 then goto L308a10;
  #L3089fc.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L308a02.  v6:= temp @kind object;
  #L308a04.  call temp:= `isDuplex`(v6) @signature `Lokhttp3/RequestBody;.isDuplex:()Z` @kind virtual;
  #L308a0a.  v6:= temp;
  #L308a0c.  if v6 != 0 then goto L308a16;
  #L308a10.  call `finishRequest`(v0) @signature `Lokhttp3/internal/connection/Exchange;.finishRequest:()V` @kind virtual;
  #L308a16.  if v3 != 0 then goto L308a20;
  #L308a1a.  call `responseHeadersStart`(v0) @signature `Lokhttp3/internal/connection/Exchange;.responseHeadersStart:()V` @kind virtual;
  #L308a20.  if v5 != 0 then goto L308a2c;
  #L308a24.  call temp:= `readResponseHeaders`(v0, v4) @signature `Lokhttp3/internal/connection/Exchange;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a2a.  v5:= temp @kind object;
  #L308a2c.  call temp:= `request`(v5, v9) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a32.  v3:= temp @kind object;
  #L308a34.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L308a3a.  v5:= temp @kind object;
  #L308a3c.  call temp:= `handshake`(v5) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L308a42.  v5:= temp @kind object;
  #L308a44.  call temp:= `handshake`(v3, v5) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a4a.  v3:= temp @kind object;
  #L308a4c.  call temp:= `sentRequestAtMillis`(v3, v1) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a52.  v3:= temp @kind object;
  #L308a54.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L308a5a.  v5:= temp @kind wide;
  #L308a5c.  call temp:= `receivedResponseAtMillis`(v3, v5) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a62.  v3:= temp @kind object;
  #L308a64.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L308a6a.  v3:= temp @kind object;
  #L308a6c.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L308a72.  v5:= temp;
  #L308a74.  v6:= 100I;
  #L308a78.  if v5 != v6 then goto L308acc;
  #L308a7c.  call temp:= `readResponseHeaders`(v0, v4) @signature `Lokhttp3/internal/connection/Exchange;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a82.  v3:= temp @kind object;
  #L308a84.  call temp:= `request`(v3, v9) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308a8a.  v9:= temp @kind object;
  #L308a8c.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L308a92.  v3:= temp @kind object;
  #L308a94.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L308a9a.  v3:= temp @kind object;
  #L308a9c.  call temp:= `handshake`(v9, v3) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308aa2.  v9:= temp @kind object;
  #L308aa4.  call temp:= `sentRequestAtMillis`(v9, v1) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L308aaa.  v9:= temp @kind object;
  #L308aac.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L308ab2.  v1:= temp @kind wide;
  #L308ab4.  call temp:= `receivedResponseAtMillis`(v9, v1) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L308aba.  v9:= temp @kind object;
  #L308abc.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L308ac2.  v3:= temp @kind object;
  #L308ac4.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L308aca.  v5:= temp;
  #L308acc.  call `responseHeadersEnd`(v0, v3) @signature `Lokhttp3/internal/connection/Exchange;.responseHeadersEnd:(Lokhttp3/Response;)V` @kind virtual;
  #L308ad2.  v9:= v8.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` @kind boolean;
  #L308ad6.  if v9 == 0 then goto L308b00;
  #L308ada.  v9:= 101I;
  #L308ade.  if v5 != v9 then goto L308b00;
  #L308ae2.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L308ae8.  v9:= temp @kind object;
  #L308aea.  v1:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L308aee.  call temp:= `body`(v9, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308af4.  v9:= temp @kind object;
  #L308af6.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L308afc.  v9:= temp @kind object;
  #L308afe.  goto L308b20;
  #L308b00.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L308b06.  v9:= temp @kind object;
  #L308b08.  call temp:= `openResponseBody`(v0, v3) @signature `Lokhttp3/internal/connection/Exchange;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @kind virtual;
  #L308b0e.  v1:= temp @kind object;
  #L308b10.  call temp:= `body`(v9, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L308b16.  v9:= temp @kind object;
  #L308b18.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L308b1e.  v9:= temp @kind object;
  #L308b20.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L308b26.  v1:= temp @kind object;
  #L308b28.  v2:= "Connection" @kind object;
  #L308b2c.  call temp:= `header`(v1, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L308b32.  v1:= temp @kind object;
  #L308b34.  v3:= "close" @kind object;
  #L308b38.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L308b3e.  v1:= temp;
  #L308b40.  if v1 != 0 then goto L308b58;
  #L308b44.  call temp:= `header`(v9, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L308b4a.  v1:= temp @kind object;
  #L308b4c.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L308b52.  v1:= temp;
  #L308b54.  if v1 == 0 then goto L308b5e;
  #L308b58.  call `noNewExchangesOnConnection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.noNewExchangesOnConnection:()V` @kind virtual;
  #L308b5e.  v0:= 204I;
  #L308b62.  if v5 == v0 then goto L308b6e;
  #L308b66.  v0:= 205I;
  #L308b6a.  if v5 != v0 then goto L308b8a;
  #L308b6e.  call temp:= `body`(v9) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L308b74.  v0:= temp @kind object;
  #L308b76.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L308b7c.  v0:= temp @kind wide;
  #L308b7e.  v2:= 0L;
  #L308b82.  v4:= lcmp(v0, v2);
  #L308b86.  if v4 > 0 then goto L308b8c;
  #L308b8a.  return v9 @kind object;
  #L308b8c.  v0:= new `java.net.ProtocolException`;
  #L308b90.  v1:= new `java.lang.StringBuilder`;
  #L308b94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L308b9a.  v2:= "HTTP " @kind object;
  #L308b9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308ba4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L308baa.  v2:= " had non-zero Content-Length: " @kind object;
  #L308bae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308bb4.  call temp:= `body`(v9) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L308bba.  v9:= temp @kind object;
  #L308bbc.  call temp:= `contentLength`(v9) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L308bc2.  v2:= temp @kind wide;
  #L308bc4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L308bca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L308bd0.  v9:= temp @kind object;
  #L308bd2.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308bd8.  throw v0;
}
