record `okhttp3.internal.http.RealInterceptorChain` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor$Chain` @kind interface {
  `okhttp3.Call` `okhttp3.internal.http.RealInterceptorChain.call` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http.RealInterceptorChain.calls` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http.RealInterceptorChain.connectTimeout` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.internal.http.RealInterceptorChain.exchange` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http.RealInterceptorChain.index` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.http.RealInterceptorChain.interceptors` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http.RealInterceptorChain.readTimeout` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.internal.http.RealInterceptorChain.request` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Transmitter` `okhttp3.internal.http.RealInterceptorChain.transmitter` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http.RealInterceptorChain.writeTimeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.RealInterceptorChain` v0 @kind this, `java.util.List` v1 @kind object, `okhttp3.internal.connection.Transmitter` v2 @kind object, `okhttp3.internal.connection.Exchange` v3 @kind object, `int` v4 , `okhttp3.Request` v5 @kind object, `okhttp3.Call` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lokhttp3/internal/http/RealInterceptorChain;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L309bd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L309bd6.  v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` := v1 @kind object;
  #L309bda.  v0.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` := v2 @kind object;
  #L309bde.  v0.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` := v3 @kind object;
  #L309be2.  v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int` := v4;
  #L309be6.  v0.`okhttp3.internal.http.RealInterceptorChain.request` @type ^`okhttp3.Request` := v5 @kind object;
  #L309bea.  v0.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` := v6 @kind object;
  #L309bee.  v0.`okhttp3.internal.http.RealInterceptorChain.connectTimeout` @type ^`int` := v7;
  #L309bf2.  v0.`okhttp3.internal.http.RealInterceptorChain.readTimeout` @type ^`int` := v8;
  #L309bf6.  v0.`okhttp3.internal.http.RealInterceptorChain.writeTimeout` @type ^`int` := v9;
  #L309bfa.  return @kind void;
}
procedure `okhttp3.Call` `call`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309808.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` @kind object;
  #L30980c.  return v0 @kind object;
}
procedure `int` `connectTimeoutMillis`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3097c0.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.connectTimeout` @type ^`int`;
  #L3097c4.  return v0;
}
procedure `okhttp3.Connection` `connection`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.connection:()Lokhttp3/Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309820.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L309824.  if v0 == 0 then goto L309832;
  #L309828.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L30982e.  v0:= temp @kind object;
  #L309830.  goto L309834;
  #L309832.  v0:= 0I;
  #L309834.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.Exchange` `exchange`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.exchange:()Lokhttp3/internal/connection/Exchange;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309b90.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L309b94.  if v0 == 0 then goto L309b9a;
  #L309b98.  return v0 @kind object;
  #L309b9a.  v0:= new `java.lang.IllegalStateException`;
  #L309b9e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L309ba4.  throw v0;
}
procedure `okhttp3.Response` `proceed`(`okhttp3.internal.http.RealInterceptorChain` v2 @kind this, `okhttp3.Request` v3 @kind object) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309944.  v0:= v2.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L309948.  v1:= v2.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L30994c.  call temp:= `proceed`(v2, v3, v0, v1) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;` @kind virtual;
  #L309952.  v3:= temp @kind object;
  #L309954.  return v3 @kind object;
}
procedure `okhttp3.Response` `proceed`(`okhttp3.internal.http.RealInterceptorChain` v15 @kind this, `okhttp3.Request` v16 @kind object, `okhttp3.internal.connection.Transmitter` v17 @kind object, `okhttp3.internal.connection.Exchange` v18 @kind object) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L309968.  v0:= v15 @kind object;
  #L30996a.  v1:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L30996e.  v2:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L309972.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309978.  v2:= temp;
  #L30997a.  if v1 >= v2 then goto L309b74;
  #L30997e.  v1:= v0.`okhttp3.internal.http.RealInterceptorChain.calls` @type ^`int`;
  #L309982.  v2:= 1I;
  #L309984.  v1:= v1 + v2 @kind int;
  #L309986.  v0.`okhttp3.internal.http.RealInterceptorChain.calls` @type ^`int` := v1;
  #L30998a.  v1:= v0.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L30998e.  v3:= "network interceptor " @kind object;
  #L309992.  if v1 == 0 then goto L3099fa;
  #L309996.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L30999c.  v1:= temp @kind object;
  #L30999e.  call temp:= `url`(v16) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L3099a4.  v4:= temp @kind object;
  #L3099a6.  call temp:= `supportsUrl`(v1, v4) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L3099ac.  v1:= temp;
  #L3099ae.  if v1 == 0 then goto L3099b4;
  #L3099b2.  goto L3099fa;
  #L3099b4.  v1:= new `java.lang.IllegalStateException`;
  #L3099b8.  v4:= new `java.lang.StringBuilder`;
  #L3099bc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3099c2.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3099c8.  v3:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L3099cc.  v5:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L3099d0.  v5:= v5 - v2 @kind int;
  #L3099d2.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3099d8.  v2:= temp @kind object;
  #L3099da.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3099e0.  v2:= " must retain the same host and port" @kind object;
  #L3099e4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3099ea.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3099f0.  v2:= temp @kind object;
  #L3099f2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3099f8.  throw v1;
  #L3099fa.  v1:= v0.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L3099fe.  v4:= " must call proceed() exactly once" @kind object;
  #L309a02.  if v1 == 0 then goto L309a52;
  #L309a06.  v1:= v0.`okhttp3.internal.http.RealInterceptorChain.calls` @type ^`int`;
  #L309a0a.  if v1 > v2 then goto L309a10;
  #L309a0e.  goto L309a52;
  #L309a10.  v1:= new `java.lang.IllegalStateException`;
  #L309a14.  v5:= new `java.lang.StringBuilder`;
  #L309a18.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309a1e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309a24.  v3:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L309a28.  v6:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L309a2c.  v6:= v6 - v2 @kind int;
  #L309a2e.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L309a34.  v2:= temp @kind object;
  #L309a36.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309a3c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309a42.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309a48.  v2:= temp @kind object;
  #L309a4a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309a50.  throw v1;
  #L309a52.  v1:= new `okhttp3.internal.http.RealInterceptorChain`;
  #L309a56.  v6:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L309a5a.  v5:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L309a5e.  v9:= v5 + 1;
  #L309a62.  v11:= v0.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` @kind object;
  #L309a66.  v12:= v0.`okhttp3.internal.http.RealInterceptorChain.connectTimeout` @type ^`int`;
  #L309a6a.  v13:= v0.`okhttp3.internal.http.RealInterceptorChain.readTimeout` @type ^`int`;
  #L309a6e.  v14:= v0.`okhttp3.internal.http.RealInterceptorChain.writeTimeout` @type ^`int`;
  #L309a72.  v5:= v1 @kind object;
  #L309a74.  v7:= v17 @kind object;
  #L309a78.  v8:= v18 @kind object;
  #L309a7c.  v10:= v16 @kind object;
  #L309a80.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lokhttp3/internal/http/RealInterceptorChain;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V` @kind direct;
  #L309a86.  v5:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L309a8a.  v6:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L309a8e.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L309a94.  v5:= temp @kind object;
  #L309a96.  v5:= (`okhttp3.Interceptor`) v5 @kind object;
  #L309a9a.  call temp:= `intercept`(v5, v1) @signature `Lokhttp3/Interceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @kind interface;
  #L309aa0.  v6:= temp @kind object;
  #L309aa2.  if v18 == 0 then goto L309af6;
  #L309aa6.  v7:= v0.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L309aaa.  v7:= v7 + v2 @kind int;
  #L309aac.  v8:= v0.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L309ab0.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309ab6.  v8:= temp;
  #L309ab8.  if v7 >= v8 then goto L309af6;
  #L309abc.  v1:= v1.`okhttp3.internal.http.RealInterceptorChain.calls` @type ^`int`;
  #L309ac0.  if v1 != v2 then goto L309ac6;
  #L309ac4.  goto L309af6;
  #L309ac6.  v1:= new `java.lang.IllegalStateException`;
  #L309aca.  v2:= new `java.lang.StringBuilder`;
  #L309ace.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309ad4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ada.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ae0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309ae6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309aec.  v2:= temp @kind object;
  #L309aee.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309af4.  throw v1;
  #L309af6.  v1:= "interceptor " @kind object;
  #L309afa.  if v6 == 0 then goto L309b40;
  #L309afe.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L309b04.  v2:= temp @kind object;
  #L309b06.  if v2 == 0 then goto L309b0c;
  #L309b0a.  return v6 @kind object;
  #L309b0c.  v2:= new `java.lang.IllegalStateException`;
  #L309b10.  v3:= new `java.lang.StringBuilder`;
  #L309b14.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309b1a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b20.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b26.  v1:= " returned a response with no body" @kind object;
  #L309b2a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b30.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309b36.  v1:= temp @kind object;
  #L309b38.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309b3e.  throw v2;
  #L309b40.  v2:= new `java.lang.NullPointerException`;
  #L309b44.  v3:= new `java.lang.StringBuilder`;
  #L309b48.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309b4e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b54.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b5a.  v1:= " returned null" @kind object;
  #L309b5e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309b64.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309b6a.  v1:= temp @kind object;
  #L309b6c.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309b72.  throw v2;
  #L309b74.  v1:= new `java.lang.AssertionError`;
  #L309b78.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L309b7e.  throw v1;
}
procedure `int` `readTimeoutMillis`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3097d8.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.readTimeout` @type ^`int`;
  #L3097dc.  return v0;
}
procedure `okhttp3.Request` `request`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30992c.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L309930.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.Transmitter` `transmitter`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.transmitter:()Lokhttp3/internal/connection/Transmitter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309bb8.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L309bbc.  return v0 @kind object;
}
procedure `okhttp3.Interceptor$Chain` `withConnectTimeout`(`okhttp3.internal.http.RealInterceptorChain` v12 @kind this, `int` v13 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lokhttp3/internal/http/RealInterceptorChain;.withConnectTimeout:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L309848.  v0:= (`long`) v13 @kind i2l;
  #L30984a.  v13:= "timeout" @kind object;
  #L30984e.  call temp:= `checkDuration`(v13, v0, v14) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L309854.  v9:= temp;
  #L309856.  v13:= new `okhttp3.internal.http.RealInterceptorChain`;
  #L30985a.  v3:= v12.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L30985e.  v4:= v12.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L309862.  v5:= v12.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L309866.  v6:= v12.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L30986a.  v7:= v12.`okhttp3.internal.http.RealInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L30986e.  v8:= v12.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` @kind object;
  #L309872.  v10:= v12.`okhttp3.internal.http.RealInterceptorChain.readTimeout` @type ^`int`;
  #L309876.  v11:= v12.`okhttp3.internal.http.RealInterceptorChain.writeTimeout` @type ^`int`;
  #L30987a.  v2:= v13 @kind object;
  #L30987c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V` @kind direct;
  #L309882.  return v13 @kind object;
}
procedure `okhttp3.Interceptor$Chain` `withReadTimeout`(`okhttp3.internal.http.RealInterceptorChain` v12 @kind this, `int` v13 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lokhttp3/internal/http/RealInterceptorChain;.withReadTimeout:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L309894.  v0:= (`long`) v13 @kind i2l;
  #L309896.  v13:= "timeout" @kind object;
  #L30989a.  call temp:= `checkDuration`(v13, v0, v14) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L3098a0.  v10:= temp;
  #L3098a2.  v13:= new `okhttp3.internal.http.RealInterceptorChain`;
  #L3098a6.  v3:= v12.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L3098aa.  v4:= v12.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L3098ae.  v5:= v12.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L3098b2.  v6:= v12.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L3098b6.  v7:= v12.`okhttp3.internal.http.RealInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L3098ba.  v8:= v12.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` @kind object;
  #L3098be.  v9:= v12.`okhttp3.internal.http.RealInterceptorChain.connectTimeout` @type ^`int`;
  #L3098c2.  v11:= v12.`okhttp3.internal.http.RealInterceptorChain.writeTimeout` @type ^`int`;
  #L3098c6.  v2:= v13 @kind object;
  #L3098c8.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V` @kind direct;
  #L3098ce.  return v13 @kind object;
}
procedure `okhttp3.Interceptor$Chain` `withWriteTimeout`(`okhttp3.internal.http.RealInterceptorChain` v12 @kind this, `int` v13 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `Lokhttp3/internal/http/RealInterceptorChain;.withWriteTimeout:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3098e0.  v0:= (`long`) v13 @kind i2l;
  #L3098e2.  v13:= "timeout" @kind object;
  #L3098e6.  call temp:= `checkDuration`(v13, v0, v14) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L3098ec.  v11:= temp;
  #L3098ee.  v13:= new `okhttp3.internal.http.RealInterceptorChain`;
  #L3098f2.  v3:= v12.`okhttp3.internal.http.RealInterceptorChain.interceptors` @type ^`java.util.List` @kind object;
  #L3098f6.  v4:= v12.`okhttp3.internal.http.RealInterceptorChain.transmitter` @type ^`okhttp3.internal.connection.Transmitter` @kind object;
  #L3098fa.  v5:= v12.`okhttp3.internal.http.RealInterceptorChain.exchange` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L3098fe.  v6:= v12.`okhttp3.internal.http.RealInterceptorChain.index` @type ^`int`;
  #L309902.  v7:= v12.`okhttp3.internal.http.RealInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L309906.  v8:= v12.`okhttp3.internal.http.RealInterceptorChain.call` @type ^`okhttp3.Call` @kind object;
  #L30990a.  v9:= v12.`okhttp3.internal.http.RealInterceptorChain.connectTimeout` @type ^`int`;
  #L30990e.  v10:= v12.`okhttp3.internal.http.RealInterceptorChain.readTimeout` @type ^`int`;
  #L309912.  v2:= v13 @kind object;
  #L309914.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;ILokhttp3/Request;Lokhttp3/Call;III)V` @kind direct;
  #L30991a.  return v13 @kind object;
}
procedure `int` `writeTimeoutMillis`(`okhttp3.internal.http.RealInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/RealInterceptorChain;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3097f0.  v0:= v1.`okhttp3.internal.http.RealInterceptorChain.writeTimeout` @type ^`int`;
  #L3097f4.  return v0;
}
