record `okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.MAX_FOLLOW_UPS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30a38c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30a392.  v0.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L30a396.  return @kind void;
}
procedure `okhttp3.Request` `followUpRequest`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v6 @kind this, `okhttp3.Response` v7 @kind object, `okhttp3.Route` v8 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.followUpRequest:(Lokhttp3/Response;Lokhttp3/Route;)Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L309ecc.  if v7 == 0 then goto L30a186;
  #L309ed0.  call temp:= `code`(v7) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L309ed6.  v0:= temp;
  #L309ed8.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L309ede.  v1:= temp @kind object;
  #L309ee0.  call temp:= `method`(v1) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L309ee6.  v1:= temp @kind object;
  #L309ee8.  v2:= 307I;
  #L309eec.  v3:= "GET" @kind object;
  #L309ef0.  v4:= 0I;
  #L309ef2.  if v0 == v2 then goto L30a03c;
  #L309ef6.  v2:= 308I;
  #L309efa.  if v0 == v2 then goto L30a03c;
  #L309efe.  v2:= 401I;
  #L309f02.  if v0 == v2 then goto L30a026;
  #L309f06.  v2:= 503I;
  #L309f0a.  if v0 == v2 then goto L309fe6;
  #L309f0e.  v2:= 407I;
  #L309f12.  if v0 == v2 then goto L309f96;
  #L309f16.  v8:= 408I;
  #L309f1a.  if v0 == v8 then goto L309f26;
  #L309f1e.  goto L30a194;
  #L309f24.  return v4 @kind object;
  #L309f26.  v0:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L309f2a.  call temp:= `retryOnConnectionFailure`(v0) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L309f30.  v0:= temp;
  #L309f32.  if v0 != 0 then goto L309f38;
  #L309f36.  return v4 @kind object;
  #L309f38.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L309f3e.  v0:= temp @kind object;
  #L309f40.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L309f46.  v0:= temp @kind object;
  #L309f48.  if v0 == 0 then goto L309f5a;
  #L309f4c.  call temp:= `isOneShot`(v0) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L309f52.  v0:= temp;
  #L309f54.  if v0 == 0 then goto L309f5a;
  #L309f58.  return v4 @kind object;
  #L309f5a.  call temp:= `priorResponse`(v7) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L309f60.  v0:= temp @kind object;
  #L309f62.  if v0 == 0 then goto L309f7c;
  #L309f66.  call temp:= `priorResponse`(v7) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L309f6c.  v0:= temp @kind object;
  #L309f6e.  call temp:= `code`(v0) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L309f74.  v0:= temp;
  #L309f76.  if v0 != v8 then goto L309f7c;
  #L309f7a.  return v4 @kind object;
  #L309f7c.  v8:= 0I;
  #L309f7e.  call temp:= `retryAfter`(v6, v7, v8) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @kind direct;
  #L309f84.  v8:= temp;
  #L309f86.  if v8 <= 0 then goto L309f8c;
  #L309f8a.  return v4 @kind object;
  #L309f8c.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L309f92.  v7:= temp @kind object;
  #L309f94.  return v7 @kind object;
  #L309f96.  if v8 == 0 then goto L309fa4;
  #L309f9a.  call temp:= `proxy`(v8) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L309fa0.  v0:= temp @kind object;
  #L309fa2.  goto L309fb0;
  #L309fa4.  v0:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L309fa8.  call temp:= `proxy`(v0) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L309fae.  v0:= temp @kind object;
  #L309fb0.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L309fb6.  v0:= temp @kind object;
  #L309fb8.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L309fbc.  if v0 != v1 then goto L309fd6;
  #L309fc0.  v0:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L309fc4.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L309fca.  v0:= temp @kind object;
  #L309fcc.  call temp:= `authenticate`(v0, v8, v7) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L309fd2.  v7:= temp @kind object;
  #L309fd4.  return v7 @kind object;
  #L309fd6.  v7:= new `java.net.ProtocolException`;
  #L309fda.  v8:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L309fde.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L309fe4.  throw v7;
  #L309fe6.  call temp:= `priorResponse`(v7) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L309fec.  v8:= temp @kind object;
  #L309fee.  if v8 == 0 then goto L30a008;
  #L309ff2.  call temp:= `priorResponse`(v7) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L309ff8.  v8:= temp @kind object;
  #L309ffa.  call temp:= `code`(v8) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L30a000.  v8:= temp;
  #L30a002.  if v8 != v2 then goto L30a008;
  #L30a006.  return v4 @kind object;
  #L30a008.  v8:= 2147483647I;
  #L30a00e.  call temp:= `retryAfter`(v6, v7, v8) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @kind direct;
  #L30a014.  v8:= temp;
  #L30a016.  if v8 != 0 then goto L30a024;
  #L30a01a.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a020.  v7:= temp @kind object;
  #L30a022.  return v7 @kind object;
  #L30a024.  return v4 @kind object;
  #L30a026.  v0:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30a02a.  call temp:= `authenticator`(v0) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L30a030.  v0:= temp @kind object;
  #L30a032.  call temp:= `authenticate`(v0, v8, v7) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L30a038.  v7:= temp @kind object;
  #L30a03a.  return v7 @kind object;
  #L30a03c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30a042.  v8:= temp;
  #L30a044.  if v8 != 0 then goto L30a05a;
  #L30a048.  v8:= "HEAD" @kind object;
  #L30a04c.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30a052.  v8:= temp;
  #L30a054.  if v8 != 0 then goto L30a05a;
  #L30a058.  return v4 @kind object;
  #L30a05a.  v8:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30a05e.  call temp:= `followRedirects`(v8) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @kind virtual;
  #L30a064.  v8:= temp;
  #L30a066.  if v8 != 0 then goto L30a06c;
  #L30a06a.  return v4 @kind object;
  #L30a06c.  v8:= "Location" @kind object;
  #L30a070.  call temp:= `header`(v7, v8) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L30a076.  v8:= temp @kind object;
  #L30a078.  if v8 != 0 then goto L30a07e;
  #L30a07c.  return v4 @kind object;
  #L30a07e.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a084.  v0:= temp @kind object;
  #L30a086.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30a08c.  v0:= temp @kind object;
  #L30a08e.  call temp:= `resolve`(v0, v8) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L30a094.  v8:= temp @kind object;
  #L30a096.  if v8 != 0 then goto L30a09c;
  #L30a09a.  return v4 @kind object;
  #L30a09c.  call temp:= `scheme`(v8) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L30a0a2.  v0:= temp @kind object;
  #L30a0a4.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a0aa.  v2:= temp @kind object;
  #L30a0ac.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30a0b2.  v2:= temp @kind object;
  #L30a0b4.  call temp:= `scheme`(v2) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L30a0ba.  v2:= temp @kind object;
  #L30a0bc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30a0c2.  v0:= temp;
  #L30a0c4.  if v0 != 0 then goto L30a0da;
  #L30a0c8.  v0:= v6.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30a0cc.  call temp:= `followSslRedirects`(v0) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @kind virtual;
  #L30a0d2.  v0:= temp;
  #L30a0d4.  if v0 != 0 then goto L30a0da;
  #L30a0d8.  return v4 @kind object;
  #L30a0da.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a0e0.  v0:= temp @kind object;
  #L30a0e2.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L30a0e8.  v0:= temp @kind object;
  #L30a0ea.  call temp:= `permitsRequestBody`(v1) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L30a0f0.  v2:= temp;
  #L30a0f2.  if v2 == 0 then goto L30a14e;
  #L30a0f6.  call temp:= `redirectsWithBody`(v1) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @kind static;
  #L30a0fc.  v2:= temp;
  #L30a0fe.  call temp:= `redirectsToGet`(v1) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @kind static;
  #L30a104.  v5:= temp;
  #L30a106.  if v5 == 0 then goto L30a112;
  #L30a10a.  call temp:= `method`(v0, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a110.  goto L30a12c;
  #L30a112.  if v2 == 0 then goto L30a126;
  #L30a116.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a11c.  v3:= temp @kind object;
  #L30a11e.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30a124.  v4:= temp @kind object;
  #L30a126.  call temp:= `method`(v0, v1, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a12c.  if v2 != 0 then goto L30a14e;
  #L30a130.  v1:= "Transfer-Encoding" @kind object;
  #L30a134.  call temp:= `removeHeader`(v0, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a13a.  v1:= "Content-Length" @kind object;
  #L30a13e.  call temp:= `removeHeader`(v0, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a144.  v1:= "Content-Type" @kind object;
  #L30a148.  call temp:= `removeHeader`(v0, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a14e.  call temp:= `request`(v7) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L30a154.  v7:= temp @kind object;
  #L30a156.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30a15c.  v7:= temp @kind object;
  #L30a15e.  call temp:= `sameConnection`(v7, v8) @signature `Lokhttp3/internal/Util;.sameConnection:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L30a164.  v7:= temp;
  #L30a166.  if v7 != 0 then goto L30a174;
  #L30a16a.  v7:= "Authorization" @kind object;
  #L30a16e.  call temp:= `removeHeader`(v0, v7) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a174.  call temp:= `url`(v0, v8) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L30a17a.  v7:= temp @kind object;
  #L30a17c.  call temp:= `build`(v7) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L30a182.  v7:= temp @kind object;
  #L30a184.  return v7 @kind object;
  #L30a186.  v7:= new `java.lang.IllegalStateException`;
  #L30a18a.  call `<init>`(v7) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L30a190.  throw v7;
  #L30a192.  
  #L30a194.  switch v0
                  | 300 => goto L30a05a
                  | 301 => goto L30a05a
                  | 302 => goto L30a05a
                  | 303 => goto L30a05a
                  | else => goto L309f24;
}
procedure `boolean` `isRecoverable`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isRecoverable:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L309d94.  v0:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L309d98.  v1:= 0I;
  #L309d9a.  if v0 == 0 then goto L309da0;
  #L309d9e.  return v1;
  #L309da0.  v0:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L309da4.  v2:= 1I;
  #L309da6.  if v0 == 0 then goto L309dba;
  #L309daa.  v4:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L309dae.  if v4 == 0 then goto L309db8;
  #L309db2.  if v5 != 0 then goto L309db8;
  #L309db6.  v1:= 1I;
  #L309db8.  return v1;
  #L309dba.  v5:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L309dbe.  if v5 == 0 then goto L309dd4;
  #L309dc2.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L309dc8.  v5:= temp @kind object;
  #L309dca.  v5:= instanceof @variable v5 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L309dce.  if v5 == 0 then goto L309dd4;
  #L309dd2.  return v1;
  #L309dd4.  v4:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L309dd8.  if v4 == 0 then goto L309dde;
  #L309ddc.  return v1;
  #L309dde.  return v2;
}
procedure `boolean` `recover`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this, `java.io.IOException` v3 @kind object, `okhttp3.internal.connection.Transmitter` v4 @kind object, `boolean` v5 , `okhttp3.Request` v6 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/Transmitter;ZLokhttp3/Request;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L309df0.  v0:= v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L309df4.  call temp:= `retryOnConnectionFailure`(v0) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L309dfa.  v0:= temp;
  #L309dfc.  v1:= 0I;
  #L309dfe.  if v0 != 0 then goto L309e04;
  #L309e02.  return v1;
  #L309e04.  if v5 == 0 then goto L309e16;
  #L309e08.  call temp:= `requestIsOneShot`(v2, v3, v6) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.requestIsOneShot:(Ljava/io/IOException;Lokhttp3/Request;)Z` @kind direct;
  #L309e0e.  v6:= temp;
  #L309e10.  if v6 == 0 then goto L309e16;
  #L309e14.  return v1;
  #L309e16.  call temp:= `isRecoverable`(v2, v3, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isRecoverable:(Ljava/io/IOException;Z)Z` @kind direct;
  #L309e1c.  v3:= temp;
  #L309e1e.  if v3 != 0 then goto L309e24;
  #L309e22.  return v1;
  #L309e24.  call temp:= `canRetry`(v4) @signature `Lokhttp3/internal/connection/Transmitter;.canRetry:()Z` @kind virtual;
  #L309e2a.  v3:= temp;
  #L309e2c.  if v3 != 0 then goto L309e32;
  #L309e30.  return v1;
  #L309e32.  v3:= 1I;
  #L309e34.  return v3;
}
procedure `boolean` `requestIsOneShot`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `java.io.IOException` v1 @kind object, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.requestIsOneShot:(Ljava/io/IOException;Lokhttp3/Request;)Z` @AccessFlag PRIVATE {
    temp;

  #L309e48.  call temp:= `body`(v2) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L309e4e.  v2:= temp @kind object;
  #L309e50.  if v2 == 0 then goto L309e60;
  #L309e54.  call temp:= `isOneShot`(v2) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L309e5a.  v2:= temp;
  #L309e5c.  if v2 != 0 then goto L309e68;
  #L309e60.  v1:= instanceof @variable v1 @type ^`java.io.FileNotFoundException` @kind boolean;
  #L309e64.  if v1 == 0 then goto L309e6c;
  #L309e68.  v1:= 1I;
  #L309e6a.  goto L309e6e;
  #L309e6c.  v1:= 0I;
  #L309e6e.  return v1;
}
procedure `int` `retryAfter`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v1 @kind this, `okhttp3.Response` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L309e80.  v0:= "Retry-After" @kind object;
  #L309e84.  call temp:= `header`(v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L309e8a.  v2:= temp @kind object;
  #L309e8c.  if v2 != 0 then goto L309e92;
  #L309e90.  return v3;
  #L309e92.  v3:= "\\d+" @kind object;
  #L309e96.  call temp:= `matches`(v2, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L309e9c.  v3:= temp;
  #L309e9e.  if v3 == 0 then goto L309eb4;
  #L309ea2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L309ea8.  v2:= temp @kind object;
  #L309eaa.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L309eb0.  v2:= temp;
  #L309eb2.  return v2;
  #L309eb4.  v2:= 2147483647I;
  #L309eba.  return v2;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v8 @kind this, `okhttp3.Interceptor$Chain` v9 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30a1bc.  call temp:= `request`(v9) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L30a1c2.  v0:= temp @kind object;
  #L30a1c4.  v9:= (`okhttp3.internal.http.RealInterceptorChain`) v9 @kind object;
  #L30a1c8.  call temp:= `transmitter`(v9) @signature `Lokhttp3/internal/http/RealInterceptorChain;.transmitter:()Lokhttp3/internal/connection/Transmitter;` @kind virtual;
  #L30a1ce.  v1:= temp @kind object;
  #L30a1d0.  v2:= 0I;
  #L30a1d2.  v3:= 0I;
  #L30a1d4.  v4:= v3 @kind object;
  #L30a1d6.  v5:= 0I;
  #L30a1d8.  call `prepareToConnect`(v1, v0) @signature `Lokhttp3/internal/connection/Transmitter;.prepareToConnect:(Lokhttp3/Request;)V` @kind virtual;
  #L30a1de.  call temp:= `isCanceled`(v1) @signature `Lokhttp3/internal/connection/Transmitter;.isCanceled:()Z` @kind virtual;
  #L30a1e4.  v6:= temp;
  #L30a1e6.  if v6 != 0 then goto L30a33e;
  #L30a1ea.  call temp:= `proceed`(v9, v0, v1, v3) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/Transmitter;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Response;` @kind virtual;
  #L30a1f0.  v0:= temp @kind object;
  #L30a1f2.  if v4 == 0 then goto L30a226;
  #L30a1f6.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L30a1fc.  v0:= temp @kind object;
  #L30a1fe.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L30a204.  v4:= temp @kind object;
  #L30a206.  call temp:= `body`(v4, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30a20c.  v4:= temp @kind object;
  #L30a20e.  call temp:= `build`(v4) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L30a214.  v4:= temp @kind object;
  #L30a216.  call temp:= `priorResponse`(v0, v4) @signature `Lokhttp3/Response$Builder;.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30a21c.  v0:= temp @kind object;
  #L30a21e.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L30a224.  v0:= temp @kind object;
  #L30a226.  v4:= v0 @kind object;
  #L30a228.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L30a22c.  call temp:= `exchange`(v0, v4) @signature `Lokhttp3/internal/Internal;.exchange:(Lokhttp3/Response;)Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L30a232.  v0:= temp @kind object;
  #L30a234.  if v0 == 0 then goto L30a24a;
  #L30a238.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/Exchange;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L30a23e.  v6:= temp @kind object;
  #L30a240.  call temp:= `route`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L30a246.  v6:= temp @kind object;
  #L30a248.  goto L30a24c;
  #L30a24a.  v6:= v3 @kind object;
  #L30a24c.  call temp:= `followUpRequest`(v8, v4, v6) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.followUpRequest:(Lokhttp3/Response;Lokhttp3/Route;)Lokhttp3/Request;` @kind direct;
  #L30a252.  v6:= temp @kind object;
  #L30a254.  if v6 != 0 then goto L30a270;
  #L30a258.  if v0 == 0 then goto L30a26e;
  #L30a25c.  call temp:= `isDuplex`(v0) @signature `Lokhttp3/internal/connection/Exchange;.isDuplex:()Z` @kind virtual;
  #L30a262.  v9:= temp;
  #L30a264.  if v9 == 0 then goto L30a26e;
  #L30a268.  call `timeoutEarlyExit`(v1) @signature `Lokhttp3/internal/connection/Transmitter;.timeoutEarlyExit:()V` @kind virtual;
  #L30a26e.  return v4 @kind object;
  #L30a270.  call temp:= `body`(v6) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30a276.  v7:= temp @kind object;
  #L30a278.  if v7 == 0 then goto L30a28a;
  #L30a27c.  call temp:= `isOneShot`(v7) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L30a282.  v7:= temp;
  #L30a284.  if v7 == 0 then goto L30a28a;
  #L30a288.  return v4 @kind object;
  #L30a28a.  call temp:= `body`(v4) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30a290.  v7:= temp @kind object;
  #L30a292.  call `closeQuietly`(v7) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30a298.  call temp:= `hasExchange`(v1) @signature `Lokhttp3/internal/connection/Transmitter;.hasExchange:()Z` @kind virtual;
  #L30a29e.  v7:= temp;
  #L30a2a0.  if v7 == 0 then goto L30a2aa;
  #L30a2a4.  call `detachWithViolence`(v0) @signature `Lokhttp3/internal/connection/Exchange;.detachWithViolence:()V` @kind virtual;
  #L30a2aa.  v5:= v5 + 1;
  #L30a2ae.  v0:= 20I;
  #L30a2b2.  if v5 > v0 then goto L30a2ba;
  #L30a2b6.  v0:= v6 @kind object;
  #L30a2b8.  goto L30a1d8;
  #L30a2ba.  v9:= new `java.net.ProtocolException`;
  #L30a2be.  v0:= new `java.lang.StringBuilder`;
  #L30a2c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30a2c8.  v1:= "Too many follow-up requests: " @kind object;
  #L30a2cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a2d2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30a2d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30a2de.  v0:= temp @kind object;
  #L30a2e0.  call `<init>`(v9, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a2e6.  throw v9;
  #L30a2e8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a2ea.  goto L30a336;
  #L30a2ec.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L30a2ee.  v7:= instanceof @variable v6 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L30a2f2.  if v7 != 0 then goto L30a2fa;
  #L30a2f6.  v7:= 1I;
  #L30a2f8.  goto L30a2fc;
  #L30a2fa.  v7:= 0I;
  #L30a2fc.  call temp:= `recover`(v8, v6, v1, v7, v0) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/Transmitter;ZLokhttp3/Request;)Z` @kind direct;
  #L30a302.  v7:= temp;
  #L30a304.  if v7 == 0 then goto L30a30a;
  #L30a308.  goto L30a322;
  #L30a30a.  throw v6;
  #L30a30c.  v6:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L30a30e.  call temp:= `getLastConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L30a314.  v7:= temp @kind object;
  #L30a316.  call temp:= `recover`(v8, v7, v1, v2, v0) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/Transmitter;ZLokhttp3/Request;)Z` @kind direct;
  #L30a31c.  v7:= temp;
  #L30a31e.  if v7 == 0 then goto L30a32c;
  #L30a322.  call `exchangeDoneDueToException`(v1) @signature `Lokhttp3/internal/connection/Transmitter;.exchangeDoneDueToException:()V` @kind virtual;
  #L30a328.  goto L30a1d8;
  #L30a32c.  call temp:= `getFirstConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @kind virtual;
  #L30a332.  v9:= temp @kind object;
  #L30a334.  throw v9;
  #L30a336.  call `exchangeDoneDueToException`(v1) @signature `Lokhttp3/internal/connection/Transmitter;.exchangeDoneDueToException:()V` @kind virtual;
  #L30a33c.  throw v9;
  #L30a33e.  v9:= new `java.io.IOException`;
  #L30a342.  v0:= "Canceled" @kind object;
  #L30a346.  call `<init>`(v9, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a34c.  goto L30a350;
  #L30a34e.  throw v9;
  #L30a350.  goto L30a34e;
  catch `okhttp3.internal.connection.RouteException` @[L30a1ea..L30a1f2] goto L30a30c;
  catch `java.io.IOException` @[L30a1ea..L30a1f2] goto L30a2ec;
  catch `java.lang.Throwable` @[L30a1ea..L30a1f2] goto L30a2e8;
  catch `java.lang.Throwable` @[L30a2ee..L30a31e] goto L30a2e8;
  catch `java.lang.Throwable` @[L30a32c..L30a336] goto L30a2e8;
}
