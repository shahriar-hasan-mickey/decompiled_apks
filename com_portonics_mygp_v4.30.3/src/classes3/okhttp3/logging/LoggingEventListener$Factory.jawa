record `okhttp3.logging.LoggingEventListener$Factory` @kind class @AccessFlag PUBLIC extends `okhttp3.EventListener$Factory` @kind interface {
  `okhttp3.logging.HttpLoggingInterceptor$Logger` `okhttp3.logging.LoggingEventListener$Factory.logger` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.logging.LoggingEventListener$Factory` v1 @kind this) @signature `Lokhttp3/logging/LoggingEventListener$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3175e0.  v0:= `@@okhttp3.logging.HttpLoggingInterceptor$Logger.DEFAULT` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L3175e4.  call `<init>`(v1, v0) @signature `Lokhttp3/logging/LoggingEventListener$Factory;.<init>:(Lokhttp3/logging/HttpLoggingInterceptor$Logger;)V` @kind direct;
  #L3175ea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.logging.LoggingEventListener$Factory` v0 @kind this, `okhttp3.logging.HttpLoggingInterceptor$Logger` v1 @kind object) @signature `Lokhttp3/logging/LoggingEventListener$Factory;.<init>:(Lokhttp3/logging/HttpLoggingInterceptor$Logger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3175fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L317602.  v0.`okhttp3.logging.LoggingEventListener$Factory.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` := v1 @kind object;
  #L317606.  return @kind void;
}
procedure `okhttp3.EventListener` `create`(`okhttp3.logging.LoggingEventListener$Factory` v2 @kind this, `okhttp3.Call` v3 @kind object) @signature `Lokhttp3/logging/LoggingEventListener$Factory;.create:(Lokhttp3/Call;)Lokhttp3/EventListener;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3175bc.  v3:= new `okhttp3.logging.LoggingEventListener`;
  #L3175c0.  v0:= v2.`okhttp3.logging.LoggingEventListener$Factory.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L3175c4.  v1:= 0I;
  #L3175c6.  call `<init>`(v3, v0, v1) @signature `Lokhttp3/logging/LoggingEventListener;.<init>:(Lokhttp3/logging/HttpLoggingInterceptor$Logger;Lokhttp3/logging/LoggingEventListener$1;)V` @kind direct;
  #L3175cc.  return v3 @kind object;
}
