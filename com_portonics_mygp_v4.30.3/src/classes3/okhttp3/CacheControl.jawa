record `okhttp3.CacheControl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.CacheControl.headerValue` @AccessFlag ;
  `boolean` `okhttp3.CacheControl.immutable` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPrivate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPublic` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxAgeSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxStaleSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.minFreshSeconds` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.mustRevalidate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noTransform` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.onlyIfCached` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.sMaxAgeSeconds` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_CACHE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_NETWORK` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CacheControl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2f6354.  v0:= new `okhttp3.CacheControl$Builder`;
  #L2f6358.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L2f635e.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl$Builder;.noCache:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L2f6364.  v0:= temp @kind object;
  #L2f6366.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L2f636c.  v0:= temp @kind object;
  #L2f636e.  `@@okhttp3.CacheControl.FORCE_NETWORK` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L2f6372.  v0:= new `okhttp3.CacheControl$Builder`;
  #L2f6376.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L2f637c.  call temp:= `onlyIfCached`(v0) @signature `Lokhttp3/CacheControl$Builder;.onlyIfCached:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L2f6382.  v0:= temp @kind object;
  #L2f6384.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2f6388.  v2:= 2147483647I;
  #L2f638e.  call temp:= `maxStale`(v0, v2, v1) @signature `Lokhttp3/CacheControl$Builder;.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L2f6394.  v0:= temp @kind object;
  #L2f6396.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L2f639c.  v0:= temp @kind object;
  #L2f639e.  `@@okhttp3.CacheControl.FORCE_CACHE` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L2f63a2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v1 @kind this, `okhttp3.CacheControl$Builder` v2 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(Lokhttp3/CacheControl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2f6400.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6406.  v0:= v2.`okhttp3.CacheControl$Builder.noCache` @type ^`boolean` @kind boolean;
  #L2f640a.  v1.`okhttp3.CacheControl.noCache` @type ^`boolean` := v0 @kind boolean;
  #L2f640e.  v0:= v2.`okhttp3.CacheControl$Builder.noStore` @type ^`boolean` @kind boolean;
  #L2f6412.  v1.`okhttp3.CacheControl.noStore` @type ^`boolean` := v0 @kind boolean;
  #L2f6416.  v0:= v2.`okhttp3.CacheControl$Builder.maxAgeSeconds` @type ^`int`;
  #L2f641a.  v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v0;
  #L2f641e.  v0:= -1I;
  #L2f6420.  v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v0;
  #L2f6424.  v0:= 0I;
  #L2f6426.  v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v0 @kind boolean;
  #L2f642a.  v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v0 @kind boolean;
  #L2f642e.  v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v0 @kind boolean;
  #L2f6432.  v0:= v2.`okhttp3.CacheControl$Builder.maxStaleSeconds` @type ^`int`;
  #L2f6436.  v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v0;
  #L2f643a.  v0:= v2.`okhttp3.CacheControl$Builder.minFreshSeconds` @type ^`int`;
  #L2f643e.  v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v0;
  #L2f6442.  v0:= v2.`okhttp3.CacheControl$Builder.onlyIfCached` @type ^`boolean` @kind boolean;
  #L2f6446.  v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v0 @kind boolean;
  #L2f644a.  v0:= v2.`okhttp3.CacheControl$Builder.noTransform` @type ^`boolean` @kind boolean;
  #L2f644e.  v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v0 @kind boolean;
  #L2f6452.  v2:= v2.`okhttp3.CacheControl$Builder.immutable` @type ^`boolean` @kind boolean;
  #L2f6456.  v1.`okhttp3.CacheControl.immutable` @type ^`boolean` := v2 @kind boolean;
  #L2f645a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f63b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f63ba.  v0.`okhttp3.CacheControl.noCache` @type ^`boolean` := v1 @kind boolean;
  #L2f63be.  v0.`okhttp3.CacheControl.noStore` @type ^`boolean` := v2 @kind boolean;
  #L2f63c2.  v0.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v3;
  #L2f63c6.  v0.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v4;
  #L2f63ca.  v0.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v5 @kind boolean;
  #L2f63ce.  v0.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v6 @kind boolean;
  #L2f63d2.  v0.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v7 @kind boolean;
  #L2f63d6.  v0.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v8;
  #L2f63da.  v0.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v9;
  #L2f63de.  v0.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v10 @kind boolean;
  #L2f63e2.  v0.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v11 @kind boolean;
  #L2f63e6.  v0.`okhttp3.CacheControl.immutable` @type ^`boolean` := v12 @kind boolean;
  #L2f63ea.  v0.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` := v13 @kind object;
  #L2f63ee.  return @kind void;
}
procedure `java.lang.String` `headerValue`(`okhttp3.CacheControl` v4 @kind this) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f5f10.  v0:= new `java.lang.StringBuilder`;
  #L2f5f14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f5f1a.  v1:= v4.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L2f5f1e.  if v1 == 0 then goto L2f5f2c;
  #L2f5f22.  v1:= "no-cache, " @kind object;
  #L2f5f26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f2c.  v1:= v4.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L2f5f30.  if v1 == 0 then goto L2f5f3e;
  #L2f5f34.  v1:= "no-store, " @kind object;
  #L2f5f38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f3e.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L2f5f42.  v2:= ", " @kind object;
  #L2f5f46.  v3:= -1I;
  #L2f5f48.  if v1 == v3 then goto L2f5f66;
  #L2f5f4c.  v1:= "max-age=" @kind object;
  #L2f5f50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f56.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L2f5f5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f66.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L2f5f6a.  if v1 == v3 then goto L2f5f88;
  #L2f5f6e.  v1:= "s-maxage=" @kind object;
  #L2f5f72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f78.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L2f5f7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f88.  v1:= v4.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L2f5f8c.  if v1 == 0 then goto L2f5f9a;
  #L2f5f90.  v1:= "private, " @kind object;
  #L2f5f94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5f9a.  v1:= v4.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L2f5f9e.  if v1 == 0 then goto L2f5fac;
  #L2f5fa2.  v1:= "public, " @kind object;
  #L2f5fa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5fac.  v1:= v4.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L2f5fb0.  if v1 == 0 then goto L2f5fbe;
  #L2f5fb4.  v1:= "must-revalidate, " @kind object;
  #L2f5fb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5fbe.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L2f5fc2.  if v1 == v3 then goto L2f5fe0;
  #L2f5fc6.  v1:= "max-stale=" @kind object;
  #L2f5fca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5fd0.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L2f5fd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5fda.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5fe0.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L2f5fe4.  if v1 == v3 then goto L2f6002;
  #L2f5fe8.  v1:= "min-fresh=" @kind object;
  #L2f5fec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5ff2.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L2f5ff6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f5ffc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6002.  v1:= v4.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L2f6006.  if v1 == 0 then goto L2f6014;
  #L2f600a.  v1:= "only-if-cached, " @kind object;
  #L2f600e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6014.  v1:= v4.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L2f6018.  if v1 == 0 then goto L2f6026;
  #L2f601c.  v1:= "no-transform, " @kind object;
  #L2f6020.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6026.  v1:= v4.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L2f602a.  if v1 == 0 then goto L2f6038;
  #L2f602e.  v1:= "immutable, " @kind object;
  #L2f6032.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6038.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2f603e.  v1:= temp;
  #L2f6040.  if v1 != 0 then goto L2f604a;
  #L2f6044.  v0:= "" @kind object;
  #L2f6048.  return v0 @kind object;
  #L2f604a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2f6050.  v1:= temp;
  #L2f6052.  v1:= v1 + -2;
  #L2f6056.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2f605c.  v2:= temp;
  #L2f605e.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6064.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f606a.  v0:= temp @kind object;
  #L2f606c.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `parse`(`okhttp3.Headers` v22 @kind object) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L2f60a8.  v0:= v22 @kind object;
  #L2f60ac.  call temp:= `size`(v22) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2f60b2.  v1:= temp;
  #L2f60b4.  v6:= 0I;
  #L2f60b6.  v7:= 1I;
  #L2f60b8.  v8:= 0I;
  #L2f60ba.  v9:= 0I;
  #L2f60bc.  v10:= 0I;
  #L2f60be.  v11:= -1I;
  #L2f60c0.  v12:= -1I;
  #L2f60c2.  v13:= 0I;
  #L2f60c4.  v14:= 0I;
  #L2f60c6.  v15:= 0I;
  #L2f60c8.  v16:= -1I;
  #L2f60cc.  v17:= -1I;
  #L2f60d0.  v18:= 0I;
  #L2f60d4.  v19:= 0I;
  #L2f60d8.  v20:= 0I;
  #L2f60dc.  if v6 >= v1 then goto L2f6326;
  #L2f60e0.  call temp:= `name`(v0, v6) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2f60e6.  v2:= temp @kind object;
  #L2f60e8.  call temp:= `value`(v0, v6) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2f60ee.  v4:= temp @kind object;
  #L2f60f0.  v3:= "Cache-Control" @kind object;
  #L2f60f4.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f60fa.  v3:= temp;
  #L2f60fc.  if v3 == 0 then goto L2f610a;
  #L2f6100.  if v8 == 0 then goto L2f6106;
  #L2f6104.  goto L2f611a;
  #L2f6106.  v8:= v4 @kind object;
  #L2f6108.  goto L2f611c;
  #L2f610a.  v3:= "Pragma" @kind object;
  #L2f610e.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6114.  v2:= temp;
  #L2f6116.  if v2 == 0 then goto L2f6318;
  #L2f611a.  v7:= 0I;
  #L2f611c.  v2:= 0I;
  #L2f611e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f6124.  v3:= temp;
  #L2f6126.  if v2 >= v3 then goto L2f6318;
  #L2f612a.  v3:= "=,;" @kind object;
  #L2f612e.  call temp:= `skipUntil`(v4, v2, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L2f6134.  v3:= temp;
  #L2f6136.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2f613c.  v2:= temp @kind object;
  #L2f613e.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2f6144.  v2:= temp @kind object;
  #L2f6146.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f614c.  v5:= temp;
  #L2f614e.  if v3 == v5 then goto L2f61da;
  #L2f6152.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f6158.  v5:= temp;
  #L2f615a.  v0:= 44I;
  #L2f615e.  if v5 == v0 then goto L2f61da;
  #L2f6162.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f6168.  v0:= temp;
  #L2f616a.  v5:= 59I;
  #L2f616e.  if v0 != v5 then goto L2f6174;
  #L2f6172.  goto L2f61da;
  #L2f6174.  v3:= v3 + 1;
  #L2f6178.  call temp:= `skipWhitespace`(v4, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L2f617e.  v0:= temp;
  #L2f6180.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f6186.  v3:= temp;
  #L2f6188.  if v0 >= v3 then goto L2f61ba;
  #L2f618c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f6192.  v3:= temp;
  #L2f6194.  v5:= 34I;
  #L2f6198.  if v3 != v5 then goto L2f61ba;
  #L2f619c.  v0:= v0 + 1;
  #L2f61a0.  v3:= "\"" @kind object;
  #L2f61a4.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L2f61aa.  v3:= temp;
  #L2f61ac.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2f61b2.  v0:= temp @kind object;
  #L2f61b4.  v5:= 1I;
  #L2f61b6.  v3:= v3 + v5 @kind int;
  #L2f61b8.  goto L2f61e2;
  #L2f61ba.  v5:= 1I;
  #L2f61bc.  v3:= ",;" @kind object;
  #L2f61c0.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L2f61c6.  v3:= temp;
  #L2f61c8.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2f61ce.  v0:= temp @kind object;
  #L2f61d0.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2f61d6.  v0:= temp @kind object;
  #L2f61d8.  goto L2f61e2;
  #L2f61da.  v5:= 1I;
  #L2f61dc.  v3:= v3 + 1;
  #L2f61e0.  v0:= 0I;
  #L2f61e2.  v5:= "no-cache" @kind object;
  #L2f61e6.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f61ec.  v5:= temp;
  #L2f61ee.  if v5 == 0 then goto L2f61fa;
  #L2f61f2.  v5:= -1I;
  #L2f61f4.  v9:= 1I;
  #L2f61f6.  goto L2f630e;
  #L2f61fa.  v5:= "no-store" @kind object;
  #L2f61fe.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6204.  v5:= temp;
  #L2f6206.  if v5 == 0 then goto L2f6212;
  #L2f620a.  v5:= -1I;
  #L2f620c.  v10:= 1I;
  #L2f620e.  goto L2f630e;
  #L2f6212.  v5:= "max-age" @kind object;
  #L2f6216.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f621c.  v5:= temp;
  #L2f621e.  if v5 == 0 then goto L2f6230;
  #L2f6222.  v5:= -1I;
  #L2f6224.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L2f622a.  v11:= temp;
  #L2f622c.  goto L2f630e;
  #L2f6230.  v5:= "s-maxage" @kind object;
  #L2f6234.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f623a.  v5:= temp;
  #L2f623c.  if v5 == 0 then goto L2f624c;
  #L2f6240.  v5:= -1I;
  #L2f6242.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L2f6248.  v12:= temp;
  #L2f624a.  goto L2f630e;
  #L2f624c.  v5:= "private" @kind object;
  #L2f6250.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6256.  v5:= temp;
  #L2f6258.  if v5 == 0 then goto L2f6262;
  #L2f625c.  v5:= -1I;
  #L2f625e.  v13:= 1I;
  #L2f6260.  goto L2f630e;
  #L2f6262.  v5:= "public" @kind object;
  #L2f6266.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f626c.  v5:= temp;
  #L2f626e.  if v5 == 0 then goto L2f6278;
  #L2f6272.  v5:= -1I;
  #L2f6274.  v14:= 1I;
  #L2f6276.  goto L2f630e;
  #L2f6278.  v5:= "must-revalidate" @kind object;
  #L2f627c.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6282.  v5:= temp;
  #L2f6284.  if v5 == 0 then goto L2f628e;
  #L2f6288.  v5:= -1I;
  #L2f628a.  v15:= 1I;
  #L2f628c.  goto L2f630e;
  #L2f628e.  v5:= "max-stale" @kind object;
  #L2f6292.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6298.  v5:= temp;
  #L2f629a.  if v5 == 0 then goto L2f62b0;
  #L2f629e.  v2:= 2147483647I;
  #L2f62a4.  call temp:= `parseSeconds`(v0, v2) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L2f62aa.  v16:= temp;
  #L2f62ac.  v5:= -1I;
  #L2f62ae.  goto L2f630e;
  #L2f62b0.  v5:= "min-fresh" @kind object;
  #L2f62b4.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f62ba.  v5:= temp;
  #L2f62bc.  if v5 == 0 then goto L2f62cc;
  #L2f62c0.  v5:= -1I;
  #L2f62c2.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L2f62c8.  v17:= temp;
  #L2f62ca.  goto L2f630e;
  #L2f62cc.  v5:= -1I;
  #L2f62ce.  v0:= "only-if-cached" @kind object;
  #L2f62d2.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f62d8.  v0:= temp;
  #L2f62da.  if v0 == 0 then goto L2f62e4;
  #L2f62de.  v18:= 1I;
  #L2f62e2.  goto L2f630e;
  #L2f62e4.  v0:= "no-transform" @kind object;
  #L2f62e8.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f62ee.  v0:= temp;
  #L2f62f0.  if v0 == 0 then goto L2f62fa;
  #L2f62f4.  v19:= 1I;
  #L2f62f8.  goto L2f630e;
  #L2f62fa.  v0:= "immutable" @kind object;
  #L2f62fe.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6304.  v0:= temp;
  #L2f6306.  if v0 == 0 then goto L2f630e;
  #L2f630a.  v20:= 1I;
  #L2f630e.  v0:= v22 @kind object;
  #L2f6312.  v2:= v3;
  #L2f6314.  goto L2f611e;
  #L2f6318.  v5:= -1I;
  #L2f631a.  v6:= v6 + 1;
  #L2f631e.  v0:= v22 @kind object;
  #L2f6322.  goto L2f60dc;
  #L2f6326.  if v7 != 0 then goto L2f6330;
  #L2f632a.  v21:= 0I;
  #L2f632e.  goto L2f6334;
  #L2f6330.  v21:= v8 @kind object;
  #L2f6334.  v0:= new `okhttp3.CacheControl`;
  #L2f6338.  v8:= v0 @kind object;
  #L2f633a.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L2f6340.  return v0 @kind object;
}
procedure `boolean` `immutable`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.immutable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5df0.  v0:= v1.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L2f5df4.  return v0;
}
procedure `boolean` `isPrivate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPrivate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e08.  v0:= v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L2f5e0c.  return v0;
}
procedure `boolean` `isPublic`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPublic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e20.  v0:= v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L2f5e24.  return v0;
}
procedure `int` `maxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5eb0.  v0:= v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L2f5eb4.  return v0;
}
procedure `int` `maxStaleSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5ec8.  v0:= v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L2f5ecc.  return v0;
}
procedure `int` `minFreshSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5ee0.  v0:= v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L2f5ee4.  return v0;
}
procedure `boolean` `mustRevalidate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e38.  v0:= v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L2f5e3c.  return v0;
}
procedure `boolean` `noCache`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noCache:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e50.  v0:= v1.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L2f5e54.  return v0;
}
procedure `boolean` `noStore`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noStore:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e68.  v0:= v1.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L2f5e6c.  return v0;
}
procedure `boolean` `noTransform`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noTransform:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e80.  v0:= v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L2f5e84.  return v0;
}
procedure `boolean` `onlyIfCached`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5e98.  v0:= v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L2f5e9c.  return v0;
}
procedure `int` `sMaxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.sMaxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f5ef8.  v0:= v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L2f5efc.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f6080.  v0:= v1.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` @kind object;
  #L2f6084.  if v0 == 0 then goto L2f608a;
  #L2f6088.  goto L2f6096;
  #L2f608a.  call temp:= `headerValue`(v1) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @kind direct;
  #L2f6090.  v0:= temp @kind object;
  #L2f6092.  v1.`okhttp3.CacheControl.headerValue` @type ^`java.lang.String` := v0 @kind object;
  #L2f6096.  return v0 @kind object;
}
