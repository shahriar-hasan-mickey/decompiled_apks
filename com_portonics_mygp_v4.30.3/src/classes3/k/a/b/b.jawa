record `k.a.b.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `boolean` `a`(`char` v1 ) @signature `Lk/a/b/b;.a:(C)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L23c0fc.  v0:= 32I;
  #L23c100.  if v1 < v0 then goto L23c110;
  #L23c104.  v0:= 126I;
  #L23c108.  if v1 > v0 then goto L23c110;
  #L23c10c.  v1:= 1I;
  #L23c10e.  goto L23c112;
  #L23c110.  v1:= 0I;
  #L23c112.  return v1;
}
procedure `boolean` `b`(`java.lang.String` v3 @kind object) @signature `Lk/a/b/b;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23c124.  v0:= 0I;
  #L23c126.  v1:= 0I;
  #L23c128.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23c12e.  v2:= temp;
  #L23c130.  if v1 >= v2 then goto L23c150;
  #L23c134.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23c13a.  v2:= temp;
  #L23c13c.  call temp:= `a`(v2) @signature `Lk/a/b/b;.a:(C)Z` @kind static;
  #L23c142.  v2:= temp;
  #L23c144.  if v2 != 0 then goto L23c14a;
  #L23c148.  return v0;
  #L23c14a.  v1:= v1 + 1;
  #L23c14e.  goto L23c128;
  #L23c150.  v3:= 1I;
  #L23c152.  return v3;
}
