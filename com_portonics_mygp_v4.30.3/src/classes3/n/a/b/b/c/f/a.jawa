record `n.a.b.b.c.f.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `byte`[] `a`(`short`[] v3 @kind object) @signature `Ln/a/b/b/c/f/a;.a:([S)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35f96c.  v0:= length @variable v3;
  #L35f96e.  v0:= new `byte`[v0];
  #L35f972.  v1:= 0I;
  #L35f974.  v2:= length @variable v3;
  #L35f976.  if v1 >= v2 then goto L35f98a;
  #L35f97a.  v2:= v3[v1] @kind short;
  #L35f97e.  v2:= (`byte`) v2 @kind i2b;
  #L35f980.  v0[v1]:= v2 @kind byte;
  #L35f984.  v1:= v1 + 1;
  #L35f988.  goto L35f974;
  #L35f98a.  return v0 @kind object;
}
procedure `byte`[][] `b`(`short`[][] v6 @kind object) @signature `Ln/a/b/b/c/f/a;.b:([[S)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35f9cc.  v0:= length @variable v6;
  #L35f9ce.  v1:= 0I;
  #L35f9d0.  v2:= v6[v1] @kind object;
  #L35f9d4.  v2:= length @variable v2;
  #L35f9d6.  v3:= 2I;
  #L35f9d8.  v3:= new `int`[v3];
  #L35f9dc.  v4:= 1I;
  #L35f9de.  v3[v4]:= v2;
  #L35f9e2.  v3[v1]:= v0;
  #L35f9e6.  v0:= constclass @type ^`byte` @kind object;
  #L35f9ea.  call temp:= `newInstance`(v0, v3) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L35f9f0.  v0:= temp @kind object;
  #L35f9f2.  v0:= (`byte`[][]) v0 @kind object;
  #L35f9f6.  v2:= 0I;
  #L35f9f8.  v3:= length @variable v6;
  #L35f9fa.  if v2 >= v3 then goto L35fa28;
  #L35f9fe.  v3:= 0I;
  #L35fa00.  v4:= v6[v1] @kind object;
  #L35fa04.  v4:= length @variable v4;
  #L35fa06.  if v3 >= v4 then goto L35fa22;
  #L35fa0a.  v4:= v0[v2] @kind object;
  #L35fa0e.  v5:= v6[v2] @kind object;
  #L35fa12.  v5:= v5[v3] @kind short;
  #L35fa16.  v5:= (`byte`) v5 @kind i2b;
  #L35fa18.  v4[v3]:= v5 @kind byte;
  #L35fa1c.  v3:= v3 + 1;
  #L35fa20.  goto L35fa00;
  #L35fa22.  v2:= v2 + 1;
  #L35fa26.  goto L35f9f8;
  #L35fa28.  return v0 @kind object;
}
procedure `byte`[] `c`(`int`[] v3 @kind object) @signature `Ln/a/b/b/c/f/a;.c:([I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35f99c.  v0:= length @variable v3;
  #L35f99e.  v0:= new `byte`[v0];
  #L35f9a2.  v1:= 0I;
  #L35f9a4.  v2:= length @variable v3;
  #L35f9a6.  if v1 >= v2 then goto L35f9ba;
  #L35f9aa.  v2:= v3[v1];
  #L35f9ae.  v2:= (`byte`) v2 @kind i2b;
  #L35f9b0.  v0[v1]:= v2 @kind byte;
  #L35f9b4.  v1:= v1 + 1;
  #L35f9b8.  goto L35f9a4;
  #L35f9ba.  return v0 @kind object;
}
procedure `boolean` `d`(`short`[] v6 @kind object, `short`[] v7 @kind object) @signature `Ln/a/b/b/c/f/a;.d:([S[S)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35f8e8.  v0:= length @variable v6;
  #L35f8ea.  v1:= length @variable v7;
  #L35f8ec.  v2:= 0I;
  #L35f8ee.  if v0 == v1 then goto L35f8f4;
  #L35f8f2.  return v2;
  #L35f8f4.  v0:= length @variable v6;
  #L35f8f6.  v1:= 1I;
  #L35f8f8.  v0:= v0 - v1 @kind int;
  #L35f8fa.  v3:= 1I;
  #L35f8fc.  if v0 < 0 then goto L35f91a;
  #L35f900.  v4:= v6[v0] @kind short;
  #L35f904.  v5:= v7[v0] @kind short;
  #L35f908.  if v4 != v5 then goto L35f910;
  #L35f90c.  v4:= 1I;
  #L35f90e.  goto L35f912;
  #L35f910.  v4:= 0I;
  #L35f912.  v3:= v3 ^& v4 @kind int;
  #L35f914.  v0:= v0 + -1;
  #L35f918.  goto L35f8fc;
  #L35f91a.  return v3;
}
procedure `boolean` `e`(`short`[][] v4 @kind object, `short`[][] v5 @kind object) @signature `Ln/a/b/b/c/f/a;.e:([[S[[S)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35f92c.  v0:= length @variable v4;
  #L35f92e.  v1:= length @variable v5;
  #L35f930.  if v0 == v1 then goto L35f938;
  #L35f934.  v4:= 0I;
  #L35f936.  return v4;
  #L35f938.  v0:= length @variable v4;
  #L35f93a.  v1:= 1I;
  #L35f93c.  v0:= v0 - v1 @kind int;
  #L35f93e.  if v0 < 0 then goto L35f95a;
  #L35f942.  v2:= v4[v0] @kind object;
  #L35f946.  v3:= v5[v0] @kind object;
  #L35f94a.  call temp:= `d`(v2, v3) @signature `Ln/a/b/b/c/f/a;.d:([S[S)Z` @kind static;
  #L35f950.  v2:= temp;
  #L35f952.  v1:= v1 ^& v2 @kind int;
  #L35f954.  v0:= v0 + -1;
  #L35f958.  goto L35f93e;
  #L35f95a.  return v1;
}
