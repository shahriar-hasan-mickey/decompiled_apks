record `n.a.a.b.d` @kind class @AccessFlag  extends `n.a.a.b.f` @kind interface {
  `n.a.a.b.a` `n.a.a.b.d.a` @AccessFlag PROTECTED_FINAL;
  `n.a.a.b.e` `n.a.a.b.d.b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`n.a.a.b.d` v0 @kind this, `n.a.a.b.a` v1 @kind object, `n.a.a.b.e` v2 @kind object) @signature `Ln/a/a/b/d;.<init>:(Ln/a/a/b/a;Ln/a/a/b/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35958c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L359592.  v0.`n.a.a.b.d.a` @type ^`n.a.a.b.a` := v1 @kind object;
  #L359596.  v0.`n.a.a.b.d.b` @type ^`n.a.a.b.e` := v2 @kind object;
  #L35959a.  return @kind void;
}
procedure `n.a.a.b.e` `a`(`n.a.a.b.d` v1 @kind this) @signature `Ln/a/a/b/d;.a:()Ln/a/a/b/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L359574.  v0:= v1.`n.a.a.b.d.b` @type ^`n.a.a.b.e` @kind object;
  #L359578.  return v0 @kind object;
}
procedure `int` `b`(`n.a.a.b.d` v2 @kind this) @signature `Ln/a/a/b/d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3594ec.  v0:= v2.`n.a.a.b.d.a` @type ^`n.a.a.b.a` @kind object;
  #L3594f0.  call temp:= `b`(v0) @signature `Ln/a/a/b/a;.b:()I` @kind interface;
  #L3594f6.  v0:= temp;
  #L3594f8.  v1:= v2.`n.a.a.b.d.b` @type ^`n.a.a.b.e` @kind object;
  #L3594fc.  call temp:= `b`(v1) @signature `Ln/a/a/b/e;.b:()I` @kind interface;
  #L359502.  v1:= temp;
  #L359504.  v0:= v0 * v1 @kind int;
  #L359508.  return v0;
}
procedure `java.math.BigInteger` `c`(`n.a.a.b.d` v1 @kind this) @signature `Ln/a/a/b/d;.c:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L359554.  v0:= v1.`n.a.a.b.d.a` @type ^`n.a.a.b.a` @kind object;
  #L359558.  call temp:= `c`(v0) @signature `Ln/a/a/b/a;.c:()Ljava/math/BigInteger;` @kind interface;
  #L35955e.  v0:= temp @kind object;
  #L359560.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.a.a.b.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/a/a/b/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L359494.  v0:= 1I;
  #L359496.  if v4 != v5 then goto L35949c;
  #L35949a.  return v0;
  #L35949c.  v1:= instanceof @variable v5 @type ^`n.a.a.b.d` @kind boolean;
  #L3594a0.  v2:= 0I;
  #L3594a2.  if v1 != 0 then goto L3594a8;
  #L3594a6.  return v2;
  #L3594a8.  v5:= (`n.a.a.b.d`) v5 @kind object;
  #L3594ac.  v1:= v4.`n.a.a.b.d.a` @type ^`n.a.a.b.a` @kind object;
  #L3594b0.  v3:= v5.`n.a.a.b.d.a` @type ^`n.a.a.b.a` @kind object;
  #L3594b4.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3594ba.  v1:= temp;
  #L3594bc.  if v1 == 0 then goto L3594d6;
  #L3594c0.  v1:= v4.`n.a.a.b.d.b` @type ^`n.a.a.b.e` @kind object;
  #L3594c4.  v5:= v5.`n.a.a.b.d.b` @type ^`n.a.a.b.e` @kind object;
  #L3594c8.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3594ce.  v5:= temp;
  #L3594d0.  if v5 == 0 then goto L3594d6;
  #L3594d4.  goto L3594d8;
  #L3594d6.  v0:= 0I;
  #L3594d8.  return v0;
}
procedure `int` `hashCode`(`n.a.a.b.d` v3 @kind this) @signature `Ln/a/a/b/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35951c.  v0:= v3.`n.a.a.b.d.a` @type ^`n.a.a.b.a` @kind object;
  #L359520.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L359526.  v0:= temp;
  #L359528.  v1:= v3.`n.a.a.b.d.b` @type ^`n.a.a.b.e` @kind object;
  #L35952c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L359532.  v1:= temp;
  #L359534.  v2:= 16I;
  #L359538.  call temp:= `a`(v1, v2) @signature `Lorg/bouncycastle/util/c;.a:(II)I` @kind static;
  #L35953e.  v1:= temp;
  #L359540.  v0:= v0 ^~ v1 @kind int;
  #L359542.  return v0;
}
