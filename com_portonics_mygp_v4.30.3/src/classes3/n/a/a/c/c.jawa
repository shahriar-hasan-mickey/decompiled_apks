record `n.a.a.c.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `int` `a`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/c;.a:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35b1b4.  v0:= 0I;
  #L35b1b6.  v1:= v10[v0];
  #L35b1ba.  v1:= (`long`) v1 @kind i2l;
  #L35b1bc.  v3:= 4294967295L;
  #L35b1c6.  v1:= v1 ^& v3 @kind long;
  #L35b1c8.  v5:= v11[v0];
  #L35b1cc.  v5:= (`long`) v5 @kind i2l;
  #L35b1ce.  v5:= v5 ^& v3 @kind long;
  #L35b1d0.  v1:= v1 + v5 @kind long;
  #L35b1d2.  v5:= 0L;
  #L35b1d6.  v1:= v1 + v5 @kind long;
  #L35b1d8.  v5:= (`int`) v1 @kind l2i;
  #L35b1da.  v12[v0]:= v5;
  #L35b1de.  v0:= 32I;
  #L35b1e2.  v1:= v1 ^>> v0 @kind long;
  #L35b1e4.  v5:= 1I;
  #L35b1e6.  v6:= v10[v5];
  #L35b1ea.  v6:= (`long`) v6 @kind i2l;
  #L35b1ec.  v6:= v6 ^& v3 @kind long;
  #L35b1ee.  v8:= v11[v5];
  #L35b1f2.  v8:= (`long`) v8 @kind i2l;
  #L35b1f4.  v8:= v8 ^& v3 @kind long;
  #L35b1f6.  v6:= v6 + v8 @kind long;
  #L35b1f8.  v1:= v1 + v6 @kind long;
  #L35b1fa.  v6:= (`int`) v1 @kind l2i;
  #L35b1fc.  v12[v5]:= v6;
  #L35b200.  v1:= v1 ^>> v0 @kind long;
  #L35b202.  v5:= 2I;
  #L35b204.  v6:= v10[v5];
  #L35b208.  v6:= (`long`) v6 @kind i2l;
  #L35b20a.  v6:= v6 ^& v3 @kind long;
  #L35b20c.  v8:= v11[v5];
  #L35b210.  v8:= (`long`) v8 @kind i2l;
  #L35b212.  v8:= v8 ^& v3 @kind long;
  #L35b214.  v6:= v6 + v8 @kind long;
  #L35b216.  v1:= v1 + v6 @kind long;
  #L35b218.  v6:= (`int`) v1 @kind l2i;
  #L35b21a.  v12[v5]:= v6;
  #L35b21e.  v1:= v1 ^>> v0 @kind long;
  #L35b220.  v5:= 3I;
  #L35b222.  v6:= v10[v5];
  #L35b226.  v6:= (`long`) v6 @kind i2l;
  #L35b228.  v6:= v6 ^& v3 @kind long;
  #L35b22a.  v8:= v11[v5];
  #L35b22e.  v8:= (`long`) v8 @kind i2l;
  #L35b230.  v8:= v8 ^& v3 @kind long;
  #L35b232.  v6:= v6 + v8 @kind long;
  #L35b234.  v1:= v1 + v6 @kind long;
  #L35b236.  v6:= (`int`) v1 @kind l2i;
  #L35b238.  v12[v5]:= v6;
  #L35b23c.  v1:= v1 ^>> v0 @kind long;
  #L35b23e.  v5:= 4I;
  #L35b240.  v6:= v10[v5];
  #L35b244.  v6:= (`long`) v6 @kind i2l;
  #L35b246.  v6:= v6 ^& v3 @kind long;
  #L35b248.  v8:= v11[v5];
  #L35b24c.  v8:= (`long`) v8 @kind i2l;
  #L35b24e.  v8:= v8 ^& v3 @kind long;
  #L35b250.  v6:= v6 + v8 @kind long;
  #L35b252.  v1:= v1 + v6 @kind long;
  #L35b254.  v6:= (`int`) v1 @kind l2i;
  #L35b256.  v12[v5]:= v6;
  #L35b25a.  v1:= v1 ^>> v0 @kind long;
  #L35b25c.  v5:= 5I;
  #L35b25e.  v6:= v10[v5];
  #L35b262.  v6:= (`long`) v6 @kind i2l;
  #L35b264.  v6:= v6 ^& v3 @kind long;
  #L35b266.  v8:= v11[v5];
  #L35b26a.  v8:= (`long`) v8 @kind i2l;
  #L35b26c.  v8:= v8 ^& v3 @kind long;
  #L35b26e.  v6:= v6 + v8 @kind long;
  #L35b270.  v1:= v1 + v6 @kind long;
  #L35b272.  v6:= (`int`) v1 @kind l2i;
  #L35b274.  v12[v5]:= v6;
  #L35b278.  v1:= v1 ^>> v0 @kind long;
  #L35b27a.  v5:= 6I;
  #L35b27c.  v10:= v10[v5];
  #L35b280.  v6:= (`long`) v10 @kind i2l;
  #L35b282.  v6:= v6 ^& v3 @kind long;
  #L35b284.  v10:= v11[v5];
  #L35b288.  v10:= (`long`) v10 @kind i2l;
  #L35b28a.  v10:= v10 ^& v3 @kind long;
  #L35b28c.  v6:= v6 + v10 @kind long;
  #L35b28e.  v1:= v1 + v6 @kind long;
  #L35b290.  v10:= (`int`) v1 @kind l2i;
  #L35b292.  v12[v5]:= v10;
  #L35b296.  v10:= v1 ^>> v0 @kind long;
  #L35b29a.  v11:= (`int`) v10 @kind l2i;
  #L35b29c.  return v11;
}
procedure `int` `b`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/c;.b:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35b2b0.  v0:= 0I;
  #L35b2b2.  v1:= v10[v0];
  #L35b2b6.  v1:= (`long`) v1 @kind i2l;
  #L35b2b8.  v3:= 4294967295L;
  #L35b2c2.  v1:= v1 ^& v3 @kind long;
  #L35b2c4.  v5:= v11[v0];
  #L35b2c8.  v5:= (`long`) v5 @kind i2l;
  #L35b2ca.  v5:= v5 ^& v3 @kind long;
  #L35b2cc.  v1:= v1 + v5 @kind long;
  #L35b2ce.  v5:= v12[v0];
  #L35b2d2.  v5:= (`long`) v5 @kind i2l;
  #L35b2d4.  v5:= v5 ^& v3 @kind long;
  #L35b2d6.  v1:= v1 + v5 @kind long;
  #L35b2d8.  v5:= 0L;
  #L35b2dc.  v1:= v1 + v5 @kind long;
  #L35b2de.  v5:= (`int`) v1 @kind l2i;
  #L35b2e0.  v12[v0]:= v5;
  #L35b2e4.  v0:= 32I;
  #L35b2e8.  v1:= v1 ^>> v0 @kind long;
  #L35b2ea.  v5:= 1I;
  #L35b2ec.  v6:= v10[v5];
  #L35b2f0.  v6:= (`long`) v6 @kind i2l;
  #L35b2f2.  v6:= v6 ^& v3 @kind long;
  #L35b2f4.  v8:= v11[v5];
  #L35b2f8.  v8:= (`long`) v8 @kind i2l;
  #L35b2fa.  v8:= v8 ^& v3 @kind long;
  #L35b2fc.  v6:= v6 + v8 @kind long;
  #L35b2fe.  v8:= v12[v5];
  #L35b302.  v8:= (`long`) v8 @kind i2l;
  #L35b304.  v8:= v8 ^& v3 @kind long;
  #L35b306.  v6:= v6 + v8 @kind long;
  #L35b308.  v1:= v1 + v6 @kind long;
  #L35b30a.  v6:= (`int`) v1 @kind l2i;
  #L35b30c.  v12[v5]:= v6;
  #L35b310.  v1:= v1 ^>> v0 @kind long;
  #L35b312.  v5:= 2I;
  #L35b314.  v6:= v10[v5];
  #L35b318.  v6:= (`long`) v6 @kind i2l;
  #L35b31a.  v6:= v6 ^& v3 @kind long;
  #L35b31c.  v8:= v11[v5];
  #L35b320.  v8:= (`long`) v8 @kind i2l;
  #L35b322.  v8:= v8 ^& v3 @kind long;
  #L35b324.  v6:= v6 + v8 @kind long;
  #L35b326.  v8:= v12[v5];
  #L35b32a.  v8:= (`long`) v8 @kind i2l;
  #L35b32c.  v8:= v8 ^& v3 @kind long;
  #L35b32e.  v6:= v6 + v8 @kind long;
  #L35b330.  v1:= v1 + v6 @kind long;
  #L35b332.  v6:= (`int`) v1 @kind l2i;
  #L35b334.  v12[v5]:= v6;
  #L35b338.  v1:= v1 ^>> v0 @kind long;
  #L35b33a.  v5:= 3I;
  #L35b33c.  v6:= v10[v5];
  #L35b340.  v6:= (`long`) v6 @kind i2l;
  #L35b342.  v6:= v6 ^& v3 @kind long;
  #L35b344.  v8:= v11[v5];
  #L35b348.  v8:= (`long`) v8 @kind i2l;
  #L35b34a.  v8:= v8 ^& v3 @kind long;
  #L35b34c.  v6:= v6 + v8 @kind long;
  #L35b34e.  v8:= v12[v5];
  #L35b352.  v8:= (`long`) v8 @kind i2l;
  #L35b354.  v8:= v8 ^& v3 @kind long;
  #L35b356.  v6:= v6 + v8 @kind long;
  #L35b358.  v1:= v1 + v6 @kind long;
  #L35b35a.  v6:= (`int`) v1 @kind l2i;
  #L35b35c.  v12[v5]:= v6;
  #L35b360.  v1:= v1 ^>> v0 @kind long;
  #L35b362.  v5:= 4I;
  #L35b364.  v6:= v10[v5];
  #L35b368.  v6:= (`long`) v6 @kind i2l;
  #L35b36a.  v6:= v6 ^& v3 @kind long;
  #L35b36c.  v8:= v11[v5];
  #L35b370.  v8:= (`long`) v8 @kind i2l;
  #L35b372.  v8:= v8 ^& v3 @kind long;
  #L35b374.  v6:= v6 + v8 @kind long;
  #L35b376.  v8:= v12[v5];
  #L35b37a.  v8:= (`long`) v8 @kind i2l;
  #L35b37c.  v8:= v8 ^& v3 @kind long;
  #L35b37e.  v6:= v6 + v8 @kind long;
  #L35b380.  v1:= v1 + v6 @kind long;
  #L35b382.  v6:= (`int`) v1 @kind l2i;
  #L35b384.  v12[v5]:= v6;
  #L35b388.  v1:= v1 ^>> v0 @kind long;
  #L35b38a.  v5:= 5I;
  #L35b38c.  v6:= v10[v5];
  #L35b390.  v6:= (`long`) v6 @kind i2l;
  #L35b392.  v6:= v6 ^& v3 @kind long;
  #L35b394.  v8:= v11[v5];
  #L35b398.  v8:= (`long`) v8 @kind i2l;
  #L35b39a.  v8:= v8 ^& v3 @kind long;
  #L35b39c.  v6:= v6 + v8 @kind long;
  #L35b39e.  v8:= v12[v5];
  #L35b3a2.  v8:= (`long`) v8 @kind i2l;
  #L35b3a4.  v8:= v8 ^& v3 @kind long;
  #L35b3a6.  v6:= v6 + v8 @kind long;
  #L35b3a8.  v1:= v1 + v6 @kind long;
  #L35b3aa.  v6:= (`int`) v1 @kind l2i;
  #L35b3ac.  v12[v5]:= v6;
  #L35b3b0.  v1:= v1 ^>> v0 @kind long;
  #L35b3b2.  v5:= 6I;
  #L35b3b4.  v10:= v10[v5];
  #L35b3b8.  v6:= (`long`) v10 @kind i2l;
  #L35b3ba.  v6:= v6 ^& v3 @kind long;
  #L35b3bc.  v10:= v11[v5];
  #L35b3c0.  v10:= (`long`) v10 @kind i2l;
  #L35b3c2.  v10:= v10 ^& v3 @kind long;
  #L35b3c4.  v6:= v6 + v10 @kind long;
  #L35b3c6.  v10:= v12[v5];
  #L35b3ca.  v10:= (`long`) v10 @kind i2l;
  #L35b3cc.  v10:= v10 ^& v3 @kind long;
  #L35b3ce.  v6:= v6 + v10 @kind long;
  #L35b3d0.  v1:= v1 + v6 @kind long;
  #L35b3d2.  v10:= (`int`) v1 @kind l2i;
  #L35b3d4.  v12[v5]:= v10;
  #L35b3d8.  v10:= v1 ^>> v0 @kind long;
  #L35b3dc.  v11:= (`int`) v10 @kind l2i;
  #L35b3de.  return v11;
}
procedure `void` `c`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/c/c;.c:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35bbb8.  v0:= 0I;
  #L35bbba.  v1:= v2[v0];
  #L35bbbe.  v3[v0]:= v1;
  #L35bbc2.  v0:= 1I;
  #L35bbc4.  v1:= v2[v0];
  #L35bbc8.  v3[v0]:= v1;
  #L35bbcc.  v0:= 2I;
  #L35bbce.  v1:= v2[v0];
  #L35bbd2.  v3[v0]:= v1;
  #L35bbd6.  v0:= 3I;
  #L35bbd8.  v1:= v2[v0];
  #L35bbdc.  v3[v0]:= v1;
  #L35bbe0.  v0:= 4I;
  #L35bbe2.  v1:= v2[v0];
  #L35bbe6.  v3[v0]:= v1;
  #L35bbea.  v0:= 5I;
  #L35bbec.  v1:= v2[v0];
  #L35bbf0.  v3[v0]:= v1;
  #L35bbf4.  v0:= 6I;
  #L35bbf6.  v2:= v2[v0];
  #L35bbfa.  v3[v0]:= v2;
  #L35bbfe.  return @kind void;
}
procedure `int`[] `d`() @signature `Ln/a/a/c/c;.d:()[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35b954.  v0:= 7I;
  #L35b956.  v0:= new `int`[v0];
  #L35b95a.  return v0 @kind object;
}
procedure `int`[] `e`() @signature `Ln/a/a/c/c;.e:()[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35b96c.  v0:= 14I;
  #L35b970.  v0:= new `int`[v0];
  #L35b974.  return v0 @kind object;
}
procedure `boolean` `f`(`int`[] v3 @kind object, `int`[] v4 @kind object) @signature `Ln/a/a/c/c;.f:([I[I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35b0dc.  v0:= 6I;
  #L35b0de.  if v0 < 0 then goto L35b0f8;
  #L35b0e2.  v1:= v3[v0];
  #L35b0e6.  v2:= v4[v0];
  #L35b0ea.  if v1 == v2 then goto L35b0f2;
  #L35b0ee.  v3:= 0I;
  #L35b0f0.  return v3;
  #L35b0f2.  v0:= v0 + -1;
  #L35b0f6.  goto L35b0de;
  #L35b0f8.  v3:= 1I;
  #L35b0fa.  return v3;
}
procedure `int`[] `g`(`java.math.BigInteger` v4 @kind object) @signature `Ln/a/a/c/c;.g:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35b988.  call temp:= `signum`(v4) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L35b98e.  v0:= temp;
  #L35b990.  if v0 < 0 then goto L35b9dc;
  #L35b994.  call temp:= `bitLength`(v4) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L35b99a.  v0:= temp;
  #L35b99c.  v1:= 224I;
  #L35b9a0.  if v0 > v1 then goto L35b9dc;
  #L35b9a4.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L35b9aa.  v0:= temp @kind object;
  #L35b9ac.  v1:= 0I;
  #L35b9ae.  call temp:= `signum`(v4) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L35b9b4.  v2:= temp;
  #L35b9b6.  if v2 == 0 then goto L35b9da;
  #L35b9ba.  v2:= v1 + 1;
  #L35b9be.  call temp:= `intValue`(v4) @signature `Ljava/math/BigInteger;.intValue:()I` @kind virtual;
  #L35b9c4.  v3:= temp;
  #L35b9c6.  v0[v1]:= v3;
  #L35b9ca.  v1:= 32I;
  #L35b9ce.  call temp:= `shiftRight`(v4, v1) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L35b9d4.  v4:= temp @kind object;
  #L35b9d6.  v1:= v2;
  #L35b9d8.  goto L35b9ae;
  #L35b9da.  return v0 @kind object;
  #L35b9dc.  v4:= new `java.lang.IllegalArgumentException`;
  #L35b9e0.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L35b9e6.  goto L35b9ea;
  #L35b9e8.  throw v4;
  #L35b9ea.  goto L35b9e8;
}
procedure `int` `h`(`int`[] v3 @kind object, `int` v4 ) @signature `Ln/a/a/c/c;.h:([II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35b3f0.  v0:= 0I;
  #L35b3f2.  if v4 != 0 then goto L35b400;
  #L35b3f6.  v3:= v3[v0];
  #L35b3fa.  v3:= v3 ^& 1;
  #L35b3fe.  return v3;
  #L35b400.  v1:= v4 ^> 5;
  #L35b404.  if v1 < 0 then goto L35b41c;
  #L35b408.  v2:= 7I;
  #L35b40a.  if v1 < v2 then goto L35b410;
  #L35b40e.  goto L35b41c;
  #L35b410.  v4:= v4 ^& 31;
  #L35b414.  v3:= v3[v1];
  #L35b418.  v3:= v3 ^>> v4 @kind int;
  #L35b41a.  goto L35b3fa;
  #L35b41c.  return v0;
}
procedure `boolean` `i`(`int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Ln/a/a/c/c;.i:([I[I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35b10c.  v0:= 6I;
  #L35b10e.  v1:= 1I;
  #L35b110.  if v0 < 0 then goto L35b138;
  #L35b114.  v2:= v5[v0];
  #L35b118.  v3:= -2147483648I;
  #L35b11c.  v2:= v2 ^~ v3 @kind int;
  #L35b11e.  v4:= v6[v0];
  #L35b122.  v3:= v3 ^~ v4 @kind int;
  #L35b124.  if v2 >= v3 then goto L35b12c;
  #L35b128.  v5:= 0I;
  #L35b12a.  return v5;
  #L35b12c.  if v2 <= v3 then goto L35b132;
  #L35b130.  return v1;
  #L35b132.  v0:= v0 + -1;
  #L35b136.  goto L35b10e;
  #L35b138.  return v1;
}
procedure `boolean` `j`(`int`[] v4 @kind object) @signature `Ln/a/a/c/c;.j:([I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35b14c.  v0:= 0I;
  #L35b14e.  v1:= v4[v0];
  #L35b152.  v2:= 1I;
  #L35b154.  if v1 == v2 then goto L35b15a;
  #L35b158.  return v0;
  #L35b15a.  v1:= 1I;
  #L35b15c.  v3:= 7I;
  #L35b15e.  if v1 >= v3 then goto L35b172;
  #L35b162.  v3:= v4[v1];
  #L35b166.  if v3 == 0 then goto L35b16c;
  #L35b16a.  return v0;
  #L35b16c.  v1:= v1 + 1;
  #L35b170.  goto L35b15c;
  #L35b172.  return v2;
}
procedure `boolean` `k`(`int`[] v3 @kind object) @signature `Ln/a/a/c/c;.k:([I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35b184.  v0:= 0I;
  #L35b186.  v1:= 0I;
  #L35b188.  v2:= 7I;
  #L35b18a.  if v1 >= v2 then goto L35b19e;
  #L35b18e.  v2:= v3[v1];
  #L35b192.  if v2 == 0 then goto L35b198;
  #L35b196.  return v0;
  #L35b198.  v1:= v1 + 1;
  #L35b19c.  goto L35b188;
  #L35b19e.  v3:= 1I;
  #L35b1a0.  return v3;
}
procedure `void` `l`(`int`[] v32 @kind object, `int`[] v33 @kind object, `int`[] v34 @kind object) @signature `Ln/a/a/c/c;.l:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;

  #L35bc10.  v0:= 0I;
  #L35bc12.  v1:= v33[v0];
  #L35bc16.  v1:= (`long`) v1 @kind i2l;
  #L35bc18.  v3:= 4294967295L;
  #L35bc22.  v1:= v1 ^& v3 @kind long;
  #L35bc24.  v5:= 1I;
  #L35bc26.  v6:= v33[v5];
  #L35bc2a.  v6:= (`long`) v6 @kind i2l;
  #L35bc2c.  v6:= v6 ^& v3 @kind long;
  #L35bc2e.  v8:= 2I;
  #L35bc30.  v9:= v33[v8];
  #L35bc34.  v9:= (`long`) v9 @kind i2l;
  #L35bc36.  v9:= v9 ^& v3 @kind long;
  #L35bc38.  v11:= 3I;
  #L35bc3a.  v12:= v33[v11];
  #L35bc3e.  v12:= (`long`) v12 @kind i2l;
  #L35bc40.  v12:= v12 ^& v3 @kind long;
  #L35bc42.  v14:= 4I;
  #L35bc44.  v15:= v33[v14];
  #L35bc48.  v14:= (`long`) v15 @kind i2l;
  #L35bc4a.  v14:= v14 ^& v3 @kind long;
  #L35bc4c.  v17:= 5I;
  #L35bc50.  v11:= v33[v17];
  #L35bc54.  v20:= v9 @kind wide;
  #L35bc58.  v8:= (`long`) v11 @kind i2l;
  #L35bc5a.  v8:= v8 ^& v3 @kind long;
  #L35bc5c.  v10:= 6I;
  #L35bc5e.  v11:= v33[v10];
  #L35bc62.  v10:= (`long`) v11 @kind i2l;
  #L35bc64.  v10:= v10 ^& v3 @kind long;
  #L35bc66.  v5:= v32[v0];
  #L35bc6a.  v24:= v10 @kind wide;
  #L35bc6e.  v10:= (`long`) v5 @kind i2l;
  #L35bc70.  v10:= v10 ^& v3 @kind long;
  #L35bc72.  v26:= v10 * v1 @kind long;
  #L35bc76.  v28:= 0L;
  #L35bc7a.  v3:= v26 + v28 @kind long;
  #L35bc7e.  v5:= (`int`) v3 @kind l2i;
  #L35bc80.  v34[v0]:= v5;
  #L35bc84.  v0:= 32I;
  #L35bc88.  v3:= v3 ^>> v0 @kind long;
  #L35bc8a.  v26:= v10 * v6 @kind long;
  #L35bc8e.  v3:= v3 + v26 @kind long;
  #L35bc92.  v5:= (`int`) v3 @kind l2i;
  #L35bc94.  v23:= 1I;
  #L35bc98.  v34[v23]:= v5;
  #L35bc9c.  v3:= v3 ^>> v0 @kind long;
  #L35bc9e.  v26:= v10 * v20 @kind long;
  #L35bca2.  v3:= v3 + v26 @kind long;
  #L35bca6.  v5:= (`int`) v3 @kind l2i;
  #L35bca8.  v19:= 2I;
  #L35bcac.  v34[v19]:= v5;
  #L35bcb0.  v3:= v3 ^>> v0 @kind long;
  #L35bcb2.  v26:= v10 * v12 @kind long;
  #L35bcb6.  v3:= v3 + v26 @kind long;
  #L35bcba.  v5:= (`int`) v3 @kind l2i;
  #L35bcbc.  v18:= 3I;
  #L35bcc0.  v34[v18]:= v5;
  #L35bcc4.  v3:= v3 ^>> v0 @kind long;
  #L35bcc6.  v18:= v10 * v14 @kind long;
  #L35bcca.  v3:= v3 + v18 @kind long;
  #L35bcce.  v5:= (`int`) v3 @kind l2i;
  #L35bcd0.  v16:= 4I;
  #L35bcd4.  v34[v16]:= v5;
  #L35bcd8.  v3:= v3 ^>> v0 @kind long;
  #L35bcda.  v18:= v10 * v8 @kind long;
  #L35bcde.  v3:= v3 + v18 @kind long;
  #L35bce2.  v5:= (`int`) v3 @kind l2i;
  #L35bce4.  v34[v17]:= v5;
  #L35bce8.  v3:= v3 ^>> v0 @kind long;
  #L35bcea.  v10:= v10 * v24 @kind long;
  #L35bcee.  v3:= v3 + v10 @kind long;
  #L35bcf0.  v5:= (`int`) v3 @kind l2i;
  #L35bcf2.  v10:= 6I;
  #L35bcf4.  v34[v10]:= v5;
  #L35bcf8.  v3:= v3 ^>> v0 @kind long;
  #L35bcfa.  v4:= (`int`) v3 @kind l2i;
  #L35bcfc.  v3:= 7I;
  #L35bcfe.  v34[v3]:= v4;
  #L35bd02.  v5:= 1I;
  #L35bd04.  if v5 >= v3 then goto L35be2a;
  #L35bd08.  v4:= v32[v5];
  #L35bd0c.  v10:= (`long`) v4 @kind i2l;
  #L35bd0e.  v16:= 4294967295L;
  #L35bd18.  v10:= v10 ^& v16 @kind long;
  #L35bd1c.  v18:= v10 * v1 @kind long;
  #L35bd20.  v4:= v5 + 0;
  #L35bd24.  v3:= v34[v4];
  #L35bd28.  v22:= v1 @kind wide;
  #L35bd2c.  v0:= (`long`) v3 @kind i2l;
  #L35bd2e.  v0:= v0 ^& v16 @kind long;
  #L35bd32.  v18:= v18 + v0 @kind long;
  #L35bd36.  v0:= v18 + v28 @kind long;
  #L35bd3a.  v3:= (`int`) v0 @kind l2i;
  #L35bd3c.  v34[v4]:= v3;
  #L35bd40.  v2:= 32I;
  #L35bd44.  v0:= v0 ^>> v2 @kind long;
  #L35bd46.  v3:= v10 * v6 @kind long;
  #L35bd4a.  v18:= v5 + 1;
  #L35bd4e.  v2:= v34[v18];
  #L35bd52.  v26:= v6 @kind wide;
  #L35bd56.  v6:= (`long`) v2 @kind i2l;
  #L35bd58.  v6:= v6 ^& v16 @kind long;
  #L35bd5c.  v3:= v3 + v6 @kind long;
  #L35bd5e.  v0:= v0 + v3 @kind long;
  #L35bd60.  v2:= (`int`) v0 @kind l2i;
  #L35bd62.  v34[v18]:= v2;
  #L35bd66.  v2:= 32I;
  #L35bd6a.  v0:= v0 ^>> v2 @kind long;
  #L35bd6c.  v3:= v10 * v20 @kind long;
  #L35bd70.  v6:= v5 + 2;
  #L35bd74.  v7:= v34[v6];
  #L35bd78.  v30:= v8 @kind wide;
  #L35bd7c.  v7:= (`long`) v7 @kind i2l;
  #L35bd7e.  v7:= v7 ^& v16 @kind long;
  #L35bd82.  v3:= v3 + v7 @kind long;
  #L35bd84.  v0:= v0 + v3 @kind long;
  #L35bd86.  v3:= (`int`) v0 @kind l2i;
  #L35bd88.  v34[v6]:= v3;
  #L35bd8c.  v0:= v0 ^>> v2 @kind long;
  #L35bd8e.  v3:= v10 * v12 @kind long;
  #L35bd92.  v6:= v5 + 3;
  #L35bd96.  v7:= v34[v6];
  #L35bd9a.  v7:= (`long`) v7 @kind i2l;
  #L35bd9c.  v7:= v7 ^& v16 @kind long;
  #L35bda0.  v3:= v3 + v7 @kind long;
  #L35bda2.  v0:= v0 + v3 @kind long;
  #L35bda4.  v3:= (`int`) v0 @kind l2i;
  #L35bda6.  v34[v6]:= v3;
  #L35bdaa.  v0:= v0 ^>> v2 @kind long;
  #L35bdac.  v3:= v10 * v14 @kind long;
  #L35bdb0.  v6:= v5 + 4;
  #L35bdb4.  v7:= v34[v6];
  #L35bdb8.  v7:= (`long`) v7 @kind i2l;
  #L35bdba.  v7:= v7 ^& v16 @kind long;
  #L35bdbe.  v3:= v3 + v7 @kind long;
  #L35bdc0.  v0:= v0 + v3 @kind long;
  #L35bdc2.  v3:= (`int`) v0 @kind l2i;
  #L35bdc4.  v34[v6]:= v3;
  #L35bdc8.  v0:= v0 ^>> v2 @kind long;
  #L35bdca.  v8:= v10 * v30 @kind long;
  #L35bdce.  v3:= v5 + 5;
  #L35bdd2.  v4:= v34[v3];
  #L35bdd6.  v6:= (`long`) v4 @kind i2l;
  #L35bdd8.  v6:= v6 ^& v16 @kind long;
  #L35bddc.  v8:= v8 + v6 @kind long;
  #L35bdde.  v0:= v0 + v8 @kind long;
  #L35bde0.  v4:= (`int`) v0 @kind l2i;
  #L35bde2.  v34[v3]:= v4;
  #L35bde6.  v0:= v0 ^>> v2 @kind long;
  #L35bde8.  v10:= v10 * v24 @kind long;
  #L35bdec.  v3:= v5 + 6;
  #L35bdf0.  v4:= v34[v3];
  #L35bdf4.  v6:= (`long`) v4 @kind i2l;
  #L35bdf6.  v6:= v6 ^& v16 @kind long;
  #L35bdfa.  v10:= v10 + v6 @kind long;
  #L35bdfc.  v0:= v0 + v10 @kind long;
  #L35bdfe.  v4:= (`int`) v0 @kind l2i;
  #L35be00.  v34[v3]:= v4;
  #L35be04.  v0:= v0 ^>> v2 @kind long;
  #L35be06.  v5:= v5 + 7;
  #L35be0a.  v1:= (`int`) v0 @kind l2i;
  #L35be0c.  v34[v5]:= v1;
  #L35be10.  v5:= v18;
  #L35be14.  v1:= v22 @kind wide;
  #L35be18.  v6:= v26 @kind wide;
  #L35be1c.  v8:= v30 @kind wide;
  #L35be20.  v0:= 32I;
  #L35be24.  v3:= 7I;
  #L35be26.  goto L35bd04;
  #L35be2a.  return @kind void;
}
procedure `long` `m`(`int` v13 , `int`[] v14 @kind object, `int` v15 , `int`[] v16 @kind object, `int` v17 , `int`[] v18 @kind object, `int` v19 ) @signature `Ln/a/a/c/c;.m:(I[II[II[II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L35ba48.  v0:= v13;
  #L35ba4a.  v0:= (`long`) v0 @kind i2l;
  #L35ba4c.  v2:= 4294967295L;
  #L35ba56.  v0:= v0 ^& v2 @kind long;
  #L35ba58.  v4:= v15 + 0;
  #L35ba5c.  v4:= v14[v4];
  #L35ba60.  v4:= (`long`) v4 @kind i2l;
  #L35ba62.  v4:= v4 ^& v2 @kind long;
  #L35ba64.  v6:= v0 * v4 @kind long;
  #L35ba68.  v8:= v17 + 0;
  #L35ba6c.  v8:= v16[v8];
  #L35ba70.  v8:= (`long`) v8 @kind i2l;
  #L35ba72.  v8:= v8 ^& v2 @kind long;
  #L35ba74.  v6:= v6 + v8 @kind long;
  #L35ba76.  v8:= 0L;
  #L35ba7a.  v6:= v6 + v8 @kind long;
  #L35ba7c.  v8:= v19 + 0;
  #L35ba80.  v9:= (`int`) v6 @kind l2i;
  #L35ba82.  v18[v8]:= v9;
  #L35ba86.  v8:= 32I;
  #L35ba8a.  v6:= v6 ^>> v8 @kind long;
  #L35ba8c.  v9:= v15 + 1;
  #L35ba90.  v9:= v14[v9];
  #L35ba94.  v9:= (`long`) v9 @kind i2l;
  #L35ba96.  v9:= v9 ^& v2 @kind long;
  #L35ba98.  v11:= v0 * v9 @kind long;
  #L35ba9c.  v11:= v11 + v4 @kind long;
  #L35ba9e.  v4:= v17 + 1;
  #L35baa2.  v4:= v16[v4];
  #L35baa6.  v4:= (`long`) v4 @kind i2l;
  #L35baa8.  v4:= v4 ^& v2 @kind long;
  #L35baaa.  v11:= v11 + v4 @kind long;
  #L35baac.  v6:= v6 + v11 @kind long;
  #L35baae.  v4:= v19 + 1;
  #L35bab2.  v5:= (`int`) v6 @kind l2i;
  #L35bab4.  v18[v4]:= v5;
  #L35bab8.  v4:= v6 ^>> v8 @kind long;
  #L35babc.  v6:= v15 + 2;
  #L35bac0.  v6:= v14[v6];
  #L35bac4.  v6:= (`long`) v6 @kind i2l;
  #L35bac6.  v6:= v6 ^& v2 @kind long;
  #L35bac8.  v11:= v0 * v6 @kind long;
  #L35bacc.  v11:= v11 + v9 @kind long;
  #L35bace.  v9:= v17 + 2;
  #L35bad2.  v9:= v16[v9];
  #L35bad6.  v9:= (`long`) v9 @kind i2l;
  #L35bad8.  v9:= v9 ^& v2 @kind long;
  #L35bada.  v11:= v11 + v9 @kind long;
  #L35badc.  v4:= v4 + v11 @kind long;
  #L35bade.  v9:= v19 + 2;
  #L35bae2.  v10:= (`int`) v4 @kind l2i;
  #L35bae4.  v18[v9]:= v10;
  #L35bae8.  v4:= v4 ^>> v8 @kind long;
  #L35baea.  v9:= v15 + 3;
  #L35baee.  v9:= v14[v9];
  #L35baf2.  v9:= (`long`) v9 @kind i2l;
  #L35baf4.  v9:= v9 ^& v2 @kind long;
  #L35baf6.  v11:= v0 * v9 @kind long;
  #L35bafa.  v11:= v11 + v6 @kind long;
  #L35bafc.  v6:= v17 + 3;
  #L35bb00.  v6:= v16[v6];
  #L35bb04.  v6:= (`long`) v6 @kind i2l;
  #L35bb06.  v6:= v6 ^& v2 @kind long;
  #L35bb08.  v11:= v11 + v6 @kind long;
  #L35bb0a.  v4:= v4 + v11 @kind long;
  #L35bb0c.  v6:= v19 + 3;
  #L35bb10.  v7:= (`int`) v4 @kind l2i;
  #L35bb12.  v18[v6]:= v7;
  #L35bb16.  v4:= v4 ^>> v8 @kind long;
  #L35bb18.  v6:= v15 + 4;
  #L35bb1c.  v6:= v14[v6];
  #L35bb20.  v6:= (`long`) v6 @kind i2l;
  #L35bb22.  v6:= v6 ^& v2 @kind long;
  #L35bb24.  v11:= v0 * v6 @kind long;
  #L35bb28.  v11:= v11 + v9 @kind long;
  #L35bb2a.  v9:= v17 + 4;
  #L35bb2e.  v9:= v16[v9];
  #L35bb32.  v9:= (`long`) v9 @kind i2l;
  #L35bb34.  v9:= v9 ^& v2 @kind long;
  #L35bb36.  v11:= v11 + v9 @kind long;
  #L35bb38.  v4:= v4 + v11 @kind long;
  #L35bb3a.  v9:= v19 + 4;
  #L35bb3e.  v10:= (`int`) v4 @kind l2i;
  #L35bb40.  v18[v9]:= v10;
  #L35bb44.  v4:= v4 ^>> v8 @kind long;
  #L35bb46.  v9:= v15 + 5;
  #L35bb4a.  v9:= v14[v9];
  #L35bb4e.  v9:= (`long`) v9 @kind i2l;
  #L35bb50.  v9:= v9 ^& v2 @kind long;
  #L35bb52.  v11:= v0 * v9 @kind long;
  #L35bb56.  v11:= v11 + v6 @kind long;
  #L35bb58.  v6:= v17 + 5;
  #L35bb5c.  v6:= v16[v6];
  #L35bb60.  v6:= (`long`) v6 @kind i2l;
  #L35bb62.  v6:= v6 ^& v2 @kind long;
  #L35bb64.  v11:= v11 + v6 @kind long;
  #L35bb66.  v4:= v4 + v11 @kind long;
  #L35bb68.  v6:= v19 + 5;
  #L35bb6c.  v7:= (`int`) v4 @kind l2i;
  #L35bb6e.  v18[v6]:= v7;
  #L35bb72.  v4:= v4 ^>> v8 @kind long;
  #L35bb74.  v6:= v15 + 6;
  #L35bb78.  v6:= v14[v6];
  #L35bb7c.  v6:= (`long`) v6 @kind i2l;
  #L35bb7e.  v6:= v6 ^& v2 @kind long;
  #L35bb80.  v0:= v0 * v6 @kind long;
  #L35bb84.  v0:= v0 + v9 @kind long;
  #L35bb86.  v9:= v17 + 6;
  #L35bb8a.  v9:= v16[v9];
  #L35bb8e.  v9:= (`long`) v9 @kind i2l;
  #L35bb90.  v2:= v2 ^& v9 @kind long;
  #L35bb92.  v0:= v0 + v2 @kind long;
  #L35bb94.  v4:= v4 + v0 @kind long;
  #L35bb96.  v0:= v19 + 6;
  #L35bb9a.  v1:= (`int`) v4 @kind l2i;
  #L35bb9c.  v18[v0]:= v1;
  #L35bba0.  v0:= v4 ^>> v8 @kind long;
  #L35bba4.  v0:= v0 + v6 @kind long;
  #L35bba6.  return v0 @kind wide;
}
procedure `int` `n`(`int` v15 , `long` v16 , `int`[] v18 @kind object, `int` v19 ) @signature `Ln/a/a/c/c;.n:(IJ[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L35b430.  v0:= v18 @kind object;
  #L35b434.  v1:= v15;
  #L35b436.  v2:= v19;
  #L35b43a.  v3:= (`long`) v1 @kind i2l;
  #L35b43c.  v5:= 4294967295L;
  #L35b446.  v3:= v3 ^& v5 @kind long;
  #L35b448.  v7:= v16 ^& v5 @kind long;
  #L35b44c.  v9:= v3 * v7 @kind long;
  #L35b450.  v1:= v2 + 0;
  #L35b454.  v11:= v0[v1];
  #L35b458.  v11:= (`long`) v11 @kind i2l;
  #L35b45a.  v11:= v11 ^& v5 @kind long;
  #L35b45c.  v9:= v9 + v11 @kind long;
  #L35b45e.  v11:= 0L;
  #L35b462.  v9:= v9 + v11 @kind long;
  #L35b464.  v13:= (`int`) v9 @kind l2i;
  #L35b466.  v0[v1]:= v13;
  #L35b46a.  v1:= 32I;
  #L35b46e.  v9:= v9 ^>> v1 @kind long;
  #L35b470.  v13:= v16 ^>> v1 @kind long;
  #L35b474.  v3:= v3 * v13 @kind long;
  #L35b478.  v3:= v3 + v7 @kind long;
  #L35b47a.  v7:= v2 + 1;
  #L35b47e.  v8:= v0[v7];
  #L35b482.  v11:= (`long`) v8 @kind i2l;
  #L35b484.  v11:= v11 ^& v5 @kind long;
  #L35b486.  v3:= v3 + v11 @kind long;
  #L35b488.  v9:= v9 + v3 @kind long;
  #L35b48a.  v3:= (`int`) v9 @kind l2i;
  #L35b48c.  v0[v7]:= v3;
  #L35b490.  v3:= v9 ^>> v1 @kind long;
  #L35b494.  v7:= v2 + 2;
  #L35b498.  v8:= v0[v7];
  #L35b49c.  v8:= (`long`) v8 @kind i2l;
  #L35b49e.  v8:= v8 ^& v5 @kind long;
  #L35b4a0.  v13:= v13 + v8 @kind long;
  #L35b4a2.  v3:= v3 + v13 @kind long;
  #L35b4a4.  v8:= (`int`) v3 @kind l2i;
  #L35b4a6.  v0[v7]:= v8;
  #L35b4aa.  v3:= v3 ^>> v1 @kind long;
  #L35b4ac.  v7:= v2 + 3;
  #L35b4b0.  v8:= v0[v7];
  #L35b4b4.  v8:= (`long`) v8 @kind i2l;
  #L35b4b6.  v5:= v5 ^& v8 @kind long;
  #L35b4b8.  v3:= v3 + v5 @kind long;
  #L35b4ba.  v5:= (`int`) v3 @kind l2i;
  #L35b4bc.  v0[v7]:= v5;
  #L35b4c0.  v3:= v3 ^>> v1 @kind long;
  #L35b4c2.  v5:= 0L;
  #L35b4c6.  v1:= lcmp(v3, v5);
  #L35b4ca.  if v1 != 0 then goto L35b4d2;
  #L35b4ce.  v0:= 0I;
  #L35b4d0.  goto L35b4de;
  #L35b4d2.  v1:= 7I;
  #L35b4d4.  v3:= 4I;
  #L35b4d6.  call temp:= `s`(v1, v0, v2, v3) @signature `Ln/a/a/c/g;.s:(I[III)I` @kind static;
  #L35b4dc.  v0:= temp;
  #L35b4de.  return v0;
}
procedure `int` `o`(`int` v10 , `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Ln/a/a/c/c;.o:(II[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35b4f0.  v0:= (`long`) v10 @kind i2l;
  #L35b4f2.  v2:= 4294967295L;
  #L35b4fc.  v0:= v0 ^& v2 @kind long;
  #L35b4fe.  v10:= (`long`) v11 @kind i2l;
  #L35b500.  v10:= v10 ^& v2 @kind long;
  #L35b502.  v0:= v0 * v10 @kind long;
  #L35b506.  v4:= v13 + 0;
  #L35b50a.  v5:= v12[v4];
  #L35b50e.  v5:= (`long`) v5 @kind i2l;
  #L35b510.  v5:= v5 ^& v2 @kind long;
  #L35b512.  v0:= v0 + v5 @kind long;
  #L35b514.  v5:= 0L;
  #L35b518.  v0:= v0 + v5 @kind long;
  #L35b51a.  v7:= (`int`) v0 @kind l2i;
  #L35b51c.  v12[v4]:= v7;
  #L35b520.  v4:= 32I;
  #L35b524.  v0:= v0 ^>> v4 @kind long;
  #L35b526.  v7:= v13 + 1;
  #L35b52a.  v8:= v12[v7];
  #L35b52e.  v8:= (`long`) v8 @kind i2l;
  #L35b530.  v8:= v8 ^& v2 @kind long;
  #L35b532.  v10:= v10 + v8 @kind long;
  #L35b534.  v0:= v0 + v10 @kind long;
  #L35b536.  v10:= (`int`) v0 @kind l2i;
  #L35b538.  v12[v7]:= v10;
  #L35b53c.  v10:= v0 ^>> v4 @kind long;
  #L35b540.  v0:= v13 + 2;
  #L35b544.  v1:= v12[v0];
  #L35b548.  v7:= (`long`) v1 @kind i2l;
  #L35b54a.  v2:= v2 ^& v7 @kind long;
  #L35b54c.  v10:= v10 + v2 @kind long;
  #L35b54e.  v1:= (`int`) v10 @kind l2i;
  #L35b550.  v12[v0]:= v1;
  #L35b554.  v10:= v10 ^>> v4 @kind long;
  #L35b556.  v0:= lcmp(v10, v5);
  #L35b55a.  if v0 != 0 then goto L35b562;
  #L35b55e.  v10:= 0I;
  #L35b560.  goto L35b56e;
  #L35b562.  v10:= 7I;
  #L35b564.  v11:= 3I;
  #L35b566.  call temp:= `s`(v10, v12, v13, v11) @signature `Ln/a/a/c/g;.s:(I[III)I` @kind static;
  #L35b56c.  v10:= temp;
  #L35b56e.  return v10;
}
procedure `int` `p`(`int`[] v32 @kind object, `int`[] v33 @kind object, `int`[] v34 @kind object) @signature `Ln/a/a/c/c;.p:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;

  #L35b580.  v0:= 0I;
  #L35b582.  v1:= v33[v0];
  #L35b586.  v1:= (`long`) v1 @kind i2l;
  #L35b588.  v3:= 4294967295L;
  #L35b592.  v1:= v1 ^& v3 @kind long;
  #L35b594.  v5:= 1I;
  #L35b596.  v5:= v33[v5];
  #L35b59a.  v5:= (`long`) v5 @kind i2l;
  #L35b59c.  v5:= v5 ^& v3 @kind long;
  #L35b59e.  v7:= 2I;
  #L35b5a0.  v7:= v33[v7];
  #L35b5a4.  v7:= (`long`) v7 @kind i2l;
  #L35b5a6.  v7:= v7 ^& v3 @kind long;
  #L35b5a8.  v9:= 3I;
  #L35b5aa.  v9:= v33[v9];
  #L35b5ae.  v9:= (`long`) v9 @kind i2l;
  #L35b5b0.  v9:= v9 ^& v3 @kind long;
  #L35b5b2.  v11:= 4I;
  #L35b5b4.  v11:= v33[v11];
  #L35b5b8.  v11:= (`long`) v11 @kind i2l;
  #L35b5ba.  v11:= v11 ^& v3 @kind long;
  #L35b5bc.  v13:= 5I;
  #L35b5be.  v13:= v33[v13];
  #L35b5c2.  v13:= (`long`) v13 @kind i2l;
  #L35b5c4.  v13:= v13 ^& v3 @kind long;
  #L35b5c6.  v15:= 6I;
  #L35b5c8.  v15:= v33[v15];
  #L35b5cc.  v17:= v1 @kind wide;
  #L35b5d0.  v0:= (`long`) v15 @kind i2l;
  #L35b5d2.  v0:= v0 ^& v3 @kind long;
  #L35b5d4.  v19:= 0L;
  #L35b5d8.  v21:= v19 @kind wide;
  #L35b5dc.  v2:= 0I;
  #L35b5de.  v15:= 7I;
  #L35b5e0.  if v2 >= v15 then goto L35b744;
  #L35b5e4.  v15:= v32[v2];
  #L35b5e8.  v23:= v0 @kind wide;
  #L35b5ec.  v0:= (`long`) v15 @kind i2l;
  #L35b5ee.  v0:= v0 ^& v3 @kind long;
  #L35b5f0.  v15:= v0 * v17 @kind long;
  #L35b5f4.  v25:= v2 + 0;
  #L35b5f8.  v26:= v13 @kind wide;
  #L35b5fc.  v13:= v34[v25];
  #L35b600.  v13:= (`long`) v13 @kind i2l;
  #L35b602.  v13:= v13 ^& v3 @kind long;
  #L35b604.  v15:= v15 + v13 @kind long;
  #L35b606.  v13:= v15 + v19 @kind long;
  #L35b60a.  v15:= (`int`) v13 @kind l2i;
  #L35b60c.  v34[v25]:= v15;
  #L35b610.  v15:= 32I;
  #L35b614.  v13:= v13 ^>> v15 @kind long;
  #L35b616.  v28:= v0 * v5 @kind long;
  #L35b61a.  v16:= v2 + 1;
  #L35b61e.  v15:= v34[v16];
  #L35b622.  v30:= v5 @kind wide;
  #L35b626.  v5:= (`long`) v15 @kind i2l;
  #L35b628.  v5:= v5 ^& v3 @kind long;
  #L35b62a.  v28:= v28 + v5 @kind long;
  #L35b62e.  v13:= v13 + v28 @kind long;
  #L35b632.  v5:= (`int`) v13 @kind l2i;
  #L35b634.  v34[v16]:= v5;
  #L35b638.  v5:= 32I;
  #L35b63c.  v13:= v13 ^>> v5 @kind long;
  #L35b63e.  v28:= v0 * v7 @kind long;
  #L35b642.  v6:= v2 + 2;
  #L35b646.  v15:= v34[v6];
  #L35b64a.  v25:= v6;
  #L35b64e.  v5:= (`long`) v15 @kind i2l;
  #L35b650.  v5:= v5 ^& v3 @kind long;
  #L35b652.  v28:= v28 + v5 @kind long;
  #L35b656.  v13:= v13 + v28 @kind long;
  #L35b65a.  v5:= (`int`) v13 @kind l2i;
  #L35b65c.  v34[v25]:= v5;
  #L35b660.  v5:= 32I;
  #L35b664.  v13:= v13 ^>> v5 @kind long;
  #L35b666.  v28:= v0 * v9 @kind long;
  #L35b66a.  v6:= v2 + 3;
  #L35b66e.  v15:= v34[v6];
  #L35b672.  v25:= v6;
  #L35b676.  v5:= (`long`) v15 @kind i2l;
  #L35b678.  v5:= v5 ^& v3 @kind long;
  #L35b67a.  v28:= v28 + v5 @kind long;
  #L35b67e.  v13:= v13 + v28 @kind long;
  #L35b682.  v5:= (`int`) v13 @kind l2i;
  #L35b684.  v34[v25]:= v5;
  #L35b688.  v5:= 32I;
  #L35b68c.  v13:= v13 ^>> v5 @kind long;
  #L35b68e.  v28:= v0 * v11 @kind long;
  #L35b692.  v6:= v2 + 4;
  #L35b696.  v15:= v34[v6];
  #L35b69a.  v25:= v6;
  #L35b69e.  v5:= (`long`) v15 @kind i2l;
  #L35b6a0.  v5:= v5 ^& v3 @kind long;
  #L35b6a2.  v28:= v28 + v5 @kind long;
  #L35b6a6.  v13:= v13 + v28 @kind long;
  #L35b6aa.  v5:= (`int`) v13 @kind l2i;
  #L35b6ac.  v34[v25]:= v5;
  #L35b6b0.  v5:= 32I;
  #L35b6b4.  v13:= v13 ^>> v5 @kind long;
  #L35b6b6.  v28:= v0 * v26 @kind long;
  #L35b6ba.  v6:= v2 + 5;
  #L35b6be.  v15:= v34[v6];
  #L35b6c2.  v25:= v6;
  #L35b6c6.  v5:= (`long`) v15 @kind i2l;
  #L35b6c8.  v5:= v5 ^& v3 @kind long;
  #L35b6ca.  v28:= v28 + v5 @kind long;
  #L35b6ce.  v13:= v13 + v28 @kind long;
  #L35b6d2.  v5:= (`int`) v13 @kind l2i;
  #L35b6d4.  v34[v25]:= v5;
  #L35b6d8.  v5:= 32I;
  #L35b6dc.  v13:= v13 ^>> v5 @kind long;
  #L35b6de.  v0:= v0 * v23 @kind long;
  #L35b6e2.  v6:= v2 + 6;
  #L35b6e6.  v15:= v34[v6];
  #L35b6ea.  v25:= v6;
  #L35b6ee.  v5:= (`long`) v15 @kind i2l;
  #L35b6f0.  v5:= v5 ^& v3 @kind long;
  #L35b6f2.  v0:= v0 + v5 @kind long;
  #L35b6f4.  v13:= v13 + v0 @kind long;
  #L35b6f6.  v0:= (`int`) v13 @kind l2i;
  #L35b6f8.  v34[v25]:= v0;
  #L35b6fc.  v0:= 32I;
  #L35b700.  v5:= v13 ^>> v0 @kind long;
  #L35b704.  v2:= v2 + 7;
  #L35b708.  v1:= v34[v2];
  #L35b70c.  v13:= (`long`) v1 @kind i2l;
  #L35b70e.  v13:= v13 ^& v3 @kind long;
  #L35b710.  v3:= v21 @kind wide;
  #L35b714.  v21:= v3 + v13 @kind long;
  #L35b718.  v5:= v5 + v21 @kind long;
  #L35b71c.  v1:= (`int`) v5 @kind l2i;
  #L35b71e.  v34[v2]:= v1;
  #L35b722.  v21:= v5 ^>> v0 @kind long;
  #L35b726.  v2:= v16;
  #L35b72a.  v0:= v23 @kind wide;
  #L35b72e.  v13:= v26 @kind wide;
  #L35b732.  v5:= v30 @kind wide;
  #L35b736.  v3:= 4294967295L;
  #L35b740.  goto L35b5de;
  #L35b744.  v3:= v21 @kind wide;
  #L35b748.  v0:= (`int`) v3 @kind l2i;
  #L35b74a.  return v0;
}
procedure `void` `q`(`int`[] v41 @kind object, `int`[] v42 @kind object) @signature `Ln/a/a/c/c;.q:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;
    v37;
    v38;
    v39;
    v40;

  #L35be3c.  v0:= 0I;
  #L35be3e.  v1:= v41[v0];
  #L35be42.  v1:= (`long`) v1 @kind i2l;
  #L35be44.  v3:= 4294967295L;
  #L35be4e.  v1:= v1 ^& v3 @kind long;
  #L35be50.  v6:= 14I;
  #L35be54.  v7:= 6I;
  #L35be56.  v8:= 0I;
  #L35be58.  v9:= v7 + -1;
  #L35be5c.  v7:= v41[v7];
  #L35be60.  v10:= (`long`) v7 @kind i2l;
  #L35be62.  v10:= v10 ^& v3 @kind long;
  #L35be64.  v10:= v10 * v10 @kind long;
  #L35be68.  v6:= v6 + -1;
  #L35be6c.  v7:= v8 ^< 31;
  #L35be70.  v8:= 33I;
  #L35be74.  v12:= v10 ^>> v8 @kind long;
  #L35be78.  v13:= (`int`) v12 @kind l2i;
  #L35be7a.  v7:= v7 ^| v13 @kind int;
  #L35be7c.  v42[v6]:= v7;
  #L35be80.  v6:= v6 + -1;
  #L35be84.  v7:= 1I;
  #L35be86.  v12:= v10 ^>> v7 @kind long;
  #L35be8a.  v13:= (`int`) v12 @kind l2i;
  #L35be8c.  v42[v6]:= v13;
  #L35be90.  v11:= (`int`) v10 @kind l2i;
  #L35be92.  if v9 > 0 then goto L35c1d8;
  #L35be96.  v9:= v1 * v1 @kind long;
  #L35be9a.  v6:= v11 ^< 31;
  #L35be9e.  v11:= (`long`) v6 @kind i2l;
  #L35bea0.  v11:= v11 ^& v3 @kind long;
  #L35bea2.  v13:= v9 ^>> v8 @kind long;
  #L35bea6.  v11:= v11 ^| v13 @kind long;
  #L35bea8.  v6:= (`int`) v9 @kind l2i;
  #L35beaa.  v42[v0]:= v6;
  #L35beae.  v0:= 32I;
  #L35beb2.  v8:= v9 ^>> v0 @kind long;
  #L35beb6.  v6:= (`int`) v8 @kind l2i;
  #L35beb8.  v6:= v6 ^& v7 @kind int;
  #L35beba.  v8:= v41[v7];
  #L35bebe.  v8:= (`long`) v8 @kind i2l;
  #L35bec0.  v8:= v8 ^& v3 @kind long;
  #L35bec2.  v10:= 2I;
  #L35bec4.  v13:= v42[v10];
  #L35bec8.  v13:= (`long`) v13 @kind i2l;
  #L35beca.  v13:= v13 ^& v3 @kind long;
  #L35becc.  v15:= v8 * v1 @kind long;
  #L35bed0.  v11:= v11 + v15 @kind long;
  #L35bed2.  v15:= (`int`) v11 @kind l2i;
  #L35bed4.  v16:= v15 ^< 1;
  #L35bed8.  v6:= v16 ^| v6 @kind int;
  #L35bedc.  v42[v7]:= v6;
  #L35bee0.  v6:= v15 ^>> 31;
  #L35bee4.  v11:= v11 ^>> v0 @kind long;
  #L35bee6.  v13:= v13 + v11 @kind long;
  #L35bee8.  v11:= v41[v10];
  #L35beec.  v11:= (`long`) v11 @kind i2l;
  #L35beee.  v11:= v11 ^& v3 @kind long;
  #L35bef0.  v15:= 3I;
  #L35bef2.  v7:= v42[v15];
  #L35bef6.  v18:= v6;
  #L35befa.  v5:= (`long`) v7 @kind i2l;
  #L35befc.  v5:= v5 ^& v3 @kind long;
  #L35befe.  v7:= 4I;
  #L35bf00.  v15:= v42[v7];
  #L35bf04.  v20:= v8 @kind wide;
  #L35bf08.  v7:= (`long`) v15 @kind i2l;
  #L35bf0a.  v7:= v7 ^& v3 @kind long;
  #L35bf0c.  v22:= v11 * v1 @kind long;
  #L35bf10.  v13:= v13 + v22 @kind long;
  #L35bf14.  v15:= (`int`) v13 @kind l2i;
  #L35bf16.  v22:= v15 ^< 1;
  #L35bf1a.  v18:= v22 ^| v18 @kind int;
  #L35bf1e.  v42[v10]:= v18;
  #L35bf22.  v10:= v15 ^>> 31;
  #L35bf26.  v13:= v13 ^>> v0 @kind long;
  #L35bf28.  v22:= v11 * v20 @kind long;
  #L35bf2c.  v13:= v13 + v22 @kind long;
  #L35bf30.  v5:= v5 + v13 @kind long;
  #L35bf32.  v13:= v5 ^>> v0 @kind long;
  #L35bf36.  v7:= v7 + v13 @kind long;
  #L35bf38.  v5:= v5 ^& v3 @kind long;
  #L35bf3a.  v13:= 3I;
  #L35bf3c.  v14:= v41[v13];
  #L35bf40.  v13:= (`long`) v14 @kind i2l;
  #L35bf42.  v13:= v13 ^& v3 @kind long;
  #L35bf44.  v15:= 5I;
  #L35bf46.  v9:= v42[v15];
  #L35bf4a.  v22:= v1 @kind wide;
  #L35bf4e.  v0:= (`long`) v9 @kind i2l;
  #L35bf50.  v0:= v0 ^& v3 @kind long;
  #L35bf52.  v9:= 6I;
  #L35bf54.  v2:= v42[v9];
  #L35bf58.  v25:= v0 @kind wide;
  #L35bf5c.  v0:= (`long`) v2 @kind i2l;
  #L35bf5e.  v0:= v0 ^& v3 @kind long;
  #L35bf60.  v27:= v13 * v22 @kind long;
  #L35bf64.  v5:= v5 + v27 @kind long;
  #L35bf68.  v2:= (`int`) v5 @kind l2i;
  #L35bf6a.  v9:= v2 ^< 1;
  #L35bf6e.  v9:= v9 ^| v10 @kind int;
  #L35bf70.  v10:= 3I;
  #L35bf72.  v42[v10]:= v9;
  #L35bf76.  v10:= v2 ^>> 31;
  #L35bf7a.  v2:= 32I;
  #L35bf7e.  v5:= v5 ^>> v2 @kind long;
  #L35bf80.  v27:= v13 * v20 @kind long;
  #L35bf84.  v5:= v5 + v27 @kind long;
  #L35bf88.  v7:= v7 + v5 @kind long;
  #L35bf8a.  v5:= v7 ^>> v2 @kind long;
  #L35bf8e.  v27:= v13 * v11 @kind long;
  #L35bf92.  v5:= v5 + v27 @kind long;
  #L35bf96.  v5:= v25 + v5 @kind long;
  #L35bf9a.  v7:= v7 ^& v3 @kind long;
  #L35bf9c.  v24:= v5 ^>> v2 @kind long;
  #L35bfa0.  v0:= v0 + v24 @kind long;
  #L35bfa4.  v5:= v5 ^& v3 @kind long;
  #L35bfa6.  v9:= 4I;
  #L35bfa8.  v2:= v41[v9];
  #L35bfac.  v18:= v10;
  #L35bfb0.  v9:= (`long`) v2 @kind i2l;
  #L35bfb2.  v9:= v9 ^& v3 @kind long;
  #L35bfb4.  v25:= 7I;
  #L35bfb8.  v2:= v42[v25];
  #L35bfbc.  v26:= v13 @kind wide;
  #L35bfc0.  v13:= (`long`) v2 @kind i2l;
  #L35bfc2.  v13:= v13 ^& v3 @kind long;
  #L35bfc4.  v28:= 8I;
  #L35bfc8.  v2:= v42[v28];
  #L35bfcc.  v29:= v13 @kind wide;
  #L35bfd0.  v13:= (`long`) v2 @kind i2l;
  #L35bfd2.  v13:= v13 ^& v3 @kind long;
  #L35bfd4.  v31:= v9 * v22 @kind long;
  #L35bfd8.  v7:= v7 + v31 @kind long;
  #L35bfdc.  v2:= (`int`) v7 @kind l2i;
  #L35bfde.  v31:= v2 ^< 1;
  #L35bfe2.  v18:= v31 ^| v18 @kind int;
  #L35bfe6.  v19:= 4I;
  #L35bfea.  v42[v19]:= v18;
  #L35bfee.  v18:= v2 ^>> 31;
  #L35bff2.  v2:= 32I;
  #L35bff6.  v7:= v7 ^>> v2 @kind long;
  #L35bff8.  v31:= v9 * v20 @kind long;
  #L35bffc.  v7:= v7 + v31 @kind long;
  #L35c000.  v5:= v5 + v7 @kind long;
  #L35c002.  v7:= v5 ^>> v2 @kind long;
  #L35c006.  v31:= v9 * v11 @kind long;
  #L35c00a.  v7:= v7 + v31 @kind long;
  #L35c00e.  v0:= v0 + v7 @kind long;
  #L35c010.  v5:= v5 ^& v3 @kind long;
  #L35c012.  v7:= v0 ^>> v2 @kind long;
  #L35c016.  v31:= v9 * v26 @kind long;
  #L35c01a.  v7:= v7 + v31 @kind long;
  #L35c01e.  v7:= v29 + v7 @kind long;
  #L35c022.  v0:= v0 ^& v3 @kind long;
  #L35c024.  v29:= v7 ^>> v2 @kind long;
  #L35c028.  v13:= v13 + v29 @kind long;
  #L35c02c.  v7:= v7 ^& v3 @kind long;
  #L35c02e.  v2:= v41[v15];
  #L35c032.  v29:= v9 @kind wide;
  #L35c036.  v9:= (`long`) v2 @kind i2l;
  #L35c038.  v9:= v9 ^& v3 @kind long;
  #L35c03a.  v19:= 9I;
  #L35c03e.  v2:= v42[v19];
  #L35c042.  v31:= v13 @kind wide;
  #L35c046.  v13:= (`long`) v2 @kind i2l;
  #L35c048.  v13:= v13 ^& v3 @kind long;
  #L35c04a.  v33:= 10I;
  #L35c04e.  v2:= v42[v33];
  #L35c052.  v34:= v13 @kind wide;
  #L35c056.  v13:= (`long`) v2 @kind i2l;
  #L35c058.  v13:= v13 ^& v3 @kind long;
  #L35c05a.  v36:= v9 * v22 @kind long;
  #L35c05e.  v5:= v5 + v36 @kind long;
  #L35c062.  v2:= (`int`) v5 @kind l2i;
  #L35c064.  v36:= v2 ^< 1;
  #L35c068.  v18:= v36 ^| v18 @kind int;
  #L35c06c.  v42[v15]:= v18;
  #L35c070.  v15:= v2 ^>> 31;
  #L35c074.  v2:= 32I;
  #L35c078.  v5:= v5 ^>> v2 @kind long;
  #L35c07a.  v36:= v9 * v20 @kind long;
  #L35c07e.  v5:= v5 + v36 @kind long;
  #L35c082.  v0:= v0 + v5 @kind long;
  #L35c084.  v5:= v0 ^>> v2 @kind long;
  #L35c088.  v36:= v9 * v11 @kind long;
  #L35c08c.  v5:= v5 + v36 @kind long;
  #L35c090.  v7:= v7 + v5 @kind long;
  #L35c092.  v0:= v0 ^& v3 @kind long;
  #L35c094.  v5:= v7 ^>> v2 @kind long;
  #L35c098.  v36:= v9 * v26 @kind long;
  #L35c09c.  v5:= v5 + v36 @kind long;
  #L35c0a0.  v5:= v31 + v5 @kind long;
  #L35c0a4.  v7:= v7 ^& v3 @kind long;
  #L35c0a6.  v31:= v5 ^>> v2 @kind long;
  #L35c0aa.  v36:= v9 * v29 @kind long;
  #L35c0ae.  v31:= v31 + v36 @kind long;
  #L35c0b2.  v31:= v34 + v31 @kind long;
  #L35c0b6.  v5:= v5 ^& v3 @kind long;
  #L35c0b8.  v34:= v31 ^>> v2 @kind long;
  #L35c0bc.  v13:= v13 + v34 @kind long;
  #L35c0c0.  v31:= v31 ^& v3 @kind long;
  #L35c0c4.  v17:= 6I;
  #L35c0c8.  v2:= v41[v17];
  #L35c0cc.  v34:= v9 @kind wide;
  #L35c0d0.  v9:= (`long`) v2 @kind i2l;
  #L35c0d2.  v9:= v9 ^& v3 @kind long;
  #L35c0d4.  v18:= 11I;
  #L35c0d8.  v2:= v42[v18];
  #L35c0dc.  v36:= v13 @kind wide;
  #L35c0e0.  v13:= (`long`) v2 @kind i2l;
  #L35c0e2.  v13:= v13 ^& v3 @kind long;
  #L35c0e4.  v38:= 12I;
  #L35c0e8.  v2:= v42[v38];
  #L35c0ec.  v39:= v13 @kind wide;
  #L35c0f0.  v13:= (`long`) v2 @kind i2l;
  #L35c0f2.  v3:= v3 ^& v13 @kind long;
  #L35c0f4.  v13:= v9 * v22 @kind long;
  #L35c0f8.  v0:= v0 + v13 @kind long;
  #L35c0fa.  v2:= (`int`) v0 @kind l2i;
  #L35c0fc.  v13:= v2 ^< 1;
  #L35c100.  v13:= v13 ^| v15 @kind int;
  #L35c102.  v14:= 6I;
  #L35c104.  v42[v14]:= v13;
  #L35c108.  v13:= v2 ^>> 31;
  #L35c10c.  v2:= 32I;
  #L35c110.  v0:= v0 ^>> v2 @kind long;
  #L35c112.  v14:= v9 * v20 @kind long;
  #L35c116.  v0:= v0 + v14 @kind long;
  #L35c118.  v7:= v7 + v0 @kind long;
  #L35c11a.  v0:= v7 ^>> v2 @kind long;
  #L35c11e.  v11:= v11 * v9 @kind long;
  #L35c122.  v0:= v0 + v11 @kind long;
  #L35c124.  v5:= v5 + v0 @kind long;
  #L35c126.  v0:= v5 ^>> v2 @kind long;
  #L35c12a.  v11:= v9 * v26 @kind long;
  #L35c12e.  v0:= v0 + v11 @kind long;
  #L35c130.  v0:= v31 + v0 @kind long;
  #L35c134.  v11:= v0 ^>> v2 @kind long;
  #L35c138.  v14:= v9 * v29 @kind long;
  #L35c13c.  v11:= v11 + v14 @kind long;
  #L35c13e.  v11:= v36 + v11 @kind long;
  #L35c142.  v14:= v11 ^>> v2 @kind long;
  #L35c146.  v9:= v9 * v34 @kind long;
  #L35c14a.  v14:= v14 + v9 @kind long;
  #L35c14c.  v9:= v39 + v14 @kind long;
  #L35c150.  v14:= v9 ^>> v2 @kind long;
  #L35c154.  v3:= v3 + v14 @kind long;
  #L35c156.  v8:= (`int`) v7 @kind l2i;
  #L35c158.  v7:= v8 ^< 1;
  #L35c15c.  v7:= v7 ^| v13 @kind int;
  #L35c15e.  v42[v25]:= v7;
  #L35c162.  v7:= v8 ^>> 31;
  #L35c166.  v6:= (`int`) v5 @kind l2i;
  #L35c168.  v5:= v6 ^< 1;
  #L35c16c.  v5:= v5 ^| v7 @kind int;
  #L35c16e.  v42[v28]:= v5;
  #L35c172.  v5:= v6 ^>> 31;
  #L35c176.  v1:= (`int`) v0 @kind l2i;
  #L35c178.  v0:= v1 ^< 1;
  #L35c17c.  v0:= v0 ^| v5 @kind int;
  #L35c17e.  v42[v19]:= v0;
  #L35c182.  v0:= v1 ^>> 31;
  #L35c186.  v1:= (`int`) v11 @kind l2i;
  #L35c188.  v5:= v1 ^< 1;
  #L35c18c.  v0:= v0 ^| v5 @kind int;
  #L35c18e.  v42[v33]:= v0;
  #L35c192.  v0:= v1 ^>> 31;
  #L35c196.  v1:= (`int`) v9 @kind l2i;
  #L35c198.  v5:= v1 ^< 1;
  #L35c19c.  v0:= v0 ^| v5 @kind int;
  #L35c19e.  v42[v18]:= v0;
  #L35c1a2.  v0:= v1 ^>> 31;
  #L35c1a6.  v1:= (`int`) v3 @kind l2i;
  #L35c1a8.  v5:= v1 ^< 1;
  #L35c1ac.  v0:= v0 ^| v5 @kind int;
  #L35c1ae.  v42[v38]:= v0;
  #L35c1b2.  v0:= v1 ^>> 31;
  #L35c1b6.  v1:= 13I;
  #L35c1ba.  v5:= v42[v1];
  #L35c1be.  v2:= 32I;
  #L35c1c2.  v2:= v3 ^> v2 @kind long;
  #L35c1c6.  v3:= (`int`) v2 @kind l2i;
  #L35c1c8.  v5:= v5 + v3 @kind int;
  #L35c1ca.  v2:= 1I;
  #L35c1cc.  v2:= v5 ^< 1;
  #L35c1d0.  v0:= v0 ^| v2 @kind int;
  #L35c1d2.  v42[v1]:= v0;
  #L35c1d6.  return @kind void;
  #L35c1d8.  v7:= v9;
  #L35c1da.  v8:= v11;
  #L35c1dc.  goto L35be58;
}
procedure `int` `r`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/c;.r:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35b75c.  v0:= 0I;
  #L35b75e.  v1:= v10[v0];
  #L35b762.  v1:= (`long`) v1 @kind i2l;
  #L35b764.  v3:= 4294967295L;
  #L35b76e.  v1:= v1 ^& v3 @kind long;
  #L35b770.  v5:= v11[v0];
  #L35b774.  v5:= (`long`) v5 @kind i2l;
  #L35b776.  v5:= v5 ^& v3 @kind long;
  #L35b778.  v1:= v1 - v5 @kind long;
  #L35b77a.  v5:= 0L;
  #L35b77e.  v1:= v1 + v5 @kind long;
  #L35b780.  v5:= (`int`) v1 @kind l2i;
  #L35b782.  v12[v0]:= v5;
  #L35b786.  v0:= 32I;
  #L35b78a.  v1:= v1 ^> v0 @kind long;
  #L35b78c.  v5:= 1I;
  #L35b78e.  v6:= v10[v5];
  #L35b792.  v6:= (`long`) v6 @kind i2l;
  #L35b794.  v6:= v6 ^& v3 @kind long;
  #L35b796.  v8:= v11[v5];
  #L35b79a.  v8:= (`long`) v8 @kind i2l;
  #L35b79c.  v8:= v8 ^& v3 @kind long;
  #L35b79e.  v6:= v6 - v8 @kind long;
  #L35b7a0.  v1:= v1 + v6 @kind long;
  #L35b7a2.  v6:= (`int`) v1 @kind l2i;
  #L35b7a4.  v12[v5]:= v6;
  #L35b7a8.  v1:= v1 ^> v0 @kind long;
  #L35b7aa.  v5:= 2I;
  #L35b7ac.  v6:= v10[v5];
  #L35b7b0.  v6:= (`long`) v6 @kind i2l;
  #L35b7b2.  v6:= v6 ^& v3 @kind long;
  #L35b7b4.  v8:= v11[v5];
  #L35b7b8.  v8:= (`long`) v8 @kind i2l;
  #L35b7ba.  v8:= v8 ^& v3 @kind long;
  #L35b7bc.  v6:= v6 - v8 @kind long;
  #L35b7be.  v1:= v1 + v6 @kind long;
  #L35b7c0.  v6:= (`int`) v1 @kind l2i;
  #L35b7c2.  v12[v5]:= v6;
  #L35b7c6.  v1:= v1 ^> v0 @kind long;
  #L35b7c8.  v5:= 3I;
  #L35b7ca.  v6:= v10[v5];
  #L35b7ce.  v6:= (`long`) v6 @kind i2l;
  #L35b7d0.  v6:= v6 ^& v3 @kind long;
  #L35b7d2.  v8:= v11[v5];
  #L35b7d6.  v8:= (`long`) v8 @kind i2l;
  #L35b7d8.  v8:= v8 ^& v3 @kind long;
  #L35b7da.  v6:= v6 - v8 @kind long;
  #L35b7dc.  v1:= v1 + v6 @kind long;
  #L35b7de.  v6:= (`int`) v1 @kind l2i;
  #L35b7e0.  v12[v5]:= v6;
  #L35b7e4.  v1:= v1 ^> v0 @kind long;
  #L35b7e6.  v5:= 4I;
  #L35b7e8.  v6:= v10[v5];
  #L35b7ec.  v6:= (`long`) v6 @kind i2l;
  #L35b7ee.  v6:= v6 ^& v3 @kind long;
  #L35b7f0.  v8:= v11[v5];
  #L35b7f4.  v8:= (`long`) v8 @kind i2l;
  #L35b7f6.  v8:= v8 ^& v3 @kind long;
  #L35b7f8.  v6:= v6 - v8 @kind long;
  #L35b7fa.  v1:= v1 + v6 @kind long;
  #L35b7fc.  v6:= (`int`) v1 @kind l2i;
  #L35b7fe.  v12[v5]:= v6;
  #L35b802.  v1:= v1 ^> v0 @kind long;
  #L35b804.  v5:= 5I;
  #L35b806.  v6:= v10[v5];
  #L35b80a.  v6:= (`long`) v6 @kind i2l;
  #L35b80c.  v6:= v6 ^& v3 @kind long;
  #L35b80e.  v8:= v11[v5];
  #L35b812.  v8:= (`long`) v8 @kind i2l;
  #L35b814.  v8:= v8 ^& v3 @kind long;
  #L35b816.  v6:= v6 - v8 @kind long;
  #L35b818.  v1:= v1 + v6 @kind long;
  #L35b81a.  v6:= (`int`) v1 @kind l2i;
  #L35b81c.  v12[v5]:= v6;
  #L35b820.  v1:= v1 ^> v0 @kind long;
  #L35b822.  v5:= 6I;
  #L35b824.  v10:= v10[v5];
  #L35b828.  v6:= (`long`) v10 @kind i2l;
  #L35b82a.  v6:= v6 ^& v3 @kind long;
  #L35b82c.  v10:= v11[v5];
  #L35b830.  v10:= (`long`) v10 @kind i2l;
  #L35b832.  v10:= v10 ^& v3 @kind long;
  #L35b834.  v6:= v6 - v10 @kind long;
  #L35b836.  v1:= v1 + v6 @kind long;
  #L35b838.  v10:= (`int`) v1 @kind l2i;
  #L35b83a.  v12[v5]:= v10;
  #L35b83e.  v10:= v1 ^> v0 @kind long;
  #L35b842.  v11:= (`int`) v10 @kind l2i;
  #L35b844.  return v11;
}
procedure `int` `s`(`int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Ln/a/a/c/c;.s:([I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35b858.  v0:= 0I;
  #L35b85a.  v1:= v11[v0];
  #L35b85e.  v1:= (`long`) v1 @kind i2l;
  #L35b860.  v3:= 4294967295L;
  #L35b86a.  v1:= v1 ^& v3 @kind long;
  #L35b86c.  v5:= v10[v0];
  #L35b870.  v5:= (`long`) v5 @kind i2l;
  #L35b872.  v5:= v5 ^& v3 @kind long;
  #L35b874.  v1:= v1 - v5 @kind long;
  #L35b876.  v5:= 0L;
  #L35b87a.  v1:= v1 + v5 @kind long;
  #L35b87c.  v5:= (`int`) v1 @kind l2i;
  #L35b87e.  v11[v0]:= v5;
  #L35b882.  v0:= 32I;
  #L35b886.  v1:= v1 ^> v0 @kind long;
  #L35b888.  v5:= 1I;
  #L35b88a.  v6:= v11[v5];
  #L35b88e.  v6:= (`long`) v6 @kind i2l;
  #L35b890.  v6:= v6 ^& v3 @kind long;
  #L35b892.  v8:= v10[v5];
  #L35b896.  v8:= (`long`) v8 @kind i2l;
  #L35b898.  v8:= v8 ^& v3 @kind long;
  #L35b89a.  v6:= v6 - v8 @kind long;
  #L35b89c.  v1:= v1 + v6 @kind long;
  #L35b89e.  v6:= (`int`) v1 @kind l2i;
  #L35b8a0.  v11[v5]:= v6;
  #L35b8a4.  v1:= v1 ^> v0 @kind long;
  #L35b8a6.  v5:= 2I;
  #L35b8a8.  v6:= v11[v5];
  #L35b8ac.  v6:= (`long`) v6 @kind i2l;
  #L35b8ae.  v6:= v6 ^& v3 @kind long;
  #L35b8b0.  v8:= v10[v5];
  #L35b8b4.  v8:= (`long`) v8 @kind i2l;
  #L35b8b6.  v8:= v8 ^& v3 @kind long;
  #L35b8b8.  v6:= v6 - v8 @kind long;
  #L35b8ba.  v1:= v1 + v6 @kind long;
  #L35b8bc.  v6:= (`int`) v1 @kind l2i;
  #L35b8be.  v11[v5]:= v6;
  #L35b8c2.  v1:= v1 ^> v0 @kind long;
  #L35b8c4.  v5:= 3I;
  #L35b8c6.  v6:= v11[v5];
  #L35b8ca.  v6:= (`long`) v6 @kind i2l;
  #L35b8cc.  v6:= v6 ^& v3 @kind long;
  #L35b8ce.  v8:= v10[v5];
  #L35b8d2.  v8:= (`long`) v8 @kind i2l;
  #L35b8d4.  v8:= v8 ^& v3 @kind long;
  #L35b8d6.  v6:= v6 - v8 @kind long;
  #L35b8d8.  v1:= v1 + v6 @kind long;
  #L35b8da.  v6:= (`int`) v1 @kind l2i;
  #L35b8dc.  v11[v5]:= v6;
  #L35b8e0.  v1:= v1 ^> v0 @kind long;
  #L35b8e2.  v5:= 4I;
  #L35b8e4.  v6:= v11[v5];
  #L35b8e8.  v6:= (`long`) v6 @kind i2l;
  #L35b8ea.  v6:= v6 ^& v3 @kind long;
  #L35b8ec.  v8:= v10[v5];
  #L35b8f0.  v8:= (`long`) v8 @kind i2l;
  #L35b8f2.  v8:= v8 ^& v3 @kind long;
  #L35b8f4.  v6:= v6 - v8 @kind long;
  #L35b8f6.  v1:= v1 + v6 @kind long;
  #L35b8f8.  v6:= (`int`) v1 @kind l2i;
  #L35b8fa.  v11[v5]:= v6;
  #L35b8fe.  v1:= v1 ^> v0 @kind long;
  #L35b900.  v5:= 5I;
  #L35b902.  v6:= v11[v5];
  #L35b906.  v6:= (`long`) v6 @kind i2l;
  #L35b908.  v6:= v6 ^& v3 @kind long;
  #L35b90a.  v8:= v10[v5];
  #L35b90e.  v8:= (`long`) v8 @kind i2l;
  #L35b910.  v8:= v8 ^& v3 @kind long;
  #L35b912.  v6:= v6 - v8 @kind long;
  #L35b914.  v1:= v1 + v6 @kind long;
  #L35b916.  v6:= (`int`) v1 @kind l2i;
  #L35b918.  v11[v5]:= v6;
  #L35b91c.  v1:= v1 ^> v0 @kind long;
  #L35b91e.  v5:= 6I;
  #L35b920.  v6:= v11[v5];
  #L35b924.  v6:= (`long`) v6 @kind i2l;
  #L35b926.  v6:= v6 ^& v3 @kind long;
  #L35b928.  v10:= v10[v5];
  #L35b92c.  v8:= (`long`) v10 @kind i2l;
  #L35b92e.  v3:= v3 ^& v8 @kind long;
  #L35b930.  v6:= v6 - v3 @kind long;
  #L35b932.  v1:= v1 + v6 @kind long;
  #L35b934.  v10:= (`int`) v1 @kind l2i;
  #L35b936.  v11[v5]:= v10;
  #L35b93a.  v10:= v1 ^> v0 @kind long;
  #L35b93e.  v11:= (`int`) v10 @kind l2i;
  #L35b940.  return v11;
}
procedure `java.math.BigInteger` `t`(`int`[] v4 @kind object) @signature `Ln/a/a/c/c;.t:([I)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35b9fc.  v0:= 28I;
  #L35ba00.  v0:= new `byte`[v0];
  #L35ba04.  v1:= 0I;
  #L35ba06.  v2:= 7I;
  #L35ba08.  if v1 >= v2 then goto L35ba28;
  #L35ba0c.  v2:= v4[v1];
  #L35ba10.  if v2 == 0 then goto L35ba22;
  #L35ba14.  v3:= v1 - 6;
  #L35ba18.  v3:= v3 ^< 2;
  #L35ba1c.  call `a`(v2, v0, v3) @signature `Lorg/bouncycastle/util/d;.a:(I[BI)V` @kind static;
  #L35ba22.  v1:= v1 + 1;
  #L35ba26.  goto L35ba06;
  #L35ba28.  v4:= new `java.math.BigInteger`;
  #L35ba2c.  v1:= 1I;
  #L35ba2e.  call `<init>`(v4, v1, v0) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L35ba34.  return v4 @kind object;
}
procedure `void` `u`(`int`[] v2 @kind object) @signature `Ln/a/a/c/c;.u:([I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35c1f0.  v0:= 0I;
  #L35c1f2.  v2[v0]:= v0;
  #L35c1f6.  v1:= 1I;
  #L35c1f8.  v2[v1]:= v0;
  #L35c1fc.  v1:= 2I;
  #L35c1fe.  v2[v1]:= v0;
  #L35c202.  v1:= 3I;
  #L35c204.  v2[v1]:= v0;
  #L35c208.  v1:= 4I;
  #L35c20a.  v2[v1]:= v0;
  #L35c20e.  v1:= 5I;
  #L35c210.  v2[v1]:= v0;
  #L35c214.  v1:= 6I;
  #L35c216.  v2[v1]:= v0;
  #L35c21a.  return @kind void;
}
