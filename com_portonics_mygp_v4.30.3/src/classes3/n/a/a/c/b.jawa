record `n.a.a.c.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `A`(`int`[] v2 @kind object) @signature `Ln/a/a/c/b;.A:([I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35b0a4.  v0:= 0I;
  #L35b0a6.  v2[v0]:= v0;
  #L35b0aa.  v1:= 1I;
  #L35b0ac.  v2[v1]:= v0;
  #L35b0b0.  v1:= 2I;
  #L35b0b2.  v2[v1]:= v0;
  #L35b0b6.  v1:= 3I;
  #L35b0b8.  v2[v1]:= v0;
  #L35b0bc.  v1:= 4I;
  #L35b0be.  v2[v1]:= v0;
  #L35b0c2.  v1:= 5I;
  #L35b0c4.  v2[v1]:= v0;
  #L35b0c8.  return @kind void;
}
procedure `int` `a`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/b;.a:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L359a10.  v0:= 0I;
  #L359a12.  v1:= v10[v0];
  #L359a16.  v1:= (`long`) v1 @kind i2l;
  #L359a18.  v3:= 4294967295L;
  #L359a22.  v1:= v1 ^& v3 @kind long;
  #L359a24.  v5:= v11[v0];
  #L359a28.  v5:= (`long`) v5 @kind i2l;
  #L359a2a.  v5:= v5 ^& v3 @kind long;
  #L359a2c.  v1:= v1 + v5 @kind long;
  #L359a2e.  v5:= 0L;
  #L359a32.  v1:= v1 + v5 @kind long;
  #L359a34.  v5:= (`int`) v1 @kind l2i;
  #L359a36.  v12[v0]:= v5;
  #L359a3a.  v0:= 32I;
  #L359a3e.  v1:= v1 ^>> v0 @kind long;
  #L359a40.  v5:= 1I;
  #L359a42.  v6:= v10[v5];
  #L359a46.  v6:= (`long`) v6 @kind i2l;
  #L359a48.  v6:= v6 ^& v3 @kind long;
  #L359a4a.  v8:= v11[v5];
  #L359a4e.  v8:= (`long`) v8 @kind i2l;
  #L359a50.  v8:= v8 ^& v3 @kind long;
  #L359a52.  v6:= v6 + v8 @kind long;
  #L359a54.  v1:= v1 + v6 @kind long;
  #L359a56.  v6:= (`int`) v1 @kind l2i;
  #L359a58.  v12[v5]:= v6;
  #L359a5c.  v1:= v1 ^>> v0 @kind long;
  #L359a5e.  v5:= 2I;
  #L359a60.  v6:= v10[v5];
  #L359a64.  v6:= (`long`) v6 @kind i2l;
  #L359a66.  v6:= v6 ^& v3 @kind long;
  #L359a68.  v8:= v11[v5];
  #L359a6c.  v8:= (`long`) v8 @kind i2l;
  #L359a6e.  v8:= v8 ^& v3 @kind long;
  #L359a70.  v6:= v6 + v8 @kind long;
  #L359a72.  v1:= v1 + v6 @kind long;
  #L359a74.  v6:= (`int`) v1 @kind l2i;
  #L359a76.  v12[v5]:= v6;
  #L359a7a.  v1:= v1 ^>> v0 @kind long;
  #L359a7c.  v5:= 3I;
  #L359a7e.  v6:= v10[v5];
  #L359a82.  v6:= (`long`) v6 @kind i2l;
  #L359a84.  v6:= v6 ^& v3 @kind long;
  #L359a86.  v8:= v11[v5];
  #L359a8a.  v8:= (`long`) v8 @kind i2l;
  #L359a8c.  v8:= v8 ^& v3 @kind long;
  #L359a8e.  v6:= v6 + v8 @kind long;
  #L359a90.  v1:= v1 + v6 @kind long;
  #L359a92.  v6:= (`int`) v1 @kind l2i;
  #L359a94.  v12[v5]:= v6;
  #L359a98.  v1:= v1 ^>> v0 @kind long;
  #L359a9a.  v5:= 4I;
  #L359a9c.  v6:= v10[v5];
  #L359aa0.  v6:= (`long`) v6 @kind i2l;
  #L359aa2.  v6:= v6 ^& v3 @kind long;
  #L359aa4.  v8:= v11[v5];
  #L359aa8.  v8:= (`long`) v8 @kind i2l;
  #L359aaa.  v8:= v8 ^& v3 @kind long;
  #L359aac.  v6:= v6 + v8 @kind long;
  #L359aae.  v1:= v1 + v6 @kind long;
  #L359ab0.  v6:= (`int`) v1 @kind l2i;
  #L359ab2.  v12[v5]:= v6;
  #L359ab6.  v1:= v1 ^>> v0 @kind long;
  #L359ab8.  v5:= 5I;
  #L359aba.  v10:= v10[v5];
  #L359abe.  v6:= (`long`) v10 @kind i2l;
  #L359ac0.  v6:= v6 ^& v3 @kind long;
  #L359ac2.  v10:= v11[v5];
  #L359ac6.  v10:= (`long`) v10 @kind i2l;
  #L359ac8.  v10:= v10 ^& v3 @kind long;
  #L359aca.  v6:= v6 + v10 @kind long;
  #L359acc.  v1:= v1 + v6 @kind long;
  #L359ace.  v10:= (`int`) v1 @kind l2i;
  #L359ad0.  v12[v5]:= v10;
  #L359ad4.  v10:= v1 ^>> v0 @kind long;
  #L359ad8.  v11:= (`int`) v10 @kind l2i;
  #L359ada.  return v11;
}
procedure `int` `b`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/b;.b:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L359aec.  v0:= 0I;
  #L359aee.  v1:= v10[v0];
  #L359af2.  v1:= (`long`) v1 @kind i2l;
  #L359af4.  v3:= 4294967295L;
  #L359afe.  v1:= v1 ^& v3 @kind long;
  #L359b00.  v5:= v11[v0];
  #L359b04.  v5:= (`long`) v5 @kind i2l;
  #L359b06.  v5:= v5 ^& v3 @kind long;
  #L359b08.  v1:= v1 + v5 @kind long;
  #L359b0a.  v5:= v12[v0];
  #L359b0e.  v5:= (`long`) v5 @kind i2l;
  #L359b10.  v5:= v5 ^& v3 @kind long;
  #L359b12.  v1:= v1 + v5 @kind long;
  #L359b14.  v5:= 0L;
  #L359b18.  v1:= v1 + v5 @kind long;
  #L359b1a.  v5:= (`int`) v1 @kind l2i;
  #L359b1c.  v12[v0]:= v5;
  #L359b20.  v0:= 32I;
  #L359b24.  v1:= v1 ^>> v0 @kind long;
  #L359b26.  v5:= 1I;
  #L359b28.  v6:= v10[v5];
  #L359b2c.  v6:= (`long`) v6 @kind i2l;
  #L359b2e.  v6:= v6 ^& v3 @kind long;
  #L359b30.  v8:= v11[v5];
  #L359b34.  v8:= (`long`) v8 @kind i2l;
  #L359b36.  v8:= v8 ^& v3 @kind long;
  #L359b38.  v6:= v6 + v8 @kind long;
  #L359b3a.  v8:= v12[v5];
  #L359b3e.  v8:= (`long`) v8 @kind i2l;
  #L359b40.  v8:= v8 ^& v3 @kind long;
  #L359b42.  v6:= v6 + v8 @kind long;
  #L359b44.  v1:= v1 + v6 @kind long;
  #L359b46.  v6:= (`int`) v1 @kind l2i;
  #L359b48.  v12[v5]:= v6;
  #L359b4c.  v1:= v1 ^>> v0 @kind long;
  #L359b4e.  v5:= 2I;
  #L359b50.  v6:= v10[v5];
  #L359b54.  v6:= (`long`) v6 @kind i2l;
  #L359b56.  v6:= v6 ^& v3 @kind long;
  #L359b58.  v8:= v11[v5];
  #L359b5c.  v8:= (`long`) v8 @kind i2l;
  #L359b5e.  v8:= v8 ^& v3 @kind long;
  #L359b60.  v6:= v6 + v8 @kind long;
  #L359b62.  v8:= v12[v5];
  #L359b66.  v8:= (`long`) v8 @kind i2l;
  #L359b68.  v8:= v8 ^& v3 @kind long;
  #L359b6a.  v6:= v6 + v8 @kind long;
  #L359b6c.  v1:= v1 + v6 @kind long;
  #L359b6e.  v6:= (`int`) v1 @kind l2i;
  #L359b70.  v12[v5]:= v6;
  #L359b74.  v1:= v1 ^>> v0 @kind long;
  #L359b76.  v5:= 3I;
  #L359b78.  v6:= v10[v5];
  #L359b7c.  v6:= (`long`) v6 @kind i2l;
  #L359b7e.  v6:= v6 ^& v3 @kind long;
  #L359b80.  v8:= v11[v5];
  #L359b84.  v8:= (`long`) v8 @kind i2l;
  #L359b86.  v8:= v8 ^& v3 @kind long;
  #L359b88.  v6:= v6 + v8 @kind long;
  #L359b8a.  v8:= v12[v5];
  #L359b8e.  v8:= (`long`) v8 @kind i2l;
  #L359b90.  v8:= v8 ^& v3 @kind long;
  #L359b92.  v6:= v6 + v8 @kind long;
  #L359b94.  v1:= v1 + v6 @kind long;
  #L359b96.  v6:= (`int`) v1 @kind l2i;
  #L359b98.  v12[v5]:= v6;
  #L359b9c.  v1:= v1 ^>> v0 @kind long;
  #L359b9e.  v5:= 4I;
  #L359ba0.  v6:= v10[v5];
  #L359ba4.  v6:= (`long`) v6 @kind i2l;
  #L359ba6.  v6:= v6 ^& v3 @kind long;
  #L359ba8.  v8:= v11[v5];
  #L359bac.  v8:= (`long`) v8 @kind i2l;
  #L359bae.  v8:= v8 ^& v3 @kind long;
  #L359bb0.  v6:= v6 + v8 @kind long;
  #L359bb2.  v8:= v12[v5];
  #L359bb6.  v8:= (`long`) v8 @kind i2l;
  #L359bb8.  v8:= v8 ^& v3 @kind long;
  #L359bba.  v6:= v6 + v8 @kind long;
  #L359bbc.  v1:= v1 + v6 @kind long;
  #L359bbe.  v6:= (`int`) v1 @kind l2i;
  #L359bc0.  v12[v5]:= v6;
  #L359bc4.  v1:= v1 ^>> v0 @kind long;
  #L359bc6.  v5:= 5I;
  #L359bc8.  v10:= v10[v5];
  #L359bcc.  v6:= (`long`) v10 @kind i2l;
  #L359bce.  v6:= v6 ^& v3 @kind long;
  #L359bd0.  v10:= v11[v5];
  #L359bd4.  v10:= (`long`) v10 @kind i2l;
  #L359bd6.  v10:= v10 ^& v3 @kind long;
  #L359bd8.  v6:= v6 + v10 @kind long;
  #L359bda.  v10:= v12[v5];
  #L359bde.  v10:= (`long`) v10 @kind i2l;
  #L359be0.  v10:= v10 ^& v3 @kind long;
  #L359be2.  v6:= v6 + v10 @kind long;
  #L359be4.  v1:= v1 + v6 @kind long;
  #L359be6.  v10:= (`int`) v1 @kind l2i;
  #L359be8.  v12[v5]:= v10;
  #L359bec.  v10:= v1 ^>> v0 @kind long;
  #L359bf0.  v11:= (`int`) v10 @kind l2i;
  #L359bf2.  return v11;
}
procedure `int` `c`(`int`[] v9 @kind object, `int` v10 , `int`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Ln/a/a/c/b;.c:([II[III)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L359c04.  v0:= (`long`) v13 @kind i2l;
  #L359c06.  v2:= 4294967295L;
  #L359c10.  v0:= v0 ^& v2 @kind long;
  #L359c12.  v13:= v10 + 0;
  #L359c16.  v13:= v9[v13];
  #L359c1a.  v4:= (`long`) v13 @kind i2l;
  #L359c1c.  v4:= v4 ^& v2 @kind long;
  #L359c1e.  v13:= v12 + 0;
  #L359c22.  v6:= v11[v13];
  #L359c26.  v6:= (`long`) v6 @kind i2l;
  #L359c28.  v6:= v6 ^& v2 @kind long;
  #L359c2a.  v4:= v4 + v6 @kind long;
  #L359c2c.  v0:= v0 + v4 @kind long;
  #L359c2e.  v4:= (`int`) v0 @kind l2i;
  #L359c30.  v11[v13]:= v4;
  #L359c34.  v13:= 32I;
  #L359c38.  v0:= v0 ^>> v13 @kind long;
  #L359c3a.  v4:= v10 + 1;
  #L359c3e.  v4:= v9[v4];
  #L359c42.  v4:= (`long`) v4 @kind i2l;
  #L359c44.  v4:= v4 ^& v2 @kind long;
  #L359c46.  v6:= v12 + 1;
  #L359c4a.  v7:= v11[v6];
  #L359c4e.  v7:= (`long`) v7 @kind i2l;
  #L359c50.  v7:= v7 ^& v2 @kind long;
  #L359c52.  v4:= v4 + v7 @kind long;
  #L359c54.  v0:= v0 + v4 @kind long;
  #L359c56.  v4:= (`int`) v0 @kind l2i;
  #L359c58.  v11[v6]:= v4;
  #L359c5c.  v0:= v0 ^>> v13 @kind long;
  #L359c5e.  v4:= v10 + 2;
  #L359c62.  v4:= v9[v4];
  #L359c66.  v4:= (`long`) v4 @kind i2l;
  #L359c68.  v4:= v4 ^& v2 @kind long;
  #L359c6a.  v6:= v12 + 2;
  #L359c6e.  v7:= v11[v6];
  #L359c72.  v7:= (`long`) v7 @kind i2l;
  #L359c74.  v7:= v7 ^& v2 @kind long;
  #L359c76.  v4:= v4 + v7 @kind long;
  #L359c78.  v0:= v0 + v4 @kind long;
  #L359c7a.  v4:= (`int`) v0 @kind l2i;
  #L359c7c.  v11[v6]:= v4;
  #L359c80.  v0:= v0 ^>> v13 @kind long;
  #L359c82.  v4:= v10 + 3;
  #L359c86.  v4:= v9[v4];
  #L359c8a.  v4:= (`long`) v4 @kind i2l;
  #L359c8c.  v4:= v4 ^& v2 @kind long;
  #L359c8e.  v6:= v12 + 3;
  #L359c92.  v7:= v11[v6];
  #L359c96.  v7:= (`long`) v7 @kind i2l;
  #L359c98.  v7:= v7 ^& v2 @kind long;
  #L359c9a.  v4:= v4 + v7 @kind long;
  #L359c9c.  v0:= v0 + v4 @kind long;
  #L359c9e.  v4:= (`int`) v0 @kind l2i;
  #L359ca0.  v11[v6]:= v4;
  #L359ca4.  v0:= v0 ^>> v13 @kind long;
  #L359ca6.  v4:= v10 + 4;
  #L359caa.  v4:= v9[v4];
  #L359cae.  v4:= (`long`) v4 @kind i2l;
  #L359cb0.  v4:= v4 ^& v2 @kind long;
  #L359cb2.  v6:= v12 + 4;
  #L359cb6.  v7:= v11[v6];
  #L359cba.  v7:= (`long`) v7 @kind i2l;
  #L359cbc.  v7:= v7 ^& v2 @kind long;
  #L359cbe.  v4:= v4 + v7 @kind long;
  #L359cc0.  v0:= v0 + v4 @kind long;
  #L359cc2.  v4:= (`int`) v0 @kind l2i;
  #L359cc4.  v11[v6]:= v4;
  #L359cc8.  v0:= v0 ^>> v13 @kind long;
  #L359cca.  v10:= v10 + 5;
  #L359cce.  v9:= v9[v10];
  #L359cd2.  v9:= (`long`) v9 @kind i2l;
  #L359cd4.  v9:= v9 ^& v2 @kind long;
  #L359cd6.  v12:= v12 + 5;
  #L359cda.  v4:= v11[v12];
  #L359cde.  v4:= (`long`) v4 @kind i2l;
  #L359ce0.  v2:= v2 ^& v4 @kind long;
  #L359ce2.  v9:= v9 + v2 @kind long;
  #L359ce4.  v0:= v0 + v9 @kind long;
  #L359ce6.  v9:= (`int`) v0 @kind l2i;
  #L359ce8.  v11[v12]:= v9;
  #L359cec.  v9:= v0 ^>> v13 @kind long;
  #L359cf0.  v10:= (`int`) v9 @kind l2i;
  #L359cf2.  return v10;
}
procedure `int` `d`(`int`[] v11 @kind object, `int` v12 , `int`[] v13 @kind object, `int` v14 ) @signature `Ln/a/a/c/b;.d:([II[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L359d04.  v0:= v12 + 0;
  #L359d08.  v1:= v11[v0];
  #L359d0c.  v1:= (`long`) v1 @kind i2l;
  #L359d0e.  v3:= 4294967295L;
  #L359d18.  v1:= v1 ^& v3 @kind long;
  #L359d1a.  v5:= v14 + 0;
  #L359d1e.  v6:= v13[v5];
  #L359d22.  v6:= (`long`) v6 @kind i2l;
  #L359d24.  v6:= v6 ^& v3 @kind long;
  #L359d26.  v1:= v1 + v6 @kind long;
  #L359d28.  v6:= 0L;
  #L359d2c.  v1:= v1 + v6 @kind long;
  #L359d2e.  v6:= (`int`) v1 @kind l2i;
  #L359d30.  v11[v0]:= v6;
  #L359d34.  v13[v5]:= v6;
  #L359d38.  v0:= 32I;
  #L359d3c.  v1:= v1 ^>> v0 @kind long;
  #L359d3e.  v5:= v12 + 1;
  #L359d42.  v6:= v11[v5];
  #L359d46.  v6:= (`long`) v6 @kind i2l;
  #L359d48.  v6:= v6 ^& v3 @kind long;
  #L359d4a.  v8:= v14 + 1;
  #L359d4e.  v9:= v13[v8];
  #L359d52.  v9:= (`long`) v9 @kind i2l;
  #L359d54.  v9:= v9 ^& v3 @kind long;
  #L359d56.  v6:= v6 + v9 @kind long;
  #L359d58.  v1:= v1 + v6 @kind long;
  #L359d5a.  v6:= (`int`) v1 @kind l2i;
  #L359d5c.  v11[v5]:= v6;
  #L359d60.  v13[v8]:= v6;
  #L359d64.  v1:= v1 ^>> v0 @kind long;
  #L359d66.  v5:= v12 + 2;
  #L359d6a.  v6:= v11[v5];
  #L359d6e.  v6:= (`long`) v6 @kind i2l;
  #L359d70.  v6:= v6 ^& v3 @kind long;
  #L359d72.  v8:= v14 + 2;
  #L359d76.  v9:= v13[v8];
  #L359d7a.  v9:= (`long`) v9 @kind i2l;
  #L359d7c.  v9:= v9 ^& v3 @kind long;
  #L359d7e.  v6:= v6 + v9 @kind long;
  #L359d80.  v1:= v1 + v6 @kind long;
  #L359d82.  v6:= (`int`) v1 @kind l2i;
  #L359d84.  v11[v5]:= v6;
  #L359d88.  v13[v8]:= v6;
  #L359d8c.  v1:= v1 ^>> v0 @kind long;
  #L359d8e.  v5:= v12 + 3;
  #L359d92.  v6:= v11[v5];
  #L359d96.  v6:= (`long`) v6 @kind i2l;
  #L359d98.  v6:= v6 ^& v3 @kind long;
  #L359d9a.  v8:= v14 + 3;
  #L359d9e.  v9:= v13[v8];
  #L359da2.  v9:= (`long`) v9 @kind i2l;
  #L359da4.  v9:= v9 ^& v3 @kind long;
  #L359da6.  v6:= v6 + v9 @kind long;
  #L359da8.  v1:= v1 + v6 @kind long;
  #L359daa.  v6:= (`int`) v1 @kind l2i;
  #L359dac.  v11[v5]:= v6;
  #L359db0.  v13[v8]:= v6;
  #L359db4.  v1:= v1 ^>> v0 @kind long;
  #L359db6.  v5:= v12 + 4;
  #L359dba.  v6:= v11[v5];
  #L359dbe.  v6:= (`long`) v6 @kind i2l;
  #L359dc0.  v6:= v6 ^& v3 @kind long;
  #L359dc2.  v8:= v14 + 4;
  #L359dc6.  v9:= v13[v8];
  #L359dca.  v9:= (`long`) v9 @kind i2l;
  #L359dcc.  v9:= v9 ^& v3 @kind long;
  #L359dce.  v6:= v6 + v9 @kind long;
  #L359dd0.  v1:= v1 + v6 @kind long;
  #L359dd2.  v6:= (`int`) v1 @kind l2i;
  #L359dd4.  v11[v5]:= v6;
  #L359dd8.  v13[v8]:= v6;
  #L359ddc.  v1:= v1 ^>> v0 @kind long;
  #L359dde.  v12:= v12 + 5;
  #L359de2.  v5:= v11[v12];
  #L359de6.  v5:= (`long`) v5 @kind i2l;
  #L359de8.  v5:= v5 ^& v3 @kind long;
  #L359dea.  v14:= v14 + 5;
  #L359dee.  v7:= v13[v14];
  #L359df2.  v7:= (`long`) v7 @kind i2l;
  #L359df4.  v3:= v3 ^& v7 @kind long;
  #L359df6.  v5:= v5 + v3 @kind long;
  #L359df8.  v1:= v1 + v5 @kind long;
  #L359dfa.  v3:= (`int`) v1 @kind l2i;
  #L359dfc.  v11[v12]:= v3;
  #L359e00.  v13[v14]:= v3;
  #L359e04.  v11:= v1 ^>> v0 @kind long;
  #L359e08.  v12:= (`int`) v11 @kind l2i;
  #L359e0a.  return v12;
}
procedure `int`[] `e`() @signature `Ln/a/a/c/b;.e:()[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35a40c.  v0:= 6I;
  #L35a40e.  v0:= new `int`[v0];
  #L35a412.  return v0 @kind object;
}
procedure `int`[] `f`() @signature `Ln/a/a/c/b;.f:()[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35a424.  v0:= 12I;
  #L35a428.  v0:= new `int`[v0];
  #L35a42c.  return v0 @kind object;
}
procedure `boolean` `g`(`int`[] v7 @kind object, `int` v8 , `int`[] v9 @kind object, `int` v10 , `int`[] v11 @kind object, `int` v12 ) @signature `Ln/a/a/c/b;.g:([II[II[II)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3598b8.  call temp:= `k`(v7, v8, v9, v10) @signature `Ln/a/a/c/b;.k:([II[II)Z` @kind static;
  #L3598be.  v0:= temp;
  #L3598c0.  if v0 == 0 then goto L3598cc;
  #L3598c4.  call temp:= `w`(v7, v8, v9, v10, v11, v12) @signature `Ln/a/a/c/b;.w:([II[II[II)I` @kind static;
  #L3598ca.  goto L3598de;
  #L3598cc.  v1:= v9 @kind object;
  #L3598ce.  v2:= v10;
  #L3598d0.  v3:= v7 @kind object;
  #L3598d2.  v4:= v8;
  #L3598d4.  v5:= v11 @kind object;
  #L3598d6.  v6:= v12;
  #L3598d8.  call temp:= `w`(v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/c/b;.w:([II[II[II)I` @kind static;
  #L3598de.  return v0;
}
procedure `boolean` `h`(`int`[] v3 @kind object, `int`[] v4 @kind object) @signature `Ln/a/a/c/b;.h:([I[I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3598f0.  v0:= 5I;
  #L3598f2.  if v0 < 0 then goto L35990c;
  #L3598f6.  v1:= v3[v0];
  #L3598fa.  v2:= v4[v0];
  #L3598fe.  if v1 == v2 then goto L359906;
  #L359902.  v3:= 0I;
  #L359904.  return v3;
  #L359906.  v0:= v0 + -1;
  #L35990a.  goto L3598f2;
  #L35990c.  v3:= 1I;
  #L35990e.  return v3;
}
procedure `int`[] `i`(`java.math.BigInteger` v4 @kind object) @signature `Ln/a/a/c/b;.i:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35a440.  call temp:= `signum`(v4) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L35a446.  v0:= temp;
  #L35a448.  if v0 < 0 then goto L35a494;
  #L35a44c.  call temp:= `bitLength`(v4) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L35a452.  v0:= temp;
  #L35a454.  v1:= 192I;
  #L35a458.  if v0 > v1 then goto L35a494;
  #L35a45c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35a462.  v0:= temp @kind object;
  #L35a464.  v1:= 0I;
  #L35a466.  call temp:= `signum`(v4) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L35a46c.  v2:= temp;
  #L35a46e.  if v2 == 0 then goto L35a492;
  #L35a472.  v2:= v1 + 1;
  #L35a476.  call temp:= `intValue`(v4) @signature `Ljava/math/BigInteger;.intValue:()I` @kind virtual;
  #L35a47c.  v3:= temp;
  #L35a47e.  v0[v1]:= v3;
  #L35a482.  v1:= 32I;
  #L35a486.  call temp:= `shiftRight`(v4, v1) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L35a48c.  v4:= temp @kind object;
  #L35a48e.  v1:= v2;
  #L35a490.  goto L35a466;
  #L35a492.  return v0 @kind object;
  #L35a494.  v4:= new `java.lang.IllegalArgumentException`;
  #L35a498.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L35a49e.  goto L35a4a2;
  #L35a4a0.  throw v4;
  #L35a4a2.  goto L35a4a0;
}
procedure `int` `j`(`int`[] v3 @kind object, `int` v4 ) @signature `Ln/a/a/c/b;.j:([II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L359e1c.  v0:= 0I;
  #L359e1e.  if v4 != 0 then goto L359e2c;
  #L359e22.  v3:= v3[v0];
  #L359e26.  v3:= v3 ^& 1;
  #L359e2a.  return v3;
  #L359e2c.  v1:= v4 ^> 5;
  #L359e30.  if v1 < 0 then goto L359e48;
  #L359e34.  v2:= 6I;
  #L359e36.  if v1 < v2 then goto L359e3c;
  #L359e3a.  goto L359e48;
  #L359e3c.  v4:= v4 ^& 31;
  #L359e40.  v3:= v3[v1];
  #L359e44.  v3:= v3 ^>> v4 @kind int;
  #L359e46.  goto L359e26;
  #L359e48.  return v0;
}
procedure `boolean` `k`(`int`[] v5 @kind object, `int` v6 , `int`[] v7 @kind object, `int` v8 ) @signature `Ln/a/a/c/b;.k:([II[II)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L359920.  v0:= 5I;
  #L359922.  v1:= 1I;
  #L359924.  if v0 < 0 then goto L359954;
  #L359928.  v2:= v6 + v0 @kind int;
  #L35992c.  v2:= v5[v2];
  #L359930.  v3:= -2147483648I;
  #L359934.  v2:= v2 ^~ v3 @kind int;
  #L359936.  v4:= v8 + v0 @kind int;
  #L35993a.  v4:= v7[v4];
  #L35993e.  v3:= v3 ^~ v4 @kind int;
  #L359940.  if v2 >= v3 then goto L359948;
  #L359944.  v5:= 0I;
  #L359946.  return v5;
  #L359948.  if v2 <= v3 then goto L35994e;
  #L35994c.  return v1;
  #L35994e.  v0:= v0 + -1;
  #L359952.  goto L359922;
  #L359954.  return v1;
}
procedure `boolean` `l`(`int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Ln/a/a/c/b;.l:([I[I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L359968.  v0:= 5I;
  #L35996a.  v1:= 1I;
  #L35996c.  if v0 < 0 then goto L359994;
  #L359970.  v2:= v5[v0];
  #L359974.  v3:= -2147483648I;
  #L359978.  v2:= v2 ^~ v3 @kind int;
  #L35997a.  v4:= v6[v0];
  #L35997e.  v3:= v3 ^~ v4 @kind int;
  #L359980.  if v2 >= v3 then goto L359988;
  #L359984.  v5:= 0I;
  #L359986.  return v5;
  #L359988.  if v2 <= v3 then goto L35998e;
  #L35998c.  return v1;
  #L35998e.  v0:= v0 + -1;
  #L359992.  goto L35996a;
  #L359994.  return v1;
}
procedure `boolean` `m`(`int`[] v4 @kind object) @signature `Ln/a/a/c/b;.m:([I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3599a8.  v0:= 0I;
  #L3599aa.  v1:= v4[v0];
  #L3599ae.  v2:= 1I;
  #L3599b0.  if v1 == v2 then goto L3599b6;
  #L3599b4.  return v0;
  #L3599b6.  v1:= 1I;
  #L3599b8.  v3:= 6I;
  #L3599ba.  if v1 >= v3 then goto L3599ce;
  #L3599be.  v3:= v4[v1];
  #L3599c2.  if v3 == 0 then goto L3599c8;
  #L3599c6.  return v0;
  #L3599c8.  v1:= v1 + 1;
  #L3599cc.  goto L3599b8;
  #L3599ce.  return v2;
}
procedure `boolean` `n`(`int`[] v3 @kind object) @signature `Ln/a/a/c/b;.n:([I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3599e0.  v0:= 0I;
  #L3599e2.  v1:= 0I;
  #L3599e4.  v2:= 6I;
  #L3599e6.  if v1 >= v2 then goto L3599fa;
  #L3599ea.  v2:= v3[v1];
  #L3599ee.  if v2 == 0 then goto L3599f4;
  #L3599f2.  return v0;
  #L3599f4.  v1:= v1 + 1;
  #L3599f8.  goto L3599e4;
  #L3599fa.  v3:= 1I;
  #L3599fc.  return v3;
}
procedure `void` `o`(`int`[] v28 @kind object, `int` v29 , `int`[] v30 @kind object, `int` v31 , `int`[] v32 @kind object, `int` v33 ) @signature `Ln/a/a/c/b;.o:([II[II[II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L35a644.  v0:= v31 + 0;
  #L35a648.  v0:= v30[v0];
  #L35a64c.  v0:= (`long`) v0 @kind i2l;
  #L35a64e.  v2:= 4294967295L;
  #L35a658.  v0:= v0 ^& v2 @kind long;
  #L35a65a.  v4:= v31 + 1;
  #L35a65e.  v4:= v30[v4];
  #L35a662.  v4:= (`long`) v4 @kind i2l;
  #L35a664.  v4:= v4 ^& v2 @kind long;
  #L35a666.  v6:= v31 + 2;
  #L35a66a.  v6:= v30[v6];
  #L35a66e.  v6:= (`long`) v6 @kind i2l;
  #L35a670.  v6:= v6 ^& v2 @kind long;
  #L35a672.  v8:= v31 + 3;
  #L35a676.  v8:= v30[v8];
  #L35a67a.  v8:= (`long`) v8 @kind i2l;
  #L35a67c.  v8:= v8 ^& v2 @kind long;
  #L35a67e.  v10:= v31 + 4;
  #L35a682.  v10:= v30[v10];
  #L35a686.  v10:= (`long`) v10 @kind i2l;
  #L35a688.  v10:= v10 ^& v2 @kind long;
  #L35a68a.  v12:= v31 + 5;
  #L35a68e.  v12:= v30[v12];
  #L35a692.  v12:= (`long`) v12 @kind i2l;
  #L35a694.  v12:= v12 ^& v2 @kind long;
  #L35a696.  v14:= v29 + 0;
  #L35a69a.  v14:= v28[v14];
  #L35a69e.  v14:= (`long`) v14 @kind i2l;
  #L35a6a0.  v14:= v14 ^& v2 @kind long;
  #L35a6a2.  v16:= v14 * v0 @kind long;
  #L35a6a6.  v18:= 0L;
  #L35a6aa.  v2:= v16 + v18 @kind long;
  #L35a6ae.  v16:= v33 + 0;
  #L35a6b2.  v22:= v0 @kind wide;
  #L35a6b6.  v0:= (`int`) v2 @kind l2i;
  #L35a6b8.  v32[v16]:= v0;
  #L35a6bc.  v0:= 32I;
  #L35a6c0.  v1:= v2 ^>> v0 @kind long;
  #L35a6c4.  v16:= v14 * v4 @kind long;
  #L35a6c8.  v1:= v1 + v16 @kind long;
  #L35a6cc.  v3:= v33 + 1;
  #L35a6d0.  v16:= v4 @kind wide;
  #L35a6d4.  v4:= (`int`) v1 @kind l2i;
  #L35a6d6.  v32[v3]:= v4;
  #L35a6da.  v1:= v1 ^>> v0 @kind long;
  #L35a6dc.  v3:= v14 * v6 @kind long;
  #L35a6e0.  v1:= v1 + v3 @kind long;
  #L35a6e2.  v3:= v33 + 2;
  #L35a6e6.  v4:= (`int`) v1 @kind l2i;
  #L35a6e8.  v32[v3]:= v4;
  #L35a6ec.  v1:= v1 ^>> v0 @kind long;
  #L35a6ee.  v3:= v14 * v8 @kind long;
  #L35a6f2.  v1:= v1 + v3 @kind long;
  #L35a6f4.  v3:= v33 + 3;
  #L35a6f8.  v4:= (`int`) v1 @kind l2i;
  #L35a6fa.  v32[v3]:= v4;
  #L35a6fe.  v1:= v1 ^>> v0 @kind long;
  #L35a700.  v3:= v14 * v10 @kind long;
  #L35a704.  v1:= v1 + v3 @kind long;
  #L35a706.  v3:= v33 + 4;
  #L35a70a.  v4:= (`int`) v1 @kind l2i;
  #L35a70c.  v32[v3]:= v4;
  #L35a710.  v1:= v1 ^>> v0 @kind long;
  #L35a712.  v14:= v14 * v12 @kind long;
  #L35a716.  v1:= v1 + v14 @kind long;
  #L35a718.  v3:= v33 + 5;
  #L35a71c.  v4:= (`int`) v1 @kind l2i;
  #L35a71e.  v32[v3]:= v4;
  #L35a722.  v1:= v1 ^>> v0 @kind long;
  #L35a724.  v3:= v33 + 6;
  #L35a728.  v2:= (`int`) v1 @kind l2i;
  #L35a72a.  v32[v3]:= v2;
  #L35a72e.  v1:= 1I;
  #L35a730.  v2:= v33;
  #L35a734.  v3:= 1I;
  #L35a736.  v4:= 6I;
  #L35a738.  if v3 >= v4 then goto L35a84c;
  #L35a73c.  v2:= v2 + v1 @kind int;
  #L35a73e.  v4:= v29 + v3 @kind int;
  #L35a742.  v4:= v28[v4];
  #L35a746.  v4:= (`long`) v4 @kind i2l;
  #L35a748.  v14:= 4294967295L;
  #L35a752.  v4:= v4 ^& v14 @kind long;
  #L35a754.  v20:= v4 * v22 @kind long;
  #L35a758.  v24:= v2 + 0;
  #L35a75c.  v1:= v32[v24];
  #L35a760.  v0:= (`long`) v1 @kind i2l;
  #L35a762.  v0:= v0 ^& v14 @kind long;
  #L35a764.  v20:= v20 + v0 @kind long;
  #L35a768.  v0:= v20 + v18 @kind long;
  #L35a76c.  v14:= (`int`) v0 @kind l2i;
  #L35a76e.  v32[v24]:= v14;
  #L35a772.  v14:= 32I;
  #L35a776.  v0:= v0 ^>> v14 @kind long;
  #L35a778.  v24:= v4 * v16 @kind long;
  #L35a77c.  v15:= v2 + 1;
  #L35a780.  v14:= v32[v15];
  #L35a784.  v26:= v12 @kind wide;
  #L35a788.  v12:= (`long`) v14 @kind i2l;
  #L35a78a.  v20:= 4294967295L;
  #L35a794.  v12:= v12 ^& v20 @kind long;
  #L35a798.  v24:= v24 + v12 @kind long;
  #L35a79c.  v0:= v0 + v24 @kind long;
  #L35a7a0.  v12:= (`int`) v0 @kind l2i;
  #L35a7a2.  v32[v15]:= v12;
  #L35a7a6.  v12:= 32I;
  #L35a7aa.  v0:= v0 ^>> v12 @kind long;
  #L35a7ac.  v13:= v4 * v6 @kind long;
  #L35a7b0.  v15:= v2 + 2;
  #L35a7b4.  v12:= v32[v15];
  #L35a7b8.  v24:= v6 @kind wide;
  #L35a7bc.  v6:= (`long`) v12 @kind i2l;
  #L35a7be.  v6:= v6 ^& v20 @kind long;
  #L35a7c2.  v13:= v13 + v6 @kind long;
  #L35a7c4.  v0:= v0 + v13 @kind long;
  #L35a7c6.  v6:= (`int`) v0 @kind l2i;
  #L35a7c8.  v32[v15]:= v6;
  #L35a7cc.  v6:= 32I;
  #L35a7d0.  v0:= v0 ^>> v6 @kind long;
  #L35a7d2.  v12:= v4 * v8 @kind long;
  #L35a7d6.  v7:= v2 + 3;
  #L35a7da.  v14:= v32[v7];
  #L35a7de.  v14:= (`long`) v14 @kind i2l;
  #L35a7e0.  v14:= v14 ^& v20 @kind long;
  #L35a7e4.  v12:= v12 + v14 @kind long;
  #L35a7e6.  v0:= v0 + v12 @kind long;
  #L35a7e8.  v12:= (`int`) v0 @kind l2i;
  #L35a7ea.  v32[v7]:= v12;
  #L35a7ee.  v0:= v0 ^>> v6 @kind long;
  #L35a7f0.  v12:= v4 * v10 @kind long;
  #L35a7f4.  v7:= v2 + 4;
  #L35a7f8.  v14:= v32[v7];
  #L35a7fc.  v14:= (`long`) v14 @kind i2l;
  #L35a7fe.  v14:= v14 ^& v20 @kind long;
  #L35a802.  v12:= v12 + v14 @kind long;
  #L35a804.  v0:= v0 + v12 @kind long;
  #L35a806.  v12:= (`int`) v0 @kind l2i;
  #L35a808.  v32[v7]:= v12;
  #L35a80c.  v0:= v0 ^>> v6 @kind long;
  #L35a80e.  v4:= v4 * v26 @kind long;
  #L35a812.  v7:= v2 + 5;
  #L35a816.  v12:= v32[v7];
  #L35a81a.  v12:= (`long`) v12 @kind i2l;
  #L35a81c.  v12:= v12 ^& v20 @kind long;
  #L35a820.  v4:= v4 + v12 @kind long;
  #L35a822.  v0:= v0 + v4 @kind long;
  #L35a824.  v4:= (`int`) v0 @kind l2i;
  #L35a826.  v32[v7]:= v4;
  #L35a82a.  v0:= v0 ^>> v6 @kind long;
  #L35a82c.  v4:= v2 + 6;
  #L35a830.  v1:= (`int`) v0 @kind l2i;
  #L35a832.  v32[v4]:= v1;
  #L35a836.  v3:= v3 + 1;
  #L35a83a.  v6:= v24 @kind wide;
  #L35a83e.  v12:= v26 @kind wide;
  #L35a842.  v0:= 32I;
  #L35a846.  v1:= 1I;
  #L35a848.  goto L35a736;
  #L35a84c.  return @kind void;
}
procedure `void` `p`(`int`[] v30 @kind object, `int`[] v31 @kind object, `int`[] v32 @kind object) @signature `Ln/a/a/c/b;.p:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L35a860.  v0:= 0I;
  #L35a862.  v1:= v31[v0];
  #L35a866.  v1:= (`long`) v1 @kind i2l;
  #L35a868.  v3:= 4294967295L;
  #L35a872.  v1:= v1 ^& v3 @kind long;
  #L35a874.  v5:= 1I;
  #L35a876.  v6:= v31[v5];
  #L35a87a.  v6:= (`long`) v6 @kind i2l;
  #L35a87c.  v6:= v6 ^& v3 @kind long;
  #L35a87e.  v8:= 2I;
  #L35a880.  v9:= v31[v8];
  #L35a884.  v9:= (`long`) v9 @kind i2l;
  #L35a886.  v9:= v9 ^& v3 @kind long;
  #L35a888.  v11:= 3I;
  #L35a88a.  v12:= v31[v11];
  #L35a88e.  v12:= (`long`) v12 @kind i2l;
  #L35a890.  v12:= v12 ^& v3 @kind long;
  #L35a892.  v14:= 4I;
  #L35a894.  v15:= v31[v14];
  #L35a898.  v14:= (`long`) v15 @kind i2l;
  #L35a89a.  v14:= v14 ^& v3 @kind long;
  #L35a89c.  v17:= 5I;
  #L35a8a0.  v11:= v31[v17];
  #L35a8a4.  v20:= v9 @kind wide;
  #L35a8a8.  v8:= (`long`) v11 @kind i2l;
  #L35a8aa.  v8:= v8 ^& v3 @kind long;
  #L35a8ac.  v10:= v30[v0];
  #L35a8b0.  v10:= (`long`) v10 @kind i2l;
  #L35a8b2.  v10:= v10 ^& v3 @kind long;
  #L35a8b4.  v22:= v10 * v1 @kind long;
  #L35a8b8.  v24:= 0L;
  #L35a8bc.  v3:= v22 + v24 @kind long;
  #L35a8c0.  v5:= (`int`) v3 @kind l2i;
  #L35a8c2.  v32[v0]:= v5;
  #L35a8c6.  v0:= 32I;
  #L35a8ca.  v3:= v3 ^>> v0 @kind long;
  #L35a8cc.  v28:= v10 * v6 @kind long;
  #L35a8d0.  v3:= v3 + v28 @kind long;
  #L35a8d4.  v5:= (`int`) v3 @kind l2i;
  #L35a8d6.  v22:= 1I;
  #L35a8da.  v32[v22]:= v5;
  #L35a8de.  v3:= v3 ^>> v0 @kind long;
  #L35a8e0.  v28:= v10 * v20 @kind long;
  #L35a8e4.  v3:= v3 + v28 @kind long;
  #L35a8e8.  v5:= (`int`) v3 @kind l2i;
  #L35a8ea.  v19:= 2I;
  #L35a8ee.  v32[v19]:= v5;
  #L35a8f2.  v3:= v3 ^>> v0 @kind long;
  #L35a8f4.  v28:= v10 * v12 @kind long;
  #L35a8f8.  v3:= v3 + v28 @kind long;
  #L35a8fc.  v5:= (`int`) v3 @kind l2i;
  #L35a8fe.  v18:= 3I;
  #L35a902.  v32[v18]:= v5;
  #L35a906.  v3:= v3 ^>> v0 @kind long;
  #L35a908.  v18:= v10 * v14 @kind long;
  #L35a90c.  v3:= v3 + v18 @kind long;
  #L35a910.  v5:= (`int`) v3 @kind l2i;
  #L35a912.  v16:= 4I;
  #L35a916.  v32[v16]:= v5;
  #L35a91a.  v3:= v3 ^>> v0 @kind long;
  #L35a91c.  v10:= v10 * v8 @kind long;
  #L35a920.  v3:= v3 + v10 @kind long;
  #L35a922.  v5:= (`int`) v3 @kind l2i;
  #L35a924.  v32[v17]:= v5;
  #L35a928.  v3:= v3 ^>> v0 @kind long;
  #L35a92a.  v4:= (`int`) v3 @kind l2i;
  #L35a92c.  v3:= 6I;
  #L35a92e.  v32[v3]:= v4;
  #L35a932.  v5:= 1I;
  #L35a934.  if v5 >= v3 then goto L35aa3c;
  #L35a938.  v4:= v30[v5];
  #L35a93c.  v10:= (`long`) v4 @kind i2l;
  #L35a93e.  v16:= 4294967295L;
  #L35a948.  v10:= v10 ^& v16 @kind long;
  #L35a94c.  v18:= v10 * v1 @kind long;
  #L35a950.  v4:= v5 + 0;
  #L35a954.  v3:= v32[v4];
  #L35a958.  v22:= v1 @kind wide;
  #L35a95c.  v0:= (`long`) v3 @kind i2l;
  #L35a95e.  v0:= v0 ^& v16 @kind long;
  #L35a962.  v18:= v18 + v0 @kind long;
  #L35a966.  v0:= v18 + v24 @kind long;
  #L35a96a.  v3:= (`int`) v0 @kind l2i;
  #L35a96c.  v32[v4]:= v3;
  #L35a970.  v2:= 32I;
  #L35a974.  v0:= v0 ^>> v2 @kind long;
  #L35a976.  v3:= v10 * v6 @kind long;
  #L35a97a.  v18:= v5 + 1;
  #L35a97e.  v2:= v32[v18];
  #L35a982.  v26:= v6 @kind wide;
  #L35a986.  v6:= (`long`) v2 @kind i2l;
  #L35a988.  v6:= v6 ^& v16 @kind long;
  #L35a98c.  v3:= v3 + v6 @kind long;
  #L35a98e.  v0:= v0 + v3 @kind long;
  #L35a990.  v2:= (`int`) v0 @kind l2i;
  #L35a992.  v32[v18]:= v2;
  #L35a996.  v2:= 32I;
  #L35a99a.  v0:= v0 ^>> v2 @kind long;
  #L35a99c.  v3:= v10 * v20 @kind long;
  #L35a9a0.  v6:= v5 + 2;
  #L35a9a4.  v7:= v32[v6];
  #L35a9a8.  v28:= v8 @kind wide;
  #L35a9ac.  v7:= (`long`) v7 @kind i2l;
  #L35a9ae.  v7:= v7 ^& v16 @kind long;
  #L35a9b2.  v3:= v3 + v7 @kind long;
  #L35a9b4.  v0:= v0 + v3 @kind long;
  #L35a9b6.  v3:= (`int`) v0 @kind l2i;
  #L35a9b8.  v32[v6]:= v3;
  #L35a9bc.  v0:= v0 ^>> v2 @kind long;
  #L35a9be.  v3:= v10 * v12 @kind long;
  #L35a9c2.  v6:= v5 + 3;
  #L35a9c6.  v7:= v32[v6];
  #L35a9ca.  v7:= (`long`) v7 @kind i2l;
  #L35a9cc.  v7:= v7 ^& v16 @kind long;
  #L35a9d0.  v3:= v3 + v7 @kind long;
  #L35a9d2.  v0:= v0 + v3 @kind long;
  #L35a9d4.  v3:= (`int`) v0 @kind l2i;
  #L35a9d6.  v32[v6]:= v3;
  #L35a9da.  v0:= v0 ^>> v2 @kind long;
  #L35a9dc.  v3:= v10 * v14 @kind long;
  #L35a9e0.  v6:= v5 + 4;
  #L35a9e4.  v7:= v32[v6];
  #L35a9e8.  v7:= (`long`) v7 @kind i2l;
  #L35a9ea.  v7:= v7 ^& v16 @kind long;
  #L35a9ee.  v3:= v3 + v7 @kind long;
  #L35a9f0.  v0:= v0 + v3 @kind long;
  #L35a9f2.  v3:= (`int`) v0 @kind l2i;
  #L35a9f4.  v32[v6]:= v3;
  #L35a9f8.  v0:= v0 ^>> v2 @kind long;
  #L35a9fa.  v10:= v10 * v28 @kind long;
  #L35a9fe.  v3:= v5 + 5;
  #L35aa02.  v4:= v32[v3];
  #L35aa06.  v6:= (`long`) v4 @kind i2l;
  #L35aa08.  v6:= v6 ^& v16 @kind long;
  #L35aa0c.  v10:= v10 + v6 @kind long;
  #L35aa0e.  v0:= v0 + v10 @kind long;
  #L35aa10.  v4:= (`int`) v0 @kind l2i;
  #L35aa12.  v32[v3]:= v4;
  #L35aa16.  v0:= v0 ^>> v2 @kind long;
  #L35aa18.  v5:= v5 + 6;
  #L35aa1c.  v1:= (`int`) v0 @kind l2i;
  #L35aa1e.  v32[v5]:= v1;
  #L35aa22.  v5:= v18;
  #L35aa26.  v1:= v22 @kind wide;
  #L35aa2a.  v6:= v26 @kind wide;
  #L35aa2e.  v8:= v28 @kind wide;
  #L35aa32.  v0:= 32I;
  #L35aa36.  v3:= 6I;
  #L35aa38.  goto L35a934;
  #L35aa3c.  return @kind void;
}
procedure `long` `q`(`int` v13 , `int`[] v14 @kind object, `int` v15 , `int`[] v16 @kind object, `int` v17 , `int`[] v18 @kind object, `int` v19 ) @signature `Ln/a/a/c/b;.q:(I[II[II[II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L35a500.  v0:= v13;
  #L35a502.  v0:= (`long`) v0 @kind i2l;
  #L35a504.  v2:= 4294967295L;
  #L35a50e.  v0:= v0 ^& v2 @kind long;
  #L35a510.  v4:= v15 + 0;
  #L35a514.  v4:= v14[v4];
  #L35a518.  v4:= (`long`) v4 @kind i2l;
  #L35a51a.  v4:= v4 ^& v2 @kind long;
  #L35a51c.  v6:= v0 * v4 @kind long;
  #L35a520.  v8:= v17 + 0;
  #L35a524.  v8:= v16[v8];
  #L35a528.  v8:= (`long`) v8 @kind i2l;
  #L35a52a.  v8:= v8 ^& v2 @kind long;
  #L35a52c.  v6:= v6 + v8 @kind long;
  #L35a52e.  v8:= 0L;
  #L35a532.  v6:= v6 + v8 @kind long;
  #L35a534.  v8:= v19 + 0;
  #L35a538.  v9:= (`int`) v6 @kind l2i;
  #L35a53a.  v18[v8]:= v9;
  #L35a53e.  v8:= 32I;
  #L35a542.  v6:= v6 ^>> v8 @kind long;
  #L35a544.  v9:= v15 + 1;
  #L35a548.  v9:= v14[v9];
  #L35a54c.  v9:= (`long`) v9 @kind i2l;
  #L35a54e.  v9:= v9 ^& v2 @kind long;
  #L35a550.  v11:= v0 * v9 @kind long;
  #L35a554.  v11:= v11 + v4 @kind long;
  #L35a556.  v4:= v17 + 1;
  #L35a55a.  v4:= v16[v4];
  #L35a55e.  v4:= (`long`) v4 @kind i2l;
  #L35a560.  v4:= v4 ^& v2 @kind long;
  #L35a562.  v11:= v11 + v4 @kind long;
  #L35a564.  v6:= v6 + v11 @kind long;
  #L35a566.  v4:= v19 + 1;
  #L35a56a.  v5:= (`int`) v6 @kind l2i;
  #L35a56c.  v18[v4]:= v5;
  #L35a570.  v4:= v6 ^>> v8 @kind long;
  #L35a574.  v6:= v15 + 2;
  #L35a578.  v6:= v14[v6];
  #L35a57c.  v6:= (`long`) v6 @kind i2l;
  #L35a57e.  v6:= v6 ^& v2 @kind long;
  #L35a580.  v11:= v0 * v6 @kind long;
  #L35a584.  v11:= v11 + v9 @kind long;
  #L35a586.  v9:= v17 + 2;
  #L35a58a.  v9:= v16[v9];
  #L35a58e.  v9:= (`long`) v9 @kind i2l;
  #L35a590.  v9:= v9 ^& v2 @kind long;
  #L35a592.  v11:= v11 + v9 @kind long;
  #L35a594.  v4:= v4 + v11 @kind long;
  #L35a596.  v9:= v19 + 2;
  #L35a59a.  v10:= (`int`) v4 @kind l2i;
  #L35a59c.  v18[v9]:= v10;
  #L35a5a0.  v4:= v4 ^>> v8 @kind long;
  #L35a5a2.  v9:= v15 + 3;
  #L35a5a6.  v9:= v14[v9];
  #L35a5aa.  v9:= (`long`) v9 @kind i2l;
  #L35a5ac.  v9:= v9 ^& v2 @kind long;
  #L35a5ae.  v11:= v0 * v9 @kind long;
  #L35a5b2.  v11:= v11 + v6 @kind long;
  #L35a5b4.  v6:= v17 + 3;
  #L35a5b8.  v6:= v16[v6];
  #L35a5bc.  v6:= (`long`) v6 @kind i2l;
  #L35a5be.  v6:= v6 ^& v2 @kind long;
  #L35a5c0.  v11:= v11 + v6 @kind long;
  #L35a5c2.  v4:= v4 + v11 @kind long;
  #L35a5c4.  v6:= v19 + 3;
  #L35a5c8.  v7:= (`int`) v4 @kind l2i;
  #L35a5ca.  v18[v6]:= v7;
  #L35a5ce.  v4:= v4 ^>> v8 @kind long;
  #L35a5d0.  v6:= v15 + 4;
  #L35a5d4.  v6:= v14[v6];
  #L35a5d8.  v6:= (`long`) v6 @kind i2l;
  #L35a5da.  v6:= v6 ^& v2 @kind long;
  #L35a5dc.  v11:= v0 * v6 @kind long;
  #L35a5e0.  v11:= v11 + v9 @kind long;
  #L35a5e2.  v9:= v17 + 4;
  #L35a5e6.  v9:= v16[v9];
  #L35a5ea.  v9:= (`long`) v9 @kind i2l;
  #L35a5ec.  v9:= v9 ^& v2 @kind long;
  #L35a5ee.  v11:= v11 + v9 @kind long;
  #L35a5f0.  v4:= v4 + v11 @kind long;
  #L35a5f2.  v9:= v19 + 4;
  #L35a5f6.  v10:= (`int`) v4 @kind l2i;
  #L35a5f8.  v18[v9]:= v10;
  #L35a5fc.  v4:= v4 ^>> v8 @kind long;
  #L35a5fe.  v9:= v15 + 5;
  #L35a602.  v9:= v14[v9];
  #L35a606.  v9:= (`long`) v9 @kind i2l;
  #L35a608.  v9:= v9 ^& v2 @kind long;
  #L35a60a.  v0:= v0 * v9 @kind long;
  #L35a60e.  v0:= v0 + v6 @kind long;
  #L35a610.  v6:= v17 + 5;
  #L35a614.  v6:= v16[v6];
  #L35a618.  v6:= (`long`) v6 @kind i2l;
  #L35a61a.  v2:= v2 ^& v6 @kind long;
  #L35a61c.  v0:= v0 + v2 @kind long;
  #L35a61e.  v4:= v4 + v0 @kind long;
  #L35a620.  v0:= v19 + 5;
  #L35a624.  v1:= (`int`) v4 @kind l2i;
  #L35a626.  v18[v0]:= v1;
  #L35a62a.  v0:= v4 ^>> v8 @kind long;
  #L35a62e.  v0:= v0 + v9 @kind long;
  #L35a630.  return v0 @kind wide;
}
procedure `int` `r`(`int` v15 , `long` v16 , `int`[] v18 @kind object, `int` v19 ) @signature `Ln/a/a/c/b;.r:(IJ[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L359e5c.  v0:= v18 @kind object;
  #L359e60.  v1:= v15;
  #L359e62.  v2:= v19;
  #L359e66.  v3:= (`long`) v1 @kind i2l;
  #L359e68.  v5:= 4294967295L;
  #L359e72.  v3:= v3 ^& v5 @kind long;
  #L359e74.  v7:= v16 ^& v5 @kind long;
  #L359e78.  v9:= v3 * v7 @kind long;
  #L359e7c.  v1:= v2 + 0;
  #L359e80.  v11:= v0[v1];
  #L359e84.  v11:= (`long`) v11 @kind i2l;
  #L359e86.  v11:= v11 ^& v5 @kind long;
  #L359e88.  v9:= v9 + v11 @kind long;
  #L359e8a.  v11:= 0L;
  #L359e8e.  v9:= v9 + v11 @kind long;
  #L359e90.  v13:= (`int`) v9 @kind l2i;
  #L359e92.  v0[v1]:= v13;
  #L359e96.  v1:= 32I;
  #L359e9a.  v9:= v9 ^>> v1 @kind long;
  #L359e9c.  v13:= v16 ^>> v1 @kind long;
  #L359ea0.  v3:= v3 * v13 @kind long;
  #L359ea4.  v3:= v3 + v7 @kind long;
  #L359ea6.  v7:= v2 + 1;
  #L359eaa.  v8:= v0[v7];
  #L359eae.  v11:= (`long`) v8 @kind i2l;
  #L359eb0.  v11:= v11 ^& v5 @kind long;
  #L359eb2.  v3:= v3 + v11 @kind long;
  #L359eb4.  v9:= v9 + v3 @kind long;
  #L359eb6.  v3:= (`int`) v9 @kind l2i;
  #L359eb8.  v0[v7]:= v3;
  #L359ebc.  v3:= v9 ^>> v1 @kind long;
  #L359ec0.  v7:= v2 + 2;
  #L359ec4.  v8:= v0[v7];
  #L359ec8.  v8:= (`long`) v8 @kind i2l;
  #L359eca.  v8:= v8 ^& v5 @kind long;
  #L359ecc.  v13:= v13 + v8 @kind long;
  #L359ece.  v3:= v3 + v13 @kind long;
  #L359ed0.  v8:= (`int`) v3 @kind l2i;
  #L359ed2.  v0[v7]:= v8;
  #L359ed6.  v3:= v3 ^>> v1 @kind long;
  #L359ed8.  v7:= v2 + 3;
  #L359edc.  v8:= v0[v7];
  #L359ee0.  v8:= (`long`) v8 @kind i2l;
  #L359ee2.  v5:= v5 ^& v8 @kind long;
  #L359ee4.  v3:= v3 + v5 @kind long;
  #L359ee6.  v5:= (`int`) v3 @kind l2i;
  #L359ee8.  v0[v7]:= v5;
  #L359eec.  v3:= v3 ^>> v1 @kind long;
  #L359eee.  v5:= 0L;
  #L359ef2.  v1:= lcmp(v3, v5);
  #L359ef6.  if v1 != 0 then goto L359efe;
  #L359efa.  v0:= 0I;
  #L359efc.  goto L359f0a;
  #L359efe.  v1:= 6I;
  #L359f00.  v3:= 4I;
  #L359f02.  call temp:= `s`(v1, v0, v2, v3) @signature `Ln/a/a/c/g;.s:(I[III)I` @kind static;
  #L359f08.  v0:= temp;
  #L359f0a.  return v0;
}
procedure `int` `s`(`int` v10 , `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Ln/a/a/c/b;.s:(II[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L359f1c.  v0:= (`long`) v10 @kind i2l;
  #L359f1e.  v2:= 4294967295L;
  #L359f28.  v0:= v0 ^& v2 @kind long;
  #L359f2a.  v10:= (`long`) v11 @kind i2l;
  #L359f2c.  v10:= v10 ^& v2 @kind long;
  #L359f2e.  v0:= v0 * v10 @kind long;
  #L359f32.  v4:= v13 + 0;
  #L359f36.  v5:= v12[v4];
  #L359f3a.  v5:= (`long`) v5 @kind i2l;
  #L359f3c.  v5:= v5 ^& v2 @kind long;
  #L359f3e.  v0:= v0 + v5 @kind long;
  #L359f40.  v5:= 0L;
  #L359f44.  v0:= v0 + v5 @kind long;
  #L359f46.  v7:= (`int`) v0 @kind l2i;
  #L359f48.  v12[v4]:= v7;
  #L359f4c.  v4:= 32I;
  #L359f50.  v0:= v0 ^>> v4 @kind long;
  #L359f52.  v7:= v13 + 1;
  #L359f56.  v8:= v12[v7];
  #L359f5a.  v8:= (`long`) v8 @kind i2l;
  #L359f5c.  v8:= v8 ^& v2 @kind long;
  #L359f5e.  v10:= v10 + v8 @kind long;
  #L359f60.  v0:= v0 + v10 @kind long;
  #L359f62.  v10:= (`int`) v0 @kind l2i;
  #L359f64.  v12[v7]:= v10;
  #L359f68.  v10:= v0 ^>> v4 @kind long;
  #L359f6c.  v0:= v13 + 2;
  #L359f70.  v1:= v12[v0];
  #L359f74.  v7:= (`long`) v1 @kind i2l;
  #L359f76.  v2:= v2 ^& v7 @kind long;
  #L359f78.  v10:= v10 + v2 @kind long;
  #L359f7a.  v1:= (`int`) v10 @kind l2i;
  #L359f7c.  v12[v0]:= v1;
  #L359f80.  v10:= v10 ^>> v4 @kind long;
  #L359f82.  v0:= lcmp(v10, v5);
  #L359f86.  if v0 != 0 then goto L359f8e;
  #L359f8a.  v10:= 0I;
  #L359f8c.  goto L359f9a;
  #L359f8e.  v10:= 6I;
  #L359f90.  v11:= 3I;
  #L359f92.  call temp:= `s`(v10, v12, v13, v11) @signature `Ln/a/a/c/g;.s:(I[III)I` @kind static;
  #L359f98.  v10:= temp;
  #L359f9a.  return v10;
}
procedure `int` `t`(`int`[] v30 @kind object, `int`[] v31 @kind object, `int`[] v32 @kind object) @signature `Ln/a/a/c/b;.t:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L359fac.  v0:= 0I;
  #L359fae.  v1:= v31[v0];
  #L359fb2.  v1:= (`long`) v1 @kind i2l;
  #L359fb4.  v3:= 4294967295L;
  #L359fbe.  v1:= v1 ^& v3 @kind long;
  #L359fc0.  v5:= 1I;
  #L359fc2.  v5:= v31[v5];
  #L359fc6.  v5:= (`long`) v5 @kind i2l;
  #L359fc8.  v5:= v5 ^& v3 @kind long;
  #L359fca.  v7:= 2I;
  #L359fcc.  v7:= v31[v7];
  #L359fd0.  v7:= (`long`) v7 @kind i2l;
  #L359fd2.  v7:= v7 ^& v3 @kind long;
  #L359fd4.  v9:= 3I;
  #L359fd6.  v9:= v31[v9];
  #L359fda.  v9:= (`long`) v9 @kind i2l;
  #L359fdc.  v9:= v9 ^& v3 @kind long;
  #L359fde.  v11:= 4I;
  #L359fe0.  v11:= v31[v11];
  #L359fe4.  v11:= (`long`) v11 @kind i2l;
  #L359fe6.  v11:= v11 ^& v3 @kind long;
  #L359fe8.  v13:= 5I;
  #L359fea.  v13:= v31[v13];
  #L359fee.  v13:= (`long`) v13 @kind i2l;
  #L359ff0.  v13:= v13 ^& v3 @kind long;
  #L359ff2.  v17:= 0L;
  #L359ff6.  v15:= 6I;
  #L359ff8.  if v0 >= v15 then goto L35a124;
  #L359ffc.  v15:= v30[v0];
  #L35a000.  v21:= v13 @kind wide;
  #L35a004.  v13:= (`long`) v15 @kind i2l;
  #L35a006.  v13:= v13 ^& v3 @kind long;
  #L35a008.  v15:= v13 * v1 @kind long;
  #L35a00c.  v23:= v0 + 0;
  #L35a010.  v24:= v1 @kind wide;
  #L35a014.  v1:= v32[v23];
  #L35a018.  v1:= (`long`) v1 @kind i2l;
  #L35a01a.  v1:= v1 ^& v3 @kind long;
  #L35a01c.  v15:= v15 + v1 @kind long;
  #L35a01e.  v1:= 0L;
  #L35a022.  v3:= v15 + v1 @kind long;
  #L35a026.  v15:= (`int`) v3 @kind l2i;
  #L35a028.  v32[v23]:= v15;
  #L35a02c.  v15:= 32I;
  #L35a030.  v3:= v3 ^>> v15 @kind long;
  #L35a032.  v26:= v13 * v5 @kind long;
  #L35a036.  v16:= v0 + 1;
  #L35a03a.  v1:= v32[v16];
  #L35a03e.  v1:= (`long`) v1 @kind i2l;
  #L35a040.  v19:= 4294967295L;
  #L35a04a.  v1:= v1 ^& v19 @kind long;
  #L35a04e.  v26:= v26 + v1 @kind long;
  #L35a052.  v3:= v3 + v26 @kind long;
  #L35a056.  v1:= (`int`) v3 @kind l2i;
  #L35a058.  v32[v16]:= v1;
  #L35a05c.  v1:= v3 ^>> v15 @kind long;
  #L35a060.  v3:= v13 * v7 @kind long;
  #L35a064.  v23:= v0 + 2;
  #L35a068.  v15:= v32[v23];
  #L35a06c.  v26:= v5 @kind wide;
  #L35a070.  v5:= (`long`) v15 @kind i2l;
  #L35a072.  v5:= v5 ^& v19 @kind long;
  #L35a076.  v3:= v3 + v5 @kind long;
  #L35a078.  v1:= v1 + v3 @kind long;
  #L35a07a.  v3:= (`int`) v1 @kind l2i;
  #L35a07c.  v32[v23]:= v3;
  #L35a080.  v3:= 32I;
  #L35a084.  v1:= v1 ^>> v3 @kind long;
  #L35a086.  v4:= v13 * v9 @kind long;
  #L35a08a.  v6:= v0 + 3;
  #L35a08e.  v15:= v32[v6];
  #L35a092.  v28:= v7 @kind wide;
  #L35a096.  v7:= (`long`) v15 @kind i2l;
  #L35a098.  v7:= v7 ^& v19 @kind long;
  #L35a09c.  v4:= v4 + v7 @kind long;
  #L35a09e.  v1:= v1 + v4 @kind long;
  #L35a0a0.  v4:= (`int`) v1 @kind l2i;
  #L35a0a2.  v32[v6]:= v4;
  #L35a0a6.  v1:= v1 ^>> v3 @kind long;
  #L35a0a8.  v4:= v13 * v11 @kind long;
  #L35a0ac.  v6:= v0 + 4;
  #L35a0b0.  v7:= v32[v6];
  #L35a0b4.  v7:= (`long`) v7 @kind i2l;
  #L35a0b6.  v7:= v7 ^& v19 @kind long;
  #L35a0ba.  v4:= v4 + v7 @kind long;
  #L35a0bc.  v1:= v1 + v4 @kind long;
  #L35a0be.  v4:= (`int`) v1 @kind l2i;
  #L35a0c0.  v32[v6]:= v4;
  #L35a0c4.  v1:= v1 ^>> v3 @kind long;
  #L35a0c6.  v13:= v13 * v21 @kind long;
  #L35a0ca.  v4:= v0 + 5;
  #L35a0ce.  v5:= v32[v4];
  #L35a0d2.  v5:= (`long`) v5 @kind i2l;
  #L35a0d4.  v5:= v5 ^& v19 @kind long;
  #L35a0d8.  v13:= v13 + v5 @kind long;
  #L35a0da.  v1:= v1 + v13 @kind long;
  #L35a0dc.  v5:= (`int`) v1 @kind l2i;
  #L35a0de.  v32[v4]:= v5;
  #L35a0e2.  v1:= v1 ^>> v3 @kind long;
  #L35a0e4.  v0:= v0 + 6;
  #L35a0e8.  v4:= v32[v0];
  #L35a0ec.  v4:= (`long`) v4 @kind i2l;
  #L35a0ee.  v4:= v4 ^& v19 @kind long;
  #L35a0f2.  v6:= v17 @kind wide;
  #L35a0f6.  v17:= v6 + v4 @kind long;
  #L35a0fa.  v1:= v1 + v17 @kind long;
  #L35a0fe.  v4:= (`int`) v1 @kind l2i;
  #L35a100.  v32[v0]:= v4;
  #L35a104.  v17:= v1 ^>> v3 @kind long;
  #L35a108.  v0:= v16;
  #L35a10c.  v3:= v19 @kind wide;
  #L35a110.  v13:= v21 @kind wide;
  #L35a114.  v1:= v24 @kind wide;
  #L35a118.  v5:= v26 @kind wide;
  #L35a11c.  v7:= v28 @kind wide;
  #L35a120.  goto L359ff6;
  #L35a124.  v6:= v17 @kind wide;
  #L35a128.  v0:= (`int`) v6 @kind l2i;
  #L35a12a.  return v0;
}
procedure `void` `u`(`int`[] v36 @kind object, `int` v37 , `int`[] v38 @kind object, `int` v39 ) @signature `Ln/a/a/c/b;.u:([II[II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;

  #L35aa50.  v0:= v37 + 0;
  #L35aa54.  v0:= v36[v0];
  #L35aa58.  v0:= (`long`) v0 @kind i2l;
  #L35aa5a.  v2:= 4294967295L;
  #L35aa64.  v0:= v0 ^& v2 @kind long;
  #L35aa66.  v5:= 0I;
  #L35aa68.  v6:= 12I;
  #L35aa6c.  v7:= 5I;
  #L35aa6e.  v8:= v7 + -1;
  #L35aa72.  v7:= v37 + v7 @kind int;
  #L35aa76.  v7:= v36[v7];
  #L35aa7a.  v9:= (`long`) v7 @kind i2l;
  #L35aa7c.  v9:= v9 ^& v2 @kind long;
  #L35aa7e.  v9:= v9 * v9 @kind long;
  #L35aa82.  v6:= v6 + -1;
  #L35aa86.  v7:= v39 + v6 @kind int;
  #L35aa8a.  v5:= v5 ^< 31;
  #L35aa8e.  v11:= 33I;
  #L35aa92.  v12:= v9 ^>> v11 @kind long;
  #L35aa96.  v13:= (`int`) v12 @kind l2i;
  #L35aa98.  v5:= v5 ^| v13 @kind int;
  #L35aa9a.  v38[v7]:= v5;
  #L35aa9e.  v6:= v6 + -1;
  #L35aaa2.  v5:= v39 + v6 @kind int;
  #L35aaa6.  v7:= 1I;
  #L35aaa8.  v12:= v9 ^>> v7 @kind long;
  #L35aaac.  v13:= (`int`) v12 @kind l2i;
  #L35aaae.  v38[v5]:= v13;
  #L35aab2.  v5:= (`int`) v9 @kind l2i;
  #L35aab4.  if v8 > 0 then goto L35ad84;
  #L35aab8.  v8:= v0 * v0 @kind long;
  #L35aabc.  v5:= v5 ^< 31;
  #L35aac0.  v5:= (`long`) v5 @kind i2l;
  #L35aac2.  v5:= v5 ^& v2 @kind long;
  #L35aac4.  v10:= v8 ^>> v11 @kind long;
  #L35aac8.  v5:= v5 ^| v10 @kind long;
  #L35aaca.  v10:= v39 + 0;
  #L35aace.  v11:= (`int`) v8 @kind l2i;
  #L35aad0.  v38[v10]:= v11;
  #L35aad4.  v10:= 32I;
  #L35aad8.  v8:= v8 ^>> v10 @kind long;
  #L35aada.  v9:= (`int`) v8 @kind l2i;
  #L35aadc.  v8:= v9 ^& 1;
  #L35aae0.  v9:= v37 + 1;
  #L35aae4.  v9:= v36[v9];
  #L35aae8.  v11:= (`long`) v9 @kind i2l;
  #L35aaea.  v11:= v11 ^& v2 @kind long;
  #L35aaec.  v9:= v39 + 2;
  #L35aaf0.  v13:= v38[v9];
  #L35aaf4.  v13:= (`long`) v13 @kind i2l;
  #L35aaf6.  v13:= v13 ^& v2 @kind long;
  #L35aaf8.  v15:= v11 * v0 @kind long;
  #L35aafc.  v5:= v5 + v15 @kind long;
  #L35aafe.  v15:= (`int`) v5 @kind l2i;
  #L35ab00.  v16:= v39 + 1;
  #L35ab04.  v17:= v15 ^< 1;
  #L35ab08.  v8:= v17 ^| v8 @kind int;
  #L35ab0c.  v38[v16]:= v8;
  #L35ab10.  v8:= v15 ^>> 31;
  #L35ab14.  v5:= v5 ^>> v10 @kind long;
  #L35ab16.  v13:= v13 + v5 @kind long;
  #L35ab18.  v5:= v37 + 2;
  #L35ab1c.  v5:= v36[v5];
  #L35ab20.  v5:= (`long`) v5 @kind i2l;
  #L35ab22.  v5:= v5 ^& v2 @kind long;
  #L35ab24.  v15:= v39 + 3;
  #L35ab28.  v7:= v38[v15];
  #L35ab2c.  v18:= v11 @kind wide;
  #L35ab30.  v10:= (`long`) v7 @kind i2l;
  #L35ab32.  v10:= v10 ^& v2 @kind long;
  #L35ab34.  v7:= v39 + 4;
  #L35ab38.  v12:= v38[v7];
  #L35ab3c.  v20:= v10 @kind wide;
  #L35ab40.  v10:= (`long`) v12 @kind i2l;
  #L35ab42.  v10:= v10 ^& v2 @kind long;
  #L35ab44.  v22:= v5 * v0 @kind long;
  #L35ab48.  v13:= v13 + v22 @kind long;
  #L35ab4c.  v12:= (`int`) v13 @kind l2i;
  #L35ab4e.  v22:= v12 ^< 1;
  #L35ab52.  v8:= v22 ^| v8 @kind int;
  #L35ab56.  v38[v9]:= v8;
  #L35ab5a.  v8:= v12 ^>> 31;
  #L35ab5e.  v9:= 32I;
  #L35ab62.  v12:= v13 ^>> v9 @kind long;
  #L35ab66.  v22:= v5 * v18 @kind long;
  #L35ab6a.  v12:= v12 + v22 @kind long;
  #L35ab6e.  v12:= v20 + v12 @kind long;
  #L35ab72.  v20:= v12 ^>> v9 @kind long;
  #L35ab76.  v10:= v10 + v20 @kind long;
  #L35ab7a.  v12:= v12 ^& v2 @kind long;
  #L35ab7c.  v9:= v37 + 3;
  #L35ab80.  v9:= v36[v9];
  #L35ab84.  v20:= v5 @kind wide;
  #L35ab88.  v4:= (`long`) v9 @kind i2l;
  #L35ab8a.  v4:= v4 ^& v2 @kind long;
  #L35ab8c.  v6:= v39 + 5;
  #L35ab90.  v9:= v38[v6];
  #L35ab94.  v22:= v15;
  #L35ab98.  v14:= (`long`) v9 @kind i2l;
  #L35ab9a.  v14:= v14 ^& v2 @kind long;
  #L35ab9c.  v9:= v39 + 6;
  #L35aba0.  v24:= v6;
  #L35aba4.  v6:= v38[v9];
  #L35aba8.  v25:= v7;
  #L35abac.  v6:= (`long`) v6 @kind i2l;
  #L35abae.  v6:= v6 ^& v2 @kind long;
  #L35abb0.  v26:= v4 * v0 @kind long;
  #L35abb4.  v12:= v12 + v26 @kind long;
  #L35abb8.  v2:= (`int`) v12 @kind l2i;
  #L35abba.  v3:= v2 ^< 1;
  #L35abbe.  v3:= v3 ^| v8 @kind int;
  #L35abc0.  v38[v22]:= v3;
  #L35abc4.  v2:= v2 ^>> 31;
  #L35abc8.  v3:= 32I;
  #L35abcc.  v12:= v12 ^>> v3 @kind long;
  #L35abce.  v28:= v4 * v18 @kind long;
  #L35abd2.  v12:= v12 + v28 @kind long;
  #L35abd6.  v10:= v10 + v12 @kind long;
  #L35abd8.  v12:= v10 ^>> v3 @kind long;
  #L35abdc.  v28:= v4 * v20 @kind long;
  #L35abe0.  v12:= v12 + v28 @kind long;
  #L35abe4.  v14:= v14 + v12 @kind long;
  #L35abe6.  v12:= 4294967295L;
  #L35abf0.  v10:= v10 ^& v12 @kind long;
  #L35abf2.  v26:= v14 ^>> v3 @kind long;
  #L35abf6.  v6:= v6 + v26 @kind long;
  #L35abfa.  v14:= v14 ^& v12 @kind long;
  #L35abfc.  v3:= v37 + 4;
  #L35ac00.  v3:= v36[v3];
  #L35ac04.  v22:= v9;
  #L35ac08.  v8:= (`long`) v3 @kind i2l;
  #L35ac0a.  v8:= v8 ^& v12 @kind long;
  #L35ac0c.  v3:= v39 + 7;
  #L35ac10.  v28:= v4 @kind wide;
  #L35ac14.  v4:= v38[v3];
  #L35ac18.  v4:= (`long`) v4 @kind i2l;
  #L35ac1a.  v4:= v4 ^& v12 @kind long;
  #L35ac1c.  v30:= v39 + 8;
  #L35ac20.  v31:= v3;
  #L35ac24.  v3:= v38[v30];
  #L35ac28.  v32:= v4 @kind wide;
  #L35ac2c.  v3:= (`long`) v3 @kind i2l;
  #L35ac2e.  v3:= v3 ^& v12 @kind long;
  #L35ac30.  v12:= v8 * v0 @kind long;
  #L35ac34.  v10:= v10 + v12 @kind long;
  #L35ac36.  v5:= (`int`) v10 @kind l2i;
  #L35ac38.  v12:= v5 ^< 1;
  #L35ac3c.  v2:= v2 ^| v12 @kind int;
  #L35ac3e.  v38[v25]:= v2;
  #L35ac42.  v2:= v5 ^>> 31;
  #L35ac46.  v5:= 32I;
  #L35ac4a.  v10:= v10 ^>> v5 @kind long;
  #L35ac4c.  v12:= v8 * v18 @kind long;
  #L35ac50.  v10:= v10 + v12 @kind long;
  #L35ac52.  v14:= v14 + v10 @kind long;
  #L35ac54.  v10:= v14 ^>> v5 @kind long;
  #L35ac58.  v12:= v8 * v20 @kind long;
  #L35ac5c.  v10:= v10 + v12 @kind long;
  #L35ac5e.  v6:= v6 + v10 @kind long;
  #L35ac60.  v10:= 4294967295L;
  #L35ac6a.  v12:= v14 ^& v10 @kind long;
  #L35ac6e.  v14:= v6 ^>> v5 @kind long;
  #L35ac72.  v25:= v8 * v28 @kind long;
  #L35ac76.  v14:= v14 + v25 @kind long;
  #L35ac7a.  v14:= v32 + v14 @kind long;
  #L35ac7e.  v6:= v6 ^& v10 @kind long;
  #L35ac80.  v25:= v14 ^>> v5 @kind long;
  #L35ac84.  v3:= v3 + v25 @kind long;
  #L35ac88.  v14:= v14 ^& v10 @kind long;
  #L35ac8a.  v23:= 5I;
  #L35ac8e.  v5:= v37 + 5;
  #L35ac92.  v5:= v36[v5];
  #L35ac96.  v25:= v8 @kind wide;
  #L35ac9a.  v8:= (`long`) v5 @kind i2l;
  #L35ac9c.  v8:= v8 ^& v10 @kind long;
  #L35ac9e.  v5:= v39 + 9;
  #L35aca2.  v32:= v3 @kind wide;
  #L35aca6.  v3:= v38[v5];
  #L35acaa.  v3:= (`long`) v3 @kind i2l;
  #L35acac.  v3:= v3 ^& v10 @kind long;
  #L35acae.  v23:= v39 + 10;
  #L35acb2.  v36:= v5;
  #L35acb6.  v5:= v38[v23];
  #L35acba.  v34:= v3 @kind wide;
  #L35acbe.  v3:= (`long`) v5 @kind i2l;
  #L35acc0.  v3:= v3 ^& v10 @kind long;
  #L35acc2.  v0:= v0 * v8 @kind long;
  #L35acc6.  v12:= v12 + v0 @kind long;
  #L35acc8.  v0:= (`int`) v12 @kind l2i;
  #L35acca.  v1:= v0 ^< 1;
  #L35acce.  v1:= v1 ^| v2 @kind int;
  #L35acd0.  v38[v24]:= v1;
  #L35acd4.  v0:= v0 ^>> 31;
  #L35acd8.  v1:= 32I;
  #L35acdc.  v10:= v12 ^>> v1 @kind long;
  #L35ace0.  v12:= v8 * v18 @kind long;
  #L35ace4.  v10:= v10 + v12 @kind long;
  #L35ace6.  v6:= v6 + v10 @kind long;
  #L35ace8.  v10:= v6 ^>> v1 @kind long;
  #L35acec.  v12:= v8 * v20 @kind long;
  #L35acf0.  v10:= v10 + v12 @kind long;
  #L35acf2.  v14:= v14 + v10 @kind long;
  #L35acf4.  v10:= v14 ^>> v1 @kind long;
  #L35acf8.  v12:= v8 * v28 @kind long;
  #L35acfc.  v10:= v10 + v12 @kind long;
  #L35acfe.  v10:= v32 + v10 @kind long;
  #L35ad02.  v12:= v10 ^>> v1 @kind long;
  #L35ad06.  v8:= v8 * v25 @kind long;
  #L35ad0a.  v12:= v12 + v8 @kind long;
  #L35ad0c.  v8:= v34 + v12 @kind long;
  #L35ad10.  v12:= v8 ^>> v1 @kind long;
  #L35ad14.  v3:= v3 + v12 @kind long;
  #L35ad16.  v1:= (`int`) v6 @kind l2i;
  #L35ad18.  v2:= v1 ^< 1;
  #L35ad1c.  v0:= v0 ^| v2 @kind int;
  #L35ad1e.  v38[v22]:= v0;
  #L35ad22.  v0:= v1 ^>> 31;
  #L35ad26.  v1:= (`int`) v14 @kind l2i;
  #L35ad28.  v2:= v1 ^< 1;
  #L35ad2c.  v0:= v0 ^| v2 @kind int;
  #L35ad2e.  v38[v31]:= v0;
  #L35ad32.  v0:= v1 ^>> 31;
  #L35ad36.  v1:= (`int`) v10 @kind l2i;
  #L35ad38.  v2:= v1 ^< 1;
  #L35ad3c.  v0:= v0 ^| v2 @kind int;
  #L35ad3e.  v38[v30]:= v0;
  #L35ad42.  v0:= v1 ^>> 31;
  #L35ad46.  v1:= (`int`) v8 @kind l2i;
  #L35ad48.  v2:= v1 ^< 1;
  #L35ad4c.  v0:= v0 ^| v2 @kind int;
  #L35ad4e.  v38[v36]:= v0;
  #L35ad52.  v0:= v1 ^>> 31;
  #L35ad56.  v1:= (`int`) v3 @kind l2i;
  #L35ad58.  v2:= v1 ^< 1;
  #L35ad5c.  v0:= v0 ^| v2 @kind int;
  #L35ad5e.  v38[v23]:= v0;
  #L35ad62.  v0:= v1 ^>> 31;
  #L35ad66.  v1:= v39 + 11;
  #L35ad6a.  v2:= v38[v1];
  #L35ad6e.  v5:= 32I;
  #L35ad72.  v3:= v3 ^> v5 @kind long;
  #L35ad74.  v4:= (`int`) v3 @kind l2i;
  #L35ad76.  v2:= v2 + v4 @kind int;
  #L35ad78.  v3:= 1I;
  #L35ad7a.  v2:= v2 ^< v3 @kind int;
  #L35ad7c.  v0:= v0 ^| v2 @kind int;
  #L35ad7e.  v38[v1]:= v0;
  #L35ad82.  return @kind void;
  #L35ad84.  v7:= v8;
  #L35ad86.  goto L35aa6e;
}
procedure `void` `v`(`int`[] v36 @kind object, `int`[] v37 @kind object) @signature `Ln/a/a/c/b;.v:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;

  #L35ad9c.  v0:= 0I;
  #L35ad9e.  v1:= v36[v0];
  #L35ada2.  v1:= (`long`) v1 @kind i2l;
  #L35ada4.  v3:= 4294967295L;
  #L35adae.  v1:= v1 ^& v3 @kind long;
  #L35adb0.  v6:= 12I;
  #L35adb4.  v7:= 5I;
  #L35adb6.  v8:= 0I;
  #L35adb8.  v9:= v7 + -1;
  #L35adbc.  v7:= v36[v7];
  #L35adc0.  v10:= (`long`) v7 @kind i2l;
  #L35adc2.  v10:= v10 ^& v3 @kind long;
  #L35adc4.  v10:= v10 * v10 @kind long;
  #L35adc8.  v6:= v6 + -1;
  #L35adcc.  v7:= v8 ^< 31;
  #L35add0.  v8:= 33I;
  #L35add4.  v12:= v10 ^>> v8 @kind long;
  #L35add8.  v13:= (`int`) v12 @kind l2i;
  #L35adda.  v7:= v7 ^| v13 @kind int;
  #L35addc.  v37[v6]:= v7;
  #L35ade0.  v6:= v6 + -1;
  #L35ade4.  v7:= 1I;
  #L35ade6.  v12:= v10 ^>> v7 @kind long;
  #L35adea.  v13:= (`int`) v12 @kind l2i;
  #L35adec.  v37[v6]:= v13;
  #L35adf0.  v11:= (`int`) v10 @kind l2i;
  #L35adf2.  if v9 > 0 then goto L35b08c;
  #L35adf6.  v9:= v1 * v1 @kind long;
  #L35adfa.  v6:= v11 ^< 31;
  #L35adfe.  v11:= (`long`) v6 @kind i2l;
  #L35ae00.  v11:= v11 ^& v3 @kind long;
  #L35ae02.  v13:= v9 ^>> v8 @kind long;
  #L35ae06.  v11:= v11 ^| v13 @kind long;
  #L35ae08.  v6:= (`int`) v9 @kind l2i;
  #L35ae0a.  v37[v0]:= v6;
  #L35ae0e.  v0:= 32I;
  #L35ae12.  v8:= v9 ^>> v0 @kind long;
  #L35ae16.  v6:= (`int`) v8 @kind l2i;
  #L35ae18.  v6:= v6 ^& v7 @kind int;
  #L35ae1a.  v8:= v36[v7];
  #L35ae1e.  v8:= (`long`) v8 @kind i2l;
  #L35ae20.  v8:= v8 ^& v3 @kind long;
  #L35ae22.  v10:= 2I;
  #L35ae24.  v13:= v37[v10];
  #L35ae28.  v13:= (`long`) v13 @kind i2l;
  #L35ae2a.  v13:= v13 ^& v3 @kind long;
  #L35ae2c.  v15:= v8 * v1 @kind long;
  #L35ae30.  v11:= v11 + v15 @kind long;
  #L35ae32.  v15:= (`int`) v11 @kind l2i;
  #L35ae34.  v16:= v15 ^< 1;
  #L35ae38.  v6:= v16 ^| v6 @kind int;
  #L35ae3c.  v37[v7]:= v6;
  #L35ae40.  v6:= v15 ^>> 31;
  #L35ae44.  v11:= v11 ^>> v0 @kind long;
  #L35ae46.  v13:= v13 + v11 @kind long;
  #L35ae48.  v11:= v36[v10];
  #L35ae4c.  v11:= (`long`) v11 @kind i2l;
  #L35ae4e.  v11:= v11 ^& v3 @kind long;
  #L35ae50.  v15:= 3I;
  #L35ae52.  v7:= v37[v15];
  #L35ae56.  v18:= v6;
  #L35ae5a.  v5:= (`long`) v7 @kind i2l;
  #L35ae5c.  v5:= v5 ^& v3 @kind long;
  #L35ae5e.  v7:= 4I;
  #L35ae60.  v15:= v37[v7];
  #L35ae64.  v20:= v8 @kind wide;
  #L35ae68.  v7:= (`long`) v15 @kind i2l;
  #L35ae6a.  v7:= v7 ^& v3 @kind long;
  #L35ae6c.  v22:= v11 * v1 @kind long;
  #L35ae70.  v13:= v13 + v22 @kind long;
  #L35ae74.  v15:= (`int`) v13 @kind l2i;
  #L35ae76.  v22:= v15 ^< 1;
  #L35ae7a.  v18:= v22 ^| v18 @kind int;
  #L35ae7e.  v37[v10]:= v18;
  #L35ae82.  v10:= v15 ^>> 31;
  #L35ae86.  v13:= v13 ^>> v0 @kind long;
  #L35ae88.  v22:= v11 * v20 @kind long;
  #L35ae8c.  v13:= v13 + v22 @kind long;
  #L35ae90.  v5:= v5 + v13 @kind long;
  #L35ae92.  v13:= v5 ^>> v0 @kind long;
  #L35ae96.  v7:= v7 + v13 @kind long;
  #L35ae98.  v5:= v5 ^& v3 @kind long;
  #L35ae9a.  v13:= 3I;
  #L35ae9c.  v14:= v36[v13];
  #L35aea0.  v13:= (`long`) v14 @kind i2l;
  #L35aea2.  v13:= v13 ^& v3 @kind long;
  #L35aea4.  v15:= 5I;
  #L35aea6.  v9:= v37[v15];
  #L35aeaa.  v22:= v1 @kind wide;
  #L35aeae.  v0:= (`long`) v9 @kind i2l;
  #L35aeb0.  v0:= v0 ^& v3 @kind long;
  #L35aeb2.  v15:= 6I;
  #L35aeb4.  v9:= v37[v15];
  #L35aeb8.  v24:= v0 @kind wide;
  #L35aebc.  v0:= (`long`) v9 @kind i2l;
  #L35aebe.  v0:= v0 ^& v3 @kind long;
  #L35aec0.  v26:= v13 * v22 @kind long;
  #L35aec4.  v5:= v5 + v26 @kind long;
  #L35aec8.  v9:= (`int`) v5 @kind l2i;
  #L35aeca.  v26:= v9 ^< 1;
  #L35aece.  v10:= v26 ^| v10 @kind int;
  #L35aed2.  v19:= 3I;
  #L35aed6.  v37[v19]:= v10;
  #L35aeda.  v10:= v9 ^>> 31;
  #L35aede.  v2:= 32I;
  #L35aee2.  v5:= v5 ^>> v2 @kind long;
  #L35aee4.  v26:= v13 * v20 @kind long;
  #L35aee8.  v5:= v5 + v26 @kind long;
  #L35aeec.  v7:= v7 + v5 @kind long;
  #L35aeee.  v5:= v7 ^>> v2 @kind long;
  #L35aef2.  v26:= v13 * v11 @kind long;
  #L35aef6.  v5:= v5 + v26 @kind long;
  #L35aefa.  v5:= v24 + v5 @kind long;
  #L35aefe.  v7:= v7 ^& v3 @kind long;
  #L35af00.  v24:= v5 ^>> v2 @kind long;
  #L35af04.  v0:= v0 + v24 @kind long;
  #L35af08.  v5:= v5 ^& v3 @kind long;
  #L35af0a.  v9:= 4I;
  #L35af0c.  v2:= v36[v9];
  #L35af10.  v19:= v10;
  #L35af14.  v9:= (`long`) v2 @kind i2l;
  #L35af16.  v9:= v9 ^& v3 @kind long;
  #L35af18.  v25:= 7I;
  #L35af1c.  v2:= v37[v25];
  #L35af20.  v26:= v13 @kind wide;
  #L35af24.  v13:= (`long`) v2 @kind i2l;
  #L35af26.  v13:= v13 ^& v3 @kind long;
  #L35af28.  v28:= 8I;
  #L35af2c.  v2:= v37[v28];
  #L35af30.  v29:= v13 @kind wide;
  #L35af34.  v13:= (`long`) v2 @kind i2l;
  #L35af36.  v13:= v13 ^& v3 @kind long;
  #L35af38.  v31:= v9 * v22 @kind long;
  #L35af3c.  v7:= v7 + v31 @kind long;
  #L35af40.  v2:= (`int`) v7 @kind l2i;
  #L35af42.  v31:= v2 ^< 1;
  #L35af46.  v19:= v31 ^| v19 @kind int;
  #L35af4a.  v24:= 4I;
  #L35af4e.  v37[v24]:= v19;
  #L35af52.  v19:= v2 ^>> 31;
  #L35af56.  v2:= 32I;
  #L35af5a.  v7:= v7 ^>> v2 @kind long;
  #L35af5c.  v31:= v9 * v20 @kind long;
  #L35af60.  v7:= v7 + v31 @kind long;
  #L35af64.  v5:= v5 + v7 @kind long;
  #L35af66.  v7:= v5 ^>> v2 @kind long;
  #L35af6a.  v31:= v9 * v11 @kind long;
  #L35af6e.  v7:= v7 + v31 @kind long;
  #L35af72.  v0:= v0 + v7 @kind long;
  #L35af74.  v5:= v5 ^& v3 @kind long;
  #L35af76.  v7:= v0 ^>> v2 @kind long;
  #L35af7a.  v31:= v9 * v26 @kind long;
  #L35af7e.  v7:= v7 + v31 @kind long;
  #L35af82.  v7:= v29 + v7 @kind long;
  #L35af86.  v0:= v0 ^& v3 @kind long;
  #L35af88.  v29:= v7 ^>> v2 @kind long;
  #L35af8c.  v13:= v13 + v29 @kind long;
  #L35af90.  v7:= v7 ^& v3 @kind long;
  #L35af92.  v17:= 5I;
  #L35af96.  v2:= v36[v17];
  #L35af9a.  v29:= v9 @kind wide;
  #L35af9e.  v9:= (`long`) v2 @kind i2l;
  #L35afa0.  v9:= v9 ^& v3 @kind long;
  #L35afa2.  v24:= 9I;
  #L35afa6.  v2:= v37[v24];
  #L35afaa.  v31:= v13 @kind wide;
  #L35afae.  v13:= (`long`) v2 @kind i2l;
  #L35afb0.  v13:= v13 ^& v3 @kind long;
  #L35afb2.  v33:= 10I;
  #L35afb6.  v2:= v37[v33];
  #L35afba.  v34:= v13 @kind wide;
  #L35afbe.  v13:= (`long`) v2 @kind i2l;
  #L35afc0.  v3:= v3 ^& v13 @kind long;
  #L35afc2.  v13:= v9 * v22 @kind long;
  #L35afc6.  v5:= v5 + v13 @kind long;
  #L35afc8.  v2:= (`int`) v5 @kind l2i;
  #L35afca.  v13:= v2 ^< 1;
  #L35afce.  v13:= v13 ^| v19 @kind int;
  #L35afd2.  v14:= 5I;
  #L35afd4.  v37[v14]:= v13;
  #L35afd8.  v13:= v2 ^>> 31;
  #L35afdc.  v2:= 32I;
  #L35afe0.  v5:= v5 ^>> v2 @kind long;
  #L35afe2.  v17:= v9 * v20 @kind long;
  #L35afe6.  v5:= v5 + v17 @kind long;
  #L35afea.  v0:= v0 + v5 @kind long;
  #L35afec.  v5:= v0 ^>> v2 @kind long;
  #L35aff0.  v11:= v11 * v9 @kind long;
  #L35aff4.  v5:= v5 + v11 @kind long;
  #L35aff6.  v7:= v7 + v5 @kind long;
  #L35aff8.  v5:= v7 ^>> v2 @kind long;
  #L35affc.  v11:= v9 * v26 @kind long;
  #L35b000.  v5:= v5 + v11 @kind long;
  #L35b002.  v5:= v31 + v5 @kind long;
  #L35b006.  v11:= v5 ^>> v2 @kind long;
  #L35b00a.  v9:= v9 * v29 @kind long;
  #L35b00e.  v11:= v11 + v9 @kind long;
  #L35b010.  v9:= v34 + v11 @kind long;
  #L35b014.  v11:= v9 ^>> v2 @kind long;
  #L35b018.  v3:= v3 + v11 @kind long;
  #L35b01a.  v1:= (`int`) v0 @kind l2i;
  #L35b01c.  v0:= v1 ^< 1;
  #L35b020.  v0:= v0 ^| v13 @kind int;
  #L35b022.  v37[v15]:= v0;
  #L35b026.  v0:= v1 ^>> 31;
  #L35b02a.  v1:= (`int`) v7 @kind l2i;
  #L35b02c.  v7:= v1 ^< 1;
  #L35b030.  v0:= v0 ^| v7 @kind int;
  #L35b032.  v37[v25]:= v0;
  #L35b036.  v0:= v1 ^>> 31;
  #L35b03a.  v1:= (`int`) v5 @kind l2i;
  #L35b03c.  v5:= v1 ^< 1;
  #L35b040.  v0:= v0 ^| v5 @kind int;
  #L35b042.  v37[v28]:= v0;
  #L35b046.  v0:= v1 ^>> 31;
  #L35b04a.  v1:= (`int`) v9 @kind l2i;
  #L35b04c.  v5:= v1 ^< 1;
  #L35b050.  v0:= v0 ^| v5 @kind int;
  #L35b052.  v37[v24]:= v0;
  #L35b056.  v0:= v1 ^>> 31;
  #L35b05a.  v1:= (`int`) v3 @kind l2i;
  #L35b05c.  v5:= v1 ^< 1;
  #L35b060.  v0:= v0 ^| v5 @kind int;
  #L35b062.  v37[v33]:= v0;
  #L35b066.  v0:= v1 ^>> 31;
  #L35b06a.  v1:= 11I;
  #L35b06e.  v5:= v37[v1];
  #L35b072.  v2:= 32I;
  #L35b076.  v2:= v3 ^> v2 @kind long;
  #L35b07a.  v3:= (`int`) v2 @kind l2i;
  #L35b07c.  v5:= v5 + v3 @kind int;
  #L35b07e.  v2:= 1I;
  #L35b080.  v2:= v5 ^< 1;
  #L35b084.  v0:= v0 ^| v2 @kind int;
  #L35b086.  v37[v1]:= v0;
  #L35b08a.  return @kind void;
  #L35b08c.  v7:= v9;
  #L35b08e.  v8:= v11;
  #L35b090.  goto L35adb8;
}
procedure `int` `w`(`int`[] v9 @kind object, `int` v10 , `int`[] v11 @kind object, `int` v12 , `int`[] v13 @kind object, `int` v14 ) @signature `Ln/a/a/c/b;.w:([II[II[II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L35a13c.  v0:= v10 + 0;
  #L35a140.  v0:= v9[v0];
  #L35a144.  v0:= (`long`) v0 @kind i2l;
  #L35a146.  v2:= 4294967295L;
  #L35a150.  v0:= v0 ^& v2 @kind long;
  #L35a152.  v4:= v12 + 0;
  #L35a156.  v4:= v11[v4];
  #L35a15a.  v4:= (`long`) v4 @kind i2l;
  #L35a15c.  v4:= v4 ^& v2 @kind long;
  #L35a15e.  v0:= v0 - v4 @kind long;
  #L35a160.  v4:= 0L;
  #L35a164.  v0:= v0 + v4 @kind long;
  #L35a166.  v4:= v14 + 0;
  #L35a16a.  v5:= (`int`) v0 @kind l2i;
  #L35a16c.  v13[v4]:= v5;
  #L35a170.  v4:= 32I;
  #L35a174.  v0:= v0 ^> v4 @kind long;
  #L35a176.  v5:= v10 + 1;
  #L35a17a.  v5:= v9[v5];
  #L35a17e.  v5:= (`long`) v5 @kind i2l;
  #L35a180.  v5:= v5 ^& v2 @kind long;
  #L35a182.  v7:= v12 + 1;
  #L35a186.  v7:= v11[v7];
  #L35a18a.  v7:= (`long`) v7 @kind i2l;
  #L35a18c.  v7:= v7 ^& v2 @kind long;
  #L35a18e.  v5:= v5 - v7 @kind long;
  #L35a190.  v0:= v0 + v5 @kind long;
  #L35a192.  v5:= v14 + 1;
  #L35a196.  v6:= (`int`) v0 @kind l2i;
  #L35a198.  v13[v5]:= v6;
  #L35a19c.  v0:= v0 ^> v4 @kind long;
  #L35a19e.  v5:= v10 + 2;
  #L35a1a2.  v5:= v9[v5];
  #L35a1a6.  v5:= (`long`) v5 @kind i2l;
  #L35a1a8.  v5:= v5 ^& v2 @kind long;
  #L35a1aa.  v7:= v12 + 2;
  #L35a1ae.  v7:= v11[v7];
  #L35a1b2.  v7:= (`long`) v7 @kind i2l;
  #L35a1b4.  v7:= v7 ^& v2 @kind long;
  #L35a1b6.  v5:= v5 - v7 @kind long;
  #L35a1b8.  v0:= v0 + v5 @kind long;
  #L35a1ba.  v5:= v14 + 2;
  #L35a1be.  v6:= (`int`) v0 @kind l2i;
  #L35a1c0.  v13[v5]:= v6;
  #L35a1c4.  v0:= v0 ^> v4 @kind long;
  #L35a1c6.  v5:= v10 + 3;
  #L35a1ca.  v5:= v9[v5];
  #L35a1ce.  v5:= (`long`) v5 @kind i2l;
  #L35a1d0.  v5:= v5 ^& v2 @kind long;
  #L35a1d2.  v7:= v12 + 3;
  #L35a1d6.  v7:= v11[v7];
  #L35a1da.  v7:= (`long`) v7 @kind i2l;
  #L35a1dc.  v7:= v7 ^& v2 @kind long;
  #L35a1de.  v5:= v5 - v7 @kind long;
  #L35a1e0.  v0:= v0 + v5 @kind long;
  #L35a1e2.  v5:= v14 + 3;
  #L35a1e6.  v6:= (`int`) v0 @kind l2i;
  #L35a1e8.  v13[v5]:= v6;
  #L35a1ec.  v0:= v0 ^> v4 @kind long;
  #L35a1ee.  v5:= v10 + 4;
  #L35a1f2.  v5:= v9[v5];
  #L35a1f6.  v5:= (`long`) v5 @kind i2l;
  #L35a1f8.  v5:= v5 ^& v2 @kind long;
  #L35a1fa.  v7:= v12 + 4;
  #L35a1fe.  v7:= v11[v7];
  #L35a202.  v7:= (`long`) v7 @kind i2l;
  #L35a204.  v7:= v7 ^& v2 @kind long;
  #L35a206.  v5:= v5 - v7 @kind long;
  #L35a208.  v0:= v0 + v5 @kind long;
  #L35a20a.  v5:= v14 + 4;
  #L35a20e.  v6:= (`int`) v0 @kind l2i;
  #L35a210.  v13[v5]:= v6;
  #L35a214.  v0:= v0 ^> v4 @kind long;
  #L35a216.  v10:= v10 + 5;
  #L35a21a.  v9:= v9[v10];
  #L35a21e.  v9:= (`long`) v9 @kind i2l;
  #L35a220.  v9:= v9 ^& v2 @kind long;
  #L35a222.  v12:= v12 + 5;
  #L35a226.  v11:= v11[v12];
  #L35a22a.  v11:= (`long`) v11 @kind i2l;
  #L35a22c.  v11:= v11 ^& v2 @kind long;
  #L35a22e.  v9:= v9 - v11 @kind long;
  #L35a230.  v0:= v0 + v9 @kind long;
  #L35a232.  v14:= v14 + 5;
  #L35a236.  v9:= (`int`) v0 @kind l2i;
  #L35a238.  v13[v14]:= v9;
  #L35a23c.  v9:= v0 ^> v4 @kind long;
  #L35a240.  v10:= (`int`) v9 @kind l2i;
  #L35a242.  return v10;
}
procedure `int` `x`(`int`[] v10 @kind object, `int`[] v11 @kind object, `int`[] v12 @kind object) @signature `Ln/a/a/c/b;.x:([I[I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35a254.  v0:= 0I;
  #L35a256.  v1:= v10[v0];
  #L35a25a.  v1:= (`long`) v1 @kind i2l;
  #L35a25c.  v3:= 4294967295L;
  #L35a266.  v1:= v1 ^& v3 @kind long;
  #L35a268.  v5:= v11[v0];
  #L35a26c.  v5:= (`long`) v5 @kind i2l;
  #L35a26e.  v5:= v5 ^& v3 @kind long;
  #L35a270.  v1:= v1 - v5 @kind long;
  #L35a272.  v5:= 0L;
  #L35a276.  v1:= v1 + v5 @kind long;
  #L35a278.  v5:= (`int`) v1 @kind l2i;
  #L35a27a.  v12[v0]:= v5;
  #L35a27e.  v0:= 32I;
  #L35a282.  v1:= v1 ^> v0 @kind long;
  #L35a284.  v5:= 1I;
  #L35a286.  v6:= v10[v5];
  #L35a28a.  v6:= (`long`) v6 @kind i2l;
  #L35a28c.  v6:= v6 ^& v3 @kind long;
  #L35a28e.  v8:= v11[v5];
  #L35a292.  v8:= (`long`) v8 @kind i2l;
  #L35a294.  v8:= v8 ^& v3 @kind long;
  #L35a296.  v6:= v6 - v8 @kind long;
  #L35a298.  v1:= v1 + v6 @kind long;
  #L35a29a.  v6:= (`int`) v1 @kind l2i;
  #L35a29c.  v12[v5]:= v6;
  #L35a2a0.  v1:= v1 ^> v0 @kind long;
  #L35a2a2.  v5:= 2I;
  #L35a2a4.  v6:= v10[v5];
  #L35a2a8.  v6:= (`long`) v6 @kind i2l;
  #L35a2aa.  v6:= v6 ^& v3 @kind long;
  #L35a2ac.  v8:= v11[v5];
  #L35a2b0.  v8:= (`long`) v8 @kind i2l;
  #L35a2b2.  v8:= v8 ^& v3 @kind long;
  #L35a2b4.  v6:= v6 - v8 @kind long;
  #L35a2b6.  v1:= v1 + v6 @kind long;
  #L35a2b8.  v6:= (`int`) v1 @kind l2i;
  #L35a2ba.  v12[v5]:= v6;
  #L35a2be.  v1:= v1 ^> v0 @kind long;
  #L35a2c0.  v5:= 3I;
  #L35a2c2.  v6:= v10[v5];
  #L35a2c6.  v6:= (`long`) v6 @kind i2l;
  #L35a2c8.  v6:= v6 ^& v3 @kind long;
  #L35a2ca.  v8:= v11[v5];
  #L35a2ce.  v8:= (`long`) v8 @kind i2l;
  #L35a2d0.  v8:= v8 ^& v3 @kind long;
  #L35a2d2.  v6:= v6 - v8 @kind long;
  #L35a2d4.  v1:= v1 + v6 @kind long;
  #L35a2d6.  v6:= (`int`) v1 @kind l2i;
  #L35a2d8.  v12[v5]:= v6;
  #L35a2dc.  v1:= v1 ^> v0 @kind long;
  #L35a2de.  v5:= 4I;
  #L35a2e0.  v6:= v10[v5];
  #L35a2e4.  v6:= (`long`) v6 @kind i2l;
  #L35a2e6.  v6:= v6 ^& v3 @kind long;
  #L35a2e8.  v8:= v11[v5];
  #L35a2ec.  v8:= (`long`) v8 @kind i2l;
  #L35a2ee.  v8:= v8 ^& v3 @kind long;
  #L35a2f0.  v6:= v6 - v8 @kind long;
  #L35a2f2.  v1:= v1 + v6 @kind long;
  #L35a2f4.  v6:= (`int`) v1 @kind l2i;
  #L35a2f6.  v12[v5]:= v6;
  #L35a2fa.  v1:= v1 ^> v0 @kind long;
  #L35a2fc.  v5:= 5I;
  #L35a2fe.  v10:= v10[v5];
  #L35a302.  v6:= (`long`) v10 @kind i2l;
  #L35a304.  v6:= v6 ^& v3 @kind long;
  #L35a306.  v10:= v11[v5];
  #L35a30a.  v10:= (`long`) v10 @kind i2l;
  #L35a30c.  v10:= v10 ^& v3 @kind long;
  #L35a30e.  v6:= v6 - v10 @kind long;
  #L35a310.  v1:= v1 + v6 @kind long;
  #L35a312.  v10:= (`int`) v1 @kind l2i;
  #L35a314.  v12[v5]:= v10;
  #L35a318.  v10:= v1 ^> v0 @kind long;
  #L35a31c.  v11:= (`int`) v10 @kind l2i;
  #L35a31e.  return v11;
}
procedure `int` `y`(`int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Ln/a/a/c/b;.y:([I[I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35a330.  v0:= 0I;
  #L35a332.  v1:= v11[v0];
  #L35a336.  v1:= (`long`) v1 @kind i2l;
  #L35a338.  v3:= 4294967295L;
  #L35a342.  v1:= v1 ^& v3 @kind long;
  #L35a344.  v5:= v10[v0];
  #L35a348.  v5:= (`long`) v5 @kind i2l;
  #L35a34a.  v5:= v5 ^& v3 @kind long;
  #L35a34c.  v1:= v1 - v5 @kind long;
  #L35a34e.  v5:= 0L;
  #L35a352.  v1:= v1 + v5 @kind long;
  #L35a354.  v5:= (`int`) v1 @kind l2i;
  #L35a356.  v11[v0]:= v5;
  #L35a35a.  v0:= 32I;
  #L35a35e.  v1:= v1 ^> v0 @kind long;
  #L35a360.  v5:= 1I;
  #L35a362.  v6:= v11[v5];
  #L35a366.  v6:= (`long`) v6 @kind i2l;
  #L35a368.  v6:= v6 ^& v3 @kind long;
  #L35a36a.  v8:= v10[v5];
  #L35a36e.  v8:= (`long`) v8 @kind i2l;
  #L35a370.  v8:= v8 ^& v3 @kind long;
  #L35a372.  v6:= v6 - v8 @kind long;
  #L35a374.  v1:= v1 + v6 @kind long;
  #L35a376.  v6:= (`int`) v1 @kind l2i;
  #L35a378.  v11[v5]:= v6;
  #L35a37c.  v1:= v1 ^> v0 @kind long;
  #L35a37e.  v5:= 2I;
  #L35a380.  v6:= v11[v5];
  #L35a384.  v6:= (`long`) v6 @kind i2l;
  #L35a386.  v6:= v6 ^& v3 @kind long;
  #L35a388.  v8:= v10[v5];
  #L35a38c.  v8:= (`long`) v8 @kind i2l;
  #L35a38e.  v8:= v8 ^& v3 @kind long;
  #L35a390.  v6:= v6 - v8 @kind long;
  #L35a392.  v1:= v1 + v6 @kind long;
  #L35a394.  v6:= (`int`) v1 @kind l2i;
  #L35a396.  v11[v5]:= v6;
  #L35a39a.  v1:= v1 ^> v0 @kind long;
  #L35a39c.  v5:= 3I;
  #L35a39e.  v6:= v11[v5];
  #L35a3a2.  v6:= (`long`) v6 @kind i2l;
  #L35a3a4.  v6:= v6 ^& v3 @kind long;
  #L35a3a6.  v8:= v10[v5];
  #L35a3aa.  v8:= (`long`) v8 @kind i2l;
  #L35a3ac.  v8:= v8 ^& v3 @kind long;
  #L35a3ae.  v6:= v6 - v8 @kind long;
  #L35a3b0.  v1:= v1 + v6 @kind long;
  #L35a3b2.  v6:= (`int`) v1 @kind l2i;
  #L35a3b4.  v11[v5]:= v6;
  #L35a3b8.  v1:= v1 ^> v0 @kind long;
  #L35a3ba.  v5:= 4I;
  #L35a3bc.  v6:= v11[v5];
  #L35a3c0.  v6:= (`long`) v6 @kind i2l;
  #L35a3c2.  v6:= v6 ^& v3 @kind long;
  #L35a3c4.  v8:= v10[v5];
  #L35a3c8.  v8:= (`long`) v8 @kind i2l;
  #L35a3ca.  v8:= v8 ^& v3 @kind long;
  #L35a3cc.  v6:= v6 - v8 @kind long;
  #L35a3ce.  v1:= v1 + v6 @kind long;
  #L35a3d0.  v6:= (`int`) v1 @kind l2i;
  #L35a3d2.  v11[v5]:= v6;
  #L35a3d6.  v1:= v1 ^> v0 @kind long;
  #L35a3d8.  v5:= 5I;
  #L35a3da.  v6:= v11[v5];
  #L35a3de.  v6:= (`long`) v6 @kind i2l;
  #L35a3e0.  v6:= v6 ^& v3 @kind long;
  #L35a3e2.  v10:= v10[v5];
  #L35a3e6.  v8:= (`long`) v10 @kind i2l;
  #L35a3e8.  v3:= v3 ^& v8 @kind long;
  #L35a3ea.  v6:= v6 - v3 @kind long;
  #L35a3ec.  v1:= v1 + v6 @kind long;
  #L35a3ee.  v10:= (`int`) v1 @kind l2i;
  #L35a3f0.  v11[v5]:= v10;
  #L35a3f4.  v10:= v1 ^> v0 @kind long;
  #L35a3f8.  v11:= (`int`) v10 @kind l2i;
  #L35a3fa.  return v11;
}
procedure `java.math.BigInteger` `z`(`int`[] v4 @kind object) @signature `Ln/a/a/c/b;.z:([I)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35a4b4.  v0:= 24I;
  #L35a4b8.  v0:= new `byte`[v0];
  #L35a4bc.  v1:= 0I;
  #L35a4be.  v2:= 6I;
  #L35a4c0.  if v1 >= v2 then goto L35a4e0;
  #L35a4c4.  v2:= v4[v1];
  #L35a4c8.  if v2 == 0 then goto L35a4da;
  #L35a4cc.  v3:= v1 - 5;
  #L35a4d0.  v3:= v3 ^< 2;
  #L35a4d4.  call `a`(v2, v0, v3) @signature `Lorg/bouncycastle/util/d;.a:(I[BI)V` @kind static;
  #L35a4da.  v1:= v1 + 1;
  #L35a4de.  goto L35a4be;
  #L35a4e0.  v4:= new `java.math.BigInteger`;
  #L35a4e4.  v1:= 1I;
  #L35a4e6.  call `<init>`(v4, v1, v0) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L35a4ec.  return v4 @kind object;
}
