record `n.a.a.c.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `int` `a`(`int` v2 ) @signature `Ln/a/a/c/a;.a:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L359650.  v0:= 0I;
  #L359652.  v1:= v2 ^& 1;
  #L359656.  if v1 != 0 then goto L359664;
  #L35965a.  v2:= v2 ^>> 1;
  #L35965e.  v0:= v0 + 1;
  #L359662.  goto L359652;
  #L359664.  return v0;
}
procedure `void` `b`(`int`[] v0 @kind object, `int` v1 , `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/c/a;.b:([II[I[I)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L359770.  if v1 >= 0 then goto L35977e;
  #L359774.  v1:= length @variable v0;
  #L359776.  call temp:= `a`(v1, v2, v0, v3) @signature `Ln/a/a/c/g;.a:(I[I[I[I)I` @kind static;
  #L35977c.  goto L359788;
  #L35977e.  v0:= length @variable v0;
  #L359780.  v1:= 0I;
  #L359782.  call `arraycopy`(v2, v1, v3, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L359788.  return @kind void;
}
procedure `int` `c`(`int`[] v4 @kind object, `int`[] v5 @kind object, `int` v6 , `int`[] v7 @kind object, `int` v8 ) @signature `Ln/a/a/c/a;.c:([I[II[II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L359678.  v0:= length @variable v4;
  #L35967a.  v1:= 0I;
  #L35967c.  v2:= 0I;
  #L35967e.  v3:= v5[v1];
  #L359682.  if v3 != 0 then goto L359692;
  #L359686.  call temp:= `A`(v6, v5, v1) @signature `Ln/a/a/c/g;.A:(I[II)I` @kind static;
  #L35968c.  v2:= v2 + 32;
  #L359690.  goto L35967e;
  #L359692.  v3:= v5[v1];
  #L359696.  call temp:= `a`(v3) @signature `Ln/a/a/c/a;.a:(I)I` @kind static;
  #L35969c.  v3:= temp;
  #L35969e.  if v3 <= 0 then goto L3596aa;
  #L3596a2.  call temp:= `y`(v6, v5, v3, v1) @signature `Ln/a/a/c/g;.y:(I[III)I` @kind static;
  #L3596a8.  v2:= v2 + v3 @kind int;
  #L3596aa.  v5:= 0I;
  #L3596ac.  if v5 >= v2 then goto L3596e0;
  #L3596b0.  v6:= v7[v1];
  #L3596b4.  v6:= v6 ^& 1;
  #L3596b8.  if v6 == 0 then goto L3596d4;
  #L3596bc.  if v8 >= 0 then goto L3596ca;
  #L3596c0.  call temp:= `e`(v0, v4, v7) @signature `Ln/a/a/c/g;.e:(I[I[I)I` @kind static;
  #L3596c6.  v6:= temp;
  #L3596c8.  goto L3596d2;
  #L3596ca.  call temp:= `I`(v0, v4, v7) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L3596d0.  v6:= temp;
  #L3596d2.  v8:= v8 + v6 @kind int;
  #L3596d4.  call temp:= `x`(v0, v7, v8) @signature `Ln/a/a/c/g;.x:(I[II)I` @kind static;
  #L3596da.  v5:= v5 + 1;
  #L3596de.  goto L3596ac;
  #L3596e0.  return v8;
}
procedure `void` `d`(`int`[] v9 @kind object, `int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L35979c.  v0:= length @variable v9;
  #L35979e.  call temp:= `u`(v0, v10) @signature `Ln/a/a/c/g;.u:(I[I)Z` @kind static;
  #L3597a4.  v1:= temp;
  #L3597a6.  if v1 != 0 then goto L359894;
  #L3597aa.  call temp:= `t`(v0, v10) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L3597b0.  v1:= temp;
  #L3597b2.  v2:= 0I;
  #L3597b4.  if v1 == 0 then goto L3597c0;
  #L3597b8.  call `arraycopy`(v10, v2, v11, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3597be.  return @kind void;
  #L3597c0.  call temp:= `h`(v0, v10) @signature `Ln/a/a/c/g;.h:(I[I)[I` @kind static;
  #L3597c6.  v10:= temp @kind object;
  #L3597c8.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L3597ce.  v1:= temp @kind object;
  #L3597d0.  v3:= 1I;
  #L3597d2.  v1[v2]:= v3;
  #L3597d6.  v4:= v10[v2];
  #L3597da.  v3:= v3 ^& v4 @kind int;
  #L3597dc.  if v3 != 0 then goto L3597ea;
  #L3597e0.  call temp:= `c`(v9, v10, v0, v1, v2) @signature `Ln/a/a/c/a;.c:([I[II[II)I` @kind static;
  #L3597e6.  v3:= temp;
  #L3597e8.  goto L3597ec;
  #L3597ea.  v3:= 0I;
  #L3597ec.  call temp:= `t`(v0, v10) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L3597f2.  v4:= temp;
  #L3597f4.  if v4 == 0 then goto L359800;
  #L3597f8.  call `b`(v9, v3, v1, v11) @signature `Ln/a/a/c/a;.b:([II[I[I)V` @kind static;
  #L3597fe.  return @kind void;
  #L359800.  call temp:= `h`(v0, v9) @signature `Ln/a/a/c/g;.h:(I[I)[I` @kind static;
  #L359806.  v4:= temp @kind object;
  #L359808.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L35980e.  v5:= temp @kind object;
  #L359810.  v6:= v0;
  #L359812.  v7:= v6 + -1;
  #L359816.  v8:= v10[v7];
  #L35981a.  if v8 != 0 then goto L35982c;
  #L35981e.  v7:= v4[v7];
  #L359822.  if v7 != 0 then goto L35982c;
  #L359826.  v6:= v6 + -1;
  #L35982a.  goto L359812;
  #L35982c.  call temp:= `o`(v6, v10, v4) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L359832.  v7:= temp;
  #L359834.  if v7 == 0 then goto L359866;
  #L359838.  call temp:= `I`(v6, v4, v10) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L35983e.  call temp:= `I`(v0, v5, v1) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L359844.  v7:= temp;
  #L359846.  v7:= v7 - v2 @kind int;
  #L359848.  v3:= v3 + v7 @kind int;
  #L35984a.  call temp:= `c`(v9, v10, v6, v1, v3) @signature `Ln/a/a/c/a;.c:([I[II[II)I` @kind static;
  #L359850.  v3:= temp;
  #L359852.  call temp:= `t`(v6, v10) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L359858.  v7:= temp;
  #L35985a.  if v7 == 0 then goto L359812;
  #L35985e.  call `b`(v9, v3, v1, v11) @signature `Ln/a/a/c/a;.b:([II[I[I)V` @kind static;
  #L359864.  return @kind void;
  #L359866.  call temp:= `I`(v6, v10, v4) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L35986c.  call temp:= `I`(v0, v1, v5) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L359872.  v7:= temp;
  #L359874.  v7:= v7 - v3 @kind int;
  #L359876.  v2:= v2 + v7 @kind int;
  #L359878.  call temp:= `c`(v9, v4, v6, v5, v2) @signature `Ln/a/a/c/a;.c:([I[II[II)I` @kind static;
  #L35987e.  v2:= temp;
  #L359880.  call temp:= `t`(v6, v4) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L359886.  v7:= temp;
  #L359888.  if v7 == 0 then goto L359812;
  #L35988c.  call `b`(v9, v2, v5, v11) @signature `Ln/a/a/c/a;.b:([II[I[I)V` @kind static;
  #L359892.  return @kind void;
  #L359894.  v9:= new `java.lang.IllegalArgumentException`;
  #L359898.  v10:= "'x' cannot be 0" @kind object;
  #L35989c.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3598a2.  goto L3598a6;
  #L3598a4.  throw v9;
  #L3598a6.  goto L3598a4;
}
procedure `int`[] `e`(`int`[] v7 @kind object) @signature `Ln/a/a/c/a;.e:([I)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3596f4.  v0:= length @variable v7;
  #L3596f6.  v1:= new `java.util.Random`;
  #L3596fa.  call `<init>`(v1) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L359700.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L359706.  v2:= temp @kind object;
  #L359708.  v3:= v0 + -1;
  #L35970c.  v4:= v7[v3];
  #L359710.  v5:= v4 ^>> 1;
  #L359714.  v4:= v4 ^| v5 @kind int;
  #L359716.  v5:= v4 ^>> 2;
  #L35971a.  v4:= v4 ^| v5 @kind int;
  #L35971c.  v5:= v4 ^>> 4;
  #L359720.  v4:= v4 ^| v5 @kind int;
  #L359722.  v5:= v4 ^>> 8;
  #L359726.  v4:= v4 ^| v5 @kind int;
  #L359728.  v5:= v4 ^>> 16;
  #L35972c.  v4:= v4 ^| v5 @kind int;
  #L35972e.  v5:= 0I;
  #L359730.  if v5 == v0 then goto L359746;
  #L359734.  call temp:= `nextInt`(v1) @signature `Ljava/util/Random;.nextInt:()I` @kind virtual;
  #L35973a.  v6:= temp;
  #L35973c.  v2[v5]:= v6;
  #L359740.  v5:= v5 + 1;
  #L359744.  goto L359730;
  #L359746.  v5:= v2[v3];
  #L35974a.  v5:= v5 ^& v4 @kind int;
  #L35974c.  v2[v3]:= v5;
  #L359750.  call temp:= `o`(v0, v2, v7) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L359756.  v5:= temp;
  #L359758.  if v5 != 0 then goto L35972e;
  #L35975c.  return v2 @kind object;
}
