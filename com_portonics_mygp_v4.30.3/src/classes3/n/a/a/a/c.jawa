record `n.a.a.a.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.a.a.a.f` @kind class {
}
procedure `void` `<init>`(`n.a.a.a.c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Ln/a/a/a/c;.<init>:(IIII)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3488fc.  call temp:= `y`(v1, v2, v3, v4) @signature `Ln/a/a/a/c;.y:(IIII)Ln/a/a/b/a;` @kind static;
  #L348902.  v1:= temp @kind object;
  #L348904.  call `<init>`(v0, v1) @signature `Ln/a/a/a/f;.<init>:(Ln/a/a/b/a;)V` @kind direct;
  #L34890a.  return @kind void;
}
procedure `n.a.a.b.a` `y`(`int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Ln/a/a/a/c;.y:(IIII)Ln/a/a/b/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L348850.  if v6 == 0 then goto L3488dc;
  #L348854.  v0:= 2I;
  #L348856.  v1:= 1I;
  #L348858.  v2:= 3I;
  #L34885a.  v3:= 0I;
  #L34885c.  if v7 != 0 then goto L34888e;
  #L348860.  if v8 != 0 then goto L34887e;
  #L348864.  v7:= new `int`[v2];
  #L348868.  v7[v3]:= v3;
  #L34886c.  v7[v1]:= v6;
  #L348870.  v7[v0]:= v5;
  #L348874.  call temp:= `a`(v7) @signature `Ln/a/a/b/b;.a:([I)Ln/a/a/b/f;` @kind static;
  #L34887a.  v5:= temp @kind object;
  #L34887c.  return v5 @kind object;
  #L34887e.  v5:= new `java.lang.IllegalArgumentException`;
  #L348882.  v6:= "k3 must be 0 if k2 == 0" @kind object;
  #L348886.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34888c.  throw v5;
  #L34888e.  if v7 <= v6 then goto L3488cc;
  #L348892.  if v8 <= v7 then goto L3488bc;
  #L348896.  v4:= 5I;
  #L348898.  v4:= new `int`[v4];
  #L34889c.  v4[v3]:= v3;
  #L3488a0.  v4[v1]:= v6;
  #L3488a4.  v4[v0]:= v7;
  #L3488a8.  v4[v2]:= v8;
  #L3488ac.  v6:= 4I;
  #L3488ae.  v4[v6]:= v5;
  #L3488b2.  call temp:= `a`(v4) @signature `Ln/a/a/b/b;.a:([I)Ln/a/a/b/f;` @kind static;
  #L3488b8.  v5:= temp @kind object;
  #L3488ba.  return v5 @kind object;
  #L3488bc.  v5:= new `java.lang.IllegalArgumentException`;
  #L3488c0.  v6:= "k3 must be > k2" @kind object;
  #L3488c4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3488ca.  throw v5;
  #L3488cc.  v5:= new `java.lang.IllegalArgumentException`;
  #L3488d0.  v6:= "k2 must be > k1" @kind object;
  #L3488d4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3488da.  throw v5;
  #L3488dc.  v5:= new `java.lang.IllegalArgumentException`;
  #L3488e0.  v6:= "k1 must be > 0" @kind object;
  #L3488e4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3488ea.  throw v5;
}
