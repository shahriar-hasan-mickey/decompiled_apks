record `n.a.a.a.f$a` @kind class @AccessFlag PUBLIC extends `n.a.a.a.c` @kind class {
  `int` `n.a.a.a.f$a.i` @AccessFlag PRIVATE;
  `int` `n.a.a.a.f$a.j` @AccessFlag PRIVATE;
  `int` `n.a.a.a.f$a.k` @AccessFlag PRIVATE;
  `int` `n.a.a.a.f$a.l` @AccessFlag PRIVATE;
  `n.a.a.a.n` `n.a.a.a.f$a.m` @AccessFlag PRIVATE;
  `byte` `n.a.a.a.f$a.n` @AccessFlag PRIVATE;
  `java.math.BigInteger`[] `n.a.a.a.f$a.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n.a.a.a.f$a` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `java.math.BigInteger` v14 @kind object, `java.math.BigInteger` v15 @kind object) @signature `Ln/a/a/a/f$a;.<init>:(IIIILjava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L348dfc.  v7:= 0I;
  #L348dfe.  v8:= 0I;
  #L348e00.  v0:= v9 @kind object;
  #L348e02.  v1:= v10;
  #L348e04.  v2:= v11;
  #L348e06.  v3:= v12;
  #L348e08.  v4:= v13;
  #L348e0a.  v5:= v14 @kind object;
  #L348e0c.  v6:= v15 @kind object;
  #L348e0e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ln/a/a/a/f$a;.<init>:(IIIILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L348e14.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.f$a` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `java.math.BigInteger` v6 @kind object, `java.math.BigInteger` v7 @kind object, `java.math.BigInteger` v8 @kind object, `java.math.BigInteger` v9 @kind object) @signature `Ln/a/a/a/f$a;.<init>:(IIIILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L348e28.  call `<init>`(v1, v2, v3, v4, v5) @signature `Ln/a/a/a/c;.<init>:(IIII)V` @kind direct;
  #L348e2e.  v0:= 0I;
  #L348e30.  v1.`n.a.a.a.f$a.n` @type ^`byte` := v0 @kind byte;
  #L348e34.  v0:= 0I;
  #L348e36.  v1.`n.a.a.a.f$a.o` @type ^`java.math.BigInteger`[] := v0 @kind object;
  #L348e3a.  v1.`n.a.a.a.f$a.i` @type ^`int` := v2;
  #L348e3e.  v1.`n.a.a.a.f$a.j` @type ^`int` := v3;
  #L348e42.  v1.`n.a.a.a.f$a.k` @type ^`int` := v4;
  #L348e46.  v1.`n.a.a.a.f$a.l` @type ^`int` := v5;
  #L348e4a.  v1.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v8 @kind object;
  #L348e4e.  v1.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v9 @kind object;
  #L348e52.  v2:= new `n.a.a.a.n`;
  #L348e56.  call `<init>`(v2, v1, v0, v0) @signature `Ln/a/a/a/n;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L348e5c.  v1.`n.a.a.a.f$a.m` @type ^`n.a.a.a.n` := v2 @kind object;
  #L348e60.  call temp:= `j`(v1, v6) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348e66.  v2:= temp @kind object;
  #L348e68.  v1.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v2 @kind object;
  #L348e6c.  call temp:= `j`(v1, v7) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348e72.  v2:= temp @kind object;
  #L348e74.  v1.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v2 @kind object;
  #L348e78.  v2:= 6I;
  #L348e7a.  v1.`n.a.a.a.f.f` @type ^`int` := v2;
  #L348e7e.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.f$a` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `n.a.a.a.j` v6 @kind object, `n.a.a.a.j` v7 @kind object, `java.math.BigInteger` v8 @kind object, `java.math.BigInteger` v9 @kind object) @signature `Ln/a/a/a/f$a;.<init>:(IIIILn/a/a/a/j;Ln/a/a/a/j;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L348e90.  call `<init>`(v1, v2, v3, v4, v5) @signature `Ln/a/a/a/c;.<init>:(IIII)V` @kind direct;
  #L348e96.  v0:= 0I;
  #L348e98.  v1.`n.a.a.a.f$a.n` @type ^`byte` := v0 @kind byte;
  #L348e9c.  v0:= 0I;
  #L348e9e.  v1.`n.a.a.a.f$a.o` @type ^`java.math.BigInteger`[] := v0 @kind object;
  #L348ea2.  v1.`n.a.a.a.f$a.i` @type ^`int` := v2;
  #L348ea6.  v1.`n.a.a.a.f$a.j` @type ^`int` := v3;
  #L348eaa.  v1.`n.a.a.a.f$a.k` @type ^`int` := v4;
  #L348eae.  v1.`n.a.a.a.f$a.l` @type ^`int` := v5;
  #L348eb2.  v1.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v8 @kind object;
  #L348eb6.  v1.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v9 @kind object;
  #L348eba.  v2:= new `n.a.a.a.n`;
  #L348ebe.  call `<init>`(v2, v1, v0, v0) @signature `Ln/a/a/a/n;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L348ec4.  v1.`n.a.a.a.f$a.m` @type ^`n.a.a.a.n` := v2 @kind object;
  #L348ec8.  v1.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v6 @kind object;
  #L348ecc.  v1.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v7 @kind object;
  #L348ed0.  v2:= 6I;
  #L348ed2.  v1.`n.a.a.a.f.f` @type ^`int` := v2;
  #L348ed6.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.f$a` v9 @kind this, `int` v10 , `int` v11 , `java.math.BigInteger` v12 @kind object, `java.math.BigInteger` v13 @kind object, `java.math.BigInteger` v14 @kind object, `java.math.BigInteger` v15 @kind object) @signature `Ln/a/a/a/f$a;.<init>:(IILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L348ee8.  v3:= 0I;
  #L348eea.  v4:= 0I;
  #L348eec.  v0:= v9 @kind object;
  #L348eee.  v1:= v10;
  #L348ef0.  v2:= v11;
  #L348ef2.  v5:= v12 @kind object;
  #L348ef4.  v6:= v13 @kind object;
  #L348ef6.  v7:= v14 @kind object;
  #L348ef8.  v8:= v15 @kind object;
  #L348efa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ln/a/a/a/f$a;.<init>:(IIIILjava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L348f00.  return @kind void;
}
procedure `n.a.a.a.j` `E`(`n.a.a.a.f$a` v8 @kind this, `n.a.a.a.j` v9 @kind object) @signature `Ln/a/a/a/f$a;.E:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L348bb0.  call temp:= `i`(v9) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L348bb6.  v0:= temp;
  #L348bb8.  if v0 == 0 then goto L348bbe;
  #L348bbc.  return v9 @kind object;
  #L348bbe.  v0:= `@@n.a.a.a.b.a` @type ^`java.math.BigInteger` @kind object;
  #L348bc2.  call temp:= `j`(v8, v0) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348bc8.  v0:= temp @kind object;
  #L348bca.  v1:= new `java.util.Random`;
  #L348bce.  call `<init>`(v1) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L348bd4.  v2:= new `java.math.BigInteger`;
  #L348bd8.  v3:= v8.`n.a.a.a.f$a.i` @type ^`int`;
  #L348bdc.  call `<init>`(v2, v3, v1) @signature `Ljava/math/BigInteger;.<init>:(ILjava/util/Random;)V` @kind direct;
  #L348be2.  call temp:= `j`(v8, v2) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348be8.  v2:= temp @kind object;
  #L348bea.  v3:= 1I;
  #L348bec.  v5:= v9 @kind object;
  #L348bee.  v6:= v0 @kind object;
  #L348bf0.  v4:= 1I;
  #L348bf2.  v7:= v8.`n.a.a.a.f$a.i` @type ^`int`;
  #L348bf6.  v7:= v7 - v3 @kind int;
  #L348bf8.  if v4 > v7 then goto L348c2a;
  #L348bfc.  call temp:= `o`(v5) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L348c02.  v5:= temp @kind object;
  #L348c04.  call temp:= `o`(v6) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L348c0a.  v6:= temp @kind object;
  #L348c0c.  call temp:= `j`(v5, v2) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348c12.  v7:= temp @kind object;
  #L348c14.  call temp:= `a`(v6, v7) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348c1a.  v6:= temp @kind object;
  #L348c1c.  call temp:= `a`(v5, v9) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348c22.  v5:= temp @kind object;
  #L348c24.  v4:= v4 + 1;
  #L348c28.  goto L348bf2;
  #L348c2a.  call temp:= `i`(v5) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L348c30.  v2:= temp;
  #L348c32.  if v2 != 0 then goto L348c3a;
  #L348c36.  v9:= 0I;
  #L348c38.  return v9 @kind object;
  #L348c3a.  call temp:= `o`(v6) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L348c40.  v2:= temp @kind object;
  #L348c42.  call temp:= `a`(v2, v6) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348c48.  v2:= temp @kind object;
  #L348c4a.  call temp:= `i`(v2) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L348c50.  v2:= temp;
  #L348c52.  if v2 != 0 then goto L348bd4;
  #L348c56.  return v6 @kind object;
}
procedure `int` `A`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348af8.  v0:= v1.`n.a.a.a.f$a.k` @type ^`int`;
  #L348afc.  return v0;
}
procedure `int` `B`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.B:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348b10.  v0:= v1.`n.a.a.a.f$a.l` @type ^`int`;
  #L348b14.  return v0;
}
procedure `int` `C`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.C:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348b28.  v0:= v1.`n.a.a.a.f$a.i` @type ^`int`;
  #L348b2c.  return v0;
}
procedure `boolean` `D`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.D:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348a78.  v0:= v1.`n.a.a.a.f$a.k` @type ^`int`;
  #L348a7c.  if v0 != 0 then goto L348a8c;
  #L348a80.  v0:= v1.`n.a.a.a.f$a.l` @type ^`int`;
  #L348a84.  if v0 != 0 then goto L348a8c;
  #L348a88.  v0:= 1I;
  #L348a8a.  goto L348a8e;
  #L348a8c.  v0:= 0I;
  #L348a8e.  return v0;
}
procedure `n.a.a.a.f` `b`(`n.a.a.a.f$a` v10 @kind this) @signature `Ln/a/a/a/f$a;.b:()Ln/a/a/a/f;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L348b40.  v9:= new `n.a.a.a.f$a`;
  #L348b44.  v1:= v10.`n.a.a.a.f$a.i` @type ^`int`;
  #L348b48.  v2:= v10.`n.a.a.a.f$a.j` @type ^`int`;
  #L348b4c.  v3:= v10.`n.a.a.a.f$a.k` @type ^`int`;
  #L348b50.  v4:= v10.`n.a.a.a.f$a.l` @type ^`int`;
  #L348b54.  v5:= v10.`n.a.a.a.f.b` @type ^`n.a.a.a.j` @kind object;
  #L348b58.  v6:= v10.`n.a.a.a.f.c` @type ^`n.a.a.a.j` @kind object;
  #L348b5c.  v7:= v10.`n.a.a.a.f.d` @type ^`java.math.BigInteger` @kind object;
  #L348b60.  v8:= v10.`n.a.a.a.f.e` @type ^`java.math.BigInteger` @kind object;
  #L348b64.  v0:= v9 @kind object;
  #L348b66.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ln/a/a/a/f$a;.<init>:(IIIILn/a/a/a/j;Ln/a/a/a/j;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L348b6c.  return v9 @kind object;
}
procedure `n.a.a.a.p` `e`(`n.a.a.a.f$a` v2 @kind this, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object, `boolean` v5 ) @signature `Ln/a/a/a/f$a;.e:(Ljava/math/BigInteger;Ljava/math/BigInteger;Z)Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L348c68.  call temp:= `j`(v2, v3) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348c6e.  v3:= temp @kind object;
  #L348c70.  call temp:= `j`(v2, v4) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348c76.  v4:= temp @kind object;
  #L348c78.  call temp:= `n`(v2) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L348c7e.  v0:= temp;
  #L348c80.  v1:= 5I;
  #L348c82.  if v0 == v1 then goto L348c8e;
  #L348c86.  v1:= 6I;
  #L348c88.  if v0 == v1 then goto L348c8e;
  #L348c8c.  goto L348cd4;
  #L348c8e.  call temp:= `i`(v3) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L348c94.  v0:= temp;
  #L348c96.  if v0 == 0 then goto L348cc4;
  #L348c9a.  call temp:= `o`(v4) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L348ca0.  v0:= temp @kind object;
  #L348ca2.  call temp:= `l`(v2) @signature `Ln/a/a/a/f;.l:()Ln/a/a/a/j;` @kind virtual;
  #L348ca8.  v1:= temp @kind object;
  #L348caa.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L348cb0.  v0:= temp;
  #L348cb2.  if v0 == 0 then goto L348cb8;
  #L348cb6.  goto L348cd4;
  #L348cb8.  v3:= new `java.lang.IllegalArgumentException`;
  #L348cbc.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L348cc2.  throw v3;
  #L348cc4.  call temp:= `d`(v4, v3) @signature `Ln/a/a/a/j;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348cca.  v4:= temp @kind object;
  #L348ccc.  call temp:= `a`(v4, v3) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348cd2.  v4:= temp @kind object;
  #L348cd4.  call temp:= `f`(v2, v3, v4, v5) @signature `Ln/a/a/a/f$a;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @kind virtual;
  #L348cda.  v3:= temp @kind object;
  #L348cdc.  return v3 @kind object;
}
procedure `n.a.a.a.p` `f`(`n.a.a.a.f$a` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object, `boolean` v4 ) @signature `Ln/a/a/a/f$a;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L348cf0.  v0:= new `n.a.a.a.n`;
  #L348cf4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/n;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;Z)V` @kind direct;
  #L348cfa.  return v0 @kind object;
}
procedure `n.a.a.a.p` `h`(`n.a.a.a.f$a` v3 @kind this, `int` v4 , `java.math.BigInteger` v5 @kind object) @signature `Ln/a/a/a/f$a;.h:(ILjava/math/BigInteger;)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L348d0c.  call temp:= `j`(v3, v5) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348d12.  v5:= temp @kind object;
  #L348d14.  call temp:= `i`(v5) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L348d1a.  v0:= temp;
  #L348d1c.  v1:= 1I;
  #L348d1e.  if v0 == 0 then goto L348d30;
  #L348d22.  v4:= v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` @kind object;
  #L348d26.  call temp:= `n`(v4) @signature `Ln/a/a/a/j;.n:()Ln/a/a/a/j;` @kind virtual;
  #L348d2c.  v4:= temp @kind object;
  #L348d2e.  goto L348db4;
  #L348d30.  call temp:= `o`(v5) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L348d36.  v0:= temp @kind object;
  #L348d38.  call temp:= `g`(v0) @signature `Ln/a/a/a/j;.g:()Ln/a/a/a/j;` @kind virtual;
  #L348d3e.  v0:= temp @kind object;
  #L348d40.  v2:= v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` @kind object;
  #L348d44.  call temp:= `j`(v0, v2) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348d4a.  v0:= temp @kind object;
  #L348d4c.  v2:= v3.`n.a.a.a.f.b` @type ^`n.a.a.a.j` @kind object;
  #L348d50.  call temp:= `a`(v0, v2) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348d56.  v0:= temp @kind object;
  #L348d58.  call temp:= `a`(v0, v5) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348d5e.  v0:= temp @kind object;
  #L348d60.  call temp:= `E`(v3, v0) @signature `Ln/a/a/a/f$a;.E:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind direct;
  #L348d66.  v0:= temp @kind object;
  #L348d68.  if v0 == 0 then goto L348db2;
  #L348d6c.  call temp:= `r`(v0) @signature `Ln/a/a/a/j;.r:()Z` @kind virtual;
  #L348d72.  v2:= temp;
  #L348d74.  if v4 != v1 then goto L348d7c;
  #L348d78.  v4:= 1I;
  #L348d7a.  goto L348d7e;
  #L348d7c.  v4:= 0I;
  #L348d7e.  if v2 == v4 then goto L348d8a;
  #L348d82.  call temp:= `b`(v0) @signature `Ln/a/a/a/j;.b:()Ln/a/a/a/j;` @kind virtual;
  #L348d88.  v0:= temp @kind object;
  #L348d8a.  call temp:= `n`(v3) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L348d90.  v4:= temp;
  #L348d92.  v2:= 5I;
  #L348d94.  if v4 == v2 then goto L348da8;
  #L348d98.  v2:= 6I;
  #L348d9a.  if v4 == v2 then goto L348da8;
  #L348d9e.  call temp:= `j`(v0, v5) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348da4.  v4:= temp @kind object;
  #L348da6.  goto L348db4;
  #L348da8.  call temp:= `a`(v0, v5) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348dae.  v4:= temp @kind object;
  #L348db0.  goto L348db4;
  #L348db2.  v4:= 0I;
  #L348db4.  if v4 == 0 then goto L348dc2;
  #L348db8.  call temp:= `f`(v3, v5, v4, v1) @signature `Ln/a/a/a/f$a;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @kind virtual;
  #L348dbe.  v4:= temp @kind object;
  #L348dc0.  return v4 @kind object;
  #L348dc2.  v4:= new `java.lang.IllegalArgumentException`;
  #L348dc6.  v5:= "Invalid point compression" @kind object;
  #L348dca.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L348dd0.  throw v4;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.f$a` v7 @kind this, `java.math.BigInteger` v8 @kind object) @signature `Ln/a/a/a/f$a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L348b80.  v6:= new `n.a.a.a.h`;
  #L348b84.  v1:= v7.`n.a.a.a.f$a.i` @type ^`int`;
  #L348b88.  v2:= v7.`n.a.a.a.f$a.j` @type ^`int`;
  #L348b8c.  v3:= v7.`n.a.a.a.f$a.k` @type ^`int`;
  #L348b90.  v4:= v7.`n.a.a.a.f$a.l` @type ^`int`;
  #L348b94.  v0:= v6 @kind object;
  #L348b96.  v5:= v8 @kind object;
  #L348b98.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/h;.<init>:(IIIILjava/math/BigInteger;)V` @kind direct;
  #L348b9e.  return v6 @kind object;
}
procedure `int` `p`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348ac8.  v0:= v1.`n.a.a.a.f$a.i` @type ^`int`;
  #L348acc.  return v0;
}
procedure `n.a.a.a.p` `q`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.q:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348de4.  v0:= v1.`n.a.a.a.f$a.m` @type ^`n.a.a.a.n` @kind object;
  #L348de8.  return v0 @kind object;
}
procedure `boolean` `v`(`n.a.a.a.f$a` v2 @kind this, `int` v3 ) @signature `Ln/a/a/a/f$a;.v:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L348aa0.  v0:= 1I;
  #L348aa2.  if v3 == 0 then goto L348ab4;
  #L348aa6.  if v3 == v0 then goto L348ab4;
  #L348aaa.  v1:= 6I;
  #L348aac.  if v3 == v1 then goto L348ab4;
  #L348ab0.  v3:= 0I;
  #L348ab2.  return v3;
  #L348ab4.  return v0;
}
procedure `int` `z`(`n.a.a.a.f$a` v1 @kind this) @signature `Ln/a/a/a/f$a;.z:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348ae0.  v0:= v1.`n.a.a.a.f$a.j` @type ^`int`;
  #L348ae4.  return v0;
}
