record `n.a.a.a.g` @kind class @AccessFlag PUBLIC extends `n.a.a.a.d` @kind class {
  `java.math.BigInteger` `n.a.a.a.g.i` @AccessFlag ;
  `java.math.BigInteger` `n.a.a.a.g.j` @AccessFlag ;
  `n.a.a.a.o` `n.a.a.a.g.k` @AccessFlag ;
}
procedure `void` `<init>`(`n.a.a.a.g` v6 @kind this, `java.math.BigInteger` v7 @kind object, `java.math.BigInteger` v8 @kind object, `java.math.BigInteger` v9 @kind object) @signature `Ln/a/a/a/g;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3490b4.  v4:= 0I;
  #L3490b6.  v5:= 0I;
  #L3490b8.  v0:= v6 @kind object;
  #L3490ba.  v1:= v7 @kind object;
  #L3490bc.  v2:= v8 @kind object;
  #L3490be.  v3:= v9 @kind object;
  #L3490c0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/g;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L3490c6.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.g` v1 @kind this, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object, `java.math.BigInteger` v5 @kind object, `java.math.BigInteger` v6 @kind object) @signature `Ln/a/a/a/g;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3490d8.  call `<init>`(v1, v2) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L3490de.  v1.`n.a.a.a.g.i` @type ^`java.math.BigInteger` := v2 @kind object;
  #L3490e2.  call temp:= `t`(v2) @signature `Ln/a/a/a/i;.t:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L3490e8.  v2:= temp @kind object;
  #L3490ea.  v1.`n.a.a.a.g.j` @type ^`java.math.BigInteger` := v2 @kind object;
  #L3490ee.  v2:= new `n.a.a.a.o`;
  #L3490f2.  v0:= 0I;
  #L3490f4.  call `<init>`(v2, v1, v0, v0) @signature `Ln/a/a/a/o;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L3490fa.  v1.`n.a.a.a.g.k` @type ^`n.a.a.a.o` := v2 @kind object;
  #L3490fe.  call temp:= `j`(v1, v3) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L349104.  v2:= temp @kind object;
  #L349106.  v1.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v2 @kind object;
  #L34910a.  call temp:= `j`(v1, v4) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L349110.  v2:= temp @kind object;
  #L349112.  v1.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v2 @kind object;
  #L349116.  v1.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v5 @kind object;
  #L34911a.  v1.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v6 @kind object;
  #L34911e.  v2:= 4I;
  #L349120.  v1.`n.a.a.a.f.f` @type ^`int` := v2;
  #L349124.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.g` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object, `java.math.BigInteger` v5 @kind object, `java.math.BigInteger` v6 @kind object) @signature `Ln/a/a/a/g;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ln/a/a/a/j;Ln/a/a/a/j;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L349138.  call `<init>`(v0, v1) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L34913e.  v0.`n.a.a.a.g.i` @type ^`java.math.BigInteger` := v1 @kind object;
  #L349142.  v0.`n.a.a.a.g.j` @type ^`java.math.BigInteger` := v2 @kind object;
  #L349146.  v1:= new `n.a.a.a.o`;
  #L34914a.  v2:= 0I;
  #L34914c.  call `<init>`(v1, v0, v2, v2) @signature `Ln/a/a/a/o;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L349152.  v0.`n.a.a.a.g.k` @type ^`n.a.a.a.o` := v1 @kind object;
  #L349156.  v0.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v3 @kind object;
  #L34915a.  v0.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v4 @kind object;
  #L34915e.  v0.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v5 @kind object;
  #L349162.  v0.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v6 @kind object;
  #L349166.  v1:= 4I;
  #L349168.  v0.`n.a.a.a.f.f` @type ^`int` := v1;
  #L34916c.  return @kind void;
}
procedure `n.a.a.a.f` `b`(`n.a.a.a.g` v8 @kind this) @signature `Ln/a/a/a/g;.b:()Ln/a/a/a/f;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L348f60.  v7:= new `n.a.a.a.g`;
  #L348f64.  v1:= v8.`n.a.a.a.g.i` @type ^`java.math.BigInteger` @kind object;
  #L348f68.  v2:= v8.`n.a.a.a.g.j` @type ^`java.math.BigInteger` @kind object;
  #L348f6c.  v3:= v8.`n.a.a.a.f.b` @type ^`n.a.a.a.j` @kind object;
  #L348f70.  v4:= v8.`n.a.a.a.f.c` @type ^`n.a.a.a.j` @kind object;
  #L348f74.  v5:= v8.`n.a.a.a.f.d` @type ^`java.math.BigInteger` @kind object;
  #L348f78.  v6:= v8.`n.a.a.a.f.e` @type ^`java.math.BigInteger` @kind object;
  #L348f7c.  v0:= v7 @kind object;
  #L348f7e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/a/g;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ln/a/a/a/j;Ln/a/a/a/j;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L348f84.  return v7 @kind object;
}
procedure `n.a.a.a.p` `f`(`n.a.a.a.g` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object, `boolean` v4 ) @signature `Ln/a/a/a/g;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L348fbc.  v0:= new `n.a.a.a.o`;
  #L348fc0.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/o;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;Z)V` @kind direct;
  #L348fc6.  return v0 @kind object;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.g` v3 @kind this, `java.math.BigInteger` v4 @kind object) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L348f98.  v0:= new `n.a.a.a.i`;
  #L348f9c.  v1:= v3.`n.a.a.a.g.i` @type ^`java.math.BigInteger` @kind object;
  #L348fa0.  v2:= v3.`n.a.a.a.g.j` @type ^`java.math.BigInteger` @kind object;
  #L348fa4.  call `<init>`(v0, v1, v2, v4) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L348faa.  return v0 @kind object;
}
procedure `int` `p`(`n.a.a.a.g` v1 @kind this) @signature `Ln/a/a/a/g;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348f40.  v0:= v1.`n.a.a.a.g.i` @type ^`java.math.BigInteger` @kind object;
  #L348f44.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L348f4a.  v0:= temp;
  #L348f4c.  return v0;
}
procedure `n.a.a.a.p` `q`(`n.a.a.a.g` v1 @kind this) @signature `Ln/a/a/a/g;.q:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L348fd8.  v0:= v1.`n.a.a.a.g.k` @type ^`n.a.a.a.o` @kind object;
  #L348fdc.  return v0 @kind object;
}
procedure `n.a.a.a.p` `s`(`n.a.a.a.g` v8 @kind this, `n.a.a.a.p` v9 @kind object) @signature `Ln/a/a/a/g;.s:(Ln/a/a/a/p;)Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L348ff0.  call temp:= `i`(v9) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L348ff6.  v0:= temp @kind object;
  #L348ff8.  if v8 == v0 then goto L349098;
  #L348ffc.  call temp:= `n`(v8) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L349002.  v0:= temp;
  #L349004.  v1:= 2I;
  #L349006.  if v0 != v1 then goto L349098;
  #L34900a.  call temp:= `t`(v9) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L349010.  v0:= temp;
  #L349012.  if v0 != 0 then goto L349098;
  #L349016.  call temp:= `i`(v9) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34901c.  v0:= temp @kind object;
  #L34901e.  call temp:= `n`(v0) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L349024.  v0:= temp;
  #L349026.  if v0 == v1 then goto L349038;
  #L34902a.  v1:= 3I;
  #L34902c.  if v0 == v1 then goto L349038;
  #L349030.  v1:= 4I;
  #L349032.  if v0 == v1 then goto L349038;
  #L349036.  goto L349098;
  #L349038.  v0:= new `n.a.a.a.o`;
  #L34903c.  v1:= v9.`n.a.a.a.p.c` @type ^`n.a.a.a.j` @kind object;
  #L349040.  call temp:= `s`(v1) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L349046.  v1:= temp @kind object;
  #L349048.  call temp:= `j`(v8, v1) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L34904e.  v4:= temp @kind object;
  #L349050.  v1:= v9.`n.a.a.a.p.d` @type ^`n.a.a.a.j` @kind object;
  #L349054.  call temp:= `s`(v1) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34905a.  v1:= temp @kind object;
  #L34905c.  call temp:= `j`(v8, v1) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L349062.  v5:= temp @kind object;
  #L349064.  v1:= 1I;
  #L349066.  v6:= new `n.a.a.a.j`[v1];
  #L34906a.  v1:= v9.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34906e.  v2:= 0I;
  #L349070.  v1:= v1[v2] @kind object;
  #L349074.  call temp:= `s`(v1) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34907a.  v1:= temp @kind object;
  #L34907c.  call temp:= `j`(v8, v1) @signature `Ln/a/a/a/g;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L349082.  v1:= temp @kind object;
  #L349084.  v6[v2]:= v1 @kind object;
  #L349088.  v7:= v9.`n.a.a.a.p.f` @type ^`boolean` @kind boolean;
  #L34908c.  v2:= v0 @kind object;
  #L34908e.  v3:= v8 @kind object;
  #L349090.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Ln/a/a/a/o;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;[Ln/a/a/a/j;Z)V` @kind direct;
  #L349096.  return v0 @kind object;
  #L349098.  call temp:= `s`(v8, v9) @signature `Ln/a/a/a/f;.s:(Ln/a/a/a/p;)Ln/a/a/a/p;` @kind super;
  #L34909e.  v9:= temp @kind object;
  #L3490a0.  return v9 @kind object;
}
procedure `boolean` `v`(`n.a.a.a.g` v2 @kind this, `int` v3 ) @signature `Ln/a/a/a/g;.v:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L348f14.  v0:= 1I;
  #L348f16.  if v3 == 0 then goto L348f2e;
  #L348f1a.  if v3 == v0 then goto L348f2e;
  #L348f1e.  v1:= 2I;
  #L348f20.  if v3 == v1 then goto L348f2e;
  #L348f24.  v1:= 4I;
  #L348f26.  if v3 == v1 then goto L348f2e;
  #L348f2a.  v3:= 0I;
  #L348f2c.  return v3;
  #L348f2e.  return v0;
}
