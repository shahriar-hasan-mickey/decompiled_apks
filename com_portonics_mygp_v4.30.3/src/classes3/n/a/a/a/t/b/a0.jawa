record `n.a.a.a.t.b.a0` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.a0.g` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.a0.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L357584.  v0:= `@@n.a.a.a.t.b.y.i` @type ^`java.math.BigInteger` @kind object;
  #L357588.  `@@n.a.a.a.t.b.a0.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L35758c.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.a0` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/a0;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3575bc.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3575c2.  if v2 == 0 then goto L3575f0;
  #L3575c6.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3575cc.  v0:= temp;
  #L3575ce.  if v0 < 0 then goto L3575f0;
  #L3575d2.  v0:= `@@n.a.a.a.t.b.a0.f` @type ^`java.math.BigInteger` @kind object;
  #L3575d6.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3575dc.  v0:= temp;
  #L3575de.  if v0 >= 0 then goto L3575f0;
  #L3575e2.  call temp:= `e`(v2) @signature `Ln/a/a/a/t/b/z;.e:(Ljava/math/BigInteger;)[I` @kind static;
  #L3575e8.  v2:= temp @kind object;
  #L3575ea.  v1.`n.a.a.a.t.b.a0.g` @type ^`int`[] := v2 @kind object;
  #L3575ee.  return @kind void;
  #L3575f0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3575f4.  v0:= "x value invalid for SecP384R1FieldElement" @kind object;
  #L3575f8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3575fe.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.a0` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3575a0.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3575a6.  v0.`n.a.a.a.t.b.a0.g` @type ^`int`[] := v1 @kind object;
  #L3575aa.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.a0` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/a0;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35727c.  v0:= 12I;
  #L357280.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L357286.  v0:= temp @kind object;
  #L357288.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L35728c.  v3:= (`n.a.a.a.t.b.a0`) v3 @kind object;
  #L357290.  v3:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357294.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/z;.a:([I[I[I)V` @kind static;
  #L35729a.  v3:= new `n.a.a.a.t.b.a0`;
  #L35729e.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L3572a4.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3572b8.  v0:= 12I;
  #L3572bc.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L3572c2.  v0:= temp @kind object;
  #L3572c4.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L3572c8.  call `c`(v1, v0) @signature `Ln/a/a/a/t/b/z;.c:([I[I)V` @kind static;
  #L3572ce.  v1:= new `n.a.a.a.t.b.a0`;
  #L3572d2.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L3572d8.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.a0` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/a0;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3572ec.  v0:= 12I;
  #L3572f0.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L3572f6.  v0:= temp @kind object;
  #L3572f8.  v1:= `@@n.a.a.a.t.b.z.a` @type ^`int`[] @kind object;
  #L3572fc.  v3:= (`n.a.a.a.t.b.a0`) v3 @kind object;
  #L357300.  v3:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357304.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L35730a.  v3:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L35730e.  call `f`(v0, v3, v0) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357314.  v3:= new `n.a.a.a.t.b.a0`;
  #L357318.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L35731e.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.a0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ln/a/a/a/t/b/a0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357154.  if v3 != v2 then goto L35715c;
  #L357158.  v3:= 1I;
  #L35715a.  return v3;
  #L35715c.  v0:= instanceof @variable v3 @type ^`n.a.a.a.t.b.a0` @kind boolean;
  #L357160.  if v0 != 0 then goto L357168;
  #L357164.  v3:= 0I;
  #L357166.  return v3;
  #L357168.  v3:= (`n.a.a.a.t.b.a0`) v3 @kind object;
  #L35716c.  v0:= 12I;
  #L357170.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357174.  v3:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357178.  call temp:= `l`(v0, v1, v3) @signature `Ln/a/a/c/g;.l:(I[I[I)Z` @kind static;
  #L35717e.  v3:= temp;
  #L357180.  return v3;
}
procedure `int` `f`(`n.a.a.a.t.b.a0` v1 @kind this) @signature `Ln/a/a/a/t/b/a0;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L357204.  v0:= `@@n.a.a.a.t.b.a0.f` @type ^`java.math.BigInteger` @kind object;
  #L357208.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L35720e.  v0:= temp;
  #L357210.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.a0` v3 @kind this) @signature `Ln/a/a/a/t/b/a0;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L357330.  v0:= 12I;
  #L357334.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L35733a.  v0:= temp @kind object;
  #L35733c.  v1:= `@@n.a.a.a.t.b.z.a` @type ^`int`[] @kind object;
  #L357340.  v2:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357344.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L35734a.  v1:= new `n.a.a.a.t.b.a0`;
  #L35734e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L357354.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357194.  v0:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357198.  v1:= 12I;
  #L35719c.  call temp:= `t`(v1, v0) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L3571a2.  v0:= temp;
  #L3571a4.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.a0` v4 @kind this) @signature `Ln/a/a/a/t/b/a0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L357224.  v0:= `@@n.a.a.a.t.b.a0.f` @type ^`java.math.BigInteger` @kind object;
  #L357228.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L35722e.  v0:= temp;
  #L357230.  v1:= v4.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357234.  v2:= 0I;
  #L357236.  v3:= 12I;
  #L35723a.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L357240.  v1:= temp;
  #L357242.  v0:= v0 ^~ v1 @kind int;
  #L357244.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3571b8.  v0:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L3571bc.  v1:= 12I;
  #L3571c0.  call temp:= `u`(v1, v0) @signature `Ln/a/a/c/g;.u:(I[I)Z` @kind static;
  #L3571c6.  v0:= temp;
  #L3571c8.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.a0` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/a0;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357368.  v0:= 12I;
  #L35736c.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L357372.  v0:= temp @kind object;
  #L357374.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357378.  v3:= (`n.a.a.a.t.b.a0`) v3 @kind object;
  #L35737c.  v3:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357380.  call `f`(v1, v3, v0) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357386.  v3:= new `n.a.a.a.t.b.a0`;
  #L35738a.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L357390.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3573a4.  v0:= 12I;
  #L3573a8.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L3573ae.  v0:= temp @kind object;
  #L3573b0.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L3573b4.  call `g`(v1, v0) @signature `Ln/a/a/a/t/b/z;.g:([I[I)V` @kind static;
  #L3573ba.  v1:= new `n.a.a.a.t.b.a0`;
  #L3573be.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L3573c4.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.a0` v8 @kind this) @signature `Ln/a/a/a/t/b/a0;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3573d8.  v0:= v8.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L3573dc.  v1:= 12I;
  #L3573e0.  call temp:= `u`(v1, v0) @signature `Ln/a/a/c/g;.u:(I[I)Z` @kind static;
  #L3573e6.  v2:= temp;
  #L3573e8.  if v2 != 0 then goto L357500;
  #L3573ec.  call temp:= `t`(v1, v0) @signature `Ln/a/a/c/g;.t:(I[I)Z` @kind static;
  #L3573f2.  v2:= temp;
  #L3573f4.  if v2 == 0 then goto L3573fc;
  #L3573f8.  goto L357500;
  #L3573fc.  call temp:= `i`(v1) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L357402.  v2:= temp @kind object;
  #L357404.  call temp:= `i`(v1) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L35740a.  v3:= temp @kind object;
  #L35740c.  call temp:= `i`(v1) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L357412.  v4:= temp @kind object;
  #L357414.  call temp:= `i`(v1) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L35741a.  v5:= temp @kind object;
  #L35741c.  call `j`(v0, v2) @signature `Ln/a/a/a/t/b/z;.j:([I[I)V` @kind static;
  #L357422.  call `f`(v2, v0, v2) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357428.  v6:= 2I;
  #L35742a.  call `k`(v2, v6, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357430.  call `f`(v3, v2, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357436.  call `j`(v3, v3) @signature `Ln/a/a/a/t/b/z;.j:([I[I)V` @kind static;
  #L35743c.  call `f`(v3, v0, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357442.  v7:= 5I;
  #L357444.  call `k`(v3, v7, v4) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L35744a.  call `f`(v4, v3, v4) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357450.  call `k`(v4, v7, v5) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357456.  call `f`(v5, v3, v5) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L35745c.  v7:= 15I;
  #L357460.  call `k`(v5, v7, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357466.  call `f`(v3, v5, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L35746c.  call `k`(v3, v6, v4) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357472.  call `f`(v2, v4, v2) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357478.  v6:= 28I;
  #L35747c.  call `k`(v4, v6, v4) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357482.  call `f`(v3, v4, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357488.  v6:= 60I;
  #L35748c.  call `k`(v3, v6, v4) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L357492.  call `f`(v4, v3, v4) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L357498.  v6:= 120I;
  #L35749c.  call `k`(v4, v6, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L3574a2.  call `f`(v3, v4, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L3574a8.  call `k`(v3, v7, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L3574ae.  call `f`(v3, v5, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L3574b4.  v4:= 33I;
  #L3574b8.  call `k`(v3, v4, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L3574be.  call `f`(v3, v2, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L3574c4.  v4:= 64I;
  #L3574c8.  call `k`(v3, v4, v3) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L3574ce.  call `f`(v3, v0, v3) @signature `Ln/a/a/a/t/b/z;.f:([I[I[I)V` @kind static;
  #L3574d4.  v4:= 30I;
  #L3574d8.  call `k`(v3, v4, v2) @signature `Ln/a/a/a/t/b/z;.k:([II[I)V` @kind static;
  #L3574de.  call `j`(v2, v3) @signature `Ln/a/a/a/t/b/z;.j:([I[I)V` @kind static;
  #L3574e4.  call temp:= `l`(v1, v0, v3) @signature `Ln/a/a/c/g;.l:(I[I[I)Z` @kind static;
  #L3574ea.  v0:= temp;
  #L3574ec.  if v0 == 0 then goto L3574fc;
  #L3574f0.  v0:= new `n.a.a.a.t.b.a0`;
  #L3574f4.  call `<init>`(v0, v2) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L3574fa.  goto L3574fe;
  #L3574fc.  v0:= 0I;
  #L3574fe.  return v0 @kind object;
  #L357500.  return v8 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357514.  v0:= 12I;
  #L357518.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L35751e.  v0:= temp @kind object;
  #L357520.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357524.  call `j`(v1, v0) @signature `Ln/a/a/a/t/b/z;.j:([I[I)V` @kind static;
  #L35752a.  v1:= new `n.a.a.a.t.b.a0`;
  #L35752e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L357534.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.a0` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/a0;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357548.  v0:= 12I;
  #L35754c.  call temp:= `i`(v0) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L357552.  v0:= temp @kind object;
  #L357554.  v1:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357558.  v3:= (`n.a.a.a.t.b.a0`) v3 @kind object;
  #L35755c.  v3:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L357560.  call `m`(v1, v3, v0) @signature `Ln/a/a/a/t/b/z;.m:([I[I[I)V` @kind static;
  #L357566.  v3:= new `n.a.a.a.t.b.a0`;
  #L35756a.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/a0;.<init>:([I)V` @kind direct;
  #L357570.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.a0` v3 @kind this) @signature `Ln/a/a/a/t/b/a0;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3571dc.  v0:= v3.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L3571e0.  v1:= 0I;
  #L3571e2.  call temp:= `n`(v0, v1) @signature `Ln/a/a/c/g;.n:([II)I` @kind static;
  #L3571e8.  v0:= temp;
  #L3571ea.  v2:= 1I;
  #L3571ec.  if v0 != v2 then goto L3571f2;
  #L3571f0.  v1:= 1I;
  #L3571f2.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.a0` v2 @kind this) @signature `Ln/a/a/a/t/b/a0;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L357258.  v0:= v2.`n.a.a.a.t.b.a0.g` @type ^`int`[] @kind object;
  #L35725c.  v1:= 12I;
  #L357260.  call temp:= `J`(v1, v0) @signature `Ln/a/a/c/g;.J:(I[I)Ljava/math/BigInteger;` @kind static;
  #L357266.  v0:= temp @kind object;
  #L357268.  return v0 @kind object;
}
