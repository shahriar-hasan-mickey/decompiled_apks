record `n.a.a.a.t.b.c` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.c.g` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L351394.  v0:= `@@n.a.a.a.t.b.a.i` @type ^`java.math.BigInteger` @kind object;
  #L351398.  `@@n.a.a.a.t.b.c.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L35139c.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.c` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/c;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3513cc.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3513d2.  if v2 == 0 then goto L351400;
  #L3513d6.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3513dc.  v0:= temp;
  #L3513de.  if v0 < 0 then goto L351400;
  #L3513e2.  v0:= `@@n.a.a.a.t.b.c.f` @type ^`java.math.BigInteger` @kind object;
  #L3513e6.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3513ec.  v0:= temp;
  #L3513ee.  if v0 >= 0 then goto L351400;
  #L3513f2.  call temp:= `c`(v2) @signature `Ln/a/a/a/t/b/b;.c:(Ljava/math/BigInteger;)[I` @kind static;
  #L3513f8.  v2:= temp @kind object;
  #L3513fa.  v1.`n.a.a.a.t.b.c.g` @type ^`int`[] := v2 @kind object;
  #L3513fe.  return @kind void;
  #L351400.  v2:= new `java.lang.IllegalArgumentException`;
  #L351404.  v0:= "x value invalid for SecP192K1FieldElement" @kind object;
  #L351408.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35140e.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.c` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3513b0.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3513b6.  v0.`n.a.a.a.t.b.c.g` @type ^`int`[] := v1 @kind object;
  #L3513ba.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.c` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/c;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3510b0.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L3510b6.  v0:= temp @kind object;
  #L3510b8.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3510bc.  v3:= (`n.a.a.a.t.b.c`) v3 @kind object;
  #L3510c0.  v3:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3510c4.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/b;.a:([I[I[I)V` @kind static;
  #L3510ca.  v3:= new `n.a.a.a.t.b.c`;
  #L3510ce.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L3510d4.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.c` v2 @kind this) @signature `Ln/a/a/a/t/b/c;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3510e8.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L3510ee.  v0:= temp @kind object;
  #L3510f0.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3510f4.  call `b`(v1, v0) @signature `Ln/a/a/a/t/b/b;.b:([I[I)V` @kind static;
  #L3510fa.  v1:= new `n.a.a.a.t.b.c`;
  #L3510fe.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351104.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.c` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/c;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351118.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35111e.  v0:= temp @kind object;
  #L351120.  v1:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L351124.  v3:= (`n.a.a.a.t.b.c`) v3 @kind object;
  #L351128.  v3:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L35112c.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L351132.  v3:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351136.  call `d`(v0, v3, v0) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L35113c.  v3:= new `n.a.a.a.t.b.c`;
  #L351140.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351146.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/t/b/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350f9c.  if v2 != v1 then goto L350fa4;
  #L350fa0.  v2:= 1I;
  #L350fa2.  return v2;
  #L350fa4.  v0:= instanceof @variable v2 @type ^`n.a.a.a.t.b.c` @kind boolean;
  #L350fa8.  if v0 != 0 then goto L350fb0;
  #L350fac.  v2:= 0I;
  #L350fae.  return v2;
  #L350fb0.  v2:= (`n.a.a.a.t.b.c`) v2 @kind object;
  #L350fb4.  v0:= v1.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L350fb8.  v2:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L350fbc.  call temp:= `h`(v0, v2) @signature `Ln/a/a/c/b;.h:([I[I)Z` @kind static;
  #L350fc2.  v2:= temp;
  #L350fc4.  return v2;
}
procedure `int` `f`(`n.a.a.a.t.b.c` v1 @kind this) @signature `Ln/a/a/a/t/b/c;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351040.  v0:= `@@n.a.a.a.t.b.c.f` @type ^`java.math.BigInteger` @kind object;
  #L351044.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L35104a.  v0:= temp;
  #L35104c.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.c` v3 @kind this) @signature `Ln/a/a/a/t/b/c;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L351158.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35115e.  v0:= temp @kind object;
  #L351160.  v1:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L351164.  v2:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351168.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L35116e.  v1:= new `n.a.a.a.t.b.c`;
  #L351172.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351178.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.c` v1 @kind this) @signature `Ln/a/a/a/t/b/c;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350fd8.  v0:= v1.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L350fdc.  call temp:= `m`(v0) @signature `Ln/a/a/c/b;.m:([I)Z` @kind static;
  #L350fe2.  v0:= temp;
  #L350fe4.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.c` v4 @kind this) @signature `Ln/a/a/a/t/b/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L351060.  v0:= `@@n.a.a.a.t.b.c.f` @type ^`java.math.BigInteger` @kind object;
  #L351064.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L35106a.  v0:= temp;
  #L35106c.  v1:= v4.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351070.  v2:= 0I;
  #L351072.  v3:= 6I;
  #L351074.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L35107a.  v1:= temp;
  #L35107c.  v0:= v0 ^~ v1 @kind int;
  #L35107e.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.c` v1 @kind this) @signature `Ln/a/a/a/t/b/c;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350ff8.  v0:= v1.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L350ffc.  call temp:= `n`(v0) @signature `Ln/a/a/c/b;.n:([I)Z` @kind static;
  #L351002.  v0:= temp;
  #L351004.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.c` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/c;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35118c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351192.  v0:= temp @kind object;
  #L351194.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351198.  v3:= (`n.a.a.a.t.b.c`) v3 @kind object;
  #L35119c.  v3:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3511a0.  call `d`(v1, v3, v0) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3511a6.  v3:= new `n.a.a.a.t.b.c`;
  #L3511aa.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L3511b0.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.c` v2 @kind this) @signature `Ln/a/a/a/t/b/c;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3511c4.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L3511ca.  v0:= temp @kind object;
  #L3511cc.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3511d0.  call `f`(v1, v0) @signature `Ln/a/a/a/t/b/b;.f:([I[I)V` @kind static;
  #L3511d6.  v1:= new `n.a.a.a.t.b.c`;
  #L3511da.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L3511e0.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.c` v6 @kind this) @signature `Ln/a/a/a/t/b/c;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3511f4.  v0:= v6.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L3511f8.  call temp:= `n`(v0) @signature `Ln/a/a/c/b;.n:([I)Z` @kind static;
  #L3511fe.  v1:= temp;
  #L351200.  if v1 != 0 then goto L351318;
  #L351204.  call temp:= `m`(v0) @signature `Ln/a/a/c/b;.m:([I)Z` @kind static;
  #L35120a.  v1:= temp;
  #L35120c.  if v1 == 0 then goto L351214;
  #L351210.  goto L351318;
  #L351214.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35121a.  v1:= temp @kind object;
  #L35121c.  call `i`(v0, v1) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @kind static;
  #L351222.  call `d`(v1, v0, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L351228.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35122e.  v2:= temp @kind object;
  #L351230.  call `i`(v1, v2) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @kind static;
  #L351236.  call `d`(v2, v0, v2) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L35123c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351242.  v3:= temp @kind object;
  #L351244.  v4:= 3I;
  #L351246.  call `j`(v2, v4, v3) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L35124c.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L351252.  v5:= 2I;
  #L351254.  call `j`(v3, v5, v3) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L35125a.  call `d`(v3, v1, v3) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L351260.  v5:= 8I;
  #L351264.  call `j`(v3, v5, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L35126a.  call `d`(v1, v3, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L351270.  call `j`(v1, v4, v3) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L351276.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L35127c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351282.  v4:= temp @kind object;
  #L351284.  v5:= 16I;
  #L351288.  call `j`(v3, v5, v4) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L35128e.  call `d`(v4, v1, v4) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L351294.  v5:= 35I;
  #L351298.  call `j`(v4, v5, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L35129e.  call `d`(v1, v4, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512a4.  v5:= 70I;
  #L3512a8.  call `j`(v1, v5, v4) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L3512ae.  call `d`(v4, v1, v4) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512b4.  v5:= 19I;
  #L3512b8.  call `j`(v4, v5, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L3512be.  call `d`(v1, v3, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512c4.  v4:= 20I;
  #L3512c8.  call `j`(v1, v4, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L3512ce.  call `d`(v1, v3, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512d4.  v3:= 4I;
  #L3512d6.  call `j`(v1, v3, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L3512dc.  call `d`(v1, v2, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512e2.  v3:= 6I;
  #L3512e4.  call `j`(v1, v3, v1) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @kind static;
  #L3512ea.  call `d`(v1, v2, v1) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @kind static;
  #L3512f0.  call `i`(v1, v1) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @kind static;
  #L3512f6.  call `i`(v1, v2) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @kind static;
  #L3512fc.  call temp:= `h`(v0, v2) @signature `Ln/a/a/c/b;.h:([I[I)Z` @kind static;
  #L351302.  v0:= temp;
  #L351304.  if v0 == 0 then goto L351314;
  #L351308.  v0:= new `n.a.a.a.t.b.c`;
  #L35130c.  call `<init>`(v0, v1) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351312.  goto L351316;
  #L351314.  v0:= 0I;
  #L351316.  return v0 @kind object;
  #L351318.  return v6 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.c` v2 @kind this) @signature `Ln/a/a/a/t/b/c;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35132c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351332.  v0:= temp @kind object;
  #L351334.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351338.  call `i`(v1, v0) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @kind static;
  #L35133e.  v1:= new `n.a.a.a.t.b.c`;
  #L351342.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351348.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.c` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/c;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35135c.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351362.  v0:= temp @kind object;
  #L351364.  v1:= v2.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351368.  v3:= (`n.a.a.a.t.b.c`) v3 @kind object;
  #L35136c.  v3:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351370.  call `k`(v1, v3, v0) @signature `Ln/a/a/a/t/b/b;.k:([I[I[I)V` @kind static;
  #L351376.  v3:= new `n.a.a.a.t.b.c`;
  #L35137a.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/c;.<init>:([I)V` @kind direct;
  #L351380.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.c` v3 @kind this) @signature `Ln/a/a/a/t/b/c;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L351018.  v0:= v3.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L35101c.  v1:= 0I;
  #L35101e.  call temp:= `j`(v0, v1) @signature `Ln/a/a/c/b;.j:([II)I` @kind static;
  #L351024.  v0:= temp;
  #L351026.  v2:= 1I;
  #L351028.  if v0 != v2 then goto L35102e;
  #L35102c.  v1:= 1I;
  #L35102e.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.c` v1 @kind this) @signature `Ln/a/a/a/t/b/c;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351090.  v0:= v1.`n.a.a.a.t.b.c.g` @type ^`int`[] @kind object;
  #L351094.  call temp:= `z`(v0) @signature `Ln/a/a/c/b;.z:([I)Ljava/math/BigInteger;` @kind static;
  #L35109a.  v0:= temp @kind object;
  #L35109c.  return v0 @kind object;
}
