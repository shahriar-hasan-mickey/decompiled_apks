record `n.a.a.a.t.b.i` @kind class @AccessFlag PUBLIC extends `n.a.a.a.d` @kind class {
  `n.a.a.a.t.b.l` `n.a.a.a.t.b.i.j` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.i.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L352de8.  v0:= new `java.math.BigInteger`;
  #L352dec.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFE56D" @kind object;
  #L352df0.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L352df6.  v1:= temp @kind object;
  #L352df8.  v2:= 1I;
  #L352dfa.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L352e00.  `@@n.a.a.a.t.b.i.i` @type ^`java.math.BigInteger` := v0 @kind object;
  #L352e04.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.i` v3 @kind this) @signature `Ln/a/a/a/t/b/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L352e18.  v0:= `@@n.a.a.a.t.b.i.i` @type ^`java.math.BigInteger` @kind object;
  #L352e1c.  call `<init>`(v3, v0) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L352e22.  v0:= new `n.a.a.a.t.b.l`;
  #L352e26.  v1:= 0I;
  #L352e28.  call `<init>`(v0, v3, v1, v1) @signature `Ln/a/a/a/t/b/l;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L352e2e.  v3.`n.a.a.a.t.b.i.j` @type ^`n.a.a.a.t.b.l` := v0 @kind object;
  #L352e32.  v0:= `@@n.a.a.a.b.a` @type ^`java.math.BigInteger` @kind object;
  #L352e36.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/i;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L352e3c.  v0:= temp @kind object;
  #L352e3e.  v3.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v0 @kind object;
  #L352e42.  v0:= 5L;
  #L352e46.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L352e4c.  v0:= temp @kind object;
  #L352e4e.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/i;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L352e54.  v0:= temp @kind object;
  #L352e56.  v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v0 @kind object;
  #L352e5a.  v0:= new `java.math.BigInteger`;
  #L352e5e.  v1:= "010000000000000000000000000001DCE8D2EC6184CAF0A971769FB1F7" @kind object;
  #L352e62.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L352e68.  v1:= temp @kind object;
  #L352e6a.  v2:= 1I;
  #L352e6c.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L352e72.  v3.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v0 @kind object;
  #L352e76.  v0:= 1L;
  #L352e7a.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L352e80.  v0:= temp @kind object;
  #L352e82.  v3.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v0 @kind object;
  #L352e86.  v0:= 2I;
  #L352e88.  v3.`n.a.a.a.f.f` @type ^`int` := v0;
  #L352e8c.  return @kind void;
}
procedure `n.a.a.a.f` `b`(`n.a.a.a.t.b.i` v1 @kind this) @signature `Ln/a/a/a/t/b/i;.b:()Ln/a/a/a/f;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L352d7c.  v0:= new `n.a.a.a.t.b.i`;
  #L352d80.  call `<init>`(v0) @signature `Ln/a/a/a/t/b/i;.<init>:()V` @kind direct;
  #L352d86.  return v0 @kind object;
}
procedure `n.a.a.a.p` `f`(`n.a.a.a.t.b.i` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object, `boolean` v4 ) @signature `Ln/a/a/a/t/b/i;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L352db4.  v0:= new `n.a.a.a.t.b.l`;
  #L352db8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/t/b/l;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;Z)V` @kind direct;
  #L352dbe.  return v0 @kind object;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.i` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/i;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352d98.  v0:= new `n.a.a.a.t.b.k`;
  #L352d9c.  call `<init>`(v0, v2) @signature `Ln/a/a/a/t/b/k;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L352da2.  return v0 @kind object;
}
procedure `int` `p`(`n.a.a.a.t.b.i` v1 @kind this) @signature `Ln/a/a/a/t/b/i;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352d5c.  v0:= `@@n.a.a.a.t.b.i.i` @type ^`java.math.BigInteger` @kind object;
  #L352d60.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L352d66.  v0:= temp;
  #L352d68.  return v0;
}
procedure `n.a.a.a.p` `q`(`n.a.a.a.t.b.i` v1 @kind this) @signature `Ln/a/a/a/t/b/i;.q:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352dd0.  v0:= v1.`n.a.a.a.t.b.i.j` @type ^`n.a.a.a.t.b.l` @kind object;
  #L352dd4.  return v0 @kind object;
}
procedure `boolean` `v`(`n.a.a.a.t.b.i` v1 @kind this, `int` v2 ) @signature `Ln/a/a/a/t/b/i;.v:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352d3c.  v0:= 2I;
  #L352d3e.  if v2 == v0 then goto L352d46;
  #L352d42.  v2:= 0I;
  #L352d44.  return v2;
  #L352d46.  v2:= 1I;
  #L352d48.  return v2;
}
