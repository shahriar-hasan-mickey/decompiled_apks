record `n.a.a.a.t.b.a` @kind class @AccessFlag PUBLIC extends `n.a.a.a.d` @kind class {
  `n.a.a.a.t.b.d` `n.a.a.a.t.b.a.j` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.a.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L350ee4.  v0:= new `java.math.BigInteger`;
  #L350ee8.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37" @kind object;
  #L350eec.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L350ef2.  v1:= temp @kind object;
  #L350ef4.  v2:= 1I;
  #L350ef6.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L350efc.  `@@n.a.a.a.t.b.a.i` @type ^`java.math.BigInteger` := v0 @kind object;
  #L350f00.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.a` v3 @kind this) @signature `Ln/a/a/a/t/b/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L350f14.  v0:= `@@n.a.a.a.t.b.a.i` @type ^`java.math.BigInteger` @kind object;
  #L350f18.  call `<init>`(v3, v0) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L350f1e.  v0:= new `n.a.a.a.t.b.d`;
  #L350f22.  v1:= 0I;
  #L350f24.  call `<init>`(v0, v3, v1, v1) @signature `Ln/a/a/a/t/b/d;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L350f2a.  v3.`n.a.a.a.t.b.a.j` @type ^`n.a.a.a.t.b.d` := v0 @kind object;
  #L350f2e.  v0:= `@@n.a.a.a.b.a` @type ^`java.math.BigInteger` @kind object;
  #L350f32.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L350f38.  v0:= temp @kind object;
  #L350f3a.  v3.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v0 @kind object;
  #L350f3e.  v0:= 3L;
  #L350f42.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L350f48.  v0:= temp @kind object;
  #L350f4a.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L350f50.  v0:= temp @kind object;
  #L350f52.  v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v0 @kind object;
  #L350f56.  v0:= new `java.math.BigInteger`;
  #L350f5a.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D" @kind object;
  #L350f5e.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L350f64.  v1:= temp @kind object;
  #L350f66.  v2:= 1I;
  #L350f68.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L350f6e.  v3.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v0 @kind object;
  #L350f72.  v0:= 1L;
  #L350f76.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L350f7c.  v0:= temp @kind object;
  #L350f7e.  v3.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v0 @kind object;
  #L350f82.  v0:= 2I;
  #L350f84.  v3.`n.a.a.a.f.f` @type ^`int` := v0;
  #L350f88.  return @kind void;
}
procedure `n.a.a.a.f` `b`(`n.a.a.a.t.b.a` v1 @kind this) @signature `Ln/a/a/a/t/b/a;.b:()Ln/a/a/a/f;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L350e78.  v0:= new `n.a.a.a.t.b.a`;
  #L350e7c.  call `<init>`(v0) @signature `Ln/a/a/a/t/b/a;.<init>:()V` @kind direct;
  #L350e82.  return v0 @kind object;
}
procedure `n.a.a.a.p` `f`(`n.a.a.a.t.b.a` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object, `boolean` v4 ) @signature `Ln/a/a/a/t/b/a;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L350eb0.  v0:= new `n.a.a.a.t.b.d`;
  #L350eb4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/t/b/d;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;Z)V` @kind direct;
  #L350eba.  return v0 @kind object;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.a` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/a;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350e94.  v0:= new `n.a.a.a.t.b.c`;
  #L350e98.  call `<init>`(v0, v2) @signature `Ln/a/a/a/t/b/c;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L350e9e.  return v0 @kind object;
}
procedure `int` `p`(`n.a.a.a.t.b.a` v1 @kind this) @signature `Ln/a/a/a/t/b/a;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350e58.  v0:= `@@n.a.a.a.t.b.a.i` @type ^`java.math.BigInteger` @kind object;
  #L350e5c.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L350e62.  v0:= temp;
  #L350e64.  return v0;
}
procedure `n.a.a.a.p` `q`(`n.a.a.a.t.b.a` v1 @kind this) @signature `Ln/a/a/a/t/b/a;.q:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350ecc.  v0:= v1.`n.a.a.a.t.b.a.j` @type ^`n.a.a.a.t.b.d` @kind object;
  #L350ed0.  return v0 @kind object;
}
procedure `boolean` `v`(`n.a.a.a.t.b.a` v1 @kind this, `int` v2 ) @signature `Ln/a/a/a/t/b/a;.v:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350e38.  v0:= 2I;
  #L350e3a.  if v2 == v0 then goto L350e42;
  #L350e3e.  v2:= 0I;
  #L350e40.  return v2;
  #L350e42.  v2:= 1I;
  #L350e44.  return v2;
}
