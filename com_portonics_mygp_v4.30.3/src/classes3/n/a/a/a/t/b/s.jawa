record `n.a.a.a.t.b.s` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.s.g` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.s.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L355488.  v0:= `@@n.a.a.a.t.b.q.i` @type ^`java.math.BigInteger` @kind object;
  #L35548c.  `@@n.a.a.a.t.b.s.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L355490.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.s` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/s;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3554c0.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3554c6.  if v2 == 0 then goto L3554f4;
  #L3554ca.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3554d0.  v0:= temp;
  #L3554d2.  if v0 < 0 then goto L3554f4;
  #L3554d6.  v0:= `@@n.a.a.a.t.b.s.f` @type ^`java.math.BigInteger` @kind object;
  #L3554da.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3554e0.  v0:= temp;
  #L3554e2.  if v0 >= 0 then goto L3554f4;
  #L3554e6.  call temp:= `c`(v2) @signature `Ln/a/a/a/t/b/r;.c:(Ljava/math/BigInteger;)[I` @kind static;
  #L3554ec.  v2:= temp @kind object;
  #L3554ee.  v1.`n.a.a.a.t.b.s.g` @type ^`int`[] := v2 @kind object;
  #L3554f2.  return @kind void;
  #L3554f4.  v2:= new `java.lang.IllegalArgumentException`;
  #L3554f8.  v0:= "x value invalid for SecP256K1FieldElement" @kind object;
  #L3554fc.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355502.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.s` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3554a4.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3554aa.  v0.`n.a.a.a.t.b.s.g` @type ^`int`[] := v1 @kind object;
  #L3554ae.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.s` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/s;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35519c.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3551a2.  v0:= temp @kind object;
  #L3551a4.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3551a8.  v3:= (`n.a.a.a.t.b.s`) v3 @kind object;
  #L3551ac.  v3:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3551b0.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/r;.a:([I[I[I)V` @kind static;
  #L3551b6.  v3:= new `n.a.a.a.t.b.s`;
  #L3551ba.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L3551c0.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.s` v2 @kind this) @signature `Ln/a/a/a/t/b/s;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3551d4.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3551da.  v0:= temp @kind object;
  #L3551dc.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3551e0.  call `b`(v1, v0) @signature `Ln/a/a/a/t/b/r;.b:([I[I)V` @kind static;
  #L3551e6.  v1:= new `n.a.a.a.t.b.s`;
  #L3551ea.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L3551f0.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.s` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/s;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355204.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35520a.  v0:= temp @kind object;
  #L35520c.  v1:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L355210.  v3:= (`n.a.a.a.t.b.s`) v3 @kind object;
  #L355214.  v3:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355218.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L35521e.  v3:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355222.  call `d`(v0, v3, v0) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355228.  v3:= new `n.a.a.a.t.b.s`;
  #L35522c.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L355232.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/t/b/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355084.  if v2 != v1 then goto L35508c;
  #L355088.  v2:= 1I;
  #L35508a.  return v2;
  #L35508c.  v0:= instanceof @variable v2 @type ^`n.a.a.a.t.b.s` @kind boolean;
  #L355090.  if v0 != 0 then goto L355098;
  #L355094.  v2:= 0I;
  #L355096.  return v2;
  #L355098.  v2:= (`n.a.a.a.t.b.s`) v2 @kind object;
  #L35509c.  v0:= v1.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3550a0.  v2:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3550a4.  call temp:= `i`(v0, v2) @signature `Ln/a/a/c/d;.i:([I[I)Z` @kind static;
  #L3550aa.  v2:= temp;
  #L3550ac.  return v2;
}
procedure `int` `f`(`n.a.a.a.t.b.s` v1 @kind this) @signature `Ln/a/a/a/t/b/s;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355128.  v0:= `@@n.a.a.a.t.b.s.f` @type ^`java.math.BigInteger` @kind object;
  #L35512c.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L355132.  v0:= temp;
  #L355134.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.s` v3 @kind this) @signature `Ln/a/a/a/t/b/s;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L355244.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35524a.  v0:= temp @kind object;
  #L35524c.  v1:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L355250.  v2:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355254.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L35525a.  v1:= new `n.a.a.a.t.b.s`;
  #L35525e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L355264.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.s` v1 @kind this) @signature `Ln/a/a/a/t/b/s;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3550c0.  v0:= v1.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3550c4.  call temp:= `n`(v0) @signature `Ln/a/a/c/d;.n:([I)Z` @kind static;
  #L3550ca.  v0:= temp;
  #L3550cc.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.s` v4 @kind this) @signature `Ln/a/a/a/t/b/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L355148.  v0:= `@@n.a.a.a.t.b.s.f` @type ^`java.math.BigInteger` @kind object;
  #L35514c.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L355152.  v0:= temp;
  #L355154.  v1:= v4.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355158.  v2:= 0I;
  #L35515a.  v3:= 8I;
  #L35515e.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L355164.  v1:= temp;
  #L355166.  v0:= v0 ^~ v1 @kind int;
  #L355168.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.s` v1 @kind this) @signature `Ln/a/a/a/t/b/s;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3550e0.  v0:= v1.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3550e4.  call temp:= `o`(v0) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L3550ea.  v0:= temp;
  #L3550ec.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.s` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/s;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355278.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35527e.  v0:= temp @kind object;
  #L355280.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355284.  v3:= (`n.a.a.a.t.b.s`) v3 @kind object;
  #L355288.  v3:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L35528c.  call `d`(v1, v3, v0) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355292.  v3:= new `n.a.a.a.t.b.s`;
  #L355296.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L35529c.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.s` v2 @kind this) @signature `Ln/a/a/a/t/b/s;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3552b0.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3552b6.  v0:= temp @kind object;
  #L3552b8.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3552bc.  call `f`(v1, v0) @signature `Ln/a/a/a/t/b/r;.f:([I[I)V` @kind static;
  #L3552c2.  v1:= new `n.a.a.a.t.b.s`;
  #L3552c6.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L3552cc.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.s` v11 @kind this) @signature `Ln/a/a/a/t/b/s;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3552e0.  v0:= v11.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L3552e4.  call temp:= `o`(v0) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L3552ea.  v1:= temp;
  #L3552ec.  if v1 != 0 then goto L35540e;
  #L3552f0.  call temp:= `n`(v0) @signature `Ln/a/a/c/d;.n:([I)Z` @kind static;
  #L3552f6.  v1:= temp;
  #L3552f8.  if v1 == 0 then goto L355300;
  #L3552fc.  goto L35540e;
  #L355300.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L355306.  v1:= temp @kind object;
  #L355308.  call `i`(v0, v1) @signature `Ln/a/a/a/t/b/r;.i:([I[I)V` @kind static;
  #L35530e.  call `d`(v1, v0, v1) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355314.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35531a.  v2:= temp @kind object;
  #L35531c.  call `i`(v1, v2) @signature `Ln/a/a/a/t/b/r;.i:([I[I)V` @kind static;
  #L355322.  call `d`(v2, v0, v2) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355328.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35532e.  v3:= temp @kind object;
  #L355330.  v4:= 3I;
  #L355332.  call `j`(v2, v4, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L355338.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L35533e.  call `j`(v3, v4, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L355344.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L35534a.  v5:= 2I;
  #L35534c.  call `j`(v3, v5, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L355352.  call `d`(v3, v1, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355358.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35535e.  v6:= temp @kind object;
  #L355360.  v7:= 11I;
  #L355364.  call `j`(v3, v7, v6) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L35536a.  call `d`(v6, v3, v6) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355370.  v7:= 22I;
  #L355374.  call `j`(v6, v7, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L35537a.  call `d`(v3, v6, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355380.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L355386.  v7:= temp @kind object;
  #L355388.  v8:= 44I;
  #L35538c.  call `j`(v3, v8, v7) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L355392.  call `d`(v7, v3, v7) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L355398.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35539e.  v9:= temp @kind object;
  #L3553a0.  v10:= 88I;
  #L3553a4.  call `j`(v7, v10, v9) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553aa.  call `d`(v9, v7, v9) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L3553b0.  call `j`(v9, v8, v7) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553b6.  call `d`(v7, v3, v7) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L3553bc.  call `j`(v7, v4, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553c2.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L3553c8.  v2:= 23I;
  #L3553cc.  call `j`(v3, v2, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553d2.  call `d`(v3, v6, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L3553d8.  v2:= 6I;
  #L3553da.  call `j`(v3, v2, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553e0.  call `d`(v3, v1, v3) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @kind static;
  #L3553e6.  call `j`(v3, v5, v3) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @kind static;
  #L3553ec.  call `i`(v3, v1) @signature `Ln/a/a/a/t/b/r;.i:([I[I)V` @kind static;
  #L3553f2.  call temp:= `i`(v0, v1) @signature `Ln/a/a/c/d;.i:([I[I)Z` @kind static;
  #L3553f8.  v0:= temp;
  #L3553fa.  if v0 == 0 then goto L35540a;
  #L3553fe.  v0:= new `n.a.a.a.t.b.s`;
  #L355402.  call `<init>`(v0, v3) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L355408.  goto L35540c;
  #L35540a.  v0:= 0I;
  #L35540c.  return v0 @kind object;
  #L35540e.  return v11 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.s` v2 @kind this) @signature `Ln/a/a/a/t/b/s;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355420.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L355426.  v0:= temp @kind object;
  #L355428.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L35542c.  call `i`(v1, v0) @signature `Ln/a/a/a/t/b/r;.i:([I[I)V` @kind static;
  #L355432.  v1:= new `n.a.a.a.t.b.s`;
  #L355436.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L35543c.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.s` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/s;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355450.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L355456.  v0:= temp @kind object;
  #L355458.  v1:= v2.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L35545c.  v3:= (`n.a.a.a.t.b.s`) v3 @kind object;
  #L355460.  v3:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355464.  call `k`(v1, v3, v0) @signature `Ln/a/a/a/t/b/r;.k:([I[I[I)V` @kind static;
  #L35546a.  v3:= new `n.a.a.a.t.b.s`;
  #L35546e.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/s;.<init>:([I)V` @kind direct;
  #L355474.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.s` v3 @kind this) @signature `Ln/a/a/a/t/b/s;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L355100.  v0:= v3.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355104.  v1:= 0I;
  #L355106.  call temp:= `k`(v0, v1) @signature `Ln/a/a/c/d;.k:([II)I` @kind static;
  #L35510c.  v0:= temp;
  #L35510e.  v2:= 1I;
  #L355110.  if v0 != v2 then goto L355116;
  #L355114.  v1:= 1I;
  #L355116.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.s` v1 @kind this) @signature `Ln/a/a/a/t/b/s;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35517c.  v0:= v1.`n.a.a.a.t.b.s.g` @type ^`int`[] @kind object;
  #L355180.  call temp:= `B`(v0) @signature `Ln/a/a/c/d;.B:([I)Ljava/math/BigInteger;` @kind static;
  #L355186.  v0:= temp @kind object;
  #L355188.  return v0 @kind object;
}
