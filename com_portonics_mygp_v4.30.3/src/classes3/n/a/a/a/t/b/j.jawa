record `n.a.a.a.t.b.j` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int`[] `@@n.a.a.a.t.b.j.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.j.b` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.j.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3533e0.  v0:= 7I;
  #L3533e2.  v0:= new `int`[v0];
  #L3533e6.  goto L353418;
  #L3533ec.  `@@n.a.a.a.t.b.j.a` @type ^`int`[] := v0 @kind object;
  #L3533f0.  v0:= 14I;
  #L3533f4.  v0:= new `int`[v0];
  #L3533f8.  goto L35343c;
  #L3533fe.  `@@n.a.a.a.t.b.j.b` @type ^`int`[] := v0 @kind object;
  #L353402.  v0:= 9I;
  #L353406.  v0:= new `int`[v0];
  #L35340a.  goto L35347c;
  #L353410.  `@@n.a.a.a.t.b.j.c` @type ^`int`[] := v0 @kind object;
  #L353414.  return @kind void;
  #L353416.  
  #L353418.  v0:= (-6803I, -2I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L35343b.  goto L3533ec;
  #L35343c.  v0:= (46280809I, 13606I, 1I, 0I, 0I, 0I, 0I, -13606I, -3I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L35347b.  goto L3533fe;
  #L35347c.  v0:= (-46280809I, -13607I, -2I, -1I, -1I, -1I, -1I, 13605I, 2I) @kind object;
  #L3534a7.  goto L353410;
}
procedure `void` `a`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/j;.a:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3534b8.  call temp:= `a`(v0, v1, v2) @signature `Ln/a/a/c/c;.a:([I[I[I)I` @kind static;
  #L3534be.  v0:= temp;
  #L3534c0.  if v0 != 0 then goto L3534e0;
  #L3534c4.  v0:= 6I;
  #L3534c6.  v0:= v2[v0];
  #L3534ca.  v1:= -1I;
  #L3534cc.  if v0 != v1 then goto L3534ec;
  #L3534d0.  v0:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L3534d4.  call temp:= `i`(v2, v0) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L3534da.  v0:= temp;
  #L3534dc.  if v0 == 0 then goto L3534ec;
  #L3534e0.  v0:= 7I;
  #L3534e2.  v1:= 6803I;
  #L3534e6.  call temp:= `b`(v0, v1, v2) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3534ec.  return @kind void;
}
procedure `void` `b`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.b:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L353500.  v0:= 7I;
  #L353502.  call temp:= `q`(v0, v2, v3) @signature `Ln/a/a/c/g;.q:(I[I[I)I` @kind static;
  #L353508.  v2:= temp;
  #L35350a.  if v2 != 0 then goto L35352a;
  #L35350e.  v2:= 6I;
  #L353510.  v2:= v3[v2];
  #L353514.  v1:= -1I;
  #L353516.  if v2 != v1 then goto L353534;
  #L35351a.  v2:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L35351e.  call temp:= `i`(v3, v2) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L353524.  v2:= temp;
  #L353526.  if v2 == 0 then goto L353534;
  #L35352a.  v2:= 6803I;
  #L35352e.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L353534.  return @kind void;
}
procedure `int`[] `c`(`java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/j;.c:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35339c.  call temp:= `g`(v2) @signature `Ln/a/a/c/c;.g:(Ljava/math/BigInteger;)[I` @kind static;
  #L3533a2.  v2:= temp @kind object;
  #L3533a4.  v0:= 6I;
  #L3533a6.  v0:= v2[v0];
  #L3533aa.  v1:= -1I;
  #L3533ac.  if v0 != v1 then goto L3533cc;
  #L3533b0.  v0:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L3533b4.  call temp:= `i`(v2, v0) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L3533ba.  v0:= temp;
  #L3533bc.  if v0 == 0 then goto L3533cc;
  #L3533c0.  v0:= 7I;
  #L3533c2.  v1:= 6803I;
  #L3533c6.  call temp:= `b`(v0, v1, v2) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3533cc.  return v2 @kind object;
}
procedure `void` `d`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L353548.  call temp:= `e`() @signature `Ln/a/a/c/c;.e:()[I` @kind static;
  #L35354e.  v0:= temp @kind object;
  #L353550.  call `l`(v1, v2, v0) @signature `Ln/a/a/c/c;.l:([I[I[I)V` @kind static;
  #L353556.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/j;.g:([I[I)V` @kind static;
  #L35355c.  return @kind void;
}
procedure `void` `e`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.e:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L353570.  call temp:= `p`(v1, v2, v3) @signature `Ln/a/a/c/c;.p:([I[I[I)I` @kind static;
  #L353576.  v1:= temp;
  #L353578.  v2:= 14I;
  #L35357c.  if v1 != 0 then goto L35359e;
  #L353580.  v1:= 13I;
  #L353584.  v1:= v3[v1];
  #L353588.  v0:= -1I;
  #L35358a.  if v1 != v0 then goto L3535b8;
  #L35358e.  v1:= `@@n.a.a.a.t.b.j.b` @type ^`int`[] @kind object;
  #L353592.  call temp:= `o`(v2, v3, v1) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L353598.  v1:= temp;
  #L35359a.  if v1 == 0 then goto L3535b8;
  #L35359e.  v1:= `@@n.a.a.a.t.b.j.c` @type ^`int`[] @kind object;
  #L3535a2.  v0:= length @variable v1;
  #L3535a4.  call temp:= `e`(v0, v1, v3) @signature `Ln/a/a/c/g;.e:(I[I[I)I` @kind static;
  #L3535aa.  v0:= temp;
  #L3535ac.  if v0 == 0 then goto L3535b8;
  #L3535b0.  v1:= length @variable v1;
  #L3535b2.  call temp:= `r`(v2, v3, v1) @signature `Ln/a/a/c/g;.r:(I[II)I` @kind static;
  #L3535b8.  return @kind void;
}
procedure `void` `f`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/j;.f:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3535cc.  call temp:= `k`(v1) @signature `Ln/a/a/c/c;.k:([I)Z` @kind static;
  #L3535d2.  v0:= temp;
  #L3535d4.  if v0 == 0 then goto L3535e0;
  #L3535d8.  call `u`(v2) @signature `Ln/a/a/c/c;.u:([I)V` @kind static;
  #L3535de.  goto L3535ea;
  #L3535e0.  v0:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L3535e4.  call temp:= `r`(v0, v1, v2) @signature `Ln/a/a/c/c;.r:([I[I[I)I` @kind static;
  #L3535ea.  return @kind void;
}
procedure `void` `g`(`int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Ln/a/a/a/t/b/j;.g:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3535fc.  v0:= 6803I;
  #L353600.  v2:= 7I;
  #L353602.  v4:= 0I;
  #L353604.  v6:= 0I;
  #L353606.  v1:= v7 @kind object;
  #L353608.  v3:= v7 @kind object;
  #L35360a.  v5:= v8 @kind object;
  #L35360c.  call temp:= `m`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/c/c;.m:(I[II[II[II)J` @kind static;
  #L353612.  v0:= temp @kind wide;
  #L353614.  v7:= 6803I;
  #L353618.  v2:= 0I;
  #L35361a.  call temp:= `n`(v7, v0, v8, v2) @signature `Ln/a/a/c/c;.n:(IJ[II)I` @kind static;
  #L353620.  v0:= temp;
  #L353622.  if v0 != 0 then goto L353642;
  #L353626.  v0:= 6I;
  #L353628.  v0:= v8[v0];
  #L35362c.  v1:= -1I;
  #L35362e.  if v0 != v1 then goto L35364a;
  #L353632.  v0:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L353636.  call temp:= `i`(v8, v0) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L35363c.  v0:= temp;
  #L35363e.  if v0 == 0 then goto L35364a;
  #L353642.  v0:= 7I;
  #L353644.  call temp:= `b`(v0, v7, v8) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L35364a.  return @kind void;
}
procedure `void` `h`(`int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.h:(I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35365c.  v0:= 6803I;
  #L353660.  if v2 == 0 then goto L353672;
  #L353664.  v1:= 0I;
  #L353666.  call temp:= `o`(v0, v2, v3, v1) @signature `Ln/a/a/c/c;.o:(II[II)I` @kind static;
  #L35366c.  v2:= temp;
  #L35366e.  if v2 != 0 then goto L35368e;
  #L353672.  v2:= 6I;
  #L353674.  v2:= v3[v2];
  #L353678.  v1:= -1I;
  #L35367a.  if v2 != v1 then goto L353696;
  #L35367e.  v2:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L353682.  call temp:= `i`(v3, v2) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L353688.  v2:= temp;
  #L35368a.  if v2 == 0 then goto L353696;
  #L35368e.  v2:= 7I;
  #L353690.  call temp:= `b`(v2, v0, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L353696.  return @kind void;
}
procedure `void` `i`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3536a8.  call temp:= `e`() @signature `Ln/a/a/c/c;.e:()[I` @kind static;
  #L3536ae.  v0:= temp @kind object;
  #L3536b0.  call `q`(v1, v0) @signature `Ln/a/a/c/c;.q:([I[I)V` @kind static;
  #L3536b6.  call `g`(v0, v2) @signature `Ln/a/a/a/t/b/j;.g:([I[I)V` @kind static;
  #L3536bc.  return @kind void;
}
procedure `void` `j`(`int`[] v1 @kind object, `int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3536d0.  call temp:= `e`() @signature `Ln/a/a/c/c;.e:()[I` @kind static;
  #L3536d6.  v0:= temp @kind object;
  #L3536d8.  call `q`(v1, v0) @signature `Ln/a/a/c/c;.q:([I[I)V` @kind static;
  #L3536de.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/j;.g:([I[I)V` @kind static;
  #L3536e4.  v2:= v2 + -1;
  #L3536e8.  if v2 <= 0 then goto L3536f4;
  #L3536ec.  call `q`(v3, v0) @signature `Ln/a/a/c/c;.q:([I[I)V` @kind static;
  #L3536f2.  goto L3536de;
  #L3536f4.  return @kind void;
}
procedure `void` `k`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/j;.k:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L353708.  call temp:= `r`(v0, v1, v2) @signature `Ln/a/a/c/c;.r:([I[I[I)I` @kind static;
  #L35370e.  v0:= temp;
  #L353710.  if v0 == 0 then goto L353720;
  #L353714.  v0:= 7I;
  #L353716.  v1:= 6803I;
  #L35371a.  call temp:= `G`(v0, v1, v2) @signature `Ln/a/a/c/g;.G:(II[I)I` @kind static;
  #L353720.  return @kind void;
}
procedure `void` `l`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/j;.l:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L353734.  v0:= 7I;
  #L353736.  v1:= 0I;
  #L353738.  call temp:= `C`(v0, v2, v1, v3) @signature `Ln/a/a/c/g;.C:(I[II[I)I` @kind static;
  #L35373e.  v2:= temp;
  #L353740.  if v2 != 0 then goto L353760;
  #L353744.  v2:= 6I;
  #L353746.  v2:= v3[v2];
  #L35374a.  v1:= -1I;
  #L35374c.  if v2 != v1 then goto L35376a;
  #L353750.  v2:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L353754.  call temp:= `i`(v3, v2) @signature `Ln/a/a/c/c;.i:([I[I)Z` @kind static;
  #L35375a.  v2:= temp;
  #L35375c.  if v2 == 0 then goto L35376a;
  #L353760.  v2:= 6803I;
  #L353764.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L35376a.  return @kind void;
}
