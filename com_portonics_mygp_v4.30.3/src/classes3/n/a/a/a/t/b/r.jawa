record `n.a.a.a.t.b.r` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int`[] `@@n.a.a.a.t.b.r.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.r.b` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.r.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L355550.  v0:= 8I;
  #L355554.  v0:= new `int`[v0];
  #L355558.  goto L355588;
  #L35555e.  `@@n.a.a.a.t.b.r.a` @type ^`int`[] := v0 @kind object;
  #L355562.  v0:= 16I;
  #L355566.  v0:= new `int`[v0];
  #L35556a.  goto L3555b0;
  #L355570.  `@@n.a.a.a.t.b.r.b` @type ^`int`[] := v0 @kind object;
  #L355574.  v0:= 10I;
  #L355578.  v0:= new `int`[v0];
  #L35557c.  goto L3555f8;
  #L355582.  `@@n.a.a.a.t.b.r.c` @type ^`int`[] := v0 @kind object;
  #L355586.  return @kind void;
  #L355588.  v0:= (-977I, -2I, -1I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L3555af.  goto L35555e;
  #L3555b0.  v0:= (954529I, 1954I, 1I, 0I, 0I, 0I, 0I, 0I, -1954I, -3I, -1I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L3555f7.  goto L355570;
  #L3555f8.  v0:= (-954529I, -1955I, -2I, -1I, -1I, -1I, -1I, -1I, 1953I, 2I) @kind object;
  #L355627.  goto L355582;
}
procedure `void` `a`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/r;.a:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L355638.  call temp:= `a`(v0, v1, v2) @signature `Ln/a/a/c/d;.a:([I[I[I)I` @kind static;
  #L35563e.  v0:= temp;
  #L355640.  if v0 != 0 then goto L355660;
  #L355644.  v0:= 7I;
  #L355646.  v0:= v2[v0];
  #L35564a.  v1:= -1I;
  #L35564c.  if v0 != v1 then goto L35566e;
  #L355650.  v0:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L355654.  call temp:= `m`(v2, v0) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L35565a.  v0:= temp;
  #L35565c.  if v0 == 0 then goto L35566e;
  #L355660.  v0:= 8I;
  #L355664.  v1:= 977I;
  #L355668.  call temp:= `b`(v0, v1, v2) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L35566e.  return @kind void;
}
procedure `void` `b`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.b:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L355680.  v0:= 8I;
  #L355684.  call temp:= `q`(v0, v2, v3) @signature `Ln/a/a/c/g;.q:(I[I[I)I` @kind static;
  #L35568a.  v2:= temp;
  #L35568c.  if v2 != 0 then goto L3556ac;
  #L355690.  v2:= 7I;
  #L355692.  v2:= v3[v2];
  #L355696.  v1:= -1I;
  #L355698.  if v2 != v1 then goto L3556b6;
  #L35569c.  v2:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L3556a0.  call temp:= `m`(v3, v2) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L3556a6.  v2:= temp;
  #L3556a8.  if v2 == 0 then goto L3556b6;
  #L3556ac.  v2:= 977I;
  #L3556b0.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3556b6.  return @kind void;
}
procedure `int`[] `c`(`java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/r;.c:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L355514.  call temp:= `j`(v2) @signature `Ln/a/a/c/d;.j:(Ljava/math/BigInteger;)[I` @kind static;
  #L35551a.  v2:= temp @kind object;
  #L35551c.  v0:= 7I;
  #L35551e.  v0:= v2[v0];
  #L355522.  v1:= -1I;
  #L355524.  if v0 != v1 then goto L35553e;
  #L355528.  v0:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L35552c.  call temp:= `m`(v2, v0) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L355532.  v1:= temp;
  #L355534.  if v1 == 0 then goto L35553e;
  #L355538.  call temp:= `A`(v0, v2) @signature `Ln/a/a/c/d;.A:([I[I)I` @kind static;
  #L35553e.  return v2 @kind object;
}
procedure `void` `d`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.d:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3556c8.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L3556ce.  v0:= temp @kind object;
  #L3556d0.  call `q`(v1, v2, v0) @signature `Ln/a/a/c/d;.q:([I[I[I)V` @kind static;
  #L3556d6.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/r;.g:([I[I)V` @kind static;
  #L3556dc.  return @kind void;
}
procedure `void` `e`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.e:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3556f0.  call temp:= `u`(v1, v2, v3) @signature `Ln/a/a/c/d;.u:([I[I[I)I` @kind static;
  #L3556f6.  v1:= temp;
  #L3556f8.  v2:= 16I;
  #L3556fc.  if v1 != 0 then goto L35571e;
  #L355700.  v1:= 15I;
  #L355704.  v1:= v3[v1];
  #L355708.  v0:= -1I;
  #L35570a.  if v1 != v0 then goto L355738;
  #L35570e.  v1:= `@@n.a.a.a.t.b.r.b` @type ^`int`[] @kind object;
  #L355712.  call temp:= `o`(v2, v3, v1) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L355718.  v1:= temp;
  #L35571a.  if v1 == 0 then goto L355738;
  #L35571e.  v1:= `@@n.a.a.a.t.b.r.c` @type ^`int`[] @kind object;
  #L355722.  v0:= length @variable v1;
  #L355724.  call temp:= `e`(v0, v1, v3) @signature `Ln/a/a/c/g;.e:(I[I[I)I` @kind static;
  #L35572a.  v0:= temp;
  #L35572c.  if v0 == 0 then goto L355738;
  #L355730.  v1:= length @variable v1;
  #L355732.  call temp:= `r`(v2, v3, v1) @signature `Ln/a/a/c/g;.r:(I[II)I` @kind static;
  #L355738.  return @kind void;
}
procedure `void` `f`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/r;.f:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35574c.  call temp:= `o`(v1) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L355752.  v0:= temp;
  #L355754.  if v0 == 0 then goto L355760;
  #L355758.  call `C`(v2) @signature `Ln/a/a/c/d;.C:([I)V` @kind static;
  #L35575e.  goto L35576a;
  #L355760.  v0:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L355764.  call temp:= `z`(v0, v1, v2) @signature `Ln/a/a/c/d;.z:([I[I[I)I` @kind static;
  #L35576a.  return @kind void;
}
procedure `void` `g`(`int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Ln/a/a/a/t/b/r;.g:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35577c.  v0:= 977I;
  #L355780.  v2:= 8I;
  #L355784.  v4:= 0I;
  #L355786.  v6:= 0I;
  #L355788.  v1:= v7 @kind object;
  #L35578a.  v3:= v7 @kind object;
  #L35578c.  v5:= v8 @kind object;
  #L35578e.  call temp:= `r`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/c/d;.r:(I[II[II[II)J` @kind static;
  #L355794.  v0:= temp @kind wide;
  #L355796.  v7:= 977I;
  #L35579a.  v2:= 0I;
  #L35579c.  call temp:= `s`(v7, v0, v8, v2) @signature `Ln/a/a/c/d;.s:(IJ[II)I` @kind static;
  #L3557a2.  v0:= temp;
  #L3557a4.  if v0 != 0 then goto L3557c4;
  #L3557a8.  v0:= 7I;
  #L3557aa.  v0:= v8[v0];
  #L3557ae.  v1:= -1I;
  #L3557b0.  if v0 != v1 then goto L3557ce;
  #L3557b4.  v0:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L3557b8.  call temp:= `m`(v8, v0) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L3557be.  v0:= temp;
  #L3557c0.  if v0 == 0 then goto L3557ce;
  #L3557c4.  v0:= 8I;
  #L3557c8.  call temp:= `b`(v0, v7, v8) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3557ce.  return @kind void;
}
procedure `void` `h`(`int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.h:(I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3557e0.  v0:= 977I;
  #L3557e4.  if v2 == 0 then goto L3557f6;
  #L3557e8.  v1:= 0I;
  #L3557ea.  call temp:= `t`(v0, v2, v3, v1) @signature `Ln/a/a/c/d;.t:(II[II)I` @kind static;
  #L3557f0.  v2:= temp;
  #L3557f2.  if v2 != 0 then goto L355812;
  #L3557f6.  v2:= 7I;
  #L3557f8.  v2:= v3[v2];
  #L3557fc.  v1:= -1I;
  #L3557fe.  if v2 != v1 then goto L35581c;
  #L355802.  v2:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L355806.  call temp:= `m`(v3, v2) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L35580c.  v2:= temp;
  #L35580e.  if v2 == 0 then goto L35581c;
  #L355812.  v2:= 8I;
  #L355816.  call temp:= `b`(v2, v0, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L35581c.  return @kind void;
}
procedure `void` `i`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/r;.i:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L355830.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L355836.  v0:= temp @kind object;
  #L355838.  call `x`(v1, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L35583e.  call `g`(v0, v2) @signature `Ln/a/a/a/t/b/r;.g:([I[I)V` @kind static;
  #L355844.  return @kind void;
}
procedure `void` `j`(`int`[] v1 @kind object, `int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.j:([II[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L355858.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L35585e.  v0:= temp @kind object;
  #L355860.  call `x`(v1, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L355866.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/r;.g:([I[I)V` @kind static;
  #L35586c.  v2:= v2 + -1;
  #L355870.  if v2 <= 0 then goto L35587c;
  #L355874.  call `x`(v3, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L35587a.  goto L355866;
  #L35587c.  return @kind void;
}
procedure `void` `k`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/r;.k:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L355890.  call temp:= `z`(v0, v1, v2) @signature `Ln/a/a/c/d;.z:([I[I[I)I` @kind static;
  #L355896.  v0:= temp;
  #L355898.  if v0 == 0 then goto L3558aa;
  #L35589c.  v0:= 8I;
  #L3558a0.  v1:= 977I;
  #L3558a4.  call temp:= `G`(v0, v1, v2) @signature `Ln/a/a/c/g;.G:(II[I)I` @kind static;
  #L3558aa.  return @kind void;
}
procedure `void` `l`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/r;.l:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3558bc.  v0:= 8I;
  #L3558c0.  v1:= 0I;
  #L3558c2.  call temp:= `C`(v0, v2, v1, v3) @signature `Ln/a/a/c/g;.C:(I[II[I)I` @kind static;
  #L3558c8.  v2:= temp;
  #L3558ca.  if v2 != 0 then goto L3558ea;
  #L3558ce.  v2:= 7I;
  #L3558d0.  v2:= v3[v2];
  #L3558d4.  v1:= -1I;
  #L3558d6.  if v2 != v1 then goto L3558f4;
  #L3558da.  v2:= `@@n.a.a.a.t.b.r.a` @type ^`int`[] @kind object;
  #L3558de.  call temp:= `m`(v3, v2) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L3558e4.  v2:= temp;
  #L3558e6.  if v2 == 0 then goto L3558f4;
  #L3558ea.  v2:= 977I;
  #L3558ee.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3558f4.  return @kind void;
}
