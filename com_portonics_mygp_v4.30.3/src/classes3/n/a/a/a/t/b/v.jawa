record `n.a.a.a.t.b.v` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int`[] `@@n.a.a.a.t.b.v.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.v.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35638c.  v0:= 8I;
  #L356390.  v0:= new `int`[v0];
  #L356394.  goto L3563b4;
  #L35639a.  `@@n.a.a.a.t.b.v.a` @type ^`int`[] := v0 @kind object;
  #L35639e.  v0:= 16I;
  #L3563a2.  v0:= new `int`[v0];
  #L3563a6.  goto L3563dc;
  #L3563ac.  `@@n.a.a.a.t.b.v.b` @type ^`int`[] := v0 @kind object;
  #L3563b0.  return @kind void;
  #L3563b2.  
  #L3563b4.  v0:= (-1I, -1I, -1I, 0I, 0I, 0I, 1I, -1I) @kind object;
  #L3563db.  goto L35639a;
  #L3563dc.  v0:= (1I, 0I, 0I, -2I, -1I, -1I, -2I, 1I, -2I, 1I, -2I, 1I, 1I, -2I, 2I, -2I) @kind object;
  #L356423.  goto L3563ac;
}
procedure `void` `a`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/v;.a:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L356434.  call temp:= `a`(v0, v1, v2) @signature `Ln/a/a/c/d;.a:([I[I[I)I` @kind static;
  #L35643a.  v0:= temp;
  #L35643c.  if v0 != 0 then goto L35645c;
  #L356440.  v0:= 7I;
  #L356442.  v0:= v2[v0];
  #L356446.  v1:= -1I;
  #L356448.  if v0 != v1 then goto L356462;
  #L35644c.  v0:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L356450.  call temp:= `m`(v2, v0) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L356456.  v0:= temp;
  #L356458.  if v0 == 0 then goto L356462;
  #L35645c.  call `c`(v2) @signature `Ln/a/a/a/t/b/v;.c:([I)V` @kind static;
  #L356462.  return @kind void;
}
procedure `void` `b`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/v;.b:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L356474.  v0:= 8I;
  #L356478.  call temp:= `q`(v0, v1, v2) @signature `Ln/a/a/c/g;.q:(I[I[I)I` @kind static;
  #L35647e.  v1:= temp;
  #L356480.  if v1 != 0 then goto L3564a0;
  #L356484.  v1:= 7I;
  #L356486.  v1:= v2[v1];
  #L35648a.  v0:= -1I;
  #L35648c.  if v1 != v0 then goto L3564a6;
  #L356490.  v1:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L356494.  call temp:= `m`(v2, v1) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L35649a.  v1:= temp;
  #L35649c.  if v1 == 0 then goto L3564a6;
  #L3564a0.  call `c`(v2) @signature `Ln/a/a/a/t/b/v;.c:([I)V` @kind static;
  #L3564a6.  return @kind void;
}
procedure `void` `c`(`int`[] v12 @kind object) @signature `Ln/a/a/a/t/b/v;.c:([I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3564b8.  v0:= 0I;
  #L3564ba.  v1:= v12[v0];
  #L3564be.  v1:= (`long`) v1 @kind i2l;
  #L3564c0.  v3:= 4294967295L;
  #L3564ca.  v1:= v1 ^& v3 @kind long;
  #L3564cc.  v5:= 1L;
  #L3564d0.  v1:= v1 + v5 @kind long;
  #L3564d2.  v7:= (`int`) v1 @kind l2i;
  #L3564d4.  v12[v0]:= v7;
  #L3564d8.  v0:= 32I;
  #L3564dc.  v1:= v1 ^> v0 @kind long;
  #L3564de.  v7:= 0L;
  #L3564e2.  v9:= lcmp(v1, v7);
  #L3564e6.  if v9 == 0 then goto L356512;
  #L3564ea.  v9:= 1I;
  #L3564ec.  v10:= v12[v9];
  #L3564f0.  v10:= (`long`) v10 @kind i2l;
  #L3564f2.  v10:= v10 ^& v3 @kind long;
  #L3564f4.  v1:= v1 + v10 @kind long;
  #L3564f6.  v10:= (`int`) v1 @kind l2i;
  #L3564f8.  v12[v9]:= v10;
  #L3564fc.  v1:= v1 ^> v0 @kind long;
  #L3564fe.  v9:= 2I;
  #L356500.  v10:= v12[v9];
  #L356504.  v10:= (`long`) v10 @kind i2l;
  #L356506.  v10:= v10 ^& v3 @kind long;
  #L356508.  v1:= v1 + v10 @kind long;
  #L35650a.  v10:= (`int`) v1 @kind l2i;
  #L35650c.  v12[v9]:= v10;
  #L356510.  v1:= v1 ^> v0 @kind long;
  #L356512.  v9:= 3I;
  #L356514.  v10:= v12[v9];
  #L356518.  v10:= (`long`) v10 @kind i2l;
  #L35651a.  v10:= v10 ^& v3 @kind long;
  #L35651c.  v10:= v10 - v5 @kind long;
  #L35651e.  v1:= v1 + v10 @kind long;
  #L356520.  v10:= (`int`) v1 @kind l2i;
  #L356522.  v12[v9]:= v10;
  #L356526.  v1:= v1 ^> v0 @kind long;
  #L356528.  v9:= lcmp(v1, v7);
  #L35652c.  if v9 == 0 then goto L356558;
  #L356530.  v7:= 4I;
  #L356532.  v8:= v12[v7];
  #L356536.  v8:= (`long`) v8 @kind i2l;
  #L356538.  v8:= v8 ^& v3 @kind long;
  #L35653a.  v1:= v1 + v8 @kind long;
  #L35653c.  v8:= (`int`) v1 @kind l2i;
  #L35653e.  v12[v7]:= v8;
  #L356542.  v1:= v1 ^> v0 @kind long;
  #L356544.  v7:= 5I;
  #L356546.  v8:= v12[v7];
  #L35654a.  v8:= (`long`) v8 @kind i2l;
  #L35654c.  v8:= v8 ^& v3 @kind long;
  #L35654e.  v1:= v1 + v8 @kind long;
  #L356550.  v8:= (`int`) v1 @kind l2i;
  #L356552.  v12[v7]:= v8;
  #L356556.  v1:= v1 ^> v0 @kind long;
  #L356558.  v7:= 6I;
  #L35655a.  v8:= v12[v7];
  #L35655e.  v8:= (`long`) v8 @kind i2l;
  #L356560.  v8:= v8 ^& v3 @kind long;
  #L356562.  v8:= v8 - v5 @kind long;
  #L356564.  v1:= v1 + v8 @kind long;
  #L356566.  v8:= (`int`) v1 @kind l2i;
  #L356568.  v12[v7]:= v8;
  #L35656c.  v0:= v1 ^> v0 @kind long;
  #L356570.  v2:= 7I;
  #L356572.  v7:= v12[v2];
  #L356576.  v7:= (`long`) v7 @kind i2l;
  #L356578.  v3:= v3 ^& v7 @kind long;
  #L35657a.  v3:= v3 + v5 @kind long;
  #L35657c.  v0:= v0 + v3 @kind long;
  #L35657e.  v1:= (`int`) v0 @kind l2i;
  #L356580.  v12[v2]:= v1;
  #L356584.  return @kind void;
}
procedure `int`[] `d`(`java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/v;.d:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L356350.  call temp:= `j`(v2) @signature `Ln/a/a/c/d;.j:(Ljava/math/BigInteger;)[I` @kind static;
  #L356356.  v2:= temp @kind object;
  #L356358.  v0:= 7I;
  #L35635a.  v0:= v2[v0];
  #L35635e.  v1:= -1I;
  #L356360.  if v0 != v1 then goto L35637a;
  #L356364.  v0:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L356368.  call temp:= `m`(v2, v0) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L35636e.  v1:= temp;
  #L356370.  if v1 == 0 then goto L35637a;
  #L356374.  call temp:= `A`(v0, v2) @signature `Ln/a/a/c/d;.A:([I[I)I` @kind static;
  #L35637a.  return v2 @kind object;
}
procedure `void` `e`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L356598.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L35659e.  v0:= temp @kind object;
  #L3565a0.  call `q`(v1, v2, v0) @signature `Ln/a/a/c/d;.q:([I[I[I)V` @kind static;
  #L3565a6.  call `h`(v0, v3) @signature `Ln/a/a/a/t/b/v;.h:([I[I)V` @kind static;
  #L3565ac.  return @kind void;
}
procedure `void` `f`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/v;.f:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3565c0.  call temp:= `u`(v1, v2, v3) @signature `Ln/a/a/c/d;.u:([I[I[I)I` @kind static;
  #L3565c6.  v1:= temp;
  #L3565c8.  v2:= 16I;
  #L3565cc.  if v1 != 0 then goto L3565f0;
  #L3565d0.  v1:= 15I;
  #L3565d4.  v1:= v3[v1];
  #L3565d8.  v0:= -1I;
  #L3565da.  v1:= v1 ^& v0 @kind int;
  #L3565dc.  if v1 != v0 then goto L3565fa;
  #L3565e0.  v1:= `@@n.a.a.a.t.b.v.b` @type ^`int`[] @kind object;
  #L3565e4.  call temp:= `o`(v2, v3, v1) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L3565ea.  v1:= temp;
  #L3565ec.  if v1 == 0 then goto L3565fa;
  #L3565f0.  v1:= `@@n.a.a.a.t.b.v.b` @type ^`int`[] @kind object;
  #L3565f4.  call temp:= `I`(v2, v1, v3) @signature `Ln/a/a/c/g;.I:(I[I[I)I` @kind static;
  #L3565fa.  return @kind void;
}
procedure `void` `g`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/v;.g:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35660c.  call temp:= `o`(v1) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L356612.  v0:= temp;
  #L356614.  if v0 == 0 then goto L356620;
  #L356618.  call `C`(v2) @signature `Ln/a/a/c/d;.C:([I)V` @kind static;
  #L35661e.  goto L35662a;
  #L356620.  v0:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L356624.  call temp:= `z`(v0, v1, v2) @signature `Ln/a/a/c/d;.z:([I[I[I)I` @kind static;
  #L35662a.  return @kind void;
}
procedure `void` `h`(`int`[] v33 @kind object, `int`[] v34 @kind object) @signature `Ln/a/a/a/t/b/v;.h:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;

  #L35663c.  v0:= v34 @kind object;
  #L356640.  v1:= 8I;
  #L356644.  v1:= v33[v1];
  #L356648.  v1:= (`long`) v1 @kind i2l;
  #L35664a.  v3:= 4294967295L;
  #L356654.  v1:= v1 ^& v3 @kind long;
  #L356656.  v5:= 9I;
  #L35665a.  v5:= v33[v5];
  #L35665e.  v5:= (`long`) v5 @kind i2l;
  #L356660.  v5:= v5 ^& v3 @kind long;
  #L356662.  v7:= 10I;
  #L356666.  v7:= v33[v7];
  #L35666a.  v7:= (`long`) v7 @kind i2l;
  #L35666c.  v7:= v7 ^& v3 @kind long;
  #L35666e.  v9:= 11I;
  #L356672.  v9:= v33[v9];
  #L356676.  v9:= (`long`) v9 @kind i2l;
  #L356678.  v9:= v9 ^& v3 @kind long;
  #L35667a.  v11:= 12I;
  #L35667e.  v11:= v33[v11];
  #L356682.  v11:= (`long`) v11 @kind i2l;
  #L356684.  v11:= v11 ^& v3 @kind long;
  #L356686.  v13:= 13I;
  #L35668a.  v13:= v33[v13];
  #L35668e.  v13:= (`long`) v13 @kind i2l;
  #L356690.  v13:= v13 ^& v3 @kind long;
  #L356692.  v15:= 14I;
  #L356696.  v15:= v33[v15];
  #L35669a.  v16:= v13 @kind wide;
  #L35669e.  v13:= (`long`) v15 @kind i2l;
  #L3566a0.  v13:= v13 ^& v3 @kind long;
  #L3566a2.  v15:= 15I;
  #L3566a6.  v15:= v33[v15];
  #L3566aa.  v18:= v13 @kind wide;
  #L3566ae.  v13:= (`long`) v15 @kind i2l;
  #L3566b0.  v13:= v13 ^& v3 @kind long;
  #L3566b2.  v20:= 6L;
  #L3566b6.  v1:= v1 - v20 @kind long;
  #L3566ba.  v22:= v1 + v5 @kind long;
  #L3566be.  v5:= v5 + v7 @kind long;
  #L3566c0.  v7:= v7 + v9 @kind long;
  #L3566c2.  v7:= v7 - v13 @kind long;
  #L3566c4.  v9:= v9 + v11 @kind long;
  #L3566c6.  v11:= v11 + v16 @kind long;
  #L3566ca.  v24:= v16 + v18 @kind long;
  #L3566ce.  v26:= v18 + v13 @kind long;
  #L3566d2.  v15:= 0I;
  #L3566d4.  v28:= v1 @kind wide;
  #L3566d8.  v1:= v33[v15];
  #L3566dc.  v1:= (`long`) v1 @kind i2l;
  #L3566de.  v1:= v1 ^& v3 @kind long;
  #L3566e0.  v1:= v1 + v22 @kind long;
  #L3566e4.  v1:= v1 - v9 @kind long;
  #L3566e6.  v1:= v1 - v24 @kind long;
  #L3566ea.  v30:= 0L;
  #L3566ee.  v1:= v1 + v30 @kind long;
  #L3566f2.  v3:= (`int`) v1 @kind l2i;
  #L3566f4.  v0[v15]:= v3;
  #L3566f8.  v3:= 32I;
  #L3566fc.  v1:= v1 ^> v3 @kind long;
  #L3566fe.  v4:= 1I;
  #L356700.  v15:= v33[v4];
  #L356704.  v3:= (`long`) v15 @kind i2l;
  #L356706.  v30:= 4294967295L;
  #L356710.  v3:= v3 ^& v30 @kind long;
  #L356714.  v3:= v3 + v5 @kind long;
  #L356716.  v3:= v3 - v11 @kind long;
  #L356718.  v3:= v3 - v26 @kind long;
  #L35671c.  v1:= v1 + v3 @kind long;
  #L35671e.  v3:= (`int`) v1 @kind l2i;
  #L356720.  v4:= 1I;
  #L356722.  v0[v4]:= v3;
  #L356726.  v3:= 32I;
  #L35672a.  v1:= v1 ^> v3 @kind long;
  #L35672c.  v4:= 2I;
  #L35672e.  v15:= v33[v4];
  #L356732.  v3:= (`long`) v15 @kind i2l;
  #L356734.  v3:= v3 ^& v30 @kind long;
  #L356738.  v3:= v3 + v7 @kind long;
  #L35673a.  v3:= v3 - v24 @kind long;
  #L35673e.  v1:= v1 + v3 @kind long;
  #L356740.  v3:= (`int`) v1 @kind l2i;
  #L356742.  v4:= 2I;
  #L356744.  v0[v4]:= v3;
  #L356748.  v3:= 32I;
  #L35674c.  v1:= v1 ^> v3 @kind long;
  #L35674e.  v3:= 3I;
  #L356750.  v4:= v33[v3];
  #L356754.  v3:= (`long`) v4 @kind i2l;
  #L356756.  v3:= v3 ^& v30 @kind long;
  #L35675a.  v32:= 1I;
  #L35675e.  v9:= v9 ^< v32 @kind long;
  #L356762.  v3:= v3 + v9 @kind long;
  #L356764.  v3:= v3 + v16 @kind long;
  #L356768.  v3:= v3 - v13 @kind long;
  #L35676a.  v3:= v3 - v22 @kind long;
  #L35676e.  v1:= v1 + v3 @kind long;
  #L356770.  v3:= (`int`) v1 @kind l2i;
  #L356772.  v4:= 3I;
  #L356774.  v0[v4]:= v3;
  #L356778.  v3:= 32I;
  #L35677c.  v1:= v1 ^> v3 @kind long;
  #L35677e.  v3:= 4I;
  #L356780.  v4:= v33[v3];
  #L356784.  v9:= (`long`) v4 @kind i2l;
  #L356786.  v15:= 4294967295L;
  #L356790.  v9:= v9 ^& v15 @kind long;
  #L356792.  v4:= 1I;
  #L356794.  v15:= v11 ^< v4 @kind long;
  #L356798.  v9:= v9 + v15 @kind long;
  #L35679a.  v9:= v9 + v18 @kind long;
  #L35679e.  v9:= v9 - v5 @kind long;
  #L3567a0.  v1:= v1 + v9 @kind long;
  #L3567a2.  v4:= (`int`) v1 @kind l2i;
  #L3567a4.  v0[v3]:= v4;
  #L3567a8.  v3:= 32I;
  #L3567ac.  v1:= v1 ^> v3 @kind long;
  #L3567ae.  v4:= 5I;
  #L3567b0.  v5:= v33[v4];
  #L3567b4.  v5:= (`long`) v5 @kind i2l;
  #L3567b6.  v9:= 4294967295L;
  #L3567c0.  v5:= v5 ^& v9 @kind long;
  #L3567c2.  v15:= 1I;
  #L3567c4.  v16:= v24 ^< v15 @kind long;
  #L3567c8.  v5:= v5 + v16 @kind long;
  #L3567cc.  v5:= v5 - v7 @kind long;
  #L3567ce.  v1:= v1 + v5 @kind long;
  #L3567d0.  v5:= (`int`) v1 @kind l2i;
  #L3567d2.  v0[v4]:= v5;
  #L3567d6.  v1:= v1 ^> v3 @kind long;
  #L3567d8.  v3:= 6I;
  #L3567da.  v4:= v33[v3];
  #L3567de.  v4:= (`long`) v4 @kind i2l;
  #L3567e0.  v4:= v4 ^& v9 @kind long;
  #L3567e2.  v9:= v26 ^< v15 @kind long;
  #L3567e6.  v4:= v4 + v9 @kind long;
  #L3567e8.  v4:= v4 + v24 @kind long;
  #L3567ec.  v4:= v4 - v22 @kind long;
  #L3567f0.  v1:= v1 + v4 @kind long;
  #L3567f2.  v4:= (`int`) v1 @kind l2i;
  #L3567f4.  v0[v3]:= v4;
  #L3567f8.  v3:= 32I;
  #L3567fc.  v1:= v1 ^> v3 @kind long;
  #L3567fe.  v3:= 7I;
  #L356800.  v4:= v33[v3];
  #L356804.  v4:= (`long`) v4 @kind i2l;
  #L356806.  v9:= 4294967295L;
  #L356810.  v4:= v4 ^& v9 @kind long;
  #L356812.  v6:= 1I;
  #L356814.  v9:= v13 ^< v6 @kind long;
  #L356818.  v4:= v4 + v9 @kind long;
  #L35681a.  v4:= v4 + v28 @kind long;
  #L35681e.  v4:= v4 - v7 @kind long;
  #L356820.  v4:= v4 - v11 @kind long;
  #L356822.  v1:= v1 + v4 @kind long;
  #L356824.  v4:= (`int`) v1 @kind l2i;
  #L356826.  v0[v3]:= v4;
  #L35682a.  v3:= 32I;
  #L35682e.  v1:= v1 ^> v3 @kind long;
  #L356830.  v1:= v1 + v20 @kind long;
  #L356834.  v2:= (`int`) v1 @kind l2i;
  #L356836.  call `i`(v2, v0) @signature `Ln/a/a/a/t/b/v;.i:(I[I)V` @kind static;
  #L35683c.  return @kind void;
}
procedure `void` `i`(`int` v12 , `int`[] v13 @kind object) @signature `Ln/a/a/a/t/b/v;.i:(I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L356850.  v0:= 7I;
  #L356852.  v1:= 0L;
  #L356856.  if v12 == 0 then goto L356926;
  #L35685a.  v3:= (`long`) v12 @kind i2l;
  #L35685c.  v5:= 4294967295L;
  #L356866.  v3:= v3 ^& v5 @kind long;
  #L356868.  v12:= 0I;
  #L35686a.  v7:= v13[v12];
  #L35686e.  v7:= (`long`) v7 @kind i2l;
  #L356870.  v7:= v7 ^& v5 @kind long;
  #L356872.  v7:= v7 + v3 @kind long;
  #L356874.  v7:= v7 + v1 @kind long;
  #L356876.  v9:= (`int`) v7 @kind l2i;
  #L356878.  v13[v12]:= v9;
  #L35687c.  v12:= 32I;
  #L356880.  v7:= v7 ^> v12 @kind long;
  #L356882.  v9:= lcmp(v7, v1);
  #L356886.  if v9 == 0 then goto L3568b2;
  #L35688a.  v9:= 1I;
  #L35688c.  v10:= v13[v9];
  #L356890.  v10:= (`long`) v10 @kind i2l;
  #L356892.  v10:= v10 ^& v5 @kind long;
  #L356894.  v7:= v7 + v10 @kind long;
  #L356896.  v10:= (`int`) v7 @kind l2i;
  #L356898.  v13[v9]:= v10;
  #L35689c.  v7:= v7 ^> v12 @kind long;
  #L35689e.  v9:= 2I;
  #L3568a0.  v10:= v13[v9];
  #L3568a4.  v10:= (`long`) v10 @kind i2l;
  #L3568a6.  v10:= v10 ^& v5 @kind long;
  #L3568a8.  v7:= v7 + v10 @kind long;
  #L3568aa.  v10:= (`int`) v7 @kind l2i;
  #L3568ac.  v13[v9]:= v10;
  #L3568b0.  v7:= v7 ^> v12 @kind long;
  #L3568b2.  v9:= 3I;
  #L3568b4.  v10:= v13[v9];
  #L3568b8.  v10:= (`long`) v10 @kind i2l;
  #L3568ba.  v10:= v10 ^& v5 @kind long;
  #L3568bc.  v10:= v10 - v3 @kind long;
  #L3568be.  v7:= v7 + v10 @kind long;
  #L3568c0.  v10:= (`int`) v7 @kind l2i;
  #L3568c2.  v13[v9]:= v10;
  #L3568c6.  v7:= v7 ^> v12 @kind long;
  #L3568c8.  v9:= lcmp(v7, v1);
  #L3568cc.  if v9 == 0 then goto L3568f8;
  #L3568d0.  v9:= 4I;
  #L3568d2.  v10:= v13[v9];
  #L3568d6.  v10:= (`long`) v10 @kind i2l;
  #L3568d8.  v10:= v10 ^& v5 @kind long;
  #L3568da.  v7:= v7 + v10 @kind long;
  #L3568dc.  v10:= (`int`) v7 @kind l2i;
  #L3568de.  v13[v9]:= v10;
  #L3568e2.  v7:= v7 ^> v12 @kind long;
  #L3568e4.  v9:= 5I;
  #L3568e6.  v10:= v13[v9];
  #L3568ea.  v10:= (`long`) v10 @kind i2l;
  #L3568ec.  v10:= v10 ^& v5 @kind long;
  #L3568ee.  v7:= v7 + v10 @kind long;
  #L3568f0.  v10:= (`int`) v7 @kind l2i;
  #L3568f2.  v13[v9]:= v10;
  #L3568f6.  v7:= v7 ^> v12 @kind long;
  #L3568f8.  v9:= 6I;
  #L3568fa.  v10:= v13[v9];
  #L3568fe.  v10:= (`long`) v10 @kind i2l;
  #L356900.  v10:= v10 ^& v5 @kind long;
  #L356902.  v10:= v10 - v3 @kind long;
  #L356904.  v7:= v7 + v10 @kind long;
  #L356906.  v10:= (`int`) v7 @kind l2i;
  #L356908.  v13[v9]:= v10;
  #L35690c.  v7:= v7 ^> v12 @kind long;
  #L35690e.  v9:= v13[v0];
  #L356912.  v9:= (`long`) v9 @kind i2l;
  #L356914.  v5:= v5 ^& v9 @kind long;
  #L356916.  v5:= v5 + v3 @kind long;
  #L356918.  v7:= v7 + v5 @kind long;
  #L35691a.  v3:= (`int`) v7 @kind l2i;
  #L35691c.  v13[v0]:= v3;
  #L356920.  v3:= v7 ^> v12 @kind long;
  #L356924.  goto L356928;
  #L356926.  v3:= v1 @kind wide;
  #L356928.  v12:= lcmp(v3, v1);
  #L35692c.  if v12 != 0 then goto L35694a;
  #L356930.  v12:= v13[v0];
  #L356934.  v0:= -1I;
  #L356936.  if v12 != v0 then goto L356950;
  #L35693a.  v12:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L35693e.  call temp:= `m`(v13, v12) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L356944.  v12:= temp;
  #L356946.  if v12 == 0 then goto L356950;
  #L35694a.  call `c`(v13) @signature `Ln/a/a/a/t/b/v;.c:([I)V` @kind static;
  #L356950.  return @kind void;
}
procedure `void` `j`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/v;.j:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L356964.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L35696a.  v0:= temp @kind object;
  #L35696c.  call `x`(v1, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L356972.  call `h`(v0, v2) @signature `Ln/a/a/a/t/b/v;.h:([I[I)V` @kind static;
  #L356978.  return @kind void;
}
procedure `void` `k`(`int`[] v1 @kind object, `int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35698c.  call temp:= `g`() @signature `Ln/a/a/c/d;.g:()[I` @kind static;
  #L356992.  v0:= temp @kind object;
  #L356994.  call `x`(v1, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L35699a.  call `h`(v0, v3) @signature `Ln/a/a/a/t/b/v;.h:([I[I)V` @kind static;
  #L3569a0.  v2:= v2 + -1;
  #L3569a4.  if v2 <= 0 then goto L3569b0;
  #L3569a8.  call `x`(v3, v0) @signature `Ln/a/a/c/d;.x:([I[I)V` @kind static;
  #L3569ae.  goto L35699a;
  #L3569b0.  return @kind void;
}
procedure `void` `l`(`int`[] v12 @kind object) @signature `Ln/a/a/a/t/b/v;.l:([I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3569c4.  v0:= 0I;
  #L3569c6.  v1:= v12[v0];
  #L3569ca.  v1:= (`long`) v1 @kind i2l;
  #L3569cc.  v3:= 4294967295L;
  #L3569d6.  v1:= v1 ^& v3 @kind long;
  #L3569d8.  v5:= 1L;
  #L3569dc.  v1:= v1 - v5 @kind long;
  #L3569de.  v7:= (`int`) v1 @kind l2i;
  #L3569e0.  v12[v0]:= v7;
  #L3569e4.  v0:= 32I;
  #L3569e8.  v1:= v1 ^> v0 @kind long;
  #L3569ea.  v7:= 0L;
  #L3569ee.  v9:= lcmp(v1, v7);
  #L3569f2.  if v9 == 0 then goto L356a1e;
  #L3569f6.  v9:= 1I;
  #L3569f8.  v10:= v12[v9];
  #L3569fc.  v10:= (`long`) v10 @kind i2l;
  #L3569fe.  v10:= v10 ^& v3 @kind long;
  #L356a00.  v1:= v1 + v10 @kind long;
  #L356a02.  v10:= (`int`) v1 @kind l2i;
  #L356a04.  v12[v9]:= v10;
  #L356a08.  v1:= v1 ^> v0 @kind long;
  #L356a0a.  v9:= 2I;
  #L356a0c.  v10:= v12[v9];
  #L356a10.  v10:= (`long`) v10 @kind i2l;
  #L356a12.  v10:= v10 ^& v3 @kind long;
  #L356a14.  v1:= v1 + v10 @kind long;
  #L356a16.  v10:= (`int`) v1 @kind l2i;
  #L356a18.  v12[v9]:= v10;
  #L356a1c.  v1:= v1 ^> v0 @kind long;
  #L356a1e.  v9:= 3I;
  #L356a20.  v10:= v12[v9];
  #L356a24.  v10:= (`long`) v10 @kind i2l;
  #L356a26.  v10:= v10 ^& v3 @kind long;
  #L356a28.  v10:= v10 + v5 @kind long;
  #L356a2a.  v1:= v1 + v10 @kind long;
  #L356a2c.  v10:= (`int`) v1 @kind l2i;
  #L356a2e.  v12[v9]:= v10;
  #L356a32.  v1:= v1 ^> v0 @kind long;
  #L356a34.  v9:= lcmp(v1, v7);
  #L356a38.  if v9 == 0 then goto L356a64;
  #L356a3c.  v7:= 4I;
  #L356a3e.  v8:= v12[v7];
  #L356a42.  v8:= (`long`) v8 @kind i2l;
  #L356a44.  v8:= v8 ^& v3 @kind long;
  #L356a46.  v1:= v1 + v8 @kind long;
  #L356a48.  v8:= (`int`) v1 @kind l2i;
  #L356a4a.  v12[v7]:= v8;
  #L356a4e.  v1:= v1 ^> v0 @kind long;
  #L356a50.  v7:= 5I;
  #L356a52.  v8:= v12[v7];
  #L356a56.  v8:= (`long`) v8 @kind i2l;
  #L356a58.  v8:= v8 ^& v3 @kind long;
  #L356a5a.  v1:= v1 + v8 @kind long;
  #L356a5c.  v8:= (`int`) v1 @kind l2i;
  #L356a5e.  v12[v7]:= v8;
  #L356a62.  v1:= v1 ^> v0 @kind long;
  #L356a64.  v7:= 6I;
  #L356a66.  v8:= v12[v7];
  #L356a6a.  v8:= (`long`) v8 @kind i2l;
  #L356a6c.  v8:= v8 ^& v3 @kind long;
  #L356a6e.  v8:= v8 + v5 @kind long;
  #L356a70.  v1:= v1 + v8 @kind long;
  #L356a72.  v8:= (`int`) v1 @kind l2i;
  #L356a74.  v12[v7]:= v8;
  #L356a78.  v0:= v1 ^> v0 @kind long;
  #L356a7c.  v2:= 7I;
  #L356a7e.  v7:= v12[v2];
  #L356a82.  v7:= (`long`) v7 @kind i2l;
  #L356a84.  v3:= v3 ^& v7 @kind long;
  #L356a86.  v3:= v3 - v5 @kind long;
  #L356a88.  v0:= v0 + v3 @kind long;
  #L356a8a.  v1:= (`int`) v0 @kind l2i;
  #L356a8c.  v12[v2]:= v1;
  #L356a90.  return @kind void;
}
procedure `void` `m`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/v;.m:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L356aa4.  call temp:= `z`(v0, v1, v2) @signature `Ln/a/a/c/d;.z:([I[I[I)I` @kind static;
  #L356aaa.  v0:= temp;
  #L356aac.  if v0 == 0 then goto L356ab6;
  #L356ab0.  call `l`(v2) @signature `Ln/a/a/a/t/b/v;.l:([I)V` @kind static;
  #L356ab6.  return @kind void;
}
procedure `void` `n`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/v;.n:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L356ac8.  v0:= 8I;
  #L356acc.  v1:= 0I;
  #L356ace.  call temp:= `C`(v0, v2, v1, v3) @signature `Ln/a/a/c/g;.C:(I[II[I)I` @kind static;
  #L356ad4.  v2:= temp;
  #L356ad6.  if v2 != 0 then goto L356af6;
  #L356ada.  v2:= 7I;
  #L356adc.  v2:= v3[v2];
  #L356ae0.  v0:= -1I;
  #L356ae2.  if v2 != v0 then goto L356afc;
  #L356ae6.  v2:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L356aea.  call temp:= `m`(v3, v2) @signature `Ln/a/a/c/d;.m:([I[I)Z` @kind static;
  #L356af0.  v2:= temp;
  #L356af2.  if v2 == 0 then goto L356afc;
  #L356af6.  call `c`(v3) @signature `Ln/a/a/a/t/b/v;.c:([I)V` @kind static;
  #L356afc.  return @kind void;
}
