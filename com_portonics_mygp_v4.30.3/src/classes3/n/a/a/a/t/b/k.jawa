record `n.a.a.a.t.b.k` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.k.h` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.k.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.k.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3532dc.  v0:= `@@n.a.a.a.t.b.i.i` @type ^`java.math.BigInteger` @kind object;
  #L3532e0.  `@@n.a.a.a.t.b.k.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L3532e4.  v0:= 7I;
  #L3532e6.  v0:= new `int`[v0];
  #L3532ea.  goto L3532f8;
  #L3532f0.  `@@n.a.a.a.t.b.k.g` @type ^`int`[] := v0 @kind object;
  #L3532f4.  return @kind void;
  #L3532f6.  
  #L3532f8.  v0:= (868209154I, -587542221I, 579297866I, -1014948952I, -1470801668I, 514782679I, -1897982644I) @kind object;
  #L35331b.  goto L3532f0;
}
procedure `void` `<init>`(`n.a.a.a.t.b.k` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/k;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L353348.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L35334e.  if v2 == 0 then goto L35337c;
  #L353352.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L353358.  v0:= temp;
  #L35335a.  if v0 < 0 then goto L35337c;
  #L35335e.  v0:= `@@n.a.a.a.t.b.k.f` @type ^`java.math.BigInteger` @kind object;
  #L353362.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L353368.  v0:= temp;
  #L35336a.  if v0 >= 0 then goto L35337c;
  #L35336e.  call temp:= `c`(v2) @signature `Ln/a/a/a/t/b/j;.c:(Ljava/math/BigInteger;)[I` @kind static;
  #L353374.  v2:= temp @kind object;
  #L353376.  v1.`n.a.a.a.t.b.k.h` @type ^`int`[] := v2 @kind object;
  #L35337a.  return @kind void;
  #L35337c.  v2:= new `java.lang.IllegalArgumentException`;
  #L353380.  v0:= "x value invalid for SecP224K1FieldElement" @kind object;
  #L353384.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35338a.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.k` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L35332c.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L353332.  v0.`n.a.a.a.t.b.k.h` @type ^`int`[] := v1 @kind object;
  #L353336.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.k` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/k;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352fb4.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L352fba.  v0:= temp @kind object;
  #L352fbc.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352fc0.  v3:= (`n.a.a.a.t.b.k`) v3 @kind object;
  #L352fc4.  v3:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352fc8.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/j;.a:([I[I[I)V` @kind static;
  #L352fce.  v3:= new `n.a.a.a.t.b.k`;
  #L352fd2.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L352fd8.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.k` v2 @kind this) @signature `Ln/a/a/a/t/b/k;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352fec.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L352ff2.  v0:= temp @kind object;
  #L352ff4.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352ff8.  call `b`(v1, v0) @signature `Ln/a/a/a/t/b/j;.b:([I[I)V` @kind static;
  #L352ffe.  v1:= new `n.a.a.a.t.b.k`;
  #L353002.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L353008.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.k` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/k;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35301c.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L353022.  v0:= temp @kind object;
  #L353024.  v1:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L353028.  v3:= (`n.a.a.a.t.b.k`) v3 @kind object;
  #L35302c.  v3:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L353030.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L353036.  v3:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L35303a.  call `d`(v0, v3, v0) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353040.  v3:= new `n.a.a.a.t.b.k`;
  #L353044.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L35304a.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.k` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/t/b/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352ea0.  if v2 != v1 then goto L352ea8;
  #L352ea4.  v2:= 1I;
  #L352ea6.  return v2;
  #L352ea8.  v0:= instanceof @variable v2 @type ^`n.a.a.a.t.b.k` @kind boolean;
  #L352eac.  if v0 != 0 then goto L352eb4;
  #L352eb0.  v2:= 0I;
  #L352eb2.  return v2;
  #L352eb4.  v2:= (`n.a.a.a.t.b.k`) v2 @kind object;
  #L352eb8.  v0:= v1.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352ebc.  v2:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352ec0.  call temp:= `f`(v0, v2) @signature `Ln/a/a/c/c;.f:([I[I)Z` @kind static;
  #L352ec6.  v2:= temp;
  #L352ec8.  return v2;
}
procedure `int` `f`(`n.a.a.a.t.b.k` v1 @kind this) @signature `Ln/a/a/a/t/b/k;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352f44.  v0:= `@@n.a.a.a.t.b.k.f` @type ^`java.math.BigInteger` @kind object;
  #L352f48.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L352f4e.  v0:= temp;
  #L352f50.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.k` v3 @kind this) @signature `Ln/a/a/a/t/b/k;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35305c.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L353062.  v0:= temp @kind object;
  #L353064.  v1:= `@@n.a.a.a.t.b.j.a` @type ^`int`[] @kind object;
  #L353068.  v2:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L35306c.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L353072.  v1:= new `n.a.a.a.t.b.k`;
  #L353076.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L35307c.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.k` v1 @kind this) @signature `Ln/a/a/a/t/b/k;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352edc.  v0:= v1.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352ee0.  call temp:= `j`(v0) @signature `Ln/a/a/c/c;.j:([I)Z` @kind static;
  #L352ee6.  v0:= temp;
  #L352ee8.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.k` v4 @kind this) @signature `Ln/a/a/a/t/b/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L352f64.  v0:= `@@n.a.a.a.t.b.k.f` @type ^`java.math.BigInteger` @kind object;
  #L352f68.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L352f6e.  v0:= temp;
  #L352f70.  v1:= v4.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352f74.  v2:= 0I;
  #L352f76.  v3:= 7I;
  #L352f78.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L352f7e.  v1:= temp;
  #L352f80.  v0:= v0 ^~ v1 @kind int;
  #L352f82.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.k` v1 @kind this) @signature `Ln/a/a/a/t/b/k;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352efc.  v0:= v1.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352f00.  call temp:= `k`(v0) @signature `Ln/a/a/c/c;.k:([I)Z` @kind static;
  #L352f06.  v0:= temp;
  #L352f08.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.k` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/k;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L353090.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L353096.  v0:= temp @kind object;
  #L353098.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L35309c.  v3:= (`n.a.a.a.t.b.k`) v3 @kind object;
  #L3530a0.  v3:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L3530a4.  call `d`(v1, v3, v0) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3530aa.  v3:= new `n.a.a.a.t.b.k`;
  #L3530ae.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L3530b4.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.k` v2 @kind this) @signature `Ln/a/a/a/t/b/k;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3530c8.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L3530ce.  v0:= temp @kind object;
  #L3530d0.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L3530d4.  call `f`(v1, v0) @signature `Ln/a/a/a/t/b/j;.f:([I[I)V` @kind static;
  #L3530da.  v1:= new `n.a.a.a.t.b.k`;
  #L3530de.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L3530e4.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.k` v9 @kind this) @signature `Ln/a/a/a/t/b/k;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3530f8.  v0:= v9.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L3530fc.  call temp:= `k`(v0) @signature `Ln/a/a/c/c;.k:([I)Z` @kind static;
  #L353102.  v1:= temp;
  #L353104.  if v1 != 0 then goto L353262;
  #L353108.  call temp:= `j`(v0) @signature `Ln/a/a/c/c;.j:([I)Z` @kind static;
  #L35310e.  v1:= temp;
  #L353110.  if v1 == 0 then goto L353118;
  #L353114.  goto L353262;
  #L353118.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L35311e.  v1:= temp @kind object;
  #L353120.  call `i`(v0, v1) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353126.  call `d`(v1, v0, v1) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L35312c.  call `i`(v1, v1) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353132.  call `d`(v1, v0, v1) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353138.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L35313e.  v2:= temp @kind object;
  #L353140.  call `i`(v1, v2) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353146.  call `d`(v2, v0, v2) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L35314c.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L353152.  v3:= temp @kind object;
  #L353154.  v4:= 4I;
  #L353156.  call `j`(v2, v4, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L35315c.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353162.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L353168.  v5:= temp @kind object;
  #L35316a.  v6:= 3I;
  #L35316c.  call `j`(v3, v6, v5) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L353172.  call `d`(v5, v1, v5) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353178.  v7:= 8I;
  #L35317c.  call `j`(v5, v7, v5) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L353182.  call `d`(v5, v3, v5) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353188.  call `j`(v5, v4, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L35318e.  call `d`(v3, v2, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353194.  v7:= 19I;
  #L353198.  call `j`(v3, v7, v2) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L35319e.  call `d`(v2, v5, v2) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531a4.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L3531aa.  v7:= temp @kind object;
  #L3531ac.  v8:= 42I;
  #L3531b0.  call `j`(v2, v8, v7) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L3531b6.  call `d`(v7, v2, v7) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531bc.  v8:= 23I;
  #L3531c0.  call `j`(v7, v8, v2) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L3531c6.  call `d`(v2, v3, v2) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531cc.  v8:= 84I;
  #L3531d0.  call `j`(v2, v8, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L3531d6.  call `d`(v3, v7, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531dc.  v2:= 20I;
  #L3531e0.  call `j`(v3, v2, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L3531e6.  call `d`(v3, v5, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531ec.  call `j`(v3, v6, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L3531f2.  call `d`(v3, v0, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L3531f8.  v2:= 2I;
  #L3531fa.  call `j`(v3, v2, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L353200.  call `d`(v3, v0, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353206.  call `j`(v3, v4, v3) @signature `Ln/a/a/a/t/b/j;.j:([II[I)V` @kind static;
  #L35320c.  call `d`(v3, v1, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353212.  call `i`(v3, v3) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353218.  call `i`(v3, v7) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L35321e.  call temp:= `f`(v0, v7) @signature `Ln/a/a/c/c;.f:([I[I)Z` @kind static;
  #L353224.  v1:= temp;
  #L353226.  if v1 == 0 then goto L353236;
  #L35322a.  v0:= new `n.a.a.a.t.b.k`;
  #L35322e.  call `<init>`(v0, v3) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L353234.  return v0 @kind object;
  #L353236.  v1:= `@@n.a.a.a.t.b.k.g` @type ^`int`[] @kind object;
  #L35323a.  call `d`(v3, v1, v3) @signature `Ln/a/a/a/t/b/j;.d:([I[I[I)V` @kind static;
  #L353240.  call `i`(v3, v7) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353246.  call temp:= `f`(v0, v7) @signature `Ln/a/a/c/c;.f:([I[I)Z` @kind static;
  #L35324c.  v0:= temp;
  #L35324e.  if v0 == 0 then goto L35325e;
  #L353252.  v0:= new `n.a.a.a.t.b.k`;
  #L353256.  call `<init>`(v0, v3) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L35325c.  return v0 @kind object;
  #L35325e.  v0:= 0I;
  #L353260.  return v0 @kind object;
  #L353262.  return v9 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.k` v2 @kind this) @signature `Ln/a/a/a/t/b/k;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L353274.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L35327a.  v0:= temp @kind object;
  #L35327c.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L353280.  call `i`(v1, v0) @signature `Ln/a/a/a/t/b/j;.i:([I[I)V` @kind static;
  #L353286.  v1:= new `n.a.a.a.t.b.k`;
  #L35328a.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L353290.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.k` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/k;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3532a4.  call temp:= `d`() @signature `Ln/a/a/c/c;.d:()[I` @kind static;
  #L3532aa.  v0:= temp @kind object;
  #L3532ac.  v1:= v2.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L3532b0.  v3:= (`n.a.a.a.t.b.k`) v3 @kind object;
  #L3532b4.  v3:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L3532b8.  call `k`(v1, v3, v0) @signature `Ln/a/a/a/t/b/j;.k:([I[I[I)V` @kind static;
  #L3532be.  v3:= new `n.a.a.a.t.b.k`;
  #L3532c2.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/k;.<init>:([I)V` @kind direct;
  #L3532c8.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.k` v3 @kind this) @signature `Ln/a/a/a/t/b/k;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L352f1c.  v0:= v3.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352f20.  v1:= 0I;
  #L352f22.  call temp:= `h`(v0, v1) @signature `Ln/a/a/c/c;.h:([II)I` @kind static;
  #L352f28.  v0:= temp;
  #L352f2a.  v2:= 1I;
  #L352f2c.  if v0 != v2 then goto L352f32;
  #L352f30.  v1:= 1I;
  #L352f32.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.k` v1 @kind this) @signature `Ln/a/a/a/t/b/k;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L352f94.  v0:= v1.`n.a.a.a.t.b.k.h` @type ^`int`[] @kind object;
  #L352f98.  call temp:= `t`(v0) @signature `Ln/a/a/c/c;.t:([I)Ljava/math/BigInteger;` @kind static;
  #L352f9e.  v0:= temp @kind object;
  #L352fa0.  return v0 @kind object;
}
