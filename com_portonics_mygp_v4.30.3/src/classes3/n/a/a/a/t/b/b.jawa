record `n.a.a.a.t.b.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int`[] `@@n.a.a.a.t.b.b.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.b.b` @AccessFlag STATIC_FINAL;
global `int`[] `@@n.a.a.a.t.b.b.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35145c.  v0:= 6I;
  #L35145e.  v0:= new `int`[v0];
  #L351462.  goto L351494;
  #L351468.  `@@n.a.a.a.t.b.b.a` @type ^`int`[] := v0 @kind object;
  #L35146c.  v0:= 12I;
  #L351470.  v0:= new `int`[v0];
  #L351474.  goto L3514b4;
  #L35147a.  `@@n.a.a.a.t.b.b.b` @type ^`int`[] := v0 @kind object;
  #L35147e.  v0:= 8I;
  #L351482.  v0:= new `int`[v0];
  #L351486.  goto L3514ec;
  #L35148c.  `@@n.a.a.a.t.b.b.c` @type ^`int`[] := v0 @kind object;
  #L351490.  return @kind void;
  #L351492.  
  #L351494.  v0:= (-4553I, -2I, -1I, -1I, -1I, -1I) @kind object;
  #L3514b3.  goto L351468;
  #L3514b4.  v0:= (20729809I, 9106I, 1I, 0I, 0I, 0I, -9106I, -3I, -1I, -1I, -1I, -1I) @kind object;
  #L3514eb.  goto L35147a;
  #L3514ec.  v0:= (-20729809I, -9107I, -2I, -1I, -1I, -1I, 9105I, 2I) @kind object;
  #L351513.  goto L35148c;
}
procedure `void` `a`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/b;.a:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L351524.  call temp:= `a`(v0, v1, v2) @signature `Ln/a/a/c/b;.a:([I[I[I)I` @kind static;
  #L35152a.  v0:= temp;
  #L35152c.  if v0 != 0 then goto L35154c;
  #L351530.  v0:= 5I;
  #L351532.  v0:= v2[v0];
  #L351536.  v1:= -1I;
  #L351538.  if v0 != v1 then goto L351558;
  #L35153c.  v0:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L351540.  call temp:= `l`(v2, v0) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L351546.  v0:= temp;
  #L351548.  if v0 == 0 then goto L351558;
  #L35154c.  v0:= 6I;
  #L35154e.  v1:= 4553I;
  #L351552.  call temp:= `b`(v0, v1, v2) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L351558.  return @kind void;
}
procedure `void` `b`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.b:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35156c.  v0:= 6I;
  #L35156e.  call temp:= `q`(v0, v2, v3) @signature `Ln/a/a/c/g;.q:(I[I[I)I` @kind static;
  #L351574.  v2:= temp;
  #L351576.  if v2 != 0 then goto L351596;
  #L35157a.  v2:= 5I;
  #L35157c.  v2:= v3[v2];
  #L351580.  v1:= -1I;
  #L351582.  if v2 != v1 then goto L3515a0;
  #L351586.  v2:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L35158a.  call temp:= `l`(v3, v2) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L351590.  v2:= temp;
  #L351592.  if v2 == 0 then goto L3515a0;
  #L351596.  v2:= 4553I;
  #L35159a.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3515a0.  return @kind void;
}
procedure `int`[] `c`(`java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/b;.c:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L351420.  call temp:= `i`(v2) @signature `Ln/a/a/c/b;.i:(Ljava/math/BigInteger;)[I` @kind static;
  #L351426.  v2:= temp @kind object;
  #L351428.  v0:= 5I;
  #L35142a.  v0:= v2[v0];
  #L35142e.  v1:= -1I;
  #L351430.  if v0 != v1 then goto L35144a;
  #L351434.  v0:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L351438.  call temp:= `l`(v2, v0) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L35143e.  v1:= temp;
  #L351440.  if v1 == 0 then goto L35144a;
  #L351444.  call temp:= `y`(v0, v2) @signature `Ln/a/a/c/b;.y:([I[I)I` @kind static;
  #L35144a.  return v2 @kind object;
}
procedure `void` `d`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.d:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3515b4.  call temp:= `f`() @signature `Ln/a/a/c/b;.f:()[I` @kind static;
  #L3515ba.  v0:= temp @kind object;
  #L3515bc.  call `p`(v1, v2, v0) @signature `Ln/a/a/c/b;.p:([I[I[I)V` @kind static;
  #L3515c2.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/b;.g:([I[I)V` @kind static;
  #L3515c8.  return @kind void;
}
procedure `void` `e`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.e:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3515dc.  call temp:= `t`(v1, v2, v3) @signature `Ln/a/a/c/b;.t:([I[I[I)I` @kind static;
  #L3515e2.  v1:= temp;
  #L3515e4.  v2:= 12I;
  #L3515e8.  if v1 != 0 then goto L35160a;
  #L3515ec.  v1:= 11I;
  #L3515f0.  v1:= v3[v1];
  #L3515f4.  v0:= -1I;
  #L3515f6.  if v1 != v0 then goto L351624;
  #L3515fa.  v1:= `@@n.a.a.a.t.b.b.b` @type ^`int`[] @kind object;
  #L3515fe.  call temp:= `o`(v2, v3, v1) @signature `Ln/a/a/c/g;.o:(I[I[I)Z` @kind static;
  #L351604.  v1:= temp;
  #L351606.  if v1 == 0 then goto L351624;
  #L35160a.  v1:= `@@n.a.a.a.t.b.b.c` @type ^`int`[] @kind object;
  #L35160e.  v0:= length @variable v1;
  #L351610.  call temp:= `e`(v0, v1, v3) @signature `Ln/a/a/c/g;.e:(I[I[I)I` @kind static;
  #L351616.  v0:= temp;
  #L351618.  if v0 == 0 then goto L351624;
  #L35161c.  v1:= length @variable v1;
  #L35161e.  call temp:= `r`(v2, v3, v1) @signature `Ln/a/a/c/g;.r:(I[II)I` @kind static;
  #L351624.  return @kind void;
}
procedure `void` `f`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/b;.f:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L351638.  call temp:= `n`(v1) @signature `Ln/a/a/c/b;.n:([I)Z` @kind static;
  #L35163e.  v0:= temp;
  #L351640.  if v0 == 0 then goto L35164c;
  #L351644.  call `A`(v2) @signature `Ln/a/a/c/b;.A:([I)V` @kind static;
  #L35164a.  goto L351656;
  #L35164c.  v0:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L351650.  call temp:= `x`(v0, v1, v2) @signature `Ln/a/a/c/b;.x:([I[I[I)I` @kind static;
  #L351656.  return @kind void;
}
procedure `void` `g`(`int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Ln/a/a/a/t/b/b;.g:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L351668.  v0:= 4553I;
  #L35166c.  v2:= 6I;
  #L35166e.  v4:= 0I;
  #L351670.  v6:= 0I;
  #L351672.  v1:= v7 @kind object;
  #L351674.  v3:= v7 @kind object;
  #L351676.  v5:= v8 @kind object;
  #L351678.  call temp:= `q`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/c/b;.q:(I[II[II[II)J` @kind static;
  #L35167e.  v0:= temp @kind wide;
  #L351680.  v7:= 4553I;
  #L351684.  v2:= 0I;
  #L351686.  call temp:= `r`(v7, v0, v8, v2) @signature `Ln/a/a/c/b;.r:(IJ[II)I` @kind static;
  #L35168c.  v0:= temp;
  #L35168e.  if v0 != 0 then goto L3516ae;
  #L351692.  v0:= 5I;
  #L351694.  v0:= v8[v0];
  #L351698.  v1:= -1I;
  #L35169a.  if v0 != v1 then goto L3516b6;
  #L35169e.  v0:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L3516a2.  call temp:= `l`(v8, v0) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L3516a8.  v0:= temp;
  #L3516aa.  if v0 == 0 then goto L3516b6;
  #L3516ae.  v0:= 6I;
  #L3516b0.  call temp:= `b`(v0, v7, v8) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3516b6.  return @kind void;
}
procedure `void` `h`(`int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.h:(I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3516c8.  v0:= 4553I;
  #L3516cc.  if v2 == 0 then goto L3516de;
  #L3516d0.  v1:= 0I;
  #L3516d2.  call temp:= `s`(v0, v2, v3, v1) @signature `Ln/a/a/c/b;.s:(II[II)I` @kind static;
  #L3516d8.  v2:= temp;
  #L3516da.  if v2 != 0 then goto L3516fa;
  #L3516de.  v2:= 5I;
  #L3516e0.  v2:= v3[v2];
  #L3516e4.  v1:= -1I;
  #L3516e6.  if v2 != v1 then goto L351702;
  #L3516ea.  v2:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L3516ee.  call temp:= `l`(v3, v2) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L3516f4.  v2:= temp;
  #L3516f6.  if v2 == 0 then goto L351702;
  #L3516fa.  v2:= 6I;
  #L3516fc.  call temp:= `b`(v2, v0, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L351702.  return @kind void;
}
procedure `void` `i`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/b;.i:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L351714.  call temp:= `f`() @signature `Ln/a/a/c/b;.f:()[I` @kind static;
  #L35171a.  v0:= temp @kind object;
  #L35171c.  call `v`(v1, v0) @signature `Ln/a/a/c/b;.v:([I[I)V` @kind static;
  #L351722.  call `g`(v0, v2) @signature `Ln/a/a/a/t/b/b;.g:([I[I)V` @kind static;
  #L351728.  return @kind void;
}
procedure `void` `j`(`int`[] v1 @kind object, `int` v2 , `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.j:([II[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35173c.  call temp:= `f`() @signature `Ln/a/a/c/b;.f:()[I` @kind static;
  #L351742.  v0:= temp @kind object;
  #L351744.  call `v`(v1, v0) @signature `Ln/a/a/c/b;.v:([I[I)V` @kind static;
  #L35174a.  call `g`(v0, v3) @signature `Ln/a/a/a/t/b/b;.g:([I[I)V` @kind static;
  #L351750.  v2:= v2 + -1;
  #L351754.  if v2 <= 0 then goto L351760;
  #L351758.  call `v`(v3, v0) @signature `Ln/a/a/c/b;.v:([I[I)V` @kind static;
  #L35175e.  goto L35174a;
  #L351760.  return @kind void;
}
procedure `void` `k`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Ln/a/a/a/t/b/b;.k:([I[I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L351774.  call temp:= `x`(v0, v1, v2) @signature `Ln/a/a/c/b;.x:([I[I[I)I` @kind static;
  #L35177a.  v0:= temp;
  #L35177c.  if v0 == 0 then goto L35178c;
  #L351780.  v0:= 6I;
  #L351782.  v1:= 4553I;
  #L351786.  call temp:= `G`(v0, v1, v2) @signature `Ln/a/a/c/g;.G:(II[I)I` @kind static;
  #L35178c.  return @kind void;
}
procedure `void` `l`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Ln/a/a/a/t/b/b;.l:([I[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3517a0.  v0:= 6I;
  #L3517a2.  v1:= 0I;
  #L3517a4.  call temp:= `C`(v0, v2, v1, v3) @signature `Ln/a/a/c/g;.C:(I[II[I)I` @kind static;
  #L3517aa.  v2:= temp;
  #L3517ac.  if v2 != 0 then goto L3517cc;
  #L3517b0.  v2:= 5I;
  #L3517b2.  v2:= v3[v2];
  #L3517b6.  v1:= -1I;
  #L3517b8.  if v2 != v1 then goto L3517d6;
  #L3517bc.  v2:= `@@n.a.a.a.t.b.b.a` @type ^`int`[] @kind object;
  #L3517c0.  call temp:= `l`(v3, v2) @signature `Ln/a/a/c/b;.l:([I[I)Z` @kind static;
  #L3517c6.  v2:= temp;
  #L3517c8.  if v2 == 0 then goto L3517d6;
  #L3517cc.  v2:= 4553I;
  #L3517d0.  call temp:= `b`(v0, v2, v3) @signature `Ln/a/a/c/g;.b:(II[I)I` @kind static;
  #L3517d6.  return @kind void;
}
