record `n.a.a.a.t.b.e` @kind class @AccessFlag PUBLIC extends `n.a.a.a.d` @kind class {
  `n.a.a.a.t.b.h` `n.a.a.a.t.b.e.j` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.e.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L351d38.  v0:= new `java.math.BigInteger`;
  #L351d3c.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF" @kind object;
  #L351d40.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L351d46.  v1:= temp @kind object;
  #L351d48.  v2:= 1I;
  #L351d4a.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L351d50.  `@@n.a.a.a.t.b.e.i` @type ^`java.math.BigInteger` := v0 @kind object;
  #L351d54.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.e` v3 @kind this) @signature `Ln/a/a/a/t/b/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L351d68.  v0:= `@@n.a.a.a.t.b.e.i` @type ^`java.math.BigInteger` @kind object;
  #L351d6c.  call `<init>`(v3, v0) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L351d72.  v0:= new `n.a.a.a.t.b.h`;
  #L351d76.  v1:= 0I;
  #L351d78.  call `<init>`(v0, v3, v1, v1) @signature `Ln/a/a/a/t/b/h;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @kind direct;
  #L351d7e.  v3.`n.a.a.a.t.b.e.j` @type ^`n.a.a.a.t.b.h` := v0 @kind object;
  #L351d82.  v0:= new `java.math.BigInteger`;
  #L351d86.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC" @kind object;
  #L351d8a.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L351d90.  v1:= temp @kind object;
  #L351d92.  v2:= 1I;
  #L351d94.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L351d9a.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/e;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L351da0.  v0:= temp @kind object;
  #L351da2.  v3.`n.a.a.a.f.b` @type ^`n.a.a.a.j` := v0 @kind object;
  #L351da6.  v0:= new `java.math.BigInteger`;
  #L351daa.  v1:= "64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1" @kind object;
  #L351dae.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L351db4.  v1:= temp @kind object;
  #L351db6.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L351dbc.  call temp:= `j`(v3, v0) @signature `Ln/a/a/a/t/b/e;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L351dc2.  v0:= temp @kind object;
  #L351dc4.  v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` := v0 @kind object;
  #L351dc8.  v0:= new `java.math.BigInteger`;
  #L351dcc.  v1:= "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831" @kind object;
  #L351dd0.  call temp:= `a`(v1) @signature `Lorg/bouncycastle/util/encoders/d;.a:(Ljava/lang/String;)[B` @kind static;
  #L351dd6.  v1:= temp @kind object;
  #L351dd8.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L351dde.  v3.`n.a.a.a.f.d` @type ^`java.math.BigInteger` := v0 @kind object;
  #L351de2.  v0:= 1L;
  #L351de6.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L351dec.  v0:= temp @kind object;
  #L351dee.  v3.`n.a.a.a.f.e` @type ^`java.math.BigInteger` := v0 @kind object;
  #L351df2.  v0:= 2I;
  #L351df4.  v3.`n.a.a.a.f.f` @type ^`int` := v0;
  #L351df8.  return @kind void;
}
procedure `n.a.a.a.f` `b`(`n.a.a.a.t.b.e` v1 @kind this) @signature `Ln/a/a/a/t/b/e;.b:()Ln/a/a/a/f;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L351ccc.  v0:= new `n.a.a.a.t.b.e`;
  #L351cd0.  call `<init>`(v0) @signature `Ln/a/a/a/t/b/e;.<init>:()V` @kind direct;
  #L351cd6.  return v0 @kind object;
}
procedure `n.a.a.a.p` `f`(`n.a.a.a.t.b.e` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object, `boolean` v4 ) @signature `Ln/a/a/a/t/b/e;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L351d04.  v0:= new `n.a.a.a.t.b.h`;
  #L351d08.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/t/b/h;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;Z)V` @kind direct;
  #L351d0e.  return v0 @kind object;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.e` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/e;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351ce8.  v0:= new `n.a.a.a.t.b.g`;
  #L351cec.  call `<init>`(v0, v2) @signature `Ln/a/a/a/t/b/g;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L351cf2.  return v0 @kind object;
}
procedure `int` `p`(`n.a.a.a.t.b.e` v1 @kind this) @signature `Ln/a/a/a/t/b/e;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351cac.  v0:= `@@n.a.a.a.t.b.e.i` @type ^`java.math.BigInteger` @kind object;
  #L351cb0.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L351cb6.  v0:= temp;
  #L351cb8.  return v0;
}
procedure `n.a.a.a.p` `q`(`n.a.a.a.t.b.e` v1 @kind this) @signature `Ln/a/a/a/t/b/e;.q:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351d20.  v0:= v1.`n.a.a.a.t.b.e.j` @type ^`n.a.a.a.t.b.h` @kind object;
  #L351d24.  return v0 @kind object;
}
procedure `boolean` `v`(`n.a.a.a.t.b.e` v1 @kind this, `int` v2 ) @signature `Ln/a/a/a/t/b/e;.v:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351c8c.  v0:= 2I;
  #L351c8e.  if v2 == v0 then goto L351c96;
  #L351c92.  v2:= 0I;
  #L351c94.  return v2;
  #L351c96.  v2:= 1I;
  #L351c98.  return v2;
}
