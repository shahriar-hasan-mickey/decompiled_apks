record `n.a.a.a.t.b.g` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.g.g` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.g.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3521a0.  v0:= `@@n.a.a.a.t.b.e.i` @type ^`java.math.BigInteger` @kind object;
  #L3521a4.  `@@n.a.a.a.t.b.g.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L3521a8.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.g` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/g;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3521d8.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3521de.  if v2 == 0 then goto L35220c;
  #L3521e2.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3521e8.  v0:= temp;
  #L3521ea.  if v0 < 0 then goto L35220c;
  #L3521ee.  v0:= `@@n.a.a.a.t.b.g.f` @type ^`java.math.BigInteger` @kind object;
  #L3521f2.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3521f8.  v0:= temp;
  #L3521fa.  if v0 >= 0 then goto L35220c;
  #L3521fe.  call temp:= `d`(v2) @signature `Ln/a/a/a/t/b/f;.d:(Ljava/math/BigInteger;)[I` @kind static;
  #L352204.  v2:= temp @kind object;
  #L352206.  v1.`n.a.a.a.t.b.g.g` @type ^`int`[] := v2 @kind object;
  #L35220a.  return @kind void;
  #L35220c.  v2:= new `java.lang.IllegalArgumentException`;
  #L352210.  v0:= "x value invalid for SecP192R1FieldElement" @kind object;
  #L352214.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35221a.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.g` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3521bc.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3521c2.  v0.`n.a.a.a.t.b.g.g` @type ^`int`[] := v1 @kind object;
  #L3521c6.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.g` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/g;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351f20.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351f26.  v0:= temp @kind object;
  #L351f28.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351f2c.  v3:= (`n.a.a.a.t.b.g`) v3 @kind object;
  #L351f30.  v3:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351f34.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/f;.a:([I[I[I)V` @kind static;
  #L351f3a.  v3:= new `n.a.a.a.t.b.g`;
  #L351f3e.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L351f44.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.g` v2 @kind this) @signature `Ln/a/a/a/t/b/g;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351f58.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351f5e.  v0:= temp @kind object;
  #L351f60.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351f64.  call `b`(v1, v0) @signature `Ln/a/a/a/t/b/f;.b:([I[I)V` @kind static;
  #L351f6a.  v1:= new `n.a.a.a.t.b.g`;
  #L351f6e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L351f74.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.g` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/g;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351f88.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351f8e.  v0:= temp @kind object;
  #L351f90.  v1:= `@@n.a.a.a.t.b.f.a` @type ^`int`[] @kind object;
  #L351f94.  v3:= (`n.a.a.a.t.b.g`) v3 @kind object;
  #L351f98.  v3:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351f9c.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L351fa2.  v3:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351fa6.  call `e`(v0, v3, v0) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L351fac.  v3:= new `n.a.a.a.t.b.g`;
  #L351fb0.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L351fb6.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/t/b/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351e0c.  if v2 != v1 then goto L351e14;
  #L351e10.  v2:= 1I;
  #L351e12.  return v2;
  #L351e14.  v0:= instanceof @variable v2 @type ^`n.a.a.a.t.b.g` @kind boolean;
  #L351e18.  if v0 != 0 then goto L351e20;
  #L351e1c.  v2:= 0I;
  #L351e1e.  return v2;
  #L351e20.  v2:= (`n.a.a.a.t.b.g`) v2 @kind object;
  #L351e24.  v0:= v1.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351e28.  v2:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351e2c.  call temp:= `h`(v0, v2) @signature `Ln/a/a/c/b;.h:([I[I)Z` @kind static;
  #L351e32.  v2:= temp;
  #L351e34.  return v2;
}
procedure `int` `f`(`n.a.a.a.t.b.g` v1 @kind this) @signature `Ln/a/a/a/t/b/g;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351eb0.  v0:= `@@n.a.a.a.t.b.g.f` @type ^`java.math.BigInteger` @kind object;
  #L351eb4.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L351eba.  v0:= temp;
  #L351ebc.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.g` v3 @kind this) @signature `Ln/a/a/a/t/b/g;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L351fc8.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L351fce.  v0:= temp @kind object;
  #L351fd0.  v1:= `@@n.a.a.a.t.b.f.a` @type ^`int`[] @kind object;
  #L351fd4.  v2:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351fd8.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L351fde.  v1:= new `n.a.a.a.t.b.g`;
  #L351fe2.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L351fe8.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.g` v1 @kind this) @signature `Ln/a/a/a/t/b/g;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351e48.  v0:= v1.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351e4c.  call temp:= `m`(v0) @signature `Ln/a/a/c/b;.m:([I)Z` @kind static;
  #L351e52.  v0:= temp;
  #L351e54.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.g` v4 @kind this) @signature `Ln/a/a/a/t/b/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L351ed0.  v0:= `@@n.a.a.a.t.b.g.f` @type ^`java.math.BigInteger` @kind object;
  #L351ed4.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L351eda.  v0:= temp;
  #L351edc.  v1:= v4.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351ee0.  v2:= 0I;
  #L351ee2.  v3:= 6I;
  #L351ee4.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L351eea.  v1:= temp;
  #L351eec.  v0:= v0 ^~ v1 @kind int;
  #L351eee.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.g` v1 @kind this) @signature `Ln/a/a/a/t/b/g;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351e68.  v0:= v1.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351e6c.  call temp:= `n`(v0) @signature `Ln/a/a/c/b;.n:([I)Z` @kind static;
  #L351e72.  v0:= temp;
  #L351e74.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.g` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/g;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351ffc.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L352002.  v0:= temp @kind object;
  #L352004.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352008.  v3:= (`n.a.a.a.t.b.g`) v3 @kind object;
  #L35200c.  v3:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352010.  call `e`(v1, v3, v0) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L352016.  v3:= new `n.a.a.a.t.b.g`;
  #L35201a.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L352020.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.g` v2 @kind this) @signature `Ln/a/a/a/t/b/g;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352034.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35203a.  v0:= temp @kind object;
  #L35203c.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352040.  call `g`(v1, v0) @signature `Ln/a/a/a/t/b/f;.g:([I[I)V` @kind static;
  #L352046.  v1:= new `n.a.a.a.t.b.g`;
  #L35204a.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L352050.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.g` v4 @kind this) @signature `Ln/a/a/a/t/b/g;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L352064.  v0:= v4.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352068.  call temp:= `n`(v0) @signature `Ln/a/a/c/b;.n:([I)Z` @kind static;
  #L35206e.  v1:= temp;
  #L352070.  if v1 != 0 then goto L352126;
  #L352074.  call temp:= `m`(v0) @signature `Ln/a/a/c/b;.m:([I)Z` @kind static;
  #L35207a.  v1:= temp;
  #L35207c.  if v1 == 0 then goto L352082;
  #L352080.  goto L352126;
  #L352082.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L352088.  v1:= temp @kind object;
  #L35208a.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L352090.  v2:= temp @kind object;
  #L352092.  call `j`(v0, v1) @signature `Ln/a/a/a/t/b/f;.j:([I[I)V` @kind static;
  #L352098.  call `e`(v1, v0, v1) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L35209e.  v3:= 2I;
  #L3520a0.  call `k`(v1, v3, v2) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520a6.  call `e`(v2, v1, v2) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520ac.  v3:= 4I;
  #L3520ae.  call `k`(v2, v3, v1) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520b4.  call `e`(v1, v2, v1) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520ba.  v3:= 8I;
  #L3520be.  call `k`(v1, v3, v2) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520c4.  call `e`(v2, v1, v2) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520ca.  v3:= 16I;
  #L3520ce.  call `k`(v2, v3, v1) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520d4.  call `e`(v1, v2, v1) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520da.  v3:= 32I;
  #L3520de.  call `k`(v1, v3, v2) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520e4.  call `e`(v2, v1, v2) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520ea.  v3:= 64I;
  #L3520ee.  call `k`(v2, v3, v1) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L3520f4.  call `e`(v1, v2, v1) @signature `Ln/a/a/a/t/b/f;.e:([I[I[I)V` @kind static;
  #L3520fa.  v3:= 62I;
  #L3520fe.  call `k`(v1, v3, v1) @signature `Ln/a/a/a/t/b/f;.k:([II[I)V` @kind static;
  #L352104.  call `j`(v1, v2) @signature `Ln/a/a/a/t/b/f;.j:([I[I)V` @kind static;
  #L35210a.  call temp:= `h`(v0, v2) @signature `Ln/a/a/c/b;.h:([I[I)Z` @kind static;
  #L352110.  v0:= temp;
  #L352112.  if v0 == 0 then goto L352122;
  #L352116.  v0:= new `n.a.a.a.t.b.g`;
  #L35211a.  call `<init>`(v0, v1) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L352120.  goto L352124;
  #L352122.  v0:= 0I;
  #L352124.  return v0 @kind object;
  #L352126.  return v4 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.g` v2 @kind this) @signature `Ln/a/a/a/t/b/g;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352138.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35213e.  v0:= temp @kind object;
  #L352140.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352144.  call `j`(v1, v0) @signature `Ln/a/a/a/t/b/f;.j:([I[I)V` @kind static;
  #L35214a.  v1:= new `n.a.a.a.t.b.g`;
  #L35214e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L352154.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.g` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/g;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352168.  call temp:= `e`() @signature `Ln/a/a/c/b;.e:()[I` @kind static;
  #L35216e.  v0:= temp @kind object;
  #L352170.  v1:= v2.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L352174.  v3:= (`n.a.a.a.t.b.g`) v3 @kind object;
  #L352178.  v3:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L35217c.  call `m`(v1, v3, v0) @signature `Ln/a/a/a/t/b/f;.m:([I[I[I)V` @kind static;
  #L352182.  v3:= new `n.a.a.a.t.b.g`;
  #L352186.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/g;.<init>:([I)V` @kind direct;
  #L35218c.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.g` v3 @kind this) @signature `Ln/a/a/a/t/b/g;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L351e88.  v0:= v3.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351e8c.  v1:= 0I;
  #L351e8e.  call temp:= `j`(v0, v1) @signature `Ln/a/a/c/b;.j:([II)I` @kind static;
  #L351e94.  v0:= temp;
  #L351e96.  v2:= 1I;
  #L351e98.  if v0 != v2 then goto L351e9e;
  #L351e9c.  v1:= 1I;
  #L351e9e.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.g` v1 @kind this) @signature `Ln/a/a/a/t/b/g;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351f00.  v0:= v1.`n.a.a.a.t.b.g.g` @type ^`int`[] @kind object;
  #L351f04.  call temp:= `z`(v0) @signature `Ln/a/a/c/b;.z:([I)Ljava/math/BigInteger;` @kind static;
  #L351f0a.  v0:= temp @kind object;
  #L351f0c.  return v0 @kind object;
}
