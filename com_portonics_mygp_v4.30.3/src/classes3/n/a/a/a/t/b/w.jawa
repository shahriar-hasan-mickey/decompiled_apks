record `n.a.a.a.t.b.w` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `int`[] `n.a.a.a.t.b.w.g` @AccessFlag PROTECTED;
}
global `java.math.BigInteger` `@@n.a.a.a.t.b.w.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/t/b/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3562c4.  v0:= `@@n.a.a.a.t.b.u.i` @type ^`java.math.BigInteger` @kind object;
  #L3562c8.  `@@n.a.a.a.t.b.w.f` @type ^`java.math.BigInteger` := v0 @kind object;
  #L3562cc.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.t.b.w` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/t/b/w;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3562fc.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L356302.  if v2 == 0 then goto L356330;
  #L356306.  call temp:= `signum`(v2) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L35630c.  v0:= temp;
  #L35630e.  if v0 < 0 then goto L356330;
  #L356312.  v0:= `@@n.a.a.a.t.b.w.f` @type ^`java.math.BigInteger` @kind object;
  #L356316.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L35631c.  v0:= temp;
  #L35631e.  if v0 >= 0 then goto L356330;
  #L356322.  call temp:= `d`(v2) @signature `Ln/a/a/a/t/b/v;.d:(Ljava/math/BigInteger;)[I` @kind static;
  #L356328.  v2:= temp @kind object;
  #L35632a.  v1.`n.a.a.a.t.b.w.g` @type ^`int`[] := v2 @kind object;
  #L35632e.  return @kind void;
  #L356330.  v2:= new `java.lang.IllegalArgumentException`;
  #L356334.  v0:= "x value invalid for SecP256R1FieldElement" @kind object;
  #L356338.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35633e.  throw v2;
}
procedure `void` `<init>`(`n.a.a.a.t.b.w` v0 @kind this, `int`[] v1 @kind object) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3562e0.  call `<init>`(v0) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L3562e6.  v0.`n.a.a.a.t.b.w.g` @type ^`int`[] := v1 @kind object;
  #L3562ea.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.t.b.w` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/w;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356044.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35604a.  v0:= temp @kind object;
  #L35604c.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356050.  v3:= (`n.a.a.a.t.b.w`) v3 @kind object;
  #L356054.  v3:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356058.  call `a`(v1, v3, v0) @signature `Ln/a/a/a/t/b/v;.a:([I[I[I)V` @kind static;
  #L35605e.  v3:= new `n.a.a.a.t.b.w`;
  #L356062.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356068.  return v3 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.t.b.w` v2 @kind this) @signature `Ln/a/a/a/t/b/w;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35607c.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L356082.  v0:= temp @kind object;
  #L356084.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356088.  call `b`(v1, v0) @signature `Ln/a/a/a/t/b/v;.b:([I[I)V` @kind static;
  #L35608e.  v1:= new `n.a.a.a.t.b.w`;
  #L356092.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356098.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.t.b.w` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/w;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3560ac.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3560b2.  v0:= temp @kind object;
  #L3560b4.  v1:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L3560b8.  v3:= (`n.a.a.a.t.b.w`) v3 @kind object;
  #L3560bc.  v3:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L3560c0.  call `d`(v1, v3, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L3560c6.  v3:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L3560ca.  call `e`(v0, v3, v0) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3560d0.  v3:= new `n.a.a.a.t.b.w`;
  #L3560d4.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L3560da.  return v3 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.t.b.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/t/b/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355f2c.  if v2 != v1 then goto L355f34;
  #L355f30.  v2:= 1I;
  #L355f32.  return v2;
  #L355f34.  v0:= instanceof @variable v2 @type ^`n.a.a.a.t.b.w` @kind boolean;
  #L355f38.  if v0 != 0 then goto L355f40;
  #L355f3c.  v2:= 0I;
  #L355f3e.  return v2;
  #L355f40.  v2:= (`n.a.a.a.t.b.w`) v2 @kind object;
  #L355f44.  v0:= v1.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L355f48.  v2:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L355f4c.  call temp:= `i`(v0, v2) @signature `Ln/a/a/c/d;.i:([I[I)Z` @kind static;
  #L355f52.  v2:= temp;
  #L355f54.  return v2;
}
procedure `int` `f`(`n.a.a.a.t.b.w` v1 @kind this) @signature `Ln/a/a/a/t/b/w;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355fd0.  v0:= `@@n.a.a.a.t.b.w.f` @type ^`java.math.BigInteger` @kind object;
  #L355fd4.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L355fda.  v0:= temp;
  #L355fdc.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.t.b.w` v3 @kind this) @signature `Ln/a/a/a/t/b/w;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3560ec.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3560f2.  v0:= temp @kind object;
  #L3560f4.  v1:= `@@n.a.a.a.t.b.v.a` @type ^`int`[] @kind object;
  #L3560f8.  v2:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L3560fc.  call `d`(v1, v2, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L356102.  v1:= new `n.a.a.a.t.b.w`;
  #L356106.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L35610c.  return v1 @kind object;
}
procedure `boolean` `h`(`n.a.a.a.t.b.w` v1 @kind this) @signature `Ln/a/a/a/t/b/w;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355f68.  v0:= v1.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L355f6c.  call temp:= `n`(v0) @signature `Ln/a/a/c/d;.n:([I)Z` @kind static;
  #L355f72.  v0:= temp;
  #L355f74.  return v0;
}
procedure `int` `hashCode`(`n.a.a.a.t.b.w` v4 @kind this) @signature `Ln/a/a/a/t/b/w;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L355ff0.  v0:= `@@n.a.a.a.t.b.w.f` @type ^`java.math.BigInteger` @kind object;
  #L355ff4.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L355ffa.  v0:= temp;
  #L355ffc.  v1:= v4.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356000.  v2:= 0I;
  #L356002.  v3:= 8I;
  #L356006.  call temp:= `k`(v1, v2, v3) @signature `Lorg/bouncycastle/util/a;.k:([III)I` @kind static;
  #L35600c.  v1:= temp;
  #L35600e.  v0:= v0 ^~ v1 @kind int;
  #L356010.  return v0;
}
procedure `boolean` `i`(`n.a.a.a.t.b.w` v1 @kind this) @signature `Ln/a/a/a/t/b/w;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355f88.  v0:= v1.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L355f8c.  call temp:= `o`(v0) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L355f92.  v0:= temp;
  #L355f94.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.t.b.w` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/w;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356120.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L356126.  v0:= temp @kind object;
  #L356128.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L35612c.  v3:= (`n.a.a.a.t.b.w`) v3 @kind object;
  #L356130.  v3:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356134.  call `e`(v1, v3, v0) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L35613a.  v3:= new `n.a.a.a.t.b.w`;
  #L35613e.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356144.  return v3 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.t.b.w` v2 @kind this) @signature `Ln/a/a/a/t/b/w;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356158.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L35615e.  v0:= temp @kind object;
  #L356160.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356164.  call `g`(v1, v0) @signature `Ln/a/a/a/t/b/v;.g:([I[I)V` @kind static;
  #L35616a.  v1:= new `n.a.a.a.t.b.w`;
  #L35616e.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356174.  return v1 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.t.b.w` v4 @kind this) @signature `Ln/a/a/a/t/b/w;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L356188.  v0:= v4.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L35618c.  call temp:= `o`(v0) @signature `Ln/a/a/c/d;.o:([I)Z` @kind static;
  #L356192.  v1:= temp;
  #L356194.  if v1 != 0 then goto L35624a;
  #L356198.  call temp:= `n`(v0) @signature `Ln/a/a/c/d;.n:([I)Z` @kind static;
  #L35619e.  v1:= temp;
  #L3561a0.  if v1 == 0 then goto L3561a6;
  #L3561a4.  goto L35624a;
  #L3561a6.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3561ac.  v1:= temp @kind object;
  #L3561ae.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L3561b4.  v2:= temp @kind object;
  #L3561b6.  call `j`(v0, v1) @signature `Ln/a/a/a/t/b/v;.j:([I[I)V` @kind static;
  #L3561bc.  call `e`(v1, v0, v1) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3561c2.  v3:= 2I;
  #L3561c4.  call `k`(v1, v3, v2) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L3561ca.  call `e`(v2, v1, v2) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3561d0.  v3:= 4I;
  #L3561d2.  call `k`(v2, v3, v1) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L3561d8.  call `e`(v1, v2, v1) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3561de.  v3:= 8I;
  #L3561e2.  call `k`(v1, v3, v2) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L3561e8.  call `e`(v2, v1, v2) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3561ee.  v3:= 16I;
  #L3561f2.  call `k`(v2, v3, v1) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L3561f8.  call `e`(v1, v2, v1) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L3561fe.  v3:= 32I;
  #L356202.  call `k`(v1, v3, v1) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L356208.  call `e`(v1, v0, v1) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L35620e.  v3:= 96I;
  #L356212.  call `k`(v1, v3, v1) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L356218.  call `e`(v1, v0, v1) @signature `Ln/a/a/a/t/b/v;.e:([I[I[I)V` @kind static;
  #L35621e.  v3:= 94I;
  #L356222.  call `k`(v1, v3, v1) @signature `Ln/a/a/a/t/b/v;.k:([II[I)V` @kind static;
  #L356228.  call `j`(v1, v2) @signature `Ln/a/a/a/t/b/v;.j:([I[I)V` @kind static;
  #L35622e.  call temp:= `i`(v0, v2) @signature `Ln/a/a/c/d;.i:([I[I)Z` @kind static;
  #L356234.  v0:= temp;
  #L356236.  if v0 == 0 then goto L356246;
  #L35623a.  v0:= new `n.a.a.a.t.b.w`;
  #L35623e.  call `<init>`(v0, v1) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356244.  goto L356248;
  #L356246.  v0:= 0I;
  #L356248.  return v0 @kind object;
  #L35624a.  return v4 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.t.b.w` v2 @kind this) @signature `Ln/a/a/a/t/b/w;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35625c.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L356262.  v0:= temp @kind object;
  #L356264.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356268.  call `j`(v1, v0) @signature `Ln/a/a/a/t/b/v;.j:([I[I)V` @kind static;
  #L35626e.  v1:= new `n.a.a.a.t.b.w`;
  #L356272.  call `<init>`(v1, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L356278.  return v1 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.t.b.w` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/t/b/w;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35628c.  call temp:= `f`() @signature `Ln/a/a/c/d;.f:()[I` @kind static;
  #L356292.  v0:= temp @kind object;
  #L356294.  v1:= v2.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356298.  v3:= (`n.a.a.a.t.b.w`) v3 @kind object;
  #L35629c.  v3:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L3562a0.  call `m`(v1, v3, v0) @signature `Ln/a/a/a/t/b/v;.m:([I[I[I)V` @kind static;
  #L3562a6.  v3:= new `n.a.a.a.t.b.w`;
  #L3562aa.  call `<init>`(v3, v0) @signature `Ln/a/a/a/t/b/w;.<init>:([I)V` @kind direct;
  #L3562b0.  return v3 @kind object;
}
procedure `boolean` `r`(`n.a.a.a.t.b.w` v3 @kind this) @signature `Ln/a/a/a/t/b/w;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L355fa8.  v0:= v3.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L355fac.  v1:= 0I;
  #L355fae.  call temp:= `k`(v0, v1) @signature `Ln/a/a/c/d;.k:([II)I` @kind static;
  #L355fb4.  v0:= temp;
  #L355fb6.  v2:= 1I;
  #L355fb8.  if v0 != v2 then goto L355fbe;
  #L355fbc.  v1:= 1I;
  #L355fbe.  return v1;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.t.b.w` v1 @kind this) @signature `Ln/a/a/a/t/b/w;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L356024.  v0:= v1.`n.a.a.a.t.b.w.g` @type ^`int`[] @kind object;
  #L356028.  call temp:= `B`(v0) @signature `Ln/a/a/c/d;.B:([I)Ljava/math/BigInteger;` @kind static;
  #L35602e.  v0:= temp @kind object;
  #L356030.  return v0 @kind object;
}
