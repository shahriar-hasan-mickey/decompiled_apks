record `n.a.a.a.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.a.a.a.f` @kind class {
}
procedure `void` `<init>`(`n.a.a.a.d` v0 @kind this, `java.math.BigInteger` v1 @kind object) @signature `Ln/a/a/a/d;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3489a4.  call temp:= `b`(v1) @signature `Ln/a/a/b/b;.b:(Ljava/math/BigInteger;)Ln/a/a/b/a;` @kind static;
  #L3489aa.  v1:= temp @kind object;
  #L3489ac.  call `<init>`(v0, v1) @signature `Ln/a/a/a/f;.<init>:(Ln/a/a/b/a;)V` @kind direct;
  #L3489b2.  return @kind void;
}
procedure `n.a.a.a.p` `h`(`n.a.a.a.d` v3 @kind this, `int` v4 , `java.math.BigInteger` v5 @kind object) @signature `Ln/a/a/a/d;.h:(ILjava/math/BigInteger;)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L34891c.  call temp:= `j`(v3, v5) @signature `Ln/a/a/a/f;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L348922.  v5:= temp @kind object;
  #L348924.  call temp:= `o`(v5) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34892a.  v0:= temp @kind object;
  #L34892c.  v1:= v3.`n.a.a.a.f.b` @type ^`n.a.a.a.j` @kind object;
  #L348930.  call temp:= `a`(v0, v1) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L348936.  v0:= temp @kind object;
  #L348938.  call temp:= `j`(v0, v5) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34893e.  v0:= temp @kind object;
  #L348940.  v1:= v3.`n.a.a.a.f.c` @type ^`n.a.a.a.j` @kind object;
  #L348944.  call temp:= `a`(v0, v1) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34894a.  v0:= temp @kind object;
  #L34894c.  call temp:= `n`(v0) @signature `Ln/a/a/a/j;.n:()Ln/a/a/a/j;` @kind virtual;
  #L348952.  v0:= temp @kind object;
  #L348954.  if v0 == 0 then goto L348982;
  #L348958.  call temp:= `r`(v0) @signature `Ln/a/a/a/j;.r:()Z` @kind virtual;
  #L34895e.  v1:= temp;
  #L348960.  v2:= 1I;
  #L348962.  if v4 != v2 then goto L34896a;
  #L348966.  v4:= 1I;
  #L348968.  goto L34896c;
  #L34896a.  v4:= 0I;
  #L34896c.  if v1 == v4 then goto L348978;
  #L348970.  call temp:= `m`(v0) @signature `Ln/a/a/a/j;.m:()Ln/a/a/a/j;` @kind virtual;
  #L348976.  v0:= temp @kind object;
  #L348978.  call temp:= `f`(v3, v5, v0, v2) @signature `Ln/a/a/a/f;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @kind virtual;
  #L34897e.  v4:= temp @kind object;
  #L348980.  return v4 @kind object;
  #L348982.  v4:= new `java.lang.IllegalArgumentException`;
  #L348986.  v5:= "Invalid point compression" @kind object;
  #L34898a.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L348990.  throw v4;
}
