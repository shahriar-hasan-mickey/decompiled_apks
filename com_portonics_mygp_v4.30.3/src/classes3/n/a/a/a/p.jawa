record `n.a.a.a.p` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `n.a.a.a.f` `n.a.a.a.p.b` @AccessFlag PROTECTED;
  `n.a.a.a.j` `n.a.a.a.p.c` @AccessFlag PROTECTED;
  `n.a.a.a.j` `n.a.a.a.p.d` @AccessFlag PROTECTED;
  `n.a.a.a.j`[] `n.a.a.a.p.e` @AccessFlag PROTECTED;
  `boolean` `n.a.a.a.p.f` @AccessFlag PROTECTED;
  `java.util.Hashtable` `n.a.a.a.p.g` @AccessFlag PROTECTED;
}
global `n.a.a.a.j`[] `@@n.a.a.a.p.a` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L34ca5c.  v0:= 0I;
  #L34ca5e.  v0:= new `n.a.a.a.j`[v0];
  #L34ca62.  `@@n.a.a.a.p.a` @type ^`n.a.a.a.j`[] := v0 @kind object;
  #L34ca66.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.p` v1 @kind this, `n.a.a.a.f` v2 @kind object, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object) @signature `Ln/a/a/a/p;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L34ca78.  call temp:= `n`(v2) @signature `Ln/a/a/a/p;.n:(Ln/a/a/a/f;)[Ln/a/a/a/j;` @kind static;
  #L34ca7e.  v0:= temp @kind object;
  #L34ca80.  call `<init>`(v1, v2, v3, v4, v0) @signature `Ln/a/a/a/p;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;[Ln/a/a/a/j;)V` @kind direct;
  #L34ca86.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.p` v1 @kind this, `n.a.a.a.f` v2 @kind object, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object, `n.a.a.a.j`[] v5 @kind object) @signature `Ln/a/a/a/p;.<init>:(Ln/a/a/a/f;Ln/a/a/a/j;Ln/a/a/a/j;[Ln/a/a/a/j;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L34ca98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34ca9e.  v0:= 0I;
  #L34caa0.  v1.`n.a.a.a.p.g` @type ^`java.util.Hashtable` := v0 @kind object;
  #L34caa4.  v1.`n.a.a.a.p.b` @type ^`n.a.a.a.f` := v2 @kind object;
  #L34caa8.  v1.`n.a.a.a.p.c` @type ^`n.a.a.a.j` := v3 @kind object;
  #L34caac.  v1.`n.a.a.a.p.d` @type ^`n.a.a.a.j` := v4 @kind object;
  #L34cab0.  v1.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] := v5 @kind object;
  #L34cab4.  return @kind void;
}
procedure `n.a.a.a.j`[] `n`(`n.a.a.a.f` v6 @kind object) @signature `Ln/a/a/a/p;.n:(Ln/a/a/a/f;)[Ln/a/a/a/j;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34c888.  v0:= 0I;
  #L34c88a.  if v6 != 0 then goto L34c892;
  #L34c88e.  v1:= 0I;
  #L34c890.  goto L34c89a;
  #L34c892.  call temp:= `n`(v6) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L34c898.  v1:= temp;
  #L34c89a.  if v1 == 0 then goto L34c912;
  #L34c89e.  v2:= 5I;
  #L34c8a0.  if v1 == v2 then goto L34c912;
  #L34c8a4.  v2:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34c8a8.  call temp:= `j`(v6, v2) @signature `Ln/a/a/a/f;.j:(Ljava/math/BigInteger;)Ln/a/a/a/j;` @kind virtual;
  #L34c8ae.  v2:= temp @kind object;
  #L34c8b0.  v3:= 1I;
  #L34c8b2.  if v1 == v3 then goto L34c908;
  #L34c8b6.  v4:= 2I;
  #L34c8b8.  if v1 == v4 then goto L34c908;
  #L34c8bc.  v5:= 3I;
  #L34c8be.  if v1 == v5 then goto L34c8f6;
  #L34c8c2.  v5:= 4I;
  #L34c8c4.  if v1 == v5 then goto L34c8e0;
  #L34c8c8.  v6:= 6I;
  #L34c8ca.  if v1 != v6 then goto L34c8d0;
  #L34c8ce.  goto L34c908;
  #L34c8d0.  v6:= new `java.lang.IllegalArgumentException`;
  #L34c8d4.  v0:= "unknown coordinate system" @kind object;
  #L34c8d8.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34c8de.  throw v6;
  #L34c8e0.  v1:= new `n.a.a.a.j`[v4];
  #L34c8e4.  v1[v0]:= v2 @kind object;
  #L34c8e8.  call temp:= `k`(v6) @signature `Ln/a/a/a/f;.k:()Ln/a/a/a/j;` @kind virtual;
  #L34c8ee.  v6:= temp @kind object;
  #L34c8f0.  v1[v3]:= v6 @kind object;
  #L34c8f4.  return v1 @kind object;
  #L34c8f6.  v6:= new `n.a.a.a.j`[v5];
  #L34c8fa.  v6[v0]:= v2 @kind object;
  #L34c8fe.  v6[v3]:= v2 @kind object;
  #L34c902.  v6[v4]:= v2 @kind object;
  #L34c906.  return v6 @kind object;
  #L34c908.  v6:= new `n.a.a.a.j`[v3];
  #L34c90c.  v6[v0]:= v2 @kind object;
  #L34c910.  return v6 @kind object;
  #L34c912.  v6:= `@@n.a.a.a.p.a` @type ^`n.a.a.a.j`[] @kind object;
  #L34c916.  return v6 @kind object;
}
procedure `boolean` `A`() @signature `Ln/a/a/a/p;.A:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `n.a.a.a.p` `B`() @signature `Ln/a/a/a/p;.B:()Ln/a/a/a/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.p` `a`(`n.a.a.a.p` v0 @kind object) @signature `Ln/a/a/a/p;.a:(Ln/a/a/a/p;)Ln/a/a/a/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`n.a.a.a.p` v2 @kind this) @signature `Ln/a/a/a/p;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L34cac8.  call temp:= `u`(v2) @signature `Ln/a/a/a/p;.u:()Z` @kind virtual;
  #L34cace.  v0:= temp;
  #L34cad0.  if v0 == 0 then goto L34cad6;
  #L34cad4.  return @kind void;
  #L34cad6.  v0:= new `java.lang.IllegalStateException`;
  #L34cada.  v1:= "point not in normal form" @kind object;
  #L34cade.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34cae4.  throw v0;
}
procedure `n.a.a.a.p` `c`(`n.a.a.a.p` v2 @kind this, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object) @signature `Ln/a/a/a/p;.c:(Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/p;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L34c928.  call temp:= `i`(v2) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34c92e.  v0:= temp @kind object;
  #L34c930.  call temp:= `o`(v2) @signature `Ln/a/a/a/p;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34c936.  v1:= temp @kind object;
  #L34c938.  call temp:= `j`(v1, v3) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34c93e.  v3:= temp @kind object;
  #L34c940.  call temp:= `p`(v2) @signature `Ln/a/a/a/p;.p:()Ln/a/a/a/j;` @kind virtual;
  #L34c946.  v1:= temp @kind object;
  #L34c948.  call temp:= `j`(v1, v4) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34c94e.  v4:= temp @kind object;
  #L34c950.  v1:= v2.`n.a.a.a.p.f` @type ^`boolean` @kind boolean;
  #L34c954.  call temp:= `f`(v0, v3, v4, v1) @signature `Ln/a/a/a/f;.f:(Ln/a/a/a/j;Ln/a/a/a/j;Z)Ln/a/a/a/p;` @kind virtual;
  #L34c95a.  v3:= temp @kind object;
  #L34c95c.  return v3 @kind object;
}
procedure `n.a.a.a.p` `d`() @signature `Ln/a/a/a/p;.d:()Ln/a/a/a/p;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `e`(`n.a.a.a.p` v8 @kind this, `n.a.a.a.p` v9 @kind object) @signature `Ln/a/a/a/p;.e:(Ln/a/a/a/p;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L34c37c.  v0:= 0I;
  #L34c37e.  if v9 != 0 then goto L34c384;
  #L34c382.  return v0;
  #L34c384.  call temp:= `i`(v8) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34c38a.  v1:= temp @kind object;
  #L34c38c.  call temp:= `i`(v9) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34c392.  v2:= temp @kind object;
  #L34c394.  v3:= 1I;
  #L34c396.  if v1 != 0 then goto L34c39e;
  #L34c39a.  v4:= 1I;
  #L34c39c.  goto L34c3a0;
  #L34c39e.  v4:= 0I;
  #L34c3a0.  if v2 != 0 then goto L34c3a8;
  #L34c3a4.  v5:= 1I;
  #L34c3a6.  goto L34c3aa;
  #L34c3a8.  v5:= 0I;
  #L34c3aa.  call temp:= `t`(v8) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c3b0.  v6:= temp;
  #L34c3b2.  call temp:= `t`(v9) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c3b8.  v7:= temp;
  #L34c3ba.  if v6 != 0 then goto L34c45a;
  #L34c3be.  if v7 == 0 then goto L34c3c4;
  #L34c3c2.  goto L34c45a;
  #L34c3c4.  if v4 == 0 then goto L34c3ce;
  #L34c3c8.  if v5 == 0 then goto L34c3ce;
  #L34c3cc.  goto L34c3da;
  #L34c3ce.  if v4 == 0 then goto L34c3de;
  #L34c3d2.  call temp:= `x`(v9) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @kind virtual;
  #L34c3d8.  v9:= temp @kind object;
  #L34c3da.  v1:= v8 @kind object;
  #L34c3dc.  goto L34c41e;
  #L34c3de.  if v5 == 0 then goto L34c3ec;
  #L34c3e2.  call temp:= `x`(v8) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @kind virtual;
  #L34c3e8.  v1:= temp @kind object;
  #L34c3ea.  goto L34c41e;
  #L34c3ec.  call temp:= `i`(v1, v2) @signature `Ln/a/a/a/f;.i:(Ln/a/a/a/f;)Z` @kind virtual;
  #L34c3f2.  v2:= temp;
  #L34c3f4.  if v2 != 0 then goto L34c3fa;
  #L34c3f8.  return v0;
  #L34c3fa.  v2:= 2I;
  #L34c3fc.  v2:= new `n.a.a.a.p`[v2];
  #L34c400.  v2[v0]:= v8 @kind object;
  #L34c404.  call temp:= `s`(v1, v9) @signature `Ln/a/a/a/f;.s:(Ln/a/a/a/p;)Ln/a/a/a/p;` @kind virtual;
  #L34c40a.  v9:= temp @kind object;
  #L34c40c.  v2[v3]:= v9 @kind object;
  #L34c410.  call `t`(v1, v2) @signature `Ln/a/a/a/f;.t:([Ln/a/a/a/p;)V` @kind virtual;
  #L34c416.  v1:= v2[v0] @kind object;
  #L34c41a.  v9:= v2[v3] @kind object;
  #L34c41e.  call temp:= `q`(v1) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @kind virtual;
  #L34c424.  v2:= temp @kind object;
  #L34c426.  call temp:= `q`(v9) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @kind virtual;
  #L34c42c.  v4:= temp @kind object;
  #L34c42e.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34c434.  v2:= temp;
  #L34c436.  if v2 == 0 then goto L34c458;
  #L34c43a.  call temp:= `r`(v1) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @kind virtual;
  #L34c440.  v1:= temp @kind object;
  #L34c442.  call temp:= `r`(v9) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @kind virtual;
  #L34c448.  v9:= temp @kind object;
  #L34c44a.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34c450.  v9:= temp;
  #L34c452.  if v9 == 0 then goto L34c458;
  #L34c456.  v0:= 1I;
  #L34c458.  return v0;
  #L34c45a.  if v6 == 0 then goto L34c478;
  #L34c45e.  if v7 == 0 then goto L34c478;
  #L34c462.  if v4 != 0 then goto L34c476;
  #L34c466.  if v5 != 0 then goto L34c476;
  #L34c46a.  call temp:= `i`(v1, v2) @signature `Ln/a/a/a/f;.i:(Ln/a/a/a/f;)Z` @kind virtual;
  #L34c470.  v9:= temp;
  #L34c472.  if v9 == 0 then goto L34c478;
  #L34c476.  v0:= 1I;
  #L34c478.  return v0;
}
procedure `boolean` `equals`(`n.a.a.a.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/a/a/a/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c348.  if v2 != v1 then goto L34c350;
  #L34c34c.  v2:= 1I;
  #L34c34e.  return v2;
  #L34c350.  v0:= instanceof @variable v2 @type ^`n.a.a.a.p` @kind boolean;
  #L34c354.  if v0 != 0 then goto L34c35c;
  #L34c358.  v2:= 0I;
  #L34c35a.  return v2;
  #L34c35c.  v2:= (`n.a.a.a.p`) v2 @kind object;
  #L34c360.  call temp:= `e`(v1, v2) @signature `Ln/a/a/a/p;.e:(Ln/a/a/a/p;)Z` @kind virtual;
  #L34c366.  v2:= temp;
  #L34c368.  return v2;
}
procedure `n.a.a.a.j` `f`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.f:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c7bc.  call `b`(v1) @signature `Ln/a/a/a/p;.b:()V` @kind virtual;
  #L34c7c2.  call temp:= `q`(v1) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @kind virtual;
  #L34c7c8.  v0:= temp @kind object;
  #L34c7ca.  return v0 @kind object;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c7dc.  call `b`(v1) @signature `Ln/a/a/a/p;.b:()V` @kind virtual;
  #L34c7e2.  call temp:= `r`(v1) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @kind virtual;
  #L34c7e8.  v0:= temp @kind object;
  #L34c7ea.  return v0 @kind object;
}
procedure `boolean` `h`() @signature `Ln/a/a/a/p;.h:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`n.a.a.a.p` v3 @kind this) @signature `Ln/a/a/a/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34c69c.  call temp:= `i`(v3) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34c6a2.  v0:= temp @kind object;
  #L34c6a4.  if v0 != 0 then goto L34c6ac;
  #L34c6a8.  v0:= 0I;
  #L34c6aa.  goto L34c6b8;
  #L34c6ac.  call temp:= `hashCode`(v0) @signature `Ln/a/a/a/f;.hashCode:()I` @kind virtual;
  #L34c6b2.  v0:= temp;
  #L34c6b4.  v0:= v0 ^~ -1;
  #L34c6b8.  call temp:= `t`(v3) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c6be.  v1:= temp;
  #L34c6c0.  if v1 != 0 then goto L34c6f8;
  #L34c6c4.  call temp:= `x`(v3) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @kind virtual;
  #L34c6ca.  v1:= temp @kind object;
  #L34c6cc.  call temp:= `q`(v1) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @kind virtual;
  #L34c6d2.  v2:= temp @kind object;
  #L34c6d4.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L34c6da.  v2:= temp;
  #L34c6dc.  v2:= v2 * 17;
  #L34c6e0.  v0:= v0 ^~ v2 @kind int;
  #L34c6e2.  call temp:= `r`(v1) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @kind virtual;
  #L34c6e8.  v1:= temp @kind object;
  #L34c6ea.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L34c6f0.  v1:= temp;
  #L34c6f2.  v1:= v1 * 257;
  #L34c6f6.  v0:= v0 ^~ v1 @kind int;
  #L34c6f8.  return v0;
}
procedure `n.a.a.a.f` `i`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c7a4.  v0:= v1.`n.a.a.a.p.b` @type ^`n.a.a.a.f` @kind object;
  #L34c7a8.  return v0 @kind object;
}
procedure `int` `j`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.j:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L34c674.  v0:= v1.`n.a.a.a.p.b` @type ^`n.a.a.a.f` @kind object;
  #L34c678.  if v0 != 0 then goto L34c680;
  #L34c67c.  v0:= 0I;
  #L34c67e.  goto L34c688;
  #L34c680.  call temp:= `n`(v0) @signature `Ln/a/a/a/f;.n:()I` @kind virtual;
  #L34c686.  v0:= temp;
  #L34c688.  return v0;
}
procedure `n.a.a.a.p` `k`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.k:()Ln/a/a/a/p;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L34c970.  call temp:= `x`(v1) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @kind virtual;
  #L34c976.  v0:= temp @kind object;
  #L34c978.  call temp:= `d`(v0) @signature `Ln/a/a/a/p;.d:()Ln/a/a/a/p;` @kind virtual;
  #L34c97e.  v0:= temp @kind object;
  #L34c980.  return v0 @kind object;
}
procedure `byte`[] `l`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.l:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c5b0.  v0:= v1.`n.a.a.a.p.f` @type ^`boolean` @kind boolean;
  #L34c5b4.  call temp:= `m`(v1, v0) @signature `Ln/a/a/a/p;.m:(Z)[B` @kind virtual;
  #L34c5ba.  v0:= temp @kind object;
  #L34c5bc.  return v0 @kind object;
}
procedure `byte`[] `m`(`n.a.a.a.p` v5 @kind this, `boolean` v6 ) @signature `Ln/a/a/a/p;.m:(Z)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L34c5d0.  call temp:= `t`(v5) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c5d6.  v0:= temp;
  #L34c5d8.  v1:= 1I;
  #L34c5da.  if v0 == 0 then goto L34c5e4;
  #L34c5de.  v6:= new `byte`[v1];
  #L34c5e2.  return v6 @kind object;
  #L34c5e4.  call temp:= `x`(v5) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @kind virtual;
  #L34c5ea.  v0:= temp @kind object;
  #L34c5ec.  call temp:= `q`(v0) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @kind virtual;
  #L34c5f2.  v2:= temp @kind object;
  #L34c5f4.  call temp:= `e`(v2) @signature `Ln/a/a/a/j;.e:()[B` @kind virtual;
  #L34c5fa.  v2:= temp @kind object;
  #L34c5fc.  v3:= 0I;
  #L34c5fe.  if v6 == 0 then goto L34c62c;
  #L34c602.  v6:= length @variable v2;
  #L34c604.  v6:= v6 + v1 @kind int;
  #L34c606.  v6:= new `byte`[v6];
  #L34c60a.  call temp:= `h`(v0) @signature `Ln/a/a/a/p;.h:()Z` @kind virtual;
  #L34c610.  v0:= temp;
  #L34c612.  if v0 == 0 then goto L34c61a;
  #L34c616.  v0:= 3I;
  #L34c618.  goto L34c61c;
  #L34c61a.  v0:= 2I;
  #L34c61c.  v0:= (`byte`) v0 @kind i2b;
  #L34c61e.  v6[v3]:= v0 @kind byte;
  #L34c622.  v0:= length @variable v2;
  #L34c624.  call `arraycopy`(v2, v3, v6, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34c62a.  return v6 @kind object;
  #L34c62c.  call temp:= `r`(v0) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @kind virtual;
  #L34c632.  v6:= temp @kind object;
  #L34c634.  call temp:= `e`(v6) @signature `Ln/a/a/a/j;.e:()[B` @kind virtual;
  #L34c63a.  v6:= temp @kind object;
  #L34c63c.  v0:= length @variable v2;
  #L34c63e.  v4:= length @variable v6;
  #L34c640.  v0:= v0 + v4 @kind int;
  #L34c642.  v0:= v0 + v1 @kind int;
  #L34c644.  v0:= new `byte`[v0];
  #L34c648.  v4:= 4I;
  #L34c64a.  v0[v3]:= v4 @kind byte;
  #L34c64e.  v4:= length @variable v2;
  #L34c650.  call `arraycopy`(v2, v3, v0, v1, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34c656.  v2:= length @variable v2;
  #L34c658.  v2:= v2 + v1 @kind int;
  #L34c65a.  v1:= length @variable v6;
  #L34c65c.  call `arraycopy`(v6, v3, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34c662.  return v0 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.o:()Ln/a/a/a/j;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L34c7fc.  v0:= v1.`n.a.a.a.p.c` @type ^`n.a.a.a.j` @kind object;
  #L34c800.  return v0 @kind object;
}
procedure `n.a.a.a.j` `p`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.p:()Ln/a/a/a/j;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L34c814.  v0:= v1.`n.a.a.a.p.d` @type ^`n.a.a.a.j` @kind object;
  #L34c818.  return v0 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.q:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c82c.  v0:= v1.`n.a.a.a.p.c` @type ^`n.a.a.a.j` @kind object;
  #L34c830.  return v0 @kind object;
}
procedure `n.a.a.a.j` `r`(`n.a.a.a.p` v1 @kind this) @signature `Ln/a/a/a/p;.r:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34c844.  v0:= v1.`n.a.a.a.p.d` @type ^`n.a.a.a.j` @kind object;
  #L34c848.  return v0 @kind object;
}
procedure `n.a.a.a.j` `s`(`n.a.a.a.p` v2 @kind this, `int` v3 ) @signature `Ln/a/a/a/p;.s:(I)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34c85c.  if v3 < 0 then goto L34c872;
  #L34c860.  v0:= v2.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34c864.  v1:= length @variable v0;
  #L34c866.  if v3 < v1 then goto L34c86c;
  #L34c86a.  goto L34c872;
  #L34c86c.  v3:= v0[v3] @kind object;
  #L34c870.  goto L34c874;
  #L34c872.  v3:= 0I;
  #L34c874.  return v3 @kind object;
}
procedure `boolean` `t`(`n.a.a.a.p` v3 @kind this) @signature `Ln/a/a/a/p;.t:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34c48c.  v0:= v3.`n.a.a.a.p.c` @type ^`n.a.a.a.j` @kind object;
  #L34c490.  v1:= 0I;
  #L34c492.  if v0 == 0 then goto L34c4b8;
  #L34c496.  v0:= v3.`n.a.a.a.p.d` @type ^`n.a.a.a.j` @kind object;
  #L34c49a.  if v0 == 0 then goto L34c4b8;
  #L34c49e.  v0:= v3.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34c4a2.  v2:= length @variable v0;
  #L34c4a4.  if v2 <= 0 then goto L34c4ba;
  #L34c4a8.  v0:= v0[v1] @kind object;
  #L34c4ac.  call temp:= `i`(v0) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L34c4b2.  v0:= temp;
  #L34c4b4.  if v0 == 0 then goto L34c4ba;
  #L34c4b8.  v1:= 1I;
  #L34c4ba.  return v1;
}
procedure `java.lang.String` `toString`(`n.a.a.a.p` v4 @kind this) @signature `Ln/a/a/a/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34c70c.  call temp:= `t`(v4) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c712.  v0:= temp;
  #L34c714.  if v0 == 0 then goto L34c71e;
  #L34c718.  v0:= "INF" @kind object;
  #L34c71c.  return v0 @kind object;
  #L34c71e.  v0:= new `java.lang.StringBuffer`;
  #L34c722.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L34c728.  v1:= 40I;
  #L34c72c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c732.  call temp:= `o`(v4) @signature `Ln/a/a/a/p;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34c738.  v1:= temp @kind object;
  #L34c73a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c740.  v1:= 44I;
  #L34c744.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c74a.  call temp:= `p`(v4) @signature `Ln/a/a/a/p;.p:()Ln/a/a/a/j;` @kind virtual;
  #L34c750.  v2:= temp @kind object;
  #L34c752.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c758.  v2:= 0I;
  #L34c75a.  v3:= v4.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34c75e.  v3:= length @variable v3;
  #L34c760.  if v2 >= v3 then goto L34c77e;
  #L34c764.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c76a.  v3:= v4.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34c76e.  v3:= v3[v2] @kind object;
  #L34c772.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c778.  v2:= v2 + 1;
  #L34c77c.  goto L34c75a;
  #L34c77e.  v1:= 41I;
  #L34c782.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L34c788.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L34c78e.  v0:= temp @kind object;
  #L34c790.  return v0 @kind object;
}
procedure `boolean` `u`(`n.a.a.a.p` v3 @kind this) @signature `Ln/a/a/a/p;.u:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34c4cc.  call temp:= `j`(v3) @signature `Ln/a/a/a/p;.j:()I` @kind virtual;
  #L34c4d2.  v0:= temp;
  #L34c4d4.  v1:= 0I;
  #L34c4d6.  if v0 == 0 then goto L34c500;
  #L34c4da.  v2:= 5I;
  #L34c4dc.  if v0 == v2 then goto L34c500;
  #L34c4e0.  call temp:= `t`(v3) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c4e6.  v0:= temp;
  #L34c4e8.  if v0 != 0 then goto L34c500;
  #L34c4ec.  v0:= v3.`n.a.a.a.p.e` @type ^`n.a.a.a.j`[] @kind object;
  #L34c4f0.  v0:= v0[v1] @kind object;
  #L34c4f4.  call temp:= `h`(v0) @signature `Ln/a/a/a/j;.h:()Z` @kind virtual;
  #L34c4fa.  v0:= temp;
  #L34c4fc.  if v0 == 0 then goto L34c502;
  #L34c500.  v1:= 1I;
  #L34c502.  return v1;
}
procedure `boolean` `v`(`n.a.a.a.p` v3 @kind this) @signature `Ln/a/a/a/p;.v:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34c514.  call temp:= `t`(v3) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c51a.  v0:= temp;
  #L34c51c.  v1:= 1I;
  #L34c51e.  if v0 == 0 then goto L34c524;
  #L34c522.  return v1;
  #L34c524.  call temp:= `i`(v3) @signature `Ln/a/a/a/p;.i:()Ln/a/a/a/f;` @kind virtual;
  #L34c52a.  v0:= temp @kind object;
  #L34c52c.  if v0 == 0 then goto L34c54e;
  #L34c530.  call temp:= `A`(v3) @signature `Ln/a/a/a/p;.A:()Z` @kind virtual;
  #L34c536.  v0:= temp;
  #L34c538.  v2:= 0I;
  #L34c53a.  if v0 != 0 then goto L34c540;
  #L34c53e.  return v2;
  #L34c540.  call temp:= `z`(v3) @signature `Ln/a/a/a/p;.z:()Z` @kind virtual;
  #L34c546.  v0:= temp;
  #L34c548.  if v0 != 0 then goto L34c54e;
  #L34c54c.  return v2;
  #L34c54e.  return v1;
}
procedure `n.a.a.a.p` `w`() @signature `Ln/a/a/a/p;.w:()Ln/a/a/a/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.p` `x`(`n.a.a.a.p` v2 @kind this) @signature `Ln/a/a/a/p;.x:()Ln/a/a/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34c994.  call temp:= `t`(v2) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c99a.  v0:= temp;
  #L34c99c.  if v0 == 0 then goto L34c9a2;
  #L34c9a0.  return v2 @kind object;
  #L34c9a2.  call temp:= `j`(v2) @signature `Ln/a/a/a/p;.j:()I` @kind virtual;
  #L34c9a8.  v0:= temp;
  #L34c9aa.  if v0 == 0 then goto L34c9de;
  #L34c9ae.  v1:= 5I;
  #L34c9b0.  if v0 == v1 then goto L34c9de;
  #L34c9b4.  v0:= 0I;
  #L34c9b6.  call temp:= `s`(v2, v0) @signature `Ln/a/a/a/p;.s:(I)Ln/a/a/a/j;` @kind virtual;
  #L34c9bc.  v0:= temp @kind object;
  #L34c9be.  call temp:= `h`(v0) @signature `Ln/a/a/a/j;.h:()Z` @kind virtual;
  #L34c9c4.  v1:= temp;
  #L34c9c6.  if v1 == 0 then goto L34c9cc;
  #L34c9ca.  return v2 @kind object;
  #L34c9cc.  call temp:= `g`(v0) @signature `Ln/a/a/a/j;.g:()Ln/a/a/a/j;` @kind virtual;
  #L34c9d2.  v0:= temp @kind object;
  #L34c9d4.  call temp:= `y`(v2, v0) @signature `Ln/a/a/a/p;.y:(Ln/a/a/a/j;)Ln/a/a/a/p;` @kind virtual;
  #L34c9da.  v0:= temp @kind object;
  #L34c9dc.  return v0 @kind object;
  #L34c9de.  return v2 @kind object;
}
procedure `n.a.a.a.p` `y`(`n.a.a.a.p` v2 @kind this, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/p;.y:(Ln/a/a/a/j;)Ln/a/a/a/p;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L34c9f0.  call temp:= `j`(v2) @signature `Ln/a/a/a/p;.j:()I` @kind virtual;
  #L34c9f6.  v0:= temp;
  #L34c9f8.  v1:= 1I;
  #L34c9fa.  if v0 == v1 then goto L34ca42;
  #L34c9fe.  v1:= 2I;
  #L34ca00.  if v0 == v1 then goto L34ca28;
  #L34ca04.  v1:= 3I;
  #L34ca06.  if v0 == v1 then goto L34ca28;
  #L34ca0a.  v1:= 4I;
  #L34ca0c.  if v0 == v1 then goto L34ca28;
  #L34ca10.  v1:= 6I;
  #L34ca12.  if v0 != v1 then goto L34ca18;
  #L34ca16.  goto L34ca42;
  #L34ca18.  v3:= new `java.lang.IllegalStateException`;
  #L34ca1c.  v0:= "not a projective coordinate system" @kind object;
  #L34ca20.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34ca26.  throw v3;
  #L34ca28.  call temp:= `o`(v3) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34ca2e.  v0:= temp @kind object;
  #L34ca30.  call temp:= `j`(v0, v3) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34ca36.  v3:= temp @kind object;
  #L34ca38.  call temp:= `c`(v2, v0, v3) @signature `Ln/a/a/a/p;.c:(Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/p;` @kind virtual;
  #L34ca3e.  v3:= temp @kind object;
  #L34ca40.  return v3 @kind object;
  #L34ca42.  call temp:= `c`(v2, v3, v3) @signature `Ln/a/a/a/p;.c:(Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/p;` @kind virtual;
  #L34ca48.  v3:= temp @kind object;
  #L34ca4a.  return v3 @kind object;
}
procedure `boolean` `z`(`n.a.a.a.p` v2 @kind this) @signature `Ln/a/a/a/p;.z:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L34c560.  v0:= v2.`n.a.a.a.p.b` @type ^`n.a.a.a.f` @kind object;
  #L34c564.  call temp:= `m`(v0) @signature `Ln/a/a/a/f;.m:()Ljava/math/BigInteger;` @kind virtual;
  #L34c56a.  v0:= temp @kind object;
  #L34c56c.  if v0 == 0 then goto L34c59a;
  #L34c570.  v1:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34c574.  call temp:= `equals`(v0, v1) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34c57a.  v1:= temp;
  #L34c57c.  if v1 != 0 then goto L34c59a;
  #L34c580.  call temp:= `d`(v2, v0) @signature `Ln/a/a/a/a;.d:(Ln/a/a/a/p;Ljava/math/BigInteger;)Ln/a/a/a/p;` @kind static;
  #L34c586.  v0:= temp @kind object;
  #L34c588.  call temp:= `t`(v0) @signature `Ln/a/a/a/p;.t:()Z` @kind virtual;
  #L34c58e.  v0:= temp;
  #L34c590.  if v0 != 0 then goto L34c596;
  #L34c594.  goto L34c59a;
  #L34c596.  v0:= 0I;
  #L34c598.  goto L34c59c;
  #L34c59a.  v0:= 1I;
  #L34c59c.  return v0;
}
