record `n.a.a.a.i` @kind class @AccessFlag PUBLIC extends `n.a.a.a.j` @kind class {
  `java.math.BigInteger` `n.a.a.a.i.f` @AccessFlag ;
  `java.math.BigInteger` `n.a.a.a.i.g` @AccessFlag ;
  `java.math.BigInteger` `n.a.a.a.i.h` @AccessFlag ;
}
procedure `void` `<init>`(`n.a.a.a.i` v1 @kind this, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L34a7bc.  call temp:= `t`(v2) @signature `Ln/a/a/a/i;.t:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind static;
  #L34a7c2.  v0:= temp @kind object;
  #L34a7c4.  call `<init>`(v1, v2, v0, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a7ca.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.i` v1 @kind this, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L34a7dc.  call `<init>`(v1) @signature `Ln/a/a/a/j;.<init>:()V` @kind direct;
  #L34a7e2.  if v4 == 0 then goto L34a80c;
  #L34a7e6.  call temp:= `signum`(v4) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34a7ec.  v0:= temp;
  #L34a7ee.  if v0 < 0 then goto L34a80c;
  #L34a7f2.  call temp:= `compareTo`(v4, v2) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L34a7f8.  v0:= temp;
  #L34a7fa.  if v0 >= 0 then goto L34a80c;
  #L34a7fe.  v1.`n.a.a.a.i.f` @type ^`java.math.BigInteger` := v2 @kind object;
  #L34a802.  v1.`n.a.a.a.i.g` @type ^`java.math.BigInteger` := v3 @kind object;
  #L34a806.  v1.`n.a.a.a.i.h` @type ^`java.math.BigInteger` := v4 @kind object;
  #L34a80a.  return @kind void;
  #L34a80c.  v2:= new `java.lang.IllegalArgumentException`;
  #L34a810.  v3:= "x value invalid in Fp field element" @kind object;
  #L34a814.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34a81a.  throw v2;
}
procedure `java.math.BigInteger` `t`(`java.math.BigInteger` v6 @kind object) @signature `Ln/a/a/a/i;.t:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L349df8.  call temp:= `bitLength`(v6) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L349dfe.  v0:= temp;
  #L349e00.  v1:= 96I;
  #L349e04.  if v0 < v1 then goto L349e3e;
  #L349e08.  v1:= v0 + -64;
  #L349e0c.  call temp:= `shiftRight`(v6, v1) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349e12.  v1:= temp @kind object;
  #L349e14.  call temp:= `longValue`(v1) @signature `Ljava/math/BigInteger;.longValue:()J` @kind virtual;
  #L349e1a.  v1:= temp @kind wide;
  #L349e1c.  v3:= -1L;
  #L349e20.  v5:= lcmp(v1, v3);
  #L349e24.  if v5 != 0 then goto L349e3e;
  #L349e28.  v1:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L349e2c.  call temp:= `shiftLeft`(v1, v0) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349e32.  v0:= temp @kind object;
  #L349e34.  call temp:= `subtract`(v0, v6) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349e3a.  v6:= temp @kind object;
  #L349e3c.  return v6 @kind object;
  #L349e3e.  v6:= 0I;
  #L349e40.  return v6 @kind object;
}
procedure `n.a.a.a.j` `u`(`n.a.a.a.i` v1 @kind this, `n.a.a.a.j` v2 @kind object) @signature `Ln/a/a/a/i;.u:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L34a2bc.  call temp:= `o`(v2) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34a2c2.  v0:= temp @kind object;
  #L34a2c4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a2ca.  v0:= temp;
  #L34a2cc.  if v0 == 0 then goto L34a2d2;
  #L34a2d0.  goto L34a2d4;
  #L34a2d2.  v2:= 0I;
  #L34a2d4.  return v2 @kind object;
}
procedure `java.math.BigInteger`[] `v`(`n.a.a.a.i` v9 @kind this, `java.math.BigInteger` v10 @kind object, `java.math.BigInteger` v11 @kind object, `java.math.BigInteger` v12 @kind object) @signature `Ln/a/a/a/i;.v:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L34a098.  call temp:= `bitLength`(v12) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L34a09e.  v0:= temp;
  #L34a0a0.  call temp:= `getLowestSetBit`(v12) @signature `Ljava/math/BigInteger;.getLowestSetBit:()I` @kind virtual;
  #L34a0a6.  v1:= temp;
  #L34a0a8.  v2:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a0ac.  v3:= `@@n.a.a.a.b.c` @type ^`java.math.BigInteger` @kind object;
  #L34a0b0.  v4:= 1I;
  #L34a0b2.  v0:= v0 - v4 @kind int;
  #L34a0b4.  v7:= v10 @kind object;
  #L34a0b6.  v5:= v2 @kind object;
  #L34a0b8.  v6:= v3 @kind object;
  #L34a0ba.  v3:= v5 @kind object;
  #L34a0bc.  v8:= v1 + 1;
  #L34a0c0.  if v0 < v8 then goto L34a18e;
  #L34a0c4.  call temp:= `A`(v9, v2, v3) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0ca.  v2:= temp @kind object;
  #L34a0cc.  call temp:= `testBit`(v12, v0) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L34a0d2.  v3:= temp;
  #L34a0d4.  if v3 == 0 then goto L34a12a;
  #L34a0d8.  call temp:= `A`(v9, v2, v11) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0de.  v3:= temp @kind object;
  #L34a0e0.  call temp:= `A`(v9, v5, v7) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0e6.  v5:= temp @kind object;
  #L34a0e8.  call temp:= `multiply`(v7, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0ee.  v6:= temp @kind object;
  #L34a0f0.  call temp:= `multiply`(v10, v2) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0f6.  v8:= temp @kind object;
  #L34a0f8.  call temp:= `subtract`(v6, v8) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a0fe.  v6:= temp @kind object;
  #L34a100.  call temp:= `B`(v9, v6) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a106.  v6:= temp @kind object;
  #L34a108.  call temp:= `multiply`(v7, v7) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a10e.  v7:= temp @kind object;
  #L34a110.  call temp:= `shiftLeft`(v3, v4) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a116.  v8:= temp @kind object;
  #L34a118.  call temp:= `subtract`(v7, v8) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a11e.  v7:= temp @kind object;
  #L34a120.  call temp:= `B`(v9, v7) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a126.  v7:= temp @kind object;
  #L34a128.  goto L34a188;
  #L34a12a.  call temp:= `multiply`(v5, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a130.  v3:= temp @kind object;
  #L34a132.  call temp:= `subtract`(v3, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a138.  v3:= temp @kind object;
  #L34a13a.  call temp:= `B`(v9, v3) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a140.  v3:= temp @kind object;
  #L34a142.  call temp:= `multiply`(v7, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a148.  v5:= temp @kind object;
  #L34a14a.  call temp:= `multiply`(v10, v2) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a150.  v7:= temp @kind object;
  #L34a152.  call temp:= `subtract`(v5, v7) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a158.  v5:= temp @kind object;
  #L34a15a.  call temp:= `B`(v9, v5) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a160.  v5:= temp @kind object;
  #L34a162.  call temp:= `multiply`(v6, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a168.  v6:= temp @kind object;
  #L34a16a.  call temp:= `shiftLeft`(v2, v4) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a170.  v7:= temp @kind object;
  #L34a172.  call temp:= `subtract`(v6, v7) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a178.  v6:= temp @kind object;
  #L34a17a.  call temp:= `B`(v9, v6) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a180.  v6:= temp @kind object;
  #L34a182.  v7:= v5 @kind object;
  #L34a184.  v5:= v3 @kind object;
  #L34a186.  v3:= v2 @kind object;
  #L34a188.  v0:= v0 + -1;
  #L34a18c.  goto L34a0bc;
  #L34a18e.  call temp:= `A`(v9, v2, v3) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a194.  v12:= temp @kind object;
  #L34a196.  call temp:= `A`(v9, v12, v11) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a19c.  v11:= temp @kind object;
  #L34a19e.  call temp:= `multiply`(v5, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1a4.  v0:= temp @kind object;
  #L34a1a6.  call temp:= `subtract`(v0, v12) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1ac.  v0:= temp @kind object;
  #L34a1ae.  call temp:= `B`(v9, v0) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1b4.  v0:= temp @kind object;
  #L34a1b6.  call temp:= `multiply`(v7, v6) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1bc.  v2:= temp @kind object;
  #L34a1be.  call temp:= `multiply`(v10, v12) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1c4.  v10:= temp @kind object;
  #L34a1c6.  call temp:= `subtract`(v2, v10) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1cc.  v10:= temp @kind object;
  #L34a1ce.  call temp:= `B`(v9, v10) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1d4.  v10:= temp @kind object;
  #L34a1d6.  call temp:= `A`(v9, v12, v11) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1dc.  v11:= temp @kind object;
  #L34a1de.  v12:= 1I;
  #L34a1e0.  if v12 > v1 then goto L34a21a;
  #L34a1e4.  call temp:= `A`(v9, v0, v10) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1ea.  v0:= temp @kind object;
  #L34a1ec.  call temp:= `multiply`(v10, v10) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a1f2.  v10:= temp @kind object;
  #L34a1f4.  call temp:= `shiftLeft`(v11, v4) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a1fa.  v2:= temp @kind object;
  #L34a1fc.  call temp:= `subtract`(v10, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a202.  v10:= temp @kind object;
  #L34a204.  call temp:= `B`(v9, v10) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a20a.  v10:= temp @kind object;
  #L34a20c.  call temp:= `A`(v9, v11, v11) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a212.  v11:= temp @kind object;
  #L34a214.  v12:= v12 + 1;
  #L34a218.  goto L34a1e0;
  #L34a21a.  v11:= 2I;
  #L34a21c.  v11:= new `java.math.BigInteger`[v11];
  #L34a220.  v12:= 0I;
  #L34a222.  v11[v12]:= v0 @kind object;
  #L34a226.  v11[v4]:= v10 @kind object;
  #L34a22a.  return v11 @kind object;
}
procedure `java.math.BigInteger` `A`(`n.a.a.a.i` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;

  #L349f48.  call temp:= `multiply`(v1, v2) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349f4e.  v1:= temp @kind object;
  #L349f50.  call temp:= `B`(v0, v1) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349f56.  v1:= temp @kind object;
  #L349f58.  return v1 @kind object;
}
procedure `java.math.BigInteger` `B`(`n.a.a.a.i` v5 @kind this, `java.math.BigInteger` v6 @kind object) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L349f6c.  v0:= v5.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L349f70.  if v0 == 0 then goto L34a02c;
  #L349f74.  call temp:= `signum`(v6) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L349f7a.  v0:= temp;
  #L349f7c.  if v0 >= 0 then goto L349f84;
  #L349f80.  v0:= 1I;
  #L349f82.  goto L349f86;
  #L349f84.  v0:= 0I;
  #L349f86.  if v0 == 0 then goto L349f92;
  #L349f8a.  call temp:= `abs`(v6) @signature `Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;` @kind virtual;
  #L349f90.  v6:= temp @kind object;
  #L349f92.  v1:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349f96.  call temp:= `bitLength`(v1) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L349f9c.  v1:= temp;
  #L349f9e.  v2:= v5.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L349fa2.  v3:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L349fa6.  call temp:= `equals`(v2, v3) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L349fac.  v2:= temp;
  #L349fae.  call temp:= `bitLength`(v6) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L349fb4.  v3:= temp;
  #L349fb6.  v4:= v1 + 1;
  #L349fba.  if v3 <= v4 then goto L349ff0;
  #L349fbe.  call temp:= `shiftRight`(v6, v1) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349fc4.  v3:= temp @kind object;
  #L349fc6.  call temp:= `shiftLeft`(v3, v1) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349fcc.  v4:= temp @kind object;
  #L349fce.  call temp:= `subtract`(v6, v4) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349fd4.  v6:= temp @kind object;
  #L349fd6.  if v2 != 0 then goto L349fe6;
  #L349fda.  v4:= v5.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L349fde.  call temp:= `multiply`(v3, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349fe4.  v3:= temp @kind object;
  #L349fe6.  call temp:= `add`(v3, v6) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349fec.  v6:= temp @kind object;
  #L349fee.  goto L349fae;
  #L349ff0.  v1:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349ff4.  call temp:= `compareTo`(v6, v1) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L349ffa.  v1:= temp;
  #L349ffc.  if v1 < 0 then goto L34a00e;
  #L34a000.  v1:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a004.  call temp:= `subtract`(v6, v1) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a00a.  v6:= temp @kind object;
  #L34a00c.  goto L349ff0;
  #L34a00e.  if v0 == 0 then goto L34a038;
  #L34a012.  call temp:= `signum`(v6) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34a018.  v0:= temp;
  #L34a01a.  if v0 == 0 then goto L34a038;
  #L34a01e.  v0:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a022.  call temp:= `subtract`(v0, v6) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a028.  v6:= temp @kind object;
  #L34a02a.  goto L34a038;
  #L34a02c.  v0:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a030.  call temp:= `mod`(v6, v0) @signature `Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a036.  v6:= temp @kind object;
  #L34a038.  return v6 @kind object;
}
procedure `java.math.BigInteger` `C`(`n.a.a.a.i` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/i;.C:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;

  #L34a04c.  call temp:= `subtract`(v1, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a052.  v1:= temp @kind object;
  #L34a054.  call temp:= `signum`(v1) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34a05a.  v2:= temp;
  #L34a05c.  if v2 >= 0 then goto L34a06c;
  #L34a060.  v2:= v0.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a064.  call temp:= `add`(v1, v2) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a06a.  v1:= temp @kind object;
  #L34a06c.  return v1 @kind object;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.i` v4 @kind this, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a23c.  v0:= new `n.a.a.a.i`;
  #L34a240.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a244.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a248.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a24c.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a252.  v5:= temp @kind object;
  #L34a254.  call temp:= `w`(v4, v3, v5) @signature `Ln/a/a/a/i;.w:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a25a.  v5:= temp @kind object;
  #L34a25c.  call `<init>`(v0, v1, v2, v5) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a262.  return v0 @kind object;
}
procedure `n.a.a.a.j` `b`(`n.a.a.a.i` v4 @kind this) @signature `Ln/a/a/a/i;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a274.  v0:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a278.  v1:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a27c.  call temp:= `add`(v0, v1) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a282.  v0:= temp @kind object;
  #L34a284.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a288.  call temp:= `compareTo`(v0, v1) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L34a28e.  v1:= temp;
  #L34a290.  if v1 != 0 then goto L34a298;
  #L34a294.  v0:= `@@n.a.a.a.b.a` @type ^`java.math.BigInteger` @kind object;
  #L34a298.  v1:= new `n.a.a.a.i`;
  #L34a29c.  v2:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a2a0.  v3:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a2a4.  call `<init>`(v1, v2, v3, v0) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a2aa.  return v1 @kind object;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.i` v4 @kind this, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a2e8.  v0:= new `n.a.a.a.i`;
  #L34a2ec.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a2f0.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a2f4.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a2f8.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a2fe.  v5:= temp @kind object;
  #L34a300.  call temp:= `z`(v4, v5) @signature `Ln/a/a/a/i;.z:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a306.  v5:= temp @kind object;
  #L34a308.  call temp:= `A`(v4, v3, v5) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a30e.  v5:= temp @kind object;
  #L34a310.  call `<init>`(v0, v1, v2, v5) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a316.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/a/a/a/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L349d54.  v0:= 1I;
  #L349d56.  if v5 != v4 then goto L349d5c;
  #L349d5a.  return v0;
  #L349d5c.  v1:= instanceof @variable v5 @type ^`n.a.a.a.i` @kind boolean;
  #L349d60.  v2:= 0I;
  #L349d62.  if v1 != 0 then goto L349d68;
  #L349d66.  return v2;
  #L349d68.  v5:= (`n.a.a.a.i`) v5 @kind object;
  #L349d6c.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349d70.  v3:= v5.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349d74.  call temp:= `equals`(v1, v3) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L349d7a.  v1:= temp;
  #L349d7c.  if v1 == 0 then goto L349d96;
  #L349d80.  v1:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L349d84.  v5:= v5.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L349d88.  call temp:= `equals`(v1, v5) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L349d8e.  v5:= temp;
  #L349d90.  if v5 == 0 then goto L349d96;
  #L349d94.  goto L349d98;
  #L349d96.  v0:= 0I;
  #L349d98.  return v0;
}
procedure `int` `f`(`n.a.a.a.i` v1 @kind this) @signature `Ln/a/a/a/i;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L349dac.  v0:= v1.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349db0.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L349db6.  v0:= temp;
  #L349db8.  return v0;
}
procedure `n.a.a.a.j` `g`(`n.a.a.a.i` v4 @kind this) @signature `Ln/a/a/a/i;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a328.  v0:= new `n.a.a.a.i`;
  #L34a32c.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a330.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a334.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a338.  call temp:= `z`(v4, v3) @signature `Ln/a/a/a/i;.z:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a33e.  v3:= temp @kind object;
  #L34a340.  call `<init>`(v0, v1, v2, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a346.  return v0 @kind object;
}
procedure `int` `hashCode`(`n.a.a.a.i` v2 @kind this) @signature `Ln/a/a/a/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L349dcc.  v0:= v2.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349dd0.  call temp:= `hashCode`(v0) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L349dd6.  v0:= temp;
  #L349dd8.  v1:= v2.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L349ddc.  call temp:= `hashCode`(v1) @signature `Ljava/math/BigInteger;.hashCode:()I` @kind virtual;
  #L349de2.  v1:= temp;
  #L349de4.  v0:= v0 ^~ v1 @kind int;
  #L349de6.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.i` v4 @kind this, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a358.  v0:= new `n.a.a.a.i`;
  #L34a35c.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a360.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a364.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a368.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a36e.  v5:= temp @kind object;
  #L34a370.  call temp:= `A`(v4, v3, v5) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a376.  v5:= temp @kind object;
  #L34a378.  call `<init>`(v0, v1, v2, v5) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a37e.  return v0 @kind object;
}
procedure `n.a.a.a.j` `k`(`n.a.a.a.i` v2 @kind this, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.k:(Ln/a/a/a/j;Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a390.  v0:= v2.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a394.  call temp:= `s`(v3) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a39a.  v3:= temp @kind object;
  #L34a39c.  call temp:= `s`(v4) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a3a2.  v4:= temp @kind object;
  #L34a3a4.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a3aa.  v5:= temp @kind object;
  #L34a3ac.  call temp:= `multiply`(v0, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a3b2.  v3:= temp @kind object;
  #L34a3b4.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a3ba.  v4:= temp @kind object;
  #L34a3bc.  v5:= new `n.a.a.a.i`;
  #L34a3c0.  v0:= v2.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a3c4.  v1:= v2.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a3c8.  call temp:= `subtract`(v3, v4) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a3ce.  v3:= temp @kind object;
  #L34a3d0.  call temp:= `B`(v2, v3) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a3d6.  v3:= temp @kind object;
  #L34a3d8.  call `<init>`(v5, v0, v1, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a3de.  return v5 @kind object;
}
procedure `n.a.a.a.j` `l`(`n.a.a.a.i` v2 @kind this, `n.a.a.a.j` v3 @kind object, `n.a.a.a.j` v4 @kind object, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.l:(Ln/a/a/a/j;Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a3f0.  v0:= v2.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a3f4.  call temp:= `s`(v3) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a3fa.  v3:= temp @kind object;
  #L34a3fc.  call temp:= `s`(v4) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a402.  v4:= temp @kind object;
  #L34a404.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a40a.  v5:= temp @kind object;
  #L34a40c.  call temp:= `multiply`(v0, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a412.  v3:= temp @kind object;
  #L34a414.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a41a.  v4:= temp @kind object;
  #L34a41c.  v5:= new `n.a.a.a.i`;
  #L34a420.  v0:= v2.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a424.  v1:= v2.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a428.  call temp:= `add`(v3, v4) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a42e.  v3:= temp @kind object;
  #L34a430.  call temp:= `B`(v2, v3) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a436.  v3:= temp @kind object;
  #L34a438.  call `<init>`(v5, v0, v1, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a43e.  return v5 @kind object;
}
procedure `n.a.a.a.j` `m`(`n.a.a.a.i` v4 @kind this) @signature `Ln/a/a/a/i;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a450.  v0:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a454.  call temp:= `signum`(v0) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34a45a.  v0:= temp;
  #L34a45c.  if v0 != 0 then goto L34a464;
  #L34a460.  v0:= v4 @kind object;
  #L34a462.  goto L34a482;
  #L34a464.  v0:= new `n.a.a.a.i`;
  #L34a468.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a46c.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a470.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a474.  call temp:= `subtract`(v1, v3) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a47a.  v3:= temp @kind object;
  #L34a47c.  call `<init>`(v0, v1, v2, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a482.  return v0 @kind object;
}
procedure `n.a.a.a.j` `n`(`n.a.a.a.i` v12 @kind this) @signature `Ln/a/a/a/i;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L34a494.  call temp:= `i`(v12) @signature `Ln/a/a/a/j;.i:()Z` @kind virtual;
  #L34a49a.  v0:= temp;
  #L34a49c.  if v0 != 0 then goto L34a6ea;
  #L34a4a0.  call temp:= `h`(v12) @signature `Ln/a/a/a/j;.h:()Z` @kind virtual;
  #L34a4a6.  v0:= temp;
  #L34a4a8.  if v0 == 0 then goto L34a4b0;
  #L34a4ac.  goto L34a6ea;
  #L34a4b0.  v0:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a4b4.  v1:= 0I;
  #L34a4b6.  call temp:= `testBit`(v0, v1) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L34a4bc.  v0:= temp;
  #L34a4be.  if v0 == 0 then goto L34a6da;
  #L34a4c2.  v0:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a4c6.  v2:= 1I;
  #L34a4c8.  call temp:= `testBit`(v0, v2) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L34a4ce.  v0:= temp;
  #L34a4d0.  v3:= 2I;
  #L34a4d2.  if v0 == 0 then goto L34a516;
  #L34a4d6.  v0:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a4da.  call temp:= `shiftRight`(v0, v3) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a4e0.  v0:= temp @kind object;
  #L34a4e2.  v1:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a4e6.  call temp:= `add`(v0, v1) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a4ec.  v0:= temp @kind object;
  #L34a4ee.  v1:= new `n.a.a.a.i`;
  #L34a4f2.  v2:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a4f6.  v3:= v12.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a4fa.  v4:= v12.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a4fe.  call temp:= `modPow`(v4, v0, v2) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a504.  v0:= temp @kind object;
  #L34a506.  call `<init>`(v1, v2, v3, v0) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a50c.  call temp:= `u`(v12, v1) @signature `Ln/a/a/a/i;.u:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind direct;
  #L34a512.  v0:= temp @kind object;
  #L34a514.  return v0 @kind object;
  #L34a516.  v0:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a51a.  call temp:= `testBit`(v0, v3) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L34a520.  v0:= temp;
  #L34a522.  if v0 == 0 then goto L34a5c4;
  #L34a526.  v0:= v12.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a52a.  v1:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a52e.  v2:= 3I;
  #L34a530.  call temp:= `shiftRight`(v1, v2) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a536.  v1:= temp @kind object;
  #L34a538.  v2:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a53c.  call temp:= `modPow`(v0, v1, v2) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a542.  v0:= temp @kind object;
  #L34a544.  v1:= v12.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a548.  call temp:= `A`(v12, v0, v1) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a54e.  v1:= temp @kind object;
  #L34a550.  call temp:= `A`(v12, v1, v0) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a556.  v0:= temp @kind object;
  #L34a558.  v2:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a55c.  call temp:= `equals`(v0, v2) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a562.  v0:= temp;
  #L34a564.  if v0 == 0 then goto L34a584;
  #L34a568.  v0:= new `n.a.a.a.i`;
  #L34a56c.  v2:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a570.  v3:= v12.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a574.  call `<init>`(v0, v2, v3, v1) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a57a.  call temp:= `u`(v12, v0) @signature `Ln/a/a/a/i;.u:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind direct;
  #L34a580.  v0:= temp @kind object;
  #L34a582.  return v0 @kind object;
  #L34a584.  v0:= `@@n.a.a.a.b.c` @type ^`java.math.BigInteger` @kind object;
  #L34a588.  v2:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a58c.  call temp:= `shiftRight`(v2, v3) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a592.  v2:= temp @kind object;
  #L34a594.  v3:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a598.  call temp:= `modPow`(v0, v2, v3) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a59e.  v0:= temp @kind object;
  #L34a5a0.  call temp:= `A`(v12, v1, v0) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a5a6.  v0:= temp @kind object;
  #L34a5a8.  v1:= new `n.a.a.a.i`;
  #L34a5ac.  v2:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a5b0.  v3:= v12.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a5b4.  call `<init>`(v1, v2, v3, v0) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a5ba.  call temp:= `u`(v12, v1) @signature `Ln/a/a/a/i;.u:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind direct;
  #L34a5c0.  v0:= temp @kind object;
  #L34a5c2.  return v0 @kind object;
  #L34a5c4.  v0:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a5c8.  call temp:= `shiftRight`(v0, v2) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L34a5ce.  v0:= temp @kind object;
  #L34a5d0.  v3:= v12.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a5d4.  v4:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a5d8.  call temp:= `modPow`(v3, v0, v4) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a5de.  v3:= temp @kind object;
  #L34a5e0.  v4:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a5e4.  call temp:= `equals`(v3, v4) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a5ea.  v3:= temp;
  #L34a5ec.  v5:= 0I;
  #L34a5ee.  if v3 != 0 then goto L34a5f4;
  #L34a5f2.  return v5 @kind object;
  #L34a5f4.  v3:= v12.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a5f8.  call temp:= `x`(v12, v3) @signature `Ln/a/a/a/i;.x:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a5fe.  v6:= temp @kind object;
  #L34a600.  call temp:= `x`(v12, v6) @signature `Ln/a/a/a/i;.x:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a606.  v6:= temp @kind object;
  #L34a608.  call temp:= `add`(v0, v4) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a60e.  v7:= temp @kind object;
  #L34a610.  v8:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a614.  call temp:= `subtract`(v8, v4) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a61a.  v4:= temp @kind object;
  #L34a61c.  v8:= new `java.util.Random`;
  #L34a620.  call `<init>`(v8) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L34a626.  v9:= new `java.math.BigInteger`;
  #L34a62a.  v10:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a62e.  call temp:= `bitLength`(v10) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L34a634.  v10:= temp;
  #L34a636.  call `<init>`(v9, v10, v8) @signature `Ljava/math/BigInteger;.<init>:(ILjava/util/Random;)V` @kind direct;
  #L34a63c.  v10:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a640.  call temp:= `compareTo`(v9, v10) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L34a646.  v10:= temp;
  #L34a648.  if v10 >= 0 then goto L34a626;
  #L34a64c.  call temp:= `multiply`(v9, v9) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a652.  v10:= temp @kind object;
  #L34a654.  call temp:= `subtract`(v10, v6) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a65a.  v10:= temp @kind object;
  #L34a65c.  call temp:= `B`(v12, v10) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a662.  v10:= temp @kind object;
  #L34a664.  v11:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a668.  call temp:= `modPow`(v10, v0, v11) @signature `Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a66e.  v10:= temp @kind object;
  #L34a670.  call temp:= `equals`(v10, v4) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a676.  v10:= temp;
  #L34a678.  if v10 == 0 then goto L34a626;
  #L34a67c.  call temp:= `v`(v12, v9, v3, v7) @signature `Ln/a/a/a/i;.v:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)[Ljava/math/BigInteger;` @kind direct;
  #L34a682.  v9:= temp @kind object;
  #L34a684.  v10:= v9[v1] @kind object;
  #L34a688.  v9:= v9[v2] @kind object;
  #L34a68c.  call temp:= `A`(v12, v9, v9) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a692.  v11:= temp @kind object;
  #L34a694.  call temp:= `equals`(v11, v6) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a69a.  v11:= temp;
  #L34a69c.  if v11 == 0 then goto L34a6bc;
  #L34a6a0.  v0:= new `n.a.a.a.i`;
  #L34a6a4.  v1:= v12.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a6a8.  v2:= v12.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a6ac.  call temp:= `y`(v12, v9) @signature `Ln/a/a/a/i;.y:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a6b2.  v3:= temp @kind object;
  #L34a6b4.  call `<init>`(v0, v1, v2, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a6ba.  return v0 @kind object;
  #L34a6bc.  v9:= `@@n.a.a.a.b.b` @type ^`java.math.BigInteger` @kind object;
  #L34a6c0.  call temp:= `equals`(v10, v9) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a6c6.  v9:= temp;
  #L34a6c8.  if v9 != 0 then goto L34a626;
  #L34a6cc.  call temp:= `equals`(v10, v4) @signature `Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34a6d2.  v9:= temp;
  #L34a6d4.  if v9 != 0 then goto L34a626;
  #L34a6d8.  return v5 @kind object;
  #L34a6da.  v0:= new `java.lang.RuntimeException`;
  #L34a6de.  v1:= "not done yet" @kind object;
  #L34a6e2.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34a6e8.  throw v0;
  #L34a6ea.  return v12 @kind object;
}
procedure `n.a.a.a.j` `o`(`n.a.a.a.i` v4 @kind this) @signature `Ln/a/a/a/i;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a6fc.  v0:= new `n.a.a.a.i`;
  #L34a700.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a704.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a708.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a70c.  call temp:= `A`(v4, v3, v3) @signature `Ln/a/a/a/i;.A:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a712.  v3:= temp @kind object;
  #L34a714.  call `<init>`(v0, v1, v2, v3) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a71a.  return v0 @kind object;
}
procedure `n.a.a.a.j` `p`(`n.a.a.a.i` v3 @kind this, `n.a.a.a.j` v4 @kind object, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.p:(Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34a72c.  v0:= v3.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a730.  call temp:= `s`(v4) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a736.  v4:= temp @kind object;
  #L34a738.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a73e.  v5:= temp @kind object;
  #L34a740.  call temp:= `multiply`(v0, v0) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a746.  v0:= temp @kind object;
  #L34a748.  call temp:= `multiply`(v4, v5) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a74e.  v4:= temp @kind object;
  #L34a750.  v5:= new `n.a.a.a.i`;
  #L34a754.  v1:= v3.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a758.  v2:= v3.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a75c.  call temp:= `add`(v0, v4) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a762.  v4:= temp @kind object;
  #L34a764.  call temp:= `B`(v3, v4) @signature `Ln/a/a/a/i;.B:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a76a.  v4:= temp @kind object;
  #L34a76c.  call `<init>`(v5, v1, v2, v4) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a772.  return v5 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.i` v4 @kind this, `n.a.a.a.j` v5 @kind object) @signature `Ln/a/a/a/i;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34a784.  v0:= new `n.a.a.a.i`;
  #L34a788.  v1:= v4.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L34a78c.  v2:= v4.`n.a.a.a.i.g` @type ^`java.math.BigInteger` @kind object;
  #L34a790.  v3:= v4.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a794.  call temp:= `s`(v5) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a79a.  v5:= temp @kind object;
  #L34a79c.  call temp:= `C`(v4, v3, v5) @signature `Ln/a/a/a/i;.C:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L34a7a2.  v5:= temp @kind object;
  #L34a7a4.  call `<init>`(v0, v1, v2, v5) @signature `Ln/a/a/a/i;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L34a7aa.  return v0 @kind object;
}
procedure `java.math.BigInteger` `s`(`n.a.a.a.i` v1 @kind this) @signature `Ln/a/a/a/i;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34a080.  v0:= v1.`n.a.a.a.i.h` @type ^`java.math.BigInteger` @kind object;
  #L34a084.  return v0 @kind object;
}
procedure `java.math.BigInteger` `w`(`n.a.a.a.i` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/i;.w:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;

  #L349e54.  call temp:= `add`(v1, v2) @signature `Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349e5a.  v1:= temp @kind object;
  #L349e5c.  v2:= v0.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349e60.  call temp:= `compareTo`(v1, v2) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L349e66.  v2:= temp;
  #L349e68.  if v2 < 0 then goto L349e78;
  #L349e6c.  v2:= v0.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349e70.  call temp:= `subtract`(v1, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349e76.  v1:= temp @kind object;
  #L349e78.  return v1 @kind object;
}
procedure `java.math.BigInteger` `x`(`n.a.a.a.i` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/i;.x:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L349e8c.  v0:= 1I;
  #L349e8e.  call temp:= `shiftLeft`(v2, v0) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349e94.  v2:= temp @kind object;
  #L349e96.  v0:= v1.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349e9a.  call temp:= `compareTo`(v2, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L349ea0.  v0:= temp;
  #L349ea2.  if v0 < 0 then goto L349eb2;
  #L349ea6.  v0:= v1.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349eaa.  call temp:= `subtract`(v2, v0) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349eb0.  v2:= temp @kind object;
  #L349eb2.  return v2 @kind object;
}
procedure `java.math.BigInteger` `y`(`n.a.a.a.i` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Ln/a/a/a/i;.y:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L349ec4.  v0:= 0I;
  #L349ec6.  call temp:= `testBit`(v2, v0) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L349ecc.  v0:= temp;
  #L349ece.  if v0 == 0 then goto L349ede;
  #L349ed2.  v0:= v1.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349ed6.  call temp:= `subtract`(v0, v2) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L349edc.  v2:= temp @kind object;
  #L349ede.  v0:= 1I;
  #L349ee0.  call temp:= `shiftRight`(v2, v0) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L349ee6.  v2:= temp @kind object;
  #L349ee8.  return v2 @kind object;
}
procedure `java.math.BigInteger` `z`(`n.a.a.a.i` v3 @kind this, `java.math.BigInteger` v4 @kind object) @signature `Ln/a/a/a/i;.z:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L349efc.  call temp:= `f`(v3) @signature `Ln/a/a/a/i;.f:()I` @kind virtual;
  #L349f02.  v0:= temp;
  #L349f04.  v1:= v0 + 31;
  #L349f08.  v1:= v1 ^> 5;
  #L349f0c.  v2:= v3.`n.a.a.a.i.f` @type ^`java.math.BigInteger` @kind object;
  #L349f10.  call temp:= `m`(v0, v2) @signature `Ln/a/a/c/g;.m:(ILjava/math/BigInteger;)[I` @kind static;
  #L349f16.  v2:= temp @kind object;
  #L349f18.  call temp:= `m`(v0, v4) @signature `Ln/a/a/c/g;.m:(ILjava/math/BigInteger;)[I` @kind static;
  #L349f1e.  v4:= temp @kind object;
  #L349f20.  call temp:= `i`(v1) @signature `Ln/a/a/c/g;.i:(I)[I` @kind static;
  #L349f26.  v0:= temp @kind object;
  #L349f28.  call `d`(v2, v4, v0) @signature `Ln/a/a/c/a;.d:([I[I[I)V` @kind static;
  #L349f2e.  call temp:= `J`(v1, v0) @signature `Ln/a/a/c/g;.J:(I[I)Ljava/math/BigInteger;` @kind static;
  #L349f34.  v4:= temp @kind object;
  #L349f36.  return v4 @kind object;
}
