record `n.a.a.a.r` @kind class @AccessFlag  {
  `long`[] `n.a.a.a.r.g` @AccessFlag PRIVATE;
}
global `int`[] `@@n.a.a.a.r.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.a.a.a.r.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.a.a.a.r.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.a.a.a.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@n.a.a.a.r.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@n.a.a.a.r.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/a/a/a/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L34d8fc.  v0:= 256I;
  #L34d900.  v1:= new `int`[v0];
  #L34d904.  goto L34d960;
  #L34d90a.  `@@n.a.a.a.r.a` @type ^`int`[] := v1 @kind object;
  #L34d90e.  v1:= 128I;
  #L34d912.  v2:= new `int`[v1];
  #L34d916.  goto L34dd68;
  #L34d91c.  `@@n.a.a.a.r.b` @type ^`int`[] := v2 @kind object;
  #L34d920.  v2:= new `int`[v0];
  #L34d924.  goto L34df70;
  #L34d92a.  `@@n.a.a.a.r.c` @type ^`int`[] := v2 @kind object;
  #L34d92e.  v1:= new `int`[v1];
  #L34d932.  goto L34e378;
  #L34d938.  `@@n.a.a.a.r.d` @type ^`int`[] := v1 @kind object;
  #L34d93c.  v1:= 512I;
  #L34d940.  v1:= new `long`[v1];
  #L34d944.  goto L34e580;
  #L34d94a.  `@@n.a.a.a.r.e` @type ^`long`[] := v1 @kind object;
  #L34d94e.  v0:= new `byte`[v0];
  #L34d952.  goto L34f588;
  #L34d958.  `@@n.a.a.a.r.f` @type ^`byte`[] := v0 @kind object;
  #L34d95c.  return @kind void;
  #L34d95e.  
  #L34d960.  v1:= (0I, 1I, 4I, 5I, 16I, 17I, 20I, 21I, 64I, 65I, 68I, 69I, 80I, 81I, 84I, 85I, 256I, 257I, 260I, 261I, 272I, 273I, 276I, 277I, 320I, 321I, 324I, 325I, 336I, 337I, 340I, 341I, 1024I, 1025I, 1028I, 1029I, 1040I, 1041I, 1044I, 1045I, 1088I, 1089I, 1092I, 1093I, 1104I, 1105I, 1108I, 1109I, 1280I, 1281I, 1284I, 1285I, 1296I, 1297I, 1300I, 1301I, 1344I, 1345I, 1348I, 1349I, 1360I, 1361I, 1364I, 1365I, 4096I, 4097I, 4100I, 4101I, 4112I, 4113I, 4116I, 4117I, 4160I, 4161I, 4164I, 4165I, 4176I, 4177I, 4180I, 4181I, 4352I, 4353I, 4356I, 4357I, 4368I, 4369I, 4372I, 4373I, 4416I, 4417I, 4420I, 4421I, 4432I, 4433I, 4436I, 4437I, 5120I, 5121I, 5124I, 5125I, 5136I, 5137I, 5140I, 5141I, 5184I, 5185I, 5188I, 5189I, 5200I, 5201I, 5204I, 5205I, 5376I, 5377I, 5380I, 5381I, 5392I, 5393I, 5396I, 5397I, 5440I, 5441I, 5444I, 5445I, 5456I, 5457I, 5460I, 5461I, 16384I, 16385I, 16388I, 16389I, 16400I, 16401I, 16404I, 16405I, 16448I, 16449I, 16452I, 16453I, 16464I, 16465I, 16468I, 16469I, 16640I, 16641I, 16644I, 16645I, 16656I, 16657I, 16660I, 16661I, 16704I, 16705I, 16708I, 16709I, 16720I, 16721I, 16724I, 16725I, 17408I, 17409I, 17412I, 17413I, 17424I, 17425I, 17428I, 17429I, 17472I, 17473I, 17476I, 17477I, 17488I, 17489I, 17492I, 17493I, 17664I, 17665I, 17668I, 17669I, 17680I, 17681I, 17684I, 17685I, 17728I, 17729I, 17732I, 17733I, 17744I, 17745I, 17748I, 17749I, 20480I, 20481I, 20484I, 20485I, 20496I, 20497I, 20500I, 20501I, 20544I, 20545I, 20548I, 20549I, 20560I, 20561I, 20564I, 20565I, 20736I, 20737I, 20740I, 20741I, 20752I, 20753I, 20756I, 20757I, 20800I, 20801I, 20804I, 20805I, 20816I, 20817I, 20820I, 20821I, 21504I, 21505I, 21508I, 21509I, 21520I, 21521I, 21524I, 21525I, 21568I, 21569I, 21572I, 21573I, 21584I, 21585I, 21588I, 21589I, 21760I, 21761I, 21764I, 21765I, 21776I, 21777I, 21780I, 21781I, 21824I, 21825I, 21828I, 21829I, 21840I, 21841I, 21844I, 21845I) @kind object;
  #L34dd67.  goto L34d90a;
  #L34dd68.  v2:= (0I, 1I, 8I, 9I, 64I, 65I, 72I, 73I, 512I, 513I, 520I, 521I, 576I, 577I, 584I, 585I, 4096I, 4097I, 4104I, 4105I, 4160I, 4161I, 4168I, 4169I, 4608I, 4609I, 4616I, 4617I, 4672I, 4673I, 4680I, 4681I, 32768I, 32769I, 32776I, 32777I, 32832I, 32833I, 32840I, 32841I, 33280I, 33281I, 33288I, 33289I, 33344I, 33345I, 33352I, 33353I, 36864I, 36865I, 36872I, 36873I, 36928I, 36929I, 36936I, 36937I, 37376I, 37377I, 37384I, 37385I, 37440I, 37441I, 37448I, 37449I, 262144I, 262145I, 262152I, 262153I, 262208I, 262209I, 262216I, 262217I, 262656I, 262657I, 262664I, 262665I, 262720I, 262721I, 262728I, 262729I, 266240I, 266241I, 266248I, 266249I, 266304I, 266305I, 266312I, 266313I, 266752I, 266753I, 266760I, 266761I, 266816I, 266817I, 266824I, 266825I, 294912I, 294913I, 294920I, 294921I, 294976I, 294977I, 294984I, 294985I, 295424I, 295425I, 295432I, 295433I, 295488I, 295489I, 295496I, 295497I, 299008I, 299009I, 299016I, 299017I, 299072I, 299073I, 299080I, 299081I, 299520I, 299521I, 299528I, 299529I, 299584I, 299585I, 299592I, 299593I) @kind object;
  #L34df6f.  goto L34d91c;
  #L34df70.  v2:= (0I, 1I, 16I, 17I, 256I, 257I, 272I, 273I, 4096I, 4097I, 4112I, 4113I, 4352I, 4353I, 4368I, 4369I, 65536I, 65537I, 65552I, 65553I, 65792I, 65793I, 65808I, 65809I, 69632I, 69633I, 69648I, 69649I, 69888I, 69889I, 69904I, 69905I, 1048576I, 1048577I, 1048592I, 1048593I, 1048832I, 1048833I, 1048848I, 1048849I, 1052672I, 1052673I, 1052688I, 1052689I, 1052928I, 1052929I, 1052944I, 1052945I, 1114112I, 1114113I, 1114128I, 1114129I, 1114368I, 1114369I, 1114384I, 1114385I, 1118208I, 1118209I, 1118224I, 1118225I, 1118464I, 1118465I, 1118480I, 1118481I, 16777216I, 16777217I, 16777232I, 16777233I, 16777472I, 16777473I, 16777488I, 16777489I, 16781312I, 16781313I, 16781328I, 16781329I, 16781568I, 16781569I, 16781584I, 16781585I, 16842752I, 16842753I, 16842768I, 16842769I, 16843008I, 16843009I, 16843024I, 16843025I, 16846848I, 16846849I, 16846864I, 16846865I, 16847104I, 16847105I, 16847120I, 16847121I, 17825792I, 17825793I, 17825808I, 17825809I, 17826048I, 17826049I, 17826064I, 17826065I, 17829888I, 17829889I, 17829904I, 17829905I, 17830144I, 17830145I, 17830160I, 17830161I, 17891328I, 17891329I, 17891344I, 17891345I, 17891584I, 17891585I, 17891600I, 17891601I, 17895424I, 17895425I, 17895440I, 17895441I, 17895680I, 17895681I, 17895696I, 17895697I, 268435456I, 268435457I, 268435472I, 268435473I, 268435712I, 268435713I, 268435728I, 268435729I, 268439552I, 268439553I, 268439568I, 268439569I, 268439808I, 268439809I, 268439824I, 268439825I, 268500992I, 268500993I, 268501008I, 268501009I, 268501248I, 268501249I, 268501264I, 268501265I, 268505088I, 268505089I, 268505104I, 268505105I, 268505344I, 268505345I, 268505360I, 268505361I, 269484032I, 269484033I, 269484048I, 269484049I, 269484288I, 269484289I, 269484304I, 269484305I, 269488128I, 269488129I, 269488144I, 269488145I, 269488384I, 269488385I, 269488400I, 269488401I, 269549568I, 269549569I, 269549584I, 269549585I, 269549824I, 269549825I, 269549840I, 269549841I, 269553664I, 269553665I, 269553680I, 269553681I, 269553920I, 269553921I, 269553936I, 269553937I, 285212672I, 285212673I, 285212688I, 285212689I, 285212928I, 285212929I, 285212944I, 285212945I, 285216768I, 285216769I, 285216784I, 285216785I, 285217024I, 285217025I, 285217040I, 285217041I, 285278208I, 285278209I, 285278224I, 285278225I, 285278464I, 285278465I, 285278480I, 285278481I, 285282304I, 285282305I, 285282320I, 285282321I, 285282560I, 285282561I, 285282576I, 285282577I, 286261248I, 286261249I, 286261264I, 286261265I, 286261504I, 286261505I, 286261520I, 286261521I, 286265344I, 286265345I, 286265360I, 286265361I, 286265600I, 286265601I, 286265616I, 286265617I, 286326784I, 286326785I, 286326800I, 286326801I, 286327040I, 286327041I, 286327056I, 286327057I, 286330880I, 286330881I, 286330896I, 286330897I, 286331136I, 286331137I, 286331152I, 286331153I) @kind object;
  #L34e377.  goto L34d92a;
  #L34e378.  v1:= (0I, 1I, 32I, 33I, 1024I, 1025I, 1056I, 1057I, 32768I, 32769I, 32800I, 32801I, 33792I, 33793I, 33824I, 33825I, 1048576I, 1048577I, 1048608I, 1048609I, 1049600I, 1049601I, 1049632I, 1049633I, 1081344I, 1081345I, 1081376I, 1081377I, 1082368I, 1082369I, 1082400I, 1082401I, 33554432I, 33554433I, 33554464I, 33554465I, 33555456I, 33555457I, 33555488I, 33555489I, 33587200I, 33587201I, 33587232I, 33587233I, 33588224I, 33588225I, 33588256I, 33588257I, 34603008I, 34603009I, 34603040I, 34603041I, 34604032I, 34604033I, 34604064I, 34604065I, 34635776I, 34635777I, 34635808I, 34635809I, 34636800I, 34636801I, 34636832I, 34636833I, 1073741824I, 1073741825I, 1073741856I, 1073741857I, 1073742848I, 1073742849I, 1073742880I, 1073742881I, 1073774592I, 1073774593I, 1073774624I, 1073774625I, 1073775616I, 1073775617I, 1073775648I, 1073775649I, 1074790400I, 1074790401I, 1074790432I, 1074790433I, 1074791424I, 1074791425I, 1074791456I, 1074791457I, 1074823168I, 1074823169I, 1074823200I, 1074823201I, 1074824192I, 1074824193I, 1074824224I, 1074824225I, 1107296256I, 1107296257I, 1107296288I, 1107296289I, 1107297280I, 1107297281I, 1107297312I, 1107297313I, 1107329024I, 1107329025I, 1107329056I, 1107329057I, 1107330048I, 1107330049I, 1107330080I, 1107330081I, 1108344832I, 1108344833I, 1108344864I, 1108344865I, 1108345856I, 1108345857I, 1108345888I, 1108345889I, 1108377600I, 1108377601I, 1108377632I, 1108377633I, 1108378624I, 1108378625I, 1108378656I, 1108378657I) @kind object;
  #L34e57f.  goto L34d938;
  #L34e580.  v1:= (0L, 1L, 128L, 129L, 16384L, 16385L, 16512L, 16513L, 2097152L, 2097153L, 2097280L, 2097281L, 2113536L, 2113537L, 2113664L, 2113665L, 268435456L, 268435457L, 268435584L, 268435585L, 268451840L, 268451841L, 268451968L, 268451969L, 270532608L, 270532609L, 270532736L, 270532737L, 270548992L, 270548993L, 270549120L, 270549121L, 34359738368L, 34359738369L, 34359738496L, 34359738497L, 34359754752L, 34359754753L, 34359754880L, 34359754881L, 34361835520L, 34361835521L, 34361835648L, 34361835649L, 34361851904L, 34361851905L, 34361852032L, 34361852033L, 34628173824L, 34628173825L, 34628173952L, 34628173953L, 34628190208L, 34628190209L, 34628190336L, 34628190337L, 34630270976L, 34630270977L, 34630271104L, 34630271105L, 34630287360L, 34630287361L, 34630287488L, 34630287489L, 4398046511104L, 4398046511105L, 4398046511232L, 4398046511233L, 4398046527488L, 4398046527489L, 4398046527616L, 4398046527617L, 4398048608256L, 4398048608257L, 4398048608384L, 4398048608385L, 4398048624640L, 4398048624641L, 4398048624768L, 4398048624769L, 4398314946560L, 4398314946561L, 4398314946688L, 4398314946689L, 4398314962944L, 4398314962945L, 4398314963072L, 4398314963073L, 4398317043712L, 4398317043713L, 4398317043840L, 4398317043841L, 4398317060096L, 4398317060097L, 4398317060224L, 4398317060225L, 4432406249472L, 4432406249473L, 4432406249600L, 4432406249601L, 4432406265856L, 4432406265857L, 4432406265984L, 4432406265985L, 4432408346624L, 4432408346625L, 4432408346752L, 4432408346753L, 4432408363008L, 4432408363009L, 4432408363136L, 4432408363137L, 4432674684928L, 4432674684929L, 4432674685056L, 4432674685057L, 4432674701312L, 4432674701313L, 4432674701440L, 4432674701441L, 4432676782080L, 4432676782081L, 4432676782208L, 4432676782209L, 4432676798464L, 4432676798465L, 4432676798592L, 4432676798593L, 562949953421312L, 562949953421313L, 562949953421440L, 562949953421441L, 562949953437696L, 562949953437697L, 562949953437824L, 562949953437825L, 562949955518464L, 562949955518465L, 562949955518592L, 562949955518593L, 562949955534848L, 562949955534849L, 562949955534976L, 562949955534977L, 562950221856768L, 562950221856769L, 562950221856896L, 562950221856897L, 562950221873152L, 562950221873153L, 562950221873280L, 562950221873281L, 562950223953920L, 562950223953921L, 562950223954048L, 562950223954049L, 562950223970304L, 562950223970305L, 562950223970432L, 562950223970433L, 562984313159680L, 562984313159681L, 562984313159808L, 562984313159809L, 562984313176064L, 562984313176065L, 562984313176192L, 562984313176193L, 562984315256832L, 562984315256833L, 562984315256960L, 562984315256961L, 562984315273216L, 562984315273217L, 562984315273344L, 562984315273345L, 562984581595136L, 562984581595137L, 562984581595264L, 562984581595265L, 562984581611520L, 562984581611521L, 562984581611648L, 562984581611649L, 562984583692288L, 562984583692289L, 562984583692416L, 562984583692417L, 562984583708672L, 562984583708673L, 562984583708800L, 562984583708801L, 567347999932416L, 567347999932417L, 567347999932544L, 567347999932545L, 567347999948800L, 567347999948801L, 567347999948928L, 567347999948929L, 567348002029568L, 567348002029569L, 567348002029696L, 567348002029697L, 567348002045952L, 567348002045953L, 567348002046080L, 567348002046081L, 567348268367872L, 567348268367873L, 567348268368000L, 567348268368001L, 567348268384256L, 567348268384257L, 567348268384384L, 567348268384385L, 567348270465024L, 567348270465025L, 567348270465152L, 567348270465153L, 567348270481408L, 567348270481409L, 567348270481536L, 567348270481537L, 567382359670784L, 567382359670785L, 567382359670912L, 567382359670913L, 567382359687168L, 567382359687169L, 567382359687296L, 567382359687297L, 567382361767936L, 567382361767937L, 567382361768064L, 567382361768065L, 567382361784320L, 567382361784321L, 567382361784448L, 567382361784449L, 567382628106240L, 567382628106241L, 567382628106368L, 567382628106369L, 567382628122624L, 567382628122625L, 567382628122752L, 567382628122753L, 567382630203392L, 567382630203393L, 567382630203520L, 567382630203521L, 567382630219776L, 567382630219777L, 567382630219904L, 567382630219905L, 72057594037927936L, 72057594037927937L, 72057594037928064L, 72057594037928065L, 72057594037944320L, 72057594037944321L, 72057594037944448L, 72057594037944449L, 72057594040025088L, 72057594040025089L, 72057594040025216L, 72057594040025217L, 72057594040041472L, 72057594040041473L, 72057594040041600L, 72057594040041601L, 72057594306363392L, 72057594306363393L, 72057594306363520L, 72057594306363521L, 72057594306379776L, 72057594306379777L, 72057594306379904L, 72057594306379905L, 72057594308460544L, 72057594308460545L, 72057594308460672L, 72057594308460673L, 72057594308476928L, 72057594308476929L, 72057594308477056L, 72057594308477057L, 72057628397666304L, 72057628397666305L, 72057628397666432L, 72057628397666433L, 72057628397682688L, 72057628397682689L, 72057628397682816L, 72057628397682817L, 72057628399763456L, 72057628399763457L, 72057628399763584L, 72057628399763585L, 72057628399779840L, 72057628399779841L, 72057628399779968L, 72057628399779969L, 72057628666101760L, 72057628666101761L, 72057628666101888L, 72057628666101889L, 72057628666118144L, 72057628666118145L, 72057628666118272L, 72057628666118273L, 72057628668198912L, 72057628668198913L, 72057628668199040L, 72057628668199041L, 72057628668215296L, 72057628668215297L, 72057628668215424L, 72057628668215425L, 72061992084439040L, 72061992084439041L, 72061992084439168L, 72061992084439169L, 72061992084455424L, 72061992084455425L, 72061992084455552L, 72061992084455553L, 72061992086536192L, 72061992086536193L, 72061992086536320L, 72061992086536321L, 72061992086552576L, 72061992086552577L, 72061992086552704L, 72061992086552705L, 72061992352874496L, 72061992352874497L, 72061992352874624L, 72061992352874625L, 72061992352890880L, 72061992352890881L, 72061992352891008L, 72061992352891009L, 72061992354971648L, 72061992354971649L, 72061992354971776L, 72061992354971777L, 72061992354988032L, 72061992354988033L, 72061992354988160L, 72061992354988161L, 72062026444177408L, 72062026444177409L, 72062026444177536L, 72062026444177537L, 72062026444193792L, 72062026444193793L, 72062026444193920L, 72062026444193921L, 72062026446274560L, 72062026446274561L, 72062026446274688L, 72062026446274689L, 72062026446290944L, 72062026446290945L, 72062026446291072L, 72062026446291073L, 72062026712612864L, 72062026712612865L, 72062026712612992L, 72062026712612993L, 72062026712629248L, 72062026712629249L, 72062026712629376L, 72062026712629377L, 72062026714710016L, 72062026714710017L, 72062026714710144L, 72062026714710145L, 72062026714726400L, 72062026714726401L, 72062026714726528L, 72062026714726529L, 72620543991349248L, 72620543991349249L, 72620543991349376L, 72620543991349377L, 72620543991365632L, 72620543991365633L, 72620543991365760L, 72620543991365761L, 72620543993446400L, 72620543993446401L, 72620543993446528L, 72620543993446529L, 72620543993462784L, 72620543993462785L, 72620543993462912L, 72620543993462913L, 72620544259784704L, 72620544259784705L, 72620544259784832L, 72620544259784833L, 72620544259801088L, 72620544259801089L, 72620544259801216L, 72620544259801217L, 72620544261881856L, 72620544261881857L, 72620544261881984L, 72620544261881985L, 72620544261898240L, 72620544261898241L, 72620544261898368L, 72620544261898369L, 72620578351087616L, 72620578351087617L, 72620578351087744L, 72620578351087745L, 72620578351104000L, 72620578351104001L, 72620578351104128L, 72620578351104129L, 72620578353184768L, 72620578353184769L, 72620578353184896L, 72620578353184897L, 72620578353201152L, 72620578353201153L, 72620578353201280L, 72620578353201281L, 72620578619523072L, 72620578619523073L, 72620578619523200L, 72620578619523201L, 72620578619539456L, 72620578619539457L, 72620578619539584L, 72620578619539585L, 72620578621620224L, 72620578621620225L, 72620578621620352L, 72620578621620353L, 72620578621636608L, 72620578621636609L, 72620578621636736L, 72620578621636737L, 72624942037860352L, 72624942037860353L, 72624942037860480L, 72624942037860481L, 72624942037876736L, 72624942037876737L, 72624942037876864L, 72624942037876865L, 72624942039957504L, 72624942039957505L, 72624942039957632L, 72624942039957633L, 72624942039973888L, 72624942039973889L, 72624942039974016L, 72624942039974017L, 72624942306295808L, 72624942306295809L, 72624942306295936L, 72624942306295937L, 72624942306312192L, 72624942306312193L, 72624942306312320L, 72624942306312321L, 72624942308392960L, 72624942308392961L, 72624942308393088L, 72624942308393089L, 72624942308409344L, 72624942308409345L, 72624942308409472L, 72624942308409473L, 72624976397598720L, 72624976397598721L, 72624976397598848L, 72624976397598849L, 72624976397615104L, 72624976397615105L, 72624976397615232L, 72624976397615233L, 72624976399695872L, 72624976399695873L, 72624976399696000L, 72624976399696001L, 72624976399712256L, 72624976399712257L, 72624976399712384L, 72624976399712385L, 72624976666034176L, 72624976666034177L, 72624976666034304L, 72624976666034305L, 72624976666050560L, 72624976666050561L, 72624976666050688L, 72624976666050689L, 72624976668131328L, 72624976668131329L, 72624976668131456L, 72624976668131457L, 72624976668147712L, 72624976668147713L, 72624976668147840L, 72624976668147841L) @kind object;
  #L34f587.  goto L34d94a;
  #L34f588.  v0:= (0I, 1I, 2I, 2I, 3I, 3I, 3I, 3I, 4I, 4I, 4I, 4I, 4I, 4I, 4I, 4I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I, 8I) @kind object;
  #L34f68f.  goto L34d958;
}
procedure `void` `<init>`(`n.a.a.a.r` v0 @kind this, `int` v1 ) @signature `Ln/a/a/a/r;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34f6a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34f6a6.  v1:= new `long`[v1];
  #L34f6aa.  v0.`n.a.a.a.r.g` @type ^`long`[] := v1 @kind object;
  #L34f6ae.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.r` v12 @kind this, `java.math.BigInteger` v13 @kind object) @signature `Ln/a/a/a/r;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L34f6c0.  call `<init>`(v12) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34f6c6.  if v13 == 0 then goto L34f78e;
  #L34f6ca.  call temp:= `signum`(v13) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34f6d0.  v0:= temp;
  #L34f6d2.  if v0 < 0 then goto L34f78e;
  #L34f6d6.  call temp:= `signum`(v13) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34f6dc.  v0:= temp;
  #L34f6de.  v1:= 0L;
  #L34f6e2.  v3:= 0I;
  #L34f6e4.  v4:= 1I;
  #L34f6e6.  if v0 != 0 then goto L34f6f8;
  #L34f6ea.  v13:= new `long`[v4];
  #L34f6ee.  v13[v3]:= v1 @kind wide;
  #L34f6f2.  v12.`n.a.a.a.r.g` @type ^`long`[] := v13 @kind object;
  #L34f6f6.  return @kind void;
  #L34f6f8.  call temp:= `toByteArray`(v13) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L34f6fe.  v13:= temp @kind object;
  #L34f700.  v0:= length @variable v13;
  #L34f702.  v5:= v13[v3] @kind byte;
  #L34f706.  if v5 != 0 then goto L34f712;
  #L34f70a.  v0:= v0 + -1;
  #L34f70e.  v5:= 1I;
  #L34f710.  goto L34f714;
  #L34f712.  v5:= 0I;
  #L34f714.  v6:= v0 + 7;
  #L34f718.  v7:= 8I;
  #L34f71c.  v6:= v6 / v7 @kind int;
  #L34f71e.  v8:= new `long`[v6];
  #L34f722.  v12.`n.a.a.a.r.g` @type ^`long`[] := v8 @kind object;
  #L34f726.  v6:= v6 - v4 @kind int;
  #L34f728.  v0:= v0 %% v7 @kind int;
  #L34f72a.  v0:= v0 + v5 @kind int;
  #L34f72c.  if v5 >= v0 then goto L34f758;
  #L34f730.  v8:= v1 @kind wide;
  #L34f732.  if v5 >= v0 then goto L34f74a;
  #L34f736.  v8:= v8 ^< v7 @kind long;
  #L34f738.  v4:= v13[v5] @kind byte;
  #L34f73c.  v4:= v4 ^& 255;
  #L34f740.  v10:= (`long`) v4 @kind i2l;
  #L34f742.  v8:= v8 ^| v10 @kind long;
  #L34f744.  v5:= v5 + 1;
  #L34f748.  goto L34f732;
  #L34f74a.  v0:= v12.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f74e.  v4:= v6 + -1;
  #L34f752.  v0[v6]:= v8 @kind wide;
  #L34f756.  v6:= v4;
  #L34f758.  if v6 < 0 then goto L34f78c;
  #L34f75c.  v8:= v1 @kind wide;
  #L34f75e.  v0:= 0I;
  #L34f760.  if v0 >= v7 then goto L34f77e;
  #L34f764.  v8:= v8 ^< v7 @kind long;
  #L34f766.  v4:= v5 + 1;
  #L34f76a.  v5:= v13[v5] @kind byte;
  #L34f76e.  v5:= v5 ^& 255;
  #L34f772.  v10:= (`long`) v5 @kind i2l;
  #L34f774.  v8:= v8 ^| v10 @kind long;
  #L34f776.  v0:= v0 + 1;
  #L34f77a.  v5:= v4;
  #L34f77c.  goto L34f760;
  #L34f77e.  v0:= v12.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f782.  v0[v6]:= v8 @kind wide;
  #L34f786.  v6:= v6 + -1;
  #L34f78a.  goto L34f758;
  #L34f78c.  return @kind void;
  #L34f78e.  v13:= new `java.lang.IllegalArgumentException`;
  #L34f792.  v0:= "invalid F2m field value" @kind object;
  #L34f796.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34f79c.  goto L34f7a0;
  #L34f79e.  throw v13;
  #L34f7a0.  goto L34f79e;
}
procedure `void` `<init>`(`n.a.a.a.r` v0 @kind this, `long`[] v1 @kind object) @signature `Ln/a/a/a/r;.<init>:([J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34f7b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34f7ba.  v0.`n.a.a.a.r.g` @type ^`long`[] := v1 @kind object;
  #L34f7be.  return @kind void;
}
procedure `void` `<init>`(`n.a.a.a.r` v2 @kind this, `long`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Ln/a/a/a/r;.<init>:([JII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L34f7d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34f7d6.  if v4 != 0 then goto L34f7e6;
  #L34f7da.  v0:= length @variable v3;
  #L34f7dc.  if v5 != v0 then goto L34f7e6;
  #L34f7e0.  v2.`n.a.a.a.r.g` @type ^`long`[] := v3 @kind object;
  #L34f7e4.  goto L34f7f6;
  #L34f7e6.  v0:= new `long`[v5];
  #L34f7ea.  v2.`n.a.a.a.r.g` @type ^`long`[] := v0 @kind object;
  #L34f7ee.  v1:= 0I;
  #L34f7f0.  call `arraycopy`(v3, v4, v0, v1, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34f7f6.  return @kind void;
}
procedure `void` `A`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object) @signature `Ln/a/a/a/r;.A:([JIII[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L34fb18.  call `l`(v1, v2, v3) @signature `Ln/a/a/a/r;.l:([JII)V` @kind static;
  #L34fb1e.  v3:= v3 - v4 @kind int;
  #L34fb20.  v4:= length @variable v5;
  #L34fb22.  v4:= v4 + -1;
  #L34fb26.  if v4 < 0 then goto L34fb38;
  #L34fb2a.  v0:= v5[v4];
  #L34fb2e.  v0:= v0 + v3 @kind int;
  #L34fb30.  call `l`(v1, v2, v0) @signature `Ln/a/a/a/r;.l:([JII)V` @kind static;
  #L34fb36.  goto L34fb22;
  #L34fb38.  call `l`(v1, v2, v3) @signature `Ln/a/a/a/r;.l:([JII)V` @kind static;
  #L34fb3e.  return @kind void;
}
procedure `void` `B`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object) @signature `Ln/a/a/a/r;.B:([JIII[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L34fb50.  v3:= v3 + -1;
  #L34fb54.  if v3 < v4 then goto L34fb6c;
  #L34fb58.  call temp:= `L`(v1, v2, v3) @signature `Ln/a/a/a/r;.L:([JII)Z` @kind static;
  #L34fb5e.  v0:= temp;
  #L34fb60.  if v0 == 0 then goto L34fb50;
  #L34fb64.  call `A`(v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.A:([JIII[I)V` @kind static;
  #L34fb6a.  goto L34fb50;
  #L34fb6c.  return @kind void;
}
procedure `int` `C`(`long`[] v14 @kind object, `int` v15 , `int` v16 , `int` v17 , `int`[] v18 @kind object) @signature `Ln/a/a/a/r;.C:([JIII[I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L34ce24.  v6:= v14 @kind object;
  #L34ce26.  v7:= v15;
  #L34ce28.  v0:= v16;
  #L34ce2c.  v8:= v17;
  #L34ce30.  v9:= v18 @kind object;
  #L34ce34.  v1:= v8 + 63;
  #L34ce38.  v10:= v1 ^>> 6;
  #L34ce3c.  if v0 >= v10 then goto L34ce42;
  #L34ce40.  return v0;
  #L34ce42.  v1:= v0 ^< 6;
  #L34ce46.  v2:= v8 ^< 1;
  #L34ce4a.  v3:= 1I;
  #L34ce4c.  v2:= v2 - v3 @kind int;
  #L34ce4e.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L34ce54.  v2:= temp;
  #L34ce56.  v1:= v1 - v2 @kind int;
  #L34ce58.  v11:= v0;
  #L34ce5a.  v0:= 64I;
  #L34ce5e.  if v1 < v0 then goto L34ce6c;
  #L34ce62.  v11:= v11 + -1;
  #L34ce66.  v1:= v1 + -64;
  #L34ce6a.  goto L34ce5a;
  #L34ce6c.  v4:= length @variable v9;
  #L34ce6e.  v5:= v4 + -1;
  #L34ce72.  v5:= v9[v5];
  #L34ce76.  if v4 <= v3 then goto L34ce84;
  #L34ce7a.  v4:= v4 + -2;
  #L34ce7e.  v4:= v9[v4];
  #L34ce82.  goto L34ce86;
  #L34ce84.  v4:= 0I;
  #L34ce86.  v5:= v5 + v0 @kind int;
  #L34ce88.  call temp:= `max`(v8, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L34ce8e.  v12:= temp;
  #L34ce90.  v0:= v2 - v12 @kind int;
  #L34ce94.  v4:= v8 - v4 @kind int;
  #L34ce98.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L34ce9e.  v0:= temp;
  #L34cea0.  v1:= v1 + v0 @kind int;
  #L34cea2.  v0:= v1 ^> 6;
  #L34cea6.  if v0 <= v3 then goto L34cede;
  #L34ceaa.  v13:= v11 - v0 @kind int;
  #L34ceae.  v0:= v14 @kind object;
  #L34ceb0.  v1:= v15;
  #L34ceb2.  v2:= v11;
  #L34ceb4.  v3:= v13;
  #L34ceb6.  v4:= v17;
  #L34ceba.  v5:= v18 @kind object;
  #L34cebe.  call `E`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.E:([JIIII[I)V` @kind static;
  #L34cec4.  if v11 <= v13 then goto L34ceda;
  #L34cec8.  v11:= v11 + -1;
  #L34cecc.  v0:= v7 + v11 @kind int;
  #L34ced0.  v1:= 0L;
  #L34ced4.  v6[v0]:= v1 @kind wide;
  #L34ced8.  goto L34cec4;
  #L34ceda.  v2:= v13 ^< 6;
  #L34cede.  if v2 <= v12 then goto L34cefa;
  #L34cee2.  v0:= v14 @kind object;
  #L34cee4.  v1:= v15;
  #L34cee6.  v2:= v11;
  #L34cee8.  v3:= v12;
  #L34ceea.  v4:= v17;
  #L34ceee.  v5:= v18 @kind object;
  #L34cef2.  call `G`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.G:([JIIII[I)V` @kind static;
  #L34cef8.  goto L34cefc;
  #L34cefa.  v12:= v2;
  #L34cefc.  if v12 <= v8 then goto L34cf06;
  #L34cf00.  call `B`(v14, v15, v12, v8, v9) @signature `Ln/a/a/a/r;.B:([JIII[I)V` @kind static;
  #L34cf06.  return v10;
}
procedure `n.a.a.a.r` `D`(`long`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `int`[] v4 @kind object) @signature `Ln/a/a/a/r;.D:([JIII[I)Ln/a/a/a/r;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L34d864.  call temp:= `C`(v0, v1, v2, v3, v4) @signature `Ln/a/a/a/r;.C:([JIII[I)I` @kind static;
  #L34d86a.  v2:= temp;
  #L34d86c.  v3:= new `n.a.a.a.r`;
  #L34d870.  call `<init>`(v3, v0, v1, v2) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d876.  return v3 @kind object;
}
procedure `void` `E`(`long`[] v7 @kind object, `int` v8 , `int` v9 , `int` v10 , `int` v11 , `int`[] v12 @kind object) @signature `Ln/a/a/a/r;.E:([JIIII[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L34fb80.  v0:= v10 ^< 6;
  #L34fb84.  v6:= v0 - v11 @kind int;
  #L34fb88.  v11:= length @variable v12;
  #L34fb8a.  v11:= v11 + -1;
  #L34fb8e.  if v11 < 0 then goto L34fbb0;
  #L34fb92.  v3:= v8 + v10 @kind int;
  #L34fb96.  v4:= v9 - v10 @kind int;
  #L34fb9a.  v0:= v12[v11];
  #L34fb9e.  v5:= v6 + v0 @kind int;
  #L34fba2.  v0:= v7 @kind object;
  #L34fba4.  v1:= v8;
  #L34fba6.  v2:= v7 @kind object;
  #L34fba8.  call `m`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.m:([JI[JIII)V` @kind static;
  #L34fbae.  goto L34fb8a;
  #L34fbb0.  v4:= v8 + v10 @kind int;
  #L34fbb4.  v5:= v9 - v10 @kind int;
  #L34fbb8.  v1:= v7 @kind object;
  #L34fbba.  v2:= v8;
  #L34fbbc.  v3:= v7 @kind object;
  #L34fbbe.  call `m`(v1, v2, v3, v4, v5, v6) @signature `Ln/a/a/a/r;.m:([JI[JIII)V` @kind static;
  #L34fbc4.  return @kind void;
}
procedure `void` `F`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `long` v4 , `int` v6 , `int`[] v7 @kind object) @signature `Ln/a/a/a/r;.F:([JIIJI[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L34fbd8.  v3:= v3 - v6 @kind int;
  #L34fbda.  v6:= length @variable v7;
  #L34fbdc.  v6:= v6 + -1;
  #L34fbe0.  if v6 < 0 then goto L34fbf2;
  #L34fbe4.  v0:= v7[v6];
  #L34fbe8.  v0:= v0 + v3 @kind int;
  #L34fbea.  call `n`(v1, v2, v0, v4) @signature `Ln/a/a/a/r;.n:([JIIJ)V` @kind static;
  #L34fbf0.  goto L34fbdc;
  #L34fbf2.  call `n`(v1, v2, v3, v4) @signature `Ln/a/a/a/r;.n:([JIIJ)V` @kind static;
  #L34fbf8.  return @kind void;
}
procedure `void` `G`(`long`[] v9 @kind object, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int`[] v14 @kind object) @signature `Ln/a/a/a/r;.G:([JIIII[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L34fc0c.  v7:= v12 ^>> 6;
  #L34fc10.  v0:= v11;
  #L34fc12.  v8:= v0 + -1;
  #L34fc16.  v0:= 0L;
  #L34fc1a.  if v8 <= v7 then goto L34fc48;
  #L34fc1e.  v2:= v10 + v8 @kind int;
  #L34fc22.  v3:= v9[v2] @kind wide;
  #L34fc26.  v5:= lcmp(v3, v0);
  #L34fc2a.  if v5 == 0 then goto L34fc44;
  #L34fc2e.  v9[v2]:= v0 @kind wide;
  #L34fc32.  v2:= v8 ^< 6;
  #L34fc36.  v0:= v9 @kind object;
  #L34fc38.  v1:= v10;
  #L34fc3a.  v5:= v13;
  #L34fc3c.  v6:= v14 @kind object;
  #L34fc3e.  call `F`(v0, v1, v2, v3, v5, v6) @signature `Ln/a/a/a/r;.F:([JIIJI[I)V` @kind static;
  #L34fc44.  v0:= v8;
  #L34fc46.  goto L34fc12;
  #L34fc48.  v2:= v12 ^& 63;
  #L34fc4c.  v3:= v10 + v7 @kind int;
  #L34fc50.  v4:= v9[v3] @kind wide;
  #L34fc54.  v4:= v4 ^>> v2 @kind long;
  #L34fc56.  v6:= lcmp(v4, v0);
  #L34fc5a.  if v6 == 0 then goto L34fc7e;
  #L34fc5e.  v0:= v9[v3] @kind wide;
  #L34fc62.  v6:= v4 ^< v2 @kind long;
  #L34fc66.  v0:= v0 ^~ v6 @kind long;
  #L34fc68.  v9[v3]:= v0 @kind wide;
  #L34fc6c.  v0:= v9 @kind object;
  #L34fc6e.  v1:= v10;
  #L34fc70.  v2:= v12;
  #L34fc72.  v3:= v4 @kind wide;
  #L34fc74.  v5:= v13;
  #L34fc76.  v6:= v14 @kind object;
  #L34fc78.  call `F`(v0, v1, v2, v3, v5, v6) @signature `Ln/a/a/a/r;.F:([JIIJI[I)V` @kind static;
  #L34fc7e.  return @kind void;
}
procedure `long`[] `H`(`n.a.a.a.r` v3 @kind this, `int` v4 ) @signature `Ln/a/a/a/r;.H:(I)[J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L34d1cc.  v0:= new `long`[v4];
  #L34d1d0.  v1:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d1d4.  v2:= length @variable v1;
  #L34d1d6.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L34d1dc.  v4:= temp;
  #L34d1de.  v2:= 0I;
  #L34d1e0.  call `arraycopy`(v1, v2, v0, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34d1e6.  return v0 @kind object;
}
procedure `long` `I`(`long`[] v9 @kind object, `int` v10 , `long`[] v11 @kind object, `int` v12 , `int` v13 , `int` v14 ) @signature `Ln/a/a/a/r;.I:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L34d18c.  v0:= v14 - 64;
  #L34d190.  v1:= 0L;
  #L34d194.  v3:= 0I;
  #L34d196.  if v3 >= v13 then goto L34d1ba;
  #L34d19a.  v4:= v10 + v3 @kind int;
  #L34d19e.  v4:= v9[v4] @kind wide;
  #L34d1a2.  v6:= v12 + v3 @kind int;
  #L34d1a6.  v7:= v4 ^< v14 @kind long;
  #L34d1aa.  v1:= v1 ^| v7 @kind long;
  #L34d1ac.  v11[v6]:= v1 @kind wide;
  #L34d1b0.  v1:= v4 ^>> v0 @kind long;
  #L34d1b4.  v3:= v3 + 1;
  #L34d1b8.  goto L34d196;
  #L34d1ba.  return v1 @kind wide;
}
procedure `void` `K`(`long`[] v4 @kind object, `int` v5 , `int` v6 , `int`[] v7 @kind object) @signature `Ln/a/a/a/r;.K:([JII[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34fc90.  v6:= v5 ^< 1;
  #L34fc94.  v5:= v5 + -1;
  #L34fc98.  if v5 < 0 then goto L34fcce;
  #L34fc9c.  v0:= v4[v5] @kind wide;
  #L34fca0.  v6:= v6 + -1;
  #L34fca4.  v7:= 32I;
  #L34fca8.  v2:= v0 ^>> v7 @kind long;
  #L34fcac.  v7:= (`int`) v2 @kind l2i;
  #L34fcae.  call temp:= `q`(v7) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34fcb4.  v2:= temp @kind wide;
  #L34fcb6.  v4[v6]:= v2 @kind wide;
  #L34fcba.  v6:= v6 + -1;
  #L34fcbe.  v7:= (`int`) v0 @kind l2i;
  #L34fcc0.  call temp:= `q`(v7) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34fcc6.  v0:= temp @kind wide;
  #L34fcc8.  v4[v6]:= v0 @kind wide;
  #L34fccc.  goto L34fc94;
  #L34fcce.  return @kind void;
}
procedure `boolean` `L`(`long`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Ln/a/a/a/r;.L:([JII)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L34cbe0.  v0:= v5 ^>> 6;
  #L34cbe4.  v5:= v5 ^& 63;
  #L34cbe8.  v1:= 1L;
  #L34cbec.  v1:= v1 ^< v5 @kind long;
  #L34cbee.  v4:= v4 + v0 @kind int;
  #L34cbf0.  v4:= v3[v4] @kind wide;
  #L34cbf4.  v4:= v4 ^& v1 @kind long;
  #L34cbf6.  v0:= 0L;
  #L34cbfa.  v3:= lcmp(v4, v0);
  #L34cbfe.  if v3 == 0 then goto L34cc06;
  #L34cc02.  v3:= 1I;
  #L34cc04.  goto L34cc08;
  #L34cc06.  v3:= 0I;
  #L34cc08.  return v3;
}
procedure `void` `a`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Ln/a/a/a/r;.a:([JI[JII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34f808.  v0:= 0I;
  #L34f80a.  if v0 >= v10 then goto L34f82a;
  #L34f80e.  v1:= v7 + v0 @kind int;
  #L34f812.  v2:= v6[v1] @kind wide;
  #L34f816.  v4:= v9 + v0 @kind int;
  #L34f81a.  v4:= v8[v4] @kind wide;
  #L34f81e.  v2:= v2 ^~ v4 @kind long;
  #L34f820.  v6[v1]:= v2 @kind wide;
  #L34f824.  v0:= v0 + 1;
  #L34f828.  goto L34f80a;
  #L34f82a.  return @kind void;
}
procedure `void` `b`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `long`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Ln/a/a/a/r;.b:([JI[JI[JII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34f83c.  v0:= 0I;
  #L34f83e.  if v0 >= v12 then goto L34f862;
  #L34f842.  v1:= v11 + v0 @kind int;
  #L34f846.  v2:= v7 + v0 @kind int;
  #L34f84a.  v2:= v6[v2] @kind wide;
  #L34f84e.  v4:= v9 + v0 @kind int;
  #L34f852.  v4:= v8[v4] @kind wide;
  #L34f856.  v2:= v2 ^~ v4 @kind long;
  #L34f858.  v10[v1]:= v2 @kind wide;
  #L34f85c.  v0:= v0 + 1;
  #L34f860.  goto L34f83e;
  #L34f862.  return @kind void;
}
procedure `void` `c`(`long`[] v8 @kind object, `int` v9 , `long`[] v10 @kind object, `int` v11 , `long`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Ln/a/a/a/r;.c:([JI[JI[JII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L34f874.  v0:= 0I;
  #L34f876.  if v0 >= v14 then goto L34f8a0;
  #L34f87a.  v1:= v9 + v0 @kind int;
  #L34f87e.  v2:= v8[v1] @kind wide;
  #L34f882.  v4:= v11 + v0 @kind int;
  #L34f886.  v4:= v10[v4] @kind wide;
  #L34f88a.  v6:= v13 + v0 @kind int;
  #L34f88e.  v6:= v12[v6] @kind wide;
  #L34f892.  v4:= v4 ^~ v6 @kind long;
  #L34f894.  v2:= v2 ^~ v4 @kind long;
  #L34f896.  v8[v1]:= v2 @kind wide;
  #L34f89a.  v0:= v0 + 1;
  #L34f89e.  goto L34f876;
  #L34f8a0.  return @kind void;
}
procedure `void` `e`(`n.a.a.a.r` v7 @kind this, `n.a.a.a.r` v8 @kind object, `int` v9 , `int` v10 ) @signature `Ln/a/a/a/r;.e:(Ln/a/a/a/r;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L34f8b4.  v9:= v9 + 63;
  #L34f8b8.  v9:= v9 ^>> 6;
  #L34f8bc.  v6:= v10 ^>> 6;
  #L34f8c0.  v5:= v10 ^& 63;
  #L34f8c4.  if v5 != 0 then goto L34f8da;
  #L34f8c8.  v10:= v7.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f8cc.  v8:= v8.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f8d0.  v0:= 0I;
  #L34f8d2.  call `a`(v10, v6, v8, v0, v9) @signature `Ln/a/a/a/r;.a:([JI[JII)V` @kind static;
  #L34f8d8.  return @kind void;
  #L34f8da.  v0:= v7.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f8de.  v2:= v8.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f8e2.  v3:= 0I;
  #L34f8e4.  v1:= v6;
  #L34f8e6.  v4:= v9;
  #L34f8e8.  call temp:= `h`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.h:([JI[JIII)J` @kind static;
  #L34f8ee.  v0:= temp @kind wide;
  #L34f8f0.  v2:= 0L;
  #L34f8f4.  v8:= lcmp(v0, v2);
  #L34f8f8.  if v8 == 0 then goto L34f90c;
  #L34f8fc.  v8:= v7.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f900.  v9:= v9 + v6 @kind int;
  #L34f902.  v2:= v8[v9] @kind wide;
  #L34f906.  v0:= v0 ^~ v2 @kind long;
  #L34f908.  v8[v9]:= v0 @kind wide;
  #L34f90c.  return @kind void;
}
procedure `long` `g`(`long`[] v10 @kind object, `int` v11 , `long`[] v12 @kind object, `int` v13 , `int` v14 , `int` v15 ) @signature `Ln/a/a/a/r;.g:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L34d098.  v0:= v15 - 64;
  #L34d09c.  v1:= 0L;
  #L34d0a0.  v14:= v14 + -1;
  #L34d0a4.  if v14 < 0 then goto L34d0ca;
  #L34d0a8.  v3:= v13 + v14 @kind int;
  #L34d0ac.  v3:= v12[v3] @kind wide;
  #L34d0b0.  v5:= v11 + v14 @kind int;
  #L34d0b4.  v6:= v10[v5] @kind wide;
  #L34d0b8.  v8:= v3 ^>> v15 @kind long;
  #L34d0bc.  v1:= v1 ^| v8 @kind long;
  #L34d0be.  v1:= v1 ^~ v6 @kind long;
  #L34d0c0.  v10[v5]:= v1 @kind wide;
  #L34d0c4.  v1:= v3 ^< v0 @kind long;
  #L34d0c8.  goto L34d0a0;
  #L34d0ca.  return v1 @kind wide;
}
procedure `long` `h`(`long`[] v12 @kind object, `int` v13 , `long`[] v14 @kind object, `int` v15 , `int` v16 , `int` v17 ) @signature `Ln/a/a/a/r;.h:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L34d0dc.  v0:= v17 - 64;
  #L34d0e0.  v1:= 0L;
  #L34d0e4.  v3:= 0I;
  #L34d0e6.  v4:= v16;
  #L34d0ea.  if v3 >= v4 then goto L34d114;
  #L34d0ee.  v5:= v15 + v3 @kind int;
  #L34d0f2.  v5:= v14[v5] @kind wide;
  #L34d0f6.  v7:= v13 + v3 @kind int;
  #L34d0fa.  v8:= v12[v7] @kind wide;
  #L34d0fe.  v10:= v5 ^< v17 @kind long;
  #L34d102.  v1:= v1 ^| v10 @kind long;
  #L34d104.  v1:= v1 ^~ v8 @kind long;
  #L34d106.  v12[v7]:= v1 @kind wide;
  #L34d10a.  v1:= v5 ^>> v0 @kind long;
  #L34d10e.  v3:= v3 + 1;
  #L34d112.  goto L34d0ea;
  #L34d114.  return v1 @kind wide;
}
procedure `int` `i`(`long` v3 ) @signature `Ln/a/a/a/r;.i:(J)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L34cc54.  v0:= 32I;
  #L34cc58.  v1:= v3 ^>> v0 @kind long;
  #L34cc5c.  v2:= (`int`) v1 @kind l2i;
  #L34cc5e.  if v2 != 0 then goto L34cc66;
  #L34cc62.  v2:= (`int`) v3 @kind l2i;
  #L34cc64.  v0:= 0I;
  #L34cc66.  v3:= v2 ^>> 16;
  #L34cc6a.  if v3 != 0 then goto L34cc8e;
  #L34cc6e.  v3:= v2 ^>> 8;
  #L34cc72.  if v3 != 0 then goto L34cc80;
  #L34cc76.  v3:= `@@n.a.a.a.r.f` @type ^`byte`[] @kind object;
  #L34cc7a.  v3:= v3[v2] @kind byte;
  #L34cc7e.  goto L34ccb0;
  #L34cc80.  v4:= `@@n.a.a.a.r.f` @type ^`byte`[] @kind object;
  #L34cc84.  v3:= v4[v3] @kind byte;
  #L34cc88.  v3:= v3 + 8;
  #L34cc8c.  goto L34ccb0;
  #L34cc8e.  v4:= v3 ^>> 8;
  #L34cc92.  if v4 != 0 then goto L34cca4;
  #L34cc96.  v4:= `@@n.a.a.a.r.f` @type ^`byte`[] @kind object;
  #L34cc9a.  v3:= v4[v3] @kind byte;
  #L34cc9e.  v3:= v3 + 16;
  #L34cca2.  goto L34ccb0;
  #L34cca4.  v3:= `@@n.a.a.a.r.f` @type ^`byte`[] @kind object;
  #L34cca8.  v3:= v3[v4] @kind byte;
  #L34ccac.  v3:= v3 + 24;
  #L34ccb0.  v0:= v0 + v3 @kind int;
  #L34ccb2.  return v0;
}
procedure `int` `k`(`n.a.a.a.r` v5 @kind this, `int` v6 ) @signature `Ln/a/a/a/r;.k:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L34cd0c.  v6:= v6 + 62;
  #L34cd10.  v6:= v6 ^>> 6;
  #L34cd14.  if v6 != 0 then goto L34cd1c;
  #L34cd18.  v6:= 0I;
  #L34cd1a.  return v6;
  #L34cd1c.  v0:= v5.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cd20.  v6:= v6 + -1;
  #L34cd24.  v1:= v0[v6] @kind wide;
  #L34cd28.  v3:= 0L;
  #L34cd2c.  v0:= lcmp(v1, v3);
  #L34cd30.  if v0 == 0 then goto L34cd14;
  #L34cd34.  v6:= v6 ^< 6;
  #L34cd38.  call temp:= `i`(v1) @signature `Ln/a/a/a/r;.i:(J)I` @kind static;
  #L34cd3e.  v0:= temp;
  #L34cd40.  v6:= v6 + v0 @kind int;
  #L34cd42.  return v6;
}
procedure `void` `l`(`long`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Ln/a/a/a/r;.l:([JII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L34f96c.  v0:= v7 ^>> 6;
  #L34f970.  v7:= v7 ^& 63;
  #L34f974.  v1:= 1L;
  #L34f978.  v1:= v1 ^< v7 @kind long;
  #L34f97a.  v6:= v6 + v0 @kind int;
  #L34f97c.  v3:= v5[v6] @kind wide;
  #L34f980.  v1:= v1 ^~ v3 @kind long;
  #L34f982.  v5[v6]:= v1 @kind wide;
  #L34f986.  return @kind void;
}
procedure `void` `m`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Ln/a/a/a/r;.m:([JI[JIII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34f998.  v0:= v11 ^>> 6;
  #L34f99c.  v7:= v7 + v0 @kind int;
  #L34f99e.  v11:= v11 ^& 63;
  #L34f9a2.  if v11 != 0 then goto L34f9ae;
  #L34f9a6.  call `a`(v6, v7, v8, v9, v10) @signature `Ln/a/a/a/r;.a:([JI[JII)V` @kind static;
  #L34f9ac.  goto L34f9d0;
  #L34f9ae.  v1:= v7 + 1;
  #L34f9b2.  v5:= v11 - 64;
  #L34f9b6.  v0:= v6 @kind object;
  #L34f9b8.  v2:= v8 @kind object;
  #L34f9ba.  v3:= v9;
  #L34f9bc.  v4:= v10;
  #L34f9be.  call temp:= `g`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.g:([JI[JIII)J` @kind static;
  #L34f9c4.  v8:= temp @kind wide;
  #L34f9c6.  v10:= v6[v7] @kind wide;
  #L34f9ca.  v8:= v8 ^~ v10 @kind long;
  #L34f9cc.  v6[v7]:= v8 @kind wide;
  #L34f9d0.  return @kind void;
}
procedure `void` `n`(`long`[] v4 @kind object, `int` v5 , `int` v6 , `long` v7 ) @signature `Ln/a/a/a/r;.n:([JIIJ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34f9e4.  v0:= v6 ^>> 6;
  #L34f9e8.  v5:= v5 + v0 @kind int;
  #L34f9ea.  v6:= v6 ^& 63;
  #L34f9ee.  if v6 != 0 then goto L34f9fe;
  #L34f9f2.  v0:= v4[v5] @kind wide;
  #L34f9f6.  v7:= v7 ^~ v0 @kind long;
  #L34f9f8.  v4[v5]:= v7 @kind wide;
  #L34f9fc.  goto L34fa2e;
  #L34f9fe.  v0:= v4[v5] @kind wide;
  #L34fa02.  v2:= v7 ^< v6 @kind long;
  #L34fa06.  v0:= v0 ^~ v2 @kind long;
  #L34fa08.  v4[v5]:= v0 @kind wide;
  #L34fa0c.  v6:= v6 - 64;
  #L34fa10.  v6:= v7 ^>> v6 @kind long;
  #L34fa14.  v0:= 0L;
  #L34fa18.  v8:= lcmp(v6, v0);
  #L34fa1c.  if v8 == 0 then goto L34fa2e;
  #L34fa20.  v5:= v5 + 1;
  #L34fa24.  v0:= v4[v5] @kind wide;
  #L34fa28.  v6:= v6 ^~ v0 @kind long;
  #L34fa2a.  v4[v5]:= v6 @kind wide;
  #L34fa2e.  return @kind void;
}
procedure `long` `q`(`int` v6 ) @signature `Ln/a/a/a/r;.q:(I)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34d128.  v0:= `@@n.a.a.a.r.a` @type ^`int`[] @kind object;
  #L34d12c.  v1:= v6 ^& 255;
  #L34d130.  v1:= v0[v1];
  #L34d134.  v2:= v6 ^>> 8;
  #L34d138.  v2:= v2 ^& 255;
  #L34d13c.  v2:= v0[v2];
  #L34d140.  v2:= v2 ^< 16;
  #L34d144.  v1:= v1 ^| v2 @kind int;
  #L34d146.  v2:= v6 ^>> 16;
  #L34d14a.  v2:= v2 ^& 255;
  #L34d14e.  v2:= v0[v2];
  #L34d152.  v6:= v6 ^>> 24;
  #L34d156.  v6:= v0[v6];
  #L34d15a.  v6:= v6 ^< 16;
  #L34d15e.  v6:= v6 ^| v2 @kind int;
  #L34d160.  v2:= (`long`) v6 @kind i2l;
  #L34d162.  v4:= 4294967295L;
  #L34d16c.  v2:= v2 ^& v4 @kind long;
  #L34d16e.  v6:= 32I;
  #L34d172.  v2:= v2 ^< v6 @kind long;
  #L34d174.  v0:= (`long`) v1 @kind i2l;
  #L34d176.  v0:= v0 ^& v4 @kind long;
  #L34d178.  v0:= v0 ^| v2 @kind long;
  #L34d17a.  return v0 @kind wide;
}
procedure `void` `y`(`long` v18 , `long`[] v20 @kind object, `int` v21 , `long`[] v22 @kind object, `int` v23 ) @signature `Ln/a/a/a/r;.y:(J[JI[JI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L34fa40.  v6:= v21;
  #L34fa44.  v7:= v22 @kind object;
  #L34fa48.  v8:= v23;
  #L34fa4c.  v9:= 1L;
  #L34fa50.  v0:= v18 ^& v9 @kind long;
  #L34fa54.  v11:= 0L;
  #L34fa58.  v2:= lcmp(v0, v11);
  #L34fa5c.  if v2 == 0 then goto L34fa6e;
  #L34fa60.  v0:= 0I;
  #L34fa62.  v13:= v20 @kind object;
  #L34fa66.  call `a`(v7, v8, v13, v0, v6) @signature `Ln/a/a/a/r;.a:([JI[JII)V` @kind static;
  #L34fa6c.  goto L34fa72;
  #L34fa6e.  v13:= v20 @kind object;
  #L34fa72.  v14:= 1I;
  #L34fa74.  v15:= 1I;
  #L34fa76.  v0:= v18 @kind wide;
  #L34fa7a.  v16:= v0 ^>> v14 @kind long;
  #L34fa7e.  v0:= lcmp(v16, v11);
  #L34fa82.  if v0 == 0 then goto L34face;
  #L34fa86.  v0:= v16 ^& v9 @kind long;
  #L34fa8a.  v2:= lcmp(v0, v11);
  #L34fa8e.  if v2 == 0 then goto L34fac4;
  #L34fa92.  v3:= 0I;
  #L34fa94.  v0:= v22 @kind object;
  #L34fa98.  v1:= v23;
  #L34fa9c.  v2:= v20 @kind object;
  #L34faa0.  v4:= v21;
  #L34faa4.  v5:= v15;
  #L34faa6.  call temp:= `h`(v0, v1, v2, v3, v4, v5) @signature `Ln/a/a/a/r;.h:([JI[JIII)J` @kind static;
  #L34faac.  v0:= temp @kind wide;
  #L34faae.  v2:= lcmp(v0, v11);
  #L34fab2.  if v2 == 0 then goto L34fac4;
  #L34fab6.  v2:= v8 + v6 @kind int;
  #L34faba.  v3:= v7[v2] @kind wide;
  #L34fabe.  v0:= v0 ^~ v3 @kind long;
  #L34fac0.  v7[v2]:= v0 @kind wide;
  #L34fac4.  v15:= v15 + 1;
  #L34fac8.  v0:= v16 @kind wide;
  #L34facc.  goto L34fa7a;
  #L34face.  return @kind void;
}
procedure `n.a.a.a.r` `J`(`n.a.a.a.r` v7 @kind this, `int` v8 , `int`[] v9 @kind object) @signature `Ln/a/a/a/r;.J:(I[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L34d888.  call temp:= `o`(v7) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34d88e.  v8:= temp;
  #L34d890.  if v8 != 0 then goto L34d896;
  #L34d894.  return v7 @kind object;
  #L34d896.  v8:= v8 ^< 1;
  #L34d89a.  v9:= new `long`[v8];
  #L34d89e.  v0:= 0I;
  #L34d8a0.  v1:= 0I;
  #L34d8a2.  if v1 >= v8 then goto L34d8de;
  #L34d8a6.  v2:= v7.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d8aa.  v3:= v1 ^>> 1;
  #L34d8ae.  v3:= v2[v3] @kind wide;
  #L34d8b2.  v2:= v1 + 1;
  #L34d8b6.  v5:= (`int`) v3 @kind l2i;
  #L34d8b8.  call temp:= `q`(v5) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34d8be.  v5:= temp @kind wide;
  #L34d8c0.  v9[v1]:= v5 @kind wide;
  #L34d8c4.  v1:= v2 + 1;
  #L34d8c8.  v5:= 32I;
  #L34d8cc.  v3:= v3 ^>> v5 @kind long;
  #L34d8ce.  v4:= (`int`) v3 @kind l2i;
  #L34d8d0.  call temp:= `q`(v4) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34d8d6.  v3:= temp @kind wide;
  #L34d8d8.  v9[v2]:= v3 @kind wide;
  #L34d8dc.  goto L34d8a2;
  #L34d8de.  v1:= new `n.a.a.a.r`;
  #L34d8e2.  call `<init>`(v1, v9, v0, v8) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d8e8.  return v1 @kind object;
}
procedure `boolean` `M`(`n.a.a.a.r` v6 @kind this) @signature `Ln/a/a/a/r;.M:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34cc1c.  v0:= v6.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cc20.  v1:= length @variable v0;
  #L34cc22.  v2:= 0I;
  #L34cc24.  if v1 <= 0 then goto L34cc40;
  #L34cc28.  v3:= v0[v2] @kind wide;
  #L34cc2c.  v0:= 1L;
  #L34cc30.  v0:= v0 ^& v3 @kind long;
  #L34cc32.  v3:= 0L;
  #L34cc36.  v5:= lcmp(v0, v3);
  #L34cc3a.  if v5 == 0 then goto L34cc40;
  #L34cc3e.  v2:= 1I;
  #L34cc40.  return v2;
}
procedure `java.math.BigInteger` `N`(`n.a.a.a.r` v14 @kind this) @signature `Ln/a/a/a/r;.N:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L34cfcc.  call temp:= `o`(v14) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34cfd2.  v0:= temp;
  #L34cfd4.  if v0 != 0 then goto L34cfde;
  #L34cfd8.  v0:= `@@n.a.a.a.b.a` @type ^`java.math.BigInteger` @kind object;
  #L34cfdc.  return v0 @kind object;
  #L34cfde.  v1:= v14.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cfe2.  v2:= v0 + -1;
  #L34cfe6.  v3:= v1[v2] @kind wide;
  #L34cfea.  v1:= 8I;
  #L34cfee.  v5:= new `byte`[v1];
  #L34cff2.  v6:= 7I;
  #L34cff4.  v7:= 0I;
  #L34cff6.  v8:= 7I;
  #L34cff8.  v9:= 0I;
  #L34cffa.  v10:= 0I;
  #L34cffc.  v11:= 1I;
  #L34cffe.  if v8 < 0 then goto L34d028;
  #L34d002.  v12:= v8 * 8;
  #L34d006.  v12:= v3 ^>> v12 @kind long;
  #L34d00a.  v13:= (`int`) v12 @kind l2i;
  #L34d00c.  v12:= (`byte`) v13 @kind i2b;
  #L34d00e.  if v10 != 0 then goto L34d016;
  #L34d012.  if v12 == 0 then goto L34d022;
  #L34d016.  v10:= v9 + 1;
  #L34d01a.  v5[v9]:= v12 @kind byte;
  #L34d01e.  v9:= v10;
  #L34d020.  v10:= 1I;
  #L34d022.  v8:= v8 + -1;
  #L34d026.  goto L34cffc;
  #L34d028.  v2:= v2 * 8;
  #L34d02c.  v2:= v2 + v9 @kind int;
  #L34d02e.  v1:= new `byte`[v2];
  #L34d032.  if v7 >= v9 then goto L34d044;
  #L34d036.  v2:= v5[v7] @kind byte;
  #L34d03a.  v1[v7]:= v2 @kind byte;
  #L34d03e.  v7:= v7 + 1;
  #L34d042.  goto L34d032;
  #L34d044.  v0:= v0 + -2;
  #L34d048.  if v0 < 0 then goto L34d07c;
  #L34d04c.  v2:= v14.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d050.  v3:= v2[v0] @kind wide;
  #L34d054.  v2:= 7I;
  #L34d056.  if v2 < 0 then goto L34d076;
  #L34d05a.  v5:= v9 + 1;
  #L34d05e.  v7:= v2 * 8;
  #L34d062.  v7:= v3 ^>> v7 @kind long;
  #L34d066.  v8:= (`int`) v7 @kind l2i;
  #L34d068.  v7:= (`byte`) v8 @kind i2b;
  #L34d06a.  v1[v9]:= v7 @kind byte;
  #L34d06e.  v2:= v2 + -1;
  #L34d072.  v9:= v5;
  #L34d074.  goto L34d056;
  #L34d076.  v0:= v0 + -1;
  #L34d07a.  goto L34d048;
  #L34d07c.  v0:= new `java.math.BigInteger`;
  #L34d080.  call `<init>`(v0, v11, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L34d086.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`n.a.a.a.r` v2 @kind this) @signature `Ln/a/a/a/r;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34cf18.  v0:= new `n.a.a.a.r`;
  #L34cf1c.  v1:= v2.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cf20.  call temp:= `f`(v1) @signature `Lorg/bouncycastle/util/a;.f:([J)[J` @kind static;
  #L34cf26.  v1:= temp @kind object;
  #L34cf28.  call `<init>`(v0, v1) @signature `Ln/a/a/a/r;.<init>:([J)V` @kind direct;
  #L34cf2e.  return v0 @kind object;
}
procedure `n.a.a.a.r` `d`(`n.a.a.a.r` v6 @kind this) @signature `Ln/a/a/a/r;.d:()Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34d1f8.  v0:= v6.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d1fc.  v0:= length @variable v0;
  #L34d1fe.  v1:= 1L;
  #L34d202.  v3:= 0I;
  #L34d204.  v4:= 1I;
  #L34d206.  if v0 != 0 then goto L34d21e;
  #L34d20a.  v0:= new `n.a.a.a.r`;
  #L34d20e.  v4:= new `long`[v4];
  #L34d212.  v4[v3]:= v1 @kind wide;
  #L34d216.  call `<init>`(v0, v4) @signature `Ln/a/a/a/r;.<init>:([J)V` @kind direct;
  #L34d21c.  return v0 @kind object;
  #L34d21e.  call temp:= `o`(v6) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34d224.  v0:= temp;
  #L34d226.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L34d22c.  v0:= temp;
  #L34d22e.  call temp:= `H`(v6, v0) @signature `Ln/a/a/a/r;.H:(I)[J` @kind direct;
  #L34d234.  v0:= temp @kind object;
  #L34d236.  v4:= v0[v3] @kind wide;
  #L34d23a.  v1:= v1 ^~ v4 @kind long;
  #L34d23c.  v0[v3]:= v1 @kind wide;
  #L34d240.  v1:= new `n.a.a.a.r`;
  #L34d244.  call `<init>`(v1, v0) @signature `Ln/a/a/a/r;.<init>:([J)V` @kind direct;
  #L34d24a.  return v1 @kind object;
}
procedure `boolean` `equals`(`n.a.a.a.r` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Ln/a/a/a/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L34caf8.  v0:= instanceof @variable v9 @type ^`n.a.a.a.r` @kind boolean;
  #L34cafc.  v1:= 0I;
  #L34cafe.  if v0 != 0 then goto L34cb04;
  #L34cb02.  return v1;
  #L34cb04.  v9:= (`n.a.a.a.r`) v9 @kind object;
  #L34cb08.  call temp:= `o`(v8) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34cb0e.  v0:= temp;
  #L34cb10.  call temp:= `o`(v9) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34cb16.  v2:= temp;
  #L34cb18.  if v2 == v0 then goto L34cb1e;
  #L34cb1c.  return v1;
  #L34cb1e.  v2:= 0I;
  #L34cb20.  if v2 >= v0 then goto L34cb44;
  #L34cb24.  v3:= v8.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cb28.  v4:= v3[v2] @kind wide;
  #L34cb2c.  v3:= v9.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cb30.  v6:= v3[v2] @kind wide;
  #L34cb34.  v3:= lcmp(v4, v6);
  #L34cb38.  if v3 == 0 then goto L34cb3e;
  #L34cb3c.  return v1;
  #L34cb3e.  v2:= v2 + 1;
  #L34cb42.  goto L34cb20;
  #L34cb44.  v9:= 1I;
  #L34cb46.  return v9;
}
procedure `void` `f`(`n.a.a.a.r` v3 @kind this, `n.a.a.a.r` v4 @kind object, `int` v5 ) @signature `Ln/a/a/a/r;.f:(Ln/a/a/a/r;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34f920.  call temp:= `o`(v4) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34f926.  v0:= temp;
  #L34f928.  if v0 != 0 then goto L34f92e;
  #L34f92c.  return @kind void;
  #L34f92e.  v1:= v0 + v5 @kind int;
  #L34f932.  v2:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f936.  v2:= length @variable v2;
  #L34f938.  if v1 <= v2 then goto L34f948;
  #L34f93c.  call temp:= `H`(v3, v1) @signature `Ln/a/a/a/r;.H:(I)[J` @kind direct;
  #L34f942.  v1:= temp @kind object;
  #L34f944.  v3.`n.a.a.a.r.g` @type ^`long`[] := v1 @kind object;
  #L34f948.  v1:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f94c.  v4:= v4.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34f950.  v2:= 0I;
  #L34f952.  call `a`(v1, v5, v4, v2, v0) @signature `Ln/a/a/a/r;.a:([JI[JII)V` @kind static;
  #L34f958.  return @kind void;
}
procedure `int` `hashCode`(`n.a.a.a.r` v6 @kind this) @signature `Ln/a/a/a/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34cddc.  call temp:= `o`(v6) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34cde2.  v0:= temp;
  #L34cde4.  v1:= 1I;
  #L34cde6.  v2:= 0I;
  #L34cde8.  if v2 >= v0 then goto L34ce12;
  #L34cdec.  v3:= v6.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cdf0.  v4:= v3[v2] @kind wide;
  #L34cdf4.  v1:= v1 * 31;
  #L34cdf8.  v3:= (`int`) v4 @kind l2i;
  #L34cdfa.  v1:= v1 ^~ v3 @kind int;
  #L34cdfc.  v1:= v1 * 31;
  #L34ce00.  v3:= 32I;
  #L34ce04.  v3:= v4 ^>> v3 @kind long;
  #L34ce08.  v4:= (`int`) v3 @kind l2i;
  #L34ce0a.  v1:= v1 ^~ v4 @kind int;
  #L34ce0c.  v2:= v2 + 1;
  #L34ce10.  goto L34cde8;
  #L34ce12.  return v1;
}
procedure `int` `j`(`n.a.a.a.r` v6 @kind this) @signature `Ln/a/a/a/r;.j:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34ccc4.  v0:= v6.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34ccc8.  v0:= length @variable v0;
  #L34ccca.  if v0 != 0 then goto L34ccd2;
  #L34ccce.  v0:= 0I;
  #L34ccd0.  return v0;
  #L34ccd2.  v1:= v6.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34ccd6.  v0:= v0 + -1;
  #L34ccda.  v2:= v1[v0] @kind wide;
  #L34ccde.  v4:= 0L;
  #L34cce2.  v1:= lcmp(v2, v4);
  #L34cce6.  if v1 == 0 then goto L34ccca;
  #L34ccea.  v0:= v0 ^< 6;
  #L34ccee.  call temp:= `i`(v2) @signature `Ln/a/a/a/r;.i:(J)I` @kind static;
  #L34ccf4.  v1:= temp;
  #L34ccf6.  v0:= v0 + v1 @kind int;
  #L34ccf8.  return v0;
}
procedure `int` `o`(`n.a.a.a.r` v1 @kind this) @signature `Ln/a/a/a/r;.o:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34cd54.  v0:= v1.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cd58.  v0:= length @variable v0;
  #L34cd5a.  call temp:= `p`(v1, v0) @signature `Ln/a/a/a/r;.p:(I)I` @kind virtual;
  #L34cd60.  v0:= temp;
  #L34cd62.  return v0;
}
procedure `int` `p`(`n.a.a.a.r` v8 @kind this, `int` v9 ) @signature `Ln/a/a/a/r;.p:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L34cd74.  v0:= v8.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cd78.  v1:= length @variable v0;
  #L34cd7a.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L34cd80.  v9:= temp;
  #L34cd82.  v1:= 0I;
  #L34cd84.  v2:= 1I;
  #L34cd86.  if v9 >= v2 then goto L34cd8c;
  #L34cd8a.  return v1;
  #L34cd8c.  v3:= v0[v1] @kind wide;
  #L34cd90.  v5:= 0L;
  #L34cd94.  v7:= lcmp(v3, v5);
  #L34cd98.  if v7 == 0 then goto L34cdb2;
  #L34cd9c.  v9:= v9 + -1;
  #L34cda0.  v3:= v0[v9] @kind wide;
  #L34cda4.  v1:= lcmp(v3, v5);
  #L34cda8.  if v1 != 0 then goto L34cdae;
  #L34cdac.  goto L34cd9c;
  #L34cdae.  v9:= v9 + v2 @kind int;
  #L34cdb0.  return v9;
  #L34cdb2.  v9:= v9 + -1;
  #L34cdb6.  v3:= v0[v9] @kind wide;
  #L34cdba.  v7:= lcmp(v3, v5);
  #L34cdbe.  if v7 == 0 then goto L34cdc6;
  #L34cdc2.  v9:= v9 + v2 @kind int;
  #L34cdc4.  return v9;
  #L34cdc6.  if v9 > 0 then goto L34cdb2;
  #L34cdca.  return v1;
}
procedure `boolean` `r`(`n.a.a.a.r` v9 @kind this) @signature `Ln/a/a/a/r;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L34cb58.  v0:= v9.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cb5c.  v1:= 0I;
  #L34cb5e.  v2:= v0[v1] @kind wide;
  #L34cb62.  v4:= 1L;
  #L34cb66.  v6:= lcmp(v2, v4);
  #L34cb6a.  if v6 == 0 then goto L34cb70;
  #L34cb6e.  return v1;
  #L34cb70.  v2:= 1I;
  #L34cb72.  v3:= 1I;
  #L34cb74.  v4:= length @variable v0;
  #L34cb76.  if v3 >= v4 then goto L34cb92;
  #L34cb7a.  v4:= v0[v3] @kind wide;
  #L34cb7e.  v6:= 0L;
  #L34cb82.  v8:= lcmp(v4, v6);
  #L34cb86.  if v8 == 0 then goto L34cb8c;
  #L34cb8a.  return v1;
  #L34cb8c.  v3:= v3 + 1;
  #L34cb90.  goto L34cb74;
  #L34cb92.  return v2;
}
procedure `boolean` `s`(`n.a.a.a.r` v8 @kind this) @signature `Ln/a/a/a/r;.s:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L34cba4.  v0:= v8.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cba8.  v1:= 0I;
  #L34cbaa.  v2:= 0I;
  #L34cbac.  v3:= length @variable v0;
  #L34cbae.  if v2 >= v3 then goto L34cbca;
  #L34cbb2.  v3:= v0[v2] @kind wide;
  #L34cbb6.  v5:= 0L;
  #L34cbba.  v7:= lcmp(v3, v5);
  #L34cbbe.  if v7 == 0 then goto L34cbc4;
  #L34cbc2.  return v1;
  #L34cbc4.  v2:= v2 + 1;
  #L34cbc8.  goto L34cbac;
  #L34cbca.  v0:= 1I;
  #L34cbcc.  return v0;
}
procedure `n.a.a.a.r` `t`(`n.a.a.a.r` v11 @kind this, `int` v12 , `int`[] v13 @kind object) @signature `Ln/a/a/a/r;.t:(I[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L34d25c.  call temp:= `j`(v11) @signature `Ln/a/a/a/r;.j:()I` @kind virtual;
  #L34d262.  v0:= temp;
  #L34d264.  if v0 == 0 then goto L34d37e;
  #L34d268.  v1:= 1I;
  #L34d26a.  if v0 != v1 then goto L34d270;
  #L34d26e.  return v11 @kind object;
  #L34d270.  call temp:= `clone`(v11) @signature `Ln/a/a/a/r;.clone:()Ljava/lang/Object;` @kind virtual;
  #L34d276.  v2:= temp @kind object;
  #L34d278.  v2:= (`n.a.a.a.r`) v2 @kind object;
  #L34d27c.  v3:= v12 + 63;
  #L34d280.  v3:= v3 ^>> 6;
  #L34d284.  v4:= new `n.a.a.a.r`;
  #L34d288.  call `<init>`(v4, v3) @signature `Ln/a/a/a/r;.<init>:(I)V` @kind direct;
  #L34d28e.  v5:= v4.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d292.  v6:= 0I;
  #L34d294.  call `A`(v5, v6, v12, v12, v13) @signature `Ln/a/a/a/r;.A:([JIII[I)V` @kind static;
  #L34d29a.  v13:= new `n.a.a.a.r`;
  #L34d29e.  call `<init>`(v13, v3) @signature `Ln/a/a/a/r;.<init>:(I)V` @kind direct;
  #L34d2a4.  v5:= v13.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d2a8.  v7:= 1L;
  #L34d2ac.  v5[v6]:= v7 @kind wide;
  #L34d2b0.  v5:= new `n.a.a.a.r`;
  #L34d2b4.  call `<init>`(v5, v3) @signature `Ln/a/a/a/r;.<init>:(I)V` @kind direct;
  #L34d2ba.  v3:= 2I;
  #L34d2bc.  v7:= new `int`[v3];
  #L34d2c0.  v7[v6]:= v0;
  #L34d2c4.  v12:= v12 + v1 @kind int;
  #L34d2c6.  v7[v1]:= v12;
  #L34d2ca.  v12:= new `n.a.a.a.r`[v3];
  #L34d2ce.  v12[v6]:= v2 @kind object;
  #L34d2d2.  v12[v1]:= v4 @kind object;
  #L34d2d6.  v0:= new `int`[v3];
  #L34d2da.  goto L34d390;
  #L34d2e0.  v2:= new `n.a.a.a.r`[v3];
  #L34d2e4.  v2[v6]:= v13 @kind object;
  #L34d2e8.  v2[v1]:= v5 @kind object;
  #L34d2ec.  v13:= v7[v1];
  #L34d2f0.  v3:= v0[v1];
  #L34d2f4.  v4:= v7[v6];
  #L34d2f8.  v4:= v13 - v4 @kind int;
  #L34d2fc.  if v4 >= 0 then goto L34d31c;
  #L34d300.  v4:= -v4 @kind int;
  #L34d302.  v7[v1]:= v13;
  #L34d306.  v0[v1]:= v3;
  #L34d30a.  v13:= v1 - 1;
  #L34d30e.  v1:= v7[v13];
  #L34d312.  v3:= v0[v13];
  #L34d316.  v10:= v1;
  #L34d318.  v1:= v13;
  #L34d31a.  v13:= v10;
  #L34d31c.  v5:= v12[v1] @kind object;
  #L34d320.  v6:= v1 - 1;
  #L34d324.  v8:= v12[v6] @kind object;
  #L34d328.  v9:= v7[v6];
  #L34d32c.  call `e`(v5, v8, v9, v4) @signature `Ln/a/a/a/r;.e:(Ln/a/a/a/r;II)V` @kind direct;
  #L34d332.  v5:= v12[v1] @kind object;
  #L34d336.  call temp:= `k`(v5, v13) @signature `Ln/a/a/a/r;.k:(I)I` @kind direct;
  #L34d33c.  v5:= temp;
  #L34d33e.  if v5 != 0 then goto L34d348;
  #L34d342.  v12:= v2[v6] @kind object;
  #L34d346.  return v12 @kind object;
  #L34d348.  v8:= v0[v6];
  #L34d34c.  v9:= v2[v1] @kind object;
  #L34d350.  v6:= v2[v6] @kind object;
  #L34d354.  call `e`(v9, v6, v8, v4) @signature `Ln/a/a/a/r;.e:(Ln/a/a/a/r;II)V` @kind direct;
  #L34d35a.  v8:= v8 + v4 @kind int;
  #L34d35c.  if v8 <= v3 then goto L34d364;
  #L34d360.  v3:= v8;
  #L34d362.  goto L34d374;
  #L34d364.  if v8 != v3 then goto L34d374;
  #L34d368.  v6:= v2[v1] @kind object;
  #L34d36c.  call temp:= `k`(v6, v3) @signature `Ln/a/a/a/r;.k:(I)I` @kind direct;
  #L34d372.  v3:= temp;
  #L34d374.  v13:= v5 - v13 @kind int;
  #L34d378.  v4:= v4 + v13 @kind int;
  #L34d37a.  v13:= v5;
  #L34d37c.  goto L34d2fc;
  #L34d37e.  v12:= new `java.lang.IllegalStateException`;
  #L34d382.  call `<init>`(v12) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L34d388.  goto L34d38c;
  #L34d38a.  throw v12;
  #L34d38c.  goto L34d38a;
  #L34d38e.  
  #L34d390.  v0:= (1I, 0I) @kind object;
  #L34d39f.  goto L34d2e0;
}
procedure `java.lang.String` `toString`(`n.a.a.a.r` v5 @kind this) @signature `Ln/a/a/a/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L34cf40.  call temp:= `o`(v5) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34cf46.  v0:= temp;
  #L34cf48.  if v0 != 0 then goto L34cf52;
  #L34cf4c.  v0:= "0" @kind object;
  #L34cf50.  return v0 @kind object;
  #L34cf52.  v1:= new `java.lang.StringBuffer`;
  #L34cf56.  v2:= v5.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cf5a.  v0:= v0 + -1;
  #L34cf5e.  v3:= v2[v0] @kind wide;
  #L34cf62.  call temp:= `toBinaryString`(v3) @signature `Ljava/lang/Long;.toBinaryString:(J)Ljava/lang/String;` @kind static;
  #L34cf68.  v2:= temp @kind object;
  #L34cf6a.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuffer;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34cf70.  v0:= v0 + -1;
  #L34cf74.  if v0 < 0 then goto L34cfb2;
  #L34cf78.  v2:= v5.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34cf7c.  v3:= v2[v0] @kind wide;
  #L34cf80.  call temp:= `toBinaryString`(v3) @signature `Ljava/lang/Long;.toBinaryString:(J)Ljava/lang/String;` @kind static;
  #L34cf86.  v2:= temp @kind object;
  #L34cf88.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L34cf8e.  v3:= temp;
  #L34cf90.  v4:= 64I;
  #L34cf94.  if v3 >= v4 then goto L34cfaa;
  #L34cf98.  v4:= "0000000000000000000000000000000000000000000000000000000000000000" @kind object;
  #L34cf9c.  call temp:= `substring`(v4, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L34cfa2.  v3:= temp @kind object;
  #L34cfa4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L34cfaa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L34cfb0.  goto L34cf70;
  #L34cfb2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L34cfb8.  v0:= temp @kind object;
  #L34cfba.  return v0 @kind object;
}
procedure `n.a.a.a.r` `u`(`n.a.a.a.r` v23 @kind this, `n.a.a.a.r` v24 @kind object, `int` v25 , `int`[] v26 @kind object) @signature `Ln/a/a/a/r;.u:(Ln/a/a/a/r;I[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L34d3b0.  v0:= v25;
  #L34d3b4.  v1:= v26 @kind object;
  #L34d3b8.  call temp:= `j`(v23) @signature `Ln/a/a/a/r;.j:()I` @kind virtual;
  #L34d3be.  v2:= temp;
  #L34d3c0.  if v2 != 0 then goto L34d3c6;
  #L34d3c4.  return v23 @kind object;
  #L34d3c6.  call temp:= `j`(v24) @signature `Ln/a/a/a/r;.j:()I` @kind virtual;
  #L34d3cc.  v3:= temp;
  #L34d3ce.  if v3 != 0 then goto L34d3d4;
  #L34d3d2.  return v24 @kind object;
  #L34d3d4.  if v2 <= v3 then goto L34d3e6;
  #L34d3d8.  v5:= v2;
  #L34d3da.  v4:= v3;
  #L34d3dc.  v2:= v23 @kind object;
  #L34d3e0.  v3:= v24 @kind object;
  #L34d3e4.  goto L34d3f2;
  #L34d3e6.  v4:= v2;
  #L34d3e8.  v5:= v3;
  #L34d3ea.  v3:= v23 @kind object;
  #L34d3ee.  v2:= v24 @kind object;
  #L34d3f2.  v6:= v4 + 63;
  #L34d3f6.  v6:= v6 ^>> 6;
  #L34d3fa.  v7:= v5 + 63;
  #L34d3fe.  v11:= v7 ^>> 6;
  #L34d402.  v4:= v4 + v5 @kind int;
  #L34d404.  v4:= v4 + 62;
  #L34d408.  v4:= v4 ^>> 6;
  #L34d40c.  v7:= 0I;
  #L34d40e.  v8:= 1I;
  #L34d410.  if v6 != v8 then goto L34d446;
  #L34d414.  v3:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d418.  v8:= v3[v7] @kind wide;
  #L34d41c.  v5:= 1L;
  #L34d420.  v3:= lcmp(v8, v5);
  #L34d424.  if v3 != 0 then goto L34d42a;
  #L34d428.  return v2 @kind object;
  #L34d42a.  v3:= new `long`[v4];
  #L34d42e.  v10:= v2.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d432.  v13:= 0I;
  #L34d434.  v12:= v3 @kind object;
  #L34d436.  call `y`(v8, v10, v11, v12, v13) @signature `Ln/a/a/a/r;.y:(J[JI[JI)V` @kind static;
  #L34d43c.  call temp:= `D`(v3, v7, v4, v0, v1) @signature `Ln/a/a/a/r;.D:([JIII[I)Ln/a/a/a/r;` @kind static;
  #L34d442.  v0:= temp @kind object;
  #L34d444.  return v0 @kind object;
  #L34d446.  v5:= v5 + 7;
  #L34d44a.  v5:= v5 + 63;
  #L34d44e.  v5:= v5 ^>> 6;
  #L34d452.  v9:= 16I;
  #L34d456.  v10:= new `int`[v9];
  #L34d45a.  v15:= v5 ^< 4;
  #L34d45e.  v14:= new `long`[v15];
  #L34d462.  v10[v8]:= v5;
  #L34d466.  v2:= v2.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d46a.  call `arraycopy`(v2, v7, v14, v5, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34d470.  v2:= 2I;
  #L34d472.  v8:= v5;
  #L34d474.  if v2 >= v9 then goto L34d4ce;
  #L34d478.  v8:= v8 + v5 @kind int;
  #L34d47a.  v10[v2]:= v8;
  #L34d47e.  v11:= v2 ^& 1;
  #L34d482.  if v11 != 0 then goto L34d4a2;
  #L34d486.  v13:= v8 ^>> 1;
  #L34d48a.  v17:= 1I;
  #L34d48e.  v12:= v14 @kind object;
  #L34d490.  v11:= v14 @kind object;
  #L34d492.  v9:= v15;
  #L34d494.  v15:= v8;
  #L34d496.  v16:= v5;
  #L34d49a.  call temp:= `I`(v12, v13, v14, v15, v16, v17) @signature `Ln/a/a/a/r;.I:([JI[JIII)J` @kind static;
  #L34d4a0.  goto L34d4c0;
  #L34d4a2.  v11:= v14 @kind object;
  #L34d4a4.  v9:= v15;
  #L34d4a6.  v15:= v8 - v5 @kind int;
  #L34d4aa.  v12:= v11 @kind object;
  #L34d4ac.  v13:= v5;
  #L34d4ae.  v16:= v11 @kind object;
  #L34d4b2.  v17:= v8;
  #L34d4b6.  v18:= v5;
  #L34d4ba.  call `b`(v12, v13, v14, v15, v16, v17, v18) @signature `Ln/a/a/a/r;.b:([JI[JI[JII)V` @kind static;
  #L34d4c0.  v2:= v2 + 1;
  #L34d4c4.  v15:= v9;
  #L34d4c6.  v14:= v11 @kind object;
  #L34d4c8.  v9:= 16I;
  #L34d4cc.  goto L34d474;
  #L34d4ce.  v11:= v14 @kind object;
  #L34d4d0.  v9:= v15;
  #L34d4d2.  v2:= new `long`[v9];
  #L34d4d6.  v13:= 0I;
  #L34d4d8.  v15:= 0I;
  #L34d4da.  v17:= 4I;
  #L34d4de.  v12:= v11 @kind object;
  #L34d4e0.  v14:= v2 @kind object;
  #L34d4e2.  v16:= v9;
  #L34d4e6.  call temp:= `I`(v12, v13, v14, v15, v16, v17) @signature `Ln/a/a/a/r;.I:([JI[JIII)J` @kind static;
  #L34d4ec.  v3:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d4f0.  v8:= v4 ^< 3;
  #L34d4f4.  v9:= new `long`[v8];
  #L34d4f8.  v15:= 0I;
  #L34d4fa.  if v15 >= v6 then goto L34d564;
  #L34d4fe.  v12:= v3[v15] @kind wide;
  #L34d502.  v19:= v15;
  #L34d506.  v14:= (`int`) v12 @kind l2i;
  #L34d508.  v14:= v14 ^& 15;
  #L34d50c.  v20:= 4I;
  #L34d510.  v12:= v12 ^>> v20 @kind long;
  #L34d514.  v7:= (`int`) v12 @kind l2i;
  #L34d516.  v7:= v7 ^& 15;
  #L34d51a.  v16:= v10[v14];
  #L34d51e.  v17:= v10[v7];
  #L34d522.  v21:= v12 @kind wide;
  #L34d526.  v12:= v9 @kind object;
  #L34d528.  v13:= v19;
  #L34d52c.  v14:= v11 @kind object;
  #L34d52e.  v7:= v15;
  #L34d530.  v15:= v16;
  #L34d534.  v16:= v2 @kind object;
  #L34d538.  v18:= v5;
  #L34d53c.  call `c`(v12, v13, v14, v15, v16, v17, v18) @signature `Ln/a/a/a/r;.c:([JI[JI[JII)V` @kind static;
  #L34d542.  v12:= v21 ^>> v20 @kind long;
  #L34d546.  v14:= 0L;
  #L34d54a.  v16:= lcmp(v12, v14);
  #L34d54e.  if v16 != 0 then goto L34d55a;
  #L34d552.  v15:= v7 + 1;
  #L34d556.  v7:= 0I;
  #L34d558.  goto L34d4fa;
  #L34d55a.  v19:= v19 + v4 @kind int;
  #L34d55e.  v15:= v7;
  #L34d560.  v7:= 0I;
  #L34d562.  goto L34d506;
  #L34d564.  v8:= v8 - v4 @kind int;
  #L34d566.  if v8 == 0 then goto L34d584;
  #L34d56a.  v13:= v8 - v4 @kind int;
  #L34d56e.  v17:= 8I;
  #L34d572.  v12:= v9 @kind object;
  #L34d574.  v14:= v9 @kind object;
  #L34d576.  v15:= v8;
  #L34d578.  v16:= v4;
  #L34d57c.  call temp:= `h`(v12, v13, v14, v15, v16, v17) @signature `Ln/a/a/a/r;.h:([JI[JIII)J` @kind static;
  #L34d582.  goto L34d564;
  #L34d584.  v2:= 0I;
  #L34d586.  call temp:= `D`(v9, v2, v4, v0, v1) @signature `Ln/a/a/a/r;.D:([JIII[I)Ln/a/a/a/r;` @kind static;
  #L34d58c.  v0:= temp @kind object;
  #L34d58e.  return v0 @kind object;
}
procedure `n.a.a.a.r` `v`(`n.a.a.a.r` v9 @kind this, `int` v10 , `int`[] v11 @kind object) @signature `Ln/a/a/a/r;.v:(I[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L34d5a0.  call temp:= `o`(v9) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34d5a6.  v0:= temp;
  #L34d5a8.  if v0 != 0 then goto L34d5ae;
  #L34d5ac.  return v9 @kind object;
  #L34d5ae.  v0:= v0 ^< 1;
  #L34d5b2.  v1:= new `long`[v0];
  #L34d5b6.  v2:= 0I;
  #L34d5b8.  v3:= 0I;
  #L34d5ba.  if v3 >= v0 then goto L34d5f6;
  #L34d5be.  v4:= v9.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d5c2.  v5:= v3 ^>> 1;
  #L34d5c6.  v5:= v4[v5] @kind wide;
  #L34d5ca.  v4:= v3 + 1;
  #L34d5ce.  v7:= (`int`) v5 @kind l2i;
  #L34d5d0.  call temp:= `q`(v7) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34d5d6.  v7:= temp @kind wide;
  #L34d5d8.  v1[v3]:= v7 @kind wide;
  #L34d5dc.  v3:= v4 + 1;
  #L34d5e0.  v7:= 32I;
  #L34d5e4.  v5:= v5 ^>> v7 @kind long;
  #L34d5e6.  v6:= (`int`) v5 @kind l2i;
  #L34d5e8.  call temp:= `q`(v6) @signature `Ln/a/a/a/r;.q:(I)J` @kind static;
  #L34d5ee.  v5:= temp @kind wide;
  #L34d5f0.  v1[v4]:= v5 @kind wide;
  #L34d5f4.  goto L34d5ba;
  #L34d5f6.  v3:= new `n.a.a.a.r`;
  #L34d5fa.  call temp:= `C`(v1, v2, v0, v10, v11) @signature `Ln/a/a/a/r;.C:([JIII[I)I` @kind static;
  #L34d600.  v10:= temp;
  #L34d602.  call `<init>`(v3, v1, v2, v10) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d608.  return v3 @kind object;
}
procedure `n.a.a.a.r` `w`(`n.a.a.a.r` v5 @kind this, `int` v6 , `int` v7 , `int`[] v8 @kind object) @signature `Ln/a/a/a/r;.w:(II[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L34d61c.  call temp:= `o`(v5) @signature `Ln/a/a/a/r;.o:()I` @kind virtual;
  #L34d622.  v0:= temp;
  #L34d624.  if v0 != 0 then goto L34d62a;
  #L34d628.  return v5 @kind object;
  #L34d62a.  v1:= v7 + 63;
  #L34d62e.  v1:= v1 ^>> 6;
  #L34d632.  v1:= v1 ^< 1;
  #L34d636.  v2:= new `long`[v1];
  #L34d63a.  v3:= v5.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d63e.  v4:= 0I;
  #L34d640.  call `arraycopy`(v3, v4, v2, v4, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34d646.  v6:= v6 + -1;
  #L34d64a.  if v6 < 0 then goto L34d65e;
  #L34d64e.  call `K`(v2, v0, v7, v8) @signature `Ln/a/a/a/r;.K:([JII[I)V` @kind static;
  #L34d654.  call temp:= `C`(v2, v4, v1, v7, v8) @signature `Ln/a/a/a/r;.C:([JIII[I)I` @kind static;
  #L34d65a.  v0:= temp;
  #L34d65c.  goto L34d646;
  #L34d65e.  v6:= new `n.a.a.a.r`;
  #L34d662.  call `<init>`(v6, v2, v4, v0) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d668.  return v6 @kind object;
}
procedure `n.a.a.a.r` `x`(`n.a.a.a.r` v22 @kind this, `n.a.a.a.r` v23 @kind object, `int` v24 , `int`[] v25 @kind object) @signature `Ln/a/a/a/r;.x:(Ln/a/a/a/r;I[I)Ln/a/a/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L34d67c.  call temp:= `j`(v22) @signature `Ln/a/a/a/r;.j:()I` @kind virtual;
  #L34d682.  v0:= temp;
  #L34d684.  if v0 != 0 then goto L34d68a;
  #L34d688.  return v22 @kind object;
  #L34d68a.  call temp:= `j`(v23) @signature `Ln/a/a/a/r;.j:()I` @kind virtual;
  #L34d690.  v1:= temp;
  #L34d692.  if v1 != 0 then goto L34d698;
  #L34d696.  return v23 @kind object;
  #L34d698.  if v0 <= v1 then goto L34d6aa;
  #L34d69c.  v3:= v0;
  #L34d69e.  v2:= v1;
  #L34d6a0.  v0:= v22 @kind object;
  #L34d6a4.  v1:= v23 @kind object;
  #L34d6a8.  goto L34d6b6;
  #L34d6aa.  v2:= v0;
  #L34d6ac.  v3:= v1;
  #L34d6ae.  v1:= v22 @kind object;
  #L34d6b2.  v0:= v23 @kind object;
  #L34d6b6.  v4:= v2 + 63;
  #L34d6ba.  v4:= v4 ^>> 6;
  #L34d6be.  v5:= v3 + 63;
  #L34d6c2.  v9:= v5 ^>> 6;
  #L34d6c6.  v2:= v2 + v3 @kind int;
  #L34d6c8.  v2:= v2 + 62;
  #L34d6cc.  v2:= v2 ^>> 6;
  #L34d6d0.  v5:= 0I;
  #L34d6d2.  v6:= 1I;
  #L34d6d4.  if v4 != v6 then goto L34d70c;
  #L34d6d8.  v1:= v1.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d6dc.  v6:= v1[v5] @kind wide;
  #L34d6e0.  v3:= 1L;
  #L34d6e4.  v1:= lcmp(v6, v3);
  #L34d6e8.  if v1 != 0 then goto L34d6ee;
  #L34d6ec.  return v0 @kind object;
  #L34d6ee.  v1:= new `long`[v2];
  #L34d6f2.  v8:= v0.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d6f6.  v11:= 0I;
  #L34d6f8.  v10:= v1 @kind object;
  #L34d6fa.  call `y`(v6, v8, v9, v10, v11) @signature `Ln/a/a/a/r;.y:(J[JI[JI)V` @kind static;
  #L34d700.  v0:= new `n.a.a.a.r`;
  #L34d704.  call `<init>`(v0, v1, v5, v2) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d70a.  return v0 @kind object;
  #L34d70c.  v3:= v3 + 7;
  #L34d710.  v3:= v3 + 63;
  #L34d714.  v3:= v3 ^>> 6;
  #L34d718.  v7:= 16I;
  #L34d71c.  v8:= new `int`[v7];
  #L34d720.  v15:= v3 ^< 4;
  #L34d724.  v14:= new `long`[v15];
  #L34d728.  v8[v6]:= v3;
  #L34d72c.  v0:= v0.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d730.  call `arraycopy`(v0, v5, v14, v3, v9) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34d736.  v0:= 2I;
  #L34d738.  v6:= v3;
  #L34d73a.  if v0 >= v7 then goto L34d79a;
  #L34d73e.  v6:= v6 + v3 @kind int;
  #L34d740.  v8[v0]:= v6;
  #L34d744.  v9:= v0 ^& 1;
  #L34d748.  if v9 != 0 then goto L34d76a;
  #L34d74c.  v11:= v6 ^>> 1;
  #L34d750.  v9:= 1I;
  #L34d752.  v10:= v14 @kind object;
  #L34d754.  v12:= v14 @kind object;
  #L34d756.  v13:= v6;
  #L34d758.  v17:= v14 @kind object;
  #L34d75c.  v14:= v3;
  #L34d75e.  v7:= v15;
  #L34d760.  v15:= v9;
  #L34d762.  call temp:= `I`(v10, v11, v12, v13, v14, v15) @signature `Ln/a/a/a/r;.I:([JI[JIII)J` @kind static;
  #L34d768.  goto L34d78a;
  #L34d76a.  v17:= v14 @kind object;
  #L34d76e.  v7:= v15;
  #L34d770.  v13:= v6 - v3 @kind int;
  #L34d774.  v10:= v17 @kind object;
  #L34d778.  v11:= v3;
  #L34d77a.  v12:= v17 @kind object;
  #L34d77e.  v15:= v6;
  #L34d780.  v16:= v3;
  #L34d784.  call `b`(v10, v11, v12, v13, v14, v15, v16) @signature `Ln/a/a/a/r;.b:([JI[JI[JII)V` @kind static;
  #L34d78a.  v0:= v0 + 1;
  #L34d78e.  v15:= v7;
  #L34d790.  v14:= v17 @kind object;
  #L34d794.  v7:= 16I;
  #L34d798.  goto L34d73a;
  #L34d79a.  v17:= v14 @kind object;
  #L34d79e.  v7:= v15;
  #L34d7a0.  v0:= new `long`[v7];
  #L34d7a4.  v11:= 0I;
  #L34d7a6.  v13:= 0I;
  #L34d7a8.  v15:= 4I;
  #L34d7aa.  v10:= v17 @kind object;
  #L34d7ae.  v12:= v0 @kind object;
  #L34d7b0.  v14:= v7;
  #L34d7b2.  call temp:= `I`(v10, v11, v12, v13, v14, v15) @signature `Ln/a/a/a/r;.I:([JI[JIII)J` @kind static;
  #L34d7b8.  v1:= v1.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34d7bc.  v6:= v2 ^< 3;
  #L34d7c0.  v7:= new `long`[v6];
  #L34d7c4.  v9:= 0I;
  #L34d7c6.  if v9 >= v4 then goto L34d828;
  #L34d7ca.  v10:= v1[v9] @kind wide;
  #L34d7ce.  v18:= v9;
  #L34d7d2.  v12:= (`int`) v10 @kind l2i;
  #L34d7d4.  v12:= v12 ^& 15;
  #L34d7d8.  v19:= 4I;
  #L34d7dc.  v14:= v10 ^>> v19 @kind long;
  #L34d7e0.  v10:= (`int`) v14 @kind l2i;
  #L34d7e2.  v10:= v10 ^& 15;
  #L34d7e6.  v13:= v8[v12];
  #L34d7ea.  v16:= v8[v10];
  #L34d7ee.  v10:= v7 @kind object;
  #L34d7f0.  v11:= v18;
  #L34d7f4.  v12:= v17 @kind object;
  #L34d7f8.  v20:= v14 @kind wide;
  #L34d7fc.  v14:= v0 @kind object;
  #L34d7fe.  v15:= v16;
  #L34d802.  v16:= v3;
  #L34d806.  call `c`(v10, v11, v12, v13, v14, v15, v16) @signature `Ln/a/a/a/r;.c:([JI[JI[JII)V` @kind static;
  #L34d80c.  v10:= v20 ^>> v19 @kind long;
  #L34d810.  v12:= 0L;
  #L34d814.  v14:= lcmp(v10, v12);
  #L34d818.  if v14 != 0 then goto L34d822;
  #L34d81c.  v9:= v9 + 1;
  #L34d820.  goto L34d7c6;
  #L34d822.  v18:= v18 + v2 @kind int;
  #L34d826.  goto L34d7d2;
  #L34d828.  v6:= v6 - v2 @kind int;
  #L34d82a.  if v6 == 0 then goto L34d846;
  #L34d82e.  v11:= v6 - v2 @kind int;
  #L34d832.  v15:= 8I;
  #L34d836.  v10:= v7 @kind object;
  #L34d838.  v12:= v7 @kind object;
  #L34d83a.  v13:= v6;
  #L34d83c.  v14:= v2;
  #L34d83e.  call temp:= `h`(v10, v11, v12, v13, v14, v15) @signature `Ln/a/a/a/r;.h:([JI[JIII)J` @kind static;
  #L34d844.  goto L34d828;
  #L34d846.  v0:= new `n.a.a.a.r`;
  #L34d84a.  call `<init>`(v0, v7, v5, v2) @signature `Ln/a/a/a/r;.<init>:([JII)V` @kind direct;
  #L34d850.  return v0 @kind object;
}
procedure `void` `z`(`n.a.a.a.r` v3 @kind this, `int` v4 , `int`[] v5 @kind object) @signature `Ln/a/a/a/r;.z:(I[I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34fae0.  v0:= v3.`n.a.a.a.r.g` @type ^`long`[] @kind object;
  #L34fae4.  v1:= length @variable v0;
  #L34fae6.  v2:= 0I;
  #L34fae8.  call temp:= `C`(v0, v2, v1, v4, v5) @signature `Ln/a/a/a/r;.C:([JIII[I)I` @kind static;
  #L34faee.  v4:= temp;
  #L34faf0.  v5:= length @variable v0;
  #L34faf2.  if v4 >= v5 then goto L34fb04;
  #L34faf6.  v5:= new `long`[v4];
  #L34fafa.  v3.`n.a.a.a.r.g` @type ^`long`[] := v5 @kind object;
  #L34fafe.  call `arraycopy`(v0, v2, v5, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L34fb04.  return @kind void;
}
