record `n.a.a.a.j` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.a.a.a.b` @kind interface {
}
procedure `void` `<init>`(`n.a.a.a.j` v0 @kind this) @signature `Ln/a/a/a/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34a9a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34a9aa.  return @kind void;
}
procedure `n.a.a.a.j` `a`(`n.a.a.a.j` v0 @kind object) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `b`() @signature `Ln/a/a/a/j;.b:()Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `c`(`n.a.a.a.j` v1 @kind this) @signature `Ln/a/a/a/j;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34a8d4.  call temp:= `s`(v1) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a8da.  v0:= temp @kind object;
  #L34a8dc.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L34a8e2.  v0:= temp;
  #L34a8e4.  return v0;
}
procedure `n.a.a.a.j` `d`(`n.a.a.a.j` v0 @kind object) @signature `Ln/a/a/a/j;.d:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `e`(`n.a.a.a.j` v2 @kind this) @signature `Ln/a/a/a/j;.e:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a8a0.  call temp:= `f`(v2) @signature `Ln/a/a/a/j;.f:()I` @kind virtual;
  #L34a8a6.  v0:= temp;
  #L34a8a8.  v0:= v0 + 7;
  #L34a8ac.  v0:= v0 / 8;
  #L34a8b0.  call temp:= `s`(v2) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a8b6.  v1:= temp @kind object;
  #L34a8b8.  call temp:= `a`(v0, v1) @signature `Lorg/bouncycastle/util/b;.a:(ILjava/math/BigInteger;)[B` @kind static;
  #L34a8be.  v0:= temp @kind object;
  #L34a8c0.  return v0 @kind object;
}
procedure `int` `f`() @signature `Ln/a/a/a/j;.f:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `g`() @signature `Ln/a/a/a/j;.g:()Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `h`(`n.a.a.a.j` v2 @kind this) @signature `Ln/a/a/a/j;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a82c.  call temp:= `c`(v2) @signature `Ln/a/a/a/j;.c:()I` @kind virtual;
  #L34a832.  v0:= temp;
  #L34a834.  v1:= 1I;
  #L34a836.  if v0 != v1 then goto L34a83c;
  #L34a83a.  goto L34a83e;
  #L34a83c.  v1:= 0I;
  #L34a83e.  return v1;
}
procedure `boolean` `i`(`n.a.a.a.j` v1 @kind this) @signature `Ln/a/a/a/j;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34a850.  call temp:= `s`(v1) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a856.  v0:= temp @kind object;
  #L34a858.  call temp:= `signum`(v0) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L34a85e.  v0:= temp;
  #L34a860.  if v0 != 0 then goto L34a868;
  #L34a864.  v0:= 1I;
  #L34a866.  goto L34a86a;
  #L34a868.  v0:= 0I;
  #L34a86a.  return v0;
}
procedure `n.a.a.a.j` `j`(`n.a.a.a.j` v0 @kind object) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `k`(`n.a.a.a.j` v0 @kind this, `n.a.a.a.j` v1 @kind object, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/j;.k:(Ln/a/a/a/j;Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;

  #L34a920.  call temp:= `j`(v0, v1) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a926.  v1:= temp @kind object;
  #L34a928.  call temp:= `j`(v2, v3) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a92e.  v2:= temp @kind object;
  #L34a930.  call temp:= `q`(v1, v2) @signature `Ln/a/a/a/j;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a936.  v1:= temp @kind object;
  #L34a938.  return v1 @kind object;
}
procedure `n.a.a.a.j` `l`(`n.a.a.a.j` v0 @kind this, `n.a.a.a.j` v1 @kind object, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/j;.l:(Ln/a/a/a/j;Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;

  #L34a94c.  call temp:= `j`(v0, v1) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a952.  v1:= temp @kind object;
  #L34a954.  call temp:= `j`(v2, v3) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a95a.  v2:= temp @kind object;
  #L34a95c.  call temp:= `a`(v1, v2) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a962.  v1:= temp @kind object;
  #L34a964.  return v1 @kind object;
}
procedure `n.a.a.a.j` `m`() @signature `Ln/a/a/a/j;.m:()Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `n`() @signature `Ln/a/a/a/j;.n:()Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `o`() @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.a.a.a.j` `p`(`n.a.a.a.j` v1 @kind this, `n.a.a.a.j` v2 @kind object, `n.a.a.a.j` v3 @kind object) @signature `Ln/a/a/a/j;.p:(Ln/a/a/a/j;Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34a978.  call temp:= `o`(v1) @signature `Ln/a/a/a/j;.o:()Ln/a/a/a/j;` @kind virtual;
  #L34a97e.  v0:= temp @kind object;
  #L34a980.  call temp:= `j`(v2, v3) @signature `Ln/a/a/a/j;.j:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a986.  v2:= temp @kind object;
  #L34a988.  call temp:= `a`(v0, v2) @signature `Ln/a/a/a/j;.a:(Ln/a/a/a/j;)Ln/a/a/a/j;` @kind virtual;
  #L34a98e.  v2:= temp @kind object;
  #L34a990.  return v2 @kind object;
}
procedure `n.a.a.a.j` `q`(`n.a.a.a.j` v0 @kind object) @signature `Ln/a/a/a/j;.q:(Ln/a/a/a/j;)Ln/a/a/a/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `r`(`n.a.a.a.j` v2 @kind this) @signature `Ln/a/a/a/j;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a87c.  call temp:= `s`(v2) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a882.  v0:= temp @kind object;
  #L34a884.  v1:= 0I;
  #L34a886.  call temp:= `testBit`(v0, v1) @signature `Ljava/math/BigInteger;.testBit:(I)Z` @kind virtual;
  #L34a88c.  v0:= temp;
  #L34a88e.  return v0;
}
procedure `java.math.BigInteger` `s`() @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`n.a.a.a.j` v2 @kind this) @signature `Ln/a/a/a/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34a8f8.  call temp:= `s`(v2) @signature `Ln/a/a/a/j;.s:()Ljava/math/BigInteger;` @kind virtual;
  #L34a8fe.  v0:= temp @kind object;
  #L34a900.  v1:= 16I;
  #L34a904.  call temp:= `toString`(v0, v1) @signature `Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L34a90a.  v0:= temp @kind object;
  #L34a90c.  return v0 @kind object;
}
