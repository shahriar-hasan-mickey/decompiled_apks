record `okio.c0` @kind class @AccessFlag PUBLIC_FINAL extends `okio.o` @kind interface {
  `okio.k` `okio.c0.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.c0.c` @AccessFlag PUBLIC;
  `okio.i0` `okio.c0.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.c0` v0 @kind this, `okio.i0` v1 @kind object) @signature `Lokio/c0;.<init>:(Lokio/i0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31f054.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31f05a.  v0.`okio.c0.d` @type ^`okio.i0` := v1 @kind object;
  #L31f05e.  v1:= new `okio.k`;
  #L31f062.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L31f068.  v0.`okio.c0.b` @type ^`okio.k` := v1 @kind object;
  #L31f06c.  return @kind void;
}
procedure `void` `E0`(`okio.c0` v0 @kind this, `long` v1 ) @signature `Lokio/c0;.E0:(J)V` @AccessFlag PUBLIC {
    temp;

  #L31f17c.  call temp:= `request`(v0, v1) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31f182.  v1:= temp;
  #L31f184.  if v1 == 0 then goto L31f18a;
  #L31f188.  return @kind void;
  #L31f18a.  v1:= new `java.io.EOFException`;
  #L31f18e.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L31f194.  throw v1;
}
procedure `long` `I0`(`okio.c0` v6 @kind this) @signature `Lokio/c0;.I0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31ee70.  v0:= 1L;
  #L31ee74.  call `E0`(v6, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31ee7a.  v0:= 0I;
  #L31ee7c.  v1:= 0I;
  #L31ee7e.  v2:= v1 + 1;
  #L31ee82.  v3:= (`long`) v2 @kind i2l;
  #L31ee84.  call temp:= `request`(v6, v3) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31ee8a.  v3:= temp;
  #L31ee8c.  if v3 == 0 then goto L31ef26;
  #L31ee90.  v3:= v6.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ee94.  v4:= (`long`) v1 @kind i2l;
  #L31ee96.  call temp:= `K0`(v3, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31ee9c.  v3:= temp;
  #L31ee9e.  v4:= 48I;
  #L31eea2.  v4:= (`byte`) v4 @kind i2b;
  #L31eea4.  if v3 < v4 then goto L31eeb2;
  #L31eea8.  v4:= 57I;
  #L31eeac.  v4:= (`byte`) v4 @kind i2b;
  #L31eeae.  if v3 <= v4 then goto L31eedc;
  #L31eeb2.  v4:= 97I;
  #L31eeb6.  v4:= (`byte`) v4 @kind i2b;
  #L31eeb8.  if v3 < v4 then goto L31eec6;
  #L31eebc.  v4:= 102I;
  #L31eec0.  v4:= (`byte`) v4 @kind i2b;
  #L31eec2.  if v3 <= v4 then goto L31eedc;
  #L31eec6.  v4:= 65I;
  #L31eeca.  v4:= (`byte`) v4 @kind i2b;
  #L31eecc.  if v3 < v4 then goto L31eee0;
  #L31eed0.  v4:= 70I;
  #L31eed4.  v4:= (`byte`) v4 @kind i2b;
  #L31eed6.  if v3 <= v4 then goto L31eedc;
  #L31eeda.  goto L31eee0;
  #L31eedc.  v1:= v2;
  #L31eede.  goto L31ee7e;
  #L31eee0.  if v1 == 0 then goto L31eee6;
  #L31eee4.  goto L31ef26;
  #L31eee6.  v1:= new `java.lang.NumberFormatException`;
  #L31eeea.  v2:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L31eeee.  v2:= 1I;
  #L31eef0.  v4:= new `java.lang.Object`[v2];
  #L31eef4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L31eefa.  v3:= temp @kind object;
  #L31eefc.  v4[v0]:= v3 @kind object;
  #L31ef00.  call temp:= `copyOf`(v4, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L31ef06.  v0:= temp @kind object;
  #L31ef08.  v2:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L31ef0c.  call temp:= `format`(v2, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31ef12.  v0:= temp @kind object;
  #L31ef14.  v2:= "java.lang.String.format(format, *args)" @kind object;
  #L31ef18.  call `checkExpressionValueIsNotNull`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L31ef1e.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ef24.  throw v1;
  #L31ef26.  v0:= v6.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ef2a.  call temp:= `I0`(v0) @signature `Lokio/k;.I0:()J` @kind virtual;
  #L31ef30.  v0:= temp @kind wide;
  #L31ef32.  return v0 @kind wide;
}
procedure `java.io.InputStream` `J0`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.J0:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e758.  v0:= new `okio.b0`;
  #L31e75c.  call `<init>`(v0, v1) @signature `Lokio/b0;.<init>:(Lokio/c0;)V` @kind direct;
  #L31e762.  return v0 @kind object;
}
procedure `byte`[] `L`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.L:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e5c4.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e5c8.  v1:= v2.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e5cc.  call temp:= `i0`(v0, v1) @signature `Lokio/k;.i0:(Lokio/i0;)J` @kind virtual;
  #L31e5d2.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e5d6.  call temp:= `L`(v0) @signature `Lokio/k;.L:()[B` @kind virtual;
  #L31e5dc.  v0:= temp @kind object;
  #L31e5de.  return v0 @kind object;
}
procedure `long` `M`(`okio.c0` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/c0;.M:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31eadc.  v0:= 0L;
  #L31eae0.  call temp:= `d`(v2, v3, v0) @signature `Lokio/c0;.d:(Lokio/ByteString;J)J` @kind virtual;
  #L31eae6.  v0:= temp @kind wide;
  #L31eae8.  return v0 @kind wide;
}
procedure `int` `M0`(`okio.c0` v8 @kind this, `okio.x` v9 @kind object) @signature `Lokio/c0;.M0:(Lokio/x;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31e6c0.  v0:= v8.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e6c4.  v1:= 1I;
  #L31e6c6.  v0:= v0 ^~ v1 @kind int;
  #L31e6c8.  if v0 == 0 then goto L31e72c;
  #L31e6cc.  v0:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e6d0.  call temp:= `c1`(v0, v9, v1) @signature `Lokio/k;.c1:(Lokio/x;Z)I` @kind virtual;
  #L31e6d6.  v0:= temp;
  #L31e6d8.  v2:= -2I;
  #L31e6da.  v3:= -1I;
  #L31e6dc.  if v0 == v2 then goto L31e708;
  #L31e6e0.  if v0 == v3 then goto L31e706;
  #L31e6e4.  call temp:= `e`(v9) @signature `Lokio/x;.e:()[Lokio/ByteString;` @kind virtual;
  #L31e6ea.  v9:= temp @kind object;
  #L31e6ec.  v9:= v9[v0] @kind object;
  #L31e6f0.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L31e6f6.  v9:= temp;
  #L31e6f8.  v1:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e6fc.  v2:= (`long`) v9 @kind i2l;
  #L31e6fe.  call `skip`(v1, v2) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L31e704.  return v0;
  #L31e706.  return v3;
  #L31e708.  v0:= v8.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e70c.  v2:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e710.  v4:= 8192I;
  #L31e714.  v4:= (`long`) v4 @kind i2l;
  #L31e716.  call temp:= `read`(v0, v2, v4) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31e71c.  v4:= temp @kind wide;
  #L31e71e.  v6:= -1L;
  #L31e722.  v0:= lcmp(v4, v6);
  #L31e726.  if v0 != 0 then goto L31e6cc;
  #L31e72a.  return v3;
  #L31e72c.  v9:= new `java.lang.IllegalStateException`;
  #L31e730.  v0:= "closed" @kind object;
  #L31e734.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e73a.  v0:= temp @kind object;
  #L31e73c.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e742.  goto L31e746;
  #L31e744.  throw v9;
  #L31e746.  goto L31e744;
}
procedure `okio.k` `N`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.N:()Lokio/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31ef84.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ef88.  return v0 @kind object;
}
procedure `boolean` `O`(`okio.c0` v6 @kind this) @signature `Lokio/c0;.O:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31e384.  v0:= v6.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e388.  v1:= 1I;
  #L31e38a.  v0:= v0 ^~ v1 @kind int;
  #L31e38c.  if v0 == 0 then goto L31e3c8;
  #L31e390.  v0:= v6.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e394.  call temp:= `O`(v0) @signature `Lokio/k;.O:()Z` @kind virtual;
  #L31e39a.  v0:= temp;
  #L31e39c.  if v0 == 0 then goto L31e3c4;
  #L31e3a0.  v0:= v6.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e3a4.  v2:= v6.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e3a8.  v3:= 8192I;
  #L31e3ac.  v3:= (`long`) v3 @kind i2l;
  #L31e3ae.  call temp:= `read`(v0, v2, v3) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31e3b4.  v2:= temp @kind wide;
  #L31e3b6.  v4:= -1L;
  #L31e3ba.  v0:= lcmp(v2, v4);
  #L31e3be.  if v0 != 0 then goto L31e3c4;
  #L31e3c2.  goto L31e3c6;
  #L31e3c4.  v1:= 0I;
  #L31e3c6.  return v1;
  #L31e3c8.  v0:= new `java.lang.IllegalStateException`;
  #L31e3cc.  v1:= "closed" @kind object;
  #L31e3d0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e3d6.  v1:= temp @kind object;
  #L31e3d8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e3de.  throw v0;
}
procedure `void` `S`(`okio.c0` v1 @kind this, `okio.k` v2 @kind object, `long` v3 ) @signature `Lokio/c0;.S:(Lokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31f13c.  call `E0`(v1, v3) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31f142.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f146.  call `S`(v0, v2, v3) @signature `Lokio/k;.S:(Lokio/k;J)V` @kind virtual;
  #L31f14c.  return @kind void;
  #L31f14e.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L31f150.  v4:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f154.  call temp:= `i0`(v2, v4) @signature `Lokio/k;.i0:(Lokio/i0;)J` @kind virtual;
  #L31f15a.  throw v3;
  catch `java.io.EOFException` @[L31f13c..L31f142] goto L31f14e;
}
procedure `long` `T`(`okio.c0` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/c0;.T:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31eb98.  v0:= 0L;
  #L31eb9c.  call temp:= `k`(v2, v3, v0) @signature `Lokio/c0;.k:(Lokio/ByteString;J)J` @kind virtual;
  #L31eba2.  v0:= temp @kind wide;
  #L31eba4.  return v0 @kind wide;
}
procedure `long` `V`(`okio.c0` v10 @kind this) @signature `Lokio/c0;.V:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L31edac.  v0:= 1L;
  #L31edb0.  call `E0`(v10, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31edb6.  v2:= 0L;
  #L31edba.  v4:= v2 @kind wide;
  #L31edbc.  v6:= v4 + v0 @kind long;
  #L31edc0.  call temp:= `request`(v10, v6) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31edc6.  v8:= temp;
  #L31edc8.  if v8 == 0 then goto L31ee50;
  #L31edcc.  v8:= v10.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31edd0.  call temp:= `K0`(v8, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31edd6.  v8:= temp;
  #L31edd8.  v9:= 48I;
  #L31eddc.  v9:= (`byte`) v9 @kind i2b;
  #L31edde.  if v8 < v9 then goto L31edec;
  #L31ede2.  v9:= 57I;
  #L31ede6.  v9:= (`byte`) v9 @kind i2b;
  #L31ede8.  if v8 <= v9 then goto L31ee00;
  #L31edec.  v9:= lcmp(v4, v2);
  #L31edf0.  if v9 != 0 then goto L31ee04;
  #L31edf4.  v9:= 45I;
  #L31edf8.  v9:= (`byte`) v9 @kind i2b;
  #L31edfa.  if v8 == v9 then goto L31ee00;
  #L31edfe.  goto L31ee04;
  #L31ee00.  v4:= v6 @kind wide;
  #L31ee02.  goto L31edbc;
  #L31ee04.  v0:= lcmp(v4, v2);
  #L31ee08.  if v0 == 0 then goto L31ee0e;
  #L31ee0c.  goto L31ee50;
  #L31ee0e.  v0:= new `java.lang.NumberFormatException`;
  #L31ee12.  v1:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L31ee16.  v1:= 1I;
  #L31ee18.  v2:= new `java.lang.Object`[v1];
  #L31ee1c.  v3:= 0I;
  #L31ee1e.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L31ee24.  v4:= temp @kind object;
  #L31ee26.  v2[v3]:= v4 @kind object;
  #L31ee2a.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L31ee30.  v1:= temp @kind object;
  #L31ee32.  v2:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L31ee36.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31ee3c.  v1:= temp @kind object;
  #L31ee3e.  v2:= "java.lang.String.format(format, *args)" @kind object;
  #L31ee42.  call `checkExpressionValueIsNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L31ee48.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ee4e.  throw v0;
  #L31ee50.  v0:= v10.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ee54.  call temp:= `V`(v0) @signature `Lokio/k;.V:()J` @kind virtual;
  #L31ee5a.  v0:= temp @kind wide;
  #L31ee5c.  return v0 @kind wide;
}
procedure `java.lang.String` `W`(`okio.c0` v13 @kind this, `long` v14 ) @signature `Lokio/c0;.W:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L31e7c4.  v0:= 0L;
  #L31e7c8.  v2:= lcmp(v14, v0);
  #L31e7cc.  if v2 < 0 then goto L31e7d4;
  #L31e7d0.  v0:= 1I;
  #L31e7d2.  goto L31e7d6;
  #L31e7d4.  v0:= 0I;
  #L31e7d6.  if v0 == 0 then goto L31e920;
  #L31e7da.  v0:= 1L;
  #L31e7de.  v2:= 9223372036854775807L;
  #L31e7e8.  v4:= lcmp(v14, v2);
  #L31e7ec.  if v4 != 0 then goto L31e7f4;
  #L31e7f0.  v4:= v2 @kind wide;
  #L31e7f2.  goto L31e7f8;
  #L31e7f4.  v4:= v14 + v0 @kind long;
  #L31e7f8.  v6:= 10I;
  #L31e7fc.  v12:= (`byte`) v6 @kind i2b;
  #L31e7fe.  v8:= 0L;
  #L31e802.  v6:= v13 @kind object;
  #L31e804.  v7:= v12;
  #L31e806.  v10:= v4 @kind wide;
  #L31e808.  call temp:= `c`(v6, v7, v8, v10) @signature `Lokio/c0;.c:(BJJ)J` @kind virtual;
  #L31e80e.  v6:= temp @kind wide;
  #L31e810.  v8:= -1L;
  #L31e814.  v10:= lcmp(v6, v8);
  #L31e818.  if v10 == 0 then goto L31e82a;
  #L31e81c.  v14:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e820.  call temp:= `b1`(v14, v6) @signature `Lokio/k;.b1:(J)Ljava/lang/String;` @kind virtual;
  #L31e826.  v14:= temp @kind object;
  #L31e828.  return v14 @kind object;
  #L31e82a.  v6:= lcmp(v4, v2);
  #L31e82e.  if v6 >= 0 then goto L31e884;
  #L31e832.  call temp:= `request`(v13, v4) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31e838.  v2:= temp;
  #L31e83a.  if v2 == 0 then goto L31e884;
  #L31e83e.  v2:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e842.  v6:= v4 - v0 @kind long;
  #L31e846.  call temp:= `K0`(v2, v6) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31e84c.  v2:= temp;
  #L31e84e.  v3:= 13I;
  #L31e852.  v3:= (`byte`) v3 @kind i2b;
  #L31e854.  if v2 != v3 then goto L31e884;
  #L31e858.  v0:= v0 + v4 @kind long;
  #L31e85a.  call temp:= `request`(v13, v0) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31e860.  v0:= temp;
  #L31e862.  if v0 == 0 then goto L31e884;
  #L31e866.  v0:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e86a.  call temp:= `K0`(v0, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31e870.  v0:= temp;
  #L31e872.  if v0 != v12 then goto L31e884;
  #L31e876.  v14:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e87a.  call temp:= `b1`(v14, v4) @signature `Lokio/k;.b1:(J)Ljava/lang/String;` @kind virtual;
  #L31e880.  v14:= temp @kind object;
  #L31e882.  return v14 @kind object;
  #L31e884.  v6:= new `okio.k`;
  #L31e888.  call `<init>`(v6) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L31e88e.  v0:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e892.  v2:= 0L;
  #L31e896.  v1:= 32I;
  #L31e89a.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e8a0.  v4:= temp @kind wide;
  #L31e8a2.  v7:= (`long`) v1 @kind i2l;
  #L31e8a4.  call temp:= `min`(v7, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31e8aa.  v4:= temp @kind wide;
  #L31e8ac.  v1:= v6 @kind object;
  #L31e8ae.  call temp:= `u0`(v0, v1, v2, v4) @signature `Lokio/k;.u0:(Lokio/k;JJ)Lokio/k;` @kind virtual;
  #L31e8b4.  v0:= new `java.io.EOFException`;
  #L31e8b8.  v1:= new `java.lang.StringBuilder`;
  #L31e8bc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e8c2.  v2:= "\\n not found: limit=" @kind object;
  #L31e8c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e8cc.  v2:= v13.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e8d0.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e8d6.  v2:= temp @kind wide;
  #L31e8d8.  call temp:= `min`(v2, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31e8de.  v14:= temp @kind wide;
  #L31e8e0.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e8e6.  v14:= " content=" @kind object;
  #L31e8ea.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e8f0.  call temp:= `U0`(v6) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L31e8f6.  v14:= temp @kind object;
  #L31e8f8.  call temp:= `hex`(v14) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L31e8fe.  v14:= temp @kind object;
  #L31e900.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e906.  v14:= "…" @kind object;
  #L31e90a.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e910.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e916.  v14:= temp @kind object;
  #L31e918.  call `<init>`(v0, v14) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e91e.  throw v0;
  #L31e920.  v0:= new `java.lang.StringBuilder`;
  #L31e924.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e92a.  v1:= "limit < 0: " @kind object;
  #L31e92e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e934.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e93a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e940.  v14:= temp @kind object;
  #L31e942.  v15:= new `java.lang.IllegalArgumentException`;
  #L31e946.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e94c.  v14:= temp @kind object;
  #L31e94e.  call `<init>`(v15, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e954.  throw v15;
}
procedure `long` `a`(`okio.c0` v6 @kind this, `byte` v7 ) @signature `Lokio/c0;.a:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31e9ac.  v2:= 0L;
  #L31e9b0.  v4:= 9223372036854775807L;
  #L31e9ba.  v0:= v6 @kind object;
  #L31e9bc.  v1:= v7;
  #L31e9be.  call temp:= `c`(v0, v1, v2, v4) @signature `Lokio/c0;.c:(BJJ)J` @kind virtual;
  #L31e9c4.  v0:= temp @kind wide;
  #L31e9c6.  return v0 @kind wide;
}
procedure `long` `c`(`okio.c0` v8 @kind this, `byte` v9 , `long` v10 , `long` v12 ) @signature `Lokio/c0;.c:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31e9d8.  v0:= v8.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e9dc.  v1:= 1I;
  #L31e9de.  v0:= v0 ^~ v1 @kind int;
  #L31e9e0.  if v0 == 0 then goto L31eab0;
  #L31e9e4.  v2:= 0L;
  #L31e9e8.  v0:= lcmp(v2, v10);
  #L31e9ec.  if v0 <= 0 then goto L31e9f2;
  #L31e9f0.  goto L31e9fc;
  #L31e9f2.  v0:= lcmp(v12, v10);
  #L31e9f6.  if v0 < 0 then goto L31e9fc;
  #L31e9fa.  goto L31e9fe;
  #L31e9fc.  v1:= 0I;
  #L31e9fe.  if v1 == 0 then goto L31ea6a;
  #L31ea02.  v0:= -1L;
  #L31ea06.  v2:= lcmp(v10, v12);
  #L31ea0a.  if v2 >= 0 then goto L31ea68;
  #L31ea0e.  v2:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ea12.  v3:= v9;
  #L31ea14.  v4:= v10 @kind wide;
  #L31ea16.  v6:= v12 @kind wide;
  #L31ea18.  call temp:= `N0`(v2, v3, v4, v6) @signature `Lokio/k;.N0:(BJJ)J` @kind virtual;
  #L31ea1e.  v2:= temp @kind wide;
  #L31ea20.  v4:= lcmp(v2, v0);
  #L31ea24.  if v4 == 0 then goto L31ea2a;
  #L31ea28.  return v2 @kind wide;
  #L31ea2a.  v2:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ea2e.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ea34.  v2:= temp @kind wide;
  #L31ea36.  v4:= lcmp(v2, v12);
  #L31ea3a.  if v4 >= 0 then goto L31ea68;
  #L31ea3e.  v4:= v8.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31ea42.  v5:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ea46.  v6:= 8192I;
  #L31ea4a.  v6:= (`long`) v6 @kind i2l;
  #L31ea4c.  call temp:= `read`(v4, v5, v6) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31ea52.  v4:= temp @kind wide;
  #L31ea54.  v6:= lcmp(v4, v0);
  #L31ea58.  if v6 != 0 then goto L31ea5e;
  #L31ea5c.  goto L31ea68;
  #L31ea5e.  call temp:= `max`(v10, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L31ea64.  v10:= temp @kind wide;
  #L31ea66.  goto L31ea02;
  #L31ea68.  return v0 @kind wide;
  #L31ea6a.  v9:= new `java.lang.StringBuilder`;
  #L31ea6e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ea74.  v0:= "fromIndex=" @kind object;
  #L31ea78.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ea7e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ea84.  v10:= " toIndex=" @kind object;
  #L31ea88.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ea8e.  call temp:= `append`(v9, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ea94.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ea9a.  v9:= temp @kind object;
  #L31ea9c.  v10:= new `java.lang.IllegalArgumentException`;
  #L31eaa0.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31eaa6.  v9:= temp @kind object;
  #L31eaa8.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31eaae.  throw v10;
  #L31eab0.  v9:= new `java.lang.IllegalStateException`;
  #L31eab4.  v10:= "closed" @kind object;
  #L31eab8.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31eabe.  v10:= temp @kind object;
  #L31eac0.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31eac6.  goto L31eaca;
  #L31eac8.  throw v9;
  #L31eaca.  goto L31eac8;
}
procedure `void` `close`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31f080.  v0:= v1.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31f084.  if v0 == 0 then goto L31f08a;
  #L31f088.  return @kind void;
  #L31f08a.  v0:= 1I;
  #L31f08c.  v1.`okio.c0.c` @type ^`boolean` := v0 @kind boolean;
  #L31f090.  v0:= v1.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31f094.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L31f09a.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f09e.  call `a`(v0) @signature `Lokio/k;.a:()V` @kind virtual;
  #L31f0a4.  return @kind void;
}
procedure `long` `d`(`okio.c0` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/c0;.d:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31eafc.  v0:= v8.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31eb00.  v0:= v0 ^~ 1;
  #L31eb04.  if v0 == 0 then goto L31eb6a;
  #L31eb08.  v0:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31eb0c.  call temp:= `O0`(v0, v9, v10) @signature `Lokio/k;.O0:(Lokio/ByteString;J)J` @kind virtual;
  #L31eb12.  v0:= temp @kind wide;
  #L31eb14.  v2:= -1L;
  #L31eb18.  v4:= lcmp(v0, v2);
  #L31eb1c.  if v4 == 0 then goto L31eb22;
  #L31eb20.  return v0 @kind wide;
  #L31eb22.  v0:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31eb26.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31eb2c.  v0:= temp @kind wide;
  #L31eb2e.  v4:= v8.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31eb32.  v5:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31eb36.  v6:= 8192I;
  #L31eb3a.  v6:= (`long`) v6 @kind i2l;
  #L31eb3c.  call temp:= `read`(v4, v5, v6) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31eb42.  v4:= temp @kind wide;
  #L31eb44.  v6:= lcmp(v4, v2);
  #L31eb48.  if v6 != 0 then goto L31eb4e;
  #L31eb4c.  return v2 @kind wide;
  #L31eb4e.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L31eb54.  v2:= temp;
  #L31eb56.  v2:= (`long`) v2 @kind i2l;
  #L31eb58.  v0:= v0 - v2 @kind long;
  #L31eb5a.  v2:= 1L;
  #L31eb5e.  v0:= v0 + v2 @kind long;
  #L31eb60.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L31eb66.  v10:= temp @kind wide;
  #L31eb68.  goto L31eb08;
  #L31eb6a.  v9:= new `java.lang.IllegalStateException`;
  #L31eb6e.  v10:= "closed" @kind object;
  #L31eb72.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31eb78.  v10:= temp @kind object;
  #L31eb7a.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31eb80.  goto L31eb84;
  #L31eb82.  throw v9;
  #L31eb84.  goto L31eb82;
}
procedure `boolean` `d0`(`okio.c0` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/c0;.d0:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31e40c.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L31e412.  v5:= temp;
  #L31e414.  v4:= 0I;
  #L31e416.  v0:= v6 @kind object;
  #L31e418.  v1:= v7 @kind wide;
  #L31e41a.  v3:= v9 @kind object;
  #L31e41c.  call temp:= `m`(v0, v1, v3, v4, v5) @signature `Lokio/c0;.m:(JLokio/ByteString;II)Z` @kind virtual;
  #L31e422.  v7:= temp;
  #L31e424.  return v7;
}
procedure `java.lang.String` `e0`(`okio.c0` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/c0;.e0:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e774.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e778.  v1:= v2.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e77c.  call temp:= `i0`(v0, v1) @signature `Lokio/k;.i0:(Lokio/i0;)J` @kind virtual;
  #L31e782.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e786.  call temp:= `e0`(v0, v3) @signature `Lokio/k;.e0:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L31e78c.  v3:= temp @kind object;
  #L31e78e.  return v3 @kind object;
}
procedure `okio.ByteString` `g`(`okio.c0` v1 @kind this, `long` v2 ) @signature `Lokio/c0;.g:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31efc0.  call `E0`(v1, v2) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31efc6.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31efca.  call temp:= `g`(v0, v2) @signature `Lokio/k;.g:(J)Lokio/ByteString;` @kind virtual;
  #L31efd0.  v2:= temp @kind object;
  #L31efd2.  return v2 @kind object;
}
procedure `boolean` `isOpen`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e3f0.  v0:= v1.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e3f4.  v0:= v0 ^~ 1;
  #L31e3f8.  return v0;
}
procedure `long` `k`(`okio.c0` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/c0;.k:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31ebb8.  v0:= v8.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31ebbc.  v0:= v0 ^~ 1;
  #L31ebc0.  if v0 == 0 then goto L31ec14;
  #L31ebc4.  v0:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ebc8.  call temp:= `P0`(v0, v9, v10) @signature `Lokio/k;.P0:(Lokio/ByteString;J)J` @kind virtual;
  #L31ebce.  v0:= temp @kind wide;
  #L31ebd0.  v2:= -1L;
  #L31ebd4.  v4:= lcmp(v0, v2);
  #L31ebd8.  if v4 == 0 then goto L31ebde;
  #L31ebdc.  return v0 @kind wide;
  #L31ebde.  v0:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ebe2.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ebe8.  v0:= temp @kind wide;
  #L31ebea.  v4:= v8.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31ebee.  v5:= v8.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ebf2.  v6:= 8192I;
  #L31ebf6.  v6:= (`long`) v6 @kind i2l;
  #L31ebf8.  call temp:= `read`(v4, v5, v6) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31ebfe.  v4:= temp @kind wide;
  #L31ec00.  v6:= lcmp(v4, v2);
  #L31ec04.  if v6 != 0 then goto L31ec0a;
  #L31ec08.  return v2 @kind wide;
  #L31ec0a.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L31ec10.  v10:= temp @kind wide;
  #L31ec12.  goto L31ebc4;
  #L31ec14.  v9:= new `java.lang.IllegalStateException`;
  #L31ec18.  v10:= "closed" @kind object;
  #L31ec1c.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ec22.  v10:= temp @kind object;
  #L31ec24.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ec2a.  goto L31ec2e;
  #L31ec2c.  throw v9;
  #L31ec2e.  goto L31ec2c;
}
procedure `boolean` `m`(`okio.c0` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/c0;.m:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31e438.  v0:= v7.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e43c.  v1:= 1I;
  #L31e43e.  v0:= v0 ^~ v1 @kind int;
  #L31e440.  if v0 == 0 then goto L31e4b0;
  #L31e444.  v2:= 0L;
  #L31e448.  v0:= 0I;
  #L31e44a.  v4:= lcmp(v8, v2);
  #L31e44e.  if v4 < 0 then goto L31e4ae;
  #L31e452.  if v11 < 0 then goto L31e4ae;
  #L31e456.  if v12 < 0 then goto L31e4ae;
  #L31e45a.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L31e460.  v2:= temp;
  #L31e462.  v2:= v2 - v11 @kind int;
  #L31e464.  if v2 >= v12 then goto L31e46a;
  #L31e468.  goto L31e4ae;
  #L31e46a.  v2:= 0I;
  #L31e46c.  if v2 >= v12 then goto L31e4ac;
  #L31e470.  v3:= (`long`) v2 @kind i2l;
  #L31e472.  v3:= v3 + v8 @kind long;
  #L31e474.  v5:= 1L;
  #L31e478.  v5:= v5 + v3 @kind long;
  #L31e47a.  call temp:= `request`(v7, v5) @signature `Lokio/c0;.request:(J)Z` @kind virtual;
  #L31e480.  v5:= temp;
  #L31e482.  if v5 != 0 then goto L31e488;
  #L31e486.  return v0;
  #L31e488.  v5:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e48c.  call temp:= `K0`(v5, v3) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31e492.  v3:= temp;
  #L31e494.  v4:= v11 + v2 @kind int;
  #L31e498.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L31e49e.  v4:= temp;
  #L31e4a0.  if v3 == v4 then goto L31e4a6;
  #L31e4a4.  return v0;
  #L31e4a6.  v2:= v2 + 1;
  #L31e4aa.  goto L31e46c;
  #L31e4ac.  return v1;
  #L31e4ae.  return v0;
  #L31e4b0.  v8:= new `java.lang.IllegalStateException`;
  #L31e4b4.  v9:= "closed" @kind object;
  #L31e4b8.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e4be.  v9:= temp @kind object;
  #L31e4c0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e4c6.  goto L31e4ca;
  #L31e4c8.  throw v8;
  #L31e4ca.  goto L31e4c8;
}
procedure `java.lang.String` `n0`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.n0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e7a0.  v0:= 9223372036854775807L;
  #L31e7aa.  call temp:= `W`(v2, v0) @signature `Lokio/c0;.W:(J)Ljava/lang/String;` @kind virtual;
  #L31e7b0.  v0:= temp @kind object;
  #L31e7b2.  return v0 @kind object;
}
procedure `int` `o`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.o:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e698.  v0:= 4L;
  #L31e69c.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31e6a2.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e6a6.  call temp:= `V0`(v0) @signature `Lokio/k;.V0:()I` @kind virtual;
  #L31e6ac.  v0:= temp;
  #L31e6ae.  return v0;
}
procedure `byte`[] `p0`(`okio.c0` v1 @kind this, `long` v2 ) @signature `Lokio/c0;.p0:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e5f0.  call `E0`(v1, v2) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31e5f6.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e5fa.  call temp:= `p0`(v0, v2) @signature `Lokio/k;.p0:(J)[B` @kind virtual;
  #L31e600.  v2:= temp @kind object;
  #L31e602.  return v2 @kind object;
}
procedure `okio.o` `peek`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.peek:()Lokio/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31ef9c.  v0:= new `okio.z`;
  #L31efa0.  call `<init>`(v0, v1) @signature `Lokio/z;.<init>:(Lokio/o;)V` @kind direct;
  #L31efa6.  call temp:= `d`(v0) @signature `Lokio/v;.d:(Lokio/i0;)Lokio/o;` @kind static;
  #L31efac.  v0:= temp @kind object;
  #L31efae.  return v0 @kind object;
}
procedure `okio.k` `q`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.q:()Lokio/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31ef6c.  v0:= v1.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ef70.  return v0 @kind object;
}
procedure `int` `read`(`okio.c0` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lokio/c0;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31e614.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e618.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e61e.  v0:= temp @kind wide;
  #L31e620.  v2:= 0L;
  #L31e624.  v4:= lcmp(v0, v2);
  #L31e628.  if v4 != 0 then goto L31e652;
  #L31e62c.  v0:= v5.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e630.  v1:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e634.  v2:= 8192I;
  #L31e638.  v2:= (`long`) v2 @kind i2l;
  #L31e63a.  call temp:= `read`(v0, v1, v2) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31e640.  v0:= temp @kind wide;
  #L31e642.  v2:= -1L;
  #L31e646.  v4:= lcmp(v0, v2);
  #L31e64a.  if v4 != 0 then goto L31e652;
  #L31e64e.  v6:= -1I;
  #L31e650.  return v6;
  #L31e652.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e656.  call temp:= `read`(v0, v6) @signature `Lokio/k;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L31e65c.  v6:= temp;
  #L31e65e.  return v6;
}
procedure `long` `read`(`okio.c0` v5 @kind this, `okio.k` v6 @kind object, `long` v7 ) @signature `Lokio/c0;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31ec40.  v0:= 1I;
  #L31ec42.  v1:= 0L;
  #L31ec46.  v3:= lcmp(v7, v1);
  #L31ec4a.  if v3 < 0 then goto L31ec52;
  #L31ec4e.  v3:= 1I;
  #L31ec50.  goto L31ec54;
  #L31ec52.  v3:= 0I;
  #L31ec54.  if v3 == 0 then goto L31ecd4;
  #L31ec58.  v3:= v5.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31ec5c.  v0:= v0 ^~ v3 @kind int;
  #L31ec5e.  if v0 == 0 then goto L31ecbc;
  #L31ec62.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ec66.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ec6c.  v3:= temp @kind wide;
  #L31ec6e.  v0:= lcmp(v3, v1);
  #L31ec72.  if v0 != 0 then goto L31ec9a;
  #L31ec76.  v0:= v5.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31ec7a.  v1:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ec7e.  v2:= 8192I;
  #L31ec82.  v2:= (`long`) v2 @kind i2l;
  #L31ec84.  call temp:= `read`(v0, v1, v2) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31ec8a.  v0:= temp @kind wide;
  #L31ec8c.  v2:= -1L;
  #L31ec90.  v4:= lcmp(v0, v2);
  #L31ec94.  if v4 != 0 then goto L31ec9a;
  #L31ec98.  return v2 @kind wide;
  #L31ec9a.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ec9e.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31eca4.  v0:= temp @kind wide;
  #L31eca6.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31ecac.  v7:= temp @kind wide;
  #L31ecae.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ecb2.  call temp:= `read`(v0, v6, v7) @signature `Lokio/k;.read:(Lokio/k;J)J` @kind virtual;
  #L31ecb8.  v6:= temp @kind wide;
  #L31ecba.  return v6 @kind wide;
  #L31ecbc.  v6:= new `java.lang.IllegalStateException`;
  #L31ecc0.  v7:= "closed" @kind object;
  #L31ecc4.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ecca.  v7:= temp @kind object;
  #L31eccc.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ecd2.  throw v6;
  #L31ecd4.  v6:= new `java.lang.StringBuilder`;
  #L31ecd8.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ecde.  v0:= "byteCount < 0: " @kind object;
  #L31ece2.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ece8.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ecee.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ecf4.  v6:= temp @kind object;
  #L31ecf6.  v7:= new `java.lang.IllegalArgumentException`;
  #L31ecfa.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ed00.  v6:= temp @kind object;
  #L31ed02.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ed08.  throw v7;
}
procedure `byte` `readByte`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e59c.  v0:= 1L;
  #L31e5a0.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31e5a6.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e5aa.  call temp:= `readByte`(v0) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L31e5b0.  v0:= temp;
  #L31e5b2.  return v0;
}
procedure `void` `readFully`(`okio.c0` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokio/c0;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31f0b8.  v0:= length @variable v8;
  #L31f0ba.  v0:= (`long`) v0 @kind i2l;
  #L31f0bc.  call `E0`(v7, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31f0c2.  v0:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f0c6.  call `readFully`(v0, v8) @signature `Lokio/k;.readFully:([B)V` @kind virtual;
  #L31f0cc.  return @kind void;
  #L31f0ce.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L31f0d0.  v1:= 0I;
  #L31f0d2.  v2:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f0d6.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31f0dc.  v2:= temp @kind wide;
  #L31f0de.  v4:= 0L;
  #L31f0e2.  v6:= lcmp(v2, v4);
  #L31f0e6.  if v6 <= 0 then goto L31f116;
  #L31f0ea.  v2:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f0ee.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31f0f4.  v3:= temp @kind wide;
  #L31f0f6.  v4:= (`int`) v3 @kind l2i;
  #L31f0f8.  call temp:= `read`(v2, v8, v1, v4) @signature `Lokio/k;.read:([BII)I` @kind virtual;
  #L31f0fe.  v2:= temp;
  #L31f100.  v3:= -1I;
  #L31f102.  if v2 == v3 then goto L31f10a;
  #L31f106.  v1:= v1 + v2 @kind int;
  #L31f108.  goto L31f0d2;
  #L31f10a.  v8:= new `java.lang.AssertionError`;
  #L31f10e.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31f114.  throw v8;
  #L31f116.  goto L31f11a;
  #L31f118.  throw v0;
  #L31f11a.  goto L31f118;
  catch `java.io.EOFException` @[L31f0b8..L31f0c2] goto L31f0ce;
}
procedure `int` `readInt`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e670.  v0:= 4L;
  #L31e674.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31e67a.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e67e.  call temp:= `readInt`(v0) @signature `Lokio/k;.readInt:()I` @kind virtual;
  #L31e684.  v0:= temp;
  #L31e686.  return v0;
}
procedure `long` `readLong`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31ef44.  v0:= 8L;
  #L31ef48.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31ef4e.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ef52.  call temp:= `readLong`(v0) @signature `Lokio/k;.readLong:()J` @kind virtual;
  #L31ef58.  v0:= temp @kind wide;
  #L31ef5a.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31f004.  v0:= 2L;
  #L31f008.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31f00e.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f012.  call temp:= `readShort`(v0) @signature `Lokio/k;.readShort:()S` @kind virtual;
  #L31f018.  v0:= temp;
  #L31f01a.  return v0;
}
procedure `boolean` `request`(`okio.c0` v7 @kind this, `long` v8 ) @signature `Lokio/c0;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31e4dc.  v0:= 0I;
  #L31e4de.  v1:= 1I;
  #L31e4e0.  v2:= 0L;
  #L31e4e4.  v4:= lcmp(v8, v2);
  #L31e4e8.  if v4 < 0 then goto L31e4f0;
  #L31e4ec.  v2:= 1I;
  #L31e4ee.  goto L31e4f2;
  #L31e4f0.  v2:= 0I;
  #L31e4f2.  if v2 == 0 then goto L31e552;
  #L31e4f6.  v2:= v7.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31e4fa.  v2:= v2 ^~ v1 @kind int;
  #L31e4fc.  if v2 == 0 then goto L31e53a;
  #L31e500.  v2:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e504.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e50a.  v2:= temp @kind wide;
  #L31e50c.  v4:= lcmp(v2, v8);
  #L31e510.  if v4 >= 0 then goto L31e538;
  #L31e514.  v2:= v7.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e518.  v3:= v7.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31e51c.  v4:= 8192I;
  #L31e520.  v4:= (`long`) v4 @kind i2l;
  #L31e522.  call temp:= `read`(v2, v3, v4) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31e528.  v2:= temp @kind wide;
  #L31e52a.  v4:= -1L;
  #L31e52e.  v6:= lcmp(v2, v4);
  #L31e532.  if v6 != 0 then goto L31e500;
  #L31e536.  return v0;
  #L31e538.  return v1;
  #L31e53a.  v8:= new `java.lang.IllegalStateException`;
  #L31e53e.  v9:= "closed" @kind object;
  #L31e542.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e548.  v9:= temp @kind object;
  #L31e54a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e550.  throw v8;
  #L31e552.  v0:= new `java.lang.StringBuilder`;
  #L31e556.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e55c.  v1:= "byteCount < 0: " @kind object;
  #L31e560.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e566.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e56c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e572.  v8:= temp @kind object;
  #L31e574.  v9:= new `java.lang.IllegalArgumentException`;
  #L31e578.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e57e.  v8:= temp @kind object;
  #L31e580.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e586.  goto L31e58a;
  #L31e588.  throw v9;
  #L31e58a.  goto L31e588;
}
procedure `short` `s`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.s:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31f02c.  v0:= 2L;
  #L31f030.  call `E0`(v2, v0) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31f036.  v0:= v2.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f03a.  call temp:= `W0`(v0) @signature `Lokio/k;.W0:()S` @kind virtual;
  #L31f040.  v0:= temp;
  #L31f042.  return v0;
}
procedure `void` `skip`(`okio.c0` v5 @kind this, `long` v6 ) @signature `Lokio/c0;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31f1a8.  v0:= v5.`okio.c0.c` @type ^`boolean` @kind boolean;
  #L31f1ac.  v0:= v0 ^~ 1;
  #L31f1b0.  if v0 == 0 then goto L31f228;
  #L31f1b4.  v0:= 0L;
  #L31f1b8.  v2:= lcmp(v6, v0);
  #L31f1bc.  if v2 <= 0 then goto L31f226;
  #L31f1c0.  v2:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f1c4.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31f1ca.  v2:= temp @kind wide;
  #L31f1cc.  v4:= lcmp(v2, v0);
  #L31f1d0.  if v4 != 0 then goto L31f204;
  #L31f1d4.  v0:= v5.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31f1d8.  v1:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f1dc.  v2:= 8192I;
  #L31f1e0.  v2:= (`long`) v2 @kind i2l;
  #L31f1e2.  call temp:= `read`(v0, v1, v2) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31f1e8.  v0:= temp @kind wide;
  #L31f1ea.  v2:= -1L;
  #L31f1ee.  v4:= lcmp(v0, v2);
  #L31f1f2.  if v4 == 0 then goto L31f1f8;
  #L31f1f6.  goto L31f204;
  #L31f1f8.  v6:= new `java.io.EOFException`;
  #L31f1fc.  call `<init>`(v6) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L31f202.  throw v6;
  #L31f204.  v0:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f208.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31f20e.  v0:= temp @kind wide;
  #L31f210.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31f216.  v0:= temp @kind wide;
  #L31f218.  v2:= v5.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31f21c.  call `skip`(v2, v0) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L31f222.  v6:= v6 - v0 @kind long;
  #L31f224.  goto L31f1b4;
  #L31f226.  return @kind void;
  #L31f228.  v6:= new `java.lang.IllegalStateException`;
  #L31f22c.  v7:= "closed" @kind object;
  #L31f230.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31f236.  v7:= temp @kind object;
  #L31f238.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31f23e.  goto L31f242;
  #L31f240.  throw v6;
  #L31f242.  goto L31f240;
}
procedure `okio.l0` `timeout`(`okio.c0` v1 @kind this) @signature `Lokio/c0;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31efe4.  v0:= v1.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31efe8.  call temp:= `timeout`(v0) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L31efee.  v0:= temp @kind object;
  #L31eff0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.c0` v2 @kind this) @signature `Lokio/c0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31e968.  v0:= new `java.lang.StringBuilder`;
  #L31e96c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e972.  v1:= "buffer(" @kind object;
  #L31e976.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e97c.  v1:= v2.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31e980.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e986.  v1:= 41I;
  #L31e98a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e990.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e996.  v0:= temp @kind object;
  #L31e998.  return v0 @kind object;
}
procedure `long` `y0`(`okio.c0` v9 @kind this, `okio.g0` v10 @kind object) @signature `Lokio/c0;.y0:(Lokio/g0;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L31ed1c.  v0:= 0L;
  #L31ed20.  v2:= v0 @kind wide;
  #L31ed22.  v4:= v9.`okio.c0.d` @type ^`okio.i0` @kind object;
  #L31ed26.  v5:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed2a.  v6:= 8192I;
  #L31ed2e.  v6:= (`long`) v6 @kind i2l;
  #L31ed30.  call temp:= `read`(v4, v5, v6) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31ed36.  v4:= temp @kind wide;
  #L31ed38.  v6:= -1L;
  #L31ed3c.  v8:= lcmp(v4, v6);
  #L31ed40.  if v8 == 0 then goto L31ed66;
  #L31ed44.  v4:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed48.  call temp:= `k`(v4) @signature `Lokio/k;.k:()J` @kind virtual;
  #L31ed4e.  v4:= temp @kind wide;
  #L31ed50.  v6:= lcmp(v4, v0);
  #L31ed54.  if v6 <= 0 then goto L31ed22;
  #L31ed58.  v2:= v2 + v4 @kind long;
  #L31ed5a.  v6:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed5e.  call `write`(v10, v6, v4) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31ed64.  goto L31ed22;
  #L31ed66.  v4:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed6a.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ed70.  v4:= temp @kind wide;
  #L31ed72.  v6:= lcmp(v4, v0);
  #L31ed76.  if v6 <= 0 then goto L31ed9a;
  #L31ed7a.  v0:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed7e.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ed84.  v0:= temp @kind wide;
  #L31ed86.  v2:= v2 + v0 @kind long;
  #L31ed88.  v0:= v9.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31ed8c.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31ed92.  v4:= temp @kind wide;
  #L31ed94.  call `write`(v10, v0, v4) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31ed9a.  return v2 @kind wide;
}
