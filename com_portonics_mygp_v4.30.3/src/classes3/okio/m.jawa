record `okio.m` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.OutputStream` @kind class {
  `okio.k` `okio.m.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.m` v0 @kind this, `okio.k` v1 @kind object) @signature `Lokio/m;.<init>:(Lokio/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L318ec8.  v0.`okio.m.b` @type ^`okio.k` := v1 @kind object;
  #L318ecc.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L318ed2.  return @kind void;
}
procedure `void` `close`(`okio.m` v0 @kind this) @signature `Lokio/m;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L318ee4.  return @kind void;
}
procedure `void` `flush`(`okio.m` v0 @kind this) @signature `Lokio/m;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L318ef8.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.m` v2 @kind this) @signature `Lokio/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L318e90.  v0:= new `java.lang.StringBuilder`;
  #L318e94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L318e9a.  v1:= v2.`okio.m.b` @type ^`okio.k` @kind object;
  #L318e9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L318ea4.  v1:= ".outputStream()" @kind object;
  #L318ea8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L318eae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L318eb4.  v0:= temp @kind object;
  #L318eb6.  return v0 @kind object;
}
procedure `void` `write`(`okio.m` v1 @kind this, `int` v2 ) @signature `Lokio/m;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L318f28.  v0:= v1.`okio.m.b` @type ^`okio.k` @kind object;
  #L318f2c.  call temp:= `n1`(v0, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L318f32.  return @kind void;
}
procedure `void` `write`(`okio.m` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/m;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L318f0c.  v0:= v1.`okio.m.b` @type ^`okio.k` @kind object;
  #L318f10.  call temp:= `l1`(v0, v2, v3, v4) @signature `Lokio/k;.l1:([BII)Lokio/k;` @kind virtual;
  #L318f16.  return @kind void;
}
