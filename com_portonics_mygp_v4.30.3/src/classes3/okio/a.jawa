record `okio.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `byte`[] `@@okio.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L317dcc.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$a` @kind object;
  #L317dd0.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @kind object;
  #L317dd4.  call temp:= `d`(v0, v1) @signature `Lokio/ByteString$a;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L317dda.  v1:= temp @kind object;
  #L317ddc.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L317de2.  v1:= temp @kind object;
  #L317de4.  `@@okio.a.a` @type ^`byte`[] := v1 @kind object;
  #L317de8.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" @kind object;
  #L317dec.  call temp:= `d`(v0, v1) @signature `Lokio/ByteString$a;.d:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L317df2.  v0:= temp @kind object;
  #L317df4.  call temp:= `getData$jvm`(v0) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L317dfa.  v0:= temp @kind object;
  #L317dfc.  `@@okio.a.b` @type ^`byte`[] := v0 @kind object;
  #L317e00.  return @kind void;
}
procedure `byte`[] `a`(`java.lang.String` v16 @kind object) @signature `Lokio/a;.a:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L317a78.  v0:= v16 @kind object;
  #L317a7c.  call temp:= `length`(v16) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L317a82.  v1:= temp;
  #L317a84.  v2:= 9I;
  #L317a88.  v3:= 32I;
  #L317a8c.  v4:= 13I;
  #L317a90.  v5:= 10I;
  #L317a94.  if v1 <= 0 then goto L317ac4;
  #L317a98.  v6:= v1 + -1;
  #L317a9c.  call temp:= `charAt`(v0, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L317aa2.  v6:= temp;
  #L317aa4.  v7:= 61I;
  #L317aa8.  if v6 == v7 then goto L317abe;
  #L317aac.  if v6 == v5 then goto L317abe;
  #L317ab0.  if v6 == v4 then goto L317abe;
  #L317ab4.  if v6 == v3 then goto L317abe;
  #L317ab8.  if v6 == v2 then goto L317abe;
  #L317abc.  goto L317ac4;
  #L317abe.  v1:= v1 + -1;
  #L317ac2.  goto L317a84;
  #L317ac4.  v6:= (`long`) v1 @kind i2l;
  #L317ac6.  v8:= 6L;
  #L317aca.  v6:= v6 * v8 @kind long;
  #L317ace.  v8:= 8L;
  #L317ad2.  v6:= v6 / v8 @kind long;
  #L317ad4.  v7:= (`int`) v6 @kind l2i;
  #L317ad6.  v6:= new `byte`[v7];
  #L317ada.  v9:= 0I;
  #L317adc.  v10:= 0I;
  #L317ade.  v11:= 0I;
  #L317ae0.  v12:= 0I;
  #L317ae2.  v13:= 0I;
  #L317ae4.  if v9 >= v1 then goto L317bbc;
  #L317ae8.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L317aee.  v14:= temp;
  #L317af0.  v15:= 90I;
  #L317af4.  v8:= 65I;
  #L317af8.  if v8 <= v14 then goto L317afe;
  #L317afc.  goto L317b08;
  #L317afe.  if v15 < v14 then goto L317b08;
  #L317b02.  v14:= v14 + -65;
  #L317b06.  goto L317b7a;
  #L317b08.  v8:= 122I;
  #L317b0c.  v15:= 97I;
  #L317b10.  if v15 <= v14 then goto L317b16;
  #L317b14.  goto L317b20;
  #L317b16.  if v8 < v14 then goto L317b20;
  #L317b1a.  v14:= v14 + -71;
  #L317b1e.  goto L317b7a;
  #L317b20.  v8:= 57I;
  #L317b24.  v15:= 48I;
  #L317b28.  if v15 <= v14 then goto L317b2e;
  #L317b2c.  goto L317b38;
  #L317b2e.  if v8 < v14 then goto L317b38;
  #L317b32.  v14:= v14 + 4;
  #L317b36.  goto L317b7a;
  #L317b38.  v8:= 43I;
  #L317b3c.  if v14 == v8 then goto L317b76;
  #L317b40.  v8:= 45I;
  #L317b44.  if v14 != v8 then goto L317b4a;
  #L317b48.  goto L317b76;
  #L317b4a.  v8:= 47I;
  #L317b4e.  if v14 == v8 then goto L317b70;
  #L317b52.  v8:= 95I;
  #L317b56.  if v14 != v8 then goto L317b5c;
  #L317b5a.  goto L317b70;
  #L317b5c.  if v14 == v5 then goto L317bb6;
  #L317b60.  if v14 == v4 then goto L317bb6;
  #L317b64.  if v14 == v3 then goto L317bb6;
  #L317b68.  if v14 != v2 then goto L317b6e;
  #L317b6c.  goto L317bb6;
  #L317b6e.  return v13 @kind object;
  #L317b70.  v14:= 63I;
  #L317b74.  goto L317b7a;
  #L317b76.  v14:= 62I;
  #L317b7a.  v8:= v11 ^< 6;
  #L317b7e.  v11:= v8 ^| v14 @kind int;
  #L317b82.  v10:= v10 + 1;
  #L317b86.  v8:= v10 %% 4;
  #L317b8a.  if v8 != 0 then goto L317bb6;
  #L317b8e.  v8:= v12 + 1;
  #L317b92.  v13:= v11 ^> 16;
  #L317b96.  v13:= (`byte`) v13 @kind i2b;
  #L317b98.  v6[v12]:= v13 @kind byte;
  #L317b9c.  v12:= v8 + 1;
  #L317ba0.  v13:= v11 ^> 8;
  #L317ba4.  v13:= (`byte`) v13 @kind i2b;
  #L317ba6.  v6[v8]:= v13 @kind byte;
  #L317baa.  v8:= v12 + 1;
  #L317bae.  v13:= (`byte`) v11 @kind i2b;
  #L317bb0.  v6[v12]:= v13 @kind byte;
  #L317bb4.  v12:= v8;
  #L317bb6.  v9:= v9 + 1;
  #L317bba.  goto L317ae2;
  #L317bbc.  v10:= v10 %% 4;
  #L317bc0.  v0:= 1I;
  #L317bc2.  if v10 == v0 then goto L317c1e;
  #L317bc6.  v0:= 2I;
  #L317bc8.  if v10 == v0 then goto L317bf6;
  #L317bcc.  v0:= 3I;
  #L317bce.  if v10 == v0 then goto L317bd4;
  #L317bd2.  goto L317c0a;
  #L317bd4.  v0:= v11 ^< 6;
  #L317bd8.  v1:= v12 + 1;
  #L317bdc.  v2:= v0 ^> 16;
  #L317be0.  v2:= (`byte`) v2 @kind i2b;
  #L317be2.  v6[v12]:= v2 @kind byte;
  #L317be6.  v12:= v1 + 1;
  #L317bea.  v0:= v0 ^> 8;
  #L317bee.  v0:= (`byte`) v0 @kind i2b;
  #L317bf0.  v6[v1]:= v0 @kind byte;
  #L317bf4.  goto L317c0a;
  #L317bf6.  v0:= v11 ^< 12;
  #L317bfa.  v1:= v12 + 1;
  #L317bfe.  v0:= v0 ^> 16;
  #L317c02.  v0:= (`byte`) v0 @kind i2b;
  #L317c04.  v6[v12]:= v0 @kind byte;
  #L317c08.  v12:= v1;
  #L317c0a.  if v12 != v7 then goto L317c10;
  #L317c0e.  return v6 @kind object;
  #L317c10.  v0:= new `byte`[v12];
  #L317c14.  v1:= 0I;
  #L317c16.  call `a`(v6, v1, v0, v1, v12) @signature `Lokio/b;.a:([BI[BII)V` @kind static;
  #L317c1c.  return v0 @kind object;
  #L317c1e.  return v13 @kind object;
}
procedure `java.lang.String` `b`(`byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lokio/a;.b:([B[B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L317c70.  v0:= length @variable v10;
  #L317c72.  v1:= 2I;
  #L317c74.  v0:= v0 + v1 @kind int;
  #L317c76.  v0:= v0 / 3;
  #L317c7a.  v0:= v0 * 4;
  #L317c7e.  v0:= new `byte`[v0];
  #L317c82.  v2:= length @variable v10;
  #L317c84.  v3:= length @variable v10;
  #L317c86.  v3:= v3 %% 3;
  #L317c8a.  v2:= v2 - v3 @kind int;
  #L317c8c.  v3:= 0I;
  #L317c8e.  v4:= 0I;
  #L317c90.  if v3 >= v2 then goto L317d0c;
  #L317c94.  v5:= v3 + 1;
  #L317c98.  v3:= v10[v3] @kind byte;
  #L317c9c.  v6:= v5 + 1;
  #L317ca0.  v5:= v10[v5] @kind byte;
  #L317ca4.  v7:= v6 + 1;
  #L317ca8.  v6:= v10[v6] @kind byte;
  #L317cac.  v8:= v4 + 1;
  #L317cb0.  v9:= v3 ^& 255;
  #L317cb4.  v9:= v9 ^> v1 @kind int;
  #L317cb6.  v9:= v11[v9] @kind byte;
  #L317cba.  v0[v4]:= v9 @kind byte;
  #L317cbe.  v4:= v8 + 1;
  #L317cc2.  v3:= v3 ^& 3;
  #L317cc6.  v3:= v3 ^< 4;
  #L317cca.  v9:= v5 ^& 255;
  #L317cce.  v9:= v9 ^> 4;
  #L317cd2.  v3:= v3 ^| v9 @kind int;
  #L317cd4.  v3:= v11[v3] @kind byte;
  #L317cd8.  v0[v8]:= v3 @kind byte;
  #L317cdc.  v3:= v4 + 1;
  #L317ce0.  v5:= v5 ^& 15;
  #L317ce4.  v5:= v5 ^< v1 @kind int;
  #L317ce6.  v8:= v6 ^& 255;
  #L317cea.  v8:= v8 ^> 6;
  #L317cee.  v5:= v5 ^| v8 @kind int;
  #L317cf0.  v5:= v11[v5] @kind byte;
  #L317cf4.  v0[v4]:= v5 @kind byte;
  #L317cf8.  v4:= v3 + 1;
  #L317cfc.  v5:= v6 ^& 63;
  #L317d00.  v5:= v11[v5] @kind byte;
  #L317d04.  v0[v3]:= v5 @kind byte;
  #L317d08.  v3:= v7;
  #L317d0a.  goto L317c90;
  #L317d0c.  v5:= length @variable v10;
  #L317d0e.  v5:= v5 - v2 @kind int;
  #L317d10.  v2:= 61I;
  #L317d14.  v6:= 1I;
  #L317d16.  if v5 == v6 then goto L317d76;
  #L317d1a.  if v5 == v1 then goto L317d20;
  #L317d1e.  goto L317db0;
  #L317d20.  v5:= v3 + 1;
  #L317d24.  v3:= v10[v3] @kind byte;
  #L317d28.  v10:= v10[v5] @kind byte;
  #L317d2c.  v5:= v4 + 1;
  #L317d30.  v6:= v3 ^& 255;
  #L317d34.  v6:= v6 ^> v1 @kind int;
  #L317d36.  v6:= v11[v6] @kind byte;
  #L317d3a.  v0[v4]:= v6 @kind byte;
  #L317d3e.  v4:= v5 + 1;
  #L317d42.  v3:= v3 ^& 3;
  #L317d46.  v3:= v3 ^< 4;
  #L317d4a.  v6:= v10 ^& 255;
  #L317d4e.  v6:= v6 ^> 4;
  #L317d52.  v3:= v3 ^| v6 @kind int;
  #L317d54.  v3:= v11[v3] @kind byte;
  #L317d58.  v0[v5]:= v3 @kind byte;
  #L317d5c.  v3:= v4 + 1;
  #L317d60.  v10:= v10 ^& 15;
  #L317d64.  v10:= v10 ^< v1 @kind int;
  #L317d66.  v10:= v11[v10] @kind byte;
  #L317d6a.  v0[v4]:= v10 @kind byte;
  #L317d6e.  v10:= (`byte`) v2 @kind i2b;
  #L317d70.  v0[v3]:= v10 @kind byte;
  #L317d74.  goto L317db0;
  #L317d76.  v10:= v10[v3] @kind byte;
  #L317d7a.  v3:= v4 + 1;
  #L317d7e.  v5:= v10 ^& 255;
  #L317d82.  v1:= v5 ^> 2;
  #L317d86.  v1:= v11[v1] @kind byte;
  #L317d8a.  v0[v4]:= v1 @kind byte;
  #L317d8e.  v1:= v3 + 1;
  #L317d92.  v10:= v10 ^& 3;
  #L317d96.  v10:= v10 ^< 4;
  #L317d9a.  v10:= v11[v10] @kind byte;
  #L317d9e.  v0[v3]:= v10 @kind byte;
  #L317da2.  v10:= v1 + 1;
  #L317da6.  v11:= (`byte`) v2 @kind i2b;
  #L317da8.  v0[v1]:= v11 @kind byte;
  #L317dac.  v0[v10]:= v11 @kind byte;
  #L317db0.  call temp:= `c`(v0) @signature `Lokio/b;.c:([B)Ljava/lang/String;` @kind static;
  #L317db6.  v10:= temp @kind object;
  #L317db8.  return v10 @kind object;
}
procedure `java.lang.String` `c`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokio/a;.c:([B[BILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L317c48.  v2:= v2 ^& 1;
  #L317c4c.  if v2 == 0 then goto L317c54;
  #L317c50.  v1:= `@@okio.a.a` @type ^`byte`[] @kind object;
  #L317c54.  call temp:= `b`(v0, v1) @signature `Lokio/a;.b:([B[B)Ljava/lang/String;` @kind static;
  #L317c5a.  v0:= temp @kind object;
  #L317c5c.  return v0 @kind object;
}
procedure `byte`[] `d`() @signature `Lokio/a;.d:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L317c30.  v0:= `@@okio.a.b` @type ^`byte`[] @kind object;
  #L317c34.  return v0 @kind object;
}
