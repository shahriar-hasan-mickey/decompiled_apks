record `okio.a0` @kind class @AccessFlag PUBLIC_FINAL extends `okio.n` @kind interface {
  `okio.k` `okio.a0.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.a0.c` @AccessFlag PUBLIC;
  `okio.g0` `okio.a0.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.a0` v0 @kind this, `okio.g0` v1 @kind object) @signature `Lokio/a0;.<init>:(Lokio/g0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31e044.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31e04a.  v0.`okio.a0.d` @type ^`okio.g0` := v1 @kind object;
  #L31e04e.  v1:= new `okio.k`;
  #L31e052.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L31e058.  v0.`okio.a0.b` @type ^`okio.k` := v1 @kind object;
  #L31e05c.  return @kind void;
}
procedure `okio.n` `F0`(`okio.a0` v1 @kind this, `long` v2 ) @signature `Lokio/a0;.F0:(J)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31de74.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31de78.  v0:= v0 ^~ 1;
  #L31de7c.  if v0 == 0 then goto L31de94;
  #L31de80.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31de84.  call temp:= `o1`(v0, v2) @signature `Lokio/k;.o1:(J)Lokio/k;` @kind virtual;
  #L31de8a.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31de90.  v2:= temp @kind object;
  #L31de92.  return v2 @kind object;
  #L31de94.  v2:= new `java.lang.IllegalStateException`;
  #L31de98.  v3:= "closed" @kind object;
  #L31de9c.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dea2.  v3:= temp @kind object;
  #L31dea4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31deaa.  throw v2;
}
procedure `okio.n` `G`(`okio.a0` v5 @kind this) @signature `Lokio/a0;.G:()Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31dc9c.  v0:= v5.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dca0.  v0:= v0 ^~ 1;
  #L31dca4.  if v0 == 0 then goto L31dcd0;
  #L31dca8.  v0:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dcac.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31dcb2.  v0:= temp @kind wide;
  #L31dcb4.  v2:= 0L;
  #L31dcb8.  v4:= lcmp(v0, v2);
  #L31dcbc.  if v4 <= 0 then goto L31dcce;
  #L31dcc0.  v2:= v5.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31dcc4.  v3:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dcc8.  call `write`(v2, v3, v0) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31dcce.  return v5 @kind object;
  #L31dcd0.  v0:= new `java.lang.IllegalStateException`;
  #L31dcd4.  v1:= "closed" @kind object;
  #L31dcd8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dcde.  v1:= temp @kind object;
  #L31dce0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31dce6.  throw v0;
}
procedure `okio.n` `H`(`okio.a0` v1 @kind this, `int` v2 ) @signature `Lokio/a0;.H:(I)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31df4c.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31df50.  v0:= v0 ^~ 1;
  #L31df54.  if v0 == 0 then goto L31df6c;
  #L31df58.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31df5c.  call temp:= `s1`(v0, v2) @signature `Lokio/k;.s1:(I)Lokio/k;` @kind virtual;
  #L31df62.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31df68.  v2:= temp @kind object;
  #L31df6a.  return v2 @kind object;
  #L31df6c.  v2:= new `java.lang.IllegalStateException`;
  #L31df70.  v0:= "closed" @kind object;
  #L31df74.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31df7a.  v0:= temp @kind object;
  #L31df7c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31df82.  throw v2;
}
procedure `okio.n` `K`(`okio.a0` v1 @kind this, `int` v2 ) @signature `Lokio/a0;.K:(I)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31df04.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31df08.  v0:= v0 ^~ 1;
  #L31df0c.  if v0 == 0 then goto L31df24;
  #L31df10.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31df14.  call temp:= `q1`(v0, v2) @signature `Lokio/k;.q1:(I)Lokio/k;` @kind virtual;
  #L31df1a.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31df20.  v2:= temp @kind object;
  #L31df22.  return v2 @kind object;
  #L31df24.  v2:= new `java.lang.IllegalStateException`;
  #L31df28.  v0:= "closed" @kind object;
  #L31df2c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31df32.  v0:= temp @kind object;
  #L31df34.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31df3a.  throw v2;
}
procedure `okio.n` `P`(`okio.a0` v1 @kind this, `int` v2 ) @signature `Lokio/a0;.P:(I)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31de2c.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31de30.  v0:= v0 ^~ 1;
  #L31de34.  if v0 == 0 then goto L31de4c;
  #L31de38.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31de3c.  call temp:= `n1`(v0, v2) @signature `Lokio/k;.n1:(I)Lokio/k;` @kind virtual;
  #L31de42.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31de48.  v2:= temp @kind object;
  #L31de4a.  return v2 @kind object;
  #L31de4c.  v2:= new `java.lang.IllegalStateException`;
  #L31de50.  v0:= "closed" @kind object;
  #L31de54.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31de5a.  v0:= temp @kind object;
  #L31de5c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31de62.  throw v2;
}
procedure `okio.n` `U`(`okio.a0` v5 @kind this) @signature `Lokio/a0;.U:()Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31dcf8.  v0:= v5.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dcfc.  v0:= v0 ^~ 1;
  #L31dd00.  if v0 == 0 then goto L31dd2c;
  #L31dd04.  v0:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dd08.  call temp:= `k`(v0) @signature `Lokio/k;.k:()J` @kind virtual;
  #L31dd0e.  v0:= temp @kind wide;
  #L31dd10.  v2:= 0L;
  #L31dd14.  v4:= lcmp(v0, v2);
  #L31dd18.  if v4 <= 0 then goto L31dd2a;
  #L31dd1c.  v2:= v5.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31dd20.  v3:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dd24.  call `write`(v2, v3, v0) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31dd2a.  return v5 @kind object;
  #L31dd2c.  v0:= new `java.lang.IllegalStateException`;
  #L31dd30.  v1:= "closed" @kind object;
  #L31dd34.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dd3a.  v1:= temp @kind object;
  #L31dd3c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31dd42.  throw v0;
}
procedure `okio.n` `b`(`okio.a0` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/a0;.b:([BII)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dd9c.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dda0.  v0:= v0 ^~ 1;
  #L31dda4.  if v0 == 0 then goto L31ddbc;
  #L31dda8.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31ddac.  call temp:= `l1`(v0, v2, v3, v4) @signature `Lokio/k;.l1:([BII)Lokio/k;` @kind virtual;
  #L31ddb2.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31ddb8.  v2:= temp @kind object;
  #L31ddba.  return v2 @kind object;
  #L31ddbc.  v2:= new `java.lang.IllegalStateException`;
  #L31ddc0.  v3:= "closed" @kind object;
  #L31ddc4.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ddca.  v3:= temp @kind object;
  #L31ddcc.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ddd2.  throw v2;
}
procedure `okio.n` `b0`(`okio.a0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokio/a0;.b0:(Ljava/lang/String;)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31df94.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31df98.  v0:= v0 ^~ 1;
  #L31df9c.  if v0 == 0 then goto L31dfb4;
  #L31dfa0.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dfa4.  call temp:= `v1`(v0, v2) @signature `Lokio/k;.v1:(Ljava/lang/String;)Lokio/k;` @kind virtual;
  #L31dfaa.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31dfb0.  v2:= temp @kind object;
  #L31dfb2.  return v2 @kind object;
  #L31dfb4.  v2:= new `java.lang.IllegalStateException`;
  #L31dfb8.  v0:= "closed" @kind object;
  #L31dfbc.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dfc2.  v0:= temp @kind object;
  #L31dfc4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31dfca.  throw v2;
}
procedure `void` `close`(`okio.a0` v6 @kind this) @signature `Lokio/a0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31e070.  v0:= v6.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31e074.  if v0 == 0 then goto L31e07a;
  #L31e078.  return @kind void;
  #L31e07a.  v0:= 0I;
  #L31e07c.  v1:= v6.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31e080.  call temp:= `f1`(v1) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e086.  v1:= temp @kind wide;
  #L31e088.  v3:= 0L;
  #L31e08c.  v5:= lcmp(v1, v3);
  #L31e090.  if v5 <= 0 then goto L31e0ae;
  #L31e094.  v1:= v6.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31e098.  v2:= v6.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31e09c.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e0a2.  v3:= temp @kind wide;
  #L31e0a4.  call `write`(v1, v2, v3) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31e0aa.  goto L31e0ae;
  #L31e0ac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31e0ae.  v1:= v6.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31e0b2.  call `close`(v1) @signature `Lokio/g0;.close:()V` @kind interface;
  #L31e0b8.  goto L31e0c2;
  #L31e0ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31e0bc.  if v0 != 0 then goto L31e0c2;
  #L31e0c0.  v0:= v1 @kind object;
  #L31e0c2.  v1:= 1I;
  #L31e0c4.  v6.`okio.a0.c` @type ^`boolean` := v1 @kind boolean;
  #L31e0c8.  if v0 != 0 then goto L31e0ce;
  #L31e0cc.  return @kind void;
  #L31e0ce.  throw v0;
  catch `java.lang.Throwable` @[L31e07c..L31e0aa] goto L31e0ac;
  catch `java.lang.Throwable` @[L31e0ae..L31e0b8] goto L31e0ba;
}
procedure `void` `flush`(`okio.a0` v5 @kind this) @signature `Lokio/a0;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31e0f8.  v0:= v5.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31e0fc.  v0:= v0 ^~ 1;
  #L31e100.  if v0 == 0 then goto L31e13e;
  #L31e104.  v0:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31e108.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e10e.  v0:= temp @kind wide;
  #L31e110.  v2:= 0L;
  #L31e114.  v4:= lcmp(v0, v2);
  #L31e118.  if v4 <= 0 then goto L31e132;
  #L31e11c.  v0:= v5.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31e120.  v1:= v5.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31e124.  call temp:= `f1`(v1) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31e12a.  v2:= temp @kind wide;
  #L31e12c.  call `write`(v0, v1, v2) @signature `Lokio/g0;.write:(Lokio/k;J)V` @kind interface;
  #L31e132.  v0:= v5.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31e136.  call `flush`(v0) @signature `Lokio/g0;.flush:()V` @kind interface;
  #L31e13c.  return @kind void;
  #L31e13e.  v0:= new `java.lang.IllegalStateException`;
  #L31e142.  v1:= "closed" @kind object;
  #L31e146.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e14c.  v1:= temp @kind object;
  #L31e14e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e154.  throw v0;
}
procedure `okio.n` `h0`(`okio.a0` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/a0;.h0:(Ljava/lang/String;II)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dfdc.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dfe0.  v0:= v0 ^~ 1;
  #L31dfe4.  if v0 == 0 then goto L31dffc;
  #L31dfe8.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dfec.  call temp:= `w1`(v0, v2, v3, v4) @signature `Lokio/k;.w1:(Ljava/lang/String;II)Lokio/k;` @kind virtual;
  #L31dff2.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31dff8.  v2:= temp @kind object;
  #L31dffa.  return v2 @kind object;
  #L31dffc.  v2:= new `java.lang.IllegalStateException`;
  #L31e000.  v3:= "closed" @kind object;
  #L31e004.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e00a.  v3:= temp @kind object;
  #L31e00c.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e012.  throw v2;
}
procedure `long` `i0`(`okio.a0` v7 @kind this, `okio.i0` v8 @kind object) @signature `Lokio/a0;.i0:(Lokio/i0;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31dc44.  v0:= 0L;
  #L31dc48.  v2:= v7.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dc4c.  v3:= 8192I;
  #L31dc50.  v3:= (`long`) v3 @kind i2l;
  #L31dc52.  call temp:= `read`(v8, v2, v3) @signature `Lokio/i0;.read:(Lokio/k;J)J` @kind interface;
  #L31dc58.  v2:= temp @kind wide;
  #L31dc5a.  v4:= -1L;
  #L31dc5e.  v6:= lcmp(v2, v4);
  #L31dc62.  if v6 != 0 then goto L31dc68;
  #L31dc66.  return v0 @kind wide;
  #L31dc68.  v0:= v0 + v2 @kind long;
  #L31dc6a.  call temp:= `U`(v7) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31dc70.  goto L31dc48;
}
procedure `boolean` `isOpen`(`okio.a0` v1 @kind this) @signature `Lokio/a0;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31db9c.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dba0.  v0:= v0 ^~ 1;
  #L31dba4.  return v0;
}
procedure `okio.n` `j0`(`okio.a0` v1 @kind this, `long` v2 ) @signature `Lokio/a0;.j0:(J)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31debc.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dec0.  v0:= v0 ^~ 1;
  #L31dec4.  if v0 == 0 then goto L31dedc;
  #L31dec8.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31decc.  call temp:= `p1`(v0, v2) @signature `Lokio/k;.p1:(J)Lokio/k;` @kind virtual;
  #L31ded2.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31ded8.  v2:= temp @kind object;
  #L31deda.  return v2 @kind object;
  #L31dedc.  v2:= new `java.lang.IllegalStateException`;
  #L31dee0.  v3:= "closed" @kind object;
  #L31dee4.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31deea.  v3:= temp @kind object;
  #L31deec.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31def2.  throw v2;
}
procedure `okio.k` `q`(`okio.a0` v1 @kind this) @signature `Lokio/a0;.q:()Lokio/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dc84.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dc88.  return v0 @kind object;
}
procedure `okio.n` `s0`(`okio.a0` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/a0;.s0:([B)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dd54.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dd58.  v0:= v0 ^~ 1;
  #L31dd5c.  if v0 == 0 then goto L31dd74;
  #L31dd60.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dd64.  call temp:= `k1`(v0, v2) @signature `Lokio/k;.k1:([B)Lokio/k;` @kind virtual;
  #L31dd6a.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31dd70.  v2:= temp @kind object;
  #L31dd72.  return v2 @kind object;
  #L31dd74.  v2:= new `java.lang.IllegalStateException`;
  #L31dd78.  v0:= "closed" @kind object;
  #L31dd7c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dd82.  v0:= temp @kind object;
  #L31dd84.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31dd8a.  throw v2;
}
procedure `okio.n` `t0`(`okio.a0` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/a0;.t0:(Lokio/ByteString;)Lokio/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dde4.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dde8.  v0:= v0 ^~ 1;
  #L31ddec.  if v0 == 0 then goto L31de04;
  #L31ddf0.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31ddf4.  call temp:= `j1`(v0, v2) @signature `Lokio/k;.j1:(Lokio/ByteString;)Lokio/k;` @kind virtual;
  #L31ddfa.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31de00.  v2:= temp @kind object;
  #L31de02.  return v2 @kind object;
  #L31de04.  v2:= new `java.lang.IllegalStateException`;
  #L31de08.  v0:= "closed" @kind object;
  #L31de0c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31de12.  v0:= temp @kind object;
  #L31de14.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31de1a.  throw v2;
}
procedure `okio.l0` `timeout`(`okio.a0` v1 @kind this) @signature `Lokio/a0;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e024.  v0:= v1.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31e028.  call temp:= `timeout`(v0) @signature `Lokio/g0;.timeout:()Lokio/l0;` @kind interface;
  #L31e02e.  v0:= temp @kind object;
  #L31e030.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.a0` v2 @kind this) @signature `Lokio/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31dc00.  v0:= new `java.lang.StringBuilder`;
  #L31dc04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31dc0a.  v1:= "buffer(" @kind object;
  #L31dc0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31dc14.  v1:= v2.`okio.a0.d` @type ^`okio.g0` @kind object;
  #L31dc18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31dc1e.  v1:= 41I;
  #L31dc22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31dc28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dc2e.  v0:= temp @kind object;
  #L31dc30.  return v0 @kind object;
}
procedure `int` `write`(`okio.a0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lokio/a0;.write:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dbb8.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31dbbc.  v0:= v0 ^~ 1;
  #L31dbc0.  if v0 == 0 then goto L31dbd8;
  #L31dbc4.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31dbc8.  call temp:= `write`(v0, v2) @signature `Lokio/k;.write:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L31dbce.  v2:= temp;
  #L31dbd0.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31dbd6.  return v2;
  #L31dbd8.  v2:= new `java.lang.IllegalStateException`;
  #L31dbdc.  v0:= "closed" @kind object;
  #L31dbe0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31dbe6.  v0:= temp @kind object;
  #L31dbe8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31dbee.  throw v2;
}
procedure `void` `write`(`okio.a0` v1 @kind this, `okio.k` v2 @kind object, `long` v3 ) @signature `Lokio/a0;.write:(Lokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e168.  v0:= v1.`okio.a0.c` @type ^`boolean` @kind boolean;
  #L31e16c.  v0:= v0 ^~ 1;
  #L31e170.  if v0 == 0 then goto L31e186;
  #L31e174.  v0:= v1.`okio.a0.b` @type ^`okio.k` @kind object;
  #L31e178.  call `write`(v0, v2, v3) @signature `Lokio/k;.write:(Lokio/k;J)V` @kind virtual;
  #L31e17e.  call temp:= `U`(v1) @signature `Lokio/a0;.U:()Lokio/n;` @kind virtual;
  #L31e184.  return @kind void;
  #L31e186.  v2:= new `java.lang.IllegalStateException`;
  #L31e18a.  v3:= "closed" @kind object;
  #L31e18e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e194.  v3:= temp @kind object;
  #L31e196.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31e19c.  throw v2;
}
