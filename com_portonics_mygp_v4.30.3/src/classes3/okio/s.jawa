record `okio.s` @kind class @AccessFlag PUBLIC_FINAL extends `okio.i0` @kind interface {
  `byte` `okio.s.b` @AccessFlag PRIVATE;
  `okio.c0` `okio.s.c` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.s.d` @AccessFlag PRIVATE_FINAL;
  `okio.t` `okio.s.e` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `okio.s.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.s` v2 @kind this, `okio.i0` v3 @kind object) @signature `Lokio/s;.<init>:(Lokio/i0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31c4f0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31c4f6.  v0:= new `okio.c0`;
  #L31c4fa.  call `<init>`(v0, v3) @signature `Lokio/c0;.<init>:(Lokio/i0;)V` @kind direct;
  #L31c500.  v2.`okio.s.c` @type ^`okio.c0` := v0 @kind object;
  #L31c504.  v3:= new `java.util.zip.Inflater`;
  #L31c508.  v1:= 1I;
  #L31c50a.  call `<init>`(v3, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L31c510.  v2.`okio.s.d` @type ^`java.util.zip.Inflater` := v3 @kind object;
  #L31c514.  v1:= new `okio.t`;
  #L31c518.  call `<init>`(v1, v0, v3) @signature `Lokio/t;.<init>:(Lokio/o;Ljava/util/zip/Inflater;)V` @kind direct;
  #L31c51e.  v2.`okio.s.e` @type ^`okio.t` := v1 @kind object;
  #L31c522.  v3:= new `java.util.zip.CRC32`;
  #L31c526.  call `<init>`(v3) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L31c52c.  v2.`okio.s.f` @type ^`java.util.zip.CRC32` := v3 @kind object;
  #L31c530.  return @kind void;
}
procedure `void` `a`(`okio.s` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokio/s;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31c544.  if v7 != v6 then goto L31c54a;
  #L31c548.  return @kind void;
  #L31c54a.  v0:= new `java.io.IOException`;
  #L31c54e.  v1:= 3I;
  #L31c550.  v2:= new `java.lang.Object`[v1];
  #L31c554.  v3:= 0I;
  #L31c556.  v2[v3]:= v5 @kind object;
  #L31c55a.  v5:= 1I;
  #L31c55c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31c562.  v7:= temp @kind object;
  #L31c564.  v2[v5]:= v7 @kind object;
  #L31c568.  v5:= 2I;
  #L31c56a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31c570.  v6:= temp @kind object;
  #L31c572.  v2[v5]:= v6 @kind object;
  #L31c576.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L31c57c.  v5:= temp @kind object;
  #L31c57e.  v6:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L31c582.  call temp:= `format`(v6, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31c588.  v5:= temp @kind object;
  #L31c58a.  v6:= "java.lang.String.format(this, *args)" @kind object;
  #L31c58e.  call `checkExpressionValueIsNotNull`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L31c594.  call `<init>`(v0, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31c59a.  throw v0;
}
procedure `void` `c`(`okio.s` v17 @kind this) @signature `Lokio/s;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L31c5c8.  v6:= v17 @kind object;
  #L31c5cc.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c5d0.  v1:= 10L;
  #L31c5d4.  call `E0`(v0, v1) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31c5da.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c5de.  v0:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c5e2.  v1:= 3L;
  #L31c5e6.  call temp:= `K0`(v0, v1) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L31c5ec.  v7:= temp;
  #L31c5ee.  v0:= v7 ^> 1;
  #L31c5f2.  v8:= 1I;
  #L31c5f4.  v0:= v0 ^& v8 @kind int;
  #L31c5f6.  v9:= 0I;
  #L31c5f8.  if v0 != v8 then goto L31c600;
  #L31c5fc.  v10:= 1I;
  #L31c5fe.  goto L31c602;
  #L31c600.  v10:= 0I;
  #L31c602.  if v10 == 0 then goto L31c620;
  #L31c606.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c60a.  v1:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c60e.  v2:= 0L;
  #L31c612.  v4:= 10L;
  #L31c616.  v0:= v17 @kind object;
  #L31c61a.  call `k`(v0, v1, v2, v4) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c620.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c624.  call temp:= `readShort`(v0) @signature `Lokio/c0;.readShort:()S` @kind virtual;
  #L31c62a.  v0:= temp;
  #L31c62c.  v1:= 8075I;
  #L31c630.  v2:= "ID1ID2" @kind object;
  #L31c634.  call `a`(v6, v2, v1, v0) @signature `Lokio/s;.a:(Ljava/lang/String;II)V` @kind direct;
  #L31c63a.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c63e.  v1:= 8L;
  #L31c642.  call `skip`(v0, v1) @signature `Lokio/c0;.skip:(J)V` @kind virtual;
  #L31c648.  v0:= v7 ^> 2;
  #L31c64c.  v0:= v0 ^& v8 @kind int;
  #L31c64e.  if v0 != v8 then goto L31c656;
  #L31c652.  v0:= 1I;
  #L31c654.  goto L31c658;
  #L31c656.  v0:= 0I;
  #L31c658.  if v0 == 0 then goto L31c6ca;
  #L31c65c.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c660.  v1:= 2L;
  #L31c664.  call `E0`(v0, v1) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31c66a.  if v10 == 0 then goto L31c688;
  #L31c66e.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c672.  v1:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c676.  v2:= 0L;
  #L31c67a.  v4:= 2L;
  #L31c67e.  v0:= v17 @kind object;
  #L31c682.  call `k`(v0, v1, v2, v4) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c688.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c68c.  v0:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c690.  call temp:= `W0`(v0) @signature `Lokio/k;.W0:()S` @kind virtual;
  #L31c696.  v0:= temp;
  #L31c698.  v11:= (`long`) v0 @kind i2l;
  #L31c69a.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c69e.  call `E0`(v0, v11) @signature `Lokio/c0;.E0:(J)V` @kind virtual;
  #L31c6a4.  if v10 == 0 then goto L31c6c0;
  #L31c6a8.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c6ac.  v1:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c6b0.  v2:= 0L;
  #L31c6b4.  v0:= v17 @kind object;
  #L31c6b8.  v4:= v11 @kind wide;
  #L31c6ba.  call `k`(v0, v1, v2, v4) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c6c0.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c6c4.  call `skip`(v0, v11) @signature `Lokio/c0;.skip:(J)V` @kind virtual;
  #L31c6ca.  v0:= v7 ^> 3;
  #L31c6ce.  v0:= v0 ^& v8 @kind int;
  #L31c6d0.  if v0 != v8 then goto L31c6d8;
  #L31c6d4.  v0:= 1I;
  #L31c6d6.  goto L31c6da;
  #L31c6d8.  v0:= 0I;
  #L31c6da.  v11:= -1L;
  #L31c6de.  v13:= 1L;
  #L31c6e2.  if v0 == 0 then goto L31c734;
  #L31c6e6.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c6ea.  call temp:= `a`(v0, v9) @signature `Lokio/c0;.a:(B)J` @kind virtual;
  #L31c6f0.  v15:= temp @kind wide;
  #L31c6f2.  v0:= lcmp(v15, v11);
  #L31c6f6.  if v0 == 0 then goto L31c728;
  #L31c6fa.  if v10 == 0 then goto L31c718;
  #L31c6fe.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c702.  v1:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c706.  v2:= 0L;
  #L31c70a.  v4:= v15 + v13 @kind long;
  #L31c70e.  v0:= v17 @kind object;
  #L31c712.  call `k`(v0, v1, v2, v4) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c718.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c71c.  v1:= v15 + v13 @kind long;
  #L31c720.  call `skip`(v0, v1) @signature `Lokio/c0;.skip:(J)V` @kind virtual;
  #L31c726.  goto L31c734;
  #L31c728.  v0:= new `java.io.EOFException`;
  #L31c72c.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L31c732.  throw v0;
  #L31c734.  v0:= v7 ^> 4;
  #L31c738.  v0:= v0 ^& v8 @kind int;
  #L31c73a.  if v0 != v8 then goto L31c740;
  #L31c73e.  goto L31c742;
  #L31c740.  v8:= 0I;
  #L31c742.  if v8 == 0 then goto L31c792;
  #L31c746.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c74a.  call temp:= `a`(v0, v9) @signature `Lokio/c0;.a:(B)J` @kind virtual;
  #L31c750.  v7:= temp @kind wide;
  #L31c752.  v0:= lcmp(v7, v11);
  #L31c756.  if v0 == 0 then goto L31c786;
  #L31c75a.  if v10 == 0 then goto L31c778;
  #L31c75e.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c762.  v1:= v0.`okio.c0.b` @type ^`okio.k` @kind object;
  #L31c766.  v2:= 0L;
  #L31c76a.  v4:= v7 + v13 @kind long;
  #L31c76e.  v0:= v17 @kind object;
  #L31c772.  call `k`(v0, v1, v2, v4) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c778.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c77c.  v7:= v7 + v13 @kind long;
  #L31c77e.  call `skip`(v0, v7) @signature `Lokio/c0;.skip:(J)V` @kind virtual;
  #L31c784.  goto L31c792;
  #L31c786.  v0:= new `java.io.EOFException`;
  #L31c78a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L31c790.  throw v0;
  #L31c792.  if v10 == 0 then goto L31c7c6;
  #L31c796.  v0:= v6.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c79a.  call temp:= `s`(v0) @signature `Lokio/c0;.s:()S` @kind virtual;
  #L31c7a0.  v0:= temp;
  #L31c7a2.  v1:= v6.`okio.s.f` @type ^`java.util.zip.CRC32` @kind object;
  #L31c7a6.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L31c7ac.  v1:= temp @kind wide;
  #L31c7ae.  v2:= (`int`) v1 @kind l2i;
  #L31c7b0.  v1:= (`short`) v2 @kind i2s;
  #L31c7b2.  v2:= "FHCRC" @kind object;
  #L31c7b6.  call `a`(v6, v2, v0, v1) @signature `Lokio/s;.a:(Ljava/lang/String;II)V` @kind direct;
  #L31c7bc.  v0:= v6.`okio.s.f` @type ^`java.util.zip.CRC32` @kind object;
  #L31c7c0.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L31c7c6.  return @kind void;
}
procedure `void` `d`(`okio.s` v3 @kind this) @signature `Lokio/s;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31c7d8.  v0:= v3.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c7dc.  call temp:= `o`(v0) @signature `Lokio/c0;.o:()I` @kind virtual;
  #L31c7e2.  v0:= temp;
  #L31c7e4.  v1:= v3.`okio.s.f` @type ^`java.util.zip.CRC32` @kind object;
  #L31c7e8.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L31c7ee.  v1:= temp @kind wide;
  #L31c7f0.  v2:= (`int`) v1 @kind l2i;
  #L31c7f2.  v1:= "CRC" @kind object;
  #L31c7f6.  call `a`(v3, v1, v0, v2) @signature `Lokio/s;.a:(Ljava/lang/String;II)V` @kind direct;
  #L31c7fc.  v0:= v3.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c800.  call temp:= `o`(v0) @signature `Lokio/c0;.o:()I` @kind virtual;
  #L31c806.  v0:= temp;
  #L31c808.  v1:= v3.`okio.s.d` @type ^`java.util.zip.Inflater` @kind object;
  #L31c80c.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L31c812.  v1:= temp @kind wide;
  #L31c814.  v2:= (`int`) v1 @kind l2i;
  #L31c816.  v1:= "ISIZE" @kind object;
  #L31c81a.  call `a`(v3, v1, v0, v2) @signature `Lokio/s;.a:(Ljava/lang/String;II)V` @kind direct;
  #L31c820.  return @kind void;
}
procedure `void` `k`(`okio.s` v5 @kind this, `okio.k` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31c834.  v6:= v6.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31c838.  if v6 != 0 then goto L31c842;
  #L31c83c.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31c842.  v0:= v6.`okio.e0.d` @type ^`int`;
  #L31c846.  v1:= v6.`okio.e0.c` @type ^`int`;
  #L31c84a.  v2:= v0 - v1 @kind int;
  #L31c84e.  v2:= (`long`) v2 @kind i2l;
  #L31c850.  v4:= lcmp(v7, v2);
  #L31c854.  if v4 < 0 then goto L31c86e;
  #L31c858.  v0:= v0 - v1 @kind int;
  #L31c85a.  v0:= (`long`) v0 @kind i2l;
  #L31c85c.  v7:= v7 - v0 @kind long;
  #L31c85e.  v6:= v6.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31c862.  if v6 != 0 then goto L31c842;
  #L31c866.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31c86c.  goto L31c842;
  #L31c86e.  v0:= 0L;
  #L31c872.  v2:= lcmp(v9, v0);
  #L31c876.  if v2 <= 0 then goto L31c8ba;
  #L31c87a.  v2:= v6.`okio.e0.c` @type ^`int`;
  #L31c87e.  v2:= (`long`) v2 @kind i2l;
  #L31c880.  v2:= v2 + v7 @kind long;
  #L31c882.  v7:= (`int`) v2 @kind l2i;
  #L31c884.  v8:= v6.`okio.e0.d` @type ^`int`;
  #L31c888.  v8:= v8 - v7 @kind int;
  #L31c88a.  v2:= (`long`) v8 @kind i2l;
  #L31c88c.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31c892.  v2:= temp @kind wide;
  #L31c894.  v8:= (`int`) v2 @kind l2i;
  #L31c896.  v2:= v5.`okio.s.f` @type ^`java.util.zip.CRC32` @kind object;
  #L31c89a.  v3:= v6.`okio.e0.b` @type ^`byte`[] @kind object;
  #L31c89e.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L31c8a4.  v7:= (`long`) v8 @kind i2l;
  #L31c8a6.  v9:= v9 - v7 @kind long;
  #L31c8a8.  v6:= v6.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31c8ac.  if v6 != 0 then goto L31c8b6;
  #L31c8b0.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31c8b6.  v7:= v0 @kind wide;
  #L31c8b8.  goto L31c872;
  #L31c8ba.  return @kind void;
}
procedure `void` `close`(`okio.s` v1 @kind this) @signature `Lokio/s;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c5ac.  v0:= v1.`okio.s.e` @type ^`okio.t` @kind object;
  #L31c5b0.  call `close`(v0) @signature `Lokio/t;.close:()V` @kind virtual;
  #L31c5b6.  return @kind void;
}
procedure `long` `read`(`okio.s` v11 @kind this, `okio.k` v12 @kind object, `long` v13 ) @signature `Lokio/s;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L31c3e0.  v0:= 1I;
  #L31c3e2.  v1:= 0L;
  #L31c3e6.  v3:= lcmp(v13, v1);
  #L31c3ea.  if v3 < 0 then goto L31c3f2;
  #L31c3ee.  v3:= 1I;
  #L31c3f0.  goto L31c3f4;
  #L31c3f2.  v3:= 0I;
  #L31c3f4.  if v3 == 0 then goto L31c488;
  #L31c3f8.  v3:= lcmp(v13, v1);
  #L31c3fc.  if v3 != 0 then goto L31c402;
  #L31c400.  return v1 @kind wide;
  #L31c402.  v1:= v11.`okio.s.b` @type ^`byte` @kind byte;
  #L31c406.  if v1 != 0 then goto L31c414;
  #L31c40a.  call `c`(v11) @signature `Lokio/s;.c:()V` @kind direct;
  #L31c410.  v11.`okio.s.b` @type ^`byte` := v0 @kind byte;
  #L31c414.  v1:= v11.`okio.s.b` @type ^`byte` @kind byte;
  #L31c418.  v2:= -1L;
  #L31c41c.  v4:= 2I;
  #L31c41e.  if v1 != v0 then goto L31c450;
  #L31c422.  call temp:= `f1`(v12) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31c428.  v7:= temp @kind wide;
  #L31c42a.  v0:= v11.`okio.s.e` @type ^`okio.t` @kind object;
  #L31c42e.  call temp:= `read`(v0, v12, v13) @signature `Lokio/t;.read:(Lokio/k;J)J` @kind virtual;
  #L31c434.  v13:= temp @kind wide;
  #L31c436.  v0:= lcmp(v13, v2);
  #L31c43a.  if v0 == 0 then goto L31c44c;
  #L31c43e.  v5:= v11 @kind object;
  #L31c440.  v6:= v12 @kind object;
  #L31c442.  v9:= v13 @kind wide;
  #L31c444.  call `k`(v5, v6, v7, v9) @signature `Lokio/s;.k:(Lokio/k;JJ)V` @kind direct;
  #L31c44a.  return v13 @kind wide;
  #L31c44c.  v11.`okio.s.b` @type ^`byte` := v4 @kind byte;
  #L31c450.  v12:= v11.`okio.s.b` @type ^`byte` @kind byte;
  #L31c454.  if v12 != v4 then goto L31c486;
  #L31c458.  call `d`(v11) @signature `Lokio/s;.d:()V` @kind direct;
  #L31c45e.  v12:= 3I;
  #L31c460.  v11.`okio.s.b` @type ^`byte` := v12 @kind byte;
  #L31c464.  v12:= v11.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c468.  call temp:= `O`(v12) @signature `Lokio/c0;.O:()Z` @kind virtual;
  #L31c46e.  v12:= temp;
  #L31c470.  if v12 == 0 then goto L31c476;
  #L31c474.  goto L31c486;
  #L31c476.  v12:= new `java.io.IOException`;
  #L31c47a.  v13:= "gzip finished without exhausting source" @kind object;
  #L31c47e.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31c484.  throw v12;
  #L31c486.  return v2 @kind wide;
  #L31c488.  v12:= new `java.lang.StringBuilder`;
  #L31c48c.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31c492.  v0:= "byteCount < 0: " @kind object;
  #L31c496.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31c49c.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31c4a2.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31c4a8.  v12:= temp @kind object;
  #L31c4aa.  v13:= new `java.lang.IllegalArgumentException`;
  #L31c4ae.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31c4b4.  v12:= temp @kind object;
  #L31c4b6.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31c4bc.  throw v13;
}
procedure `okio.l0` `timeout`(`okio.s` v1 @kind this) @signature `Lokio/s;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c4d0.  v0:= v1.`okio.s.c` @type ^`okio.c0` @kind object;
  #L31c4d4.  call temp:= `timeout`(v0) @signature `Lokio/c0;.timeout:()Lokio/l0;` @kind virtual;
  #L31c4da.  v0:= temp @kind object;
  #L31c4dc.  return v0 @kind object;
}
