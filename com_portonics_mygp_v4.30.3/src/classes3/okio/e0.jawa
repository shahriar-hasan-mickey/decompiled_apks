record `okio.e0` @kind class @AccessFlag PUBLIC_FINAL {
  `byte`[] `okio.e0.b` @AccessFlag PUBLIC_FINAL;
  `int` `okio.e0.c` @AccessFlag PUBLIC;
  `int` `okio.e0.d` @AccessFlag PUBLIC;
  `boolean` `okio.e0.e` @AccessFlag PUBLIC;
  `boolean` `okio.e0.f` @AccessFlag PUBLIC;
  `okio.e0` `okio.e0.g` @AccessFlag PUBLIC;
  `okio.e0` `okio.e0.h` @AccessFlag PUBLIC;
}
global `okio.d0` `@@okio.e0.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/e0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3200c8.  v0:= new `okio.d0`;
  #L3200cc.  v1:= 0I;
  #L3200ce.  call `<init>`(v0, v1) @signature `Lokio/d0;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3200d4.  `@@okio.e0.a` @type ^`okio.d0` := v0 @kind object;
  #L3200d8.  return @kind void;
}
procedure `void` `<init>`(`okio.e0` v1 @kind this) @signature `Lokio/e0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3200ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3200f2.  v0:= 8192I;
  #L3200f6.  v0:= new `byte`[v0];
  #L3200fa.  v1.`okio.e0.b` @type ^`byte`[] := v0 @kind object;
  #L3200fe.  v0:= 1I;
  #L320100.  v1.`okio.e0.f` @type ^`boolean` := v0 @kind boolean;
  #L320104.  v0:= 0I;
  #L320106.  v1.`okio.e0.e` @type ^`boolean` := v0 @kind boolean;
  #L32010a.  return @kind void;
}
procedure `void` `<init>`(`okio.e0` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `boolean` v5 ) @signature `Lokio/e0;.<init>:([BIIZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32011c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L320122.  v0.`okio.e0.b` @type ^`byte`[] := v1 @kind object;
  #L320126.  v0.`okio.e0.c` @type ^`int` := v2;
  #L32012a.  v0.`okio.e0.d` @type ^`int` := v3;
  #L32012e.  v0.`okio.e0.e` @type ^`boolean` := v4 @kind boolean;
  #L320132.  v0.`okio.e0.f` @type ^`boolean` := v5 @kind boolean;
  #L320136.  return @kind void;
}
procedure `void` `a`(`okio.e0` v4 @kind this) @signature `Lokio/e0;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L320148.  v0:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L32014c.  v1:= 0I;
  #L32014e.  if v0 == v4 then goto L320156;
  #L320152.  v2:= 1I;
  #L320154.  goto L320158;
  #L320156.  v2:= 0I;
  #L320158.  if v2 == 0 then goto L3201e4;
  #L32015c.  if v0 != 0 then goto L320166;
  #L320160.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L320166.  v0:= v0.`okio.e0.f` @type ^`boolean` @kind boolean;
  #L32016a.  if v0 != 0 then goto L320170;
  #L32016e.  return @kind void;
  #L320170.  v0:= v4.`okio.e0.d` @type ^`int`;
  #L320174.  v2:= v4.`okio.e0.c` @type ^`int`;
  #L320178.  v0:= v0 - v2 @kind int;
  #L32017a.  v2:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L32017e.  if v2 != 0 then goto L320188;
  #L320182.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L320188.  v2:= v2.`okio.e0.d` @type ^`int`;
  #L32018c.  v2:= v2 - 8192;
  #L320190.  v3:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L320194.  if v3 != 0 then goto L32019e;
  #L320198.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L32019e.  v3:= v3.`okio.e0.e` @type ^`boolean` @kind boolean;
  #L3201a2.  if v3 == 0 then goto L3201a8;
  #L3201a6.  goto L3201ba;
  #L3201a8.  v1:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L3201ac.  if v1 != 0 then goto L3201b6;
  #L3201b0.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3201b6.  v1:= v1.`okio.e0.c` @type ^`int`;
  #L3201ba.  v2:= v2 + v1 @kind int;
  #L3201bc.  if v0 <= v2 then goto L3201c2;
  #L3201c0.  return @kind void;
  #L3201c2.  v1:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L3201c6.  if v1 != 0 then goto L3201d0;
  #L3201ca.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3201d0.  call `g`(v4, v1, v0) @signature `Lokio/e0;.g:(Lokio/e0;I)V` @kind virtual;
  #L3201d6.  call temp:= `b`(v4) @signature `Lokio/e0;.b:()Lokio/e0;` @kind virtual;
  #L3201dc.  call `a`(v4) @signature `Lokio/f0;.a:(Lokio/e0;)V` @kind static;
  #L3201e2.  return @kind void;
  #L3201e4.  v0:= new `java.lang.IllegalStateException`;
  #L3201e8.  v1:= "cannot compact" @kind object;
  #L3201ec.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3201f2.  v1:= temp @kind object;
  #L3201f4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3201fa.  throw v0;
}
procedure `okio.e0` `b`(`okio.e0` v4 @kind this) @signature `Lokio/e0;.b:()Lokio/e0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31ff28.  v0:= v4.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31ff2c.  v1:= 0I;
  #L31ff2e.  if v0 == v4 then goto L31ff34;
  #L31ff32.  goto L31ff36;
  #L31ff34.  v0:= v1 @kind object;
  #L31ff36.  v2:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L31ff3a.  if v2 != 0 then goto L31ff44;
  #L31ff3e.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31ff44.  v3:= v4.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31ff48.  v2.`okio.e0.g` @type ^`okio.e0` := v3 @kind object;
  #L31ff4c.  v2:= v4.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31ff50.  if v2 != 0 then goto L31ff5a;
  #L31ff54.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31ff5a.  v3:= v4.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L31ff5e.  v2.`okio.e0.h` @type ^`okio.e0` := v3 @kind object;
  #L31ff62.  v4.`okio.e0.g` @type ^`okio.e0` := v1 @kind object;
  #L31ff66.  v4.`okio.e0.h` @type ^`okio.e0` := v1 @kind object;
  #L31ff6a.  return v0 @kind object;
}
procedure `okio.e0` `c`(`okio.e0` v1 @kind this, `okio.e0` v2 @kind object) @signature `Lokio/e0;.c:(Lokio/e0;)Lokio/e0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L31ff7c.  v2.`okio.e0.h` @type ^`okio.e0` := v1 @kind object;
  #L31ff80.  v0:= v1.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31ff84.  v2.`okio.e0.g` @type ^`okio.e0` := v0 @kind object;
  #L31ff88.  v0:= v1.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L31ff8c.  if v0 != 0 then goto L31ff96;
  #L31ff90.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31ff96.  v0.`okio.e0.h` @type ^`okio.e0` := v2 @kind object;
  #L31ff9a.  v1.`okio.e0.g` @type ^`okio.e0` := v2 @kind object;
  #L31ff9e.  return v2 @kind object;
}
procedure `okio.e0` `d`(`okio.e0` v7 @kind this) @signature `Lokio/e0;.d:()Lokio/e0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31ffb0.  v0:= 1I;
  #L31ffb2.  v7.`okio.e0.e` @type ^`boolean` := v0 @kind boolean;
  #L31ffb6.  v0:= new `okio.e0`;
  #L31ffba.  v2:= v7.`okio.e0.b` @type ^`byte`[] @kind object;
  #L31ffbe.  v3:= v7.`okio.e0.c` @type ^`int`;
  #L31ffc2.  v4:= v7.`okio.e0.d` @type ^`int`;
  #L31ffc6.  v5:= 1I;
  #L31ffc8.  v6:= 0I;
  #L31ffca.  v1:= v0 @kind object;
  #L31ffcc.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokio/e0;.<init>:([BIIZZ)V` @kind direct;
  #L31ffd2.  return v0 @kind object;
}
procedure `okio.e0` `e`(`okio.e0` v5 @kind this, `int` v6 ) @signature `Lokio/e0;.e:(I)Lokio/e0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31ffe4.  v0:= 0I;
  #L31ffe6.  if v6 <= 0 then goto L31fffc;
  #L31ffea.  v1:= v5.`okio.e0.d` @type ^`int`;
  #L31ffee.  v2:= v5.`okio.e0.c` @type ^`int`;
  #L31fff2.  v1:= v1 - v2 @kind int;
  #L31fff4.  if v6 > v1 then goto L31fffc;
  #L31fff8.  v1:= 1I;
  #L31fffa.  goto L31fffe;
  #L31fffc.  v1:= 0I;
  #L31fffe.  if v1 == 0 then goto L32005a;
  #L320002.  v1:= 1024I;
  #L320006.  if v6 < v1 then goto L320014;
  #L32000a.  call temp:= `d`(v5) @signature `Lokio/e0;.d:()Lokio/e0;` @kind virtual;
  #L320010.  v0:= temp @kind object;
  #L320012.  goto L320030;
  #L320014.  call temp:= `b`() @signature `Lokio/f0;.b:()Lokio/e0;` @kind static;
  #L32001a.  v1:= temp @kind object;
  #L32001c.  v2:= v5.`okio.e0.b` @type ^`byte`[] @kind object;
  #L320020.  v3:= v5.`okio.e0.c` @type ^`int`;
  #L320024.  v4:= v1.`okio.e0.b` @type ^`byte`[] @kind object;
  #L320028.  call `a`(v2, v3, v4, v0, v6) @signature `Lokio/b;.a:([BI[BII)V` @kind static;
  #L32002e.  v0:= v1 @kind object;
  #L320030.  v1:= v0.`okio.e0.c` @type ^`int`;
  #L320034.  v1:= v1 + v6 @kind int;
  #L320036.  v0.`okio.e0.d` @type ^`int` := v1;
  #L32003a.  v1:= v5.`okio.e0.c` @type ^`int`;
  #L32003e.  v1:= v1 + v6 @kind int;
  #L320040.  v5.`okio.e0.c` @type ^`int` := v1;
  #L320044.  v6:= v5.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L320048.  if v6 != 0 then goto L320052;
  #L32004c.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L320052.  call temp:= `c`(v6, v0) @signature `Lokio/e0;.c:(Lokio/e0;)Lokio/e0;` @kind virtual;
  #L320058.  return v0 @kind object;
  #L32005a.  v6:= new `java.lang.IllegalArgumentException`;
  #L32005e.  v0:= "byteCount out of range" @kind object;
  #L320062.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L320068.  v0:= temp @kind object;
  #L32006a.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L320070.  throw v6;
}
procedure `okio.e0` `f`(`okio.e0` v7 @kind this) @signature `Lokio/e0;.f:()Lokio/e0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L320084.  v6:= new `okio.e0`;
  #L320088.  v0:= v7.`okio.e0.b` @type ^`byte`[] @kind object;
  #L32008c.  v1:= length @variable v0;
  #L32008e.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L320094.  v1:= temp @kind object;
  #L320096.  v0:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L32009a.  call `checkExpressionValueIsNotNull`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3200a0.  v2:= v7.`okio.e0.c` @type ^`int`;
  #L3200a4.  v3:= v7.`okio.e0.d` @type ^`int`;
  #L3200a8.  v4:= 0I;
  #L3200aa.  v5:= 1I;
  #L3200ac.  v0:= v6 @kind object;
  #L3200ae.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokio/e0;.<init>:([BIIZZ)V` @kind direct;
  #L3200b4.  return v6 @kind object;
}
procedure `void` `g`(`okio.e0` v4 @kind this, `okio.e0` v5 @kind object, `int` v6 ) @signature `Lokio/e0;.g:(Lokio/e0;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32020c.  v0:= v5.`okio.e0.f` @type ^`boolean` @kind boolean;
  #L320210.  if v0 == 0 then goto L3202a0;
  #L320214.  v0:= v5.`okio.e0.d` @type ^`int`;
  #L320218.  v1:= v0 + v6 @kind int;
  #L32021c.  v2:= 8192I;
  #L320220.  if v1 <= v2 then goto L320274;
  #L320224.  v1:= v5.`okio.e0.e` @type ^`boolean` @kind boolean;
  #L320228.  if v1 != 0 then goto L320268;
  #L32022c.  v1:= v0 + v6 @kind int;
  #L320230.  v3:= v5.`okio.e0.c` @type ^`int`;
  #L320234.  v1:= v1 - v3 @kind int;
  #L320236.  if v1 > v2 then goto L32025c;
  #L32023a.  v1:= v5.`okio.e0.b` @type ^`byte`[] @kind object;
  #L32023e.  v0:= v0 - v3 @kind int;
  #L320240.  v2:= 0I;
  #L320242.  call `a`(v1, v3, v1, v2, v0) @signature `Lokio/b;.a:([BI[BII)V` @kind static;
  #L320248.  v0:= v5.`okio.e0.d` @type ^`int`;
  #L32024c.  v1:= v5.`okio.e0.c` @type ^`int`;
  #L320250.  v0:= v0 - v1 @kind int;
  #L320252.  v5.`okio.e0.d` @type ^`int` := v0;
  #L320256.  v5.`okio.e0.c` @type ^`int` := v2;
  #L32025a.  goto L320274;
  #L32025c.  v5:= new `java.lang.IllegalArgumentException`;
  #L320260.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L320266.  throw v5;
  #L320268.  v5:= new `java.lang.IllegalArgumentException`;
  #L32026c.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L320272.  throw v5;
  #L320274.  v0:= v4.`okio.e0.b` @type ^`byte`[] @kind object;
  #L320278.  v1:= v4.`okio.e0.c` @type ^`int`;
  #L32027c.  v2:= v5.`okio.e0.b` @type ^`byte`[] @kind object;
  #L320280.  v3:= v5.`okio.e0.d` @type ^`int`;
  #L320284.  call `a`(v0, v1, v2, v3, v6) @signature `Lokio/b;.a:([BI[BII)V` @kind static;
  #L32028a.  v0:= v5.`okio.e0.d` @type ^`int`;
  #L32028e.  v0:= v0 + v6 @kind int;
  #L320290.  v5.`okio.e0.d` @type ^`int` := v0;
  #L320294.  v5:= v4.`okio.e0.c` @type ^`int`;
  #L320298.  v5:= v5 + v6 @kind int;
  #L32029a.  v4.`okio.e0.c` @type ^`int` := v5;
  #L32029e.  return @kind void;
  #L3202a0.  v5:= new `java.lang.IllegalStateException`;
  #L3202a4.  v6:= "only owner can write" @kind object;
  #L3202a8.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3202ae.  v6:= temp @kind object;
  #L3202b0.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3202b6.  throw v5;
}
