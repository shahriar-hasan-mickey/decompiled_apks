record `okio.k$a` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okio.k` `okio.k$a.b` @AccessFlag PUBLIC;
  `boolean` `okio.k$a.c` @AccessFlag PUBLIC;
  `okio.e0` `okio.k$a.d` @AccessFlag PRIVATE;
  `long` `okio.k$a.e` @AccessFlag PUBLIC;
  `byte`[] `okio.k$a.f` @AccessFlag PUBLIC;
  `int` `okio.k$a.g` @AccessFlag PUBLIC;
  `int` `okio.k$a.h` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`okio.k$a` v2 @kind this) @signature `Lokio/k$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L318d10.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L318d16.  v0:= -1L;
  #L318d1a.  v2.`okio.k$a.e` @type ^`long` := v0 @kind wide;
  #L318d1e.  v0:= -1I;
  #L318d20.  v2.`okio.k$a.g` @type ^`int` := v0;
  #L318d24.  v2.`okio.k$a.h` @type ^`int` := v0;
  #L318d28.  return @kind void;
}
procedure `int` `a`(`okio.k$a` v5 @kind this) @signature `Lokio/k$a;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L318a68.  v0:= v5.`okio.k$a.e` @type ^`long` @kind wide;
  #L318a6c.  v2:= v5.`okio.k$a.b` @type ^`okio.k` @kind object;
  #L318a70.  if v2 != 0 then goto L318a7a;
  #L318a74.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318a7a.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318a80.  v2:= temp @kind wide;
  #L318a82.  v4:= lcmp(v0, v2);
  #L318a86.  if v4 == 0 then goto L318a8e;
  #L318a8a.  v0:= 1I;
  #L318a8c.  goto L318a90;
  #L318a8e.  v0:= 0I;
  #L318a90.  if v0 == 0 then goto L318ac2;
  #L318a94.  v0:= v5.`okio.k$a.e` @type ^`long` @kind wide;
  #L318a98.  v2:= -1L;
  #L318a9c.  v4:= lcmp(v0, v2);
  #L318aa0.  if v4 != 0 then goto L318aaa;
  #L318aa4.  v0:= 0L;
  #L318aa8.  goto L318ab8;
  #L318aaa.  v2:= v5.`okio.k$a.h` @type ^`int`;
  #L318aae.  v3:= v5.`okio.k$a.g` @type ^`int`;
  #L318ab2.  v2:= v2 - v3 @kind int;
  #L318ab4.  v2:= (`long`) v2 @kind i2l;
  #L318ab6.  v0:= v0 + v2 @kind long;
  #L318ab8.  call temp:= `c`(v5, v0) @signature `Lokio/k$a;.c:(J)I` @kind virtual;
  #L318abe.  v0:= temp;
  #L318ac0.  return v0;
  #L318ac2.  v0:= new `java.lang.IllegalStateException`;
  #L318ac6.  v1:= "no more bytes" @kind object;
  #L318aca.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L318ad0.  v1:= temp @kind object;
  #L318ad2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L318ad8.  throw v0;
}
procedure `int` `c`(`okio.k$a` v12 @kind this, `long` v13 ) @signature `Lokio/k$a;.c:(J)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L318aec.  v0:= v12.`okio.k$a.b` @type ^`okio.k` @kind object;
  #L318af0.  if v0 == 0 then goto L318ce4;
  #L318af4.  v1:= -1I;
  #L318af6.  v2:= (`long`) v1 @kind i2l;
  #L318af8.  v4:= lcmp(v13, v2);
  #L318afc.  if v4 < 0 then goto L318c8c;
  #L318b00.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318b06.  v2:= temp @kind wide;
  #L318b08.  v4:= lcmp(v13, v2);
  #L318b0c.  if v4 > 0 then goto L318c8c;
  #L318b10.  v2:= -1L;
  #L318b14.  v4:= lcmp(v13, v2);
  #L318b18.  if v4 == 0 then goto L318c74;
  #L318b1c.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318b22.  v2:= temp @kind wide;
  #L318b24.  v4:= lcmp(v13, v2);
  #L318b28.  if v4 != 0 then goto L318b30;
  #L318b2c.  goto L318c74;
  #L318b30.  v1:= 0L;
  #L318b34.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318b3a.  v3:= temp @kind wide;
  #L318b3c.  v5:= v0.`okio.k.d` @type ^`okio.e0` @kind object;
  #L318b40.  v6:= v12.`okio.k$a.d` @type ^`okio.e0` @kind object;
  #L318b44.  if v6 == 0 then goto L318b82;
  #L318b48.  v7:= v12.`okio.k$a.e` @type ^`long` @kind wide;
  #L318b4c.  v9:= v12.`okio.k$a.g` @type ^`int`;
  #L318b50.  if v6 != 0 then goto L318b5a;
  #L318b54.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318b5a.  v6:= v6.`okio.e0.c` @type ^`int`;
  #L318b5e.  v9:= v9 - v6 @kind int;
  #L318b60.  v9:= (`long`) v9 @kind i2l;
  #L318b62.  v7:= v7 - v9 @kind long;
  #L318b64.  v6:= lcmp(v7, v13);
  #L318b68.  if v6 <= 0 then goto L318b78;
  #L318b6c.  v3:= v12.`okio.k$a.d` @type ^`okio.e0` @kind object;
  #L318b70.  v6:= v5 @kind object;
  #L318b72.  v5:= v3 @kind object;
  #L318b74.  v3:= v7 @kind wide;
  #L318b76.  goto L318b84;
  #L318b78.  v1:= v12.`okio.k$a.d` @type ^`okio.e0` @kind object;
  #L318b7c.  v6:= v1 @kind object;
  #L318b7e.  v1:= v7 @kind wide;
  #L318b80.  goto L318b84;
  #L318b82.  v6:= v5 @kind object;
  #L318b84.  v7:= v3 - v13 @kind long;
  #L318b88.  v9:= v13 - v1 @kind long;
  #L318b8c.  v11:= lcmp(v7, v9);
  #L318b90.  if v11 <= 0 then goto L318bc2;
  #L318b94.  if v6 != 0 then goto L318b9e;
  #L318b98.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318b9e.  v3:= v6.`okio.e0.d` @type ^`int`;
  #L318ba2.  v4:= v6.`okio.e0.c` @type ^`int`;
  #L318ba6.  v5:= v3 - v4 @kind int;
  #L318baa.  v7:= (`long`) v5 @kind i2l;
  #L318bac.  v7:= v7 + v1 @kind long;
  #L318bae.  v5:= lcmp(v13, v7);
  #L318bb2.  if v5 < 0 then goto L318bf6;
  #L318bb6.  v3:= v3 - v4 @kind int;
  #L318bb8.  v3:= (`long`) v3 @kind i2l;
  #L318bba.  v1:= v1 + v3 @kind long;
  #L318bbc.  v6:= v6.`okio.e0.g` @type ^`okio.e0` @kind object;
  #L318bc0.  goto L318b94;
  #L318bc2.  v1:= lcmp(v3, v13);
  #L318bc6.  if v1 <= 0 then goto L318bf2;
  #L318bca.  if v5 != 0 then goto L318bd4;
  #L318bce.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318bd4.  v5:= v5.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L318bd8.  if v5 != 0 then goto L318be2;
  #L318bdc.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318be2.  v1:= v5.`okio.e0.d` @type ^`int`;
  #L318be6.  v2:= v5.`okio.e0.c` @type ^`int`;
  #L318bea.  v1:= v1 - v2 @kind int;
  #L318bec.  v1:= (`long`) v1 @kind i2l;
  #L318bee.  v3:= v3 - v1 @kind long;
  #L318bf0.  goto L318bc2;
  #L318bf2.  v1:= v3 @kind wide;
  #L318bf4.  v6:= v5 @kind object;
  #L318bf6.  v3:= v12.`okio.k$a.c` @type ^`boolean` @kind boolean;
  #L318bfa.  if v3 == 0 then goto L318c40;
  #L318bfe.  if v6 != 0 then goto L318c08;
  #L318c02.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318c08.  v3:= v6.`okio.e0.e` @type ^`boolean` @kind boolean;
  #L318c0c.  if v3 == 0 then goto L318c40;
  #L318c10.  call temp:= `f`(v6) @signature `Lokio/e0;.f:()Lokio/e0;` @kind virtual;
  #L318c16.  v3:= temp @kind object;
  #L318c18.  v4:= v0.`okio.k.d` @type ^`okio.e0` @kind object;
  #L318c1c.  if v4 != v6 then goto L318c24;
  #L318c20.  v0.`okio.k.d` @type ^`okio.e0` := v3 @kind object;
  #L318c24.  call temp:= `c`(v6, v3) @signature `Lokio/e0;.c:(Lokio/e0;)Lokio/e0;` @kind virtual;
  #L318c2a.  v6:= temp @kind object;
  #L318c2c.  v0:= v6.`okio.e0.h` @type ^`okio.e0` @kind object;
  #L318c30.  if v0 != 0 then goto L318c3a;
  #L318c34.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318c3a.  call temp:= `b`(v0) @signature `Lokio/e0;.b:()Lokio/e0;` @kind virtual;
  #L318c40.  v12.`okio.k$a.d` @type ^`okio.e0` := v6 @kind object;
  #L318c44.  v12.`okio.k$a.e` @type ^`long` := v13 @kind wide;
  #L318c48.  if v6 != 0 then goto L318c52;
  #L318c4c.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L318c52.  v0:= v6.`okio.e0.b` @type ^`byte`[] @kind object;
  #L318c56.  v12.`okio.k$a.f` @type ^`byte`[] := v0 @kind object;
  #L318c5a.  v0:= v6.`okio.e0.c` @type ^`int`;
  #L318c5e.  v13:= v13 - v1 @kind long;
  #L318c60.  v14:= (`int`) v13 @kind l2i;
  #L318c62.  v0:= v0 + v14 @kind int;
  #L318c64.  v12.`okio.k$a.g` @type ^`int` := v0;
  #L318c68.  v13:= v6.`okio.e0.d` @type ^`int`;
  #L318c6c.  v12.`okio.k$a.h` @type ^`int` := v13;
  #L318c70.  v13:= v13 - v0 @kind int;
  #L318c72.  return v13;
  #L318c74.  v0:= 0I;
  #L318c76.  v12.`okio.k$a.d` @type ^`okio.e0` := v0 @kind object;
  #L318c7a.  v12.`okio.k$a.e` @type ^`long` := v13 @kind wide;
  #L318c7e.  v12.`okio.k$a.f` @type ^`byte`[] := v0 @kind object;
  #L318c82.  v12.`okio.k$a.g` @type ^`int` := v1;
  #L318c86.  v12.`okio.k$a.h` @type ^`int` := v1;
  #L318c8a.  return v1;
  #L318c8c.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L318c90.  v2:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L318c94.  v2:= 2I;
  #L318c96.  v3:= new `java.lang.Object`[v2];
  #L318c9a.  v4:= 0I;
  #L318c9c.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L318ca2.  v13:= temp @kind object;
  #L318ca4.  v3[v4]:= v13 @kind object;
  #L318ca8.  v13:= 1I;
  #L318caa.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318cb0.  v4:= temp @kind wide;
  #L318cb2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L318cb8.  v14:= temp @kind object;
  #L318cba.  v3[v13]:= v14 @kind object;
  #L318cbe.  call temp:= `copyOf`(v3, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L318cc4.  v13:= temp @kind object;
  #L318cc6.  v14:= "offset=%s > size=%s" @kind object;
  #L318cca.  call temp:= `format`(v14, v13) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L318cd0.  v13:= temp @kind object;
  #L318cd2.  v14:= "java.lang.String.format(format, *args)" @kind object;
  #L318cd6.  call `checkExpressionValueIsNotNull`(v13, v14) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L318cdc.  call `<init>`(v1, v13) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L318ce2.  throw v1;
  #L318ce4.  v13:= new `java.lang.IllegalStateException`;
  #L318ce8.  v14:= "not attached to a buffer" @kind object;
  #L318cec.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L318cf2.  v14:= temp @kind object;
  #L318cf4.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L318cfa.  goto L318cfe;
  #L318cfc.  throw v13;
  #L318cfe.  goto L318cfc;
}
procedure `void` `close`(`okio.k$a` v3 @kind this) @signature `Lokio/k$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L318d3c.  v0:= v3.`okio.k$a.b` @type ^`okio.k` @kind object;
  #L318d40.  if v0 == 0 then goto L318d48;
  #L318d44.  v0:= 1I;
  #L318d46.  goto L318d4a;
  #L318d48.  v0:= 0I;
  #L318d4a.  if v0 == 0 then goto L318d70;
  #L318d4e.  v0:= 0I;
  #L318d50.  v3.`okio.k$a.b` @type ^`okio.k` := v0 @kind object;
  #L318d54.  v3.`okio.k$a.d` @type ^`okio.e0` := v0 @kind object;
  #L318d58.  v1:= -1L;
  #L318d5c.  v3.`okio.k$a.e` @type ^`long` := v1 @kind wide;
  #L318d60.  v3.`okio.k$a.f` @type ^`byte`[] := v0 @kind object;
  #L318d64.  v0:= -1I;
  #L318d66.  v3.`okio.k$a.g` @type ^`int` := v0;
  #L318d6a.  v3.`okio.k$a.h` @type ^`int` := v0;
  #L318d6e.  return @kind void;
  #L318d70.  v0:= new `java.lang.IllegalStateException`;
  #L318d74.  v1:= "not attached to a buffer" @kind object;
  #L318d78.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L318d7e.  v1:= temp @kind object;
  #L318d80.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L318d86.  throw v0;
}
