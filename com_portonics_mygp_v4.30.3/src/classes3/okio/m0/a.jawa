record `okio.m0.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `char`[] `@@okio.m0.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okio.m0.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/m0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L321738.  v0:= 16I;
  #L32173c.  v0:= new `char`[v0];
  #L321740.  goto L321764;
  #L321746.  `@@okio.m0.a.a` @type ^`char`[] := v0 @kind object;
  #L32174a.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$a` @kind object;
  #L32174e.  v1:= 0I;
  #L321750.  v1:= new `byte`[v1];
  #L321754.  call temp:= `f`(v0, v1) @signature `Lokio/ByteString$a;.f:([B)Lokio/ByteString;` @kind virtual;
  #L32175a.  v0:= temp @kind object;
  #L32175c.  `@@okio.m0.a.b` @type ^`okio.ByteString` := v0 @kind object;
  #L321760.  return @kind void;
  #L321762.  
  #L321764.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L32178b.  goto L321746;
}
procedure `java.lang.String` `A`(`okio.ByteString` v19 @kind object) @signature `Lokio/m0/a;.A:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L321190.  call temp:= `getData$jvm`(v19) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321196.  v0:= temp @kind object;
  #L321198.  v0:= length @variable v0;
  #L32119a.  v1:= 0I;
  #L32119c.  if v0 != 0 then goto L3211a4;
  #L3211a0.  v0:= 1I;
  #L3211a2.  goto L3211a6;
  #L3211a4.  v0:= 0I;
  #L3211a6.  if v0 == 0 then goto L3211b0;
  #L3211aa.  v0:= "[size=0]" @kind object;
  #L3211ae.  return v0 @kind object;
  #L3211b0.  call temp:= `getData$jvm`(v19) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3211b6.  v0:= temp @kind object;
  #L3211b8.  v2:= 64I;
  #L3211bc.  call temp:= `a`(v0, v2) @signature `Lokio/m0/a;.a:([BI)I` @kind static;
  #L3211c2.  v0:= temp;
  #L3211c4.  v3:= -1I;
  #L3211c6.  v4:= 93I;
  #L3211ca.  v5:= "…]" @kind object;
  #L3211ce.  v6:= "[size=" @kind object;
  #L3211d2.  if v0 != v3 then goto L32126a;
  #L3211d6.  call temp:= `getData$jvm`(v19) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3211dc.  v0:= temp @kind object;
  #L3211de.  v0:= length @variable v0;
  #L3211e0.  if v0 > v2 then goto L321216;
  #L3211e4.  v0:= new `java.lang.StringBuilder`;
  #L3211e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3211ee.  v1:= "[hex=" @kind object;
  #L3211f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3211f8.  call temp:= `hex`(v19) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L3211fe.  v1:= temp @kind object;
  #L321200.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321206.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32120c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321212.  v0:= temp @kind object;
  #L321214.  goto L321268;
  #L321216.  v0:= new `java.lang.StringBuilder`;
  #L32121a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321220.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321226.  call temp:= `getData$jvm`(v19) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L32122c.  v3:= temp @kind object;
  #L32122e.  v3:= length @variable v3;
  #L321230.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L321236.  v3:= " hex=" @kind object;
  #L32123a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321240.  v3:= v19 @kind object;
  #L321244.  call temp:= `w`(v3, v1, v2) @signature `Lokio/m0/a;.w:(Lokio/ByteString;II)Lokio/ByteString;` @kind static;
  #L32124a.  v1:= temp @kind object;
  #L32124c.  call temp:= `hex`(v1) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L321252.  v1:= temp @kind object;
  #L321254.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32125a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321260.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321266.  v0:= temp @kind object;
  #L321268.  return v0 @kind object;
  #L32126a.  v3:= v19 @kind object;
  #L32126e.  call temp:= `utf8`(v19) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L321274.  v2:= temp @kind object;
  #L321276.  if v2 == 0 then goto L321344;
  #L32127a.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L321280.  v7:= temp @kind object;
  #L321282.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L321286.  call `checkExpressionValueIsNotNull`(v7, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L32128c.  v10:= 0I;
  #L32128e.  v11:= 4I;
  #L321290.  v12:= 0I;
  #L321292.  v8:= "\\" @kind object;
  #L321296.  v9:= "\\\\" @kind object;
  #L32129a.  call temp:= `replace$default`(v7, v8, v9, v10, v11, v12) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3212a0.  v13:= temp @kind object;
  #L3212a2.  v16:= 0I;
  #L3212a6.  v17:= 4I;
  #L3212aa.  v18:= 0I;
  #L3212ae.  v14:= "\n" @kind object;
  #L3212b2.  v15:= "\\n" @kind object;
  #L3212b6.  call temp:= `replace$default`(v13, v14, v15, v16, v17, v18) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3212bc.  v7:= temp @kind object;
  #L3212be.  v8:= "\r" @kind object;
  #L3212c2.  v9:= "\\r" @kind object;
  #L3212c6.  call temp:= `replace$default`(v7, v8, v9, v10, v11, v12) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3212cc.  v1:= temp @kind object;
  #L3212ce.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3212d4.  v2:= temp;
  #L3212d6.  if v0 >= v2 then goto L32131a;
  #L3212da.  v0:= new `java.lang.StringBuilder`;
  #L3212de.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3212e4.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3212ea.  call temp:= `getData$jvm`(v19) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3212f0.  v2:= temp @kind object;
  #L3212f2.  v2:= length @variable v2;
  #L3212f4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3212fa.  v2:= " text=" @kind object;
  #L3212fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321304.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32130a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321310.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321316.  v0:= temp @kind object;
  #L321318.  goto L321342;
  #L32131a.  v0:= new `java.lang.StringBuilder`;
  #L32131e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321324.  v2:= "[text=" @kind object;
  #L321328.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32132e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321334.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32133a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321340.  v0:= temp @kind object;
  #L321342.  return v0 @kind object;
  #L321344.  v0:= new `kotlin.TypeCastException`;
  #L321348.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L32134c.  call `<init>`(v0, v1) @signature `Lkotlin/TypeCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L321352.  throw v0;
}
procedure `java.lang.String` `B`(`okio.ByteString` v1 @kind object) @signature `Lokio/m0/a;.B:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L321364.  call temp:= `getUtf8$jvm`(v1) @signature `Lokio/ByteString;.getUtf8$jvm:()Ljava/lang/String;` @kind virtual;
  #L32136a.  v0:= temp @kind object;
  #L32136c.  if v0 != 0 then goto L321386;
  #L321370.  call temp:= `internalArray$jvm`(v1) @signature `Lokio/ByteString;.internalArray$jvm:()[B` @kind virtual;
  #L321376.  v0:= temp @kind object;
  #L321378.  call temp:= `c`(v0) @signature `Lokio/b;.c:([B)Ljava/lang/String;` @kind static;
  #L32137e.  v0:= temp @kind object;
  #L321380.  call `setUtf8$jvm`(v1, v0) @signature `Lokio/ByteString;.setUtf8$jvm:(Ljava/lang/String;)V` @kind virtual;
  #L321386.  return v0 @kind object;
}
procedure `int` `C`(`char` v3 ) @signature `Lokio/m0/a;.C:(C)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L321040.  v0:= 48I;
  #L321044.  if v0 <= v3 then goto L32104a;
  #L321048.  goto L321056;
  #L32104a.  v1:= 57I;
  #L32104e.  if v1 < v3 then goto L321056;
  #L321052.  v3:= v3 - v0 @kind int;
  #L321054.  goto L321082;
  #L321056.  v0:= 102I;
  #L32105a.  v1:= 97I;
  #L32105e.  if v1 <= v3 then goto L321064;
  #L321062.  goto L321070;
  #L321064.  if v0 < v3 then goto L321070;
  #L321068.  v3:= v3 - v1 @kind int;
  #L32106a.  v3:= v3 + 10;
  #L32106e.  goto L321082;
  #L321070.  v0:= 70I;
  #L321074.  v1:= 65I;
  #L321078.  if v1 > v3 then goto L321084;
  #L32107c.  if v0 < v3 then goto L321084;
  #L321080.  goto L321068;
  #L321082.  return v3;
  #L321084.  v0:= new `java.lang.IllegalArgumentException`;
  #L321088.  v1:= new `java.lang.StringBuilder`;
  #L32108c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321092.  v2:= "Unexpected hex digit: " @kind object;
  #L321096.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32109c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3210a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3210a8.  v3:= temp @kind object;
  #L3210aa.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3210b0.  goto L3210b4;
  #L3210b2.  throw v0;
  #L3210b4.  goto L3210b2;
}
procedure `okio.ByteString` `D`() @signature `Lokio/m0/a;.D:()Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L321720.  v0:= `@@okio.m0.a.b` @type ^`okio.ByteString` @kind object;
  #L321724.  return v0 @kind object;
}
procedure `int` `a`(`byte`[] v19 @kind object, `int` v20 ) @signature `Lokio/m0/a;.a:([BI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L320b10.  v0:= v19 @kind object;
  #L320b14.  v1:= v20;
  #L320b18.  v2:= length @variable v0;
  #L320b1a.  v4:= 0I;
  #L320b1c.  v5:= 0I;
  #L320b1e.  v6:= 0I;
  #L320b20.  if v4 >= v2 then goto L320ebe;
  #L320b24.  v7:= v0[v4] @kind byte;
  #L320b28.  v8:= 127I;
  #L320b2c.  v9:= 159I;
  #L320b30.  v10:= 31I;
  #L320b34.  v11:= 13I;
  #L320b38.  v12:= 65533I;
  #L320b3e.  v13:= 10I;
  #L320b42.  v14:= 65536I;
  #L320b46.  v16:= -1I;
  #L320b4a.  v17:= 1I;
  #L320b4e.  if v7 < 0 then goto L320bf2;
  #L320b52.  v18:= v6 + 1;
  #L320b56.  if v6 != v1 then goto L320b5c;
  #L320b5a.  return v5;
  #L320b5c.  if v7 == v13 then goto L320b80;
  #L320b60.  if v7 == v11 then goto L320b80;
  #L320b64.  if v7 < 0 then goto L320b6c;
  #L320b68.  if v10 >= v7 then goto L320b76;
  #L320b6c.  if v8 <= v7 then goto L320b72;
  #L320b70.  goto L320b7a;
  #L320b72.  if v9 < v7 then goto L320b7a;
  #L320b76.  v6:= 1I;
  #L320b78.  goto L320b7c;
  #L320b7a.  v6:= 0I;
  #L320b7c.  if v6 != 0 then goto L320b84;
  #L320b80.  if v7 != v12 then goto L320b86;
  #L320b84.  return v16;
  #L320b86.  if v7 >= v14 then goto L320b8e;
  #L320b8a.  v6:= 1I;
  #L320b8c.  goto L320b90;
  #L320b8e.  v6:= 2I;
  #L320b90.  v5:= v5 + v6 @kind int;
  #L320b92.  v4:= v4 + 1;
  #L320b96.  v6:= v18;
  #L320b9a.  if v4 >= v2 then goto L320b20;
  #L320b9e.  v7:= v0[v4] @kind byte;
  #L320ba2.  if v7 < 0 then goto L320b20;
  #L320ba6.  v7:= v4 + 1;
  #L320baa.  v4:= v0[v4] @kind byte;
  #L320bae.  v18:= v6 + 1;
  #L320bb2.  if v6 != v1 then goto L320bb8;
  #L320bb6.  return v5;
  #L320bb8.  if v4 == v13 then goto L320bdc;
  #L320bbc.  if v4 == v11 then goto L320bdc;
  #L320bc0.  if v4 < 0 then goto L320bc8;
  #L320bc4.  if v10 >= v4 then goto L320bd2;
  #L320bc8.  if v8 <= v4 then goto L320bce;
  #L320bcc.  goto L320bd6;
  #L320bce.  if v9 < v4 then goto L320bd6;
  #L320bd2.  v6:= 1I;
  #L320bd4.  goto L320bd8;
  #L320bd6.  v6:= 0I;
  #L320bd8.  if v6 != 0 then goto L320be0;
  #L320bdc.  if v4 != v12 then goto L320be2;
  #L320be0.  return v16;
  #L320be2.  if v4 >= v14 then goto L320bea;
  #L320be6.  v4:= 1I;
  #L320be8.  goto L320bec;
  #L320bea.  v4:= 2I;
  #L320bec.  v5:= v5 + v4 @kind int;
  #L320bee.  v4:= v7;
  #L320bf0.  goto L320b96;
  #L320bf2.  v3:= v7 ^> 5;
  #L320bf6.  v15:= -2I;
  #L320bf8.  v14:= 128I;
  #L320bfc.  if v3 != v15 then goto L320c96;
  #L320c00.  v3:= v4 + 1;
  #L320c04.  if v2 > v3 then goto L320c10;
  #L320c08.  if v6 != v1 then goto L320c0e;
  #L320c0c.  return v5;
  #L320c0e.  return v16;
  #L320c10.  v7:= v0[v4] @kind byte;
  #L320c14.  v3:= v0[v3] @kind byte;
  #L320c18.  v15:= v3 ^& 192;
  #L320c1c.  if v15 != v14 then goto L320c24;
  #L320c20.  v15:= 1I;
  #L320c22.  goto L320c26;
  #L320c24.  v15:= 0I;
  #L320c26.  if v15 != 0 then goto L320c32;
  #L320c2a.  if v6 != v1 then goto L320c30;
  #L320c2e.  return v5;
  #L320c30.  return v16;
  #L320c32.  v3:= v3 ^~ 3968;
  #L320c36.  v7:= v7 ^< 6;
  #L320c3a.  v3:= v3 ^~ v7 @kind int;
  #L320c3c.  if v3 >= v14 then goto L320c48;
  #L320c40.  if v6 != v1 then goto L320c46;
  #L320c44.  return v5;
  #L320c46.  return v16;
  #L320c48.  v7:= v6 + 1;
  #L320c4c.  if v6 != v1 then goto L320c52;
  #L320c50.  return v5;
  #L320c52.  if v3 == v13 then goto L320c76;
  #L320c56.  if v3 == v11 then goto L320c76;
  #L320c5a.  if v3 < 0 then goto L320c62;
  #L320c5e.  if v10 >= v3 then goto L320c6c;
  #L320c62.  if v8 <= v3 then goto L320c68;
  #L320c66.  goto L320c70;
  #L320c68.  if v9 < v3 then goto L320c70;
  #L320c6c.  v6:= 1I;
  #L320c6e.  goto L320c72;
  #L320c70.  v6:= 0I;
  #L320c72.  if v6 != 0 then goto L320c7a;
  #L320c76.  if v3 != v12 then goto L320c7c;
  #L320c7a.  return v16;
  #L320c7c.  v6:= 65536I;
  #L320c80.  if v3 >= v6 then goto L320c88;
  #L320c84.  v15:= 1I;
  #L320c86.  goto L320c8a;
  #L320c88.  v15:= 2I;
  #L320c8a.  v5:= v5 + v15 @kind int;
  #L320c8c.  v4:= v4 + 2;
  #L320c90.  v6:= v7;
  #L320c92.  goto L320b20;
  #L320c96.  v3:= v7 ^> 4;
  #L320c9a.  v12:= 55296I;
  #L320ca0.  v9:= 57343I;
  #L320ca6.  if v3 != v15 then goto L320d8c;
  #L320caa.  v3:= v4 + 2;
  #L320cae.  if v2 > v3 then goto L320cba;
  #L320cb2.  if v6 != v1 then goto L320cb8;
  #L320cb6.  return v5;
  #L320cb8.  return v16;
  #L320cba.  v7:= v0[v4] @kind byte;
  #L320cbe.  v15:= v4 + 1;
  #L320cc2.  v15:= v0[v15] @kind byte;
  #L320cc6.  v8:= v15 ^& 192;
  #L320cca.  if v8 != v14 then goto L320cd2;
  #L320cce.  v8:= 1I;
  #L320cd0.  goto L320cd4;
  #L320cd2.  v8:= 0I;
  #L320cd4.  if v8 != 0 then goto L320ce0;
  #L320cd8.  if v6 != v1 then goto L320cde;
  #L320cdc.  return v5;
  #L320cde.  return v16;
  #L320ce0.  v3:= v0[v3] @kind byte;
  #L320ce4.  v8:= v3 ^& 192;
  #L320ce8.  if v8 != v14 then goto L320cf0;
  #L320cec.  v8:= 1I;
  #L320cee.  goto L320cf2;
  #L320cf0.  v8:= 0I;
  #L320cf2.  if v8 != 0 then goto L320cfe;
  #L320cf6.  if v6 != v1 then goto L320cfc;
  #L320cfa.  return v5;
  #L320cfc.  return v16;
  #L320cfe.  v8:= -123008I;
  #L320d04.  v3:= v3 ^~ v8 @kind int;
  #L320d06.  v8:= v15 ^< 6;
  #L320d0a.  v3:= v3 ^~ v8 @kind int;
  #L320d0c.  v7:= v7 ^< 12;
  #L320d10.  v3:= v3 ^~ v7 @kind int;
  #L320d12.  v7:= 2048I;
  #L320d16.  if v3 >= v7 then goto L320d22;
  #L320d1a.  if v6 != v1 then goto L320d20;
  #L320d1e.  return v5;
  #L320d20.  return v16;
  #L320d22.  if v12 <= v3 then goto L320d28;
  #L320d26.  goto L320d34;
  #L320d28.  if v9 < v3 then goto L320d34;
  #L320d2c.  if v6 != v1 then goto L320d32;
  #L320d30.  return v5;
  #L320d32.  return v16;
  #L320d34.  v7:= v6 + 1;
  #L320d38.  if v6 != v1 then goto L320d3e;
  #L320d3c.  return v5;
  #L320d3e.  if v3 == v13 then goto L320d6a;
  #L320d42.  if v3 == v11 then goto L320d6a;
  #L320d46.  if v3 < 0 then goto L320d4e;
  #L320d4a.  if v10 >= v3 then goto L320d60;
  #L320d4e.  v6:= 127I;
  #L320d52.  if v6 <= v3 then goto L320d58;
  #L320d56.  goto L320d64;
  #L320d58.  v6:= 159I;
  #L320d5c.  if v6 < v3 then goto L320d64;
  #L320d60.  v6:= 1I;
  #L320d62.  goto L320d66;
  #L320d64.  v6:= 0I;
  #L320d66.  if v6 != 0 then goto L320d74;
  #L320d6a.  v6:= 65533I;
  #L320d70.  if v3 != v6 then goto L320d76;
  #L320d74.  return v16;
  #L320d76.  v6:= 65536I;
  #L320d7a.  if v3 >= v6 then goto L320d82;
  #L320d7e.  v15:= 1I;
  #L320d80.  goto L320d84;
  #L320d82.  v15:= 2I;
  #L320d84.  v5:= v5 + v15 @kind int;
  #L320d86.  v4:= v4 + 3;
  #L320d8a.  goto L320c90;
  #L320d8c.  v3:= v7 ^> 3;
  #L320d90.  if v3 != v15 then goto L320eb6;
  #L320d94.  v3:= v4 + 3;
  #L320d98.  if v2 > v3 then goto L320da4;
  #L320d9c.  if v6 != v1 then goto L320da2;
  #L320da0.  return v5;
  #L320da2.  return v16;
  #L320da4.  v7:= v0[v4] @kind byte;
  #L320da8.  v8:= v4 + 1;
  #L320dac.  v8:= v0[v8] @kind byte;
  #L320db0.  v15:= v8 ^& 192;
  #L320db4.  if v15 != v14 then goto L320dbc;
  #L320db8.  v15:= 1I;
  #L320dba.  goto L320dbe;
  #L320dbc.  v15:= 0I;
  #L320dbe.  if v15 != 0 then goto L320dca;
  #L320dc2.  if v6 != v1 then goto L320dc8;
  #L320dc6.  return v5;
  #L320dc8.  return v16;
  #L320dca.  v15:= v4 + 2;
  #L320dce.  v15:= v0[v15] @kind byte;
  #L320dd2.  v10:= v15 ^& 192;
  #L320dd6.  if v10 != v14 then goto L320dde;
  #L320dda.  v10:= 1I;
  #L320ddc.  goto L320de0;
  #L320dde.  v10:= 0I;
  #L320de0.  if v10 != 0 then goto L320dec;
  #L320de4.  if v6 != v1 then goto L320dea;
  #L320de8.  return v5;
  #L320dea.  return v16;
  #L320dec.  v3:= v0[v3] @kind byte;
  #L320df0.  v10:= v3 ^& 192;
  #L320df4.  if v10 != v14 then goto L320dfc;
  #L320df8.  v10:= 1I;
  #L320dfa.  goto L320dfe;
  #L320dfc.  v10:= 0I;
  #L320dfe.  if v10 != 0 then goto L320e0a;
  #L320e02.  if v6 != v1 then goto L320e08;
  #L320e06.  return v5;
  #L320e08.  return v16;
  #L320e0a.  v10:= 3678080I;
  #L320e10.  v3:= v3 ^~ v10 @kind int;
  #L320e12.  v10:= v15 ^< 6;
  #L320e16.  v3:= v3 ^~ v10 @kind int;
  #L320e18.  v8:= v8 ^< 12;
  #L320e1c.  v3:= v3 ^~ v8 @kind int;
  #L320e1e.  v7:= v7 ^< 18;
  #L320e22.  v3:= v3 ^~ v7 @kind int;
  #L320e24.  v7:= 1114111I;
  #L320e2a.  if v3 <= v7 then goto L320e36;
  #L320e2e.  if v6 != v1 then goto L320e34;
  #L320e32.  return v5;
  #L320e34.  return v16;
  #L320e36.  if v12 <= v3 then goto L320e3c;
  #L320e3a.  goto L320e48;
  #L320e3c.  if v9 < v3 then goto L320e48;
  #L320e40.  if v6 != v1 then goto L320e46;
  #L320e44.  return v5;
  #L320e46.  return v16;
  #L320e48.  v7:= 65536I;
  #L320e4c.  if v3 >= v7 then goto L320e58;
  #L320e50.  if v6 != v1 then goto L320e56;
  #L320e54.  return v5;
  #L320e56.  return v16;
  #L320e58.  v7:= v6 + 1;
  #L320e5c.  if v6 != v1 then goto L320e62;
  #L320e60.  return v5;
  #L320e62.  if v3 == v13 then goto L320e92;
  #L320e66.  if v3 == v11 then goto L320e92;
  #L320e6a.  if v3 < 0 then goto L320e76;
  #L320e6e.  v6:= 31I;
  #L320e72.  if v6 >= v3 then goto L320e88;
  #L320e76.  v6:= 127I;
  #L320e7a.  if v6 <= v3 then goto L320e80;
  #L320e7e.  goto L320e8c;
  #L320e80.  v6:= 159I;
  #L320e84.  if v6 < v3 then goto L320e8c;
  #L320e88.  v6:= 1I;
  #L320e8a.  goto L320e8e;
  #L320e8c.  v6:= 0I;
  #L320e8e.  if v6 != 0 then goto L320e9c;
  #L320e92.  v6:= 65533I;
  #L320e98.  if v3 != v6 then goto L320e9e;
  #L320e9c.  return v16;
  #L320e9e.  v6:= 65536I;
  #L320ea2.  if v3 >= v6 then goto L320eaa;
  #L320ea6.  v15:= 1I;
  #L320ea8.  goto L320eac;
  #L320eaa.  v15:= 2I;
  #L320eac.  v5:= v5 + v15 @kind int;
  #L320eae.  v4:= v4 + 4;
  #L320eb2.  goto L320c90;
  #L320eb6.  if v6 != v1 then goto L320ebc;
  #L320eba.  return v5;
  #L320ebc.  return v16;
  #L320ebe.  return v5;
}
procedure `java.lang.String` `b`(`okio.ByteString` v2 @kind object) @signature `Lokio/m0/a;.b:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3210c8.  call temp:= `getData$jvm`(v2) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3210ce.  v2:= temp @kind object;
  #L3210d0.  v0:= 0I;
  #L3210d2.  v1:= 1I;
  #L3210d4.  call temp:= `c`(v2, v0, v1, v0) @signature `Lokio/a;.c:([B[BILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3210da.  v2:= temp @kind object;
  #L3210dc.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`okio.ByteString` v1 @kind object) @signature `Lokio/m0/a;.c:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3210f0.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3210f6.  v1:= temp @kind object;
  #L3210f8.  call temp:= `d`() @signature `Lokio/a;.d:()[B` @kind static;
  #L3210fe.  v0:= temp @kind object;
  #L321100.  call temp:= `b`(v1, v0) @signature `Lokio/a;.b:([B[B)Ljava/lang/String;` @kind static;
  #L321106.  v1:= temp @kind object;
  #L321108.  return v1 @kind object;
}
procedure `int` `d`(`okio.ByteString` v9 @kind object, `okio.ByteString` v10 @kind object) @signature `Lokio/m0/a;.d:(Lokio/ByteString;Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L320ed0.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320ed6.  v0:= temp;
  #L320ed8.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320ede.  v1:= temp;
  #L320ee0.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L320ee6.  v2:= temp;
  #L320ee8.  v3:= 0I;
  #L320eea.  v4:= 0I;
  #L320eec.  v5:= -1I;
  #L320eee.  v6:= 1I;
  #L320ef0.  if v4 >= v2 then goto L320f20;
  #L320ef4.  call temp:= `getByte`(v9, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L320efa.  v7:= temp;
  #L320efc.  v7:= v7 ^& 255;
  #L320f00.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L320f06.  v8:= temp;
  #L320f08.  v8:= v8 ^& 255;
  #L320f0c.  if v7 != v8 then goto L320f16;
  #L320f10.  v4:= v4 + 1;
  #L320f14.  goto L320eec;
  #L320f16.  if v7 >= v8 then goto L320f1c;
  #L320f1a.  goto L320f1e;
  #L320f1c.  v5:= 1I;
  #L320f1e.  return v5;
  #L320f20.  if v0 != v1 then goto L320f26;
  #L320f24.  return v3;
  #L320f26.  if v0 >= v1 then goto L320f2c;
  #L320f2a.  goto L320f2e;
  #L320f2c.  v5:= 1I;
  #L320f2e.  return v5;
}
procedure `okio.ByteString` `e`(`java.lang.String` v1 @kind object) @signature `Lokio/m0/a;.e:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L321398.  call temp:= `a`(v1) @signature `Lokio/a;.a:(Ljava/lang/String;)[B` @kind static;
  #L32139e.  v1:= temp @kind object;
  #L3213a0.  if v1 == 0 then goto L3213b0;
  #L3213a4.  v0:= new `okio.ByteString`;
  #L3213a8.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3213ae.  goto L3213b2;
  #L3213b0.  v0:= 0I;
  #L3213b2.  return v0 @kind object;
}
procedure `okio.ByteString` `f`(`java.lang.String` v6 @kind object) @signature `Lokio/m0/a;.f:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3213c4.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3213ca.  v0:= temp;
  #L3213cc.  v0:= v0 %% 2;
  #L3213d0.  v1:= 0I;
  #L3213d2.  v2:= 1I;
  #L3213d4.  if v0 != 0 then goto L3213dc;
  #L3213d8.  v0:= 1I;
  #L3213da.  goto L3213de;
  #L3213dc.  v0:= 0I;
  #L3213de.  if v0 == 0 then goto L32143a;
  #L3213e2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3213e8.  v0:= temp;
  #L3213ea.  v0:= v0 / 2;
  #L3213ee.  v3:= new `byte`[v0];
  #L3213f2.  if v1 >= v0 then goto L32142e;
  #L3213f6.  v4:= v1 * 2;
  #L3213fa.  call temp:= `charAt`(v6, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L321400.  v5:= temp;
  #L321402.  call temp:= `C`(v5) @signature `Lokio/m0/a;.C:(C)I` @kind static;
  #L321408.  v5:= temp;
  #L32140a.  v5:= v5 ^< 4;
  #L32140e.  v4:= v4 + v2 @kind int;
  #L321410.  call temp:= `charAt`(v6, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L321416.  v4:= temp;
  #L321418.  call temp:= `C`(v4) @signature `Lokio/m0/a;.C:(C)I` @kind static;
  #L32141e.  v4:= temp;
  #L321420.  v5:= v5 + v4 @kind int;
  #L321422.  v4:= (`byte`) v5 @kind i2b;
  #L321424.  v3[v1]:= v4 @kind byte;
  #L321428.  v1:= v1 + 1;
  #L32142c.  goto L3213f2;
  #L32142e.  v6:= new `okio.ByteString`;
  #L321432.  call `<init>`(v6, v3) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L321438.  return v6 @kind object;
  #L32143a.  v0:= new `java.lang.StringBuilder`;
  #L32143e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321444.  v1:= "Unexpected hex string: " @kind object;
  #L321448.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32144e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321454.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32145a.  v6:= temp @kind object;
  #L32145c.  v0:= new `java.lang.IllegalArgumentException`;
  #L321460.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L321466.  v6:= temp @kind object;
  #L321468.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32146e.  goto L321472;
  #L321470.  throw v0;
  #L321472.  goto L321470;
}
procedure `okio.ByteString` `g`(`java.lang.String` v2 @kind object) @signature `Lokio/m0/a;.g:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L321484.  v0:= new `okio.ByteString`;
  #L321488.  call temp:= `b`(v2) @signature `Lokio/b;.b:(Ljava/lang/String;)[B` @kind static;
  #L32148e.  v1:= temp @kind object;
  #L321490.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L321496.  call `setUtf8$jvm`(v0, v2) @signature `Lokio/ByteString;.setUtf8$jvm:(Ljava/lang/String;)V` @kind virtual;
  #L32149c.  return v0 @kind object;
}
procedure `boolean` `h`(`okio.ByteString` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokio/m0/a;.h:(Lokio/ByteString;Lokio/ByteString;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L320958.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L32095e.  v0:= temp;
  #L320960.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320966.  v1:= temp;
  #L320968.  v0:= v0 - v1 @kind int;
  #L32096a.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320970.  v1:= temp;
  #L320972.  v2:= 0I;
  #L320974.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L32097a.  v3:= temp;
  #L32097c.  return v3;
}
procedure `boolean` `i`(`okio.ByteString` v3 @kind object, `byte`[] v4 @kind object) @signature `Lokio/m0/a;.i:(Lokio/ByteString;[B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L32092c.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320932.  v0:= temp;
  #L320934.  v1:= length @variable v4;
  #L320936.  v0:= v0 - v1 @kind int;
  #L320938.  v1:= length @variable v4;
  #L32093a.  v2:= 0I;
  #L32093c.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L320942.  v3:= temp;
  #L320944.  return v3;
}
procedure `boolean` `j`(`okio.ByteString` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lokio/m0/a;.j:(Lokio/ByteString;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L320990.  v0:= 1I;
  #L320992.  v1:= 0I;
  #L320994.  if v5 != v4 then goto L32099a;
  #L320998.  goto L3209de;
  #L32099a.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L32099e.  if v2 == 0 then goto L3209dc;
  #L3209a2.  v5:= (`okio.ByteString`) v5 @kind object;
  #L3209a6.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L3209ac.  v2:= temp;
  #L3209ae.  call temp:= `getData$jvm`(v4) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3209b4.  v3:= temp @kind object;
  #L3209b6.  v3:= length @variable v3;
  #L3209b8.  if v2 != v3 then goto L3209dc;
  #L3209bc.  call temp:= `getData$jvm`(v4) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3209c2.  v2:= temp @kind object;
  #L3209c4.  call temp:= `getData$jvm`(v4) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3209ca.  v4:= temp @kind object;
  #L3209cc.  v4:= length @variable v4;
  #L3209ce.  call temp:= `rangeEquals`(v5, v1, v2, v1, v4) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L3209d4.  v4:= temp;
  #L3209d6.  if v4 == 0 then goto L3209dc;
  #L3209da.  goto L3209de;
  #L3209dc.  v0:= 0I;
  #L3209de.  return v0;
}
procedure `byte` `k`(`okio.ByteString` v0 @kind object, `int` v1 ) @signature `Lokio/m0/a;.k:(Lokio/ByteString;I)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L320aa4.  call temp:= `getData$jvm`(v0) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320aaa.  v0:= temp @kind object;
  #L320aac.  v0:= v0[v1] @kind byte;
  #L320ab0.  return v0;
}
procedure `int` `l`(`okio.ByteString` v0 @kind object) @signature `Lokio/m0/a;.l:(Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L320f40.  call temp:= `getData$jvm`(v0) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320f46.  v0:= temp @kind object;
  #L320f48.  v0:= length @variable v0;
  #L320f4a.  return v0;
}
procedure `int` `m`(`okio.ByteString` v1 @kind object) @signature `Lokio/m0/a;.m:(Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L320f5c.  call temp:= `getHashCode$jvm`(v1) @signature `Lokio/ByteString;.getHashCode$jvm:()I` @kind virtual;
  #L320f62.  v0:= temp;
  #L320f64.  if v0 == 0 then goto L320f6a;
  #L320f68.  return v0;
  #L320f6a.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320f70.  v0:= temp @kind object;
  #L320f72.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L320f78.  v0:= temp;
  #L320f7a.  call `setHashCode$jvm`(v1, v0) @signature `Lokio/ByteString;.setHashCode$jvm:(I)V` @kind virtual;
  #L320f80.  call temp:= `getHashCode$jvm`(v1) @signature `Lokio/ByteString;.getHashCode$jvm:()I` @kind virtual;
  #L320f86.  v1:= temp;
  #L320f88.  return v1;
}
procedure `java.lang.String` `n`(`okio.ByteString` v8 @kind object) @signature `Lokio/m0/a;.n:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32111c.  call temp:= `getData$jvm`(v8) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321122.  v0:= temp @kind object;
  #L321124.  v0:= length @variable v0;
  #L321126.  v0:= v0 * 2;
  #L32112a.  v0:= new `char`[v0];
  #L32112e.  call temp:= `getData$jvm`(v8) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321134.  v8:= temp @kind object;
  #L321136.  v1:= length @variable v8;
  #L321138.  v2:= 0I;
  #L32113a.  v3:= 0I;
  #L32113c.  if v2 >= v1 then goto L321172;
  #L321140.  v4:= v8[v2] @kind byte;
  #L321144.  v5:= v3 + 1;
  #L321148.  v6:= `@@okio.m0.a.a` @type ^`char`[] @kind object;
  #L32114c.  v7:= v4 ^> 4;
  #L321150.  v7:= v7 ^& 15;
  #L321154.  v7:= v6[v7] @kind char;
  #L321158.  v0[v3]:= v7 @kind char;
  #L32115c.  v3:= v5 + 1;
  #L321160.  v4:= v4 ^& 15;
  #L321164.  v4:= v6[v4] @kind char;
  #L321168.  v0[v5]:= v4 @kind char;
  #L32116c.  v2:= v2 + 1;
  #L321170.  goto L32113c;
  #L321172.  v8:= new `java.lang.String`;
  #L321176.  call `<init>`(v8, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L32117c.  return v8 @kind object;
}
procedure `int` `o`(`okio.ByteString` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lokio/m0/a;.o:(Lokio/ByteString;[BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L320f9c.  call temp:= `getData$jvm`(v4) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320fa2.  v0:= temp @kind object;
  #L320fa4.  v0:= length @variable v0;
  #L320fa6.  v1:= length @variable v5;
  #L320fa8.  v0:= v0 - v1 @kind int;
  #L320faa.  v1:= 0I;
  #L320fac.  call temp:= `max`(v6, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L320fb2.  v6:= temp;
  #L320fb4.  if v6 > v0 then goto L320fda;
  #L320fb8.  call temp:= `getData$jvm`(v4) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320fbe.  v2:= temp @kind object;
  #L320fc0.  v3:= length @variable v5;
  #L320fc2.  call temp:= `a`(v2, v6, v5, v1, v3) @signature `Lokio/c;.a:([BI[BII)Z` @kind static;
  #L320fc8.  v2:= temp;
  #L320fca.  if v2 == 0 then goto L320fd0;
  #L320fce.  return v6;
  #L320fd0.  if v6 == v0 then goto L320fda;
  #L320fd4.  v6:= v6 + 1;
  #L320fd8.  goto L320fb8;
  #L320fda.  v4:= -1I;
  #L320fdc.  return v4;
}
procedure `byte`[] `p`(`okio.ByteString` v0 @kind object) @signature `Lokio/m0/a;.p:(Lokio/ByteString;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L320ac4.  call temp:= `getData$jvm`(v0) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320aca.  v0:= temp @kind object;
  #L320acc.  return v0 @kind object;
}
procedure `int` `q`(`okio.ByteString` v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lokio/m0/a;.q:(Lokio/ByteString;[BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L320ff0.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320ff6.  v0:= temp @kind object;
  #L320ff8.  v0:= length @variable v0;
  #L320ffa.  v1:= length @variable v4;
  #L320ffc.  v0:= v0 - v1 @kind int;
  #L320ffe.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L321004.  v5:= temp;
  #L321006.  if v5 < 0 then goto L32102a;
  #L32100a.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321010.  v0:= temp @kind object;
  #L321012.  v1:= 0I;
  #L321014.  v2:= length @variable v4;
  #L321016.  call temp:= `a`(v0, v5, v4, v1, v2) @signature `Lokio/c;.a:([BI[BII)Z` @kind static;
  #L32101c.  v0:= temp;
  #L32101e.  if v0 == 0 then goto L321024;
  #L321022.  return v5;
  #L321024.  v5:= v5 + -1;
  #L321028.  goto L321006;
  #L32102a.  v3:= -1I;
  #L32102c.  return v3;
}
procedure `okio.ByteString` `r`(`byte`[] v2 @kind object) @signature `Lokio/m0/a;.r:([B)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3214b0.  v0:= new `okio.ByteString`;
  #L3214b4.  v1:= length @variable v2;
  #L3214b6.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3214bc.  v2:= temp @kind object;
  #L3214be.  v1:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L3214c2.  call `checkExpressionValueIsNotNull`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3214c8.  call `<init>`(v0, v2) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L3214ce.  return v0 @kind object;
}
procedure `boolean` `s`(`okio.ByteString` v0 @kind object, `int` v1 , `okio.ByteString` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/m0/a;.s:(Lokio/ByteString;ILokio/ByteString;II)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L320a3c.  call temp:= `getData$jvm`(v0) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320a42.  v0:= temp @kind object;
  #L320a44.  call temp:= `rangeEquals`(v2, v3, v0, v1, v4) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L320a4a.  v0:= temp;
  #L320a4c.  return v0;
}
procedure `boolean` `t`(`okio.ByteString` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/m0/a;.t:(Lokio/ByteString;I[BII)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3209f0.  if v2 < 0 then goto L320a28;
  #L3209f4.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3209fa.  v0:= temp @kind object;
  #L3209fc.  v0:= length @variable v0;
  #L3209fe.  v0:= v0 - v5 @kind int;
  #L320a00.  if v2 > v0 then goto L320a28;
  #L320a04.  if v4 < 0 then goto L320a28;
  #L320a08.  v0:= length @variable v3;
  #L320a0a.  v0:= v0 - v5 @kind int;
  #L320a0c.  if v4 > v0 then goto L320a28;
  #L320a10.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320a16.  v1:= temp @kind object;
  #L320a18.  call temp:= `a`(v1, v2, v3, v4, v5) @signature `Lokio/c;.a:([BI[BII)Z` @kind static;
  #L320a1e.  v1:= temp;
  #L320a20.  if v1 == 0 then goto L320a28;
  #L320a24.  v1:= 1I;
  #L320a26.  goto L320a2a;
  #L320a28.  v1:= 0I;
  #L320a2a.  return v1;
}
procedure `boolean` `u`(`okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokio/m0/a;.u:(Lokio/ByteString;Lokio/ByteString;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L320a80.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L320a86.  v0:= temp;
  #L320a88.  v1:= 0I;
  #L320a8a.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L320a90.  v2:= temp;
  #L320a92.  return v2;
}
procedure `boolean` `v`(`okio.ByteString` v2 @kind object, `byte`[] v3 @kind object) @signature `Lokio/m0/a;.v:(Lokio/ByteString;[B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L320a60.  v0:= length @variable v3;
  #L320a62.  v1:= 0I;
  #L320a64.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L320a6a.  v2:= temp;
  #L320a6c.  return v2;
}
procedure `okio.ByteString` `w`(`okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/m0/a;.w:(Lokio/ByteString;II)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3214e0.  v0:= 1I;
  #L3214e2.  v1:= 0I;
  #L3214e4.  if v4 < 0 then goto L3214ec;
  #L3214e8.  v2:= 1I;
  #L3214ea.  goto L3214ee;
  #L3214ec.  v2:= 0I;
  #L3214ee.  if v2 == 0 then goto L3215ae;
  #L3214f2.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3214f8.  v2:= temp @kind object;
  #L3214fa.  v2:= length @variable v2;
  #L3214fc.  if v5 > v2 then goto L321504;
  #L321500.  v2:= 1I;
  #L321502.  goto L321506;
  #L321504.  v2:= 0I;
  #L321506.  if v2 == 0 then goto L321564;
  #L32150a.  v2:= v5 - v4 @kind int;
  #L32150e.  if v2 < 0 then goto L321514;
  #L321512.  goto L321516;
  #L321514.  v0:= 0I;
  #L321516.  if v0 == 0 then goto L32154c;
  #L32151a.  if v4 != 0 then goto L32152e;
  #L32151e.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321524.  v0:= temp @kind object;
  #L321526.  v0:= length @variable v0;
  #L321528.  if v5 != v0 then goto L32152e;
  #L32152c.  return v3 @kind object;
  #L32152e.  v5:= new `byte`[v2];
  #L321532.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321538.  v3:= temp @kind object;
  #L32153a.  call `a`(v3, v4, v5, v1, v2) @signature `Lokio/b;.a:([BI[BII)V` @kind static;
  #L321540.  v3:= new `okio.ByteString`;
  #L321544.  call `<init>`(v3, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L32154a.  return v3 @kind object;
  #L32154c.  v3:= new `java.lang.IllegalArgumentException`;
  #L321550.  v4:= "endIndex < beginIndex" @kind object;
  #L321554.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L32155a.  v4:= temp @kind object;
  #L32155c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L321562.  throw v3;
  #L321564.  v4:= new `java.lang.StringBuilder`;
  #L321568.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32156e.  v5:= "endIndex > length(" @kind object;
  #L321572.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321578.  call temp:= `getData$jvm`(v3) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L32157e.  v3:= temp @kind object;
  #L321580.  v3:= length @variable v3;
  #L321582.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L321588.  v3:= 41I;
  #L32158c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L321592.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321598.  v3:= temp @kind object;
  #L32159a.  v4:= new `java.lang.IllegalArgumentException`;
  #L32159e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3215a4.  v3:= temp @kind object;
  #L3215a6.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3215ac.  throw v4;
  #L3215ae.  v3:= new `java.lang.IllegalArgumentException`;
  #L3215b2.  v4:= "beginIndex < 0" @kind object;
  #L3215b6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3215bc.  v4:= temp @kind object;
  #L3215be.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3215c4.  throw v3;
}
procedure `okio.ByteString` `x`(`okio.ByteString` v5 @kind object) @signature `Lokio/m0/a;.x:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3215d8.  v0:= 0I;
  #L3215da.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3215e0.  v1:= temp @kind object;
  #L3215e2.  v1:= length @variable v1;
  #L3215e4.  if v0 >= v1 then goto L32166a;
  #L3215e8.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3215ee.  v1:= temp @kind object;
  #L3215f0.  v1:= v1[v0] @kind byte;
  #L3215f4.  v2:= 65I;
  #L3215f8.  v2:= (`byte`) v2 @kind i2b;
  #L3215fa.  if v1 < v2 then goto L321664;
  #L3215fe.  v3:= 90I;
  #L321602.  v3:= (`byte`) v3 @kind i2b;
  #L321604.  if v1 <= v3 then goto L32160a;
  #L321608.  goto L321664;
  #L32160a.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321610.  v5:= temp @kind object;
  #L321612.  v4:= length @variable v5;
  #L321614.  call temp:= `copyOf`(v5, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L32161a.  v5:= temp @kind object;
  #L32161c.  v4:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L321620.  call `checkExpressionValueIsNotNull`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L321626.  v4:= v0 + 1;
  #L32162a.  v1:= v1 + 32;
  #L32162e.  v1:= (`byte`) v1 @kind i2b;
  #L321630.  v5[v0]:= v1 @kind byte;
  #L321634.  v0:= length @variable v5;
  #L321636.  if v4 >= v0 then goto L321658;
  #L32163a.  v0:= v5[v4] @kind byte;
  #L32163e.  if v0 < v2 then goto L321652;
  #L321642.  if v0 <= v3 then goto L321648;
  #L321646.  goto L321652;
  #L321648.  v0:= v0 + 32;
  #L32164c.  v0:= (`byte`) v0 @kind i2b;
  #L32164e.  v5[v4]:= v0 @kind byte;
  #L321652.  v4:= v4 + 1;
  #L321656.  goto L321634;
  #L321658.  v0:= new `okio.ByteString`;
  #L32165c.  call `<init>`(v0, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L321662.  return v0 @kind object;
  #L321664.  v0:= v0 + 1;
  #L321668.  goto L3215da;
  #L32166a.  return v5 @kind object;
}
procedure `okio.ByteString` `y`(`okio.ByteString` v5 @kind object) @signature `Lokio/m0/a;.y:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32167c.  v0:= 0I;
  #L32167e.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321684.  v1:= temp @kind object;
  #L321686.  v1:= length @variable v1;
  #L321688.  if v0 >= v1 then goto L32170e;
  #L32168c.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L321692.  v1:= temp @kind object;
  #L321694.  v1:= v1[v0] @kind byte;
  #L321698.  v2:= 97I;
  #L32169c.  v2:= (`byte`) v2 @kind i2b;
  #L32169e.  if v1 < v2 then goto L321708;
  #L3216a2.  v3:= 122I;
  #L3216a6.  v3:= (`byte`) v3 @kind i2b;
  #L3216a8.  if v1 <= v3 then goto L3216ae;
  #L3216ac.  goto L321708;
  #L3216ae.  call temp:= `getData$jvm`(v5) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L3216b4.  v5:= temp @kind object;
  #L3216b6.  v4:= length @variable v5;
  #L3216b8.  call temp:= `copyOf`(v5, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3216be.  v5:= temp @kind object;
  #L3216c0.  v4:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L3216c4.  call `checkExpressionValueIsNotNull`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3216ca.  v4:= v0 + 1;
  #L3216ce.  v1:= v1 + -32;
  #L3216d2.  v1:= (`byte`) v1 @kind i2b;
  #L3216d4.  v5[v0]:= v1 @kind byte;
  #L3216d8.  v0:= length @variable v5;
  #L3216da.  if v4 >= v0 then goto L3216fc;
  #L3216de.  v0:= v5[v4] @kind byte;
  #L3216e2.  if v0 < v2 then goto L3216f6;
  #L3216e6.  if v0 <= v3 then goto L3216ec;
  #L3216ea.  goto L3216f6;
  #L3216ec.  v0:= v0 + -32;
  #L3216f0.  v0:= (`byte`) v0 @kind i2b;
  #L3216f2.  v5[v4]:= v0 @kind byte;
  #L3216f6.  v4:= v4 + 1;
  #L3216fa.  goto L3216d8;
  #L3216fc.  v0:= new `okio.ByteString`;
  #L321700.  call `<init>`(v0, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L321706.  return v0 @kind object;
  #L321708.  v0:= v0 + 1;
  #L32170c.  goto L32167e;
  #L32170e.  return v5 @kind object;
}
procedure `byte`[] `z`(`okio.ByteString` v1 @kind object) @signature `Lokio/m0/a;.z:(Lokio/ByteString;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L320ae0.  call temp:= `getData$jvm`(v1) @signature `Lokio/ByteString;.getData$jvm:()[B` @kind virtual;
  #L320ae6.  v1:= temp @kind object;
  #L320ae8.  v0:= length @variable v1;
  #L320aea.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L320af0.  v1:= temp @kind object;
  #L320af2.  v0:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L320af6.  call `checkExpressionValueIsNotNull`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L320afc.  return v1 @kind object;
}
