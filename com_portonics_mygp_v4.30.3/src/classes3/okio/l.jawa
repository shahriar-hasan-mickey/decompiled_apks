record `okio.l` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.InputStream` @kind class {
  `okio.k` `okio.l.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.l` v0 @kind this, `okio.k` v1 @kind object) @signature `Lokio/l;.<init>:(Lokio/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L318e60.  v0.`okio.l.b` @type ^`okio.k` := v1 @kind object;
  #L318e64.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L318e6a.  return @kind void;
}
procedure `int` `available`(`okio.l` v4 @kind this) @signature `Lokio/l;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L318d98.  v0:= v4.`okio.l.b` @type ^`okio.k` @kind object;
  #L318d9c.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318da2.  v0:= temp @kind wide;
  #L318da4.  v2:= 2147483647I;
  #L318daa.  v2:= (`long`) v2 @kind i2l;
  #L318dac.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L318db2.  v0:= temp @kind wide;
  #L318db4.  v1:= (`int`) v0 @kind l2i;
  #L318db6.  return v1;
}
procedure `void` `close`(`okio.l` v0 @kind this) @signature `Lokio/l;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L318e7c.  return @kind void;
}
procedure `int` `read`(`okio.l` v5 @kind this) @signature `Lokio/l;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L318dc8.  v0:= v5.`okio.l.b` @type ^`okio.k` @kind object;
  #L318dcc.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L318dd2.  v0:= temp @kind wide;
  #L318dd4.  v2:= 0L;
  #L318dd8.  v4:= lcmp(v0, v2);
  #L318ddc.  if v4 <= 0 then goto L318df2;
  #L318de0.  v0:= v5.`okio.l.b` @type ^`okio.k` @kind object;
  #L318de4.  call temp:= `readByte`(v0) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L318dea.  v0:= temp;
  #L318dec.  v0:= v0 ^& 255;
  #L318df0.  goto L318df4;
  #L318df2.  v0:= -1I;
  #L318df4.  return v0;
}
procedure `int` `read`(`okio.l` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/l;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L318e08.  v0:= v1.`okio.l.b` @type ^`okio.k` @kind object;
  #L318e0c.  call temp:= `read`(v0, v2, v3, v4) @signature `Lokio/k;.read:([BII)I` @kind virtual;
  #L318e12.  v2:= temp;
  #L318e14.  return v2;
}
procedure `java.lang.String` `toString`(`okio.l` v2 @kind this) @signature `Lokio/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L318e28.  v0:= new `java.lang.StringBuilder`;
  #L318e2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L318e32.  v1:= v2.`okio.l.b` @type ^`okio.k` @kind object;
  #L318e36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L318e3c.  v1:= ".inputStream()" @kind object;
  #L318e40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L318e46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L318e4c.  v0:= temp @kind object;
  #L318e4e.  return v0 @kind object;
}
