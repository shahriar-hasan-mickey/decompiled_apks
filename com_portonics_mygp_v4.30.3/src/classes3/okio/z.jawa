record `okio.z` @kind class @AccessFlag PUBLIC_FINAL extends `okio.i0` @kind interface {
  `okio.k` `okio.z.b` @AccessFlag PRIVATE_FINAL;
  `okio.e0` `okio.z.c` @AccessFlag PRIVATE;
  `int` `okio.z.d` @AccessFlag PRIVATE;
  `boolean` `okio.z.e` @AccessFlag PRIVATE;
  `long` `okio.z.f` @AccessFlag PRIVATE;
  `okio.o` `okio.z.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.z` v0 @kind this, `okio.o` v1 @kind object) @signature `Lokio/z;.<init>:(Lokio/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31db44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31db4a.  v0.`okio.z.g` @type ^`okio.o` := v1 @kind object;
  #L31db4e.  call temp:= `N`(v1) @signature `Lokio/o;.N:()Lokio/k;` @kind interface;
  #L31db54.  v1:= temp @kind object;
  #L31db56.  v0.`okio.z.b` @type ^`okio.k` := v1 @kind object;
  #L31db5a.  v1:= v1.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31db5e.  v0.`okio.z.c` @type ^`okio.e0` := v1 @kind object;
  #L31db62.  if v1 == 0 then goto L31db6c;
  #L31db66.  v1:= v1.`okio.e0.c` @type ^`int`;
  #L31db6a.  goto L31db6e;
  #L31db6c.  v1:= -1I;
  #L31db6e.  v0.`okio.z.d` @type ^`int` := v1;
  #L31db72.  return @kind void;
}
procedure `void` `close`(`okio.z` v1 @kind this) @signature `Lokio/z;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31db84.  v0:= 1I;
  #L31db86.  v1.`okio.z.e` @type ^`boolean` := v0 @kind boolean;
  #L31db8a.  return @kind void;
}
procedure `long` `read`(`okio.z` v8 @kind this, `okio.k` v9 @kind object, `long` v10 ) @signature `Lokio/z;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31da20.  v0:= v8.`okio.z.e` @type ^`boolean` @kind boolean;
  #L31da24.  v1:= 1I;
  #L31da26.  v0:= v0 ^~ v1 @kind int;
  #L31da28.  if v0 == 0 then goto L31dafa;
  #L31da2c.  v0:= v8.`okio.z.c` @type ^`okio.e0` @kind object;
  #L31da30.  if v0 == 0 then goto L31da5a;
  #L31da34.  v2:= v8.`okio.z.b` @type ^`okio.k` @kind object;
  #L31da38.  v2:= v2.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31da3c.  if v0 != v2 then goto L31da58;
  #L31da40.  v0:= v8.`okio.z.d` @type ^`int`;
  #L31da44.  if v2 != 0 then goto L31da4e;
  #L31da48.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31da4e.  v2:= v2.`okio.e0.c` @type ^`int`;
  #L31da52.  if v0 != v2 then goto L31da58;
  #L31da56.  goto L31da5a;
  #L31da58.  v1:= 0I;
  #L31da5a.  if v1 == 0 then goto L31dae2;
  #L31da5e.  v0:= v8.`okio.z.g` @type ^`okio.o` @kind object;
  #L31da62.  v1:= v8.`okio.z.f` @type ^`long` @kind wide;
  #L31da66.  v1:= v1 + v10 @kind long;
  #L31da68.  call temp:= `request`(v0, v1) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L31da6e.  v0:= v8.`okio.z.c` @type ^`okio.e0` @kind object;
  #L31da72.  if v0 != 0 then goto L31da98;
  #L31da76.  v0:= v8.`okio.z.b` @type ^`okio.k` @kind object;
  #L31da7a.  v0:= v0.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31da7e.  if v0 == 0 then goto L31da98;
  #L31da82.  v8.`okio.z.c` @type ^`okio.e0` := v0 @kind object;
  #L31da86.  if v0 != 0 then goto L31da90;
  #L31da8a.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31da90.  v0:= v0.`okio.e0.c` @type ^`int`;
  #L31da94.  v8.`okio.z.d` @type ^`int` := v0;
  #L31da98.  v0:= v8.`okio.z.b` @type ^`okio.k` @kind object;
  #L31da9c.  call temp:= `f1`(v0) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31daa2.  v0:= temp @kind wide;
  #L31daa4.  v2:= v8.`okio.z.f` @type ^`long` @kind wide;
  #L31daa8.  v0:= v0 - v2 @kind long;
  #L31daaa.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31dab0.  v10:= temp @kind wide;
  #L31dab2.  v0:= 0L;
  #L31dab6.  v2:= lcmp(v10, v0);
  #L31daba.  if v2 > 0 then goto L31dac4;
  #L31dabe.  v9:= -1L;
  #L31dac2.  return v9 @kind wide;
  #L31dac4.  v2:= v8.`okio.z.b` @type ^`okio.k` @kind object;
  #L31dac8.  v4:= v8.`okio.z.f` @type ^`long` @kind wide;
  #L31dacc.  v3:= v9 @kind object;
  #L31dace.  v6:= v10 @kind wide;
  #L31dad0.  call temp:= `u0`(v2, v3, v4, v6) @signature `Lokio/k;.u0:(Lokio/k;JJ)Lokio/k;` @kind virtual;
  #L31dad6.  v0:= v8.`okio.z.f` @type ^`long` @kind wide;
  #L31dada.  v0:= v0 + v10 @kind long;
  #L31dadc.  v8.`okio.z.f` @type ^`long` := v0 @kind wide;
  #L31dae0.  return v10 @kind wide;
  #L31dae2.  v9:= new `java.lang.IllegalStateException`;
  #L31dae6.  v10:= "Peek source is invalid because upstream source was used" @kind object;
  #L31daea.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31daf0.  v10:= temp @kind object;
  #L31daf2.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31daf8.  throw v9;
  #L31dafa.  v9:= new `java.lang.IllegalStateException`;
  #L31dafe.  v10:= "closed" @kind object;
  #L31db02.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31db08.  v10:= temp @kind object;
  #L31db0a.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31db10.  throw v9;
}
procedure `okio.l0` `timeout`(`okio.z` v1 @kind this) @signature `Lokio/z;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31db24.  v0:= v1.`okio.z.g` @type ^`okio.o` @kind object;
  #L31db28.  call temp:= `timeout`(v0) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L31db2e.  v0:= temp @kind object;
  #L31db30.  return v0 @kind object;
}
