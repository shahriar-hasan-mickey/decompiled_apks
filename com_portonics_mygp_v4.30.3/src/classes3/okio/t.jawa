record `okio.t` @kind class @AccessFlag PUBLIC_FINAL extends `okio.i0` @kind interface {
  `int` `okio.t.b` @AccessFlag PRIVATE;
  `boolean` `okio.t.c` @AccessFlag PRIVATE;
  `okio.o` `okio.t.d` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.t.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.t` v0 @kind this, `okio.o` v1 @kind object, `java.util.zip.Inflater` v2 @kind object) @signature `Lokio/t;.<init>:(Lokio/o;Ljava/util/zip/Inflater;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31cafc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31cb02.  v0.`okio.t.d` @type ^`okio.o` := v1 @kind object;
  #L31cb06.  v0.`okio.t.e` @type ^`java.util.zip.Inflater` := v2 @kind object;
  #L31cb0a.  return @kind void;
}
procedure `void` `c`(`okio.t` v4 @kind this) @signature `Lokio/t;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31cb54.  v0:= v4.`okio.t.b` @type ^`int`;
  #L31cb58.  if v0 != 0 then goto L31cb5e;
  #L31cb5c.  return @kind void;
  #L31cb5e.  v1:= v4.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31cb62.  call temp:= `getRemaining`(v1) @signature `Ljava/util/zip/Inflater;.getRemaining:()I` @kind virtual;
  #L31cb68.  v1:= temp;
  #L31cb6a.  v0:= v0 - v1 @kind int;
  #L31cb6c.  v1:= v4.`okio.t.b` @type ^`int`;
  #L31cb70.  v1:= v1 - v0 @kind int;
  #L31cb72.  v4.`okio.t.b` @type ^`int` := v1;
  #L31cb76.  v1:= v4.`okio.t.d` @type ^`okio.o` @kind object;
  #L31cb7a.  v2:= (`long`) v0 @kind i2l;
  #L31cb7c.  call `skip`(v1, v2) @signature `Lokio/o;.skip:(J)V` @kind interface;
  #L31cb82.  return @kind void;
}
procedure `boolean` `a`(`okio.t` v5 @kind this) @signature `Lokio/t;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31c8cc.  v0:= v5.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31c8d0.  call temp:= `needsInput`(v0) @signature `Ljava/util/zip/Inflater;.needsInput:()Z` @kind virtual;
  #L31c8d6.  v0:= temp;
  #L31c8d8.  v1:= 0I;
  #L31c8da.  if v0 != 0 then goto L31c8e0;
  #L31c8de.  return v1;
  #L31c8e0.  call `c`(v5) @signature `Lokio/t;.c:()V` @kind direct;
  #L31c8e6.  v0:= v5.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31c8ea.  call temp:= `getRemaining`(v0) @signature `Ljava/util/zip/Inflater;.getRemaining:()I` @kind virtual;
  #L31c8f0.  v0:= temp;
  #L31c8f2.  v2:= 1I;
  #L31c8f4.  if v0 != 0 then goto L31c8fc;
  #L31c8f8.  v0:= 1I;
  #L31c8fa.  goto L31c8fe;
  #L31c8fc.  v0:= 0I;
  #L31c8fe.  if v0 == 0 then goto L31c94c;
  #L31c902.  v0:= v5.`okio.t.d` @type ^`okio.o` @kind object;
  #L31c906.  call temp:= `O`(v0) @signature `Lokio/o;.O:()Z` @kind interface;
  #L31c90c.  v0:= temp;
  #L31c90e.  if v0 == 0 then goto L31c914;
  #L31c912.  return v2;
  #L31c914.  v0:= v5.`okio.t.d` @type ^`okio.o` @kind object;
  #L31c918.  call temp:= `N`(v0) @signature `Lokio/o;.N:()Lokio/k;` @kind interface;
  #L31c91e.  v0:= temp @kind object;
  #L31c920.  v0:= v0.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31c924.  if v0 != 0 then goto L31c92e;
  #L31c928.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31c92e.  v2:= v0.`okio.e0.d` @type ^`int`;
  #L31c932.  v3:= v0.`okio.e0.c` @type ^`int`;
  #L31c936.  v2:= v2 - v3 @kind int;
  #L31c938.  v5.`okio.t.b` @type ^`int` := v2;
  #L31c93c.  v4:= v5.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31c940.  v0:= v0.`okio.e0.b` @type ^`byte`[] @kind object;
  #L31c944.  call `setInput`(v4, v0, v3, v2) @signature `Ljava/util/zip/Inflater;.setInput:([BII)V` @kind virtual;
  #L31c94a.  return v1;
  #L31c94c.  v0:= new `java.lang.IllegalStateException`;
  #L31c950.  v1:= "?" @kind object;
  #L31c954.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31c95a.  v1:= temp @kind object;
  #L31c95c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31c962.  throw v0;
}
procedure `void` `close`(`okio.t` v1 @kind this) @signature `Lokio/t;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31cb1c.  v0:= v1.`okio.t.c` @type ^`boolean` @kind boolean;
  #L31cb20.  if v0 == 0 then goto L31cb26;
  #L31cb24.  return @kind void;
  #L31cb26.  v0:= v1.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31cb2a.  call `end`(v0) @signature `Ljava/util/zip/Inflater;.end:()V` @kind virtual;
  #L31cb30.  v0:= 1I;
  #L31cb32.  v1.`okio.t.c` @type ^`boolean` := v0 @kind boolean;
  #L31cb36.  v0:= v1.`okio.t.d` @type ^`okio.o` @kind object;
  #L31cb3a.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L31cb40.  return @kind void;
}
procedure `long` `read`(`okio.t` v7 @kind this, `okio.k` v8 @kind object, `long` v9 ) @signature `Lokio/t;.read:(Lokio/k;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31c974.  v0:= 1I;
  #L31c976.  v1:= 0L;
  #L31c97a.  v3:= lcmp(v9, v1);
  #L31c97e.  if v3 < 0 then goto L31c986;
  #L31c982.  v3:= 1I;
  #L31c984.  goto L31c988;
  #L31c986.  v3:= 0I;
  #L31c988.  if v3 == 0 then goto L31ca82;
  #L31c98c.  v3:= v7.`okio.t.c` @type ^`boolean` @kind boolean;
  #L31c990.  v3:= v3 ^~ v0 @kind int;
  #L31c992.  if v3 == 0 then goto L31ca6a;
  #L31c996.  v3:= lcmp(v9, v1);
  #L31c99a.  if v3 != 0 then goto L31c9a0;
  #L31c99e.  return v1 @kind wide;
  #L31c9a0.  call temp:= `a`(v7) @signature `Lokio/t;.a:()Z` @kind virtual;
  #L31c9a6.  v1:= temp;
  #L31c9a8.  call temp:= `i1`(v8, v0) @signature `Lokio/k;.i1:(I)Lokio/e0;` @kind virtual;
  #L31c9ae.  v2:= temp @kind object;
  #L31c9b0.  v3:= v2.`okio.e0.d` @type ^`int`;
  #L31c9b4.  v3:= v3 - 8192;
  #L31c9b8.  v3:= (`long`) v3 @kind i2l;
  #L31c9ba.  call temp:= `min`(v9, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31c9c0.  v3:= temp @kind wide;
  #L31c9c2.  v4:= (`int`) v3 @kind l2i;
  #L31c9c4.  v3:= v7.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31c9c8.  v5:= v2.`okio.e0.b` @type ^`byte`[] @kind object;
  #L31c9cc.  v6:= v2.`okio.e0.d` @type ^`int`;
  #L31c9d0.  call temp:= `inflate`(v3, v5, v6, v4) @signature `Ljava/util/zip/Inflater;.inflate:([BII)I` @kind virtual;
  #L31c9d6.  v3:= temp;
  #L31c9d8.  if v3 <= 0 then goto L31c9fa;
  #L31c9dc.  v9:= v2.`okio.e0.d` @type ^`int`;
  #L31c9e0.  v9:= v9 + v3 @kind int;
  #L31c9e2.  v2.`okio.e0.d` @type ^`int` := v9;
  #L31c9e6.  call temp:= `f1`(v8) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31c9ec.  v9:= temp @kind wide;
  #L31c9ee.  v0:= (`long`) v3 @kind i2l;
  #L31c9f0.  v9:= v9 + v0 @kind long;
  #L31c9f2.  call `e1`(v8, v9) @signature `Lokio/k;.e1:(J)V` @kind virtual;
  #L31c9f8.  return v0 @kind wide;
  #L31c9fa.  v3:= v7.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31c9fe.  call temp:= `finished`(v3) @signature `Ljava/util/zip/Inflater;.finished:()Z` @kind virtual;
  #L31ca04.  v3:= temp;
  #L31ca06.  if v3 != 0 then goto L31ca32;
  #L31ca0a.  v3:= v7.`okio.t.e` @type ^`java.util.zip.Inflater` @kind object;
  #L31ca0e.  call temp:= `needsDictionary`(v3) @signature `Ljava/util/zip/Inflater;.needsDictionary:()Z` @kind virtual;
  #L31ca14.  v3:= temp;
  #L31ca16.  if v3 == 0 then goto L31ca1c;
  #L31ca1a.  goto L31ca32;
  #L31ca1c.  if v1 != 0 then goto L31ca22;
  #L31ca20.  goto L31c9a0;
  #L31ca22.  v8:= new `java.io.EOFException`;
  #L31ca26.  v9:= "source exhausted prematurely" @kind object;
  #L31ca2a.  call `<init>`(v8, v9) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ca30.  throw v8;
  #L31ca32.  call `c`(v7) @signature `Lokio/t;.c:()V` @kind direct;
  #L31ca38.  v9:= v2.`okio.e0.c` @type ^`int`;
  #L31ca3c.  v10:= v2.`okio.e0.d` @type ^`int`;
  #L31ca40.  if v9 != v10 then goto L31ca56;
  #L31ca44.  call temp:= `b`(v2) @signature `Lokio/e0;.b:()Lokio/e0;` @kind virtual;
  #L31ca4a.  v9:= temp @kind object;
  #L31ca4c.  v8.`okio.k.d` @type ^`okio.e0` := v9 @kind object;
  #L31ca50.  call `a`(v2) @signature `Lokio/f0;.a:(Lokio/e0;)V` @kind static;
  #L31ca56.  v8:= -1L;
  #L31ca5a.  return v8 @kind wide;
  #L31ca5c.  v8:= Exception @type ^`java.util.zip.DataFormatException` @kind object;
  #L31ca5e.  v9:= new `java.io.IOException`;
  #L31ca62.  call `<init>`(v9, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L31ca68.  throw v9;
  #L31ca6a.  v8:= new `java.lang.IllegalStateException`;
  #L31ca6e.  v9:= "closed" @kind object;
  #L31ca72.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ca78.  v9:= temp @kind object;
  #L31ca7a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ca80.  throw v8;
  #L31ca82.  v8:= new `java.lang.StringBuilder`;
  #L31ca86.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ca8c.  v0:= "byteCount < 0: " @kind object;
  #L31ca90.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ca96.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ca9c.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31caa2.  v8:= temp @kind object;
  #L31caa4.  v9:= new `java.lang.IllegalArgumentException`;
  #L31caa8.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31caae.  v8:= temp @kind object;
  #L31cab0.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31cab6.  goto L31caba;
  #L31cab8.  throw v9;
  #L31caba.  goto L31cab8;
  catch `java.util.zip.DataFormatException` @[L31c9a8..L31ca56] goto L31ca5c;
}
procedure `okio.l0` `timeout`(`okio.t` v1 @kind this) @signature `Lokio/t;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31cadc.  v0:= v1.`okio.t.d` @type ^`okio.o` @kind object;
  #L31cae0.  call temp:= `timeout`(v0) @signature `Lokio/i0;.timeout:()Lokio/l0;` @kind interface;
  #L31cae6.  v0:= temp @kind object;
  #L31cae8.  return v0 @kind object;
}
