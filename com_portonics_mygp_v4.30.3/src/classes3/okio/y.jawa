record `okio.y` @kind class @AccessFlag FINAL extends `okio.g0` @kind interface {
  `java.io.OutputStream` `okio.y.b` @AccessFlag PRIVATE_FINAL;
  `okio.l0` `okio.y.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.y` v0 @kind this, `java.io.OutputStream` v1 @kind object, `okio.l0` v2 @kind object) @signature `Lokio/y;.<init>:(Ljava/io/OutputStream;Lokio/l0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31d918.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31d91e.  v0.`okio.y.b` @type ^`java.io.OutputStream` := v1 @kind object;
  #L31d922.  v0.`okio.y.c` @type ^`okio.l0` := v2 @kind object;
  #L31d926.  return @kind void;
}
procedure `void` `close`(`okio.y` v1 @kind this) @signature `Lokio/y;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31d938.  v0:= v1.`okio.y.b` @type ^`java.io.OutputStream` @kind object;
  #L31d93c.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L31d942.  return @kind void;
}
procedure `void` `flush`(`okio.y` v1 @kind this) @signature `Lokio/y;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31d954.  v0:= v1.`okio.y.b` @type ^`java.io.OutputStream` @kind object;
  #L31d958.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L31d95e.  return @kind void;
}
procedure `okio.l0` `timeout`(`okio.y` v1 @kind this) @signature `Lokio/y;.timeout:()Lokio/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31d900.  v0:= v1.`okio.y.c` @type ^`okio.l0` @kind object;
  #L31d904.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.y` v2 @kind this) @signature `Lokio/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31d8bc.  v0:= new `java.lang.StringBuilder`;
  #L31d8c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31d8c6.  v1:= "sink(" @kind object;
  #L31d8ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31d8d0.  v1:= v2.`okio.y.b` @type ^`java.io.OutputStream` @kind object;
  #L31d8d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31d8da.  v1:= 41I;
  #L31d8de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31d8e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31d8ea.  v0:= temp @kind object;
  #L31d8ec.  return v0 @kind object;
}
procedure `void` `write`(`okio.y` v6 @kind this, `okio.k` v7 @kind object, `long` v8 ) @signature `Lokio/y;.write:(Lokio/k;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31d970.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31d976.  v0:= temp @kind wide;
  #L31d978.  v2:= 0L;
  #L31d97c.  v4:= v8 @kind wide;
  #L31d97e.  call `b`(v0, v2, v4) @signature `Lokio/c;.b:(JJJ)V` @kind static;
  #L31d984.  v0:= 0L;
  #L31d988.  v2:= lcmp(v8, v0);
  #L31d98c.  if v2 <= 0 then goto L31da0e;
  #L31d990.  v0:= v6.`okio.y.c` @type ^`okio.l0` @kind object;
  #L31d994.  call `throwIfReached`(v0) @signature `Lokio/l0;.throwIfReached:()V` @kind virtual;
  #L31d99a.  v0:= v7.`okio.k.d` @type ^`okio.e0` @kind object;
  #L31d99e.  if v0 != 0 then goto L31d9a8;
  #L31d9a2.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L31d9a8.  v1:= v0.`okio.e0.d` @type ^`int`;
  #L31d9ac.  v2:= v0.`okio.e0.c` @type ^`int`;
  #L31d9b0.  v1:= v1 - v2 @kind int;
  #L31d9b2.  v1:= (`long`) v1 @kind i2l;
  #L31d9b4.  call temp:= `min`(v8, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L31d9ba.  v1:= temp @kind wide;
  #L31d9bc.  v2:= (`int`) v1 @kind l2i;
  #L31d9be.  v1:= v6.`okio.y.b` @type ^`java.io.OutputStream` @kind object;
  #L31d9c2.  v3:= v0.`okio.e0.b` @type ^`byte`[] @kind object;
  #L31d9c6.  v4:= v0.`okio.e0.c` @type ^`int`;
  #L31d9ca.  call `write`(v1, v3, v4, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L31d9d0.  v1:= v0.`okio.e0.c` @type ^`int`;
  #L31d9d4.  v1:= v1 + v2 @kind int;
  #L31d9d6.  v0.`okio.e0.c` @type ^`int` := v1;
  #L31d9da.  v1:= (`long`) v2 @kind i2l;
  #L31d9dc.  v8:= v8 - v1 @kind long;
  #L31d9de.  call temp:= `f1`(v7) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L31d9e4.  v3:= temp @kind wide;
  #L31d9e6.  v3:= v3 - v1 @kind long;
  #L31d9e8.  call `e1`(v7, v3) @signature `Lokio/k;.e1:(J)V` @kind virtual;
  #L31d9ee.  v1:= v0.`okio.e0.c` @type ^`int`;
  #L31d9f2.  v2:= v0.`okio.e0.d` @type ^`int`;
  #L31d9f6.  if v1 != v2 then goto L31d984;
  #L31d9fa.  call temp:= `b`(v0) @signature `Lokio/e0;.b:()Lokio/e0;` @kind virtual;
  #L31da00.  v1:= temp @kind object;
  #L31da02.  v7.`okio.k.d` @type ^`okio.e0` := v1 @kind object;
  #L31da06.  call `a`(v0) @signature `Lokio/f0;.a:(Lokio/e0;)V` @kind static;
  #L31da0c.  goto L31d984;
  #L31da0e.  return @kind void;
}
