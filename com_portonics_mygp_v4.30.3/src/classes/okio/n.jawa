record `okio.n` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `okio.g0` @kind interface, `java.nio.channels.WritableByteChannel` @kind interface {
}
procedure `okio.n` `F0`(`long` v0 ) @signature `Lokio/n;.F0:(J)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `G`() @signature `Lokio/n;.G:()Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `H`(`int` v0 ) @signature `Lokio/n;.H:(I)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `K`(`int` v0 ) @signature `Lokio/n;.K:(I)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `P`(`int` v0 ) @signature `Lokio/n;.P:(I)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `U`() @signature `Lokio/n;.U:()Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `b`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lokio/n;.b:([BII)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `b0`(`java.lang.String` v0 @kind object) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `flush`() @signature `Lokio/n;.flush:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `h0`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lokio/n;.h0:(Ljava/lang/String;II)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `i0`(`okio.i0` v0 @kind object) @signature `Lokio/n;.i0:(Lokio/i0;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `j0`(`long` v0 ) @signature `Lokio/n;.j0:(J)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.k` `q`() @signature `Lokio/n;.q:()Lokio/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `s0`(`byte`[] v0 @kind object) @signature `Lokio/n;.s0:([B)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.n` `t0`(`okio.ByteString` v0 @kind object) @signature `Lokio/n;.t0:(Lokio/ByteString;)Lokio/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
