record `butterknife.internal.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `android.util.TypedValue` `@@butterknife.internal.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lbutterknife/internal/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d1c24.  v0:= new `android.util.TypedValue`;
  #L2d1c28.  call `<init>`(v0) @signature `Landroid/util/TypedValue;.<init>:()V` @kind direct;
  #L2d1c2e.  `@@butterknife.internal.c.a` @type ^`android.util.TypedValue` := v0 @kind object;
  #L2d1c32.  return @kind void;
}
procedure `java.lang.Object` `a`(`android.view.View` v3 @kind object, `int` v4 , `java.lang.String` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lbutterknife/internal/c;.a:(Landroid/view/View;ILjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d1b14.  call temp:= `cast`(v6, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2d1b1a.  v3:= temp @kind object;
  #L2d1b1c.  return v3 @kind object;
  #L2d1b1e.  v6:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L2d1b20.  call temp:= `e`(v3, v4) @signature `Lbutterknife/internal/c;.e:(Landroid/view/View;I)Ljava/lang/String;` @kind static;
  #L2d1b26.  v3:= temp @kind object;
  #L2d1b28.  v0:= new `java.lang.IllegalStateException`;
  #L2d1b2c.  v1:= new `java.lang.StringBuilder`;
  #L2d1b30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d1b36.  v2:= "View '" @kind object;
  #L2d1b3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b40.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b46.  v3:= "' with ID " @kind object;
  #L2d1b4a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b50.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b56.  v3:= " for " @kind object;
  #L2d1b5a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b60.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b66.  v3:= " was of the wrong type. See cause for more info." @kind object;
  #L2d1b6a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1b70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d1b76.  v3:= temp @kind object;
  #L2d1b78.  call `<init>`(v0, v3, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2d1b7e.  throw v0;
  catch `java.lang.ClassCastException` @[L2d1b14..L2d1b1c] goto L2d1b1e;
}
procedure `java.lang.Object` `b`(`android.view.View` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lbutterknife/internal/c;.b:(Landroid/view/View;ILjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2d1ba0.  call temp:= `findViewById`(v0, v1) @signature `Landroid/view/View;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L2d1ba6.  v0:= temp @kind object;
  #L2d1ba8.  call temp:= `a`(v0, v1, v2, v3) @signature `Lbutterknife/internal/c;.a:(Landroid/view/View;ILjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L2d1bae.  v0:= temp @kind object;
  #L2d1bb0.  return v0 @kind object;
}
procedure `android.view.View` `c`(`android.view.View` v3 @kind object, `int` v4 , `java.lang.String` v5 @kind object) @signature `Lbutterknife/internal/c;.c:(Landroid/view/View;ILjava/lang/String;)Landroid/view/View;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d1a94.  call temp:= `findViewById`(v3, v4) @signature `Landroid/view/View;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L2d1a9a.  v0:= temp @kind object;
  #L2d1a9c.  if v0 == 0 then goto L2d1aa2;
  #L2d1aa0.  return v0 @kind object;
  #L2d1aa2.  call temp:= `e`(v3, v4) @signature `Lbutterknife/internal/c;.e:(Landroid/view/View;I)Ljava/lang/String;` @kind static;
  #L2d1aa8.  v3:= temp @kind object;
  #L2d1aaa.  v0:= new `java.lang.IllegalStateException`;
  #L2d1aae.  v1:= new `java.lang.StringBuilder`;
  #L2d1ab2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d1ab8.  v2:= "Required view '" @kind object;
  #L2d1abc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ac2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ac8.  v3:= "' with ID " @kind object;
  #L2d1acc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ad2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ad8.  v3:= " for " @kind object;
  #L2d1adc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ae2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1ae8.  v3:= " was not found. If this view is optional add '@Nullable' (fields) or '@Optional' (methods) annotation." @kind object;
  #L2d1aec.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1af2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d1af8.  v3:= temp @kind object;
  #L2d1afa.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d1b00.  throw v0;
}
procedure `java.lang.Object` `d`(`android.view.View` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lbutterknife/internal/c;.d:(Landroid/view/View;ILjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2d1bc4.  call temp:= `c`(v0, v1, v2) @signature `Lbutterknife/internal/c;.c:(Landroid/view/View;ILjava/lang/String;)Landroid/view/View;` @kind static;
  #L2d1bca.  v0:= temp @kind object;
  #L2d1bcc.  call temp:= `a`(v0, v1, v2, v3) @signature `Lbutterknife/internal/c;.a:(Landroid/view/View;ILjava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L2d1bd2.  v0:= temp @kind object;
  #L2d1bd4.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`android.view.View` v1 @kind object, `int` v2 ) @signature `Lbutterknife/internal/c;.e:(Landroid/view/View;I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d1be8.  call temp:= `isInEditMode`(v1) @signature `Landroid/view/View;.isInEditMode:()Z` @kind virtual;
  #L2d1bee.  v0:= temp;
  #L2d1bf0.  if v0 == 0 then goto L2d1bfa;
  #L2d1bf4.  v1:= "<unavailable while editing>" @kind object;
  #L2d1bf8.  return v1 @kind object;
  #L2d1bfa.  call temp:= `getContext`(v1) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2d1c00.  v1:= temp @kind object;
  #L2d1c02.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2d1c08.  v1:= temp @kind object;
  #L2d1c0a.  call temp:= `getResourceEntryName`(v1, v2) @signature `Landroid/content/res/Resources;.getResourceEntryName:(I)Ljava/lang/String;` @kind virtual;
  #L2d1c10.  v1:= temp @kind object;
  #L2d1c12.  return v1 @kind object;
}
