record `butterknife.OnTextChanged$Callback` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `butterknife.OnTextChanged$Callback`[] `@@butterknife.OnTextChanged$Callback.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lbutterknife/OnTextChanged$Callback;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d1640.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L2d1644.  v1:= "TEXT_CHANGED" @kind object;
  #L2d1648.  v2:= 0I;
  #L2d164a.  call `<init>`(v0, v1, v2) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d1650.  `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L2d1654.  v1:= new `butterknife.OnTextChanged$Callback`;
  #L2d1658.  v3:= "BEFORE_TEXT_CHANGED" @kind object;
  #L2d165c.  v4:= 1I;
  #L2d165e.  call `<init>`(v1, v3, v4) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d1664.  `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v1 @kind object;
  #L2d1668.  v3:= new `butterknife.OnTextChanged$Callback`;
  #L2d166c.  v5:= "AFTER_TEXT_CHANGED" @kind object;
  #L2d1670.  v6:= 2I;
  #L2d1672.  call `<init>`(v3, v5, v6) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d1678.  `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v3 @kind object;
  #L2d167c.  v5:= 3I;
  #L2d167e.  v5:= new `butterknife.OnTextChanged$Callback`[v5];
  #L2d1682.  v5[v2]:= v0 @kind object;
  #L2d1686.  v5[v4]:= v1 @kind object;
  #L2d168a.  v5[v6]:= v3 @kind object;
  #L2d168e.  `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] := v5 @kind object;
  #L2d1692.  return @kind void;
}
procedure `void` `<init>`(`butterknife.OnTextChanged$Callback` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d16a4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d16aa.  return @kind void;
}
procedure `butterknife.OnTextChanged$Callback` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lbutterknife/OnTextChanged$Callback;.valueOf:(Ljava/lang/String;)Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d15f8.  v0:= constclass @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L2d15fc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2d1602.  v1:= temp @kind object;
  #L2d1604.  v1:= (`butterknife.OnTextChanged$Callback`) v1 @kind object;
  #L2d1608.  return v1 @kind object;
}
procedure `butterknife.OnTextChanged$Callback`[] `values`() @signature `Lbutterknife/OnTextChanged$Callback;.values:()[Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d161c.  v0:= `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] @kind object;
  #L2d1620.  call temp:= `clone`(v0) @signature `[Lbutterknife/OnTextChanged$Callback;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d1626.  v0:= temp @kind object;
  #L2d1628.  v0:= (`butterknife.OnTextChanged$Callback`[]) v0 @kind object;
  #L2d162c.  return v0 @kind object;
}
