record `b.a.a.k.j` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `b.a.a.k.g0` `b.a.a.k.j.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `int` `b.a.a.k.j.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `b.a.a.k.g0$b` `b.a.a.k.j.d` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.a.a.k.j` v0 @kind this, `b.a.a.k.g0` v1 @kind object, `int` v2 , `b.a.a.k.g0$b` v3 @kind object) @signature `Lb/a/a/k/j;.<init>:(Lb/a/a/k/g0;ILb/a/a/k/g0$b;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L160f34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L160f3a.  v0.`b.a.a.k.j.b` @type ^`b.a.a.k.g0` := v1 @kind object;
  #L160f3e.  v0.`b.a.a.k.j.c` @type ^`int` := v2;
  #L160f42.  v0.`b.a.a.k.j.d` @type ^`b.a.a.k.g0$b` := v3 @kind object;
  #L160f46.  return @kind void;
}
procedure `void` `run`(`b.a.a.k.j` v3 @kind this) @signature `Lb/a/a/k/j;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L160f58.  v0:= v3.`b.a.a.k.j.b` @type ^`b.a.a.k.g0` @kind object;
  #L160f5c.  v1:= v3.`b.a.a.k.j.c` @type ^`int`;
  #L160f60.  v2:= v3.`b.a.a.k.j.d` @type ^`b.a.a.k.g0$b` @kind object;
  #L160f64.  call `n`(v0, v1, v2) @signature `Lb/a/a/k/g0;.n:(Lb/a/a/k/g0;ILb/a/a/k/g0$b;)V` @kind static;
  #L160f6a.  return @kind void;
}
