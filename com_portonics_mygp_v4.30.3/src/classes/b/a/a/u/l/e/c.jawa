record `b.a.a.u.l.e.c` @kind class @AccessFlag PUBLIC extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
}
global `b.a.a.u.l.e.c` `@@b.a.a.u.l.e.c.b` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lb/a/a/u/l/e/c;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a1e04.  v0:= constclass @type ^`b.a.a.u.l.e.c` @kind object;
  #L1a1e08.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a1e0e.  v0:= temp @kind object;
  #L1a1e10.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1a1e16.  return @kind void;
}
procedure `void` `<init>`(`b.a.a.u.l.e.c` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lb/a/a/u/l/e/c;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1a1e28.  v0:= "user_settings_cache.db" @kind object;
  #L1a1e2c.  v1:= 0I;
  #L1a1e2e.  v2:= 1I;
  #L1a1e30.  call `<init>`(v3, v4, v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L1a1e36.  return @kind void;
}
procedure `b.a.a.u.l.e.c` `a`(`android.content.Context` v1 @kind object) @signature `Lb/a/a/u/l/e/c;.a:(Landroid/content/Context;)Lb/a/a/u/l/e/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a1dd8.  v0:= `@@b.a.a.u.l.e.c.b` @type ^`b.a.a.u.l.e.c` @kind object;
  #L1a1ddc.  if v0 != 0 then goto L1a1dee;
  #L1a1de0.  v0:= new `b.a.a.u.l.e.c`;
  #L1a1de4.  call `<init>`(v0, v1) @signature `Lb/a/a/u/l/e/c;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1a1dea.  `@@b.a.a.u.l.e.c.b` @type ^`b.a.a.u.l.e.c` := v0 @kind object;
  #L1a1dee.  v1:= `@@b.a.a.u.l.e.c.b` @type ^`b.a.a.u.l.e.c` @kind object;
  #L1a1df2.  return v1 @kind object;
}
procedure `void` `onCreate`(`b.a.a.u.l.e.c` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lb/a/a/u/l/e/c;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1e48.  v0:= "create table IF NOT EXISTS user_settings_cache(_id integer primary key autoincrement, key text not null, value text)" @kind object;
  #L1a1e4c.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1a1e52.  return @kind void;
}
procedure `void` `onUpgrade`(`b.a.a.u.l.e.c` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lb/a/a/u/l/e/c;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L1a1e64.  v2:= "create table IF NOT EXISTS user_settings_cache(_id integer primary key autoincrement, key text not null, value text)" @kind object;
  #L1a1e68.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L1a1e6e.  return @kind void;
}
