record `b.a.a.u.a.c` @kind class @AccessFlag PUBLIC_FINAL {
  `byte`[] `b.a.a.u.a.c.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b.a.a.u.a.c.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`b.a.a.u.a.c` v1 @kind this, `b.a.a.u.a.b` v2 @kind object) @signature `Lb/a/a/u/a/c;.<init>:(Lb/a/a/u/a/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L194f18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L194f1e.  call temp:= `a`(v2) @signature `Lb/a/a/u/a/b;.a:(Lb/a/a/u/a/b;)[B` @kind static;
  #L194f24.  v0:= temp @kind object;
  #L194f26.  v1.`b.a.a.u.a.c.a` @type ^`byte`[] := v0 @kind object;
  #L194f2a.  call temp:= `b`(v2) @signature `Lb/a/a/u/a/b;.b:(Lb/a/a/u/a/b;)Ljava/lang/String;` @kind static;
  #L194f30.  call temp:= `c`(v2) @signature `Lb/a/a/u/a/b;.c:(Lb/a/a/u/a/b;)I` @kind static;
  #L194f36.  call temp:= `d`(v2) @signature `Lb/a/a/u/a/b;.d:(Lb/a/a/u/a/b;)[B` @kind static;
  #L194f3c.  call temp:= `e`(v2) @signature `Lb/a/a/u/a/b;.e:(Lb/a/a/u/a/b;)Ljava/lang/String;` @kind static;
  #L194f42.  v2:= temp @kind object;
  #L194f44.  v1.`b.a.a.u.a.c.b` @type ^`java.lang.String` := v2 @kind object;
  #L194f48.  return @kind void;
}
