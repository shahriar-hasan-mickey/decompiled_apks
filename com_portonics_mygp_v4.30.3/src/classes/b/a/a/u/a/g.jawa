record `b.a.a.u.a.g` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.nio.charset.Charset` `@@b.a.a.u.a.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lb/a/a/u/a/g;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L195194.  v0:= "UTF-8" @kind object;
  #L195198.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19519e.  v0:= temp @kind object;
  #L1951a0.  `@@b.a.a.u.a.g.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L1951a4.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lb/a/a/u/a/g;.a:([B[B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19508c.  v0:= new `java.security.spec.X509EncodedKeySpec`;
  #L195090.  call `<init>`(v0, v3) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L195096.  v3:= "RSA" @kind object;
  #L19509a.  call temp:= `getInstance`(v3) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L1950a0.  v3:= temp @kind object;
  #L1950a2.  call temp:= `generatePublic`(v3, v0) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L1950a8.  v3:= temp @kind object;
  #L1950aa.  v0:= "RSA/ECB/PKCS1Padding" @kind object;
  #L1950ae.  call temp:= `getInstance`(v0) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L1950b4.  v0:= temp @kind object;
  #L1950b6.  v1:= 1I;
  #L1950b8.  call `init`(v0, v1, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L1950be.  call temp:= `doFinal`(v0, v2) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L1950c4.  v2:= temp @kind object;
  #L1950c6.  v3:= 2I;
  #L1950c8.  call temp:= `encodeToString`(v2, v3) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L1950ce.  v2:= temp @kind object;
  #L1950d0.  return v2 @kind object;
  #L1950d2.  v2:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L1950d4.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L1950d8.  v0:= "BadPaddingException while encrypting, due to invalid padding scheme." @kind object;
  #L1950dc.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1950e2.  throw v3;
  #L1950e4.  v2:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L1950e6.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L1950ea.  v0:= "IllegalBlockSizeException while encrypting, due to invalid block size." @kind object;
  #L1950ee.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1950f4.  throw v3;
  #L1950f6.  v2:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L1950f8.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L1950fc.  v0:= "InvalidKeyException while encrypting. Key being used is not valid. It could be due to invalid encoding, wrong length or uninitialized." @kind object;
  #L195100.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L195106.  throw v3;
  #L195108.  v2:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L19510a.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L19510e.  v0:= "NoSuchPaddingException while encrypting. Padding Scheme being requested is not available this environment." @kind object;
  #L195112.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L195118.  throw v3;
  #L19511a.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L19511c.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L195120.  v0:= "NoSuchAlgorithmException occurred in encryption while initializing cipher. Key being request is for RSA algorithm, but this cryptographic algorithm is not available in the environment." @kind object;
  #L195124.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L19512a.  throw v3;
  #L19512c.  v2:= Exception @type ^`java.security.spec.InvalidKeySpecException` @kind object;
  #L19512e.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L195132.  v0:= "InvalidKeySpecException while encrypting. Key being used is not valid. It could be due to invalid encoding, wrong length or uninitialized." @kind object;
  #L195136.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L19513c.  throw v3;
  #L19513e.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L195140.  v3:= new `com.onmobile.rbtsdkui.http.Crypto.AsymmetricCryptographyException`;
  #L195144.  v0:= "NoSuchAlgorithmException occurred while encrypting. Key being request is for RSA algorithm, but this cryptographic algorithm is not available in the environment." @kind object;
  #L195148.  call `<init>`(v3, v0, v2) @signature `Lcom/onmobile/rbtsdkui/http/Crypto/AsymmetricCryptographyException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L19514e.  throw v3;
  catch `java.security.NoSuchAlgorithmException` @[L195096..L1950aa] goto L19513e;
  catch `java.security.spec.InvalidKeySpecException` @[L195096..L1950aa] goto L19512c;
  catch `java.security.NoSuchAlgorithmException` @[L1950aa..L1950b6] goto L19511a;
  catch `javax.crypto.NoSuchPaddingException` @[L1950aa..L1950b6] goto L195108;
  catch `java.security.InvalidKeyException` @[L1950b8..L1950c6] goto L1950f6;
  catch `javax.crypto.IllegalBlockSizeException` @[L1950b8..L1950c6] goto L1950e4;
  catch `javax.crypto.BadPaddingException` @[L1950b8..L1950c6] goto L1950d2;
}
