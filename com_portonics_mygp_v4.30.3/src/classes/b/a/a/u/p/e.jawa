record `b.a.a.u.p.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `retrofit2.Retrofit` `@@b.a.a.u.p.e.a` @AccessFlag PUBLIC_STATIC;
global `retrofit2.Retrofit` `@@b.a.a.u.p.e.b` @AccessFlag PUBLIC_STATIC;
global `retrofit2.Retrofit` `@@b.a.a.u.p.e.c` @AccessFlag PUBLIC_STATIC;
global `retrofit2.Retrofit` `@@b.a.a.u.p.e.d` @AccessFlag PUBLIC_STATIC;
procedure `retrofit2.Retrofit` `a`() @signature `Lb/a/a/u/p/e;.a:()Lretrofit2/Retrofit;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a267c.  v0:= `@@b.a.a.u.p.e.b` @type ^`retrofit2.Retrofit` @kind object;
  #L1a2680.  if v0 != 0 then goto L1a2714;
  #L1a2684.  v0:= new `retrofit2.Retrofit$Builder`;
  #L1a2688.  call `<init>`(v0) @signature `Lretrofit2/Retrofit$Builder;.<init>:()V` @kind direct;
  #L1a268e.  call temp:= `getApi_end_point_store`() @signature `Lcom/onmobile/rbtsdkui/http/Configuration;.getApi_end_point_store:()Ljava/lang/String;` @kind static;
  #L1a2694.  v1:= temp @kind object;
  #L1a2696.  call temp:= `baseUrl`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Ljava/lang/String;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1a269c.  v0:= temp @kind object;
  #L1a269e.  v1:= `@@b.a.a.u.p.d.b` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1a26a2.  if v1 != 0 then goto L1a26ec;
  #L1a26a6.  v1:= new `okhttp3.logging.HttpLoggingInterceptor`;
  #L1a26aa.  call `<init>`(v1) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<init>:()V` @kind direct;
  #L1a26b0.  v2:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.BODY` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L1a26b4.  call temp:= `setLevel`(v1, v2) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.setLevel:(Lokhttp3/logging/HttpLoggingInterceptor$Level;)Lokhttp3/logging/HttpLoggingInterceptor;` @kind virtual;
  #L1a26ba.  v1:= `@@b.a.a.u.p.c.f` @type ^`java.lang.String` @kind object;
  #L1a26be.  v2:= `@@b.a.a.u.p.c.b` @type ^`java.lang.String` @kind object;
  #L1a26c2.  if v2 == 0 then goto L1a26e0;
  #L1a26c6.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1a26cc.  v2:= temp;
  #L1a26ce.  if v2 != 0 then goto L1a26e0;
  #L1a26d2.  call temp:= `b`(v1) @signature `Lb/a/a/u/p/d;.b:(Ljava/lang/String;)Lokhttp3/OkHttpClient;` @kind static;
  #L1a26d8.  v1:= temp @kind object;
  #L1a26da.  `@@b.a.a.u.p.d.b` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L1a26de.  goto L1a26ec;
  #L1a26e0.  call temp:= `a`() @signature `Lb/a/a/u/p/d;.a:()Lokhttp3/OkHttpClient;` @kind static;
  #L1a26e6.  v1:= temp @kind object;
  #L1a26e8.  `@@b.a.a.u.p.d.b` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L1a26ec.  v1:= `@@b.a.a.u.p.d.b` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1a26f0.  call temp:= `client`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1a26f6.  v0:= temp @kind object;
  #L1a26f8.  call temp:= `create`() @signature `Lretrofit2/converter/gson/GsonConverterFactory;.create:()Lretrofit2/converter/gson/GsonConverterFactory;` @kind static;
  #L1a26fe.  v1:= temp @kind object;
  #L1a2700.  call temp:= `addConverterFactory`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.addConverterFactory:(Lretrofit2/Converter$Factory;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1a2706.  v0:= temp @kind object;
  #L1a2708.  call temp:= `build`(v0) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @kind virtual;
  #L1a270e.  v0:= temp @kind object;
  #L1a2710.  `@@b.a.a.u.p.e.b` @type ^`retrofit2.Retrofit` := v0 @kind object;
  #L1a2714.  v0:= `@@b.a.a.u.p.e.b` @type ^`retrofit2.Retrofit` @kind object;
  #L1a2718.  return v0 @kind object;
}
