record `kotlin.text.CharsKt__CharJVMKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.text.CharsKt__CharJVMKt` v0 @kind this) @signature `Lkotlin/text/CharsKt__CharJVMKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54f668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L54f66e.  return @kind void;
}
procedure `int` `checkRadix`(`int` v4 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.checkRadix:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54f3ec.  v0:= 0I;
  #L54f3ee.  v1:= 2I;
  #L54f3f0.  if v1 > v4 then goto L54f3fe;
  #L54f3f4.  v2:= 37I;
  #L54f3f8.  if v4 >= v2 then goto L54f3fe;
  #L54f3fc.  v0:= 1I;
  #L54f3fe.  if v0 == 0 then goto L54f404;
  #L54f402.  return v4;
  #L54f404.  v0:= new `java.lang.IllegalArgumentException`;
  #L54f408.  v2:= new `java.lang.StringBuilder`;
  #L54f40c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54f412.  v3:= "radix " @kind object;
  #L54f416.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f41c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f422.  v4:= " was not in valid range " @kind object;
  #L54f426.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f42c.  v4:= new `kotlin.ranges.IntRange`;
  #L54f430.  v3:= 36I;
  #L54f434.  call `<init>`(v4, v1, v3) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54f43a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f440.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54f446.  v4:= temp @kind object;
  #L54f448.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54f44e.  throw v0;
}
procedure `int` `digitOf`(`char` v0 , `int` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.digitOf:(CI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L54f460.  call temp:= `digit`(v0, v1) @signature `Ljava/lang/Character;.digit:(II)I` @kind static;
  #L54f466.  v0:= temp;
  #L54f468.  return v0;
}
procedure `kotlin.text.CharCategory` `getCategory`(`char` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.getCategory:(C)Lkotlin/text/CharCategory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f618.  v0:= `@@kotlin.text.CharCategory.Companion` @type ^`kotlin.text.CharCategory$Companion` @kind object;
  #L54f61c.  call temp:= `getType`(v1) @signature `Ljava/lang/Character;.getType:(C)I` @kind static;
  #L54f622.  v1:= temp;
  #L54f624.  call temp:= `valueOf`(v0, v1) @signature `Lkotlin/text/CharCategory$Companion;.valueOf:(I)Lkotlin/text/CharCategory;` @kind virtual;
  #L54f62a.  v1:= temp @kind object;
  #L54f62c.  return v1 @kind object;
}
procedure `kotlin.text.CharDirectionality` `getDirectionality`(`char` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.getDirectionality:(C)Lkotlin/text/CharDirectionality;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f640.  v0:= `@@kotlin.text.CharDirectionality.Companion` @type ^`kotlin.text.CharDirectionality$Companion` @kind object;
  #L54f644.  call temp:= `getDirectionality`(v1) @signature `Ljava/lang/Character;.getDirectionality:(C)B` @kind static;
  #L54f64a.  v1:= temp;
  #L54f64c.  call temp:= `valueOf`(v0, v1) @signature `Lkotlin/text/CharDirectionality$Companion;.valueOf:(I)Lkotlin/text/CharDirectionality;` @kind virtual;
  #L54f652.  v1:= temp @kind object;
  #L54f654.  return v1 @kind object;
}
procedure `boolean` `isDefined`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isDefined:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f1a4.  call temp:= `isDefined`(v0) @signature `Ljava/lang/Character;.isDefined:(C)Z` @kind static;
  #L54f1aa.  v0:= temp;
  #L54f1ac.  return v0;
}
procedure `boolean` `isDigit`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isDigit:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f1c0.  call temp:= `isDigit`(v0) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L54f1c6.  v0:= temp;
  #L54f1c8.  return v0;
}
procedure `boolean` `isHighSurrogate`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isHighSurrogate:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f1dc.  call temp:= `isHighSurrogate`(v0) @signature `Ljava/lang/Character;.isHighSurrogate:(C)Z` @kind static;
  #L54f1e2.  v0:= temp;
  #L54f1e4.  return v0;
}
procedure `boolean` `isISOControl`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isISOControl:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f1f8.  call temp:= `isISOControl`(v0) @signature `Ljava/lang/Character;.isISOControl:(C)Z` @kind static;
  #L54f1fe.  v0:= temp;
  #L54f200.  return v0;
}
procedure `boolean` `isIdentifierIgnorable`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isIdentifierIgnorable:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f214.  call temp:= `isIdentifierIgnorable`(v0) @signature `Ljava/lang/Character;.isIdentifierIgnorable:(C)Z` @kind static;
  #L54f21a.  v0:= temp;
  #L54f21c.  return v0;
}
procedure `boolean` `isJavaIdentifierPart`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isJavaIdentifierPart:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f230.  call temp:= `isJavaIdentifierPart`(v0) @signature `Ljava/lang/Character;.isJavaIdentifierPart:(C)Z` @kind static;
  #L54f236.  v0:= temp;
  #L54f238.  return v0;
}
procedure `boolean` `isJavaIdentifierStart`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isJavaIdentifierStart:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f24c.  call temp:= `isJavaIdentifierStart`(v0) @signature `Ljava/lang/Character;.isJavaIdentifierStart:(C)Z` @kind static;
  #L54f252.  v0:= temp;
  #L54f254.  return v0;
}
procedure `boolean` `isLetter`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isLetter:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f268.  call temp:= `isLetter`(v0) @signature `Ljava/lang/Character;.isLetter:(C)Z` @kind static;
  #L54f26e.  v0:= temp;
  #L54f270.  return v0;
}
procedure `boolean` `isLetterOrDigit`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isLetterOrDigit:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f284.  call temp:= `isLetterOrDigit`(v0) @signature `Ljava/lang/Character;.isLetterOrDigit:(C)Z` @kind static;
  #L54f28a.  v0:= temp;
  #L54f28c.  return v0;
}
procedure `boolean` `isLowSurrogate`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isLowSurrogate:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f2a0.  call temp:= `isLowSurrogate`(v0) @signature `Ljava/lang/Character;.isLowSurrogate:(C)Z` @kind static;
  #L54f2a6.  v0:= temp;
  #L54f2a8.  return v0;
}
procedure `boolean` `isLowerCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isLowerCase:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f2bc.  call temp:= `isLowerCase`(v0) @signature `Ljava/lang/Character;.isLowerCase:(C)Z` @kind static;
  #L54f2c2.  v0:= temp;
  #L54f2c4.  return v0;
}
procedure `boolean` `isTitleCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isTitleCase:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f2d8.  call temp:= `isTitleCase`(v0) @signature `Ljava/lang/Character;.isTitleCase:(C)Z` @kind static;
  #L54f2de.  v0:= temp;
  #L54f2e0.  return v0;
}
procedure `boolean` `isUpperCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isUpperCase:(C)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f2f4.  call temp:= `isUpperCase`(v0) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L54f2fa.  v0:= temp;
  #L54f2fc.  return v0;
}
procedure `boolean` `isWhitespace`(`char` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.isWhitespace:(C)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f310.  call temp:= `isWhitespace`(v1) @signature `Ljava/lang/Character;.isWhitespace:(C)Z` @kind static;
  #L54f316.  v0:= temp;
  #L54f318.  if v0 != 0 then goto L54f32e;
  #L54f31c.  call temp:= `isSpaceChar`(v1) @signature `Ljava/lang/Character;.isSpaceChar:(C)Z` @kind static;
  #L54f322.  v1:= temp;
  #L54f324.  if v1 == 0 then goto L54f32a;
  #L54f328.  goto L54f32e;
  #L54f32a.  v1:= 0I;
  #L54f32c.  goto L54f330;
  #L54f32e.  v1:= 1I;
  #L54f330.  return v1;
}
procedure `java.lang.String` `lowercase`(`char` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.lowercase:(C)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54f47c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f482.  v1:= temp @kind object;
  #L54f484.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L54f488.  call temp:= `toLowerCase`(v1, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f48e.  v1:= temp @kind object;
  #L54f490.  v0:= "this as java.lang.String).toLowerCase(Locale.ROOT)" @kind object;
  #L54f494.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f49a.  return v1 @kind object;
}
procedure `java.lang.String` `lowercase`(`char` v1 , `java.util.Locale` v2 @kind object) @signature `Lkotlin/text/CharsKt__CharJVMKt;.lowercase:(CLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f4ac.  v0:= "locale" @kind object;
  #L54f4b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f4b6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f4bc.  v1:= temp @kind object;
  #L54f4be.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f4c4.  v1:= temp @kind object;
  #L54f4c6.  v2:= "this as java.lang.String).toLowerCase(locale)" @kind object;
  #L54f4ca.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f4d0.  return v1 @kind object;
}
procedure `char` `lowercaseChar`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.lowercaseChar:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f344.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L54f34a.  v0:= temp;
  #L54f34c.  return v0;
}
procedure `java.lang.String` `titlecase`(`char` v2 , `java.util.Locale` v3 @kind object) @signature `Lkotlin/text/CharsKt__CharJVMKt;.titlecase:(CLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54f4e4.  v0:= "locale" @kind object;
  #L54f4e8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f4ee.  call temp:= `uppercase`(v2, v3) @signature `Lkotlin/text/CharsKt__CharJVMKt;.uppercase:(CLjava/util/Locale;)Ljava/lang/String;` @kind static;
  #L54f4f4.  v3:= temp @kind object;
  #L54f4f6.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L54f4fc.  v0:= temp;
  #L54f4fe.  v1:= 1I;
  #L54f500.  if v0 <= v1 then goto L54f560;
  #L54f504.  v0:= 329I;
  #L54f508.  if v2 != v0 then goto L54f50e;
  #L54f50c.  goto L54f55e;
  #L54f50e.  v2:= 0I;
  #L54f510.  call temp:= `charAt`(v3, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L54f516.  v2:= temp;
  #L54f518.  call temp:= `substring`(v3, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L54f51e.  v3:= temp @kind object;
  #L54f520.  v0:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L54f524.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f52a.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L54f52e.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f534.  v3:= temp @kind object;
  #L54f536.  v0:= "this as java.lang.String).toLowerCase(Locale.ROOT)" @kind object;
  #L54f53a.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f540.  v0:= new `java.lang.StringBuilder`;
  #L54f544.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54f54a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f550.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54f556.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54f55c.  v3:= temp @kind object;
  #L54f55e.  return v3 @kind object;
  #L54f560.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f566.  v0:= temp @kind object;
  #L54f568.  v1:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L54f56c.  call temp:= `toUpperCase`(v0, v1) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f572.  v0:= temp @kind object;
  #L54f574.  v1:= "this as java.lang.String).toUpperCase(Locale.ROOT)" @kind object;
  #L54f578.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f57e.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L54f584.  v0:= temp;
  #L54f586.  if v0 != 0 then goto L54f58c;
  #L54f58a.  return v3 @kind object;
  #L54f58c.  call temp:= `toTitleCase`(v2) @signature `Ljava/lang/Character;.toTitleCase:(C)C` @kind static;
  #L54f592.  v2:= temp;
  #L54f594.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f59a.  v2:= temp @kind object;
  #L54f59c.  return v2 @kind object;
}
procedure `char` `titlecaseChar`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.titlecaseChar:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f360.  call temp:= `toTitleCase`(v0) @signature `Ljava/lang/Character;.toTitleCase:(C)C` @kind static;
  #L54f366.  v0:= temp;
  #L54f368.  return v0;
}
procedure `char` `toLowerCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.toLowerCase:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f37c.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L54f382.  v0:= temp;
  #L54f384.  return v0;
}
procedure `char` `toTitleCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.toTitleCase:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f398.  call temp:= `toTitleCase`(v0) @signature `Ljava/lang/Character;.toTitleCase:(C)C` @kind static;
  #L54f39e.  v0:= temp;
  #L54f3a0.  return v0;
}
procedure `char` `toUpperCase`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.toUpperCase:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f3b4.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L54f3ba.  v0:= temp;
  #L54f3bc.  return v0;
}
procedure `java.lang.String` `uppercase`(`char` v1 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.uppercase:(C)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54f5b0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f5b6.  v1:= temp @kind object;
  #L54f5b8.  v0:= `@@java.util.Locale.ROOT` @type ^`java.util.Locale` @kind object;
  #L54f5bc.  call temp:= `toUpperCase`(v1, v0) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f5c2.  v1:= temp @kind object;
  #L54f5c4.  v0:= "this as java.lang.String).toUpperCase(Locale.ROOT)" @kind object;
  #L54f5c8.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f5ce.  return v1 @kind object;
}
procedure `java.lang.String` `uppercase`(`char` v1 , `java.util.Locale` v2 @kind object) @signature `Lkotlin/text/CharsKt__CharJVMKt;.uppercase:(CLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f5e0.  v0:= "locale" @kind object;
  #L54f5e4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f5ea.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L54f5f0.  v1:= temp @kind object;
  #L54f5f2.  call temp:= `toUpperCase`(v1, v2) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L54f5f8.  v1:= temp @kind object;
  #L54f5fa.  v2:= "this as java.lang.String).toUpperCase(locale)" @kind object;
  #L54f5fe.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f604.  return v1 @kind object;
}
procedure `char` `uppercaseChar`(`char` v0 ) @signature `Lkotlin/text/CharsKt__CharJVMKt;.uppercaseChar:(C)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54f3d0.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L54f3d6.  v0:= temp;
  #L54f3d8.  return v0;
}
