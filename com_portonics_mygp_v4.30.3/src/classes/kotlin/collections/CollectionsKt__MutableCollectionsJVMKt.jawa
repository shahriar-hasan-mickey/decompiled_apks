record `kotlin.collections.CollectionsKt__MutableCollectionsJVMKt` @kind class @AccessFlag  extends `kotlin.collections.CollectionsKt__IteratorsKt` @kind class {
}
procedure `void` `<init>`(`kotlin.collections.CollectionsKt__MutableCollectionsJVMKt` v0 @kind this) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5271ac.  call `<init>`(v0) @signature `Lkotlin/collections/CollectionsKt__IteratorsKt;.<init>:()V` @kind direct;
  #L5271b2.  return @kind void;
}
procedure `void` `fill`(`java.util.List` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.fill:(Ljava/util/List;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L5271c4.  v0:= "<this>" @kind object;
  #L5271c8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5271ce.  call `fill`(v1, v2) @signature `Ljava/util/Collections;.fill:(Ljava/util/List;Ljava/lang/Object;)V` @kind static;
  #L5271d4.  return @kind void;
}
procedure `void` `shuffle`(`java.util.List` v1 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.shuffle:(Ljava/util/List;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L5271e8.  v0:= "<this>" @kind object;
  #L5271ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5271f2.  call `shuffle`(v1) @signature `Ljava/util/Collections;.shuffle:(Ljava/util/List;)V` @kind static;
  #L5271f8.  return @kind void;
}
procedure `void` `shuffle`(`java.util.List` v1 @kind object, `java.util.Random` v2 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.shuffle:(Ljava/util/List;Ljava/util/Random;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L52720c.  v0:= "<this>" @kind object;
  #L527210.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L527216.  v0:= "random" @kind object;
  #L52721a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L527220.  call `shuffle`(v1, v2) @signature `Ljava/util/Collections;.shuffle:(Ljava/util/List;Ljava/util/Random;)V` @kind static;
  #L527226.  return @kind void;
}
procedure `void` `sort`(`java.util.List` v2 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.sort:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L527238.  v0:= "<this>" @kind object;
  #L52723c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L527242.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L527248.  v0:= temp;
  #L52724a.  v1:= 1I;
  #L52724c.  if v0 <= v1 then goto L527256;
  #L527250.  call `sort`(v2) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L527256.  return @kind void;
}
procedure `void` `sort`(`java.util.List` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L527268.  v0:= "<this>" @kind object;
  #L52726c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L527272.  v1:= "comparator" @kind object;
  #L527276.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L52727c.  v1:= new `kotlin.NotImplementedError`;
  #L527280.  v2:= 0I;
  #L527282.  v0:= 1I;
  #L527284.  call `<init>`(v1, v2, v0, v2) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L52728a.  throw v1;
}
procedure `void` `sort`(`java.util.List` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.sort:(Ljava/util/List;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L52729c.  v0:= "<this>" @kind object;
  #L5272a0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5272a6.  v1:= "comparison" @kind object;
  #L5272aa.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5272b0.  v1:= new `kotlin.NotImplementedError`;
  #L5272b4.  v2:= 0I;
  #L5272b6.  v0:= 1I;
  #L5272b8.  call `<init>`(v1, v2, v0, v2) @signature `Lkotlin/NotImplementedError;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L5272be.  throw v1;
}
procedure `void` `sortWith`(`java.util.List` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lkotlin/collections/CollectionsKt__MutableCollectionsJVMKt;.sortWith:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5272d0.  v0:= "<this>" @kind object;
  #L5272d4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5272da.  v0:= "comparator" @kind object;
  #L5272de.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5272e4.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L5272ea.  v0:= temp;
  #L5272ec.  v1:= 1I;
  #L5272ee.  if v0 <= v1 then goto L5272f8;
  #L5272f2.  call `sort`(v2, v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L5272f8.  return @kind void;
}
