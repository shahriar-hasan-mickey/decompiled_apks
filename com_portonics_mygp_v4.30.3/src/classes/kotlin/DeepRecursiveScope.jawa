record `kotlin.DeepRecursiveScope` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlin.DeepRecursiveScope` v0 @kind this) @signature `Lkotlin/DeepRecursiveScope;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4f93b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f93ba.  return @kind void;
}
procedure `void` `<init>`(`kotlin.DeepRecursiveScope` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/DeepRecursiveScope;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4f93cc.  call `<init>`(v0) @signature `Lkotlin/DeepRecursiveScope;.<init>:()V` @kind direct;
  #L4f93d2.  return @kind void;
}
procedure `java.lang.Object` `callRecursive`(`java.lang.Object` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/DeepRecursiveScope;.callRecursive:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `callRecursive`(`kotlin.DeepRecursiveFunction` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/DeepRecursiveScope;.callRecursive:(Lkotlin/DeepRecursiveFunction;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Void` `invoke`(`kotlin.DeepRecursiveScope` v0 @kind this, `kotlin.DeepRecursiveFunction` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/DeepRecursiveScope;.invoke:(Lkotlin/DeepRecursiveFunction;Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4f9388.  v2:= "<this>" @kind object;
  #L4f938c.  call `checkNotNullParameter`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4f9392.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4f9396.  v2:= "Should not be called from DeepRecursiveScope" @kind object;
  #L4f939a.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f93a0.  throw v1;
}
