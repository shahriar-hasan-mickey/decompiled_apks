record `kotlin.time.Duration` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `kotlin.time.Duration.rawValue` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.time.Duration$Companion` `@@kotlin.time.Duration.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.INFINITE` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.NEG_INFINITE` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.ZERO` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/Duration;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L55db30.  v0:= new `kotlin.time.Duration$Companion`;
  #L55db34.  v1:= 0I;
  #L55db36.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L55db3c.  `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` := v0 @kind object;
  #L55db40.  v0:= 0L;
  #L55db44.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L55db4a.  v0:= temp @kind wide;
  #L55db4c.  `@@kotlin.time.Duration.ZERO` @type ^`long` := v0 @kind wide;
  #L55db50.  v0:= 1.9999999999999998D;
  #L55db5a.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55db60.  v0:= temp @kind wide;
  #L55db62.  `@@kotlin.time.Duration.INFINITE` @type ^`long` := v0 @kind wide;
  #L55db66.  v0:= -2.0000000000000004D;
  #L55db70.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55db76.  v0:= temp @kind wide;
  #L55db78.  `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` := v0 @kind wide;
  #L55db7c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.Duration` v0 @kind this, `long` v1 ) @signature `Lkotlin/time/Duration;.<init>:(J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L55db90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55db96.  v0.`kotlin.time.Duration.rawValue` @type ^`long` := v1 @kind wide;
  #L55db9a.  return @kind void;
}
procedure `long` `access$getINFINITE$cp`() @signature `Lkotlin/time/Duration;.access$getINFINITE$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L55d254.  v0:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55d258.  return v0 @kind wide;
}
procedure `long` `access$getNEG_INFINITE$cp`() @signature `Lkotlin/time/Duration;.access$getNEG_INFINITE$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L55d26c.  v0:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55d270.  return v0 @kind wide;
}
procedure `long` `access$getZERO$cp`() @signature `Lkotlin/time/Duration;.access$getZERO$cp:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L55d284.  v0:= `@@kotlin.time.Duration.ZERO` @type ^`long` @kind wide;
  #L55d288.  return v0 @kind wide;
}
procedure `long` `addValuesMixedRanges-UwyO8pc`(`long` v6 , `long` v8 , `long` v10 ) @signature `Lkotlin/time/Duration;.addValuesMixedRanges-UwyO8pc:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L55d29c.  call temp:= `access$nanosToMillis`(v10) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L55d2a2.  v6:= temp @kind wide;
  #L55d2a4.  v0:= v8 + v6 @kind long;
  #L55d2a8.  v8:= 0I;
  #L55d2aa.  v2:= -4611686018426L;
  #L55d2b4.  v9:= lcmp(v2, v0);
  #L55d2b8.  if v9 > 0 then goto L55d2d0;
  #L55d2bc.  v2:= 4611686018427L;
  #L55d2c6.  v9:= lcmp(v0, v2);
  #L55d2ca.  if v9 >= 0 then goto L55d2d0;
  #L55d2ce.  v8:= 1I;
  #L55d2d0.  if v8 == 0 then goto L55d2f2;
  #L55d2d4.  call temp:= `access$millisToNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d2da.  v6:= temp @kind wide;
  #L55d2dc.  v10:= v10 - v6 @kind long;
  #L55d2de.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d2e4.  v6:= temp @kind wide;
  #L55d2e6.  v6:= v6 + v10 @kind long;
  #L55d2e8.  call temp:= `access$durationOfNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L55d2ee.  v6:= temp @kind wide;
  #L55d2f0.  goto L55d316;
  #L55d2f2.  v2:= -2.0000000000000004D;
  #L55d2fc.  v4:= 1.9999999999999998D;
  #L55d306.  call temp:= `coerceIn`(v0, v2, v4) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L55d30c.  v6:= temp @kind wide;
  #L55d30e.  call temp:= `access$durationOfMillis`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55d314.  v6:= temp @kind wide;
  #L55d316.  return v6 @kind wide;
}
procedure `void` `appendFractional-impl`(`long` v3 , `java.lang.StringBuilder` v5 @kind object, `int` v6 , `int` v7 , `int` v8 , `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lkotlin/time/Duration;.appendFractional-impl:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55dbac.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dbb2.  if v7 == 0 then goto L55dc44;
  #L55dbb6.  v3:= 46I;
  #L55dbba.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dbc0.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L55dbc6.  v3:= temp @kind object;
  #L55dbc8.  v4:= 48I;
  #L55dbcc.  call temp:= `padStart`(v3, v8, v4) @signature `Lkotlin/text/StringsKt;.padStart:(Ljava/lang/String;IC)Ljava/lang/String;` @kind static;
  #L55dbd2.  v3:= temp @kind object;
  #L55dbd4.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L55dbda.  v6:= temp;
  #L55dbdc.  v7:= -1I;
  #L55dbde.  v6:= v6 + v7 @kind int;
  #L55dbe0.  v8:= 1I;
  #L55dbe2.  v0:= 0I;
  #L55dbe4.  if v6 < 0 then goto L55dc10;
  #L55dbe8.  v1:= v6 + -1;
  #L55dbec.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L55dbf2.  v2:= temp;
  #L55dbf4.  if v2 == v4 then goto L55dbfc;
  #L55dbf8.  v2:= 1I;
  #L55dbfa.  goto L55dbfe;
  #L55dbfc.  v2:= 0I;
  #L55dbfe.  if v2 == 0 then goto L55dc06;
  #L55dc02.  v7:= v6;
  #L55dc04.  goto L55dc10;
  #L55dc06.  if v1 >= 0 then goto L55dc0c;
  #L55dc0a.  goto L55dc10;
  #L55dc0c.  v6:= v1;
  #L55dc0e.  goto L55dbe8;
  #L55dc10.  v7:= v7 + v8 @kind int;
  #L55dc12.  v4:= "this.append(value, startIndex, endIndex)" @kind object;
  #L55dc16.  v6:= 3I;
  #L55dc18.  if v10 != 0 then goto L55dc2e;
  #L55dc1c.  if v7 >= v6 then goto L55dc2e;
  #L55dc20.  call temp:= `append`(v5, v3, v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc26.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55dc2c.  goto L55dc44;
  #L55dc2e.  v7:= v7 + 2;
  #L55dc32.  v7:= v7 / v6 @kind int;
  #L55dc34.  v7:= v7 * 3;
  #L55dc38.  call temp:= `append`(v5, v3, v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc3e.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55dc44.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55dc4a.  return @kind void;
}
procedure `kotlin.time.Duration` `box-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.box-impl:(J)Lkotlin/time/Duration;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L55d210.  v0:= new `kotlin.time.Duration`;
  #L55d214.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration;.<init>:(J)V` @kind direct;
  #L55d21a.  return v0 @kind object;
}
procedure `int` `compareTo-LRDsOJo`(`long` v5 , `long` v7 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L55ca90.  v0:= v5 ^~ v7 @kind long;
  #L55ca94.  v2:= 0L;
  #L55ca98.  v4:= lcmp(v0, v2);
  #L55ca9c.  if v4 < 0 then goto L55caca;
  #L55caa0.  v1:= (`int`) v0 @kind l2i;
  #L55caa2.  v0:= v1 ^& 1;
  #L55caa6.  if v0 != 0 then goto L55caac;
  #L55caaa.  goto L55caca;
  #L55caac.  v0:= (`int`) v5 @kind l2i;
  #L55caae.  v0:= v0 ^& 1;
  #L55cab2.  v8:= (`int`) v7 @kind l2i;
  #L55cab4.  v7:= v8 ^& 1;
  #L55cab8.  v0:= v0 - v7 @kind int;
  #L55caba.  call temp:= `isNegative-impl`(v5) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L55cac0.  v5:= temp;
  #L55cac2.  if v5 == 0 then goto L55cac8;
  #L55cac6.  v0:= -v0 @kind int;
  #L55cac8.  return v0;
  #L55caca.  call temp:= `compare`(v5, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L55cad0.  v5:= temp;
  #L55cad2.  return v5;
}
procedure `long` `constructor-impl`(`long` v7 ) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L55d328.  call temp:= `getDurationAssertionsEnabled`() @signature `Lkotlin/time/DurationJvmKt;.getDurationAssertionsEnabled:()Z` @kind static;
  #L55d32e.  v0:= temp;
  #L55d330.  if v0 == 0 then goto L55d484;
  #L55d334.  call temp:= `isInNanos-impl`(v7) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d33a.  v0:= temp;
  #L55d33c.  v1:= 1I;
  #L55d33e.  v2:= 0I;
  #L55d340.  if v0 == 0 then goto L55d3b2;
  #L55d344.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d34a.  v3:= temp @kind wide;
  #L55d34c.  v5:= -2.0000000001722644D;
  #L55d356.  v0:= lcmp(v5, v3);
  #L55d35a.  if v0 > 0 then goto L55d372;
  #L55d35e.  v5:= 1.999999999913868D;
  #L55d368.  v0:= lcmp(v3, v5);
  #L55d36c.  if v0 >= 0 then goto L55d372;
  #L55d370.  goto L55d374;
  #L55d372.  v1:= 0I;
  #L55d374.  if v1 == 0 then goto L55d37c;
  #L55d378.  goto L55d484;
  #L55d37c.  v0:= new `java.lang.AssertionError`;
  #L55d380.  v1:= new `java.lang.StringBuilder`;
  #L55d384.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55d38a.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d390.  v7:= temp @kind wide;
  #L55d392.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d398.  v7:= " ns is out of nanoseconds range" @kind object;
  #L55d39c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d3a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d3a8.  v7:= temp @kind object;
  #L55d3aa.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L55d3b0.  throw v0;
  #L55d3b2.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d3b8.  v3:= temp @kind wide;
  #L55d3ba.  v5:= -2.0000000000000004D;
  #L55d3c4.  v0:= lcmp(v5, v3);
  #L55d3c8.  if v0 > 0 then goto L55d3dc;
  #L55d3cc.  v5:= 2.0D;
  #L55d3d0.  v0:= lcmp(v3, v5);
  #L55d3d4.  if v0 >= 0 then goto L55d3dc;
  #L55d3d8.  v0:= 1I;
  #L55d3da.  goto L55d3de;
  #L55d3dc.  v0:= 0I;
  #L55d3de.  if v0 == 0 then goto L55d44e;
  #L55d3e2.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d3e8.  v3:= temp @kind wide;
  #L55d3ea.  v5:= -4611686018426L;
  #L55d3f4.  v0:= lcmp(v5, v3);
  #L55d3f8.  if v0 > 0 then goto L55d410;
  #L55d3fc.  v5:= 4611686018427L;
  #L55d406.  v0:= lcmp(v3, v5);
  #L55d40a.  if v0 >= 0 then goto L55d410;
  #L55d40e.  goto L55d412;
  #L55d410.  v1:= 0I;
  #L55d412.  if v1 != 0 then goto L55d418;
  #L55d416.  goto L55d484;
  #L55d418.  v0:= new `java.lang.AssertionError`;
  #L55d41c.  v1:= new `java.lang.StringBuilder`;
  #L55d420.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55d426.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d42c.  v7:= temp @kind wide;
  #L55d42e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d434.  v7:= " ms is denormalized" @kind object;
  #L55d438.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d43e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d444.  v7:= temp @kind object;
  #L55d446.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L55d44c.  throw v0;
  #L55d44e.  v0:= new `java.lang.AssertionError`;
  #L55d452.  v1:= new `java.lang.StringBuilder`;
  #L55d456.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55d45c.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d462.  v7:= temp @kind wide;
  #L55d464.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d46a.  v7:= " ms is out of milliseconds range" @kind object;
  #L55d46e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d474.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d47a.  v7:= temp @kind object;
  #L55d47c.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L55d482.  throw v0;
  #L55d484.  return v7 @kind wide;
}
procedure `double` `div-LRDsOJo`(`long` v2 , `long` v4 ) @signature `Lkotlin/time/Duration;.div-LRDsOJo:(JJ)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55c8cc.  call temp:= `getStorageUnit-impl`(v2) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55c8d2.  v0:= temp @kind object;
  #L55c8d4.  call temp:= `getStorageUnit-impl`(v4) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55c8da.  v1:= temp @kind object;
  #L55c8dc.  call temp:= `maxOf`(v0, v1) @signature `Lkotlin/comparisons/ComparisonsKt;.maxOf:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @kind static;
  #L55c8e2.  v0:= temp @kind object;
  #L55c8e4.  v0:= (`kotlin.time.DurationUnit`) v0 @kind object;
  #L55c8e8.  call temp:= `toDouble-impl`(v2, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c8ee.  v2:= temp @kind wide;
  #L55c8f0.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c8f6.  v4:= temp @kind wide;
  #L55c8f8.  v2:= v2 / v4 @kind double;
  #L55c8fa.  return v2 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55d498.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L55d49e.  v0:= temp;
  #L55d4a0.  v1:= (`double`) v0 @kind i2d;
  #L55d4a2.  v3:= dcmpg(v1, v6);
  #L55d4a6.  if v3 != 0 then goto L55d4ae;
  #L55d4aa.  v1:= 1I;
  #L55d4ac.  goto L55d4b0;
  #L55d4ae.  v1:= 0I;
  #L55d4b0.  if v1 == 0 then goto L55d4c2;
  #L55d4b4.  if v0 == 0 then goto L55d4c2;
  #L55d4b8.  call temp:= `div-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @kind static;
  #L55d4be.  v4:= temp @kind wide;
  #L55d4c0.  return v4 @kind wide;
  #L55d4c2.  call temp:= `getStorageUnit-impl`(v4) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55d4c8.  v0:= temp @kind object;
  #L55d4ca.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55d4d0.  v4:= temp @kind wide;
  #L55d4d2.  v4:= v4 / v6 @kind double;
  #L55d4d4.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLkotlin/time/DurationUnit;)J` @kind static;
  #L55d4da.  v4:= temp @kind wide;
  #L55d4dc.  return v4 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v7 , `int` v9 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L55d4f0.  if v9 != 0 then goto L55d528;
  #L55d4f4.  call temp:= `isPositive-impl`(v7) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @kind static;
  #L55d4fa.  v9:= temp;
  #L55d4fc.  if v9 == 0 then goto L55d506;
  #L55d500.  v7:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55d504.  goto L55d516;
  #L55d506.  call temp:= `isNegative-impl`(v7) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L55d50c.  v7:= temp;
  #L55d50e.  if v7 == 0 then goto L55d518;
  #L55d512.  v7:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55d516.  return v7 @kind wide;
  #L55d518.  v7:= new `java.lang.IllegalArgumentException`;
  #L55d51c.  v8:= "Dividing zero duration by zero yields an undefined result." @kind object;
  #L55d520.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d526.  throw v7;
  #L55d528.  call temp:= `isInNanos-impl`(v7) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d52e.  v0:= temp;
  #L55d530.  if v0 == 0 then goto L55d54a;
  #L55d534.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d53a.  v7:= temp @kind wide;
  #L55d53c.  v0:= (`long`) v9 @kind i2l;
  #L55d53e.  v7:= v7 / v0 @kind long;
  #L55d540.  call temp:= `access$durationOfNanos`(v7) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L55d546.  v7:= temp @kind wide;
  #L55d548.  return v7 @kind wide;
  #L55d54a.  call temp:= `isInfinite-impl`(v7) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55d550.  v0:= temp;
  #L55d552.  if v0 == 0 then goto L55d568;
  #L55d556.  call temp:= `getSign`(v9) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L55d55c.  v9:= temp;
  #L55d55e.  call temp:= `times-UwyO8pc`(v7, v9) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L55d564.  v7:= temp @kind wide;
  #L55d566.  return v7 @kind wide;
  #L55d568.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d56e.  v0:= temp @kind wide;
  #L55d570.  v2:= (`long`) v9 @kind i2l;
  #L55d572.  v0:= v0 / v2 @kind long;
  #L55d574.  v4:= -4611686018426L;
  #L55d57e.  v9:= 0I;
  #L55d580.  v6:= lcmp(v4, v0);
  #L55d584.  if v6 > 0 then goto L55d59c;
  #L55d588.  v4:= 4611686018427L;
  #L55d592.  v6:= lcmp(v0, v4);
  #L55d596.  if v6 >= 0 then goto L55d59c;
  #L55d59a.  v9:= 1I;
  #L55d59c.  if v9 == 0 then goto L55d5cc;
  #L55d5a0.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d5a6.  v7:= temp @kind wide;
  #L55d5a8.  v4:= v0 * v2 @kind long;
  #L55d5ac.  v7:= v7 - v4 @kind long;
  #L55d5ae.  call temp:= `access$millisToNanos`(v7) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d5b4.  v7:= temp @kind wide;
  #L55d5b6.  v7:= v7 / v2 @kind long;
  #L55d5b8.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d5be.  v0:= temp @kind wide;
  #L55d5c0.  v0:= v0 + v7 @kind long;
  #L55d5c2.  call temp:= `access$durationOfNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L55d5c8.  v7:= temp @kind wide;
  #L55d5ca.  return v7 @kind wide;
  #L55d5cc.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55d5d2.  v7:= temp @kind wide;
  #L55d5d4.  return v7 @kind wide;
}
procedure `boolean` `equals-impl`(`long` v4 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55c798.  v0:= instanceof @variable v6 @type ^`kotlin.time.Duration` @kind boolean;
  #L55c79c.  v1:= 0I;
  #L55c79e.  if v0 != 0 then goto L55c7a4;
  #L55c7a2.  return v1;
  #L55c7a4.  v6:= (`kotlin.time.Duration`) v6 @kind object;
  #L55c7a8.  call temp:= `unbox-impl`(v6) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L55c7ae.  v2:= temp @kind wide;
  #L55c7b0.  v6:= lcmp(v4, v2);
  #L55c7b4.  if v6 == 0 then goto L55c7ba;
  #L55c7b8.  return v1;
  #L55c7ba.  v4:= 1I;
  #L55c7bc.  return v4;
}
procedure `boolean` `equals-impl0`(`long` v1 , `long` v3 ) @signature `Lkotlin/time/Duration;.equals-impl0:(JJ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c7d0.  v0:= lcmp(v1, v3);
  #L55c7d4.  if v0 != 0 then goto L55c7dc;
  #L55c7d8.  v1:= 1I;
  #L55c7da.  goto L55c7de;
  #L55c7dc.  v1:= 0I;
  #L55c7de.  return v1;
}
procedure `long` `getAbsoluteValue-UwyO8pc`(`long` v1 ) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d5e8.  call temp:= `isNegative-impl`(v1) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L55d5ee.  v0:= temp;
  #L55d5f0.  if v0 == 0 then goto L55d5fc;
  #L55d5f4.  call temp:= `unaryMinus-UwyO8pc`(v1) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L55d5fa.  v1:= temp @kind wide;
  #L55d5fc.  return v1 @kind wide;
}
procedure `void` `getHoursComponent$annotations`() @signature `Lkotlin/time/Duration;.getHoursComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dc5c.  return @kind void;
}
procedure `int` `getHoursComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55cae4.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55caea.  v0:= temp;
  #L55caec.  if v0 == 0 then goto L55caf4;
  #L55caf0.  v2:= 0I;
  #L55caf2.  goto L55cb06;
  #L55caf4.  call temp:= `getInWholeHours-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L55cafa.  v2:= temp @kind wide;
  #L55cafc.  v0:= 24I;
  #L55cb00.  v0:= (`long`) v0 @kind i2l;
  #L55cb02.  v2:= v2 %% v0 @kind long;
  #L55cb04.  v2:= (`int`) v2 @kind l2i;
  #L55cb06.  return v2;
}
procedure `void` `getInDays$annotations`() @signature `Lkotlin/time/Duration;.getInDays$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dc70.  return @kind void;
}
procedure `double` `getInDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInDays-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c90c.  v0:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c910.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c916.  v1:= temp @kind wide;
  #L55c918.  return v1 @kind wide;
}
procedure `void` `getInHours$annotations`() @signature `Lkotlin/time/Duration;.getInHours$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dc84.  return @kind void;
}
procedure `double` `getInHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInHours-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c92c.  v0:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c930.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c936.  v1:= temp @kind wide;
  #L55c938.  return v1 @kind wide;
}
procedure `void` `getInMicroseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMicroseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dc98.  return @kind void;
}
procedure `double` `getInMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMicroseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c94c.  v0:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c950.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c956.  v1:= temp @kind wide;
  #L55c958.  return v1 @kind wide;
}
procedure `void` `getInMilliseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMilliseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dcac.  return @kind void;
}
procedure `double` `getInMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMilliseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c96c.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c970.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c976.  v1:= temp @kind wide;
  #L55c978.  return v1 @kind wide;
}
procedure `void` `getInMinutes$annotations`() @signature `Lkotlin/time/Duration;.getInMinutes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dcc0.  return @kind void;
}
procedure `double` `getInMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMinutes-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c98c.  v0:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c990.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c996.  v1:= temp @kind wide;
  #L55c998.  return v1 @kind wide;
}
procedure `void` `getInNanoseconds$annotations`() @signature `Lkotlin/time/Duration;.getInNanoseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dcd4.  return @kind void;
}
procedure `double` `getInNanoseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInNanoseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c9ac.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c9b0.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c9b6.  v1:= temp @kind wide;
  #L55c9b8.  return v1 @kind wide;
}
procedure `void` `getInSeconds$annotations`() @signature `Lkotlin/time/Duration;.getInSeconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dce8.  return @kind void;
}
procedure `double` `getInSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInSeconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55c9cc.  v0:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55c9d0.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55c9d6.  v1:= temp @kind wide;
  #L55c9d8.  return v1 @kind wide;
}
procedure `long` `getInWholeDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d610.  v0:= `@@kotlin.time.DurationUnit.DAYS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d614.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d61a.  v1:= temp @kind wide;
  #L55d61c.  return v1 @kind wide;
}
procedure `long` `getInWholeHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d630.  v0:= `@@kotlin.time.DurationUnit.HOURS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d634.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d63a.  v1:= temp @kind wide;
  #L55d63c.  return v1 @kind wide;
}
procedure `long` `getInWholeMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMicroseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d650.  v0:= `@@kotlin.time.DurationUnit.MICROSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d654.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d65a.  v1:= temp @kind wide;
  #L55d65c.  return v1 @kind wide;
}
procedure `long` `getInWholeMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d670.  call temp:= `isInMillis-impl`(v1) @signature `Lkotlin/time/Duration;.isInMillis-impl:(J)Z` @kind static;
  #L55d676.  v0:= temp;
  #L55d678.  if v0 == 0 then goto L55d692;
  #L55d67c.  call temp:= `isFinite-impl`(v1) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L55d682.  v0:= temp;
  #L55d684.  if v0 == 0 then goto L55d692;
  #L55d688.  call temp:= `getValue-impl`(v1) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d68e.  v1:= temp @kind wide;
  #L55d690.  goto L55d69e;
  #L55d692.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d696.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d69c.  v1:= temp @kind wide;
  #L55d69e.  return v1 @kind wide;
}
procedure `long` `getInWholeMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d6b0.  v0:= `@@kotlin.time.DurationUnit.MINUTES` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d6b4.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d6ba.  v1:= temp @kind wide;
  #L55d6bc.  return v1 @kind wide;
}
procedure `long` `getInWholeNanoseconds-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55d6d0.  call temp:= `getValue-impl`(v3) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d6d6.  v0:= temp @kind wide;
  #L55d6d8.  call temp:= `isInNanos-impl`(v3) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d6de.  v3:= temp;
  #L55d6e0.  if v3 == 0 then goto L55d6e6;
  #L55d6e4.  goto L55d724;
  #L55d6e6.  v3:= 9223372036854L;
  #L55d6f0.  v2:= lcmp(v0, v3);
  #L55d6f4.  if v2 <= 0 then goto L55d704;
  #L55d6f8.  v0:= 9223372036854775807L;
  #L55d702.  goto L55d724;
  #L55d704.  v3:= -9223372036854L;
  #L55d70e.  v2:= lcmp(v0, v3);
  #L55d712.  if v2 >= 0 then goto L55d71c;
  #L55d716.  v0:= -9223372036854775808L;
  #L55d71a.  goto L55d724;
  #L55d71c.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d722.  v0:= temp @kind wide;
  #L55d724.  return v0 @kind wide;
}
procedure `long` `getInWholeSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L55d738.  v0:= `@@kotlin.time.DurationUnit.SECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d73c.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55d742.  v1:= temp @kind wide;
  #L55d744.  return v1 @kind wide;
}
procedure `void` `getMinutesComponent$annotations`() @signature `Lkotlin/time/Duration;.getMinutesComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dcfc.  return @kind void;
}
procedure `int` `getMinutesComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55cb18.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55cb1e.  v0:= temp;
  #L55cb20.  if v0 == 0 then goto L55cb28;
  #L55cb24.  v2:= 0I;
  #L55cb26.  goto L55cb3a;
  #L55cb28.  call temp:= `getInWholeMinutes-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @kind static;
  #L55cb2e.  v2:= temp @kind wide;
  #L55cb30.  v0:= 60I;
  #L55cb34.  v0:= (`long`) v0 @kind i2l;
  #L55cb36.  v2:= v2 %% v0 @kind long;
  #L55cb38.  v2:= (`int`) v2 @kind l2i;
  #L55cb3a.  return v2;
}
procedure `void` `getNanosecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getNanosecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dd10.  return @kind void;
}
procedure `int` `getNanosecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55cb4c.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55cb52.  v0:= temp;
  #L55cb54.  if v0 == 0 then goto L55cb5c;
  #L55cb58.  v2:= 0I;
  #L55cb5a.  goto L55cb96;
  #L55cb5c.  call temp:= `isInMillis-impl`(v2) @signature `Lkotlin/time/Duration;.isInMillis-impl:(J)Z` @kind static;
  #L55cb62.  v0:= temp;
  #L55cb64.  if v0 == 0 then goto L55cb82;
  #L55cb68.  call temp:= `getValue-impl`(v2) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55cb6e.  v2:= temp @kind wide;
  #L55cb70.  v0:= 1000I;
  #L55cb74.  v0:= (`long`) v0 @kind i2l;
  #L55cb76.  v2:= v2 %% v0 @kind long;
  #L55cb78.  call temp:= `access$millisToNanos`(v2) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55cb7e.  v2:= temp @kind wide;
  #L55cb80.  goto L55cb94;
  #L55cb82.  call temp:= `getValue-impl`(v2) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55cb88.  v2:= temp @kind wide;
  #L55cb8a.  v0:= 1000000000I;
  #L55cb90.  v0:= (`long`) v0 @kind i2l;
  #L55cb92.  v2:= v2 %% v0 @kind long;
  #L55cb94.  v2:= (`int`) v2 @kind l2i;
  #L55cb96.  return v2;
}
procedure `void` `getSecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getSecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55dd24.  return @kind void;
}
procedure `int` `getSecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55cba8.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55cbae.  v0:= temp;
  #L55cbb0.  if v0 == 0 then goto L55cbb8;
  #L55cbb4.  v2:= 0I;
  #L55cbb6.  goto L55cbca;
  #L55cbb8.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L55cbbe.  v2:= temp @kind wide;
  #L55cbc0.  v0:= 60I;
  #L55cbc4.  v0:= (`long`) v0 @kind i2l;
  #L55cbc6.  v2:= v2 %% v0 @kind long;
  #L55cbc8.  v2:= (`int`) v2 @kind l2i;
  #L55cbca.  return v2;
}
procedure `kotlin.time.DurationUnit` `getStorageUnit-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L55d22c.  call temp:= `isInNanos-impl`(v0) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d232.  v0:= temp;
  #L55d234.  if v0 == 0 then goto L55d23e;
  #L55d238.  v0:= `@@kotlin.time.DurationUnit.NANOSECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d23c.  goto L55d242;
  #L55d23e.  v0:= `@@kotlin.time.DurationUnit.MILLISECONDS` @type ^`kotlin.time.DurationUnit` @kind object;
  #L55d242.  return v0 @kind object;
}
procedure `int` `getUnitDiscriminator-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.getUnitDiscriminator-impl:(J)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L55cbdc.  v1:= (`int`) v0 @kind l2i;
  #L55cbde.  v0:= v1 ^& 1;
  #L55cbe2.  return v0;
}
procedure `long` `getValue-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L55d758.  v0:= 1I;
  #L55d75a.  v1:= v1 ^> v0 @kind long;
  #L55d75c.  return v1 @kind wide;
}
procedure `int` `hashCode-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L55cc14.  v0:= 32I;
  #L55cc18.  v0:= v2 ^>> v0 @kind long;
  #L55cc1c.  v2:= v2 ^~ v0 @kind long;
  #L55cc1e.  v3:= (`int`) v2 @kind l2i;
  #L55cc20.  return v3;
}
procedure `boolean` `isFinite-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L55c7f0.  call temp:= `isInfinite-impl`(v0) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55c7f6.  v0:= temp;
  #L55c7f8.  v0:= v0 ^~ 1;
  #L55c7fc.  return v0;
}
procedure `boolean` `isInMillis-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.isInMillis-impl:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L55c810.  v1:= (`int`) v0 @kind l2i;
  #L55c812.  v0:= 1I;
  #L55c814.  v1:= v1 ^& v0 @kind int;
  #L55c816.  if v1 != v0 then goto L55c81c;
  #L55c81a.  goto L55c81e;
  #L55c81c.  v0:= 0I;
  #L55c81e.  return v0;
}
procedure `boolean` `isInNanos-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L55c830.  v1:= (`int`) v0 @kind l2i;
  #L55c832.  v0:= 1I;
  #L55c834.  v1:= v1 ^& v0 @kind int;
  #L55c836.  if v1 != 0 then goto L55c83c;
  #L55c83a.  goto L55c83e;
  #L55c83c.  v0:= 0I;
  #L55c83e.  return v0;
}
procedure `boolean` `isInfinite-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55c850.  v0:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55c854.  v2:= lcmp(v3, v0);
  #L55c858.  if v2 == 0 then goto L55c86e;
  #L55c85c.  v0:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55c860.  v2:= lcmp(v3, v0);
  #L55c864.  if v2 != 0 then goto L55c86a;
  #L55c868.  goto L55c86e;
  #L55c86a.  v3:= 0I;
  #L55c86c.  goto L55c870;
  #L55c86e.  v3:= 1I;
  #L55c870.  return v3;
}
procedure `boolean` `isNegative-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55c884.  v0:= 0L;
  #L55c888.  v2:= lcmp(v3, v0);
  #L55c88c.  if v2 >= 0 then goto L55c894;
  #L55c890.  v3:= 1I;
  #L55c892.  goto L55c896;
  #L55c894.  v3:= 0I;
  #L55c896.  return v3;
}
procedure `boolean` `isPositive-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55c8a8.  v0:= 0L;
  #L55c8ac.  v2:= lcmp(v3, v0);
  #L55c8b0.  if v2 <= 0 then goto L55c8b8;
  #L55c8b4.  v3:= 1I;
  #L55c8b6.  goto L55c8ba;
  #L55c8b8.  v3:= 0I;
  #L55c8ba.  return v3;
}
procedure `long` `minus-LRDsOJo`(`long` v0 , `long` v2 ) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L55d770.  call temp:= `unaryMinus-UwyO8pc`(v2) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L55d776.  v2:= temp @kind wide;
  #L55d778.  call temp:= `plus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L55d77e.  v0:= temp @kind wide;
  #L55d780.  return v0 @kind wide;
}
procedure `long` `plus-LRDsOJo`(`long` v7 , `long` v9 ) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L55d794.  call temp:= `isInfinite-impl`(v7) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55d79a.  v0:= temp;
  #L55d79c.  if v0 == 0 then goto L55d7ce;
  #L55d7a0.  call temp:= `isFinite-impl`(v9) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L55d7a6.  v0:= temp;
  #L55d7a8.  if v0 != 0 then goto L55d7cc;
  #L55d7ac.  v9:= v9 ^~ v7 @kind long;
  #L55d7ae.  v0:= 0L;
  #L55d7b2.  v2:= lcmp(v9, v0);
  #L55d7b6.  if v2 < 0 then goto L55d7bc;
  #L55d7ba.  goto L55d7cc;
  #L55d7bc.  v7:= new `java.lang.IllegalArgumentException`;
  #L55d7c0.  v8:= "Summing infinite durations of different signs yields an undefined result." @kind object;
  #L55d7c4.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d7ca.  throw v7;
  #L55d7cc.  return v7 @kind wide;
  #L55d7ce.  call temp:= `isInfinite-impl`(v9) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55d7d4.  v0:= temp;
  #L55d7d6.  if v0 == 0 then goto L55d7dc;
  #L55d7da.  return v9 @kind wide;
  #L55d7dc.  v0:= (`int`) v7 @kind l2i;
  #L55d7de.  v0:= v0 ^& 1;
  #L55d7e2.  v1:= (`int`) v9 @kind l2i;
  #L55d7e4.  v1:= v1 ^& 1;
  #L55d7e8.  if v0 != v1 then goto L55d81e;
  #L55d7ec.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d7f2.  v0:= temp @kind wide;
  #L55d7f4.  call temp:= `getValue-impl`(v9) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d7fa.  v9:= temp @kind wide;
  #L55d7fc.  v0:= v0 + v9 @kind long;
  #L55d7fe.  call temp:= `isInNanos-impl`(v7) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d804.  v7:= temp;
  #L55d806.  if v7 == 0 then goto L55d814;
  #L55d80a.  call temp:= `access$durationOfNanosNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L55d810.  v7:= temp @kind wide;
  #L55d812.  goto L55d860;
  #L55d814.  call temp:= `access$durationOfMillisNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillisNormalized:(J)J` @kind static;
  #L55d81a.  v7:= temp @kind wide;
  #L55d81c.  goto L55d860;
  #L55d81e.  call temp:= `isInMillis-impl`(v7) @signature `Lkotlin/time/Duration;.isInMillis-impl:(J)Z` @kind static;
  #L55d824.  v0:= temp;
  #L55d826.  if v0 == 0 then goto L55d846;
  #L55d82a.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d830.  v3:= temp @kind wide;
  #L55d832.  call temp:= `getValue-impl`(v9) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d838.  v5:= temp @kind wide;
  #L55d83a.  v1:= v7 @kind wide;
  #L55d83c.  call temp:= `addValuesMixedRanges-UwyO8pc`(v1, v3, v5) @signature `Lkotlin/time/Duration;.addValuesMixedRanges-UwyO8pc:(JJJ)J` @kind static;
  #L55d842.  v7:= temp @kind wide;
  #L55d844.  goto L55d860;
  #L55d846.  call temp:= `getValue-impl`(v9) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d84c.  v2:= temp @kind wide;
  #L55d84e.  call temp:= `getValue-impl`(v7) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d854.  v4:= temp @kind wide;
  #L55d856.  v0:= v7 @kind wide;
  #L55d858.  call temp:= `addValuesMixedRanges-UwyO8pc`(v0, v2, v4) @signature `Lkotlin/time/Duration;.addValuesMixedRanges-UwyO8pc:(JJJ)J` @kind static;
  #L55d85e.  v7:= temp @kind wide;
  #L55d860.  return v7 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55d874.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L55d87a.  v0:= temp;
  #L55d87c.  v1:= (`double`) v0 @kind i2d;
  #L55d87e.  v3:= dcmpg(v1, v6);
  #L55d882.  if v3 != 0 then goto L55d88a;
  #L55d886.  v1:= 1I;
  #L55d888.  goto L55d88c;
  #L55d88a.  v1:= 0I;
  #L55d88c.  if v1 == 0 then goto L55d89a;
  #L55d890.  call temp:= `times-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L55d896.  v4:= temp @kind wide;
  #L55d898.  return v4 @kind wide;
  #L55d89a.  call temp:= `getStorageUnit-impl`(v4) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55d8a0.  v0:= temp @kind object;
  #L55d8a2.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55d8a8.  v4:= temp @kind wide;
  #L55d8aa.  v4:= v4 * v6 @kind double;
  #L55d8ae.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLkotlin/time/DurationUnit;)J` @kind static;
  #L55d8b4.  v4:= temp @kind wide;
  #L55d8b6.  return v4 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v13 , `int` v15 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L55d8c8.  call temp:= `isInfinite-impl`(v13) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55d8ce.  v0:= temp;
  #L55d8d0.  if v0 == 0 then goto L55d8f8;
  #L55d8d4.  if v15 == 0 then goto L55d8e8;
  #L55d8d8.  if v15 <= 0 then goto L55d8de;
  #L55d8dc.  goto L55d8e6;
  #L55d8de.  call temp:= `unaryMinus-UwyO8pc`(v13) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L55d8e4.  v13:= temp @kind wide;
  #L55d8e6.  return v13 @kind wide;
  #L55d8e8.  v13:= new `java.lang.IllegalArgumentException`;
  #L55d8ec.  v14:= "Multiplying infinite duration by zero yields an undefined result." @kind object;
  #L55d8f0.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d8f6.  throw v13;
  #L55d8f8.  if v15 != 0 then goto L55d902;
  #L55d8fc.  v13:= `@@kotlin.time.Duration.ZERO` @type ^`long` @kind wide;
  #L55d900.  return v13 @kind wide;
  #L55d902.  call temp:= `getValue-impl`(v13) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55d908.  v0:= temp @kind wide;
  #L55d90a.  v2:= (`long`) v15 @kind i2l;
  #L55d90c.  v4:= v0 * v2 @kind long;
  #L55d910.  call temp:= `isInNanos-impl`(v13) @signature `Lkotlin/time/Duration;.isInNanos-impl:(J)Z` @kind static;
  #L55d916.  v13:= temp;
  #L55d918.  v6:= 1.9999999999999998D;
  #L55d922.  v8:= -2.0000000000000004D;
  #L55d92c.  if v13 == 0 then goto L55d9f8;
  #L55d930.  v13:= 2147483647L;
  #L55d936.  v10:= 0I;
  #L55d938.  v11:= lcmp(v0, v13);
  #L55d93c.  if v11 > 0 then goto L55d950;
  #L55d940.  v13:= -2147483647L;
  #L55d946.  v11:= lcmp(v13, v0);
  #L55d94a.  if v11 > 0 then goto L55d950;
  #L55d94e.  v10:= 1I;
  #L55d950.  if v10 == 0 then goto L55d960;
  #L55d954.  call temp:= `access$durationOfNanos`(v4) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L55d95a.  v13:= temp @kind wide;
  #L55d95c.  goto L55da42;
  #L55d960.  v13:= v4 / v2 @kind long;
  #L55d964.  v10:= lcmp(v13, v0);
  #L55d968.  if v10 != 0 then goto L55d976;
  #L55d96c.  call temp:= `access$durationOfNanosNormalized`(v4) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L55d972.  v13:= temp @kind wide;
  #L55d974.  goto L55da42;
  #L55d976.  call temp:= `access$nanosToMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L55d97c.  v13:= temp @kind wide;
  #L55d97e.  call temp:= `access$millisToNanos`(v13) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L55d984.  v4:= temp @kind wide;
  #L55d986.  v4:= v0 - v4 @kind long;
  #L55d98a.  v10:= v13 * v2 @kind long;
  #L55d98e.  v4:= v4 * v2 @kind long;
  #L55d992.  call temp:= `access$nanosToMillis`(v4) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L55d998.  v4:= temp @kind wide;
  #L55d99a.  v4:= v4 + v10 @kind long;
  #L55d99c.  v2:= v10 / v2 @kind long;
  #L55d9a0.  v12:= lcmp(v2, v13);
  #L55d9a4.  if v12 != 0 then goto L55d9d4;
  #L55d9a8.  v13:= v4 ^~ v10 @kind long;
  #L55d9ac.  v2:= 0L;
  #L55d9b0.  v10:= lcmp(v13, v2);
  #L55d9b4.  if v10 < 0 then goto L55d9d4;
  #L55d9b8.  v13:= new `kotlin.ranges.LongRange`;
  #L55d9bc.  call `<init>`(v13, v8, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L55d9c2.  call temp:= `coerceIn`(v4, v13) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L55d9c8.  v13:= temp @kind wide;
  #L55d9ca.  call temp:= `access$durationOfMillis`(v13) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55d9d0.  v13:= temp @kind wide;
  #L55d9d2.  goto L55da42;
  #L55d9d4.  call temp:= `getSign`(v0) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L55d9da.  v13:= temp;
  #L55d9dc.  call temp:= `getSign`(v15) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L55d9e2.  v14:= temp;
  #L55d9e4.  v13:= v13 * v14 @kind int;
  #L55d9e8.  if v13 <= 0 then goto L55d9f2;
  #L55d9ec.  v13:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55d9f0.  goto L55da42;
  #L55d9f2.  v13:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55d9f6.  goto L55da42;
  #L55d9f8.  v13:= v4 / v2 @kind long;
  #L55d9fc.  v2:= lcmp(v13, v0);
  #L55da00.  if v2 != 0 then goto L55da20;
  #L55da04.  v13:= new `kotlin.ranges.LongRange`;
  #L55da08.  call `<init>`(v13, v8, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L55da0e.  call temp:= `coerceIn`(v4, v13) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L55da14.  v13:= temp @kind wide;
  #L55da16.  call temp:= `access$durationOfMillis`(v13) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L55da1c.  v13:= temp @kind wide;
  #L55da1e.  goto L55da42;
  #L55da20.  call temp:= `getSign`(v0) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L55da26.  v13:= temp;
  #L55da28.  call temp:= `getSign`(v15) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L55da2e.  v14:= temp;
  #L55da30.  v13:= v13 * v14 @kind int;
  #L55da34.  if v13 <= 0 then goto L55da3e;
  #L55da38.  v13:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55da3c.  goto L55da42;
  #L55da3e.  v13:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55da42.  return v13 @kind wide;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55cc70.  v0:= "action" @kind object;
  #L55cc74.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55cc7a.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L55cc80.  v0:= temp @kind wide;
  #L55cc82.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L55cc88.  v0:= temp @kind object;
  #L55cc8a.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55cc90.  v2:= temp;
  #L55cc92.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cc98.  v2:= temp @kind object;
  #L55cc9a.  call temp:= `invoke`(v4, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55cca0.  v2:= temp @kind object;
  #L55cca2.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function3` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55ccb4.  v0:= "action" @kind object;
  #L55ccb8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55ccbe.  call temp:= `getInWholeMinutes-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @kind static;
  #L55ccc4.  v0:= temp @kind wide;
  #L55ccc6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L55cccc.  v0:= temp @kind object;
  #L55ccce.  call temp:= `getSecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L55ccd4.  v1:= temp;
  #L55ccd6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55ccdc.  v1:= temp @kind object;
  #L55ccde.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55cce4.  v2:= temp;
  #L55cce6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55ccec.  v2:= temp @kind object;
  #L55ccee.  call temp:= `invoke`(v4, v0, v1, v2) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55ccf4.  v2:= temp @kind object;
  #L55ccf6.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v3 , `kotlin.jvm.functions.Function4` v5 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function4;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55cd08.  v0:= "action" @kind object;
  #L55cd0c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55cd12.  call temp:= `getInWholeHours-impl`(v3) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L55cd18.  v0:= temp @kind wide;
  #L55cd1a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L55cd20.  v0:= temp @kind object;
  #L55cd22.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L55cd28.  v1:= temp;
  #L55cd2a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cd30.  v1:= temp @kind object;
  #L55cd32.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L55cd38.  v2:= temp;
  #L55cd3a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cd40.  v2:= temp @kind object;
  #L55cd42.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55cd48.  v3:= temp;
  #L55cd4a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cd50.  v3:= temp @kind object;
  #L55cd52.  call temp:= `invoke`(v5, v0, v1, v2, v3) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55cd58.  v3:= temp @kind object;
  #L55cd5a.  return v3 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v8 , `kotlin.jvm.functions.Function5` v10 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function5;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L55cd6c.  v0:= "action" @kind object;
  #L55cd70.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55cd76.  call temp:= `getInWholeDays-impl`(v8) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @kind static;
  #L55cd7c.  v0:= temp @kind wide;
  #L55cd7e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L55cd84.  v3:= temp @kind object;
  #L55cd86.  call temp:= `getHoursComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L55cd8c.  v0:= temp;
  #L55cd8e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cd94.  v4:= temp @kind object;
  #L55cd96.  call temp:= `getMinutesComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L55cd9c.  v0:= temp;
  #L55cd9e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cda4.  v5:= temp @kind object;
  #L55cda6.  call temp:= `getSecondsComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L55cdac.  v0:= temp;
  #L55cdae.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cdb4.  v6:= temp @kind object;
  #L55cdb6.  call temp:= `getNanosecondsComponent-impl`(v8) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55cdbc.  v8:= temp;
  #L55cdbe.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L55cdc4.  v7:= temp @kind object;
  #L55cdc6.  v2:= v10 @kind object;
  #L55cdc8.  call temp:= `invoke`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L55cdce.  v8:= temp @kind object;
  #L55cdd0.  return v8 @kind object;
}
procedure `double` `toDouble-impl`(`long` v3 , `kotlin.time.DurationUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55c9ec.  v0:= "unit" @kind object;
  #L55c9f0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55c9f6.  v0:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55c9fa.  v2:= lcmp(v3, v0);
  #L55c9fe.  if v2 != 0 then goto L55ca08;
  #L55ca02.  v3:= InfinityD;
  #L55ca06.  goto L55ca34;
  #L55ca08.  v0:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55ca0c.  v2:= lcmp(v3, v0);
  #L55ca10.  if v2 != 0 then goto L55ca1a;
  #L55ca14.  v3:= -InfinityD;
  #L55ca18.  goto L55ca34;
  #L55ca1a.  call temp:= `getValue-impl`(v3) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55ca20.  v0:= temp @kind wide;
  #L55ca22.  v0:= (`double`) v0 @kind l2d;
  #L55ca24.  call temp:= `getStorageUnit-impl`(v3) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55ca2a.  v3:= temp @kind object;
  #L55ca2c.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(DLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)D` @kind static;
  #L55ca32.  v3:= temp @kind wide;
  #L55ca34.  return v3 @kind wide;
}
procedure `int` `toInt-impl`(`long` v7 , `kotlin.time.DurationUnit` v9 @kind object) @signature `Lkotlin/time/Duration;.toInt-impl:(JLkotlin/time/DurationUnit;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L55cc34.  v0:= "unit" @kind object;
  #L55cc38.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55cc3e.  call temp:= `toLong-impl`(v7, v9) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @kind static;
  #L55cc44.  v1:= temp @kind wide;
  #L55cc46.  v3:= -2147483648L;
  #L55cc4c.  v5:= 2147483647L;
  #L55cc52.  call temp:= `coerceIn`(v1, v3, v5) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L55cc58.  v7:= temp @kind wide;
  #L55cc5a.  v8:= (`int`) v7 @kind l2i;
  #L55cc5c.  return v8;
}
procedure `java.lang.String` `toIsoString-impl`(`long` v11 ) @signature `Lkotlin/time/Duration;.toIsoString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L55cde4.  v8:= new `java.lang.StringBuilder`;
  #L55cde8.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55cdee.  call temp:= `isNegative-impl`(v11) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L55cdf4.  v0:= temp;
  #L55cdf6.  if v0 == 0 then goto L55ce04;
  #L55cdfa.  v0:= 45I;
  #L55cdfe.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ce04.  v0:= "PT" @kind object;
  #L55ce08.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ce0e.  call temp:= `getAbsoluteValue-UwyO8pc`(v11) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L55ce14.  v0:= temp @kind wide;
  #L55ce16.  call temp:= `getInWholeHours-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L55ce1c.  v2:= temp @kind wide;
  #L55ce1e.  call temp:= `getMinutesComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L55ce24.  v4:= temp;
  #L55ce26.  call temp:= `getSecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L55ce2c.  v5:= temp;
  #L55ce2e.  call temp:= `getNanosecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55ce34.  v6:= temp;
  #L55ce36.  call temp:= `isInfinite-impl`(v11) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L55ce3c.  v0:= temp;
  #L55ce3e.  if v0 == 0 then goto L55ce4c;
  #L55ce42.  v2:= 9999999999999L;
  #L55ce4c.  v0:= 0L;
  #L55ce50.  v7:= 1I;
  #L55ce52.  v9:= 0I;
  #L55ce54.  v10:= lcmp(v2, v0);
  #L55ce58.  if v10 == 0 then goto L55ce60;
  #L55ce5c.  v0:= 1I;
  #L55ce5e.  goto L55ce62;
  #L55ce60.  v0:= 0I;
  #L55ce62.  if v5 != 0 then goto L55ce70;
  #L55ce66.  if v6 == 0 then goto L55ce6c;
  #L55ce6a.  goto L55ce70;
  #L55ce6c.  v1:= 0I;
  #L55ce6e.  goto L55ce72;
  #L55ce70.  v1:= 1I;
  #L55ce72.  if v4 != 0 then goto L55ce82;
  #L55ce76.  if v1 == 0 then goto L55ce80;
  #L55ce7a.  if v0 == 0 then goto L55ce80;
  #L55ce7e.  goto L55ce82;
  #L55ce80.  v7:= 0I;
  #L55ce82.  if v0 == 0 then goto L55ce96;
  #L55ce86.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ce8c.  v2:= 72I;
  #L55ce90.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ce96.  if v7 == 0 then goto L55ceaa;
  #L55ce9a.  call temp:= `append`(v8, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55cea0.  v2:= 77I;
  #L55cea4.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ceaa.  if v1 != 0 then goto L55ceb6;
  #L55ceae.  if v0 != 0 then goto L55ced4;
  #L55ceb2.  if v7 != 0 then goto L55ced4;
  #L55ceb6.  v7:= 9I;
  #L55ceba.  v9:= 1I;
  #L55cebc.  v10:= "S" @kind object;
  #L55cec0.  v0:= v11 @kind wide;
  #L55cec2.  v2:= v8 @kind object;
  #L55cec4.  v3:= v5;
  #L55cec6.  v4:= v6;
  #L55cec8.  v5:= v7;
  #L55ceca.  v6:= v10 @kind object;
  #L55cecc.  v7:= v9;
  #L55cece.  call `appendFractional-impl`(v0, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/time/Duration;.appendFractional-impl:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L55ced4.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55ceda.  v11:= temp @kind object;
  #L55cedc.  v12:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L55cee0.  call `checkNotNullExpressionValue`(v11, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55cee6.  return v11 @kind object;
}
procedure `long` `toLong-impl`(`long` v3 , `kotlin.time.DurationUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toLong-impl:(JLkotlin/time/DurationUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L55da54.  v0:= "unit" @kind object;
  #L55da58.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55da5e.  v0:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55da62.  v2:= lcmp(v3, v0);
  #L55da66.  if v2 != 0 then goto L55da76;
  #L55da6a.  v3:= 9223372036854775807L;
  #L55da74.  goto L55daa0;
  #L55da76.  v0:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55da7a.  v2:= lcmp(v3, v0);
  #L55da7e.  if v2 != 0 then goto L55da88;
  #L55da82.  v3:= -9223372036854775808L;
  #L55da86.  goto L55daa0;
  #L55da88.  call temp:= `getValue-impl`(v3) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55da8e.  v0:= temp @kind wide;
  #L55da90.  call temp:= `getStorageUnit-impl`(v3) @signature `Lkotlin/time/Duration;.getStorageUnit-impl:(J)Lkotlin/time/DurationUnit;` @kind static;
  #L55da96.  v3:= temp @kind object;
  #L55da98.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/DurationUnitKt__DurationUnitJvmKt;.convertDurationUnit:(JLkotlin/time/DurationUnit;Lkotlin/time/DurationUnit;)J` @kind static;
  #L55da9e.  v3:= temp @kind wide;
  #L55daa0.  return v3 @kind wide;
}
procedure `long` `toLongMilliseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L55dab4.  call temp:= `getInWholeMilliseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @kind static;
  #L55daba.  v0:= temp @kind wide;
  #L55dabc.  return v0 @kind wide;
}
procedure `long` `toLongNanoseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L55dad0.  call temp:= `getInWholeNanoseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @kind static;
  #L55dad6.  v0:= temp @kind wide;
  #L55dad8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString-impl`(`long` v14 ) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L55cf3c.  v0:= 0L;
  #L55cf40.  v2:= lcmp(v14, v0);
  #L55cf44.  if v2 != 0 then goto L55cf50;
  #L55cf48.  v14:= "0s" @kind object;
  #L55cf4c.  goto L55d146;
  #L55cf50.  v2:= `@@kotlin.time.Duration.INFINITE` @type ^`long` @kind wide;
  #L55cf54.  v4:= lcmp(v14, v2);
  #L55cf58.  if v4 != 0 then goto L55cf64;
  #L55cf5c.  v14:= "Infinity" @kind object;
  #L55cf60.  goto L55d146;
  #L55cf64.  v2:= `@@kotlin.time.Duration.NEG_INFINITE` @type ^`long` @kind wide;
  #L55cf68.  v4:= lcmp(v14, v2);
  #L55cf6c.  if v4 != 0 then goto L55cf78;
  #L55cf70.  v14:= "-Infinity" @kind object;
  #L55cf74.  goto L55d146;
  #L55cf78.  call temp:= `isNegative-impl`(v14) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L55cf7e.  v2:= temp;
  #L55cf80.  v11:= new `java.lang.StringBuilder`;
  #L55cf84.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55cf8a.  if v2 == 0 then goto L55cf98;
  #L55cf8e.  v3:= 45I;
  #L55cf92.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55cf98.  call temp:= `getAbsoluteValue-UwyO8pc`(v14) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L55cf9e.  v3:= temp @kind wide;
  #L55cfa0.  call temp:= `getInWholeDays-impl`(v3) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @kind static;
  #L55cfa6.  v5:= temp @kind wide;
  #L55cfa8.  call temp:= `getHoursComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L55cfae.  v7:= temp;
  #L55cfb0.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L55cfb6.  v8:= temp;
  #L55cfb8.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L55cfbe.  v9:= temp;
  #L55cfc0.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L55cfc6.  v10:= temp;
  #L55cfc8.  v3:= 0I;
  #L55cfca.  v12:= 1I;
  #L55cfcc.  v4:= lcmp(v5, v0);
  #L55cfd0.  if v4 == 0 then goto L55cfd8;
  #L55cfd4.  v0:= 1I;
  #L55cfd6.  goto L55cfda;
  #L55cfd8.  v0:= 0I;
  #L55cfda.  if v7 == 0 then goto L55cfe2;
  #L55cfde.  v1:= 1I;
  #L55cfe0.  goto L55cfe4;
  #L55cfe2.  v1:= 0I;
  #L55cfe4.  if v8 == 0 then goto L55cfec;
  #L55cfe8.  v4:= 1I;
  #L55cfea.  goto L55cfee;
  #L55cfec.  v4:= 0I;
  #L55cfee.  if v9 != 0 then goto L55cffc;
  #L55cff2.  if v10 == 0 then goto L55cff8;
  #L55cff6.  goto L55cffc;
  #L55cff8.  v13:= 0I;
  #L55cffa.  goto L55cffe;
  #L55cffc.  v13:= 1I;
  #L55cffe.  if v0 == 0 then goto L55d014;
  #L55d002.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d008.  v3:= 100I;
  #L55d00c.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d012.  v3:= 1I;
  #L55d014.  v5:= 32I;
  #L55d018.  if v1 != 0 then goto L55d028;
  #L55d01c.  if v0 == 0 then goto L55d048;
  #L55d020.  if v4 != 0 then goto L55d028;
  #L55d024.  if v13 == 0 then goto L55d048;
  #L55d028.  v6:= v3 + 1;
  #L55d02c.  if v3 <= 0 then goto L55d036;
  #L55d030.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d036.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d03c.  v3:= 104I;
  #L55d040.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d046.  v3:= v6;
  #L55d048.  if v4 != 0 then goto L55d058;
  #L55d04c.  if v13 == 0 then goto L55d078;
  #L55d050.  if v1 != 0 then goto L55d058;
  #L55d054.  if v0 == 0 then goto L55d078;
  #L55d058.  v6:= v3 + 1;
  #L55d05c.  if v3 <= 0 then goto L55d066;
  #L55d060.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d066.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d06c.  v3:= 109I;
  #L55d070.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d076.  v3:= v6;
  #L55d078.  if v13 == 0 then goto L55d116;
  #L55d07c.  v13:= v3 + 1;
  #L55d080.  if v3 <= 0 then goto L55d08a;
  #L55d084.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d08a.  if v9 != 0 then goto L55d0f8;
  #L55d08e.  if v0 != 0 then goto L55d0f8;
  #L55d092.  if v1 != 0 then goto L55d0f8;
  #L55d096.  if v4 == 0 then goto L55d09c;
  #L55d09a.  goto L55d0f8;
  #L55d09c.  v0:= 1000000I;
  #L55d0a2.  if v10 < v0 then goto L55d0c2;
  #L55d0a6.  v6:= v10 / v0 @kind int;
  #L55d0aa.  v7:= v10 %% v0 @kind int;
  #L55d0ae.  v8:= 6I;
  #L55d0b0.  v10:= 0I;
  #L55d0b2.  v9:= "ms" @kind object;
  #L55d0b6.  v3:= v14 @kind wide;
  #L55d0b8.  v5:= v11 @kind object;
  #L55d0ba.  call `appendFractional-impl`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.appendFractional-impl:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L55d0c0.  goto L55d114;
  #L55d0c2.  v0:= 1000I;
  #L55d0c6.  if v10 < v0 then goto L55d0e6;
  #L55d0ca.  v6:= v10 / 1000;
  #L55d0ce.  v7:= v10 %% 1000;
  #L55d0d2.  v8:= 3I;
  #L55d0d4.  v10:= 0I;
  #L55d0d6.  v9:= "us" @kind object;
  #L55d0da.  v3:= v14 @kind wide;
  #L55d0dc.  v5:= v11 @kind object;
  #L55d0de.  call `appendFractional-impl`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.appendFractional-impl:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L55d0e4.  goto L55d114;
  #L55d0e6.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d0ec.  v14:= "ns" @kind object;
  #L55d0f0.  call temp:= `append`(v11, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d0f6.  goto L55d114;
  #L55d0f8.  v8:= 9I;
  #L55d0fc.  v0:= 0I;
  #L55d0fe.  v1:= "s" @kind object;
  #L55d102.  v3:= v14 @kind wide;
  #L55d104.  v5:= v11 @kind object;
  #L55d106.  v6:= v9;
  #L55d108.  v7:= v10;
  #L55d10a.  v9:= v1 @kind object;
  #L55d10c.  v10:= v0;
  #L55d10e.  call `appendFractional-impl`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.appendFractional-impl:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L55d114.  v3:= v13;
  #L55d116.  if v2 == 0 then goto L55d134;
  #L55d11a.  if v3 <= v12 then goto L55d134;
  #L55d11e.  v14:= 40I;
  #L55d122.  call temp:= `insert`(v11, v12, v14) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d128.  v14:= temp @kind object;
  #L55d12a.  v15:= 41I;
  #L55d12e.  call temp:= `append`(v14, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d134.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d13a.  v14:= temp @kind object;
  #L55d13c.  v15:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L55d140.  call `checkNotNullExpressionValue`(v14, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55d146.  return v14 @kind object;
}
procedure `java.lang.String` `toString-impl`(`long` v2 , `kotlin.time.DurationUnit` v4 @kind object, `int` v5 ) @signature `Lkotlin/time/Duration;.toString-impl:(JLkotlin/time/DurationUnit;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55d158.  v0:= "unit" @kind object;
  #L55d15c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L55d162.  if v5 < 0 then goto L55d16a;
  #L55d166.  v0:= 1I;
  #L55d168.  goto L55d16c;
  #L55d16a.  v0:= 0I;
  #L55d16c.  if v0 == 0 then goto L55d1ca;
  #L55d170.  call temp:= `toDouble-impl`(v2, v4) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLkotlin/time/DurationUnit;)D` @kind static;
  #L55d176.  v2:= temp @kind wide;
  #L55d178.  call temp:= `isInfinite`(v2) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L55d17e.  v0:= temp;
  #L55d180.  if v0 == 0 then goto L55d18e;
  #L55d184.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(D)Ljava/lang/String;` @kind static;
  #L55d18a.  v2:= temp @kind object;
  #L55d18c.  return v2 @kind object;
  #L55d18e.  v0:= new `java.lang.StringBuilder`;
  #L55d192.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55d198.  v1:= 12I;
  #L55d19c.  call temp:= `coerceAtMost`(v5, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L55d1a2.  v5:= temp;
  #L55d1a4.  call temp:= `formatToExactDecimals`(v2, v5) @signature `Lkotlin/time/DurationJvmKt;.formatToExactDecimals:(DI)Ljava/lang/String;` @kind static;
  #L55d1aa.  v2:= temp @kind object;
  #L55d1ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d1b2.  call temp:= `shortName`(v4) @signature `Lkotlin/time/DurationUnitKt__DurationUnitKt;.shortName:(Lkotlin/time/DurationUnit;)Ljava/lang/String;` @kind static;
  #L55d1b8.  v2:= temp @kind object;
  #L55d1ba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d1c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d1c6.  v2:= temp @kind object;
  #L55d1c8.  return v2 @kind object;
  #L55d1ca.  v2:= new `java.lang.StringBuilder`;
  #L55d1ce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55d1d4.  v3:= "decimals must be not negative, but was " @kind object;
  #L55d1d8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d1de.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55d1e4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d1ea.  v2:= temp @kind object;
  #L55d1ec.  v3:= new `java.lang.IllegalArgumentException`;
  #L55d1f0.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L55d1f6.  v2:= temp @kind object;
  #L55d1f8.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L55d1fe.  throw v3;
}
procedure `java.lang.String` `toString-impl$default`(`long` v0 , `kotlin.time.DurationUnit` v2 @kind object, `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/time/Duration;.toString-impl$default:(JLkotlin/time/DurationUnit;IILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L55cf18.  v4:= v4 ^& 2;
  #L55cf1c.  if v4 == 0 then goto L55cf22;
  #L55cf20.  v3:= 0I;
  #L55cf22.  call temp:= `toString-impl`(v0, v2, v3) @signature `Lkotlin/time/Duration;.toString-impl:(JLkotlin/time/DurationUnit;I)Ljava/lang/String;` @kind static;
  #L55cf28.  v0:= temp @kind object;
  #L55cf2a.  return v0 @kind object;
}
procedure `long` `unaryMinus-UwyO8pc`(`long` v2 ) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L55daec.  call temp:= `getValue-impl`(v2) @signature `Lkotlin/time/Duration;.getValue-impl:(J)J` @kind static;
  #L55daf2.  v0:= temp @kind wide;
  #L55daf4.  v0:= -v0 @kind long;
  #L55daf6.  v3:= (`int`) v2 @kind l2i;
  #L55daf8.  v2:= v3 ^& 1;
  #L55dafc.  call temp:= `access$durationOf`(v0, v2) @signature `Lkotlin/time/DurationKt;.access$durationOf:(JI)J` @kind static;
  #L55db02.  v2:= temp @kind wide;
  #L55db04.  return v2 @kind wide;
}
procedure `int` `compareTo`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L55ca48.  v3:= (`kotlin.time.Duration`) v3 @kind object;
  #L55ca4c.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L55ca52.  v0:= temp @kind wide;
  #L55ca54.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @kind virtual;
  #L55ca5a.  v3:= temp;
  #L55ca5c.  return v3;
}
procedure `int` `compareTo-LRDsOJo`(`kotlin.time.Duration` v2 @kind this, `long` v3 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55ca70.  v0:= v2.`kotlin.time.Duration.rawValue` @type ^`long` @kind wide;
  #L55ca74.  call temp:= `compareTo-LRDsOJo`(v0, v3) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L55ca7a.  v3:= temp;
  #L55ca7c.  return v3;
}
procedure `boolean` `equals`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55c778.  v0:= v2.`kotlin.time.Duration.rawValue` @type ^`long` @kind wide;
  #L55c77c.  call temp:= `equals-impl`(v0, v3) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @kind static;
  #L55c782.  v3:= temp;
  #L55c784.  return v3;
}
procedure `int` `hashCode`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55cbf4.  v0:= v2.`kotlin.time.Duration.rawValue` @type ^`long` @kind wide;
  #L55cbf8.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @kind static;
  #L55cbfe.  v0:= temp;
  #L55cc00.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55cef8.  v0:= v2.`kotlin.time.Duration.rawValue` @type ^`long` @kind wide;
  #L55cefc.  call temp:= `toString-impl`(v0) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L55cf02.  v0:= temp @kind object;
  #L55cf04.  return v0 @kind object;
}
procedure `long` `unbox-impl`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L55db18.  v0:= v2.`kotlin.time.Duration.rawValue` @type ^`long` @kind wide;
  #L55db1c.  return v0 @kind wide;
}
