record `kotlin.ranges.RangesKt___RangesKt` @kind class @AccessFlag  extends `kotlin.ranges.RangesKt__RangesKt` @kind class {
}
procedure `void` `<init>`(`kotlin.ranges.RangesKt___RangesKt` v0 @kind this) @signature `Lkotlin/ranges/RangesKt___RangesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54a9e4.  call `<init>`(v0) @signature `Lkotlin/ranges/RangesKt__RangesKt;.<init>:()V` @kind direct;
  #L54a9ea.  return @kind void;
}
procedure `boolean` `byteRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `double` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.byteRangeContains:(Lkotlin/ranges/ClosedRange;D)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L548d1c.  v0:= "<this>" @kind object;
  #L548d20.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548d26.  call temp:= `toByteExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(D)Ljava/lang/Byte;` @kind static;
  #L548d2c.  v2:= temp @kind object;
  #L548d2e.  if v2 == 0 then goto L548d3c;
  #L548d32.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548d38.  v1:= temp;
  #L548d3a.  goto L548d3e;
  #L548d3c.  v1:= 0I;
  #L548d3e.  return v1;
}
procedure `boolean` `byteRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.byteRangeContains:(Lkotlin/ranges/ClosedRange;F)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L548d50.  v0:= "<this>" @kind object;
  #L548d54.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548d5a.  call temp:= `toByteExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(F)Ljava/lang/Byte;` @kind static;
  #L548d60.  v2:= temp @kind object;
  #L548d62.  if v2 == 0 then goto L548d70;
  #L548d66.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548d6c.  v1:= temp;
  #L548d6e.  goto L548d72;
  #L548d70.  v1:= 0I;
  #L548d72.  return v1;
}
procedure `boolean` `byteRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.byteRangeContains:(Lkotlin/ranges/ClosedRange;I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548d84.  v0:= "<this>" @kind object;
  #L548d88.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548d8e.  call temp:= `toByteExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(I)Ljava/lang/Byte;` @kind static;
  #L548d94.  v2:= temp @kind object;
  #L548d96.  if v2 == 0 then goto L548da4;
  #L548d9a.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548da0.  v1:= temp;
  #L548da2.  goto L548da6;
  #L548da4.  v1:= 0I;
  #L548da6.  return v1;
}
procedure `boolean` `byteRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `long` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.byteRangeContains:(Lkotlin/ranges/ClosedRange;J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548db8.  v0:= "<this>" @kind object;
  #L548dbc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548dc2.  call temp:= `toByteExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(J)Ljava/lang/Byte;` @kind static;
  #L548dc8.  v2:= temp @kind object;
  #L548dca.  if v2 == 0 then goto L548dd8;
  #L548dce.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548dd4.  v1:= temp;
  #L548dd6.  goto L548dda;
  #L548dd8.  v1:= 0I;
  #L548dda.  return v1;
}
procedure `boolean` `byteRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.byteRangeContains:(Lkotlin/ranges/ClosedRange;S)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548dec.  v0:= "<this>" @kind object;
  #L548df0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548df6.  call temp:= `toByteExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(S)Ljava/lang/Byte;` @kind static;
  #L548dfc.  v2:= temp @kind object;
  #L548dfe.  if v2 == 0 then goto L548e0c;
  #L548e02.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548e08.  v1:= temp;
  #L548e0a.  goto L548e0e;
  #L548e0c.  v1:= 0I;
  #L548e0e.  return v1;
}
procedure `byte` `coerceAtLeast`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(BB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L5493a0.  if v0 >= v1 then goto L5493a6;
  #L5493a4.  v0:= v1;
  #L5493a6.  return v0;
}
procedure `double` `coerceAtLeast`(`double` v1 , `double` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(DD)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5494d0.  v0:= dcmpg(v1, v3);
  #L5494d4.  if v0 >= 0 then goto L5494da;
  #L5494d8.  v1:= v3 @kind wide;
  #L5494da.  return v1 @kind wide;
}
procedure `float` `coerceAtLeast`(`float` v1 , `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(FF)F` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549580.  v0:= fcmpg(v1, v2);
  #L549584.  if v0 >= 0 then goto L54958a;
  #L549588.  v1:= v2;
  #L54958a.  return v1;
}
procedure `int` `coerceAtLeast`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L549630.  if v0 >= v1 then goto L549636;
  #L549634.  v0:= v1;
  #L549636.  return v0;
}
procedure `long` `coerceAtLeast`(`long` v1 , `long` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(JJ)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54a730.  v0:= lcmp(v1, v3);
  #L54a734.  if v0 >= 0 then goto L54a73a;
  #L54a738.  v1:= v3 @kind wide;
  #L54a73a.  return v1 @kind wide;
}
procedure `java.lang.Comparable` `coerceAtLeast`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5499f0.  v0:= "<this>" @kind object;
  #L5499f4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5499fa.  v0:= "minimumValue" @kind object;
  #L5499fe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549a04.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549a0a.  v0:= temp;
  #L549a0c.  if v0 >= 0 then goto L549a12;
  #L549a10.  v1:= v2 @kind object;
  #L549a12.  return v1 @kind object;
}
procedure `short` `coerceAtLeast`(`short` v0 , `short` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtLeast:(SS)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L54a948.  if v0 >= v1 then goto L54a94e;
  #L54a94c.  v0:= v1;
  #L54a94e.  return v0;
}
procedure `byte` `coerceAtMost`(`byte` v0 , `byte` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(BB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L5493b8.  if v0 <= v1 then goto L5493be;
  #L5493bc.  v0:= v1;
  #L5493be.  return v0;
}
procedure `double` `coerceAtMost`(`double` v1 , `double` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(DD)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5494ec.  v0:= dcmpl(v1, v3);
  #L5494f0.  if v0 <= 0 then goto L5494f6;
  #L5494f4.  v1:= v3 @kind wide;
  #L5494f6.  return v1 @kind wide;
}
procedure `float` `coerceAtMost`(`float` v1 , `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(FF)F` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54959c.  v0:= fcmpl(v1, v2);
  #L5495a0.  if v0 <= 0 then goto L5495a6;
  #L5495a4.  v1:= v2;
  #L5495a6.  return v1;
}
procedure `int` `coerceAtMost`(`int` v0 , `int` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L549648.  if v0 <= v1 then goto L54964e;
  #L54964c.  v0:= v1;
  #L54964e.  return v0;
}
procedure `long` `coerceAtMost`(`long` v1 , `long` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(JJ)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54a74c.  v0:= lcmp(v1, v3);
  #L54a750.  if v0 <= 0 then goto L54a756;
  #L54a754.  v1:= v3 @kind wide;
  #L54a756.  return v1 @kind wide;
}
procedure `java.lang.Comparable` `coerceAtMost`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549a24.  v0:= "<this>" @kind object;
  #L549a28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549a2e.  v0:= "maximumValue" @kind object;
  #L549a32.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549a38.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549a3e.  v0:= temp;
  #L549a40.  if v0 <= 0 then goto L549a46;
  #L549a44.  v1:= v2 @kind object;
  #L549a46.  return v1 @kind object;
}
procedure `short` `coerceAtMost`(`short` v0 , `short` v1 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceAtMost:(SS)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L54a960.  if v0 <= v1 then goto L54a966;
  #L54a964.  v0:= v1;
  #L54a966.  return v0;
}
procedure `byte` `coerceIn`(`byte` v2 , `byte` v3 , `byte` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(BBB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5493d0.  if v3 > v4 then goto L5493e2;
  #L5493d4.  if v2 >= v3 then goto L5493da;
  #L5493d8.  return v3;
  #L5493da.  if v2 <= v4 then goto L5493e0;
  #L5493de.  return v4;
  #L5493e0.  return v2;
  #L5493e2.  v2:= new `java.lang.IllegalArgumentException`;
  #L5493e6.  v0:= new `java.lang.StringBuilder`;
  #L5493ea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5493f0.  v1:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L5493f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5493fa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L549400.  v4:= " is less than minimum " @kind object;
  #L549404.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54940a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L549410.  v3:= 46I;
  #L549414.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54941a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549420.  v3:= temp @kind object;
  #L549422.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L549428.  throw v2;
}
procedure `double` `coerceIn`(`double` v1 , `double` v3 , `double` v5 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(DDD)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549508.  v0:= dcmpl(v3, v5);
  #L54950c.  if v0 > 0 then goto L549526;
  #L549510.  v0:= dcmpg(v1, v3);
  #L549514.  if v0 >= 0 then goto L54951a;
  #L549518.  return v3 @kind wide;
  #L54951a.  v3:= dcmpl(v1, v5);
  #L54951e.  if v3 <= 0 then goto L549524;
  #L549522.  return v5 @kind wide;
  #L549524.  return v1 @kind wide;
  #L549526.  v1:= new `java.lang.IllegalArgumentException`;
  #L54952a.  v2:= new `java.lang.StringBuilder`;
  #L54952e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549534.  v0:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L549538.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54953e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L549544.  v5:= " is less than minimum " @kind object;
  #L549548.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54954e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L549554.  v3:= 46I;
  #L549558.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54955e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549564.  v2:= temp @kind object;
  #L549566.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54956c.  throw v1;
}
procedure `float` `coerceIn`(`float` v2 , `float` v3 , `float` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(FFF)F` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5495b8.  v0:= fcmpl(v3, v4);
  #L5495bc.  if v0 > 0 then goto L5495d6;
  #L5495c0.  v0:= fcmpg(v2, v3);
  #L5495c4.  if v0 >= 0 then goto L5495ca;
  #L5495c8.  return v3;
  #L5495ca.  v3:= fcmpl(v2, v4);
  #L5495ce.  if v3 <= 0 then goto L5495d4;
  #L5495d2.  return v4;
  #L5495d4.  return v2;
  #L5495d6.  v2:= new `java.lang.IllegalArgumentException`;
  #L5495da.  v0:= new `java.lang.StringBuilder`;
  #L5495de.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5495e4.  v1:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L5495e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5495ee.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L5495f4.  v4:= " is less than minimum " @kind object;
  #L5495f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5495fe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L549604.  v3:= 46I;
  #L549608.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54960e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549614.  v3:= temp @kind object;
  #L549616.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54961c.  throw v2;
}
procedure `int` `coerceIn`(`int` v2 , `int` v3 , `int` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(III)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L549660.  if v3 > v4 then goto L549672;
  #L549664.  if v2 >= v3 then goto L54966a;
  #L549668.  return v3;
  #L54966a.  if v2 <= v4 then goto L549670;
  #L54966e.  return v4;
  #L549670.  return v2;
  #L549672.  v2:= new `java.lang.IllegalArgumentException`;
  #L549676.  v0:= new `java.lang.StringBuilder`;
  #L54967a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549680.  v1:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L549684.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54968a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L549690.  v4:= " is less than minimum " @kind object;
  #L549694.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54969a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5496a0.  v3:= 46I;
  #L5496a4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5496aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5496b0.  v3:= temp @kind object;
  #L5496b2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5496b8.  throw v2;
}
procedure `int` `coerceIn`(`int` v2 , `kotlin.ranges.ClosedRange` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(ILkotlin/ranges/ClosedRange;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5496cc.  v0:= "range" @kind object;
  #L5496d0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5496d6.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.ClosedFloatingPointRange` @kind boolean;
  #L5496da.  if v0 == 0 then goto L549700;
  #L5496de.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L5496e4.  v2:= temp @kind object;
  #L5496e6.  v3:= (`kotlin.ranges.ClosedFloatingPointRange`) v3 @kind object;
  #L5496ea.  call temp:= `coerceIn`(v2, v3) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Lkotlin/ranges/ClosedFloatingPointRange;)Ljava/lang/Comparable;` @kind static;
  #L5496f0.  v2:= temp @kind object;
  #L5496f2.  v2:= (`java.lang.Number`) v2 @kind object;
  #L5496f6.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L5496fc.  v2:= temp;
  #L5496fe.  return v2;
  #L549700.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/ClosedRange;.isEmpty:()Z` @kind interface;
  #L549706.  v0:= temp;
  #L549708.  if v0 != 0 then goto L549768;
  #L54970c.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549712.  v0:= temp @kind object;
  #L549714.  v0:= (`java.lang.Number`) v0 @kind object;
  #L549718.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54971e.  v0:= temp;
  #L549720.  if v2 >= v0 then goto L54973a;
  #L549724.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L54972a.  v2:= temp @kind object;
  #L54972c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L549730.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L549736.  v2:= temp;
  #L549738.  goto L549766;
  #L54973a.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549740.  v0:= temp @kind object;
  #L549742.  v0:= (`java.lang.Number`) v0 @kind object;
  #L549746.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54974c.  v0:= temp;
  #L54974e.  if v2 <= v0 then goto L549766;
  #L549752.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549758.  v2:= temp @kind object;
  #L54975a.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54975e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L549764.  v2:= temp;
  #L549766.  return v2;
  #L549768.  v2:= new `java.lang.IllegalArgumentException`;
  #L54976c.  v0:= new `java.lang.StringBuilder`;
  #L549770.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549776.  v1:= "Cannot coerce value to an empty range: " @kind object;
  #L54977a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549780.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549786.  v3:= 46I;
  #L54978a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L549790.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549796.  v3:= temp @kind object;
  #L549798.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54979e.  throw v2;
}
procedure `long` `coerceIn`(`long` v1 , `long` v3 , `long` v5 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(JJJ)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54a854.  v0:= lcmp(v3, v5);
  #L54a858.  if v0 > 0 then goto L54a872;
  #L54a85c.  v0:= lcmp(v1, v3);
  #L54a860.  if v0 >= 0 then goto L54a866;
  #L54a864.  return v3 @kind wide;
  #L54a866.  v3:= lcmp(v1, v5);
  #L54a86a.  if v3 <= 0 then goto L54a870;
  #L54a86e.  return v5 @kind wide;
  #L54a870.  return v1 @kind wide;
  #L54a872.  v1:= new `java.lang.IllegalArgumentException`;
  #L54a876.  v2:= new `java.lang.StringBuilder`;
  #L54a87a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54a880.  v0:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L54a884.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a88a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a890.  v5:= " is less than minimum " @kind object;
  #L54a894.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a89a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a8a0.  v3:= 46I;
  #L54a8a4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a8aa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54a8b0.  v2:= temp @kind object;
  #L54a8b2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54a8b8.  throw v1;
}
procedure `long` `coerceIn`(`long` v3 , `kotlin.ranges.ClosedRange` v5 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L54a768.  v0:= "range" @kind object;
  #L54a76c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a772.  v0:= instanceof @variable v5 @type ^`kotlin.ranges.ClosedFloatingPointRange` @kind boolean;
  #L54a776.  if v0 == 0 then goto L54a79c;
  #L54a77a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L54a780.  v3:= temp @kind object;
  #L54a782.  v5:= (`kotlin.ranges.ClosedFloatingPointRange`) v5 @kind object;
  #L54a786.  call temp:= `coerceIn`(v3, v5) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Lkotlin/ranges/ClosedFloatingPointRange;)Ljava/lang/Comparable;` @kind static;
  #L54a78c.  v3:= temp @kind object;
  #L54a78e.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54a792.  call temp:= `longValue`(v3) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54a798.  v3:= temp @kind wide;
  #L54a79a.  return v3 @kind wide;
  #L54a79c.  call temp:= `isEmpty`(v5) @signature `Lkotlin/ranges/ClosedRange;.isEmpty:()Z` @kind interface;
  #L54a7a2.  v0:= temp;
  #L54a7a4.  if v0 != 0 then goto L54a80c;
  #L54a7a8.  call temp:= `getStart`(v5) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L54a7ae.  v0:= temp @kind object;
  #L54a7b0.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54a7b4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54a7ba.  v0:= temp @kind wide;
  #L54a7bc.  v2:= lcmp(v3, v0);
  #L54a7c0.  if v2 >= 0 then goto L54a7da;
  #L54a7c4.  call temp:= `getStart`(v5) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L54a7ca.  v3:= temp @kind object;
  #L54a7cc.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54a7d0.  call temp:= `longValue`(v3) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54a7d6.  v3:= temp @kind wide;
  #L54a7d8.  goto L54a80a;
  #L54a7da.  call temp:= `getEndInclusive`(v5) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L54a7e0.  v0:= temp @kind object;
  #L54a7e2.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54a7e6.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54a7ec.  v0:= temp @kind wide;
  #L54a7ee.  v2:= lcmp(v3, v0);
  #L54a7f2.  if v2 <= 0 then goto L54a80a;
  #L54a7f6.  call temp:= `getEndInclusive`(v5) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L54a7fc.  v3:= temp @kind object;
  #L54a7fe.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54a802.  call temp:= `longValue`(v3) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54a808.  v3:= temp @kind wide;
  #L54a80a.  return v3 @kind wide;
  #L54a80c.  v3:= new `java.lang.IllegalArgumentException`;
  #L54a810.  v4:= new `java.lang.StringBuilder`;
  #L54a814.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54a81a.  v0:= "Cannot coerce value to an empty range: " @kind object;
  #L54a81e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a824.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a82a.  v5:= 46I;
  #L54a82e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a834.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54a83a.  v4:= temp @kind object;
  #L54a83c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54a842.  throw v3;
}
procedure `java.lang.Comparable` `coerceIn`(`java.lang.Comparable` v2 @kind object, `java.lang.Comparable` v3 @kind object, `java.lang.Comparable` v4 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549a58.  v0:= "<this>" @kind object;
  #L549a5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549a62.  if v3 == 0 then goto L549ada;
  #L549a66.  if v4 == 0 then goto L549ada;
  #L549a6a.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549a70.  v0:= temp;
  #L549a72.  if v0 > 0 then goto L549a92;
  #L549a76.  call temp:= `compareTo`(v2, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549a7c.  v0:= temp;
  #L549a7e.  if v0 >= 0 then goto L549a84;
  #L549a82.  return v3 @kind object;
  #L549a84.  call temp:= `compareTo`(v2, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549a8a.  v3:= temp;
  #L549a8c.  if v3 <= 0 then goto L549afe;
  #L549a90.  return v4 @kind object;
  #L549a92.  v2:= new `java.lang.IllegalArgumentException`;
  #L549a96.  v0:= new `java.lang.StringBuilder`;
  #L549a9a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549aa0.  v1:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L549aa4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549aaa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549ab0.  v4:= " is less than minimum " @kind object;
  #L549ab4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549aba.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549ac0.  v3:= 46I;
  #L549ac4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L549aca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549ad0.  v3:= temp @kind object;
  #L549ad2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L549ad8.  throw v2;
  #L549ada.  if v3 == 0 then goto L549aec;
  #L549ade.  call temp:= `compareTo`(v2, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549ae4.  v0:= temp;
  #L549ae6.  if v0 >= 0 then goto L549aec;
  #L549aea.  return v3 @kind object;
  #L549aec.  if v4 == 0 then goto L549afe;
  #L549af0.  call temp:= `compareTo`(v2, v4) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549af6.  v3:= temp;
  #L549af8.  if v3 <= 0 then goto L549afe;
  #L549afc.  return v4 @kind object;
  #L549afe.  return v2 @kind object;
}
procedure `java.lang.Comparable` `coerceIn`(`java.lang.Comparable` v2 @kind object, `kotlin.ranges.ClosedFloatingPointRange` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Lkotlin/ranges/ClosedFloatingPointRange;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549b10.  v0:= "<this>" @kind object;
  #L549b14.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549b1a.  v0:= "range" @kind object;
  #L549b1e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549b24.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/ClosedFloatingPointRange;.isEmpty:()Z` @kind interface;
  #L549b2a.  v0:= temp;
  #L549b2c.  if v0 != 0 then goto L549b94;
  #L549b30.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549b36.  v0:= temp @kind object;
  #L549b38.  call temp:= `lessThanOrEquals`(v3, v2, v0) @signature `Lkotlin/ranges/ClosedFloatingPointRange;.lessThanOrEquals:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @kind interface;
  #L549b3e.  v0:= temp;
  #L549b40.  if v0 == 0 then goto L549b62;
  #L549b44.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549b4a.  v0:= temp @kind object;
  #L549b4c.  call temp:= `lessThanOrEquals`(v3, v0, v2) @signature `Lkotlin/ranges/ClosedFloatingPointRange;.lessThanOrEquals:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @kind interface;
  #L549b52.  v0:= temp;
  #L549b54.  if v0 != 0 then goto L549b62;
  #L549b58.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549b5e.  v2:= temp @kind object;
  #L549b60.  goto L549b92;
  #L549b62.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549b68.  v0:= temp @kind object;
  #L549b6a.  call temp:= `lessThanOrEquals`(v3, v0, v2) @signature `Lkotlin/ranges/ClosedFloatingPointRange;.lessThanOrEquals:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @kind interface;
  #L549b70.  v0:= temp;
  #L549b72.  if v0 == 0 then goto L549b92;
  #L549b76.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549b7c.  v0:= temp @kind object;
  #L549b7e.  call temp:= `lessThanOrEquals`(v3, v2, v0) @signature `Lkotlin/ranges/ClosedFloatingPointRange;.lessThanOrEquals:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z` @kind interface;
  #L549b84.  v0:= temp;
  #L549b86.  if v0 != 0 then goto L549b92;
  #L549b8a.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549b90.  v2:= temp @kind object;
  #L549b92.  return v2 @kind object;
  #L549b94.  v2:= new `java.lang.IllegalArgumentException`;
  #L549b98.  v0:= new `java.lang.StringBuilder`;
  #L549b9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549ba2.  v1:= "Cannot coerce value to an empty range: " @kind object;
  #L549ba6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549bac.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549bb2.  v3:= 46I;
  #L549bb6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L549bbc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549bc2.  v3:= temp @kind object;
  #L549bc4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L549bca.  throw v2;
}
procedure `java.lang.Comparable` `coerceIn`(`java.lang.Comparable` v2 @kind object, `kotlin.ranges.ClosedRange` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Lkotlin/ranges/ClosedRange;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549bdc.  v0:= "<this>" @kind object;
  #L549be0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549be6.  v0:= "range" @kind object;
  #L549bea.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549bf0.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.ClosedFloatingPointRange` @kind boolean;
  #L549bf4.  if v0 == 0 then goto L549c06;
  #L549bf8.  v3:= (`kotlin.ranges.ClosedFloatingPointRange`) v3 @kind object;
  #L549bfc.  call temp:= `coerceIn`(v2, v3) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(Ljava/lang/Comparable;Lkotlin/ranges/ClosedFloatingPointRange;)Ljava/lang/Comparable;` @kind static;
  #L549c02.  v2:= temp @kind object;
  #L549c04.  return v2 @kind object;
  #L549c06.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/ClosedRange;.isEmpty:()Z` @kind interface;
  #L549c0c.  v0:= temp;
  #L549c0e.  if v0 != 0 then goto L549c4e;
  #L549c12.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549c18.  v0:= temp @kind object;
  #L549c1a.  call temp:= `compareTo`(v2, v0) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549c20.  v0:= temp;
  #L549c22.  if v0 >= 0 then goto L549c30;
  #L549c26.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L549c2c.  v2:= temp @kind object;
  #L549c2e.  goto L549c4c;
  #L549c30.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549c36.  v0:= temp @kind object;
  #L549c38.  call temp:= `compareTo`(v2, v0) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L549c3e.  v0:= temp;
  #L549c40.  if v0 <= 0 then goto L549c4c;
  #L549c44.  call temp:= `getEndInclusive`(v3) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L549c4a.  v2:= temp @kind object;
  #L549c4c.  return v2 @kind object;
  #L549c4e.  v2:= new `java.lang.IllegalArgumentException`;
  #L549c52.  v0:= new `java.lang.StringBuilder`;
  #L549c56.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549c5c.  v1:= "Cannot coerce value to an empty range: " @kind object;
  #L549c60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c66.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c6c.  v3:= 46I;
  #L549c70.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549c7c.  v3:= temp @kind object;
  #L549c7e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L549c84.  throw v2;
}
procedure `short` `coerceIn`(`short` v2 , `short` v3 , `short` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.coerceIn:(SSS)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a978.  if v3 > v4 then goto L54a98a;
  #L54a97c.  if v2 >= v3 then goto L54a982;
  #L54a980.  return v3;
  #L54a982.  if v2 <= v4 then goto L54a988;
  #L54a986.  return v4;
  #L54a988.  return v2;
  #L54a98a.  v2:= new `java.lang.IllegalArgumentException`;
  #L54a98e.  v0:= new `java.lang.StringBuilder`;
  #L54a992.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54a998.  v1:= "Cannot coerce value to an empty range: maximum " @kind object;
  #L54a99c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a9a2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a9a8.  v4:= " is less than minimum " @kind object;
  #L54a9ac.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a9b2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a9b8.  v3:= 46I;
  #L54a9bc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L54a9c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54a9c8.  v3:= temp @kind object;
  #L54a9ca.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54a9d0.  throw v2;
}
procedure `boolean` `contains`(`kotlin.ranges.CharRange` v1 @kind object, `java.lang.Character` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.contains:(Lkotlin/ranges/CharRange;Ljava/lang/Character;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L548e20.  v0:= "<this>" @kind object;
  #L548e24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548e2a.  if v2 == 0 then goto L548e46;
  #L548e2e.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L548e34.  v2:= temp;
  #L548e36.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/CharRange;.contains:(C)Z` @kind virtual;
  #L548e3c.  v1:= temp;
  #L548e3e.  if v1 == 0 then goto L548e46;
  #L548e42.  v1:= 1I;
  #L548e44.  goto L548e48;
  #L548e46.  v1:= 0I;
  #L548e48.  return v1;
}
procedure `boolean` `contains`(`kotlin.ranges.IntRange` v1 @kind object, `java.lang.Integer` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.contains:(Lkotlin/ranges/IntRange;Ljava/lang/Integer;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L548e5c.  v0:= "<this>" @kind object;
  #L548e60.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548e66.  if v2 == 0 then goto L548e82;
  #L548e6a.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L548e70.  v2:= temp;
  #L548e72.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/IntRange;.contains:(I)Z` @kind virtual;
  #L548e78.  v1:= temp;
  #L548e7a.  if v1 == 0 then goto L548e82;
  #L548e7e.  v1:= 1I;
  #L548e80.  goto L548e84;
  #L548e82.  v1:= 0I;
  #L548e84.  return v1;
}
procedure `boolean` `contains`(`kotlin.ranges.LongRange` v2 @kind object, `java.lang.Long` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.contains:(Lkotlin/ranges/LongRange;Ljava/lang/Long;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L548e98.  v0:= "<this>" @kind object;
  #L548e9c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548ea2.  if v3 == 0 then goto L548ebe;
  #L548ea6.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L548eac.  v0:= temp @kind wide;
  #L548eae.  call temp:= `contains`(v2, v0) @signature `Lkotlin/ranges/LongRange;.contains:(J)Z` @kind virtual;
  #L548eb4.  v2:= temp;
  #L548eb6.  if v2 == 0 then goto L548ebe;
  #L548eba.  v2:= 1I;
  #L548ebc.  goto L548ec0;
  #L548ebe.  v2:= 0I;
  #L548ec0.  return v2;
}
procedure `boolean` `doubleRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `byte` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.doubleRangeContains:(Lkotlin/ranges/ClosedRange;B)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L548ed4.  v0:= "<this>" @kind object;
  #L548ed8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548ede.  v0:= (`double`) v3 @kind i2d;
  #L548ee0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L548ee6.  v3:= temp @kind object;
  #L548ee8.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548eee.  v2:= temp;
  #L548ef0.  return v2;
}
procedure `boolean` `doubleRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `float` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.doubleRangeContains:(Lkotlin/ranges/ClosedRange;F)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L548f04.  v0:= "<this>" @kind object;
  #L548f08.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548f0e.  v0:= (`double`) v3 @kind f2d;
  #L548f10.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L548f16.  v3:= temp @kind object;
  #L548f18.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548f1e.  v2:= temp;
  #L548f20.  return v2;
}
procedure `boolean` `doubleRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `int` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.doubleRangeContains:(Lkotlin/ranges/ClosedRange;I)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L548f34.  v0:= "<this>" @kind object;
  #L548f38.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548f3e.  v0:= (`double`) v3 @kind i2d;
  #L548f40.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L548f46.  v3:= temp @kind object;
  #L548f48.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548f4e.  v2:= temp;
  #L548f50.  return v2;
}
procedure `boolean` `doubleRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `long` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.doubleRangeContains:(Lkotlin/ranges/ClosedRange;J)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L548f64.  v0:= "<this>" @kind object;
  #L548f68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548f6e.  v2:= (`double`) v2 @kind l2d;
  #L548f70.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L548f76.  v2:= temp @kind object;
  #L548f78.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548f7e.  v1:= temp;
  #L548f80.  return v1;
}
procedure `boolean` `doubleRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `short` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.doubleRangeContains:(Lkotlin/ranges/ClosedRange;S)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L548f94.  v0:= "<this>" @kind object;
  #L548f98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548f9e.  v0:= (`double`) v3 @kind i2d;
  #L548fa0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L548fa6.  v3:= temp @kind object;
  #L548fa8.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548fae.  v2:= temp;
  #L548fb0.  return v2;
}
procedure `kotlin.ranges.CharProgression` `downTo`(`char` v2 , `char` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(CC)Lkotlin/ranges/CharProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549fcc.  v0:= `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` @kind object;
  #L549fd0.  v1:= -1I;
  #L549fd2.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/CharProgression$Companion;.fromClosedRange:(CCI)Lkotlin/ranges/CharProgression;` @kind virtual;
  #L549fd8.  v2:= temp @kind object;
  #L549fda.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`byte` v2 , `byte` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(BB)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a0d0.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a0d4.  v1:= -1I;
  #L54a0d6.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a0dc.  v2:= temp @kind object;
  #L54a0de.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`byte` v2 , `int` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(BI)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a0f0.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a0f4.  v1:= -1I;
  #L54a0f6.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a0fc.  v2:= temp @kind object;
  #L54a0fe.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`byte` v2 , `short` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(BS)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a110.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a114.  v1:= -1I;
  #L54a116.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a11c.  v2:= temp @kind object;
  #L54a11e.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`int` v2 , `byte` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(IB)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a130.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a134.  v1:= -1I;
  #L54a136.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a13c.  v2:= temp @kind object;
  #L54a13e.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`int` v2 , `int` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L54a150.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a154.  v1:= -1I;
  #L54a156.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a15c.  v2:= temp @kind object;
  #L54a15e.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`int` v2 , `short` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(IS)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a170.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a174.  v1:= -1I;
  #L54a176.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a17c.  v2:= temp @kind object;
  #L54a17e.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`short` v2 , `byte` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(SB)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a190.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a194.  v1:= -1I;
  #L54a196.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a19c.  v2:= temp @kind object;
  #L54a19e.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`short` v2 , `int` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(SI)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a1b0.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a1b4.  v1:= -1I;
  #L54a1b6.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a1bc.  v2:= temp @kind object;
  #L54a1be.  return v2 @kind object;
}
procedure `kotlin.ranges.IntProgression` `downTo`(`short` v2 , `short` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(SS)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a1d0.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a1d4.  v1:= -1I;
  #L54a1d6.  call temp:= `fromClosedRange`(v0, v2, v3, v1) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a1dc.  v2:= temp @kind object;
  #L54a1de.  return v2 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`byte` v7 , `long` v8 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(BJ)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a3fc.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a400.  v1:= (`long`) v7 @kind i2l;
  #L54a402.  v5:= -1L;
  #L54a406.  v3:= v8 @kind wide;
  #L54a408.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a40e.  v7:= temp @kind object;
  #L54a410.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`int` v7 , `long` v8 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(IJ)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a424.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a428.  v1:= (`long`) v7 @kind i2l;
  #L54a42a.  v5:= -1L;
  #L54a42e.  v3:= v8 @kind wide;
  #L54a430.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a436.  v7:= temp @kind object;
  #L54a438.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`long` v7 , `byte` v9 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(JB)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a44c.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a450.  v3:= (`long`) v9 @kind i2l;
  #L54a452.  v5:= -1L;
  #L54a456.  v1:= v7 @kind wide;
  #L54a458.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a45e.  v7:= temp @kind object;
  #L54a460.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`long` v7 , `int` v9 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(JI)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a474.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a478.  v3:= (`long`) v9 @kind i2l;
  #L54a47a.  v5:= -1L;
  #L54a47e.  v1:= v7 @kind wide;
  #L54a480.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a486.  v7:= temp @kind object;
  #L54a488.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`long` v7 , `long` v9 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(JJ)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a49c.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a4a0.  v5:= -1L;
  #L54a4a4.  v1:= v7 @kind wide;
  #L54a4a6.  v3:= v9 @kind wide;
  #L54a4a8.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a4ae.  v7:= temp @kind object;
  #L54a4b0.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`long` v7 , `short` v9 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(JS)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a4c4.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a4c8.  v3:= (`long`) v9 @kind i2l;
  #L54a4ca.  v5:= -1L;
  #L54a4ce.  v1:= v7 @kind wide;
  #L54a4d0.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a4d6.  v7:= temp @kind object;
  #L54a4d8.  return v7 @kind object;
}
procedure `kotlin.ranges.LongProgression` `downTo`(`short` v7 , `long` v8 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.downTo:(SJ)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L54a4ec.  v0:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a4f0.  v1:= (`long`) v7 @kind i2l;
  #L54a4f2.  v5:= -1L;
  #L54a4f6.  v3:= v8 @kind wide;
  #L54a4f8.  call temp:= `fromClosedRange`(v0, v1, v3, v5) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a4fe.  v7:= temp @kind object;
  #L54a500.  return v7 @kind object;
}
procedure `boolean` `floatRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.floatRangeContains:(Lkotlin/ranges/ClosedRange;B)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L548fc4.  v0:= "<this>" @kind object;
  #L548fc8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548fce.  v2:= (`float`) v2 @kind i2f;
  #L548fd0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L548fd6.  v2:= temp @kind object;
  #L548fd8.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548fde.  v1:= temp;
  #L548fe0.  return v1;
}
procedure `boolean` `floatRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `double` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.floatRangeContains:(Lkotlin/ranges/ClosedRange;D)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548ff4.  v0:= "<this>" @kind object;
  #L548ff8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548ffe.  v2:= (`float`) v2 @kind d2f;
  #L549000.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L549006.  v2:= temp @kind object;
  #L549008.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54900e.  v1:= temp;
  #L549010.  return v1;
}
procedure `boolean` `floatRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.floatRangeContains:(Lkotlin/ranges/ClosedRange;I)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L549024.  v0:= "<this>" @kind object;
  #L549028.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54902e.  v2:= (`float`) v2 @kind i2f;
  #L549030.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L549036.  v2:= temp @kind object;
  #L549038.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54903e.  v1:= temp;
  #L549040.  return v1;
}
procedure `boolean` `floatRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `long` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.floatRangeContains:(Lkotlin/ranges/ClosedRange;J)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L549054.  v0:= "<this>" @kind object;
  #L549058.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54905e.  v2:= (`float`) v2 @kind l2f;
  #L549060.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L549066.  v2:= temp @kind object;
  #L549068.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54906e.  v1:= temp;
  #L549070.  return v1;
}
procedure `boolean` `floatRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.floatRangeContains:(Lkotlin/ranges/ClosedRange;S)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L549084.  v0:= "<this>" @kind object;
  #L549088.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54908e.  v2:= (`float`) v2 @kind i2f;
  #L549090.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L549096.  v2:= temp @kind object;
  #L549098.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54909e.  v1:= temp;
  #L5490a0.  return v1;
}
procedure `boolean` `intRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.intRangeContains:(Lkotlin/ranges/ClosedRange;B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5490b4.  v0:= "<this>" @kind object;
  #L5490b8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5490be.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L5490c4.  v2:= temp @kind object;
  #L5490c6.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5490cc.  v1:= temp;
  #L5490ce.  return v1;
}
procedure `boolean` `intRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `double` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.intRangeContains:(Lkotlin/ranges/ClosedRange;D)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5490e0.  v0:= "<this>" @kind object;
  #L5490e4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5490ea.  call temp:= `toIntExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(D)Ljava/lang/Integer;` @kind static;
  #L5490f0.  v2:= temp @kind object;
  #L5490f2.  if v2 == 0 then goto L549100;
  #L5490f6.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5490fc.  v1:= temp;
  #L5490fe.  goto L549102;
  #L549100.  v1:= 0I;
  #L549102.  return v1;
}
procedure `boolean` `intRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.intRangeContains:(Lkotlin/ranges/ClosedRange;F)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L549114.  v0:= "<this>" @kind object;
  #L549118.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54911e.  call temp:= `toIntExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(F)Ljava/lang/Integer;` @kind static;
  #L549124.  v2:= temp @kind object;
  #L549126.  if v2 == 0 then goto L549134;
  #L54912a.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549130.  v1:= temp;
  #L549132.  goto L549136;
  #L549134.  v1:= 0I;
  #L549136.  return v1;
}
procedure `boolean` `intRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `long` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.intRangeContains:(Lkotlin/ranges/ClosedRange;J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549148.  v0:= "<this>" @kind object;
  #L54914c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549152.  call temp:= `toIntExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(J)Ljava/lang/Integer;` @kind static;
  #L549158.  v2:= temp @kind object;
  #L54915a.  if v2 == 0 then goto L549168;
  #L54915e.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549164.  v1:= temp;
  #L549166.  goto L54916a;
  #L549168.  v1:= 0I;
  #L54916a.  return v1;
}
procedure `boolean` `intRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.intRangeContains:(Lkotlin/ranges/ClosedRange;S)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54917c.  v0:= "<this>" @kind object;
  #L549180.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549186.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54918c.  v2:= temp @kind object;
  #L54918e.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549194.  v1:= temp;
  #L549196.  return v1;
}
procedure `boolean` `longRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `byte` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.longRangeContains:(Lkotlin/ranges/ClosedRange;B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5491a8.  v0:= "<this>" @kind object;
  #L5491ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5491b2.  v0:= (`long`) v3 @kind i2l;
  #L5491b4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L5491ba.  v3:= temp @kind object;
  #L5491bc.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5491c2.  v2:= temp;
  #L5491c4.  return v2;
}
procedure `boolean` `longRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `double` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.longRangeContains:(Lkotlin/ranges/ClosedRange;D)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5491d8.  v0:= "<this>" @kind object;
  #L5491dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5491e2.  call temp:= `toLongExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toLongExactOrNull:(D)Ljava/lang/Long;` @kind static;
  #L5491e8.  v2:= temp @kind object;
  #L5491ea.  if v2 == 0 then goto L5491f8;
  #L5491ee.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5491f4.  v1:= temp;
  #L5491f6.  goto L5491fa;
  #L5491f8.  v1:= 0I;
  #L5491fa.  return v1;
}
procedure `boolean` `longRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.longRangeContains:(Lkotlin/ranges/ClosedRange;F)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54920c.  v0:= "<this>" @kind object;
  #L549210.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549216.  call temp:= `toLongExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toLongExactOrNull:(F)Ljava/lang/Long;` @kind static;
  #L54921c.  v2:= temp @kind object;
  #L54921e.  if v2 == 0 then goto L54922c;
  #L549222.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549228.  v1:= temp;
  #L54922a.  goto L54922e;
  #L54922c.  v1:= 0I;
  #L54922e.  return v1;
}
procedure `boolean` `longRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `int` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.longRangeContains:(Lkotlin/ranges/ClosedRange;I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549240.  v0:= "<this>" @kind object;
  #L549244.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54924a.  v0:= (`long`) v3 @kind i2l;
  #L54924c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L549252.  v3:= temp @kind object;
  #L549254.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54925a.  v2:= temp;
  #L54925c.  return v2;
}
procedure `boolean` `longRangeContains`(`kotlin.ranges.ClosedRange` v2 @kind object, `short` v3 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.longRangeContains:(Lkotlin/ranges/ClosedRange;S)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549270.  v0:= "<this>" @kind object;
  #L549274.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54927a.  v0:= (`long`) v3 @kind i2l;
  #L54927c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L549282.  v3:= temp @kind object;
  #L549284.  call temp:= `contains`(v2, v3) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L54928a.  v2:= temp;
  #L54928c.  return v2;
}
procedure `char` `random`(`kotlin.ranges.CharRange` v1 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/CharRange;)C` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54943c.  v0:= "<this>" @kind object;
  #L549440.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549446.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L54944a.  call temp:= `random`(v1, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/CharRange;Lkotlin/random/Random;)C` @kind static;
  #L549450.  v1:= temp;
  #L549452.  return v1;
}
procedure `char` `random`(`kotlin.ranges.CharRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/CharRange;Lkotlin/random/Random;)C` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549464.  v0:= "<this>" @kind object;
  #L549468.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54946e.  v0:= "random" @kind object;
  #L549472.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549478.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @kind virtual;
  #L54947e.  v0:= temp;
  #L549480.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @kind virtual;
  #L549486.  v1:= temp;
  #L549488.  v1:= v1 + 1;
  #L54948c.  call temp:= `nextInt`(v2, v0, v1) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L549492.  v1:= temp;
  #L549494.  v1:= (`char`) v1 @kind i2c;
  #L549496.  return v1;
  #L549498.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L54949a.  v2:= new `java.util.NoSuchElementException`;
  #L54949e.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L5494a4.  v1:= temp @kind object;
  #L5494a6.  call `<init>`(v2, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5494ac.  throw v2;
  catch `java.lang.IllegalArgumentException` @[L549478..L549494] goto L549498;
}
procedure `int` `random`(`kotlin.ranges.IntRange` v1 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/IntRange;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L5497b0.  v0:= "<this>" @kind object;
  #L5497b4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5497ba.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L5497be.  call temp:= `random`(v1, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/IntRange;Lkotlin/random/Random;)I` @kind static;
  #L5497c4.  v1:= temp;
  #L5497c6.  return v1;
}
procedure `int` `random`(`kotlin.ranges.IntRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/IntRange;Lkotlin/random/Random;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5497d8.  v0:= "<this>" @kind object;
  #L5497dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5497e2.  v0:= "random" @kind object;
  #L5497e6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5497ec.  call temp:= `nextInt`(v2, v1) @signature `Lkotlin/random/RandomKt;.nextInt:(Lkotlin/random/Random;Lkotlin/ranges/IntRange;)I` @kind static;
  #L5497f2.  v1:= temp;
  #L5497f4.  return v1;
  #L5497f6.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L5497f8.  v2:= new `java.util.NoSuchElementException`;
  #L5497fc.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L549802.  v1:= temp @kind object;
  #L549804.  call `<init>`(v2, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54980a.  throw v2;
  catch `java.lang.IllegalArgumentException` @[L5497ec..L5497f4] goto L5497f6;
}
procedure `long` `random`(`kotlin.ranges.LongRange` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/LongRange;)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54a8cc.  v0:= "<this>" @kind object;
  #L54a8d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a8d6.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L54a8da.  call temp:= `random`(v2, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/LongRange;Lkotlin/random/Random;)J` @kind static;
  #L54a8e0.  v0:= temp @kind wide;
  #L54a8e2.  return v0 @kind wide;
}
procedure `long` `random`(`kotlin.ranges.LongRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.random:(Lkotlin/ranges/LongRange;Lkotlin/random/Random;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a8f4.  v0:= "<this>" @kind object;
  #L54a8f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a8fe.  v0:= "random" @kind object;
  #L54a902.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a908.  call temp:= `nextLong`(v2, v1) @signature `Lkotlin/random/RandomKt;.nextLong:(Lkotlin/random/Random;Lkotlin/ranges/LongRange;)J` @kind static;
  #L54a90e.  v1:= temp @kind wide;
  #L54a910.  return v1 @kind wide;
  #L54a912.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L54a914.  v2:= new `java.util.NoSuchElementException`;
  #L54a918.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L54a91e.  v1:= temp @kind object;
  #L54a920.  call `<init>`(v2, v1) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54a926.  throw v2;
  catch `java.lang.IllegalArgumentException` @[L54a908..L54a910] goto L54a912;
}
procedure `java.lang.Character` `randomOrNull`(`kotlin.ranges.CharRange` v1 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/CharRange;)Ljava/lang/Character;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54996c.  v0:= "<this>" @kind object;
  #L549970.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549976.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L54997a.  call temp:= `randomOrNull`(v1, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/CharRange;Lkotlin/random/Random;)Ljava/lang/Character;` @kind static;
  #L549980.  v1:= temp @kind object;
  #L549982.  return v1 @kind object;
}
procedure `java.lang.Character` `randomOrNull`(`kotlin.ranges.CharRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/CharRange;Lkotlin/random/Random;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549994.  v0:= "<this>" @kind object;
  #L549998.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54999e.  v0:= "random" @kind object;
  #L5499a2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5499a8.  call temp:= `isEmpty`(v1) @signature `Lkotlin/ranges/CharRange;.isEmpty:()Z` @kind virtual;
  #L5499ae.  v0:= temp;
  #L5499b0.  if v0 == 0 then goto L5499b8;
  #L5499b4.  v1:= 0I;
  #L5499b6.  return v1 @kind object;
  #L5499b8.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @kind virtual;
  #L5499be.  v0:= temp;
  #L5499c0.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @kind virtual;
  #L5499c6.  v1:= temp;
  #L5499c8.  v1:= v1 + 1;
  #L5499cc.  call temp:= `nextInt`(v2, v0, v1) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L5499d2.  v1:= temp;
  #L5499d4.  v1:= (`char`) v1 @kind i2c;
  #L5499d6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L5499dc.  v1:= temp @kind object;
  #L5499de.  return v1 @kind object;
}
procedure `java.lang.Integer` `randomOrNull`(`kotlin.ranges.IntRange` v1 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/IntRange;)Ljava/lang/Integer;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L549c98.  v0:= "<this>" @kind object;
  #L549c9c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549ca2.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L549ca6.  call temp:= `randomOrNull`(v1, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/IntRange;Lkotlin/random/Random;)Ljava/lang/Integer;` @kind static;
  #L549cac.  v1:= temp @kind object;
  #L549cae.  return v1 @kind object;
}
procedure `java.lang.Integer` `randomOrNull`(`kotlin.ranges.IntRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/IntRange;Lkotlin/random/Random;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549cc0.  v0:= "<this>" @kind object;
  #L549cc4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549cca.  v0:= "random" @kind object;
  #L549cce.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549cd4.  call temp:= `isEmpty`(v1) @signature `Lkotlin/ranges/IntRange;.isEmpty:()Z` @kind virtual;
  #L549cda.  v0:= temp;
  #L549cdc.  if v0 == 0 then goto L549ce4;
  #L549ce0.  v1:= 0I;
  #L549ce2.  return v1 @kind object;
  #L549ce4.  call temp:= `nextInt`(v2, v1) @signature `Lkotlin/random/RandomKt;.nextInt:(Lkotlin/random/Random;Lkotlin/ranges/IntRange;)I` @kind static;
  #L549cea.  v1:= temp;
  #L549cec.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L549cf2.  v1:= temp @kind object;
  #L549cf4.  return v1 @kind object;
}
procedure `java.lang.Long` `randomOrNull`(`kotlin.ranges.LongRange` v1 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/LongRange;)Ljava/lang/Long;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L549dd4.  v0:= "<this>" @kind object;
  #L549dd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549dde.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L549de2.  call temp:= `randomOrNull`(v1, v0) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/LongRange;Lkotlin/random/Random;)Ljava/lang/Long;` @kind static;
  #L549de8.  v1:= temp @kind object;
  #L549dea.  return v1 @kind object;
}
procedure `java.lang.Long` `randomOrNull`(`kotlin.ranges.LongRange` v1 @kind object, `kotlin.random.Random` v2 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.randomOrNull:(Lkotlin/ranges/LongRange;Lkotlin/random/Random;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549dfc.  v0:= "<this>" @kind object;
  #L549e00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549e06.  v0:= "random" @kind object;
  #L549e0a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549e10.  call temp:= `isEmpty`(v1) @signature `Lkotlin/ranges/LongRange;.isEmpty:()Z` @kind virtual;
  #L549e16.  v0:= temp;
  #L549e18.  if v0 == 0 then goto L549e20;
  #L549e1c.  v1:= 0I;
  #L549e1e.  return v1 @kind object;
  #L549e20.  call temp:= `nextLong`(v2, v1) @signature `Lkotlin/random/RandomKt;.nextLong:(Lkotlin/random/Random;Lkotlin/ranges/LongRange;)J` @kind static;
  #L549e26.  v1:= temp @kind wide;
  #L549e28.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L549e2e.  v1:= temp @kind object;
  #L549e30.  return v1 @kind object;
}
procedure `kotlin.ranges.CharProgression` `reversed`(`kotlin.ranges.CharProgression` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.reversed:(Lkotlin/ranges/CharProgression;)Lkotlin/ranges/CharProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L549fec.  v0:= "<this>" @kind object;
  #L549ff0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549ff6.  v0:= `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` @kind object;
  #L549ffa.  call temp:= `getLast`(v3) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @kind virtual;
  #L54a000.  v1:= temp;
  #L54a002.  call temp:= `getFirst`(v3) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @kind virtual;
  #L54a008.  v2:= temp;
  #L54a00a.  call temp:= `getStep`(v3) @signature `Lkotlin/ranges/CharProgression;.getStep:()I` @kind virtual;
  #L54a010.  v3:= temp;
  #L54a012.  v3:= -v3 @kind int;
  #L54a014.  call temp:= `fromClosedRange`(v0, v1, v2, v3) @signature `Lkotlin/ranges/CharProgression$Companion;.fromClosedRange:(CCI)Lkotlin/ranges/CharProgression;` @kind virtual;
  #L54a01a.  v3:= temp @kind object;
  #L54a01c.  return v3 @kind object;
}
procedure `kotlin.ranges.IntProgression` `reversed`(`kotlin.ranges.IntProgression` v3 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.reversed:(Lkotlin/ranges/IntProgression;)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54a1f0.  v0:= "<this>" @kind object;
  #L54a1f4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a1fa.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a1fe.  call temp:= `getLast`(v3) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L54a204.  v1:= temp;
  #L54a206.  call temp:= `getFirst`(v3) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L54a20c.  v2:= temp;
  #L54a20e.  call temp:= `getStep`(v3) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L54a214.  v3:= temp;
  #L54a216.  v3:= -v3 @kind int;
  #L54a218.  call temp:= `fromClosedRange`(v0, v1, v2, v3) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a21e.  v3:= temp @kind object;
  #L54a220.  return v3 @kind object;
}
procedure `kotlin.ranges.LongProgression` `reversed`(`kotlin.ranges.LongProgression` v8 @kind object) @signature `Lkotlin/ranges/RangesKt___RangesKt;.reversed:(Lkotlin/ranges/LongProgression;)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L54a514.  v0:= "<this>" @kind object;
  #L54a518.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a51e.  v1:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a522.  call temp:= `getLast`(v8) @signature `Lkotlin/ranges/LongProgression;.getLast:()J` @kind virtual;
  #L54a528.  v2:= temp @kind wide;
  #L54a52a.  call temp:= `getFirst`(v8) @signature `Lkotlin/ranges/LongProgression;.getFirst:()J` @kind virtual;
  #L54a530.  v4:= temp @kind wide;
  #L54a532.  call temp:= `getStep`(v8) @signature `Lkotlin/ranges/LongProgression;.getStep:()J` @kind virtual;
  #L54a538.  v6:= temp @kind wide;
  #L54a53a.  v6:= -v6 @kind long;
  #L54a53c.  call temp:= `fromClosedRange`(v1, v2, v4, v6) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a542.  v8:= temp @kind object;
  #L54a544.  return v8 @kind object;
}
procedure `boolean` `shortRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.shortRangeContains:(Lkotlin/ranges/ClosedRange;B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L5492a0.  v0:= "<this>" @kind object;
  #L5492a4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5492aa.  v2:= (`short`) v2 @kind i2s;
  #L5492ac.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L5492b2.  v2:= temp @kind object;
  #L5492b4.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5492ba.  v1:= temp;
  #L5492bc.  return v1;
}
procedure `boolean` `shortRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `double` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.shortRangeContains:(Lkotlin/ranges/ClosedRange;D)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L5492d0.  v0:= "<this>" @kind object;
  #L5492d4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L5492da.  call temp:= `toShortExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(D)Ljava/lang/Short;` @kind static;
  #L5492e0.  v2:= temp @kind object;
  #L5492e2.  if v2 == 0 then goto L5492f0;
  #L5492e6.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L5492ec.  v1:= temp;
  #L5492ee.  goto L5492f2;
  #L5492f0.  v1:= 0I;
  #L5492f2.  return v1;
}
procedure `boolean` `shortRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.shortRangeContains:(Lkotlin/ranges/ClosedRange;F)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L549304.  v0:= "<this>" @kind object;
  #L549308.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54930e.  call temp:= `toShortExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(F)Ljava/lang/Short;` @kind static;
  #L549314.  v2:= temp @kind object;
  #L549316.  if v2 == 0 then goto L549324;
  #L54931a.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549320.  v1:= temp;
  #L549322.  goto L549326;
  #L549324.  v1:= 0I;
  #L549326.  return v1;
}
procedure `boolean` `shortRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.shortRangeContains:(Lkotlin/ranges/ClosedRange;I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L549338.  v0:= "<this>" @kind object;
  #L54933c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549342.  call temp:= `toShortExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(I)Ljava/lang/Short;` @kind static;
  #L549348.  v2:= temp @kind object;
  #L54934a.  if v2 == 0 then goto L549358;
  #L54934e.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549354.  v1:= temp;
  #L549356.  goto L54935a;
  #L549358.  v1:= 0I;
  #L54935a.  return v1;
}
procedure `boolean` `shortRangeContains`(`kotlin.ranges.ClosedRange` v1 @kind object, `long` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.shortRangeContains:(Lkotlin/ranges/ClosedRange;J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54936c.  v0:= "<this>" @kind object;
  #L549370.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L549376.  call temp:= `toShortExactOrNull`(v2) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(J)Ljava/lang/Short;` @kind static;
  #L54937c.  v2:= temp @kind object;
  #L54937e.  if v2 == 0 then goto L54938c;
  #L549382.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L549388.  v1:= temp;
  #L54938a.  goto L54938e;
  #L54938c.  v1:= 0I;
  #L54938e.  return v1;
}
procedure `kotlin.ranges.CharProgression` `step`(`kotlin.ranges.CharProgression` v3 @kind object, `int` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.step:(Lkotlin/ranges/CharProgression;I)Lkotlin/ranges/CharProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54a030.  v0:= "<this>" @kind object;
  #L54a034.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a03a.  if v4 <= 0 then goto L54a042;
  #L54a03e.  v0:= 1I;
  #L54a040.  goto L54a044;
  #L54a042.  v0:= 0I;
  #L54a044.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54a04a.  v1:= temp @kind object;
  #L54a04c.  call `checkStepIsPositive`(v0, v1) @signature `Lkotlin/ranges/RangesKt__RangesKt;.checkStepIsPositive:(ZLjava/lang/Number;)V` @kind static;
  #L54a052.  v0:= `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` @kind object;
  #L54a056.  call temp:= `getFirst`(v3) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @kind virtual;
  #L54a05c.  v1:= temp;
  #L54a05e.  call temp:= `getLast`(v3) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @kind virtual;
  #L54a064.  v2:= temp;
  #L54a066.  call temp:= `getStep`(v3) @signature `Lkotlin/ranges/CharProgression;.getStep:()I` @kind virtual;
  #L54a06c.  v3:= temp;
  #L54a06e.  if v3 <= 0 then goto L54a074;
  #L54a072.  goto L54a076;
  #L54a074.  v4:= -v4 @kind int;
  #L54a076.  call temp:= `fromClosedRange`(v0, v1, v2, v4) @signature `Lkotlin/ranges/CharProgression$Companion;.fromClosedRange:(CCI)Lkotlin/ranges/CharProgression;` @kind virtual;
  #L54a07c.  v3:= temp @kind object;
  #L54a07e.  return v3 @kind object;
}
procedure `kotlin.ranges.IntProgression` `step`(`kotlin.ranges.IntProgression` v3 @kind object, `int` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L54a234.  v0:= "<this>" @kind object;
  #L54a238.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a23e.  if v4 <= 0 then goto L54a246;
  #L54a242.  v0:= 1I;
  #L54a244.  goto L54a248;
  #L54a246.  v0:= 0I;
  #L54a248.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54a24e.  v1:= temp @kind object;
  #L54a250.  call `checkStepIsPositive`(v0, v1) @signature `Lkotlin/ranges/RangesKt__RangesKt;.checkStepIsPositive:(ZLjava/lang/Number;)V` @kind static;
  #L54a256.  v0:= `@@kotlin.ranges.IntProgression.Companion` @type ^`kotlin.ranges.IntProgression$Companion` @kind object;
  #L54a25a.  call temp:= `getFirst`(v3) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L54a260.  v1:= temp;
  #L54a262.  call temp:= `getLast`(v3) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L54a268.  v2:= temp;
  #L54a26a.  call temp:= `getStep`(v3) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L54a270.  v3:= temp;
  #L54a272.  if v3 <= 0 then goto L54a278;
  #L54a276.  goto L54a27a;
  #L54a278.  v4:= -v4 @kind int;
  #L54a27a.  call temp:= `fromClosedRange`(v0, v1, v2, v4) @signature `Lkotlin/ranges/IntProgression$Companion;.fromClosedRange:(III)Lkotlin/ranges/IntProgression;` @kind virtual;
  #L54a280.  v3:= temp @kind object;
  #L54a282.  return v3 @kind object;
}
procedure `kotlin.ranges.LongProgression` `step`(`kotlin.ranges.LongProgression` v11 @kind object, `long` v12 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.step:(Lkotlin/ranges/LongProgression;J)Lkotlin/ranges/LongProgression;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L54a558.  v0:= "<this>" @kind object;
  #L54a55c.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54a562.  v0:= 0L;
  #L54a566.  v2:= lcmp(v12, v0);
  #L54a56a.  if v2 <= 0 then goto L54a572;
  #L54a56e.  v2:= 1I;
  #L54a570.  goto L54a574;
  #L54a572.  v2:= 0I;
  #L54a574.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L54a57a.  v3:= temp @kind object;
  #L54a57c.  call `checkStepIsPositive`(v2, v3) @signature `Lkotlin/ranges/RangesKt__RangesKt;.checkStepIsPositive:(ZLjava/lang/Number;)V` @kind static;
  #L54a582.  v4:= `@@kotlin.ranges.LongProgression.Companion` @type ^`kotlin.ranges.LongProgression$Companion` @kind object;
  #L54a586.  call temp:= `getFirst`(v11) @signature `Lkotlin/ranges/LongProgression;.getFirst:()J` @kind virtual;
  #L54a58c.  v5:= temp @kind wide;
  #L54a58e.  call temp:= `getLast`(v11) @signature `Lkotlin/ranges/LongProgression;.getLast:()J` @kind virtual;
  #L54a594.  v7:= temp @kind wide;
  #L54a596.  call temp:= `getStep`(v11) @signature `Lkotlin/ranges/LongProgression;.getStep:()J` @kind virtual;
  #L54a59c.  v2:= temp @kind wide;
  #L54a59e.  v11:= lcmp(v2, v0);
  #L54a5a2.  if v11 <= 0 then goto L54a5a8;
  #L54a5a6.  goto L54a5aa;
  #L54a5a8.  v12:= -v12 @kind long;
  #L54a5aa.  v9:= v12 @kind wide;
  #L54a5ac.  call temp:= `fromClosedRange`(v4, v5, v7, v9) @signature `Lkotlin/ranges/LongProgression$Companion;.fromClosedRange:(JJJ)Lkotlin/ranges/LongProgression;` @kind virtual;
  #L54a5b2.  v11:= temp @kind object;
  #L54a5b4.  return v11 @kind object;
}
procedure `java.lang.Byte` `toByteExactOrNull`(`double` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(D)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54982c.  v0:= 0I;
  #L54982e.  v1:= 127.0D;
  #L549838.  v3:= dcmpg(v4, v1);
  #L54983c.  if v3 > 0 then goto L54984e;
  #L549840.  v1:= -128.0D;
  #L549844.  v3:= dcmpg(v1, v4);
  #L549848.  if v3 > 0 then goto L54984e;
  #L54984c.  v0:= 1I;
  #L54984e.  if v0 == 0 then goto L549860;
  #L549852.  v4:= (`int`) v4 @kind d2i;
  #L549854.  v4:= (`byte`) v4 @kind i2b;
  #L549856.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L54985c.  v4:= temp @kind object;
  #L54985e.  goto L549862;
  #L549860.  v4:= 0I;
  #L549862.  return v4 @kind object;
}
procedure `java.lang.Byte` `toByteExactOrNull`(`float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(F)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549874.  v0:= 0I;
  #L549876.  v1:= 127.0F;
  #L54987a.  v1:= fcmpg(v2, v1);
  #L54987e.  if v1 > 0 then goto L549890;
  #L549882.  v1:= -128.0F;
  #L549886.  v1:= fcmpg(v1, v2);
  #L54988a.  if v1 > 0 then goto L549890;
  #L54988e.  v0:= 1I;
  #L549890.  if v0 == 0 then goto L5498a2;
  #L549894.  v2:= (`int`) v2 @kind f2i;
  #L549896.  v2:= (`byte`) v2 @kind i2b;
  #L549898.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L54989e.  v2:= temp @kind object;
  #L5498a0.  goto L5498a4;
  #L5498a2.  v2:= 0I;
  #L5498a4.  return v2 @kind object;
}
procedure `java.lang.Byte` `toByteExactOrNull`(`int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(I)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L5498b8.  v0:= 0I;
  #L5498ba.  v1:= 127I;
  #L5498be.  if v2 > v1 then goto L5498cc;
  #L5498c2.  v1:= -128I;
  #L5498c6.  if v1 > v2 then goto L5498cc;
  #L5498ca.  v0:= 1I;
  #L5498cc.  if v0 == 0 then goto L5498dc;
  #L5498d0.  v2:= (`byte`) v2 @kind i2b;
  #L5498d2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L5498d8.  v2:= temp @kind object;
  #L5498da.  goto L5498de;
  #L5498dc.  v2:= 0I;
  #L5498de.  return v2 @kind object;
}
procedure `java.lang.Byte` `toByteExactOrNull`(`long` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(J)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5498f0.  v0:= 0I;
  #L5498f2.  v1:= 127L;
  #L5498f6.  v3:= lcmp(v4, v1);
  #L5498fa.  if v3 > 0 then goto L54990c;
  #L5498fe.  v1:= -128L;
  #L549902.  v3:= lcmp(v1, v4);
  #L549906.  if v3 > 0 then goto L54990c;
  #L54990a.  v0:= 1I;
  #L54990c.  if v0 == 0 then goto L54991e;
  #L549910.  v5:= (`int`) v4 @kind l2i;
  #L549912.  v4:= (`byte`) v5 @kind i2b;
  #L549914.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L54991a.  v4:= temp @kind object;
  #L54991c.  goto L549920;
  #L54991e.  v4:= 0I;
  #L549920.  return v4 @kind object;
}
procedure `java.lang.Byte` `toByteExactOrNull`(`short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toByteExactOrNull:(S)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549934.  v0:= 0I;
  #L549936.  v1:= -128I;
  #L54993a.  if v1 > v2 then goto L549948;
  #L54993e.  v1:= 127I;
  #L549942.  if v2 > v1 then goto L549948;
  #L549946.  v0:= 1I;
  #L549948.  if v0 == 0 then goto L549958;
  #L54994c.  v2:= (`byte`) v2 @kind i2b;
  #L54994e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L549954.  v2:= temp @kind object;
  #L549956.  goto L54995a;
  #L549958.  v2:= 0I;
  #L54995a.  return v2 @kind object;
}
procedure `java.lang.Integer` `toIntExactOrNull`(`double` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(D)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L549d08.  v0:= 0I;
  #L549d0a.  v1:= 2.147483647E9D;
  #L549d14.  v3:= dcmpg(v4, v1);
  #L549d18.  if v3 > 0 then goto L549d2a;
  #L549d1c.  v1:= -2.147483648E9D;
  #L549d20.  v3:= dcmpg(v1, v4);
  #L549d24.  if v3 > 0 then goto L549d2a;
  #L549d28.  v0:= 1I;
  #L549d2a.  if v0 == 0 then goto L549d3a;
  #L549d2e.  v4:= (`int`) v4 @kind d2i;
  #L549d30.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L549d36.  v4:= temp @kind object;
  #L549d38.  goto L549d3c;
  #L549d3a.  v4:= 0I;
  #L549d3c.  return v4 @kind object;
}
procedure `java.lang.Integer` `toIntExactOrNull`(`float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(F)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549d50.  v0:= 0I;
  #L549d52.  v1:= 1325400064I;
  #L549d56.  v1:= fcmpg(v2, v1);
  #L549d5a.  if v1 > 0 then goto L549d6c;
  #L549d5e.  v1:= -822083584I;
  #L549d62.  v1:= fcmpg(v1, v2);
  #L549d66.  if v1 > 0 then goto L549d6c;
  #L549d6a.  v0:= 1I;
  #L549d6c.  if v0 == 0 then goto L549d7c;
  #L549d70.  v2:= (`int`) v2 @kind f2i;
  #L549d72.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L549d78.  v2:= temp @kind object;
  #L549d7a.  goto L549d7e;
  #L549d7c.  v2:= 0I;
  #L549d7e.  return v2 @kind object;
}
procedure `java.lang.Integer` `toIntExactOrNull`(`long` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toIntExactOrNull:(J)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L549d90.  v0:= 0I;
  #L549d92.  v1:= 2147483647L;
  #L549d98.  v3:= lcmp(v4, v1);
  #L549d9c.  if v3 > 0 then goto L549db0;
  #L549da0.  v1:= -2147483648L;
  #L549da6.  v3:= lcmp(v1, v4);
  #L549daa.  if v3 > 0 then goto L549db0;
  #L549dae.  v0:= 1I;
  #L549db0.  if v0 == 0 then goto L549dc0;
  #L549db4.  v5:= (`int`) v4 @kind l2i;
  #L549db6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L549dbc.  v4:= temp @kind object;
  #L549dbe.  goto L549dc2;
  #L549dc0.  v4:= 0I;
  #L549dc2.  return v4 @kind object;
}
procedure `java.lang.Long` `toLongExactOrNull`(`double` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toLongExactOrNull:(D)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L549e44.  v0:= 0I;
  #L549e46.  v1:= 9.223372036854776E18D;
  #L549e4a.  v3:= dcmpg(v4, v1);
  #L549e4e.  if v3 > 0 then goto L549e60;
  #L549e52.  v1:= -9.223372036854776E18D;
  #L549e56.  v3:= dcmpg(v1, v4);
  #L549e5a.  if v3 > 0 then goto L549e60;
  #L549e5e.  v0:= 1I;
  #L549e60.  if v0 == 0 then goto L549e70;
  #L549e64.  v4:= (`long`) v4 @kind d2l;
  #L549e66.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L549e6c.  v4:= temp @kind object;
  #L549e6e.  goto L549e72;
  #L549e70.  v4:= 0I;
  #L549e72.  return v4 @kind object;
}
procedure `java.lang.Long` `toLongExactOrNull`(`float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toLongExactOrNull:(F)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549e84.  v0:= 0I;
  #L549e86.  v1:= 1593835520I;
  #L549e8a.  v1:= fcmpg(v2, v1);
  #L549e8e.  if v1 > 0 then goto L549ea0;
  #L549e92.  v1:= -553648128I;
  #L549e96.  v1:= fcmpg(v1, v2);
  #L549e9a.  if v1 > 0 then goto L549ea0;
  #L549e9e.  v0:= 1I;
  #L549ea0.  if v0 == 0 then goto L549eb0;
  #L549ea4.  v0:= (`long`) v2 @kind f2l;
  #L549ea6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L549eac.  v2:= temp @kind object;
  #L549eae.  goto L549eb2;
  #L549eb0.  v2:= 0I;
  #L549eb2.  return v2 @kind object;
}
procedure `java.lang.Short` `toShortExactOrNull`(`double` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(D)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L549ec4.  v0:= 0I;
  #L549ec6.  v1:= 32767.0D;
  #L549ed0.  v3:= dcmpg(v4, v1);
  #L549ed4.  if v3 > 0 then goto L549ee6;
  #L549ed8.  v1:= -32768.0D;
  #L549edc.  v3:= dcmpg(v1, v4);
  #L549ee0.  if v3 > 0 then goto L549ee6;
  #L549ee4.  v0:= 1I;
  #L549ee6.  if v0 == 0 then goto L549ef8;
  #L549eea.  v4:= (`int`) v4 @kind d2i;
  #L549eec.  v4:= (`short`) v4 @kind i2s;
  #L549eee.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L549ef4.  v4:= temp @kind object;
  #L549ef6.  goto L549efa;
  #L549ef8.  v4:= 0I;
  #L549efa.  return v4 @kind object;
}
procedure `java.lang.Short` `toShortExactOrNull`(`float` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(F)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549f0c.  v0:= 0I;
  #L549f0e.  v1:= 1191181824I;
  #L549f14.  v1:= fcmpg(v2, v1);
  #L549f18.  if v1 > 0 then goto L549f2a;
  #L549f1c.  v1:= -32768.0F;
  #L549f20.  v1:= fcmpg(v1, v2);
  #L549f24.  if v1 > 0 then goto L549f2a;
  #L549f28.  v0:= 1I;
  #L549f2a.  if v0 == 0 then goto L549f3c;
  #L549f2e.  v2:= (`int`) v2 @kind f2i;
  #L549f30.  v2:= (`short`) v2 @kind i2s;
  #L549f32.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L549f38.  v2:= temp @kind object;
  #L549f3a.  goto L549f3e;
  #L549f3c.  v2:= 0I;
  #L549f3e.  return v2 @kind object;
}
procedure `java.lang.Short` `toShortExactOrNull`(`int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(I)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L549f50.  v0:= 0I;
  #L549f52.  v1:= 32767I;
  #L549f56.  if v2 > v1 then goto L549f64;
  #L549f5a.  v1:= -32768I;
  #L549f5e.  if v1 > v2 then goto L549f64;
  #L549f62.  v0:= 1I;
  #L549f64.  if v0 == 0 then goto L549f74;
  #L549f68.  v2:= (`short`) v2 @kind i2s;
  #L549f6a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L549f70.  v2:= temp @kind object;
  #L549f72.  goto L549f76;
  #L549f74.  v2:= 0I;
  #L549f76.  return v2 @kind object;
}
procedure `java.lang.Short` `toShortExactOrNull`(`long` v4 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.toShortExactOrNull:(J)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L549f88.  v0:= 0I;
  #L549f8a.  v1:= 32767L;
  #L549f8e.  v3:= lcmp(v4, v1);
  #L549f92.  if v3 > 0 then goto L549fa4;
  #L549f96.  v1:= -32768L;
  #L549f9a.  v3:= lcmp(v1, v4);
  #L549f9e.  if v3 > 0 then goto L549fa4;
  #L549fa2.  v0:= 1I;
  #L549fa4.  if v0 == 0 then goto L549fb6;
  #L549fa8.  v5:= (`int`) v4 @kind l2i;
  #L549faa.  v4:= (`short`) v5 @kind i2s;
  #L549fac.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L549fb2.  v4:= temp @kind object;
  #L549fb4.  goto L549fb8;
  #L549fb6.  v4:= 0I;
  #L549fb8.  return v4 @kind object;
}
procedure `kotlin.ranges.CharRange` `until`(`char` v1 , `char` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(CC)Lkotlin/ranges/CharRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a090.  v0:= 0I;
  #L54a092.  call temp:= `compare`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L54a098.  v0:= temp;
  #L54a09a.  if v0 > 0 then goto L54a0ac;
  #L54a09e.  v1:= `@@kotlin.ranges.CharRange.Companion` @type ^`kotlin.ranges.CharRange$Companion` @kind object;
  #L54a0a2.  call temp:= `getEMPTY`(v1) @signature `Lkotlin/ranges/CharRange$Companion;.getEMPTY:()Lkotlin/ranges/CharRange;` @kind virtual;
  #L54a0a8.  v1:= temp @kind object;
  #L54a0aa.  return v1 @kind object;
  #L54a0ac.  v0:= new `kotlin.ranges.CharRange`;
  #L54a0b0.  v2:= v2 + -1;
  #L54a0b4.  v2:= (`char`) v2 @kind i2c;
  #L54a0b6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/CharRange;.<init>:(CC)V` @kind direct;
  #L54a0bc.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`byte` v1 , `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(BB)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a294.  v0:= new `kotlin.ranges.IntRange`;
  #L54a298.  v2:= v2 + -1;
  #L54a29c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a2a2.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`byte` v1 , `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(BI)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a2b4.  v0:= -2147483648I;
  #L54a2b8.  if v2 > v0 then goto L54a2ca;
  #L54a2bc.  v1:= `@@kotlin.ranges.IntRange.Companion` @type ^`kotlin.ranges.IntRange$Companion` @kind object;
  #L54a2c0.  call temp:= `getEMPTY`(v1) @signature `Lkotlin/ranges/IntRange$Companion;.getEMPTY:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L54a2c6.  v1:= temp @kind object;
  #L54a2c8.  return v1 @kind object;
  #L54a2ca.  v0:= new `kotlin.ranges.IntRange`;
  #L54a2ce.  v2:= v2 + -1;
  #L54a2d2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a2d8.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`byte` v1 , `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(BS)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a2ec.  v0:= new `kotlin.ranges.IntRange`;
  #L54a2f0.  v2:= v2 + -1;
  #L54a2f4.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a2fa.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`int` v1 , `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(IB)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a30c.  v0:= new `kotlin.ranges.IntRange`;
  #L54a310.  v2:= v2 + -1;
  #L54a314.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a31a.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`int` v1 , `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54a32c.  v0:= -2147483648I;
  #L54a330.  if v2 > v0 then goto L54a342;
  #L54a334.  v1:= `@@kotlin.ranges.IntRange.Companion` @type ^`kotlin.ranges.IntRange$Companion` @kind object;
  #L54a338.  call temp:= `getEMPTY`(v1) @signature `Lkotlin/ranges/IntRange$Companion;.getEMPTY:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L54a33e.  v1:= temp @kind object;
  #L54a340.  return v1 @kind object;
  #L54a342.  v0:= new `kotlin.ranges.IntRange`;
  #L54a346.  v2:= v2 + -1;
  #L54a34a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a350.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`int` v1 , `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(IS)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a364.  v0:= new `kotlin.ranges.IntRange`;
  #L54a368.  v2:= v2 + -1;
  #L54a36c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a372.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`short` v1 , `byte` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(SB)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a384.  v0:= new `kotlin.ranges.IntRange`;
  #L54a388.  v2:= v2 + -1;
  #L54a38c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a392.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`short` v1 , `int` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(SI)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a3a4.  v0:= -2147483648I;
  #L54a3a8.  if v2 > v0 then goto L54a3ba;
  #L54a3ac.  v1:= `@@kotlin.ranges.IntRange.Companion` @type ^`kotlin.ranges.IntRange$Companion` @kind object;
  #L54a3b0.  call temp:= `getEMPTY`(v1) @signature `Lkotlin/ranges/IntRange$Companion;.getEMPTY:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L54a3b6.  v1:= temp @kind object;
  #L54a3b8.  return v1 @kind object;
  #L54a3ba.  v0:= new `kotlin.ranges.IntRange`;
  #L54a3be.  v2:= v2 + -1;
  #L54a3c2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a3c8.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `until`(`short` v1 , `short` v2 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(SS)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54a3dc.  v0:= new `kotlin.ranges.IntRange`;
  #L54a3e0.  v2:= v2 + -1;
  #L54a3e4.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L54a3ea.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`byte` v5 , `long` v6 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(BJ)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a5c8.  v0:= -9223372036854775808L;
  #L54a5cc.  v2:= lcmp(v6, v0);
  #L54a5d0.  if v2 > 0 then goto L54a5e2;
  #L54a5d4.  v5:= `@@kotlin.ranges.LongRange.Companion` @type ^`kotlin.ranges.LongRange$Companion` @kind object;
  #L54a5d8.  call temp:= `getEMPTY`(v5) @signature `Lkotlin/ranges/LongRange$Companion;.getEMPTY:()Lkotlin/ranges/LongRange;` @kind virtual;
  #L54a5de.  v5:= temp @kind object;
  #L54a5e0.  return v5 @kind object;
  #L54a5e2.  v0:= new `kotlin.ranges.LongRange`;
  #L54a5e6.  v1:= (`long`) v5 @kind i2l;
  #L54a5e8.  v3:= 1L;
  #L54a5ec.  v6:= v6 - v3 @kind long;
  #L54a5ee.  call `<init>`(v0, v1, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a5f4.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`int` v5 , `long` v6 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(IJ)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a608.  v0:= -9223372036854775808L;
  #L54a60c.  v2:= lcmp(v6, v0);
  #L54a610.  if v2 > 0 then goto L54a622;
  #L54a614.  v5:= `@@kotlin.ranges.LongRange.Companion` @type ^`kotlin.ranges.LongRange$Companion` @kind object;
  #L54a618.  call temp:= `getEMPTY`(v5) @signature `Lkotlin/ranges/LongRange$Companion;.getEMPTY:()Lkotlin/ranges/LongRange;` @kind virtual;
  #L54a61e.  v5:= temp @kind object;
  #L54a620.  return v5 @kind object;
  #L54a622.  v0:= new `kotlin.ranges.LongRange`;
  #L54a626.  v1:= (`long`) v5 @kind i2l;
  #L54a628.  v3:= 1L;
  #L54a62c.  v6:= v6 - v3 @kind long;
  #L54a62e.  call `<init>`(v0, v1, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a634.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`long` v5 , `byte` v7 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(JB)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a648.  v0:= new `kotlin.ranges.LongRange`;
  #L54a64c.  v1:= (`long`) v7 @kind i2l;
  #L54a64e.  v3:= 1L;
  #L54a652.  v1:= v1 - v3 @kind long;
  #L54a654.  call `<init>`(v0, v5, v1) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a65a.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`long` v5 , `int` v7 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(JI)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a66c.  v0:= new `kotlin.ranges.LongRange`;
  #L54a670.  v1:= (`long`) v7 @kind i2l;
  #L54a672.  v3:= 1L;
  #L54a676.  v1:= v1 - v3 @kind long;
  #L54a678.  call `<init>`(v0, v5, v1) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a67e.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`long` v3 , `long` v5 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(JJ)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54a690.  v0:= -9223372036854775808L;
  #L54a694.  v2:= lcmp(v5, v0);
  #L54a698.  if v2 > 0 then goto L54a6aa;
  #L54a69c.  v3:= `@@kotlin.ranges.LongRange.Companion` @type ^`kotlin.ranges.LongRange$Companion` @kind object;
  #L54a6a0.  call temp:= `getEMPTY`(v3) @signature `Lkotlin/ranges/LongRange$Companion;.getEMPTY:()Lkotlin/ranges/LongRange;` @kind virtual;
  #L54a6a6.  v3:= temp @kind object;
  #L54a6a8.  return v3 @kind object;
  #L54a6aa.  v0:= new `kotlin.ranges.LongRange`;
  #L54a6ae.  v1:= 1L;
  #L54a6b2.  v5:= v5 - v1 @kind long;
  #L54a6b4.  call `<init>`(v0, v3, v5) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a6ba.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`long` v5 , `short` v7 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(JS)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a6cc.  v0:= new `kotlin.ranges.LongRange`;
  #L54a6d0.  v1:= (`long`) v7 @kind i2l;
  #L54a6d2.  v3:= 1L;
  #L54a6d6.  v1:= v1 - v3 @kind long;
  #L54a6d8.  call `<init>`(v0, v5, v1) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a6de.  return v0 @kind object;
}
procedure `kotlin.ranges.LongRange` `until`(`short` v5 , `long` v6 ) @signature `Lkotlin/ranges/RangesKt___RangesKt;.until:(SJ)Lkotlin/ranges/LongRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54a6f0.  v0:= -9223372036854775808L;
  #L54a6f4.  v2:= lcmp(v6, v0);
  #L54a6f8.  if v2 > 0 then goto L54a70a;
  #L54a6fc.  v5:= `@@kotlin.ranges.LongRange.Companion` @type ^`kotlin.ranges.LongRange$Companion` @kind object;
  #L54a700.  call temp:= `getEMPTY`(v5) @signature `Lkotlin/ranges/LongRange$Companion;.getEMPTY:()Lkotlin/ranges/LongRange;` @kind virtual;
  #L54a706.  v5:= temp @kind object;
  #L54a708.  return v5 @kind object;
  #L54a70a.  v0:= new `kotlin.ranges.LongRange`;
  #L54a70e.  v1:= (`long`) v5 @kind i2l;
  #L54a710.  v3:= 1L;
  #L54a714.  v6:= v6 - v3 @kind long;
  #L54a716.  call `<init>`(v0, v1, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L54a71c.  return v0 @kind object;
}
