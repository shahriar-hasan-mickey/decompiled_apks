record `kotlin.ranges.RangesKt__RangesKt` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.ranges.RangesKt__RangesKt` v0 @kind this) @signature `Lkotlin/ranges/RangesKt__RangesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L548cac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L548cb2.  return @kind void;
}
procedure `void` `checkStepIsPositive`(`boolean` v2 , `java.lang.Number` v3 @kind object) @signature `Lkotlin/ranges/RangesKt__RangesKt;.checkStepIsPositive:(ZLjava/lang/Number;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L548cc4.  v0:= "step" @kind object;
  #L548cc8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548cce.  if v2 == 0 then goto L548cd4;
  #L548cd2.  return @kind void;
  #L548cd4.  v2:= new `java.lang.IllegalArgumentException`;
  #L548cd8.  v0:= new `java.lang.StringBuilder`;
  #L548cdc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L548ce2.  v1:= "Step must be positive, was: " @kind object;
  #L548ce6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L548cec.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L548cf2.  v3:= 46I;
  #L548cf6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L548cfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L548d02.  v3:= temp @kind object;
  #L548d04.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L548d0a.  throw v2;
}
procedure `boolean` `contains`(`java.lang.Iterable` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/ranges/RangesKt__RangesKt;.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L548c08.  v0:= "<this>" @kind object;
  #L548c0c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548c12.  if v2 == 0 then goto L548c2e;
  #L548c16.  v1:= (`kotlin.ranges.ClosedRange`) v1 @kind object;
  #L548c1a.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L548c1e.  call temp:= `contains`(v1, v2) @signature `Lkotlin/ranges/ClosedRange;.contains:(Ljava/lang/Comparable;)Z` @kind interface;
  #L548c24.  v1:= temp;
  #L548c26.  if v1 == 0 then goto L548c2e;
  #L548c2a.  v1:= 1I;
  #L548c2c.  goto L548c30;
  #L548c2e.  v1:= 0I;
  #L548c30.  return v1;
}
procedure `kotlin.ranges.ClosedFloatingPointRange` `rangeTo`(`double` v1 , `double` v3 ) @signature `Lkotlin/ranges/RangesKt__RangesKt;.rangeTo:(DD)Lkotlin/ranges/ClosedFloatingPointRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548c44.  v0:= new `kotlin.ranges.ClosedDoubleRange`;
  #L548c48.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/ClosedDoubleRange;.<init>:(DD)V` @kind direct;
  #L548c4e.  return v0 @kind object;
}
procedure `kotlin.ranges.ClosedFloatingPointRange` `rangeTo`(`float` v1 , `float` v2 ) @signature `Lkotlin/ranges/RangesKt__RangesKt;.rangeTo:(FF)Lkotlin/ranges/ClosedFloatingPointRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548c60.  v0:= new `kotlin.ranges.ClosedFloatRange`;
  #L548c64.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/ClosedFloatRange;.<init>:(FF)V` @kind direct;
  #L548c6a.  return v0 @kind object;
}
procedure `kotlin.ranges.ClosedRange` `rangeTo`(`java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lkotlin/ranges/RangesKt__RangesKt;.rangeTo:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lkotlin/ranges/ClosedRange;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L548c7c.  v0:= "<this>" @kind object;
  #L548c80.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548c86.  v0:= "that" @kind object;
  #L548c8a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L548c90.  v0:= new `kotlin.ranges.ComparableRange`;
  #L548c94.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/ComparableRange;.<init>:(Ljava/lang/Comparable;Ljava/lang/Comparable;)V` @kind direct;
  #L548c9a.  return v0 @kind object;
}
