record `kotlin.sequences.SequencesKt__SequencesJVMKt` @kind class @AccessFlag  extends `kotlin.sequences.SequencesKt__SequenceBuilderKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesJVMKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequencesJVMKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54aafc.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.<init>:()V` @kind direct;
  #L54ab02.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Enumeration` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesJVMKt;.asSequence:(Ljava/util/Enumeration;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54aad0.  v0:= "<this>" @kind object;
  #L54aad4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54aada.  call temp:= `iterator`(v1) @signature `Lkotlin/collections/CollectionsKt;.iterator:(Ljava/util/Enumeration;)Ljava/util/Iterator;` @kind static;
  #L54aae0.  v1:= temp @kind object;
  #L54aae2.  call temp:= `asSequence`(v1) @signature `Lkotlin/sequences/SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @kind static;
  #L54aae8.  v1:= temp @kind object;
  #L54aaea.  return v1 @kind object;
}
