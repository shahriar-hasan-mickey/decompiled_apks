record `kotlin.sequences.SequencesKt___SequencesKt` @kind class @AccessFlag  extends `kotlin.sequences.SequencesKt___SequencesJvmKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54f0dc.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesJvmKt;.<init>:()V` @kind direct;
  #L54f0e2.  return @kind void;
}
procedure `boolean` `all`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.all:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b0c8.  v0:= "<this>" @kind object;
  #L54b0cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b0d2.  v0:= "predicate" @kind object;
  #L54b0d6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b0dc.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b0e2.  v1:= temp @kind object;
  #L54b0e4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b0ea.  v0:= temp;
  #L54b0ec.  if v0 == 0 then goto L54b114;
  #L54b0f0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b0f6.  v0:= temp @kind object;
  #L54b0f8.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b0fe.  v0:= temp @kind object;
  #L54b100.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L54b104.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54b10a.  v0:= temp;
  #L54b10c.  if v0 != 0 then goto L54b0e4;
  #L54b110.  v1:= 0I;
  #L54b112.  return v1;
  #L54b114.  v1:= 1I;
  #L54b116.  return v1;
}
procedure `boolean` `any`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.any:(Lkotlin/sequences/Sequence;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b128.  v0:= "<this>" @kind object;
  #L54b12c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b132.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b138.  v1:= temp @kind object;
  #L54b13a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b140.  v1:= temp;
  #L54b142.  return v1;
}
procedure `boolean` `any`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.any:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b154.  v0:= "<this>" @kind object;
  #L54b158.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b15e.  v0:= "predicate" @kind object;
  #L54b162.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b168.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b16e.  v1:= temp @kind object;
  #L54b170.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b176.  v0:= temp;
  #L54b178.  if v0 == 0 then goto L54b1a0;
  #L54b17c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b182.  v0:= temp @kind object;
  #L54b184.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b18a.  v0:= temp @kind object;
  #L54b18c.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L54b190.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54b196.  v0:= temp;
  #L54b198.  if v0 == 0 then goto L54b170;
  #L54b19c.  v1:= 1I;
  #L54b19e.  return v1;
  #L54b1a0.  v1:= 0I;
  #L54b1a2.  return v1;
}
procedure `java.lang.Iterable` `asIterable`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.asIterable:(Lkotlin/sequences/Sequence;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54c684.  v0:= "<this>" @kind object;
  #L54c688.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c68e.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1`;
  #L54c692.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54c698.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.asSequence:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54e3dc.  v0:= "<this>" @kind object;
  #L54e3e0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e3e6.  return v1 @kind object;
}
procedure `java.util.Map` `associate`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associate:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54dd54.  v0:= "<this>" @kind object;
  #L54dd58.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dd5e.  v0:= "transform" @kind object;
  #L54dd62.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dd68.  v0:= new `java.util.LinkedHashMap`;
  #L54dd6c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54dd72.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dd78.  v3:= temp @kind object;
  #L54dd7a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54dd80.  v1:= temp;
  #L54dd82.  if v1 == 0 then goto L54ddb2;
  #L54dd86.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dd8c.  v1:= temp @kind object;
  #L54dd8e.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54dd94.  v1:= temp @kind object;
  #L54dd96.  v1:= (`kotlin.Pair`) v1 @kind object;
  #L54dd9a.  call temp:= `getFirst`(v1) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L54dda0.  v2:= temp @kind object;
  #L54dda2.  call temp:= `getSecond`(v1) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L54dda8.  v1:= temp @kind object;
  #L54ddaa.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ddb0.  goto L54dd7a;
  #L54ddb2.  return v0 @kind object;
}
procedure `java.util.Map` `associateBy`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54ddc4.  v0:= "<this>" @kind object;
  #L54ddc8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ddce.  v0:= "keySelector" @kind object;
  #L54ddd2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ddd8.  v0:= new `java.util.LinkedHashMap`;
  #L54dddc.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54dde2.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dde8.  v3:= temp @kind object;
  #L54ddea.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ddf0.  v1:= temp;
  #L54ddf2.  if v1 == 0 then goto L54de0e;
  #L54ddf6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ddfc.  v1:= temp @kind object;
  #L54ddfe.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54de04.  v2:= temp @kind object;
  #L54de06.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54de0c.  goto L54ddea;
  #L54de0e.  return v0 @kind object;
}
procedure `java.util.Map` `associateBy`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54de20.  v0:= "<this>" @kind object;
  #L54de24.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54de2a.  v0:= "keySelector" @kind object;
  #L54de2e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54de34.  v0:= "valueTransform" @kind object;
  #L54de38.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54de3e.  v0:= new `java.util.LinkedHashMap`;
  #L54de42.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54de48.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54de4e.  v3:= temp @kind object;
  #L54de50.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54de56.  v1:= temp;
  #L54de58.  if v1 == 0 then goto L54de7c;
  #L54de5c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54de62.  v1:= temp @kind object;
  #L54de64.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54de6a.  v2:= temp @kind object;
  #L54de6c.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54de72.  v1:= temp @kind object;
  #L54de74.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54de7a.  goto L54de50;
  #L54de7c.  return v0 @kind object;
}
procedure `java.util.Map` `associateByTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateByTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54de90.  v0:= "<this>" @kind object;
  #L54de94.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54de9a.  v0:= "destination" @kind object;
  #L54de9e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dea4.  v0:= "keySelector" @kind object;
  #L54dea8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54deae.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54deb4.  v2:= temp @kind object;
  #L54deb6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54debc.  v0:= temp;
  #L54debe.  if v0 == 0 then goto L54deda;
  #L54dec2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dec8.  v0:= temp @kind object;
  #L54deca.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ded0.  v1:= temp @kind object;
  #L54ded2.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ded8.  goto L54deb6;
  #L54deda.  return v3 @kind object;
}
procedure `java.util.Map` `associateByTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateByTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54deec.  v0:= "<this>" @kind object;
  #L54def0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54def6.  v0:= "destination" @kind object;
  #L54defa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df00.  v0:= "keySelector" @kind object;
  #L54df04.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df0a.  v0:= "valueTransform" @kind object;
  #L54df0e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df14.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54df1a.  v2:= temp @kind object;
  #L54df1c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54df22.  v0:= temp;
  #L54df24.  if v0 == 0 then goto L54df48;
  #L54df28.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54df2e.  v0:= temp @kind object;
  #L54df30.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54df36.  v1:= temp @kind object;
  #L54df38.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54df3e.  v0:= temp @kind object;
  #L54df40.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54df46.  goto L54df1c;
  #L54df48.  return v3 @kind object;
}
procedure `java.util.Map` `associateTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54df5c.  v0:= "<this>" @kind object;
  #L54df60.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df66.  v0:= "destination" @kind object;
  #L54df6a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df70.  v0:= "transform" @kind object;
  #L54df74.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54df7a.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54df80.  v2:= temp @kind object;
  #L54df82.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54df88.  v0:= temp;
  #L54df8a.  if v0 == 0 then goto L54dfba;
  #L54df8e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54df94.  v0:= temp @kind object;
  #L54df96.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54df9c.  v0:= temp @kind object;
  #L54df9e.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L54dfa2.  call temp:= `getFirst`(v0) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L54dfa8.  v1:= temp @kind object;
  #L54dfaa.  call temp:= `getSecond`(v0) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L54dfb0.  v0:= temp @kind object;
  #L54dfb2.  call temp:= `put`(v3, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54dfb8.  goto L54df82;
  #L54dfba.  return v3 @kind object;
}
procedure `java.util.Map` `associateWith`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateWith:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54dfcc.  v0:= "<this>" @kind object;
  #L54dfd0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dfd6.  v0:= "valueSelector" @kind object;
  #L54dfda.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dfe0.  v0:= new `java.util.LinkedHashMap`;
  #L54dfe4.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54dfea.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dff0.  v3:= temp @kind object;
  #L54dff2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54dff8.  v1:= temp;
  #L54dffa.  if v1 == 0 then goto L54e016;
  #L54dffe.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e004.  v1:= temp @kind object;
  #L54e006.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e00c.  v2:= temp @kind object;
  #L54e00e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e014.  goto L54dff2;
  #L54e016.  return v0 @kind object;
}
procedure `java.util.Map` `associateWithTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Map` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.associateWithTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e028.  v0:= "<this>" @kind object;
  #L54e02c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e032.  v0:= "destination" @kind object;
  #L54e036.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e03c.  v0:= "valueSelector" @kind object;
  #L54e040.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e046.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e04c.  v2:= temp @kind object;
  #L54e04e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e054.  v0:= temp;
  #L54e056.  if v0 == 0 then goto L54e072;
  #L54e05a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e060.  v0:= temp @kind object;
  #L54e062.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e068.  v1:= temp @kind object;
  #L54e06a.  call temp:= `put`(v3, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e070.  goto L54e04e;
  #L54e072.  return v3 @kind object;
}
procedure `double` `averageOfByte`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfByte:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b274.  v0:= "<this>" @kind object;
  #L54b278.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b27e.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b284.  v5:= temp @kind object;
  #L54b286.  v0:= 0L;
  #L54b28a.  v2:= 0I;
  #L54b28c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b292.  v3:= temp;
  #L54b294.  if v3 == 0 then goto L54b2c6;
  #L54b298.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b29e.  v3:= temp @kind object;
  #L54b2a0.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b2a4.  call temp:= `byteValue`(v3) @signature `Ljava/lang/Number;.byteValue:()B` @kind virtual;
  #L54b2aa.  v3:= temp;
  #L54b2ac.  v3:= (`double`) v3 @kind i2d;
  #L54b2ae.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b2b4.  v0:= v0 + v3 @kind double;
  #L54b2b6.  v2:= v2 + 1;
  #L54b2ba.  if v2 >= 0 then goto L54b28c;
  #L54b2be.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b2c4.  goto L54b28c;
  #L54b2c6.  if v2 != 0 then goto L54b2d0;
  #L54b2ca.  v0:= NaND;
  #L54b2ce.  goto L54b2da;
  #L54b2d0.  v2:= (`double`) v2 @kind i2d;
  #L54b2d2.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b2d8.  v0:= v0 / v2 @kind double;
  #L54b2da.  return v0 @kind wide;
}
procedure `double` `averageOfDouble`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfDouble:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b2ec.  v0:= "<this>" @kind object;
  #L54b2f0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b2f6.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b2fc.  v5:= temp @kind object;
  #L54b2fe.  v0:= 0L;
  #L54b302.  v2:= 0I;
  #L54b304.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b30a.  v3:= temp;
  #L54b30c.  if v3 == 0 then goto L54b336;
  #L54b310.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b316.  v3:= temp @kind object;
  #L54b318.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b31c.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b322.  v3:= temp @kind wide;
  #L54b324.  v0:= v0 + v3 @kind double;
  #L54b326.  v2:= v2 + 1;
  #L54b32a.  if v2 >= 0 then goto L54b304;
  #L54b32e.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b334.  goto L54b304;
  #L54b336.  if v2 != 0 then goto L54b340;
  #L54b33a.  v0:= NaND;
  #L54b33e.  goto L54b34a;
  #L54b340.  v2:= (`double`) v2 @kind i2d;
  #L54b342.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b348.  v0:= v0 / v2 @kind double;
  #L54b34a.  return v0 @kind wide;
}
procedure `double` `averageOfFloat`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfFloat:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b35c.  v0:= "<this>" @kind object;
  #L54b360.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b366.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b36c.  v5:= temp @kind object;
  #L54b36e.  v0:= 0L;
  #L54b372.  v2:= 0I;
  #L54b374.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b37a.  v3:= temp;
  #L54b37c.  if v3 == 0 then goto L54b3ae;
  #L54b380.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b386.  v3:= temp @kind object;
  #L54b388.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b38c.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b392.  v3:= temp;
  #L54b394.  v3:= (`double`) v3 @kind f2d;
  #L54b396.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b39c.  v0:= v0 + v3 @kind double;
  #L54b39e.  v2:= v2 + 1;
  #L54b3a2.  if v2 >= 0 then goto L54b374;
  #L54b3a6.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b3ac.  goto L54b374;
  #L54b3ae.  if v2 != 0 then goto L54b3b8;
  #L54b3b2.  v0:= NaND;
  #L54b3b6.  goto L54b3c2;
  #L54b3b8.  v2:= (`double`) v2 @kind i2d;
  #L54b3ba.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b3c0.  v0:= v0 / v2 @kind double;
  #L54b3c2.  return v0 @kind wide;
}
procedure `double` `averageOfInt`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfInt:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b3d4.  v0:= "<this>" @kind object;
  #L54b3d8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b3de.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b3e4.  v5:= temp @kind object;
  #L54b3e6.  v0:= 0L;
  #L54b3ea.  v2:= 0I;
  #L54b3ec.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b3f2.  v3:= temp;
  #L54b3f4.  if v3 == 0 then goto L54b426;
  #L54b3f8.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b3fe.  v3:= temp @kind object;
  #L54b400.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b404.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54b40a.  v3:= temp;
  #L54b40c.  v3:= (`double`) v3 @kind i2d;
  #L54b40e.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b414.  v0:= v0 + v3 @kind double;
  #L54b416.  v2:= v2 + 1;
  #L54b41a.  if v2 >= 0 then goto L54b3ec;
  #L54b41e.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b424.  goto L54b3ec;
  #L54b426.  if v2 != 0 then goto L54b430;
  #L54b42a.  v0:= NaND;
  #L54b42e.  goto L54b43a;
  #L54b430.  v2:= (`double`) v2 @kind i2d;
  #L54b432.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b438.  v0:= v0 / v2 @kind double;
  #L54b43a.  return v0 @kind wide;
}
procedure `double` `averageOfLong`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfLong:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b44c.  v0:= "<this>" @kind object;
  #L54b450.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b456.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b45c.  v5:= temp @kind object;
  #L54b45e.  v0:= 0L;
  #L54b462.  v2:= 0I;
  #L54b464.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b46a.  v3:= temp;
  #L54b46c.  if v3 == 0 then goto L54b49e;
  #L54b470.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b476.  v3:= temp @kind object;
  #L54b478.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b47c.  call temp:= `longValue`(v3) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54b482.  v3:= temp @kind wide;
  #L54b484.  v3:= (`double`) v3 @kind l2d;
  #L54b486.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b48c.  v0:= v0 + v3 @kind double;
  #L54b48e.  v2:= v2 + 1;
  #L54b492.  if v2 >= 0 then goto L54b464;
  #L54b496.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b49c.  goto L54b464;
  #L54b49e.  if v2 != 0 then goto L54b4a8;
  #L54b4a2.  v0:= NaND;
  #L54b4a6.  goto L54b4b2;
  #L54b4a8.  v2:= (`double`) v2 @kind i2d;
  #L54b4aa.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b4b0.  v0:= v0 / v2 @kind double;
  #L54b4b2.  return v0 @kind wide;
}
procedure `double` `averageOfShort`(`kotlin.sequences.Sequence` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.averageOfShort:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54b4c4.  v0:= "<this>" @kind object;
  #L54b4c8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b4ce.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b4d4.  v5:= temp @kind object;
  #L54b4d6.  v0:= 0L;
  #L54b4da.  v2:= 0I;
  #L54b4dc.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b4e2.  v3:= temp;
  #L54b4e4.  if v3 == 0 then goto L54b516;
  #L54b4e8.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b4ee.  v3:= temp @kind object;
  #L54b4f0.  v3:= (`java.lang.Number`) v3 @kind object;
  #L54b4f4.  call temp:= `shortValue`(v3) @signature `Ljava/lang/Number;.shortValue:()S` @kind virtual;
  #L54b4fa.  v3:= temp;
  #L54b4fc.  v3:= (`double`) v3 @kind i2d;
  #L54b4fe.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b504.  v0:= v0 + v3 @kind double;
  #L54b506.  v2:= v2 + 1;
  #L54b50a.  if v2 >= 0 then goto L54b4dc;
  #L54b50e.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b514.  goto L54b4dc;
  #L54b516.  if v2 != 0 then goto L54b520;
  #L54b51a.  v0:= NaND;
  #L54b51e.  goto L54b52a;
  #L54b520.  v2:= (`double`) v2 @kind i2d;
  #L54b522.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L54b528.  v0:= v0 / v2 @kind double;
  #L54b52a.  return v0 @kind wide;
}
procedure `kotlin.sequences.Sequence` `chunked`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.chunked:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e3f8.  v0:= "<this>" @kind object;
  #L54e3fc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e402.  v0:= 1I;
  #L54e404.  call temp:= `windowed`(v1, v2, v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZ)Lkotlin/sequences/Sequence;` @kind static;
  #L54e40a.  v1:= temp @kind object;
  #L54e40c.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `chunked`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.chunked:(Lkotlin/sequences/Sequence;ILkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e420.  v0:= "<this>" @kind object;
  #L54e424.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e42a.  v0:= "transform" @kind object;
  #L54e42e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e434.  v0:= 1I;
  #L54e436.  call temp:= `windowed`(v1, v2, v2, v0, v3) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZLkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e43c.  v1:= temp @kind object;
  #L54e43e.  return v1 @kind object;
}
procedure `boolean` `contains`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.contains:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b1b4.  v0:= "<this>" @kind object;
  #L54b1b8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b1be.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.indexOf:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)I` @kind static;
  #L54b1c4.  v1:= temp;
  #L54b1c6.  if v1 < 0 then goto L54b1ce;
  #L54b1ca.  v1:= 1I;
  #L54b1cc.  goto L54b1d0;
  #L54b1ce.  v1:= 0I;
  #L54b1d0.  return v1;
}
procedure `int` `count`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.count:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L54b8f4.  v0:= "<this>" @kind object;
  #L54b8f8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b8fe.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b904.  v2:= temp @kind object;
  #L54b906.  v0:= 0I;
  #L54b908.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b90e.  v1:= temp;
  #L54b910.  if v1 == 0 then goto L54b92a;
  #L54b914.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b91a.  v0:= v0 + 1;
  #L54b91e.  if v0 >= 0 then goto L54b908;
  #L54b922.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b928.  goto L54b908;
  #L54b92a.  return v0;
}
procedure `int` `count`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.count:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54b93c.  v0:= "<this>" @kind object;
  #L54b940.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b946.  v0:= "predicate" @kind object;
  #L54b94a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b950.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b956.  v2:= temp @kind object;
  #L54b958.  v0:= 0I;
  #L54b95a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b960.  v1:= temp;
  #L54b962.  if v1 == 0 then goto L54b996;
  #L54b966.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b96c.  v1:= temp @kind object;
  #L54b96e.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b974.  v1:= temp @kind object;
  #L54b976.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54b97a.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54b980.  v1:= temp;
  #L54b982.  if v1 == 0 then goto L54b95a;
  #L54b986.  v0:= v0 + 1;
  #L54b98a.  if v0 >= 0 then goto L54b95a;
  #L54b98e.  call `throwCountOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwCountOverflow:()V` @kind static;
  #L54b994.  goto L54b95a;
  #L54b996.  return v0;
}
procedure `kotlin.sequences.Sequence` `distinct`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.distinct:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e450.  v0:= "<this>" @kind object;
  #L54e454.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e45a.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$distinct$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$distinct$1` @kind object;
  #L54e45e.  call temp:= `distinctBy`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.distinctBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e464.  v1:= temp @kind object;
  #L54e466.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `distinctBy`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.distinctBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e478.  v0:= "<this>" @kind object;
  #L54e47c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e482.  v0:= "selector" @kind object;
  #L54e486.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e48c.  v0:= new `kotlin.sequences.DistinctSequence`;
  #L54e490.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/DistinctSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e496.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `drop`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.drop:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e4a8.  v0:= "<this>" @kind object;
  #L54e4ac.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e4b2.  if v2 < 0 then goto L54e4ba;
  #L54e4b6.  v0:= 1I;
  #L54e4b8.  goto L54e4bc;
  #L54e4ba.  v0:= 0I;
  #L54e4bc.  if v0 == 0 then goto L54e4ea;
  #L54e4c0.  if v2 != 0 then goto L54e4c6;
  #L54e4c4.  goto L54e4e8;
  #L54e4c6.  v0:= instanceof @variable v1 @type ^`kotlin.sequences.DropTakeSequence` @kind boolean;
  #L54e4ca.  if v0 == 0 then goto L54e4dc;
  #L54e4ce.  v1:= (`kotlin.sequences.DropTakeSequence`) v1 @kind object;
  #L54e4d2.  call temp:= `drop`(v1, v2) @signature `Lkotlin/sequences/DropTakeSequence;.drop:(I)Lkotlin/sequences/Sequence;` @kind interface;
  #L54e4d8.  v1:= temp @kind object;
  #L54e4da.  goto L54e4e8;
  #L54e4dc.  v0:= new `kotlin.sequences.DropSequence`;
  #L54e4e0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/DropSequence;.<init>:(Lkotlin/sequences/Sequence;I)V` @kind direct;
  #L54e4e6.  v1:= v0 @kind object;
  #L54e4e8.  return v1 @kind object;
  #L54e4ea.  v1:= new `java.lang.StringBuilder`;
  #L54e4ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54e4f4.  v0:= "Requested element count " @kind object;
  #L54e4f8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54e4fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L54e504.  v2:= " is less than zero." @kind object;
  #L54e508.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54e50e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54e514.  v1:= temp @kind object;
  #L54e516.  v2:= new `java.lang.IllegalArgumentException`;
  #L54e51a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L54e520.  v1:= temp @kind object;
  #L54e522.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54e528.  throw v2;
}
procedure `kotlin.sequences.Sequence` `dropWhile`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.dropWhile:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e53c.  v0:= "<this>" @kind object;
  #L54e540.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e546.  v0:= "predicate" @kind object;
  #L54e54a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e550.  v0:= new `kotlin.sequences.DropWhileSequence`;
  #L54e554.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/DropWhileSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e55a.  return v0 @kind object;
}
procedure `java.lang.Object` `elementAt`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.elementAt:(Lkotlin/sequences/Sequence;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54c6ac.  v0:= "<this>" @kind object;
  #L54c6b0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c6b6.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$elementAt$1`;
  #L54c6ba.  call `<init>`(v0, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$elementAt$1;.<init>:(I)V` @kind direct;
  #L54c6c0.  call temp:= `elementAtOrElse`(v1, v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.elementAtOrElse:(Lkotlin/sequences/Sequence;ILkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind static;
  #L54c6c6.  v1:= temp @kind object;
  #L54c6c8.  return v1 @kind object;
}
procedure `java.lang.Object` `elementAtOrElse`(`kotlin.sequences.Sequence` v3 @kind object, `int` v4 , `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.elementAtOrElse:(Lkotlin/sequences/Sequence;ILkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54c6dc.  v0:= "<this>" @kind object;
  #L54c6e0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c6e6.  v0:= "defaultValue" @kind object;
  #L54c6ea.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c6f0.  if v4 >= 0 then goto L54c706;
  #L54c6f4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54c6fa.  v3:= temp @kind object;
  #L54c6fc.  call temp:= `invoke`(v5, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c702.  v3:= temp @kind object;
  #L54c704.  return v3 @kind object;
  #L54c706.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c70c.  v3:= temp @kind object;
  #L54c70e.  v0:= 0I;
  #L54c710.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c716.  v1:= temp;
  #L54c718.  if v1 == 0 then goto L54c732;
  #L54c71c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c722.  v1:= temp @kind object;
  #L54c724.  v2:= v0 + 1;
  #L54c728.  if v4 != v0 then goto L54c72e;
  #L54c72c.  return v1 @kind object;
  #L54c72e.  v0:= v2;
  #L54c730.  goto L54c710;
  #L54c732.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54c738.  v3:= temp @kind object;
  #L54c73a.  call temp:= `invoke`(v5, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c740.  v3:= temp @kind object;
  #L54c742.  return v3 @kind object;
}
procedure `java.lang.Object` `elementAtOrNull`(`kotlin.sequences.Sequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.elementAtOrNull:(Lkotlin/sequences/Sequence;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54c754.  v0:= "<this>" @kind object;
  #L54c758.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c75e.  v0:= 0I;
  #L54c760.  if v5 >= 0 then goto L54c766;
  #L54c764.  return v0 @kind object;
  #L54c766.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c76c.  v4:= temp @kind object;
  #L54c76e.  v1:= 0I;
  #L54c770.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c776.  v2:= temp;
  #L54c778.  if v2 == 0 then goto L54c792;
  #L54c77c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c782.  v2:= temp @kind object;
  #L54c784.  v3:= v1 + 1;
  #L54c788.  if v5 != v1 then goto L54c78e;
  #L54c78c.  return v2 @kind object;
  #L54c78e.  v1:= v3;
  #L54c790.  goto L54c770;
  #L54c792.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `filter`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e56c.  v0:= "<this>" @kind object;
  #L54e570.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e576.  v0:= "predicate" @kind object;
  #L54e57a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e580.  v0:= new `kotlin.sequences.FilteringSequence`;
  #L54e584.  v1:= 1I;
  #L54e586.  call `<init>`(v0, v2, v1, v3) @signature `Lkotlin/sequences/FilteringSequence;.<init>:(Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e58c.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `filterIndexed`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54e5a0.  v0:= "<this>" @kind object;
  #L54e5a4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e5aa.  v0:= "predicate" @kind object;
  #L54e5ae.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e5b4.  v0:= new `kotlin.sequences.TransformingSequence`;
  #L54e5b8.  v1:= new `kotlin.sequences.FilteringSequence`;
  #L54e5bc.  v2:= new `kotlin.sequences.IndexingSequence`;
  #L54e5c0.  call `<init>`(v2, v3) @signature `Lkotlin/sequences/IndexingSequence;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54e5c6.  v3:= new `kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1`;
  #L54e5ca.  call `<init>`(v3, v4) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIndexed$1;.<init>:(Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54e5d0.  v4:= 1I;
  #L54e5d2.  call `<init>`(v1, v2, v4, v3) @signature `Lkotlin/sequences/FilteringSequence;.<init>:(Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e5d8.  v3:= `@@kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2` @kind object;
  #L54e5dc.  call `<init>`(v0, v1, v3) @signature `Lkotlin/sequences/TransformingSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e5e2.  return v0 @kind object;
}
procedure `java.util.Collection` `filterIndexedTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterIndexedTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d6fc.  v0:= "<this>" @kind object;
  #L54d700.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d706.  v0:= "destination" @kind object;
  #L54d70a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d710.  v0:= "predicate" @kind object;
  #L54d714.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d71a.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d720.  v3:= temp @kind object;
  #L54d722.  v0:= 0I;
  #L54d724.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d72a.  v1:= temp;
  #L54d72c.  if v1 == 0 then goto L54d770;
  #L54d730.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d736.  v1:= temp @kind object;
  #L54d738.  v2:= v0 + 1;
  #L54d73c.  if v0 >= 0 then goto L54d746;
  #L54d740.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54d746.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54d74c.  v0:= temp @kind object;
  #L54d74e.  call temp:= `invoke`(v5, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d754.  v0:= temp @kind object;
  #L54d756.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L54d75a.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54d760.  v0:= temp;
  #L54d762.  if v0 == 0 then goto L54d76c;
  #L54d766.  call temp:= `add`(v4, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54d76c.  v0:= v2;
  #L54d76e.  goto L54d724;
  #L54d770.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `filterIsInstance`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterIsInstance:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54e5f4.  v0:= "<this>" @kind object;
  #L54e5f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e5fe.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L54e604.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` @kind object;
  #L54e608.  call temp:= `filter`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e60e.  v1:= temp @kind object;
  #L54e610.  return v1 @kind object;
}
procedure `java.util.Collection` `filterIsInstanceTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterIsInstanceTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L54d784.  v0:= "<this>" @kind object;
  #L54d788.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d78e.  v0:= "destination" @kind object;
  #L54d792.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d798.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d79e.  v3:= temp @kind object;
  #L54d7a0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d7a6.  v0:= temp;
  #L54d7a8.  if v0 == 0 then goto L54d7d0;
  #L54d7ac.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d7b2.  v0:= temp @kind object;
  #L54d7b4.  v1:= 3I;
  #L54d7b6.  v2:= "R" @kind object;
  #L54d7ba.  call `reifiedOperationMarker`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L54d7c0.  v1:= instanceof @variable v0 @type ^`java.lang.Object` @kind boolean;
  #L54d7c4.  if v1 == 0 then goto L54d7a0;
  #L54d7c8.  call temp:= `add`(v4, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54d7ce.  goto L54d7a0;
  #L54d7d0.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `filterNot`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e624.  v0:= "<this>" @kind object;
  #L54e628.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e62e.  v0:= "predicate" @kind object;
  #L54e632.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e638.  v0:= new `kotlin.sequences.FilteringSequence`;
  #L54e63c.  v1:= 0I;
  #L54e63e.  call `<init>`(v0, v2, v1, v3) @signature `Lkotlin/sequences/FilteringSequence;.<init>:(Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e644.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `filterNotNull`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotNull:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e658.  v0:= "<this>" @kind object;
  #L54e65c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e662.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1` @kind object;
  #L54e666.  call temp:= `filterNot`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e66c.  v1:= temp @kind object;
  #L54e66e.  return v1 @kind object;
}
procedure `java.util.Collection` `filterNotNullTo`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotNullTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54d7e4.  v0:= "<this>" @kind object;
  #L54d7e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d7ee.  v0:= "destination" @kind object;
  #L54d7f2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d7f8.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d7fe.  v1:= temp @kind object;
  #L54d800.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d806.  v0:= temp;
  #L54d808.  if v0 == 0 then goto L54d820;
  #L54d80c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d812.  v0:= temp @kind object;
  #L54d814.  if v0 == 0 then goto L54d800;
  #L54d818.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54d81e.  goto L54d800;
  #L54d820.  return v2 @kind object;
}
procedure `java.util.Collection` `filterNotTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Collection` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54d834.  v0:= "<this>" @kind object;
  #L54d838.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d83e.  v0:= "destination" @kind object;
  #L54d842.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d848.  v0:= "predicate" @kind object;
  #L54d84c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d852.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d858.  v2:= temp @kind object;
  #L54d85a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d860.  v0:= temp;
  #L54d862.  if v0 == 0 then goto L54d88e;
  #L54d866.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d86c.  v0:= temp @kind object;
  #L54d86e.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d874.  v1:= temp @kind object;
  #L54d876.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54d87a.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54d880.  v1:= temp;
  #L54d882.  if v1 != 0 then goto L54d85a;
  #L54d886.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54d88c.  goto L54d85a;
  #L54d88e.  return v3 @kind object;
}
procedure `java.util.Collection` `filterTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Collection` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54d8a0.  v0:= "<this>" @kind object;
  #L54d8a4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d8aa.  v0:= "destination" @kind object;
  #L54d8ae.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d8b4.  v0:= "predicate" @kind object;
  #L54d8b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d8be.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d8c4.  v2:= temp @kind object;
  #L54d8c6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d8cc.  v0:= temp;
  #L54d8ce.  if v0 == 0 then goto L54d8fa;
  #L54d8d2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d8d8.  v0:= temp @kind object;
  #L54d8da.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d8e0.  v1:= temp @kind object;
  #L54d8e2.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54d8e6.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54d8ec.  v1:= temp;
  #L54d8ee.  if v1 == 0 then goto L54d8c6;
  #L54d8f2.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54d8f8.  goto L54d8c6;
  #L54d8fa.  return v3 @kind object;
}
procedure `java.lang.Object` `find`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.find:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c7a4.  v0:= "<this>" @kind object;
  #L54c7a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c7ae.  v0:= "predicate" @kind object;
  #L54c7b2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c7b8.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c7be.  v2:= temp @kind object;
  #L54c7c0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c7c6.  v0:= temp;
  #L54c7c8.  if v0 == 0 then goto L54c7ee;
  #L54c7cc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c7d2.  v0:= temp @kind object;
  #L54c7d4.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c7da.  v1:= temp @kind object;
  #L54c7dc.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54c7e0.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54c7e6.  v1:= temp;
  #L54c7e8.  if v1 == 0 then goto L54c7c0;
  #L54c7ec.  goto L54c7f0;
  #L54c7ee.  v0:= 0I;
  #L54c7f0.  return v0 @kind object;
}
procedure `java.lang.Object` `findLast`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.findLast:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54c804.  v0:= "<this>" @kind object;
  #L54c808.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c80e.  v0:= "predicate" @kind object;
  #L54c812.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c818.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c81e.  v3:= temp @kind object;
  #L54c820.  v0:= 0I;
  #L54c822.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c828.  v1:= temp;
  #L54c82a.  if v1 == 0 then goto L54c852;
  #L54c82e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c834.  v1:= temp @kind object;
  #L54c836.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c83c.  v2:= temp @kind object;
  #L54c83e.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L54c842.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54c848.  v2:= temp;
  #L54c84a.  if v2 == 0 then goto L54c822;
  #L54c84e.  v0:= v1 @kind object;
  #L54c850.  goto L54c822;
  #L54c852.  return v0 @kind object;
}
procedure `java.lang.Object` `first`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.first:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54c864.  v0:= "<this>" @kind object;
  #L54c868.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c86e.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c874.  v1:= temp @kind object;
  #L54c876.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c87c.  v0:= temp;
  #L54c87e.  if v0 == 0 then goto L54c88c;
  #L54c882.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c888.  v1:= temp @kind object;
  #L54c88a.  return v1 @kind object;
  #L54c88c.  v1:= new `java.util.NoSuchElementException`;
  #L54c890.  v0:= "Sequence is empty." @kind object;
  #L54c894.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54c89a.  throw v1;
}
procedure `java.lang.Object` `first`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.first:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c8ac.  v0:= "<this>" @kind object;
  #L54c8b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c8b6.  v0:= "predicate" @kind object;
  #L54c8ba.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c8c0.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c8c6.  v2:= temp @kind object;
  #L54c8c8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c8ce.  v0:= temp;
  #L54c8d0.  if v0 == 0 then goto L54c8f6;
  #L54c8d4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c8da.  v0:= temp @kind object;
  #L54c8dc.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c8e2.  v1:= temp @kind object;
  #L54c8e4.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54c8e8.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54c8ee.  v1:= temp;
  #L54c8f0.  if v1 == 0 then goto L54c8c8;
  #L54c8f4.  return v0 @kind object;
  #L54c8f6.  v2:= new `java.util.NoSuchElementException`;
  #L54c8fa.  v3:= "Sequence contains no element matching the predicate." @kind object;
  #L54c8fe.  call `<init>`(v2, v3) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54c904.  goto L54c908;
  #L54c906.  throw v2;
  #L54c908.  goto L54c906;
}
procedure `java.lang.Object` `firstNotNullOf`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.firstNotNullOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54c91c.  v0:= "<this>" @kind object;
  #L54c920.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c926.  v0:= "transform" @kind object;
  #L54c92a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c930.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c936.  v1:= temp @kind object;
  #L54c938.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c93e.  v0:= temp;
  #L54c940.  if v0 == 0 then goto L54c95a;
  #L54c944.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c94a.  v0:= temp @kind object;
  #L54c94c.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c952.  v0:= temp @kind object;
  #L54c954.  if v0 != 0 then goto L54c95c;
  #L54c958.  goto L54c938;
  #L54c95a.  v0:= 0I;
  #L54c95c.  if v0 == 0 then goto L54c962;
  #L54c960.  return v0 @kind object;
  #L54c962.  v1:= new `java.util.NoSuchElementException`;
  #L54c966.  v2:= "No element of the sequence was transformed to a non-null value." @kind object;
  #L54c96a.  call `<init>`(v1, v2) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54c970.  goto L54c974;
  #L54c972.  throw v1;
  #L54c974.  goto L54c972;
}
procedure `java.lang.Object` `firstNotNullOfOrNull`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.firstNotNullOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54c988.  v0:= "<this>" @kind object;
  #L54c98c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c992.  v0:= "transform" @kind object;
  #L54c996.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c99c.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c9a2.  v1:= temp @kind object;
  #L54c9a4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c9aa.  v0:= temp;
  #L54c9ac.  if v0 == 0 then goto L54c9c6;
  #L54c9b0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c9b6.  v0:= temp @kind object;
  #L54c9b8.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c9be.  v0:= temp @kind object;
  #L54c9c0.  if v0 == 0 then goto L54c9a4;
  #L54c9c4.  return v0 @kind object;
  #L54c9c6.  v1:= 0I;
  #L54c9c8.  return v1 @kind object;
}
procedure `java.lang.Object` `firstOrNull`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.firstOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54c9dc.  v0:= "<this>" @kind object;
  #L54c9e0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c9e6.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c9ec.  v1:= temp @kind object;
  #L54c9ee.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c9f4.  v0:= temp;
  #L54c9f6.  if v0 != 0 then goto L54c9fe;
  #L54c9fa.  v1:= 0I;
  #L54c9fc.  return v1 @kind object;
  #L54c9fe.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ca04.  v1:= temp @kind object;
  #L54ca06.  return v1 @kind object;
}
procedure `java.lang.Object` `firstOrNull`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.firstOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ca18.  v0:= "<this>" @kind object;
  #L54ca1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ca22.  v0:= "predicate" @kind object;
  #L54ca26.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ca2c.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ca32.  v2:= temp @kind object;
  #L54ca34.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ca3a.  v0:= temp;
  #L54ca3c.  if v0 == 0 then goto L54ca62;
  #L54ca40.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ca46.  v0:= temp @kind object;
  #L54ca48.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ca4e.  v1:= temp @kind object;
  #L54ca50.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54ca54.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54ca5a.  v1:= temp;
  #L54ca5c.  if v1 == 0 then goto L54ca34;
  #L54ca60.  return v0 @kind object;
  #L54ca62.  v2:= 0I;
  #L54ca64.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMap`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMap:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e680.  v0:= "<this>" @kind object;
  #L54e684.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e68a.  v0:= "transform" @kind object;
  #L54e68e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e694.  v0:= new `kotlin.sequences.FlatteningSequence`;
  #L54e698.  v1:= `@@kotlin.sequences.SequencesKt___SequencesKt$flatMap$2.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$flatMap$2` @kind object;
  #L54e69c.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/FlatteningSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e6a2.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMapIndexedIterable`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIndexedIterable:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e6b4.  v0:= "<this>" @kind object;
  #L54e6b8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e6be.  v0:= "transform" @kind object;
  #L54e6c2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e6c8.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1` @kind object;
  #L54e6cc.  call temp:= `flatMapIndexed`(v1, v2, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatMapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e6d2.  v1:= temp @kind object;
  #L54e6d4.  return v1 @kind object;
}
procedure `java.util.Collection` `flatMapIndexedIterableTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIndexedIterableTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d90c.  v0:= "<this>" @kind object;
  #L54d910.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d916.  v0:= "destination" @kind object;
  #L54d91a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d920.  v0:= "transform" @kind object;
  #L54d924.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d92a.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d930.  v3:= temp @kind object;
  #L54d932.  v0:= 0I;
  #L54d934.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d93a.  v1:= temp;
  #L54d93c.  if v1 == 0 then goto L54d974;
  #L54d940.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d946.  v1:= temp @kind object;
  #L54d948.  v2:= v0 + 1;
  #L54d94c.  if v0 >= 0 then goto L54d956;
  #L54d950.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54d956.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54d95c.  v0:= temp @kind object;
  #L54d95e.  call temp:= `invoke`(v5, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d964.  v0:= temp @kind object;
  #L54d966.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L54d96a.  call temp:= `addAll`(v4, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L54d970.  v0:= v2;
  #L54d972.  goto L54d934;
  #L54d974.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMapIndexedSequence`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIndexedSequence:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e6e8.  v0:= "<this>" @kind object;
  #L54e6ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e6f2.  v0:= "transform" @kind object;
  #L54e6f6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e6fc.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2` @kind object;
  #L54e700.  call temp:= `flatMapIndexed`(v1, v2, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatMapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e706.  v1:= temp @kind object;
  #L54e708.  return v1 @kind object;
}
procedure `java.util.Collection` `flatMapIndexedSequenceTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIndexedSequenceTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d988.  v0:= "<this>" @kind object;
  #L54d98c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d992.  v0:= "destination" @kind object;
  #L54d996.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d99c.  v0:= "transform" @kind object;
  #L54d9a0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d9a6.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d9ac.  v3:= temp @kind object;
  #L54d9ae.  v0:= 0I;
  #L54d9b0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d9b6.  v1:= temp;
  #L54d9b8.  if v1 == 0 then goto L54d9f0;
  #L54d9bc.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d9c2.  v1:= temp @kind object;
  #L54d9c4.  v2:= v0 + 1;
  #L54d9c8.  if v0 >= 0 then goto L54d9d2;
  #L54d9cc.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54d9d2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54d9d8.  v0:= temp @kind object;
  #L54d9da.  call temp:= `invoke`(v5, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d9e0.  v0:= temp @kind object;
  #L54d9e2.  v0:= (`kotlin.sequences.Sequence`) v0 @kind object;
  #L54d9e6.  call temp:= `addAll`(v4, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Lkotlin/sequences/Sequence;)Z` @kind static;
  #L54d9ec.  v0:= v2;
  #L54d9ee.  goto L54d9b0;
  #L54d9f0.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMapIterable`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIterable:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e71c.  v0:= "<this>" @kind object;
  #L54e720.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e726.  v0:= "transform" @kind object;
  #L54e72a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e730.  v0:= new `kotlin.sequences.FlatteningSequence`;
  #L54e734.  v1:= `@@kotlin.sequences.SequencesKt___SequencesKt$flatMap$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$flatMap$1` @kind object;
  #L54e738.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/FlatteningSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e73e.  return v0 @kind object;
}
procedure `java.util.Collection` `flatMapIterableTo`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapIterableTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54da04.  v0:= "<this>" @kind object;
  #L54da08.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da0e.  v0:= "destination" @kind object;
  #L54da12.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da18.  v0:= "transform" @kind object;
  #L54da1c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da22.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54da28.  v1:= temp @kind object;
  #L54da2a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54da30.  v0:= temp;
  #L54da32.  if v0 == 0 then goto L54da52;
  #L54da36.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54da3c.  v0:= temp @kind object;
  #L54da3e.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54da44.  v0:= temp @kind object;
  #L54da46.  v0:= (`java.lang.Iterable`) v0 @kind object;
  #L54da4a.  call temp:= `addAll`(v2, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L54da50.  goto L54da2a;
  #L54da52.  return v2 @kind object;
}
procedure `java.util.Collection` `flatMapTo`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.flatMapTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54da64.  v0:= "<this>" @kind object;
  #L54da68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da6e.  v0:= "destination" @kind object;
  #L54da72.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da78.  v0:= "transform" @kind object;
  #L54da7c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54da82.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54da88.  v1:= temp @kind object;
  #L54da8a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54da90.  v0:= temp;
  #L54da92.  if v0 == 0 then goto L54dab2;
  #L54da96.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54da9c.  v0:= temp @kind object;
  #L54da9e.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54daa4.  v0:= temp @kind object;
  #L54daa6.  v0:= (`kotlin.sequences.Sequence`) v0 @kind object;
  #L54daaa.  call temp:= `addAll`(v2, v0) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Lkotlin/sequences/Sequence;)Z` @kind static;
  #L54dab0.  goto L54da8a;
  #L54dab2.  return v2 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.fold:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ca78.  v0:= "<this>" @kind object;
  #L54ca7c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ca82.  v0:= "operation" @kind object;
  #L54ca86.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ca8c.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ca92.  v1:= temp @kind object;
  #L54ca94.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ca9a.  v0:= temp;
  #L54ca9c.  if v0 == 0 then goto L54cab2;
  #L54caa0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54caa6.  v0:= temp @kind object;
  #L54caa8.  call temp:= `invoke`(v3, v2, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54caae.  v2:= temp @kind object;
  #L54cab0.  goto L54ca94;
  #L54cab2.  return v2 @kind object;
}
procedure `java.lang.Object` `foldIndexed`(`kotlin.sequences.Sequence` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.foldIndexed:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54cac4.  v0:= "<this>" @kind object;
  #L54cac8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cace.  v0:= "operation" @kind object;
  #L54cad2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cad8.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cade.  v3:= temp @kind object;
  #L54cae0.  v0:= 0I;
  #L54cae2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cae8.  v1:= temp;
  #L54caea.  if v1 == 0 then goto L54cb18;
  #L54caee.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54caf4.  v1:= temp @kind object;
  #L54caf6.  v2:= v0 + 1;
  #L54cafa.  if v0 >= 0 then goto L54cb04;
  #L54cafe.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54cb04.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54cb0a.  v0:= temp @kind object;
  #L54cb0c.  call temp:= `invoke`(v5, v0, v4, v1) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cb12.  v4:= temp @kind object;
  #L54cb14.  v0:= v2;
  #L54cb16.  goto L54cae2;
  #L54cb18.  return v4 @kind object;
}
procedure `void` `forEach`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.forEach:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54f0f4.  v0:= "<this>" @kind object;
  #L54f0f8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f0fe.  v0:= "action" @kind object;
  #L54f102.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f108.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54f10e.  v1:= temp @kind object;
  #L54f110.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54f116.  v0:= temp;
  #L54f118.  if v0 == 0 then goto L54f12c;
  #L54f11c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54f122.  v0:= temp @kind object;
  #L54f124.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54f12a.  goto L54f110;
  #L54f12c.  return @kind void;
}
procedure `void` `forEachIndexed`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.forEachIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54f140.  v0:= "<this>" @kind object;
  #L54f144.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f14a.  v0:= "action" @kind object;
  #L54f14e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f154.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54f15a.  v3:= temp @kind object;
  #L54f15c.  v0:= 0I;
  #L54f15e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54f164.  v1:= temp;
  #L54f166.  if v1 == 0 then goto L54f192;
  #L54f16a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54f170.  v1:= temp @kind object;
  #L54f172.  v2:= v0 + 1;
  #L54f176.  if v0 >= 0 then goto L54f180;
  #L54f17a.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54f180.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54f186.  v0:= temp @kind object;
  #L54f188.  call temp:= `invoke`(v4, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54f18e.  v0:= v2;
  #L54f190.  goto L54f15e;
  #L54f192.  return @kind void;
}
procedure `java.util.Map` `groupBy`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.groupBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54e084.  v0:= "<this>" @kind object;
  #L54e088.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e08e.  v0:= "keySelector" @kind object;
  #L54e092.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e098.  v0:= new `java.util.LinkedHashMap`;
  #L54e09c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54e0a2.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e0a8.  v4:= temp @kind object;
  #L54e0aa.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e0b0.  v1:= temp;
  #L54e0b2.  if v1 == 0 then goto L54e0ee;
  #L54e0b6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e0bc.  v1:= temp @kind object;
  #L54e0be.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e0c4.  v2:= temp @kind object;
  #L54e0c6.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e0cc.  v3:= temp @kind object;
  #L54e0ce.  if v3 != 0 then goto L54e0e2;
  #L54e0d2.  v3:= new `java.util.ArrayList`;
  #L54e0d6.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e0dc.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e0e2.  v3:= (`java.util.List`) v3 @kind object;
  #L54e0e6.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54e0ec.  goto L54e0aa;
  #L54e0ee.  return v0 @kind object;
}
procedure `java.util.Map` `groupBy`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.groupBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54e100.  v0:= "<this>" @kind object;
  #L54e104.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e10a.  v0:= "keySelector" @kind object;
  #L54e10e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e114.  v0:= "valueTransform" @kind object;
  #L54e118.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e11e.  v0:= new `java.util.LinkedHashMap`;
  #L54e122.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L54e128.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e12e.  v4:= temp @kind object;
  #L54e130.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e136.  v1:= temp;
  #L54e138.  if v1 == 0 then goto L54e17c;
  #L54e13c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e142.  v1:= temp @kind object;
  #L54e144.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e14a.  v2:= temp @kind object;
  #L54e14c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e152.  v3:= temp @kind object;
  #L54e154.  if v3 != 0 then goto L54e168;
  #L54e158.  v3:= new `java.util.ArrayList`;
  #L54e15c.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e162.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e168.  v3:= (`java.util.List`) v3 @kind object;
  #L54e16c.  call temp:= `invoke`(v6, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e172.  v1:= temp @kind object;
  #L54e174.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54e17a.  goto L54e130;
  #L54e17c.  return v0 @kind object;
}
procedure `java.util.Map` `groupByTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Map` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.groupByTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54e190.  v0:= "<this>" @kind object;
  #L54e194.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e19a.  v0:= "destination" @kind object;
  #L54e19e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e1a4.  v0:= "keySelector" @kind object;
  #L54e1a8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e1ae.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e1b4.  v3:= temp @kind object;
  #L54e1b6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e1bc.  v0:= temp;
  #L54e1be.  if v0 == 0 then goto L54e1fa;
  #L54e1c2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e1c8.  v0:= temp @kind object;
  #L54e1ca.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e1d0.  v1:= temp @kind object;
  #L54e1d2.  call temp:= `get`(v4, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e1d8.  v2:= temp @kind object;
  #L54e1da.  if v2 != 0 then goto L54e1ee;
  #L54e1de.  v2:= new `java.util.ArrayList`;
  #L54e1e2.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e1e8.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e1ee.  v2:= (`java.util.List`) v2 @kind object;
  #L54e1f2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54e1f8.  goto L54e1b6;
  #L54e1fa.  return v4 @kind object;
}
procedure `java.util.Map` `groupByTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Map` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.groupByTo:(Lkotlin/sequences/Sequence;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54e20c.  v0:= "<this>" @kind object;
  #L54e210.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e216.  v0:= "destination" @kind object;
  #L54e21a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e220.  v0:= "keySelector" @kind object;
  #L54e224.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e22a.  v0:= "valueTransform" @kind object;
  #L54e22e.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e234.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e23a.  v3:= temp @kind object;
  #L54e23c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e242.  v0:= temp;
  #L54e244.  if v0 == 0 then goto L54e288;
  #L54e248.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e24e.  v0:= temp @kind object;
  #L54e250.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e256.  v1:= temp @kind object;
  #L54e258.  call temp:= `get`(v4, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e25e.  v2:= temp @kind object;
  #L54e260.  if v2 != 0 then goto L54e274;
  #L54e264.  v2:= new `java.util.ArrayList`;
  #L54e268.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e26e.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e274.  v2:= (`java.util.List`) v2 @kind object;
  #L54e278.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e27e.  v0:= temp @kind object;
  #L54e280.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54e286.  goto L54e23c;
  #L54e288.  return v4 @kind object;
}
procedure `kotlin.collections.Grouping` `groupingBy`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.groupingBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/collections/Grouping;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e3ac.  v0:= "<this>" @kind object;
  #L54e3b0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e3b6.  v0:= "keySelector" @kind object;
  #L54e3ba.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e3c0.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1`;
  #L54e3c4.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$groupingBy$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e3ca.  return v0 @kind object;
}
procedure `int` `indexOf`(`kotlin.sequences.Sequence` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.indexOf:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54b9a8.  v0:= "<this>" @kind object;
  #L54b9ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b9b2.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b9b8.  v2:= temp @kind object;
  #L54b9ba.  v0:= 0I;
  #L54b9bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b9c2.  v1:= temp;
  #L54b9c4.  if v1 == 0 then goto L54b9ee;
  #L54b9c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b9ce.  v1:= temp @kind object;
  #L54b9d0.  if v0 >= 0 then goto L54b9da;
  #L54b9d4.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54b9da.  call temp:= `areEqual`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L54b9e0.  v1:= temp;
  #L54b9e2.  if v1 == 0 then goto L54b9e8;
  #L54b9e6.  return v0;
  #L54b9e8.  v0:= v0 + 1;
  #L54b9ec.  goto L54b9bc;
  #L54b9ee.  v2:= -1I;
  #L54b9f0.  return v2;
}
procedure `int` `indexOfFirst`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.indexOfFirst:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ba04.  v0:= "<this>" @kind object;
  #L54ba08.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ba0e.  v0:= "predicate" @kind object;
  #L54ba12.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ba18.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ba1e.  v2:= temp @kind object;
  #L54ba20.  v0:= 0I;
  #L54ba22.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ba28.  v1:= temp;
  #L54ba2a.  if v1 == 0 then goto L54ba60;
  #L54ba2e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ba34.  v1:= temp @kind object;
  #L54ba36.  if v0 >= 0 then goto L54ba40;
  #L54ba3a.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54ba40.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ba46.  v1:= temp @kind object;
  #L54ba48.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L54ba4c.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54ba52.  v1:= temp;
  #L54ba54.  if v1 == 0 then goto L54ba5a;
  #L54ba58.  return v0;
  #L54ba5a.  v0:= v0 + 1;
  #L54ba5e.  goto L54ba22;
  #L54ba60.  v2:= -1I;
  #L54ba62.  return v2;
}
procedure `int` `indexOfLast`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.indexOfLast:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54ba74.  v0:= "<this>" @kind object;
  #L54ba78.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ba7e.  v0:= "predicate" @kind object;
  #L54ba82.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ba88.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ba8e.  v3:= temp @kind object;
  #L54ba90.  v0:= -1I;
  #L54ba92.  v1:= 0I;
  #L54ba94.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ba9a.  v2:= temp;
  #L54ba9c.  if v2 == 0 then goto L54bad2;
  #L54baa0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54baa6.  v2:= temp @kind object;
  #L54baa8.  if v1 >= 0 then goto L54bab2;
  #L54baac.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54bab2.  call temp:= `invoke`(v4, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bab8.  v2:= temp @kind object;
  #L54baba.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L54babe.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54bac4.  v2:= temp;
  #L54bac6.  if v2 == 0 then goto L54bacc;
  #L54baca.  v0:= v1;
  #L54bacc.  v1:= v1 + 1;
  #L54bad0.  goto L54ba94;
  #L54bad2.  return v0;
}
procedure `java.lang.Appendable` `joinTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.lang.Appendable` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `int` v7 , `java.lang.CharSequence` v8 @kind object, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinTo:(Lkotlin/sequences/Sequence;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bdcc.  v0:= "<this>" @kind object;
  #L54bdd0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bdd6.  v0:= "buffer" @kind object;
  #L54bdda.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bde0.  v0:= "separator" @kind object;
  #L54bde4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bdea.  v0:= "prefix" @kind object;
  #L54bdee.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bdf4.  v0:= "postfix" @kind object;
  #L54bdf8.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bdfe.  v0:= "truncated" @kind object;
  #L54be02.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54be08.  call temp:= `append`(v3, v5) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L54be0e.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54be14.  v2:= temp @kind object;
  #L54be16.  v5:= 0I;
  #L54be18.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54be1e.  v0:= temp;
  #L54be20.  if v0 == 0 then goto L54be4c;
  #L54be24.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54be2a.  v0:= temp @kind object;
  #L54be2c.  v5:= v5 + 1;
  #L54be30.  v1:= 1I;
  #L54be32.  if v5 <= v1 then goto L54be3c;
  #L54be36.  call temp:= `append`(v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L54be3c.  if v7 < 0 then goto L54be44;
  #L54be40.  if v5 > v7 then goto L54be4c;
  #L54be44.  call `appendElement`(v3, v0, v9) @signature `Lkotlin/text/StringsKt;.appendElement:(Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind static;
  #L54be4a.  goto L54be18;
  #L54be4c.  if v7 < 0 then goto L54be5a;
  #L54be50.  if v5 <= v7 then goto L54be5a;
  #L54be54.  call temp:= `append`(v3, v8) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L54be5a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L54be60.  return v3 @kind object;
}
procedure `java.lang.Appendable` `joinTo$default`(`kotlin.sequences.Sequence` v6 @kind object, `java.lang.Appendable` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `int` v11 , `java.lang.CharSequence` v12 @kind object, `kotlin.jvm.functions.Function1` v13 @kind object, `int` v14 , `java.lang.Object` v15 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinTo$default:(Lkotlin/sequences/Sequence;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L54bd48.  v0:= v14 ^& 2;
  #L54bd4c.  if v0 == 0 then goto L54bd56;
  #L54bd50.  v0:= ", " @kind object;
  #L54bd54.  goto L54bd58;
  #L54bd56.  v0:= v8 @kind object;
  #L54bd58.  v1:= v14 ^& 4;
  #L54bd5c.  v2:= "" @kind object;
  #L54bd60.  if v1 == 0 then goto L54bd68;
  #L54bd64.  v1:= v2 @kind object;
  #L54bd66.  goto L54bd6a;
  #L54bd68.  v1:= v9 @kind object;
  #L54bd6a.  v3:= v14 ^& 8;
  #L54bd6e.  if v3 == 0 then goto L54bd74;
  #L54bd72.  goto L54bd76;
  #L54bd74.  v2:= v10 @kind object;
  #L54bd76.  v3:= v14 ^& 16;
  #L54bd7a.  if v3 == 0 then goto L54bd82;
  #L54bd7e.  v3:= -1I;
  #L54bd80.  goto L54bd84;
  #L54bd82.  v3:= v11;
  #L54bd84.  v4:= v14 ^& 32;
  #L54bd88.  if v4 == 0 then goto L54bd92;
  #L54bd8c.  v4:= "..." @kind object;
  #L54bd90.  goto L54bd94;
  #L54bd92.  v4:= v12 @kind object;
  #L54bd94.  v5:= v14 ^& 64;
  #L54bd98.  if v5 == 0 then goto L54bda0;
  #L54bd9c.  v5:= 0I;
  #L54bd9e.  goto L54bda2;
  #L54bda0.  v5:= v13 @kind object;
  #L54bda2.  v8:= v6 @kind object;
  #L54bda4.  v9:= v7 @kind object;
  #L54bda6.  v10:= v0 @kind object;
  #L54bda8.  v11:= v1 @kind object;
  #L54bdaa.  v12:= v2 @kind object;
  #L54bdac.  v13:= v3;
  #L54bdae.  v14:= v4 @kind object;
  #L54bdb0.  v15:= v5 @kind object;
  #L54bdb2.  call temp:= `joinTo`(v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinTo:(Lkotlin/sequences/Sequence;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;` @kind static;
  #L54bdb8.  v0:= temp @kind object;
  #L54bdba.  return v0 @kind object;
}
procedure `java.lang.String` `joinToString`(`kotlin.sequences.Sequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `java.lang.CharSequence` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 , `java.lang.CharSequence` v14 @kind object, `kotlin.jvm.functions.Function1` v15 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinToString:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L54d680.  v0:= "<this>" @kind object;
  #L54d684.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d68a.  v0:= "separator" @kind object;
  #L54d68e.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d694.  v0:= "prefix" @kind object;
  #L54d698.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d69e.  v0:= "postfix" @kind object;
  #L54d6a2.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d6a8.  v0:= "truncated" @kind object;
  #L54d6ac.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d6b2.  v2:= new `java.lang.StringBuilder`;
  #L54d6b6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54d6bc.  v1:= v9 @kind object;
  #L54d6be.  v3:= v10 @kind object;
  #L54d6c0.  v4:= v11 @kind object;
  #L54d6c2.  v5:= v12 @kind object;
  #L54d6c4.  v6:= v13;
  #L54d6c6.  v7:= v14 @kind object;
  #L54d6c8.  v8:= v15 @kind object;
  #L54d6ca.  call temp:= `joinTo`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinTo:(Lkotlin/sequences/Sequence;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;` @kind static;
  #L54d6d0.  v9:= temp @kind object;
  #L54d6d2.  v9:= (`java.lang.StringBuilder`) v9 @kind object;
  #L54d6d6.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54d6dc.  v9:= temp @kind object;
  #L54d6de.  v10:= "joinTo(StringBuilder(), …ed, transform).toString()" @kind object;
  #L54d6e2.  call `checkNotNullExpressionValue`(v9, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d6e8.  return v9 @kind object;
}
procedure `java.lang.String` `joinToString$default`(`kotlin.sequences.Sequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object, `int` v8 , `java.lang.CharSequence` v9 @kind object, `kotlin.jvm.functions.Function1` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d604.  v12:= v11 ^& 1;
  #L54d608.  if v12 == 0 then goto L54d610;
  #L54d60c.  v5:= ", " @kind object;
  #L54d610.  v12:= v11 ^& 2;
  #L54d614.  v0:= "" @kind object;
  #L54d618.  if v12 == 0 then goto L54d620;
  #L54d61c.  v12:= v0 @kind object;
  #L54d61e.  goto L54d622;
  #L54d620.  v12:= v6 @kind object;
  #L54d622.  v6:= v11 ^& 4;
  #L54d626.  if v6 == 0 then goto L54d62c;
  #L54d62a.  goto L54d62e;
  #L54d62c.  v0:= v7 @kind object;
  #L54d62e.  v6:= v11 ^& 8;
  #L54d632.  if v6 == 0 then goto L54d63c;
  #L54d636.  v8:= -1I;
  #L54d638.  v1:= -1I;
  #L54d63a.  goto L54d63e;
  #L54d63c.  v1:= v8;
  #L54d63e.  v6:= v11 ^& 16;
  #L54d642.  if v6 == 0 then goto L54d64a;
  #L54d646.  v9:= "..." @kind object;
  #L54d64a.  v2:= v9 @kind object;
  #L54d64c.  v6:= v11 ^& 32;
  #L54d650.  if v6 == 0 then goto L54d656;
  #L54d654.  v10:= 0I;
  #L54d656.  v3:= v10 @kind object;
  #L54d658.  v6:= v4 @kind object;
  #L54d65a.  v7:= v5 @kind object;
  #L54d65c.  v8:= v12 @kind object;
  #L54d65e.  v9:= v0 @kind object;
  #L54d660.  v10:= v1;
  #L54d662.  v11:= v2 @kind object;
  #L54d664.  v12:= v3 @kind object;
  #L54d666.  call temp:= `joinToString`(v6, v7, v8, v9, v10, v11, v12) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.joinToString:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;` @kind static;
  #L54d66c.  v4:= temp @kind object;
  #L54d66e.  return v4 @kind object;
}
procedure `java.lang.Object` `last`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.last:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L54cb2c.  v0:= "<this>" @kind object;
  #L54cb30.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cb36.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cb3c.  v2:= temp @kind object;
  #L54cb3e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cb44.  v0:= temp;
  #L54cb46.  if v0 == 0 then goto L54cb6a;
  #L54cb4a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cb50.  v0:= temp @kind object;
  #L54cb52.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cb58.  v1:= temp;
  #L54cb5a.  if v1 == 0 then goto L54cb68;
  #L54cb5e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cb64.  v0:= temp @kind object;
  #L54cb66.  goto L54cb52;
  #L54cb68.  return v0 @kind object;
  #L54cb6a.  v2:= new `java.util.NoSuchElementException`;
  #L54cb6e.  v0:= "Sequence is empty." @kind object;
  #L54cb72.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54cb78.  goto L54cb7c;
  #L54cb7a.  throw v2;
  #L54cb7c.  goto L54cb7a;
}
procedure `java.lang.Object` `last`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.last:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54cb90.  v0:= "<this>" @kind object;
  #L54cb94.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cb9a.  v0:= "predicate" @kind object;
  #L54cb9e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cba4.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cbaa.  v4:= temp @kind object;
  #L54cbac.  v0:= 0I;
  #L54cbae.  v1:= 0I;
  #L54cbb0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cbb6.  v2:= temp;
  #L54cbb8.  if v2 == 0 then goto L54cbe2;
  #L54cbbc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cbc2.  v2:= temp @kind object;
  #L54cbc4.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cbca.  v3:= temp @kind object;
  #L54cbcc.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L54cbd0.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54cbd6.  v3:= temp;
  #L54cbd8.  if v3 == 0 then goto L54cbb0;
  #L54cbdc.  v1:= 1I;
  #L54cbde.  v0:= v2 @kind object;
  #L54cbe0.  goto L54cbb0;
  #L54cbe2.  if v1 == 0 then goto L54cbe8;
  #L54cbe6.  return v0 @kind object;
  #L54cbe8.  v4:= new `java.util.NoSuchElementException`;
  #L54cbec.  v5:= "Sequence contains no element matching the predicate." @kind object;
  #L54cbf0.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54cbf6.  goto L54cbfa;
  #L54cbf8.  throw v4;
  #L54cbfa.  goto L54cbf8;
}
procedure `int` `lastIndexOf`(`kotlin.sequences.Sequence` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.lastIndexOf:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54bae4.  v0:= "<this>" @kind object;
  #L54bae8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54baee.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54baf4.  v3:= temp @kind object;
  #L54baf6.  v0:= -1I;
  #L54baf8.  v1:= 0I;
  #L54bafa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bb00.  v2:= temp;
  #L54bb02.  if v2 == 0 then goto L54bb2c;
  #L54bb06.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bb0c.  v2:= temp @kind object;
  #L54bb0e.  if v1 >= 0 then goto L54bb18;
  #L54bb12.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54bb18.  call temp:= `areEqual`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L54bb1e.  v2:= temp;
  #L54bb20.  if v2 == 0 then goto L54bb26;
  #L54bb24.  v0:= v1;
  #L54bb26.  v1:= v1 + 1;
  #L54bb2a.  goto L54bafa;
  #L54bb2c.  return v0;
}
procedure `java.lang.Object` `lastOrNull`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.lastOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54cc0c.  v0:= "<this>" @kind object;
  #L54cc10.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cc16.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cc1c.  v2:= temp @kind object;
  #L54cc1e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cc24.  v0:= temp;
  #L54cc26.  if v0 != 0 then goto L54cc2e;
  #L54cc2a.  v2:= 0I;
  #L54cc2c.  return v2 @kind object;
  #L54cc2e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cc34.  v0:= temp @kind object;
  #L54cc36.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cc3c.  v1:= temp;
  #L54cc3e.  if v1 == 0 then goto L54cc4c;
  #L54cc42.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cc48.  v0:= temp @kind object;
  #L54cc4a.  goto L54cc36;
  #L54cc4c.  return v0 @kind object;
}
procedure `java.lang.Object` `lastOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.lastOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54cc60.  v0:= "<this>" @kind object;
  #L54cc64.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cc6a.  v0:= "predicate" @kind object;
  #L54cc6e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cc74.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cc7a.  v3:= temp @kind object;
  #L54cc7c.  v0:= 0I;
  #L54cc7e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cc84.  v1:= temp;
  #L54cc86.  if v1 == 0 then goto L54ccae;
  #L54cc8a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cc90.  v1:= temp @kind object;
  #L54cc92.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cc98.  v2:= temp @kind object;
  #L54cc9a.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L54cc9e.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54cca4.  v2:= temp;
  #L54cca6.  if v2 == 0 then goto L54cc7e;
  #L54ccaa.  v0:= v1 @kind object;
  #L54ccac.  goto L54cc7e;
  #L54ccae.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `map`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54e750.  v0:= "<this>" @kind object;
  #L54e754.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e75a.  v0:= "transform" @kind object;
  #L54e75e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e764.  v0:= new `kotlin.sequences.TransformingSequence`;
  #L54e768.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TransformingSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e76e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `mapIndexed`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e780.  v0:= "<this>" @kind object;
  #L54e784.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e78a.  v0:= "transform" @kind object;
  #L54e78e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e794.  v0:= new `kotlin.sequences.TransformingIndexedSequence`;
  #L54e798.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TransformingIndexedSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54e79e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `mapIndexedNotNull`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapIndexedNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e7b0.  v0:= "<this>" @kind object;
  #L54e7b4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e7ba.  v0:= "transform" @kind object;
  #L54e7be.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e7c4.  v0:= new `kotlin.sequences.TransformingIndexedSequence`;
  #L54e7c8.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TransformingIndexedSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54e7ce.  call temp:= `filterNotNull`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotNull:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e7d4.  v1:= temp @kind object;
  #L54e7d6.  return v1 @kind object;
}
procedure `java.util.Collection` `mapIndexedNotNullTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapIndexedNotNullTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54dac4.  v0:= "<this>" @kind object;
  #L54dac8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dace.  v0:= "destination" @kind object;
  #L54dad2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dad8.  v0:= "transform" @kind object;
  #L54dadc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dae2.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dae8.  v3:= temp @kind object;
  #L54daea.  v0:= 0I;
  #L54daec.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54daf2.  v1:= temp;
  #L54daf4.  if v1 == 0 then goto L54db2c;
  #L54daf8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dafe.  v1:= temp @kind object;
  #L54db00.  v2:= v0 + 1;
  #L54db04.  if v0 >= 0 then goto L54db0e;
  #L54db08.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54db0e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54db14.  v0:= temp @kind object;
  #L54db16.  call temp:= `invoke`(v5, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54db1c.  v0:= temp @kind object;
  #L54db1e.  if v0 == 0 then goto L54db28;
  #L54db22.  call temp:= `add`(v4, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54db28.  v0:= v2;
  #L54db2a.  goto L54daec;
  #L54db2c.  return v4 @kind object;
}
procedure `java.util.Collection` `mapIndexedTo`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Collection` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapIndexedTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54db40.  v0:= "<this>" @kind object;
  #L54db44.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54db4a.  v0:= "destination" @kind object;
  #L54db4e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54db54.  v0:= "transform" @kind object;
  #L54db58.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54db5e.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54db64.  v3:= temp @kind object;
  #L54db66.  v0:= 0I;
  #L54db68.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54db6e.  v1:= temp;
  #L54db70.  if v1 == 0 then goto L54dba4;
  #L54db74.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54db7a.  v1:= temp @kind object;
  #L54db7c.  v2:= v0 + 1;
  #L54db80.  if v0 >= 0 then goto L54db8a;
  #L54db84.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54db8a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54db90.  v0:= temp @kind object;
  #L54db92.  call temp:= `invoke`(v5, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54db98.  v0:= temp @kind object;
  #L54db9a.  call temp:= `add`(v4, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54dba0.  v0:= v2;
  #L54dba2.  goto L54db68;
  #L54dba4.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `mapNotNull`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapNotNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e7e8.  v0:= "<this>" @kind object;
  #L54e7ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e7f2.  v0:= "transform" @kind object;
  #L54e7f6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e7fc.  v0:= new `kotlin.sequences.TransformingSequence`;
  #L54e800.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TransformingSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e806.  call temp:= `filterNotNull`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNotNull:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e80c.  v1:= temp @kind object;
  #L54e80e.  return v1 @kind object;
}
procedure `java.util.Collection` `mapNotNullTo`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapNotNullTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54dbb8.  v0:= "<this>" @kind object;
  #L54dbbc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dbc2.  v0:= "destination" @kind object;
  #L54dbc6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dbcc.  v0:= "transform" @kind object;
  #L54dbd0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dbd6.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dbdc.  v1:= temp @kind object;
  #L54dbde.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54dbe4.  v0:= temp;
  #L54dbe6.  if v0 == 0 then goto L54dc06;
  #L54dbea.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dbf0.  v0:= temp @kind object;
  #L54dbf2.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54dbf8.  v0:= temp @kind object;
  #L54dbfa.  if v0 == 0 then goto L54dbde;
  #L54dbfe.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54dc04.  goto L54dbde;
  #L54dc06.  return v2 @kind object;
}
procedure `java.util.Collection` `mapTo`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54dc18.  v0:= "<this>" @kind object;
  #L54dc1c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dc22.  v0:= "destination" @kind object;
  #L54dc26.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dc2c.  v0:= "transform" @kind object;
  #L54dc30.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dc36.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dc3c.  v1:= temp @kind object;
  #L54dc3e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54dc44.  v0:= temp;
  #L54dc46.  if v0 == 0 then goto L54dc62;
  #L54dc4a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dc50.  v0:= temp @kind object;
  #L54dc52.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54dc58.  v0:= temp @kind object;
  #L54dc5a.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54dc60.  goto L54dc3e;
  #L54dc62.  return v2 @kind object;
}
procedure `java.lang.Comparable` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54be74.  v0:= "<this>" @kind object;
  #L54be78.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54be7e.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @kind static;
  #L54be84.  v1:= temp @kind object;
  #L54be86.  return v1 @kind object;
}
procedure `java.lang.Double` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54c1b4.  v0:= "<this>" @kind object;
  #L54c1b8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c1be.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @kind static;
  #L54c1c4.  v1:= temp @kind object;
  #L54c1c6.  return v1 @kind object;
}
procedure `java.lang.Float` `max`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.max:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54c41c.  v0:= "<this>" @kind object;
  #L54c420.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c426.  call temp:= `maxOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @kind static;
  #L54c42c.  v1:= temp @kind object;
  #L54c42e.  return v1 @kind object;
}
procedure `java.lang.Object` `maxBy`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54ccc0.  v0:= "<this>" @kind object;
  #L54ccc4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ccca.  v0:= "selector" @kind object;
  #L54ccce.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ccd4.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ccda.  v5:= temp @kind object;
  #L54ccdc.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cce2.  v0:= temp;
  #L54cce4.  if v0 != 0 then goto L54ccec;
  #L54cce8.  v5:= 0I;
  #L54ccea.  goto L54cd42;
  #L54ccec.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ccf2.  v0:= temp @kind object;
  #L54ccf4.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ccfa.  v1:= temp;
  #L54ccfc.  if v1 != 0 then goto L54cd04;
  #L54cd00.  v5:= v0 @kind object;
  #L54cd02.  goto L54cd42;
  #L54cd04.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cd0a.  v1:= temp @kind object;
  #L54cd0c.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54cd10.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cd16.  v2:= temp @kind object;
  #L54cd18.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cd1e.  v3:= temp @kind object;
  #L54cd20.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L54cd24.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54cd2a.  v4:= temp;
  #L54cd2c.  if v4 >= 0 then goto L54cd34;
  #L54cd30.  v0:= v2 @kind object;
  #L54cd32.  v1:= v3 @kind object;
  #L54cd34.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cd3a.  v2:= temp;
  #L54cd3c.  if v2 != 0 then goto L54cd10;
  #L54cd40.  goto L54cd00;
  #L54cd42.  return v5 @kind object;
}
procedure `java.lang.Object` `maxByOrNull`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxByOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54cd54.  v0:= "<this>" @kind object;
  #L54cd58.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cd5e.  v0:= "selector" @kind object;
  #L54cd62.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cd68.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cd6e.  v5:= temp @kind object;
  #L54cd70.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cd76.  v0:= temp;
  #L54cd78.  if v0 != 0 then goto L54cd80;
  #L54cd7c.  v5:= 0I;
  #L54cd7e.  return v5 @kind object;
  #L54cd80.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cd86.  v0:= temp @kind object;
  #L54cd88.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cd8e.  v1:= temp;
  #L54cd90.  if v1 != 0 then goto L54cd96;
  #L54cd94.  return v0 @kind object;
  #L54cd96.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cd9c.  v1:= temp @kind object;
  #L54cd9e.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54cda2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cda8.  v2:= temp @kind object;
  #L54cdaa.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cdb0.  v3:= temp @kind object;
  #L54cdb2.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L54cdb6.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54cdbc.  v4:= temp;
  #L54cdbe.  if v4 >= 0 then goto L54cdc6;
  #L54cdc2.  v0:= v2 @kind object;
  #L54cdc4.  v1:= v3 @kind object;
  #L54cdc6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cdcc.  v2:= temp;
  #L54cdce.  if v2 != 0 then goto L54cda2;
  #L54cdd2.  return v0 @kind object;
}
procedure `double` `maxOf`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)D` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54b53c.  v0:= "<this>" @kind object;
  #L54b540.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b546.  v0:= "selector" @kind object;
  #L54b54a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b550.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b556.  v4:= temp @kind object;
  #L54b558.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b55e.  v0:= temp;
  #L54b560.  if v0 == 0 then goto L54b5b4;
  #L54b564.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b56a.  v0:= temp @kind object;
  #L54b56c.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b572.  v0:= temp @kind object;
  #L54b574.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54b578.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b57e.  v0:= temp @kind wide;
  #L54b580.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b586.  v2:= temp;
  #L54b588.  if v2 == 0 then goto L54b5b2;
  #L54b58c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b592.  v2:= temp @kind object;
  #L54b594.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b59a.  v2:= temp @kind object;
  #L54b59c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54b5a0.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b5a6.  v2:= temp @kind wide;
  #L54b5a8.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L54b5ae.  v0:= temp @kind wide;
  #L54b5b0.  goto L54b580;
  #L54b5b2.  return v0 @kind wide;
  #L54b5b4.  v4:= new `java.util.NoSuchElementException`;
  #L54b5b8.  call `<init>`(v4) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54b5be.  goto L54b5c2;
  #L54b5c0.  throw v4;
  #L54b5c2.  goto L54b5c0;
}
procedure `float` `maxOf`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)F` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54b778.  v0:= "<this>" @kind object;
  #L54b77c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b782.  v0:= "selector" @kind object;
  #L54b786.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b78c.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b792.  v2:= temp @kind object;
  #L54b794.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b79a.  v0:= temp;
  #L54b79c.  if v0 == 0 then goto L54b7f0;
  #L54b7a0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b7a6.  v0:= temp @kind object;
  #L54b7a8.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b7ae.  v0:= temp @kind object;
  #L54b7b0.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54b7b4.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b7ba.  v0:= temp;
  #L54b7bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b7c2.  v1:= temp;
  #L54b7c4.  if v1 == 0 then goto L54b7ee;
  #L54b7c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b7ce.  v1:= temp @kind object;
  #L54b7d0.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b7d6.  v1:= temp @kind object;
  #L54b7d8.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54b7dc.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b7e2.  v1:= temp;
  #L54b7e4.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L54b7ea.  v0:= temp;
  #L54b7ec.  goto L54b7bc;
  #L54b7ee.  return v0;
  #L54b7f0.  v2:= new `java.util.NoSuchElementException`;
  #L54b7f4.  call `<init>`(v2) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54b7fa.  goto L54b7fe;
  #L54b7fc.  throw v2;
  #L54b7fe.  goto L54b7fc;
}
procedure `java.lang.Comparable` `maxOf`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Comparable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54be98.  v0:= "<this>" @kind object;
  #L54be9c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bea2.  v0:= "selector" @kind object;
  #L54bea6.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54beac.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54beb2.  v3:= temp @kind object;
  #L54beb4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54beba.  v0:= temp;
  #L54bebc.  if v0 == 0 then goto L54bf06;
  #L54bec0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bec6.  v0:= temp @kind object;
  #L54bec8.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bece.  v0:= temp @kind object;
  #L54bed0.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54bed4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54beda.  v1:= temp;
  #L54bedc.  if v1 == 0 then goto L54bf04;
  #L54bee0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bee6.  v1:= temp @kind object;
  #L54bee8.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54beee.  v1:= temp @kind object;
  #L54bef0.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54bef4.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54befa.  v2:= temp;
  #L54befc.  if v2 >= 0 then goto L54bed4;
  #L54bf00.  v0:= v1 @kind object;
  #L54bf02.  goto L54bed4;
  #L54bf04.  return v0 @kind object;
  #L54bf06.  v3:= new `java.util.NoSuchElementException`;
  #L54bf0a.  call `<init>`(v3) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54bf10.  goto L54bf14;
  #L54bf12.  throw v3;
  #L54bf14.  goto L54bf12;
}
procedure `java.lang.Comparable` `maxOfOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Comparable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54bf28.  v0:= "<this>" @kind object;
  #L54bf2c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bf32.  v0:= "selector" @kind object;
  #L54bf36.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bf3c.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bf42.  v3:= temp @kind object;
  #L54bf44.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bf4a.  v0:= temp;
  #L54bf4c.  if v0 != 0 then goto L54bf54;
  #L54bf50.  v3:= 0I;
  #L54bf52.  return v3 @kind object;
  #L54bf54.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bf5a.  v0:= temp @kind object;
  #L54bf5c.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bf62.  v0:= temp @kind object;
  #L54bf64.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54bf68.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bf6e.  v1:= temp;
  #L54bf70.  if v1 == 0 then goto L54bf98;
  #L54bf74.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bf7a.  v1:= temp @kind object;
  #L54bf7c.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bf82.  v1:= temp @kind object;
  #L54bf84.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54bf88.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54bf8e.  v2:= temp;
  #L54bf90.  if v2 >= 0 then goto L54bf68;
  #L54bf94.  v0:= v1 @kind object;
  #L54bf96.  goto L54bf68;
  #L54bf98.  return v0 @kind object;
}
procedure `java.lang.Double` `maxOfOrNull`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Double;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54c1d8.  v0:= "<this>" @kind object;
  #L54c1dc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c1e2.  v0:= "selector" @kind object;
  #L54c1e6.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c1ec.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c1f2.  v4:= temp @kind object;
  #L54c1f4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c1fa.  v0:= temp;
  #L54c1fc.  if v0 != 0 then goto L54c204;
  #L54c200.  v4:= 0I;
  #L54c202.  return v4 @kind object;
  #L54c204.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c20a.  v0:= temp @kind object;
  #L54c20c.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c212.  v0:= temp @kind object;
  #L54c214.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c218.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c21e.  v0:= temp @kind wide;
  #L54c220.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c226.  v2:= temp;
  #L54c228.  if v2 == 0 then goto L54c252;
  #L54c22c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c232.  v2:= temp @kind object;
  #L54c234.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c23a.  v2:= temp @kind object;
  #L54c23c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54c240.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c246.  v2:= temp @kind wide;
  #L54c248.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L54c24e.  v0:= temp @kind wide;
  #L54c250.  goto L54c220;
  #L54c252.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L54c258.  v4:= temp @kind object;
  #L54c25a.  return v4 @kind object;
}
procedure `java.lang.Float` `maxOfOrNull`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Float;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c440.  v0:= "<this>" @kind object;
  #L54c444.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c44a.  v0:= "selector" @kind object;
  #L54c44e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c454.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c45a.  v2:= temp @kind object;
  #L54c45c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c462.  v0:= temp;
  #L54c464.  if v0 != 0 then goto L54c46c;
  #L54c468.  v2:= 0I;
  #L54c46a.  return v2 @kind object;
  #L54c46c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c472.  v0:= temp @kind object;
  #L54c474.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c47a.  v0:= temp @kind object;
  #L54c47c.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c480.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c486.  v0:= temp;
  #L54c488.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c48e.  v1:= temp;
  #L54c490.  if v1 == 0 then goto L54c4ba;
  #L54c494.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c49a.  v1:= temp @kind object;
  #L54c49c.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c4a2.  v1:= temp @kind object;
  #L54c4a4.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54c4a8.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c4ae.  v1:= temp;
  #L54c4b0.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L54c4b6.  v0:= temp;
  #L54c4b8.  goto L54c488;
  #L54c4ba.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L54c4c0.  v2:= temp @kind object;
  #L54c4c2.  return v2 @kind object;
}
procedure `java.lang.Object` `maxOfWith`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOfWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54cde4.  v0:= "<this>" @kind object;
  #L54cde8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cdee.  v0:= "comparator" @kind object;
  #L54cdf2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cdf8.  v0:= "selector" @kind object;
  #L54cdfc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ce02.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ce08.  v3:= temp @kind object;
  #L54ce0a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ce10.  v0:= temp;
  #L54ce12.  if v0 == 0 then goto L54ce54;
  #L54ce16.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ce1c.  v0:= temp @kind object;
  #L54ce1e.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ce24.  v0:= temp @kind object;
  #L54ce26.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ce2c.  v1:= temp;
  #L54ce2e.  if v1 == 0 then goto L54ce52;
  #L54ce32.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ce38.  v1:= temp @kind object;
  #L54ce3a.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ce40.  v1:= temp @kind object;
  #L54ce42.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54ce48.  v2:= temp;
  #L54ce4a.  if v2 >= 0 then goto L54ce26;
  #L54ce4e.  v0:= v1 @kind object;
  #L54ce50.  goto L54ce26;
  #L54ce52.  return v0 @kind object;
  #L54ce54.  v3:= new `java.util.NoSuchElementException`;
  #L54ce58.  call `<init>`(v3) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54ce5e.  goto L54ce62;
  #L54ce60.  throw v3;
  #L54ce62.  goto L54ce60;
}
procedure `java.lang.Object` `maxOfWithOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOfWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54ce74.  v0:= "<this>" @kind object;
  #L54ce78.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ce7e.  v0:= "comparator" @kind object;
  #L54ce82.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ce88.  v0:= "selector" @kind object;
  #L54ce8c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ce92.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ce98.  v3:= temp @kind object;
  #L54ce9a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cea0.  v0:= temp;
  #L54cea2.  if v0 != 0 then goto L54ceaa;
  #L54cea6.  v3:= 0I;
  #L54cea8.  return v3 @kind object;
  #L54ceaa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ceb0.  v0:= temp @kind object;
  #L54ceb2.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ceb8.  v0:= temp @kind object;
  #L54ceba.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cec0.  v1:= temp;
  #L54cec2.  if v1 == 0 then goto L54cee6;
  #L54cec6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cecc.  v1:= temp @kind object;
  #L54cece.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54ced4.  v1:= temp @kind object;
  #L54ced6.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54cedc.  v2:= temp;
  #L54cede.  if v2 >= 0 then goto L54ceba;
  #L54cee2.  v0:= v1 @kind object;
  #L54cee4.  goto L54ceba;
  #L54cee6.  return v0 @kind object;
}
procedure `java.lang.Comparable` `maxOrNull`(`kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54bfac.  v0:= "<this>" @kind object;
  #L54bfb0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bfb6.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bfbc.  v3:= temp @kind object;
  #L54bfbe.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bfc4.  v0:= temp;
  #L54bfc6.  if v0 != 0 then goto L54bfce;
  #L54bfca.  v3:= 0I;
  #L54bfcc.  return v3 @kind object;
  #L54bfce.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bfd4.  v0:= temp @kind object;
  #L54bfd6.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54bfda.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bfe0.  v1:= temp;
  #L54bfe2.  if v1 == 0 then goto L54c002;
  #L54bfe6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bfec.  v1:= temp @kind object;
  #L54bfee.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54bff2.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54bff8.  v2:= temp;
  #L54bffa.  if v2 >= 0 then goto L54bfda;
  #L54bffe.  v0:= v1 @kind object;
  #L54c000.  goto L54bfda;
  #L54c002.  return v0 @kind object;
}
procedure `java.lang.Double` `maxOrNull`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54c26c.  v0:= "<this>" @kind object;
  #L54c270.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c276.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c27c.  v4:= temp @kind object;
  #L54c27e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c284.  v0:= temp;
  #L54c286.  if v0 != 0 then goto L54c28e;
  #L54c28a.  v4:= 0I;
  #L54c28c.  return v4 @kind object;
  #L54c28e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c294.  v0:= temp @kind object;
  #L54c296.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c29a.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c2a0.  v0:= temp @kind wide;
  #L54c2a2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c2a8.  v2:= temp;
  #L54c2aa.  if v2 == 0 then goto L54c2cc;
  #L54c2ae.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c2b4.  v2:= temp @kind object;
  #L54c2b6.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54c2ba.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c2c0.  v2:= temp @kind wide;
  #L54c2c2.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L54c2c8.  v0:= temp @kind wide;
  #L54c2ca.  goto L54c2a2;
  #L54c2cc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L54c2d2.  v4:= temp @kind object;
  #L54c2d4.  return v4 @kind object;
}
procedure `java.lang.Float` `maxOrNull`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c4d4.  v0:= "<this>" @kind object;
  #L54c4d8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c4de.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c4e4.  v2:= temp @kind object;
  #L54c4e6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c4ec.  v0:= temp;
  #L54c4ee.  if v0 != 0 then goto L54c4f6;
  #L54c4f2.  v2:= 0I;
  #L54c4f4.  return v2 @kind object;
  #L54c4f6.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c4fc.  v0:= temp @kind object;
  #L54c4fe.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c502.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c508.  v0:= temp;
  #L54c50a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c510.  v1:= temp;
  #L54c512.  if v1 == 0 then goto L54c534;
  #L54c516.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c51c.  v1:= temp @kind object;
  #L54c51e.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54c522.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c528.  v1:= temp;
  #L54c52a.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L54c530.  v0:= temp;
  #L54c532.  goto L54c50a;
  #L54c534.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L54c53a.  v2:= temp @kind object;
  #L54c53c.  return v2 @kind object;
}
procedure `java.lang.Object` `maxWith`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54cef8.  v0:= "<this>" @kind object;
  #L54cefc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cf02.  v0:= "comparator" @kind object;
  #L54cf06.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cf0c.  call temp:= `maxWithOrNull`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L54cf12.  v1:= temp @kind object;
  #L54cf14.  return v1 @kind object;
}
procedure `java.lang.Object` `maxWithOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.maxWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54cf28.  v0:= "<this>" @kind object;
  #L54cf2c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cf32.  v0:= "comparator" @kind object;
  #L54cf36.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cf3c.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cf42.  v3:= temp @kind object;
  #L54cf44.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cf4a.  v0:= temp;
  #L54cf4c.  if v0 != 0 then goto L54cf54;
  #L54cf50.  v3:= 0I;
  #L54cf52.  return v3 @kind object;
  #L54cf54.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cf5a.  v0:= temp @kind object;
  #L54cf5c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cf62.  v1:= temp;
  #L54cf64.  if v1 == 0 then goto L54cf80;
  #L54cf68.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cf6e.  v1:= temp @kind object;
  #L54cf70.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54cf76.  v2:= temp;
  #L54cf78.  if v2 >= 0 then goto L54cf5c;
  #L54cf7c.  v0:= v1 @kind object;
  #L54cf7e.  goto L54cf5c;
  #L54cf80.  return v0 @kind object;
}
procedure `java.lang.Comparable` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54c014.  v0:= "<this>" @kind object;
  #L54c018.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c01e.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @kind static;
  #L54c024.  v1:= temp @kind object;
  #L54c026.  return v1 @kind object;
}
procedure `java.lang.Double` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54c2e8.  v0:= "<this>" @kind object;
  #L54c2ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c2f2.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @kind static;
  #L54c2f8.  v1:= temp @kind object;
  #L54c2fa.  return v1 @kind object;
}
procedure `java.lang.Float` `min`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.min:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54c550.  v0:= "<this>" @kind object;
  #L54c554.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c55a.  call temp:= `minOrNull`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @kind static;
  #L54c560.  v1:= temp @kind object;
  #L54c562.  return v1 @kind object;
}
procedure `java.lang.Object` `minBy`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54cf94.  v0:= "<this>" @kind object;
  #L54cf98.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cf9e.  v0:= "selector" @kind object;
  #L54cfa2.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54cfa8.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54cfae.  v5:= temp @kind object;
  #L54cfb0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cfb6.  v0:= temp;
  #L54cfb8.  if v0 != 0 then goto L54cfc0;
  #L54cfbc.  v5:= 0I;
  #L54cfbe.  goto L54d016;
  #L54cfc0.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cfc6.  v0:= temp @kind object;
  #L54cfc8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cfce.  v1:= temp;
  #L54cfd0.  if v1 != 0 then goto L54cfd8;
  #L54cfd4.  v5:= v0 @kind object;
  #L54cfd6.  goto L54d016;
  #L54cfd8.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cfde.  v1:= temp @kind object;
  #L54cfe0.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54cfe4.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cfea.  v2:= temp @kind object;
  #L54cfec.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54cff2.  v3:= temp @kind object;
  #L54cff4.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L54cff8.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54cffe.  v4:= temp;
  #L54d000.  if v4 <= 0 then goto L54d008;
  #L54d004.  v0:= v2 @kind object;
  #L54d006.  v1:= v3 @kind object;
  #L54d008.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d00e.  v2:= temp;
  #L54d010.  if v2 != 0 then goto L54cfe4;
  #L54d014.  goto L54cfd4;
  #L54d016.  return v5 @kind object;
}
procedure `java.lang.Object` `minByOrNull`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minByOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54d028.  v0:= "<this>" @kind object;
  #L54d02c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d032.  v0:= "selector" @kind object;
  #L54d036.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d03c.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d042.  v5:= temp @kind object;
  #L54d044.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d04a.  v0:= temp;
  #L54d04c.  if v0 != 0 then goto L54d054;
  #L54d050.  v5:= 0I;
  #L54d052.  return v5 @kind object;
  #L54d054.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d05a.  v0:= temp @kind object;
  #L54d05c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d062.  v1:= temp;
  #L54d064.  if v1 != 0 then goto L54d06a;
  #L54d068.  return v0 @kind object;
  #L54d06a.  call temp:= `invoke`(v6, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d070.  v1:= temp @kind object;
  #L54d072.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54d076.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d07c.  v2:= temp @kind object;
  #L54d07e.  call temp:= `invoke`(v6, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d084.  v3:= temp @kind object;
  #L54d086.  v3:= (`java.lang.Comparable`) v3 @kind object;
  #L54d08a.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54d090.  v4:= temp;
  #L54d092.  if v4 <= 0 then goto L54d09a;
  #L54d096.  v0:= v2 @kind object;
  #L54d098.  v1:= v3 @kind object;
  #L54d09a.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d0a0.  v2:= temp;
  #L54d0a2.  if v2 != 0 then goto L54d076;
  #L54d0a6.  return v0 @kind object;
}
procedure `double` `minOf`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)D` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54b5d4.  v0:= "<this>" @kind object;
  #L54b5d8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b5de.  v0:= "selector" @kind object;
  #L54b5e2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b5e8.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b5ee.  v4:= temp @kind object;
  #L54b5f0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b5f6.  v0:= temp;
  #L54b5f8.  if v0 == 0 then goto L54b64c;
  #L54b5fc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b602.  v0:= temp @kind object;
  #L54b604.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b60a.  v0:= temp @kind object;
  #L54b60c.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54b610.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b616.  v0:= temp @kind wide;
  #L54b618.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b61e.  v2:= temp;
  #L54b620.  if v2 == 0 then goto L54b64a;
  #L54b624.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b62a.  v2:= temp @kind object;
  #L54b62c.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b632.  v2:= temp @kind object;
  #L54b634.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54b638.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b63e.  v2:= temp @kind wide;
  #L54b640.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L54b646.  v0:= temp @kind wide;
  #L54b648.  goto L54b618;
  #L54b64a.  return v0 @kind wide;
  #L54b64c.  v4:= new `java.util.NoSuchElementException`;
  #L54b650.  call `<init>`(v4) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54b656.  goto L54b65a;
  #L54b658.  throw v4;
  #L54b65a.  goto L54b658;
}
procedure `float` `minOf`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)F` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54b810.  v0:= "<this>" @kind object;
  #L54b814.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b81a.  v0:= "selector" @kind object;
  #L54b81e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b824.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b82a.  v2:= temp @kind object;
  #L54b82c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b832.  v0:= temp;
  #L54b834.  if v0 == 0 then goto L54b888;
  #L54b838.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b83e.  v0:= temp @kind object;
  #L54b840.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b846.  v0:= temp @kind object;
  #L54b848.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54b84c.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b852.  v0:= temp;
  #L54b854.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b85a.  v1:= temp;
  #L54b85c.  if v1 == 0 then goto L54b886;
  #L54b860.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b866.  v1:= temp @kind object;
  #L54b868.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b86e.  v1:= temp @kind object;
  #L54b870.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54b874.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b87a.  v1:= temp;
  #L54b87c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L54b882.  v0:= temp;
  #L54b884.  goto L54b854;
  #L54b886.  return v0;
  #L54b888.  v2:= new `java.util.NoSuchElementException`;
  #L54b88c.  call `<init>`(v2) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54b892.  goto L54b896;
  #L54b894.  throw v2;
  #L54b896.  goto L54b894;
}
procedure `java.lang.Comparable` `minOf`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOf:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Comparable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54c038.  v0:= "<this>" @kind object;
  #L54c03c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c042.  v0:= "selector" @kind object;
  #L54c046.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c04c.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c052.  v3:= temp @kind object;
  #L54c054.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c05a.  v0:= temp;
  #L54c05c.  if v0 == 0 then goto L54c0a6;
  #L54c060.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c066.  v0:= temp @kind object;
  #L54c068.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c06e.  v0:= temp @kind object;
  #L54c070.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54c074.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c07a.  v1:= temp;
  #L54c07c.  if v1 == 0 then goto L54c0a4;
  #L54c080.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c086.  v1:= temp @kind object;
  #L54c088.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c08e.  v1:= temp @kind object;
  #L54c090.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54c094.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54c09a.  v2:= temp;
  #L54c09c.  if v2 <= 0 then goto L54c074;
  #L54c0a0.  v0:= v1 @kind object;
  #L54c0a2.  goto L54c074;
  #L54c0a4.  return v0 @kind object;
  #L54c0a6.  v3:= new `java.util.NoSuchElementException`;
  #L54c0aa.  call `<init>`(v3) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54c0b0.  goto L54c0b4;
  #L54c0b2.  throw v3;
  #L54c0b4.  goto L54c0b2;
}
procedure `java.lang.Comparable` `minOfOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Comparable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54c0c8.  v0:= "<this>" @kind object;
  #L54c0cc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c0d2.  v0:= "selector" @kind object;
  #L54c0d6.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c0dc.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c0e2.  v3:= temp @kind object;
  #L54c0e4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c0ea.  v0:= temp;
  #L54c0ec.  if v0 != 0 then goto L54c0f4;
  #L54c0f0.  v3:= 0I;
  #L54c0f2.  return v3 @kind object;
  #L54c0f4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c0fa.  v0:= temp @kind object;
  #L54c0fc.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c102.  v0:= temp @kind object;
  #L54c104.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54c108.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c10e.  v1:= temp;
  #L54c110.  if v1 == 0 then goto L54c138;
  #L54c114.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c11a.  v1:= temp @kind object;
  #L54c11c.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c122.  v1:= temp @kind object;
  #L54c124.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54c128.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54c12e.  v2:= temp;
  #L54c130.  if v2 <= 0 then goto L54c108;
  #L54c134.  v0:= v1 @kind object;
  #L54c136.  goto L54c108;
  #L54c138.  return v0 @kind object;
}
procedure `java.lang.Double` `minOfOrNull`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Double;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54c30c.  v0:= "<this>" @kind object;
  #L54c310.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c316.  v0:= "selector" @kind object;
  #L54c31a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c320.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c326.  v4:= temp @kind object;
  #L54c328.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c32e.  v0:= temp;
  #L54c330.  if v0 != 0 then goto L54c338;
  #L54c334.  v4:= 0I;
  #L54c336.  return v4 @kind object;
  #L54c338.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c33e.  v0:= temp @kind object;
  #L54c340.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c346.  v0:= temp @kind object;
  #L54c348.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c34c.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c352.  v0:= temp @kind wide;
  #L54c354.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c35a.  v2:= temp;
  #L54c35c.  if v2 == 0 then goto L54c386;
  #L54c360.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c366.  v2:= temp @kind object;
  #L54c368.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c36e.  v2:= temp @kind object;
  #L54c370.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54c374.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c37a.  v2:= temp @kind wide;
  #L54c37c.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L54c382.  v0:= temp @kind wide;
  #L54c384.  goto L54c354;
  #L54c386.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L54c38c.  v4:= temp @kind object;
  #L54c38e.  return v4 @kind object;
}
procedure `java.lang.Float` `minOfOrNull`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOfOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Float;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c574.  v0:= "<this>" @kind object;
  #L54c578.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c57e.  v0:= "selector" @kind object;
  #L54c582.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c588.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c58e.  v2:= temp @kind object;
  #L54c590.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c596.  v0:= temp;
  #L54c598.  if v0 != 0 then goto L54c5a0;
  #L54c59c.  v2:= 0I;
  #L54c59e.  return v2 @kind object;
  #L54c5a0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c5a6.  v0:= temp @kind object;
  #L54c5a8.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c5ae.  v0:= temp @kind object;
  #L54c5b0.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c5b4.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c5ba.  v0:= temp;
  #L54c5bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c5c2.  v1:= temp;
  #L54c5c4.  if v1 == 0 then goto L54c5ee;
  #L54c5c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c5ce.  v1:= temp @kind object;
  #L54c5d0.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54c5d6.  v1:= temp @kind object;
  #L54c5d8.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54c5dc.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c5e2.  v1:= temp;
  #L54c5e4.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L54c5ea.  v0:= temp;
  #L54c5ec.  goto L54c5bc;
  #L54c5ee.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L54c5f4.  v2:= temp @kind object;
  #L54c5f6.  return v2 @kind object;
}
procedure `java.lang.Object` `minOfWith`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOfWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d0b8.  v0:= "<this>" @kind object;
  #L54d0bc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d0c2.  v0:= "comparator" @kind object;
  #L54d0c6.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d0cc.  v0:= "selector" @kind object;
  #L54d0d0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d0d6.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d0dc.  v3:= temp @kind object;
  #L54d0de.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d0e4.  v0:= temp;
  #L54d0e6.  if v0 == 0 then goto L54d128;
  #L54d0ea.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d0f0.  v0:= temp @kind object;
  #L54d0f2.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d0f8.  v0:= temp @kind object;
  #L54d0fa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d100.  v1:= temp;
  #L54d102.  if v1 == 0 then goto L54d126;
  #L54d106.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d10c.  v1:= temp @kind object;
  #L54d10e.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d114.  v1:= temp @kind object;
  #L54d116.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54d11c.  v2:= temp;
  #L54d11e.  if v2 <= 0 then goto L54d0fa;
  #L54d122.  v0:= v1 @kind object;
  #L54d124.  goto L54d0fa;
  #L54d126.  return v0 @kind object;
  #L54d128.  v3:= new `java.util.NoSuchElementException`;
  #L54d12c.  call `<init>`(v3) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L54d132.  goto L54d136;
  #L54d134.  throw v3;
  #L54d136.  goto L54d134;
}
procedure `java.lang.Object` `minOfWithOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOfWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d148.  v0:= "<this>" @kind object;
  #L54d14c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d152.  v0:= "comparator" @kind object;
  #L54d156.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d15c.  v0:= "selector" @kind object;
  #L54d160.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d166.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d16c.  v3:= temp @kind object;
  #L54d16e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d174.  v0:= temp;
  #L54d176.  if v0 != 0 then goto L54d17e;
  #L54d17a.  v3:= 0I;
  #L54d17c.  return v3 @kind object;
  #L54d17e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d184.  v0:= temp @kind object;
  #L54d186.  call temp:= `invoke`(v5, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d18c.  v0:= temp @kind object;
  #L54d18e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d194.  v1:= temp;
  #L54d196.  if v1 == 0 then goto L54d1ba;
  #L54d19a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d1a0.  v1:= temp @kind object;
  #L54d1a2.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d1a8.  v1:= temp @kind object;
  #L54d1aa.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54d1b0.  v2:= temp;
  #L54d1b2.  if v2 <= 0 then goto L54d18e;
  #L54d1b6.  v0:= v1 @kind object;
  #L54d1b8.  goto L54d18e;
  #L54d1ba.  return v0 @kind object;
}
procedure `java.lang.Comparable` `minOrNull`(`kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54c14c.  v0:= "<this>" @kind object;
  #L54c150.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c156.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c15c.  v3:= temp @kind object;
  #L54c15e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c164.  v0:= temp;
  #L54c166.  if v0 != 0 then goto L54c16e;
  #L54c16a.  v3:= 0I;
  #L54c16c.  return v3 @kind object;
  #L54c16e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c174.  v0:= temp @kind object;
  #L54c176.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L54c17a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c180.  v1:= temp;
  #L54c182.  if v1 == 0 then goto L54c1a2;
  #L54c186.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c18c.  v1:= temp @kind object;
  #L54c18e.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L54c192.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L54c198.  v2:= temp;
  #L54c19a.  if v2 <= 0 then goto L54c17a;
  #L54c19e.  v0:= v1 @kind object;
  #L54c1a0.  goto L54c17a;
  #L54c1a2.  return v0 @kind object;
}
procedure `java.lang.Double` `minOrNull`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Double;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54c3a0.  v0:= "<this>" @kind object;
  #L54c3a4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c3aa.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c3b0.  v4:= temp @kind object;
  #L54c3b2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c3b8.  v0:= temp;
  #L54c3ba.  if v0 != 0 then goto L54c3c2;
  #L54c3be.  v4:= 0I;
  #L54c3c0.  return v4 @kind object;
  #L54c3c2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c3c8.  v0:= temp @kind object;
  #L54c3ca.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c3ce.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c3d4.  v0:= temp @kind wide;
  #L54c3d6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c3dc.  v2:= temp;
  #L54c3de.  if v2 == 0 then goto L54c400;
  #L54c3e2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c3e8.  v2:= temp @kind object;
  #L54c3ea.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54c3ee.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54c3f4.  v2:= temp @kind wide;
  #L54c3f6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L54c3fc.  v0:= temp @kind wide;
  #L54c3fe.  goto L54c3d6;
  #L54c400.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L54c406.  v4:= temp @kind object;
  #L54c408.  return v4 @kind object;
}
procedure `java.lang.Float` `minOrNull`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Float;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54c608.  v0:= "<this>" @kind object;
  #L54c60c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54c612.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54c618.  v2:= temp @kind object;
  #L54c61a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c620.  v0:= temp;
  #L54c622.  if v0 != 0 then goto L54c62a;
  #L54c626.  v2:= 0I;
  #L54c628.  return v2 @kind object;
  #L54c62a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c630.  v0:= temp @kind object;
  #L54c632.  v0:= (`java.lang.Number`) v0 @kind object;
  #L54c636.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c63c.  v0:= temp;
  #L54c63e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54c644.  v1:= temp;
  #L54c646.  if v1 == 0 then goto L54c668;
  #L54c64a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54c650.  v1:= temp @kind object;
  #L54c652.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54c656.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54c65c.  v1:= temp;
  #L54c65e.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L54c664.  v0:= temp;
  #L54c666.  goto L54c63e;
  #L54c668.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L54c66e.  v2:= temp @kind object;
  #L54c670.  return v2 @kind object;
}
procedure `java.lang.Object` `minWith`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L54d1cc.  v0:= "<this>" @kind object;
  #L54d1d0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d1d6.  v0:= "comparator" @kind object;
  #L54d1da.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d1e0.  call temp:= `minWithOrNull`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @kind static;
  #L54d1e6.  v1:= temp @kind object;
  #L54d1e8.  return v1 @kind object;
}
procedure `java.lang.Object` `minWithOrNull`(`kotlin.sequences.Sequence` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minWithOrNull:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54d1fc.  v0:= "<this>" @kind object;
  #L54d200.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d206.  v0:= "comparator" @kind object;
  #L54d20a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d210.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d216.  v3:= temp @kind object;
  #L54d218.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d21e.  v0:= temp;
  #L54d220.  if v0 != 0 then goto L54d228;
  #L54d224.  v3:= 0I;
  #L54d226.  return v3 @kind object;
  #L54d228.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d22e.  v0:= temp @kind object;
  #L54d230.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d236.  v1:= temp;
  #L54d238.  if v1 == 0 then goto L54d254;
  #L54d23c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d242.  v1:= temp @kind object;
  #L54d244.  call temp:= `compare`(v4, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L54d24a.  v2:= temp;
  #L54d24c.  if v2 <= 0 then goto L54d230;
  #L54d250.  v0:= v1 @kind object;
  #L54d252.  goto L54d230;
  #L54d254.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `minus`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minus:(Lkotlin/sequences/Sequence;Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e820.  v0:= "<this>" @kind object;
  #L54e824.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e82a.  v0:= "elements" @kind object;
  #L54e82e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e834.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$3`;
  #L54e838.  call `<init>`(v0, v2, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3;.<init>:(Ljava/lang/Iterable;Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54e83e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `minus`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minus:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e850.  v0:= "<this>" @kind object;
  #L54e854.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e85a.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$1`;
  #L54e85e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$1;.<init>:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)V` @kind direct;
  #L54e864.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `minus`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minus:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e8bc.  v0:= "<this>" @kind object;
  #L54e8c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e8c6.  v0:= "elements" @kind object;
  #L54e8ca.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e8d0.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$4`;
  #L54e8d4.  call `<init>`(v0, v2, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$4;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54e8da.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `minus`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minus:(Lkotlin/sequences/Sequence;[Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e878.  v0:= "<this>" @kind object;
  #L54e87c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e882.  v0:= "elements" @kind object;
  #L54e886.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e88c.  v0:= length @variable v2;
  #L54e88e.  if v0 != 0 then goto L54e896;
  #L54e892.  v0:= 1I;
  #L54e894.  goto L54e898;
  #L54e896.  v0:= 0I;
  #L54e898.  if v0 == 0 then goto L54e89e;
  #L54e89c.  return v1 @kind object;
  #L54e89e.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$2`;
  #L54e8a2.  call `<init>`(v0, v2, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$2;.<init>:([Ljava/lang/Object;Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54e8a8.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `minusElement`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minusElement:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54e8ec.  v0:= "<this>" @kind object;
  #L54e8f0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e8f6.  call temp:= `minus`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.minus:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e8fc.  v1:= temp @kind object;
  #L54e8fe.  return v1 @kind object;
}
procedure `boolean` `none`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.none:(Lkotlin/sequences/Sequence;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b1e4.  v0:= "<this>" @kind object;
  #L54b1e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b1ee.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b1f4.  v1:= temp @kind object;
  #L54b1f6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b1fc.  v1:= temp;
  #L54b1fe.  v1:= v1 ^~ 1;
  #L54b202.  return v1;
}
procedure `boolean` `none`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.none:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54b214.  v0:= "<this>" @kind object;
  #L54b218.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b21e.  v0:= "predicate" @kind object;
  #L54b222.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b228.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b22e.  v1:= temp @kind object;
  #L54b230.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b236.  v0:= temp;
  #L54b238.  if v0 == 0 then goto L54b260;
  #L54b23c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b242.  v0:= temp @kind object;
  #L54b244.  call temp:= `invoke`(v2, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b24a.  v0:= temp @kind object;
  #L54b24c.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L54b250.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54b256.  v0:= temp;
  #L54b258.  if v0 == 0 then goto L54b230;
  #L54b25c.  v1:= 0I;
  #L54b25e.  return v1;
  #L54b260.  v1:= 1I;
  #L54b262.  return v1;
}
procedure `kotlin.sequences.Sequence` `onEach`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.onEach:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e910.  v0:= "<this>" @kind object;
  #L54e914.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e91a.  v0:= "action" @kind object;
  #L54e91e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e924.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$onEach$1`;
  #L54e928.  call `<init>`(v0, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$onEach$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54e92e.  call temp:= `map`(v1, v0) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e934.  v1:= temp @kind object;
  #L54e936.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `onEachIndexed`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.onEachIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e948.  v0:= "<this>" @kind object;
  #L54e94c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e952.  v0:= "action" @kind object;
  #L54e956.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e95c.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1`;
  #L54e960.  call `<init>`(v0, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$onEachIndexed$1;.<init>:(Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54e966.  call temp:= `mapIndexed`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.mapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e96c.  v1:= temp @kind object;
  #L54e96e.  return v1 @kind object;
}
procedure `kotlin.Pair` `partition`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.partition:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/Pair;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54e324.  v0:= "<this>" @kind object;
  #L54e328.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e32e.  v0:= "predicate" @kind object;
  #L54e332.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e338.  v0:= new `java.util.ArrayList`;
  #L54e33c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e342.  v1:= new `java.util.ArrayList`;
  #L54e346.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54e34c.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e352.  v4:= temp @kind object;
  #L54e354.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e35a.  v2:= temp;
  #L54e35c.  if v2 == 0 then goto L54e390;
  #L54e360.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e366.  v2:= temp @kind object;
  #L54e368.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54e36e.  v3:= temp @kind object;
  #L54e370.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L54e374.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54e37a.  v3:= temp;
  #L54e37c.  if v3 == 0 then goto L54e388;
  #L54e380.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54e386.  goto L54e354;
  #L54e388.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54e38e.  goto L54e354;
  #L54e390.  v4:= new `kotlin.Pair`;
  #L54e394.  call `<init>`(v4, v0, v1) @signature `Lkotlin/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L54e39a.  return v4 @kind object;
}
procedure `kotlin.sequences.Sequence` `plus`(`kotlin.sequences.Sequence` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e980.  v0:= "<this>" @kind object;
  #L54e984.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e98a.  v0:= "elements" @kind object;
  #L54e98e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e994.  v0:= 2I;
  #L54e996.  v0:= new `kotlin.sequences.Sequence`[v0];
  #L54e99a.  v1:= 0I;
  #L54e99c.  v0[v1]:= v2 @kind object;
  #L54e9a0.  call temp:= `asSequence`(v3) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e9a6.  v2:= temp @kind object;
  #L54e9a8.  v3:= 1I;
  #L54e9aa.  v0[v3]:= v2 @kind object;
  #L54e9ae.  call temp:= `sequenceOf`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e9b4.  v2:= temp @kind object;
  #L54e9b6.  call temp:= `flatten`(v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e9bc.  v2:= temp @kind object;
  #L54e9be.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `plus`(`kotlin.sequences.Sequence` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54e9d0.  v0:= "<this>" @kind object;
  #L54e9d4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e9da.  v0:= 2I;
  #L54e9dc.  v0:= new `kotlin.sequences.Sequence`[v0];
  #L54e9e0.  v1:= 0I;
  #L54e9e2.  v0[v1]:= v3 @kind object;
  #L54e9e6.  v3:= 1I;
  #L54e9e8.  v2:= new `java.lang.Object`[v3];
  #L54e9ec.  v2[v1]:= v4 @kind object;
  #L54e9f0.  call temp:= `sequenceOf`(v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54e9f6.  v4:= temp @kind object;
  #L54e9f8.  v0[v3]:= v4 @kind object;
  #L54e9fc.  call temp:= `sequenceOf`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ea02.  v3:= temp @kind object;
  #L54ea04.  call temp:= `flatten`(v3) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ea0a.  v3:= temp @kind object;
  #L54ea0c.  return v3 @kind object;
}
procedure `kotlin.sequences.Sequence` `plus`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ea58.  v0:= "<this>" @kind object;
  #L54ea5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ea62.  v0:= "elements" @kind object;
  #L54ea66.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ea6c.  v0:= 2I;
  #L54ea6e.  v0:= new `kotlin.sequences.Sequence`[v0];
  #L54ea72.  v1:= 0I;
  #L54ea74.  v0[v1]:= v2 @kind object;
  #L54ea78.  v2:= 1I;
  #L54ea7a.  v0[v2]:= v3 @kind object;
  #L54ea7e.  call temp:= `sequenceOf`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ea84.  v2:= temp @kind object;
  #L54ea86.  call temp:= `flatten`(v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ea8c.  v2:= temp @kind object;
  #L54ea8e.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `plus`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;[Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ea20.  v0:= "<this>" @kind object;
  #L54ea24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ea2a.  v0:= "elements" @kind object;
  #L54ea2e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ea34.  call temp:= `asList`(v2) @signature `Lkotlin/collections/ArraysKt;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L54ea3a.  v2:= temp @kind object;
  #L54ea3c.  call temp:= `plus`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ea42.  v1:= temp @kind object;
  #L54ea44.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `plusElement`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plusElement:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54eaa0.  v0:= "<this>" @kind object;
  #L54eaa4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eaaa.  call temp:= `plus`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.plus:(Lkotlin/sequences/Sequence;Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eab0.  v1:= temp @kind object;
  #L54eab2.  return v1 @kind object;
}
procedure `java.lang.Object` `reduce`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.reduce:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54d268.  v0:= "<this>" @kind object;
  #L54d26c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d272.  v0:= "operation" @kind object;
  #L54d276.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d27c.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d282.  v2:= temp @kind object;
  #L54d284.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d28a.  v0:= temp;
  #L54d28c.  if v0 == 0 then goto L54d2b8;
  #L54d290.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d296.  v0:= temp @kind object;
  #L54d298.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d29e.  v1:= temp;
  #L54d2a0.  if v1 == 0 then goto L54d2b6;
  #L54d2a4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d2aa.  v1:= temp @kind object;
  #L54d2ac.  call temp:= `invoke`(v3, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d2b2.  v0:= temp @kind object;
  #L54d2b4.  goto L54d298;
  #L54d2b6.  return v0 @kind object;
  #L54d2b8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L54d2bc.  v3:= "Empty sequence can't be reduced." @kind object;
  #L54d2c0.  call `<init>`(v2, v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d2c6.  goto L54d2ca;
  #L54d2c8.  throw v2;
  #L54d2ca.  goto L54d2c8;
}
procedure `java.lang.Object` `reduceIndexed`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.reduceIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d2dc.  v0:= "<this>" @kind object;
  #L54d2e0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d2e6.  v0:= "operation" @kind object;
  #L54d2ea.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d2f0.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d2f6.  v4:= temp @kind object;
  #L54d2f8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d2fe.  v0:= temp;
  #L54d300.  if v0 == 0 then goto L54d346;
  #L54d304.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d30a.  v0:= temp @kind object;
  #L54d30c.  v1:= 1I;
  #L54d30e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d314.  v2:= temp;
  #L54d316.  if v2 == 0 then goto L54d344;
  #L54d31a.  v2:= v1 + 1;
  #L54d31e.  if v1 >= 0 then goto L54d328;
  #L54d322.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54d328.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54d32e.  v1:= temp @kind object;
  #L54d330.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d336.  v3:= temp @kind object;
  #L54d338.  call temp:= `invoke`(v5, v1, v0, v3) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d33e.  v0:= temp @kind object;
  #L54d340.  v1:= v2;
  #L54d342.  goto L54d30e;
  #L54d344.  return v0 @kind object;
  #L54d346.  v4:= new `java.lang.UnsupportedOperationException`;
  #L54d34a.  v5:= "Empty sequence can't be reduced." @kind object;
  #L54d34e.  call `<init>`(v4, v5) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d354.  goto L54d358;
  #L54d356.  throw v4;
  #L54d358.  goto L54d356;
}
procedure `java.lang.Object` `reduceIndexedOrNull`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.reduceIndexedOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d36c.  v0:= "<this>" @kind object;
  #L54d370.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d376.  v0:= "operation" @kind object;
  #L54d37a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d380.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d386.  v4:= temp @kind object;
  #L54d388.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d38e.  v0:= temp;
  #L54d390.  if v0 != 0 then goto L54d398;
  #L54d394.  v4:= 0I;
  #L54d396.  return v4 @kind object;
  #L54d398.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d39e.  v0:= temp @kind object;
  #L54d3a0.  v1:= 1I;
  #L54d3a2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d3a8.  v2:= temp;
  #L54d3aa.  if v2 == 0 then goto L54d3d8;
  #L54d3ae.  v2:= v1 + 1;
  #L54d3b2.  if v1 >= 0 then goto L54d3bc;
  #L54d3b6.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L54d3bc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L54d3c2.  v1:= temp @kind object;
  #L54d3c4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d3ca.  v3:= temp @kind object;
  #L54d3cc.  call temp:= `invoke`(v5, v1, v0, v3) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d3d2.  v0:= temp @kind object;
  #L54d3d4.  v1:= v2;
  #L54d3d6.  goto L54d3a2;
  #L54d3d8.  return v0 @kind object;
}
procedure `java.lang.Object` `reduceOrNull`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.reduceOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54d3ec.  v0:= "<this>" @kind object;
  #L54d3f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d3f6.  v0:= "operation" @kind object;
  #L54d3fa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d400.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d406.  v2:= temp @kind object;
  #L54d408.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d40e.  v0:= temp;
  #L54d410.  if v0 != 0 then goto L54d418;
  #L54d414.  v2:= 0I;
  #L54d416.  return v2 @kind object;
  #L54d418.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d41e.  v0:= temp @kind object;
  #L54d420.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d426.  v1:= temp;
  #L54d428.  if v1 == 0 then goto L54d43e;
  #L54d42c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d432.  v1:= temp @kind object;
  #L54d434.  call temp:= `invoke`(v3, v0, v1) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d43a.  v0:= temp @kind object;
  #L54d43c.  goto L54d420;
  #L54d43e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `requireNoNulls`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.requireNoNulls:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54eac4.  v0:= "<this>" @kind object;
  #L54eac8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eace.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1`;
  #L54ead2.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$requireNoNulls$1;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54ead8.  call temp:= `map`(v1, v0) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eade.  v1:= temp @kind object;
  #L54eae0.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `runningFold`(`kotlin.sequences.Sequence` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningFold:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54eaf4.  v0:= "<this>" @kind object;
  #L54eaf8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eafe.  v0:= "operation" @kind object;
  #L54eb02.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eb08.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningFold$1`;
  #L54eb0c.  v1:= 0I;
  #L54eb0e.  call `<init>`(v0, v3, v2, v4, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFold$1;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54eb14.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eb1a.  v2:= temp @kind object;
  #L54eb1c.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `runningFoldIndexed`(`kotlin.sequences.Sequence` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function3` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningFoldIndexed:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54eb30.  v0:= "<this>" @kind object;
  #L54eb34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eb3a.  v0:= "operation" @kind object;
  #L54eb3e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eb44.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1`;
  #L54eb48.  v1:= 0I;
  #L54eb4a.  call `<init>`(v0, v3, v2, v4, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningFoldIndexed$1;.<init>:(Ljava/lang/Object;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54eb50.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eb56.  v2:= temp @kind object;
  #L54eb58.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `runningReduce`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningReduce:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54eb6c.  v0:= "<this>" @kind object;
  #L54eb70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eb76.  v0:= "operation" @kind object;
  #L54eb7a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eb80.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1`;
  #L54eb84.  v1:= 0I;
  #L54eb86.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduce$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54eb8c.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eb92.  v2:= temp @kind object;
  #L54eb94.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `runningReduceIndexed`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningReduceIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54eba8.  v0:= "<this>" @kind object;
  #L54ebac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ebb2.  v0:= "operation" @kind object;
  #L54ebb6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ebbc.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1`;
  #L54ebc0.  v1:= 0I;
  #L54ebc2.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$runningReduceIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54ebc8.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ebce.  v2:= temp @kind object;
  #L54ebd0.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `scan`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.scan:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ebe4.  v0:= "<this>" @kind object;
  #L54ebe8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ebee.  v0:= "operation" @kind object;
  #L54ebf2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ebf8.  call temp:= `runningFold`(v1, v2, v3) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningFold:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ebfe.  v1:= temp @kind object;
  #L54ec00.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `scanIndexed`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.scanIndexed:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ec14.  v0:= "<this>" @kind object;
  #L54ec18.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ec1e.  v0:= "operation" @kind object;
  #L54ec22.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ec28.  call temp:= `runningFoldIndexed`(v1, v2, v3) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.runningFoldIndexed:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ec2e.  v1:= temp @kind object;
  #L54ec30.  return v1 @kind object;
}
procedure `java.lang.Object` `single`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.single:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54d450.  v0:= "<this>" @kind object;
  #L54d454.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d45a.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d460.  v1:= temp @kind object;
  #L54d462.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d468.  v0:= temp;
  #L54d46a.  if v0 == 0 then goto L54d494;
  #L54d46e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d474.  v0:= temp @kind object;
  #L54d476.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d47c.  v1:= temp;
  #L54d47e.  if v1 != 0 then goto L54d484;
  #L54d482.  return v0 @kind object;
  #L54d484.  v1:= new `java.lang.IllegalArgumentException`;
  #L54d488.  v0:= "Sequence has more than one element." @kind object;
  #L54d48c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d492.  throw v1;
  #L54d494.  v1:= new `java.util.NoSuchElementException`;
  #L54d498.  v0:= "Sequence is empty." @kind object;
  #L54d49c.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d4a2.  throw v1;
}
procedure `java.lang.Object` `single`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.single:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d4b4.  v0:= "<this>" @kind object;
  #L54d4b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d4be.  v0:= "predicate" @kind object;
  #L54d4c2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d4c8.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d4ce.  v4:= temp @kind object;
  #L54d4d0.  v0:= 0I;
  #L54d4d2.  v1:= 0I;
  #L54d4d4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d4da.  v2:= temp;
  #L54d4dc.  if v2 == 0 then goto L54d51a;
  #L54d4e0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d4e6.  v2:= temp @kind object;
  #L54d4e8.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d4ee.  v3:= temp @kind object;
  #L54d4f0.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L54d4f4.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54d4fa.  v3:= temp;
  #L54d4fc.  if v3 == 0 then goto L54d4d4;
  #L54d500.  if v1 != 0 then goto L54d50a;
  #L54d504.  v1:= 1I;
  #L54d506.  v0:= v2 @kind object;
  #L54d508.  goto L54d4d4;
  #L54d50a.  v4:= new `java.lang.IllegalArgumentException`;
  #L54d50e.  v5:= "Sequence contains more than one matching element." @kind object;
  #L54d512.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d518.  throw v4;
  #L54d51a.  if v1 == 0 then goto L54d520;
  #L54d51e.  return v0 @kind object;
  #L54d520.  v4:= new `java.util.NoSuchElementException`;
  #L54d524.  v5:= "Sequence contains no element matching the predicate." @kind object;
  #L54d528.  call `<init>`(v4, v5) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54d52e.  goto L54d532;
  #L54d530.  throw v4;
  #L54d532.  goto L54d530;
}
procedure `java.lang.Object` `singleOrNull`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.singleOrNull:(Lkotlin/sequences/Sequence;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54d544.  v0:= "<this>" @kind object;
  #L54d548.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d54e.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d554.  v2:= temp @kind object;
  #L54d556.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d55c.  v0:= temp;
  #L54d55e.  v1:= 0I;
  #L54d560.  if v0 != 0 then goto L54d566;
  #L54d564.  return v1 @kind object;
  #L54d566.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d56c.  v0:= temp @kind object;
  #L54d56e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d574.  v2:= temp;
  #L54d576.  if v2 == 0 then goto L54d57c;
  #L54d57a.  return v1 @kind object;
  #L54d57c.  return v0 @kind object;
}
procedure `java.lang.Object` `singleOrNull`(`kotlin.sequences.Sequence` v5 @kind object, `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.singleOrNull:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54d590.  v0:= "<this>" @kind object;
  #L54d594.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d59a.  v0:= "predicate" @kind object;
  #L54d59e.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54d5a4.  call temp:= `iterator`(v5) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54d5aa.  v5:= temp @kind object;
  #L54d5ac.  v0:= 0I;
  #L54d5ae.  v1:= 0I;
  #L54d5b0.  v2:= v0 @kind object;
  #L54d5b2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54d5b8.  v3:= temp;
  #L54d5ba.  if v3 == 0 then goto L54d5ea;
  #L54d5be.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54d5c4.  v3:= temp @kind object;
  #L54d5c6.  call temp:= `invoke`(v6, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54d5cc.  v4:= temp @kind object;
  #L54d5ce.  v4:= (`java.lang.Boolean`) v4 @kind object;
  #L54d5d2.  call temp:= `booleanValue`(v4) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L54d5d8.  v4:= temp;
  #L54d5da.  if v4 == 0 then goto L54d5b2;
  #L54d5de.  if v1 == 0 then goto L54d5e4;
  #L54d5e2.  return v0 @kind object;
  #L54d5e4.  v1:= 1I;
  #L54d5e6.  v2:= v3 @kind object;
  #L54d5e8.  goto L54d5b2;
  #L54d5ea.  if v1 != 0 then goto L54d5f0;
  #L54d5ee.  return v0 @kind object;
  #L54d5f0.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `sorted`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sorted:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ec44.  v0:= "<this>" @kind object;
  #L54ec48.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ec4e.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$sorted$1`;
  #L54ec52.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$sorted$1;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54ec58.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `sortedBy`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ec6c.  v0:= "<this>" @kind object;
  #L54ec70.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ec76.  v0:= "selector" @kind object;
  #L54ec7a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ec80.  v0:= new `kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2`;
  #L54ec84.  call `<init>`(v0, v2) @signature `Lkotlin/comparisons/ComparisonsKt__ComparisonsKt$compareBy$2;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ec8a.  call temp:= `sortedWith`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ec90.  v1:= temp @kind object;
  #L54ec92.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `sortedByDescending`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedByDescending:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54eca4.  v0:= "<this>" @kind object;
  #L54eca8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ecae.  v0:= "selector" @kind object;
  #L54ecb2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ecb8.  v0:= new `kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1`;
  #L54ecbc.  call `<init>`(v0, v2) @signature `Lkotlin/comparisons/ComparisonsKt__ComparisonsKt$compareByDescending$1;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ecc2.  call temp:= `sortedWith`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ecc8.  v1:= temp @kind object;
  #L54ecca.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `sortedDescending`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedDescending:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ecdc.  v0:= "<this>" @kind object;
  #L54ece0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ece6.  call temp:= `reverseOrder`() @signature `Lkotlin/comparisons/ComparisonsKt;.reverseOrder:()Ljava/util/Comparator;` @kind static;
  #L54ecec.  v0:= temp @kind object;
  #L54ecee.  call temp:= `sortedWith`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ecf4.  v1:= temp @kind object;
  #L54ecf6.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `sortedWith`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ed08.  v0:= "<this>" @kind object;
  #L54ed0c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ed12.  v0:= "comparator" @kind object;
  #L54ed16.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ed1c.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1`;
  #L54ed20.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$sortedWith$1;.<init>:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)V` @kind direct;
  #L54ed26.  return v0 @kind object;
}
procedure `int` `sumBy`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumBy:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bb40.  v0:= "<this>" @kind object;
  #L54bb44.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bb4a.  v0:= "selector" @kind object;
  #L54bb4e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bb54.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bb5a.  v2:= temp @kind object;
  #L54bb5c.  v0:= 0I;
  #L54bb5e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bb64.  v1:= temp;
  #L54bb66.  if v1 == 0 then goto L54bb8a;
  #L54bb6a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bb70.  v1:= temp @kind object;
  #L54bb72.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bb78.  v1:= temp @kind object;
  #L54bb7a.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54bb7e.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54bb84.  v1:= temp;
  #L54bb86.  v0:= v0 + v1 @kind int;
  #L54bb88.  goto L54bb5e;
  #L54bb8a.  return v0;
}
procedure `double` `sumByDouble`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumByDouble:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54b66c.  v0:= "<this>" @kind object;
  #L54b670.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b676.  v0:= "selector" @kind object;
  #L54b67a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b680.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b686.  v4:= temp @kind object;
  #L54b688.  v0:= 0L;
  #L54b68c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b692.  v2:= temp;
  #L54b694.  if v2 == 0 then goto L54b6b8;
  #L54b698.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b69e.  v2:= temp @kind object;
  #L54b6a0.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b6a6.  v2:= temp @kind object;
  #L54b6a8.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54b6ac.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b6b2.  v2:= temp @kind wide;
  #L54b6b4.  v0:= v0 + v2 @kind double;
  #L54b6b6.  goto L54b68c;
  #L54b6b8.  return v0 @kind wide;
}
procedure `int` `sumOfByte`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfByte:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bb9c.  v0:= "<this>" @kind object;
  #L54bba0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bba6.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bbac.  v2:= temp @kind object;
  #L54bbae.  v0:= 0I;
  #L54bbb0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bbb6.  v1:= temp;
  #L54bbb8.  if v1 == 0 then goto L54bbd4;
  #L54bbbc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bbc2.  v1:= temp @kind object;
  #L54bbc4.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54bbc8.  call temp:= `byteValue`(v1) @signature `Ljava/lang/Number;.byteValue:()B` @kind virtual;
  #L54bbce.  v1:= temp;
  #L54bbd0.  v0:= v0 + v1 @kind int;
  #L54bbd2.  goto L54bbb0;
  #L54bbd4.  return v0;
}
procedure `double` `sumOfDouble`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfDouble:(Lkotlin/sequences/Sequence;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54b6cc.  v0:= "<this>" @kind object;
  #L54b6d0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b6d6.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b6dc.  v4:= temp @kind object;
  #L54b6de.  v0:= 0L;
  #L54b6e2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b6e8.  v2:= temp;
  #L54b6ea.  if v2 == 0 then goto L54b706;
  #L54b6ee.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b6f4.  v2:= temp @kind object;
  #L54b6f6.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54b6fa.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b700.  v2:= temp @kind wide;
  #L54b702.  v0:= v0 + v2 @kind double;
  #L54b704.  goto L54b6e2;
  #L54b706.  return v0 @kind wide;
}
procedure `double` `sumOfDouble`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfDouble:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)D` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54b718.  v0:= "<this>" @kind object;
  #L54b71c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b722.  v0:= "selector" @kind object;
  #L54b726.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b72c.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b732.  v4:= temp @kind object;
  #L54b734.  v0:= 0L;
  #L54b738.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b73e.  v2:= temp;
  #L54b740.  if v2 == 0 then goto L54b764;
  #L54b744.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b74a.  v2:= temp @kind object;
  #L54b74c.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54b752.  v2:= temp @kind object;
  #L54b754.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54b758.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L54b75e.  v2:= temp @kind wide;
  #L54b760.  v0:= v0 + v2 @kind double;
  #L54b762.  goto L54b738;
  #L54b764.  return v0 @kind wide;
}
procedure `float` `sumOfFloat`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfFloat:(Lkotlin/sequences/Sequence;)F` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54b8a8.  v0:= "<this>" @kind object;
  #L54b8ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54b8b2.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54b8b8.  v2:= temp @kind object;
  #L54b8ba.  v0:= 0I;
  #L54b8bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54b8c2.  v1:= temp;
  #L54b8c4.  if v1 == 0 then goto L54b8e0;
  #L54b8c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54b8ce.  v1:= temp @kind object;
  #L54b8d0.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54b8d4.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L54b8da.  v1:= temp;
  #L54b8dc.  v0:= v0 + v1 @kind float;
  #L54b8de.  goto L54b8bc;
  #L54b8e0.  return v0;
}
procedure `int` `sumOfInt`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfInt:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bbe8.  v0:= "<this>" @kind object;
  #L54bbec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bbf2.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bbf8.  v2:= temp @kind object;
  #L54bbfa.  v0:= 0I;
  #L54bbfc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bc02.  v1:= temp;
  #L54bc04.  if v1 == 0 then goto L54bc20;
  #L54bc08.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bc0e.  v1:= temp @kind object;
  #L54bc10.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54bc14.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54bc1a.  v1:= temp;
  #L54bc1c.  v0:= v0 + v1 @kind int;
  #L54bc1e.  goto L54bbfc;
  #L54bc20.  return v0;
}
procedure `int` `sumOfInt`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfInt:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bc34.  v0:= "<this>" @kind object;
  #L54bc38.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bc3e.  v0:= "selector" @kind object;
  #L54bc42.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bc48.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bc4e.  v2:= temp @kind object;
  #L54bc50.  v0:= 0I;
  #L54bc52.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bc58.  v1:= temp;
  #L54bc5a.  if v1 == 0 then goto L54bc7e;
  #L54bc5e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bc64.  v1:= temp @kind object;
  #L54bc66.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bc6c.  v1:= temp @kind object;
  #L54bc6e.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54bc72.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L54bc78.  v1:= temp;
  #L54bc7a.  v0:= v0 + v1 @kind int;
  #L54bc7c.  goto L54bc52;
  #L54bc7e.  return v0;
}
procedure `long` `sumOfLong`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfLong:(Lkotlin/sequences/Sequence;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54efc0.  v0:= "<this>" @kind object;
  #L54efc4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54efca.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54efd0.  v4:= temp @kind object;
  #L54efd2.  v0:= 0L;
  #L54efd6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54efdc.  v2:= temp;
  #L54efde.  if v2 == 0 then goto L54effa;
  #L54efe2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54efe8.  v2:= temp @kind object;
  #L54efea.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54efee.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54eff4.  v2:= temp @kind wide;
  #L54eff6.  v0:= v0 + v2 @kind long;
  #L54eff8.  goto L54efd6;
  #L54effa.  return v0 @kind wide;
}
procedure `long` `sumOfLong`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfLong:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54f00c.  v0:= "<this>" @kind object;
  #L54f010.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f016.  v0:= "selector" @kind object;
  #L54f01a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f020.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54f026.  v4:= temp @kind object;
  #L54f028.  v0:= 0L;
  #L54f02c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54f032.  v2:= temp;
  #L54f034.  if v2 == 0 then goto L54f058;
  #L54f038.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54f03e.  v2:= temp @kind object;
  #L54f040.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54f046.  v2:= temp @kind object;
  #L54f048.  v2:= (`java.lang.Number`) v2 @kind object;
  #L54f04c.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L54f052.  v2:= temp @kind wide;
  #L54f054.  v0:= v0 + v2 @kind long;
  #L54f056.  goto L54f02c;
  #L54f058.  return v0 @kind wide;
}
procedure `int` `sumOfShort`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfShort:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bc90.  v0:= "<this>" @kind object;
  #L54bc94.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bc9a.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bca0.  v2:= temp @kind object;
  #L54bca2.  v0:= 0I;
  #L54bca4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bcaa.  v1:= temp;
  #L54bcac.  if v1 == 0 then goto L54bcc8;
  #L54bcb0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bcb6.  v1:= temp @kind object;
  #L54bcb8.  v1:= (`java.lang.Number`) v1 @kind object;
  #L54bcbc.  call temp:= `shortValue`(v1) @signature `Ljava/lang/Number;.shortValue:()S` @kind virtual;
  #L54bcc2.  v1:= temp;
  #L54bcc4.  v0:= v0 + v1 @kind int;
  #L54bcc6.  goto L54bca4;
  #L54bcc8.  return v0;
}
procedure `int` `sumOfUInt`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfUInt:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54bcdc.  v0:= "<this>" @kind object;
  #L54bce0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bce6.  v0:= "selector" @kind object;
  #L54bcea.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54bcf0.  v0:= 0I;
  #L54bcf2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L54bcf8.  v0:= temp;
  #L54bcfa.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54bd00.  v2:= temp @kind object;
  #L54bd02.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54bd08.  v1:= temp;
  #L54bd0a.  if v1 == 0 then goto L54bd36;
  #L54bd0e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54bd14.  v1:= temp @kind object;
  #L54bd16.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54bd1c.  v1:= temp @kind object;
  #L54bd1e.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L54bd22.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L54bd28.  v1:= temp;
  #L54bd2a.  v0:= v0 + v1 @kind int;
  #L54bd2c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L54bd32.  v0:= temp;
  #L54bd34.  goto L54bd02;
  #L54bd36.  return v0;
}
procedure `long` `sumOfULong`(`kotlin.sequences.Sequence` v4 @kind object, `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.sumOfULong:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54f06c.  v0:= "<this>" @kind object;
  #L54f070.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f076.  v0:= "selector" @kind object;
  #L54f07a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54f080.  v0:= 0L;
  #L54f084.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L54f08a.  v0:= temp @kind wide;
  #L54f08c.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54f092.  v4:= temp @kind object;
  #L54f094.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54f09a.  v2:= temp;
  #L54f09c.  if v2 == 0 then goto L54f0c8;
  #L54f0a0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54f0a6.  v2:= temp @kind object;
  #L54f0a8.  call temp:= `invoke`(v5, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L54f0ae.  v2:= temp @kind object;
  #L54f0b0.  v2:= (`kotlin.ULong`) v2 @kind object;
  #L54f0b4.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L54f0ba.  v2:= temp @kind wide;
  #L54f0bc.  v0:= v0 + v2 @kind long;
  #L54f0be.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L54f0c4.  v0:= temp @kind wide;
  #L54f0c6.  goto L54f094;
  #L54f0c8.  return v0 @kind wide;
}
procedure `kotlin.sequences.Sequence` `take`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.take:(Lkotlin/sequences/Sequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ed38.  v0:= "<this>" @kind object;
  #L54ed3c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ed42.  if v2 < 0 then goto L54ed4a;
  #L54ed46.  v0:= 1I;
  #L54ed48.  goto L54ed4c;
  #L54ed4a.  v0:= 0I;
  #L54ed4c.  if v0 == 0 then goto L54ed82;
  #L54ed50.  if v2 != 0 then goto L54ed5e;
  #L54ed54.  call temp:= `emptySequence`() @signature `Lkotlin/sequences/SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @kind static;
  #L54ed5a.  v1:= temp @kind object;
  #L54ed5c.  goto L54ed80;
  #L54ed5e.  v0:= instanceof @variable v1 @type ^`kotlin.sequences.DropTakeSequence` @kind boolean;
  #L54ed62.  if v0 == 0 then goto L54ed74;
  #L54ed66.  v1:= (`kotlin.sequences.DropTakeSequence`) v1 @kind object;
  #L54ed6a.  call temp:= `take`(v1, v2) @signature `Lkotlin/sequences/DropTakeSequence;.take:(I)Lkotlin/sequences/Sequence;` @kind interface;
  #L54ed70.  v1:= temp @kind object;
  #L54ed72.  goto L54ed80;
  #L54ed74.  v0:= new `kotlin.sequences.TakeSequence`;
  #L54ed78.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TakeSequence;.<init>:(Lkotlin/sequences/Sequence;I)V` @kind direct;
  #L54ed7e.  v1:= v0 @kind object;
  #L54ed80.  return v1 @kind object;
  #L54ed82.  v1:= new `java.lang.StringBuilder`;
  #L54ed86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54ed8c.  v0:= "Requested element count " @kind object;
  #L54ed90.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ed96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ed9c.  v2:= " is less than zero." @kind object;
  #L54eda0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54eda6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54edac.  v1:= temp @kind object;
  #L54edae.  v2:= new `java.lang.IllegalArgumentException`;
  #L54edb2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L54edb8.  v1:= temp @kind object;
  #L54edba.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54edc0.  throw v2;
}
procedure `kotlin.sequences.Sequence` `takeWhile`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.takeWhile:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54edd4.  v0:= "<this>" @kind object;
  #L54edd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54edde.  v0:= "predicate" @kind object;
  #L54ede2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ede8.  v0:= new `kotlin.sequences.TakeWhileSequence`;
  #L54edec.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/TakeWhileSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54edf2.  return v0 @kind object;
}
procedure `java.util.Collection` `toCollection`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54dc74.  v0:= "<this>" @kind object;
  #L54dc78.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dc7e.  v0:= "destination" @kind object;
  #L54dc82.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dc88.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54dc8e.  v1:= temp @kind object;
  #L54dc90.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54dc96.  v0:= temp;
  #L54dc98.  if v0 == 0 then goto L54dcac;
  #L54dc9c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54dca2.  v0:= temp @kind object;
  #L54dca4.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L54dcaa.  goto L54dc90;
  #L54dcac.  return v2 @kind object;
}
procedure `java.util.HashSet` `toHashSet`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toHashSet:(Lkotlin/sequences/Sequence;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54dcc0.  v0:= "<this>" @kind object;
  #L54dcc4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dcca.  v0:= new `java.util.HashSet`;
  #L54dcce.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L54dcd4.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L54dcda.  v1:= temp @kind object;
  #L54dcdc.  v1:= (`java.util.HashSet`) v1 @kind object;
  #L54dce0.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54dcf4.  v0:= "<this>" @kind object;
  #L54dcf8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dcfe.  call temp:= `toMutableList`(v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toMutableList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @kind static;
  #L54dd04.  v1:= temp @kind object;
  #L54dd06.  call temp:= `optimizeReadOnlyList`(v1) @signature `Lkotlin/collections/CollectionsKt;.optimizeReadOnlyList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L54dd0c.  v1:= temp @kind object;
  #L54dd0e.  return v1 @kind object;
}
procedure `java.util.List` `toMutableList`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toMutableList:(Lkotlin/sequences/Sequence;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54dd20.  v0:= "<this>" @kind object;
  #L54dd24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54dd2a.  v0:= new `java.util.ArrayList`;
  #L54dd2e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54dd34.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L54dd3a.  v1:= temp @kind object;
  #L54dd3c.  v1:= (`java.util.List`) v1 @kind object;
  #L54dd40.  return v1 @kind object;
}
procedure `java.util.Set` `toMutableSet`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toMutableSet:(Lkotlin/sequences/Sequence;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54e29c.  v0:= "<this>" @kind object;
  #L54e2a0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e2a6.  v0:= new `java.util.LinkedHashSet`;
  #L54e2aa.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L54e2b0.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54e2b6.  v2:= temp @kind object;
  #L54e2b8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54e2be.  v1:= temp;
  #L54e2c0.  if v1 == 0 then goto L54e2d4;
  #L54e2c4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54e2ca.  v1:= temp @kind object;
  #L54e2cc.  call temp:= `add`(v0, v1) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54e2d2.  goto L54e2b8;
  #L54e2d4.  return v0 @kind object;
}
procedure `java.util.Set` `toSet`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toSet:(Lkotlin/sequences/Sequence;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54e2e8.  v0:= "<this>" @kind object;
  #L54e2ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54e2f2.  v0:= new `java.util.LinkedHashSet`;
  #L54e2f6.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L54e2fc.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L54e302.  v1:= temp @kind object;
  #L54e304.  v1:= (`java.util.Set`) v1 @kind object;
  #L54e308.  call temp:= `optimizeReadOnlySet`(v1) @signature `Lkotlin/collections/SetsKt;.optimizeReadOnlySet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L54e30e.  v1:= temp @kind object;
  #L54e310.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowed`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZ)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ee64.  v0:= "<this>" @kind object;
  #L54ee68.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ee6e.  v0:= 0I;
  #L54ee70.  call temp:= `windowedSequence`(v1, v2, v3, v4, v0) @signature `Lkotlin/collections/SlidingWindowKt;.windowedSequence:(Lkotlin/sequences/Sequence;IIZZ)Lkotlin/sequences/Sequence;` @kind static;
  #L54ee76.  v1:= temp @kind object;
  #L54ee78.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowed`(`kotlin.sequences.Sequence` v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `kotlin.jvm.functions.Function1` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZLkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ee8c.  v0:= "<this>" @kind object;
  #L54ee90.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ee96.  v0:= "transform" @kind object;
  #L54ee9a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eea0.  v0:= 1I;
  #L54eea2.  call temp:= `windowedSequence`(v1, v2, v3, v4, v0) @signature `Lkotlin/collections/SlidingWindowKt;.windowedSequence:(Lkotlin/sequences/Sequence;IIZZ)Lkotlin/sequences/Sequence;` @kind static;
  #L54eea8.  v1:= temp @kind object;
  #L54eeaa.  call temp:= `map`(v1, v5) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54eeb0.  v1:= temp @kind object;
  #L54eeb2.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowed$default`(`kotlin.sequences.Sequence` v0 @kind object, `int` v1 , `int` v2 , `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed$default:(Lkotlin/sequences/Sequence;IIZILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L54ee04.  v5:= v4 ^& 2;
  #L54ee08.  if v5 == 0 then goto L54ee0e;
  #L54ee0c.  v2:= 1I;
  #L54ee0e.  v4:= v4 ^& 4;
  #L54ee12.  if v4 == 0 then goto L54ee18;
  #L54ee16.  v3:= 0I;
  #L54ee18.  call temp:= `windowed`(v0, v1, v2, v3) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZ)Lkotlin/sequences/Sequence;` @kind static;
  #L54ee1e.  v0:= temp @kind object;
  #L54ee20.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `windowed$default`(`kotlin.sequences.Sequence` v0 @kind object, `int` v1 , `int` v2 , `boolean` v3 , `kotlin.jvm.functions.Function1` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed$default:(Lkotlin/sequences/Sequence;IIZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L54ee34.  v6:= v5 ^& 2;
  #L54ee38.  if v6 == 0 then goto L54ee3e;
  #L54ee3c.  v2:= 1I;
  #L54ee3e.  v5:= v5 ^& 4;
  #L54ee42.  if v5 == 0 then goto L54ee48;
  #L54ee46.  v3:= 0I;
  #L54ee48.  call temp:= `windowed`(v0, v1, v2, v3, v4) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.windowed:(Lkotlin/sequences/Sequence;IIZLkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ee4e.  v0:= temp @kind object;
  #L54ee50.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `withIndex`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.withIndex:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54eec4.  v0:= "<this>" @kind object;
  #L54eec8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eece.  v0:= new `kotlin.sequences.IndexingSequence`;
  #L54eed2.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/IndexingSequence;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54eed8.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `zip`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.zip:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54eeec.  v0:= "<this>" @kind object;
  #L54eef0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54eef6.  v0:= "other" @kind object;
  #L54eefa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef00.  v0:= new `kotlin.sequences.MergingSequence`;
  #L54ef04.  v1:= `@@kotlin.sequences.SequencesKt___SequencesKt$zip$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$zip$1` @kind object;
  #L54ef08.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/MergingSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54ef0e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `zip`(`kotlin.sequences.Sequence` v1 @kind object, `kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.zip:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ef20.  v0:= "<this>" @kind object;
  #L54ef24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef2a.  v0:= "other" @kind object;
  #L54ef2e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef34.  v0:= "transform" @kind object;
  #L54ef38.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef3e.  v0:= new `kotlin.sequences.MergingSequence`;
  #L54ef42.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlin/sequences/MergingSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54ef48.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `zipWithNext`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.zipWithNext:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ef5c.  v0:= "<this>" @kind object;
  #L54ef60.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef66.  v0:= `@@kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1` @kind object;
  #L54ef6a.  call temp:= `zipWithNext`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.zipWithNext:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ef70.  v1:= temp @kind object;
  #L54ef72.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `zipWithNext`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.zipWithNext:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ef84.  v0:= "<this>" @kind object;
  #L54ef88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef8e.  v0:= "transform" @kind object;
  #L54ef92.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ef98.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2`;
  #L54ef9c.  v1:= 0I;
  #L54ef9e.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$zipWithNext$2;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54efa4.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54efaa.  v2:= temp @kind object;
  #L54efac.  return v2 @kind object;
}
