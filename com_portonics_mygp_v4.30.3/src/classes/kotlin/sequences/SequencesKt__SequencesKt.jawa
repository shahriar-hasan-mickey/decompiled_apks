record `kotlin.sequences.SequencesKt__SequencesKt` @kind class @AccessFlag  extends `kotlin.sequences.SequencesKt__SequencesJVMKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54aea0.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesJVMKt;.<init>:()V` @kind direct;
  #L54aea6.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `Sequence`(`kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.Sequence:(Lkotlin/jvm/functions/Function0;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54ab8c.  v0:= "iterator" @kind object;
  #L54ab90.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ab96.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$Sequence$1`;
  #L54ab9a.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$Sequence$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L54aba0.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `asSequence`(`java.util.Iterator` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.asSequence:(Ljava/util/Iterator;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54abb4.  v0:= "<this>" @kind object;
  #L54abb8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54abbe.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1`;
  #L54abc2.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L54abc8.  call temp:= `constrainOnce`(v0) @signature `Lkotlin/sequences/SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54abce.  v1:= temp @kind object;
  #L54abd0.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `constrainOnce`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54abe4.  v0:= "<this>" @kind object;
  #L54abe8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54abee.  v0:= instanceof @variable v1 @type ^`kotlin.sequences.ConstrainedOnceSequence` @kind boolean;
  #L54abf2.  if v0 == 0 then goto L54abf8;
  #L54abf6.  goto L54ac04;
  #L54abf8.  v0:= new `kotlin.sequences.ConstrainedOnceSequence`;
  #L54abfc.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/ConstrainedOnceSequence;.<init>:(Lkotlin/sequences/Sequence;)V` @kind direct;
  #L54ac02.  v1:= v0 @kind object;
  #L54ac04.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `emptySequence`() @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54ac18.  v0:= `@@kotlin.sequences.EmptySequence.INSTANCE` @type ^`kotlin.sequences.EmptySequence` @kind object;
  #L54ac1c.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatMapIndexed`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatMapIndexed:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ac30.  v0:= "source" @kind object;
  #L54ac34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ac3a.  v0:= "transform" @kind object;
  #L54ac3e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ac44.  v0:= "iterator" @kind object;
  #L54ac48.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ac4e.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1`;
  #L54ac52.  v1:= 0I;
  #L54ac54.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$flatMapIndexed$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54ac5a.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ac60.  v2:= temp @kind object;
  #L54ac62.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatten`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54acac.  v0:= "<this>" @kind object;
  #L54acb0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54acb6.  v0:= `@@kotlin.sequences.SequencesKt__SequencesKt$flatten$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt__SequencesKt$flatten$1` @kind object;
  #L54acba.  call temp:= `flatten$SequencesKt__SequencesKt`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten$SequencesKt__SequencesKt:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54acc0.  v1:= temp @kind object;
  #L54acc2.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `flatten$SequencesKt__SequencesKt`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten$SequencesKt__SequencesKt:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ac74.  v0:= instanceof @variable v2 @type ^`kotlin.sequences.TransformingSequence` @kind boolean;
  #L54ac78.  if v0 == 0 then goto L54ac8a;
  #L54ac7c.  v2:= (`kotlin.sequences.TransformingSequence`) v2 @kind object;
  #L54ac80.  call temp:= `flatten$kotlin_stdlib`(v2, v3) @signature `Lkotlin/sequences/TransformingSequence;.flatten$kotlin_stdlib:(Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind virtual;
  #L54ac86.  v2:= temp @kind object;
  #L54ac88.  return v2 @kind object;
  #L54ac8a.  v0:= new `kotlin.sequences.FlatteningSequence`;
  #L54ac8e.  v1:= `@@kotlin.sequences.SequencesKt__SequencesKt$flatten$3.INSTANCE` @type ^`kotlin.sequences.SequencesKt__SequencesKt$flatten$3` @kind object;
  #L54ac92.  call `<init>`(v0, v2, v1, v3) @signature `Lkotlin/sequences/FlatteningSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ac98.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `flattenSequenceOfIterable`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flattenSequenceOfIterable:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54acd4.  v0:= "<this>" @kind object;
  #L54acd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54acde.  v0:= `@@kotlin.sequences.SequencesKt__SequencesKt$flatten$2.INSTANCE` @type ^`kotlin.sequences.SequencesKt__SequencesKt$flatten$2` @kind object;
  #L54ace2.  call temp:= `flatten$SequencesKt__SequencesKt`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.flatten$SequencesKt__SequencesKt:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ace8.  v1:= temp @kind object;
  #L54acea.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L54acfc.  v0:= "nextFunction" @kind object;
  #L54ad00.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ad06.  if v2 != 0 then goto L54ad10;
  #L54ad0a.  v2:= `@@kotlin.sequences.EmptySequence.INSTANCE` @type ^`kotlin.sequences.EmptySequence` @kind object;
  #L54ad0e.  goto L54ad26;
  #L54ad10.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L54ad14.  v1:= new `kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2`;
  #L54ad18.  call `<init>`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$generateSequence$2;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L54ad1e.  call `<init>`(v0, v1, v3) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ad24.  v2:= v0 @kind object;
  #L54ad26.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`kotlin.jvm.functions.Function0` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ad38.  v0:= "nextFunction" @kind object;
  #L54ad3c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ad42.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L54ad46.  v1:= new `kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1`;
  #L54ad4a.  call `<init>`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$generateSequence$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L54ad50.  call `<init>`(v0, v2, v1) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ad56.  call temp:= `constrainOnce`(v0) @signature `Lkotlin/sequences/SequencesKt;.constrainOnce:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ad5c.  v2:= temp @kind object;
  #L54ad5e.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `generateSequence`(`kotlin.jvm.functions.Function0` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54ad70.  v0:= "seedFunction" @kind object;
  #L54ad74.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ad7a.  v0:= "nextFunction" @kind object;
  #L54ad7e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ad84.  v0:= new `kotlin.sequences.GeneratorSequence`;
  #L54ad88.  call `<init>`(v0, v1, v2) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L54ad8e.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `ifEmpty`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.ifEmpty:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ada0.  v0:= "<this>" @kind object;
  #L54ada4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54adaa.  v0:= "defaultValue" @kind object;
  #L54adae.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54adb4.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1`;
  #L54adb8.  v1:= 0I;
  #L54adba.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$ifEmpty$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54adc0.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54adc6.  v2:= temp @kind object;
  #L54adc8.  return v2 @kind object;
}
procedure `kotlin.sequences.Sequence` `orEmpty`(`kotlin.sequences.Sequence` v0 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.orEmpty:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L54addc.  if v0 != 0 then goto L54ade8;
  #L54ade0.  call temp:= `emptySequence`() @signature `Lkotlin/sequences/SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @kind static;
  #L54ade6.  v0:= temp @kind object;
  #L54ade8.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `sequenceOf`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.sequenceOf:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54adfc.  v0:= "elements" @kind object;
  #L54ae00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ae06.  v0:= length @variable v1;
  #L54ae08.  if v0 != 0 then goto L54ae10;
  #L54ae0c.  v0:= 1I;
  #L54ae0e.  goto L54ae12;
  #L54ae10.  v0:= 0I;
  #L54ae12.  if v0 == 0 then goto L54ae20;
  #L54ae16.  call temp:= `emptySequence`() @signature `Lkotlin/sequences/SequencesKt;.emptySequence:()Lkotlin/sequences/Sequence;` @kind static;
  #L54ae1c.  v1:= temp @kind object;
  #L54ae1e.  goto L54ae28;
  #L54ae20.  call temp:= `asSequence`(v1) @signature `Lkotlin/collections/ArraysKt;.asSequence:([Ljava/lang/Object;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ae26.  v1:= temp @kind object;
  #L54ae28.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `shuffled`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L54ae3c.  v0:= "<this>" @kind object;
  #L54ae40.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ae46.  v0:= `@@kotlin.random.Random.Default` @type ^`kotlin.random.Random$Default` @kind object;
  #L54ae4a.  call temp:= `shuffled`(v1, v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ae50.  v1:= temp @kind object;
  #L54ae52.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `shuffled`(`kotlin.sequences.Sequence` v2 @kind object, `kotlin.random.Random` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.shuffled:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L54ae64.  v0:= "<this>" @kind object;
  #L54ae68.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ae6e.  v0:= "random" @kind object;
  #L54ae72.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ae78.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$shuffled$1`;
  #L54ae7c.  v1:= 0I;
  #L54ae7e.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$shuffled$1;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/random/Random;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L54ae84.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L54ae8a.  v2:= temp @kind object;
  #L54ae8c.  return v2 @kind object;
}
procedure `kotlin.Pair` `unzip`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.unzip:(Lkotlin/sequences/Sequence;)Lkotlin/Pair;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54ab14.  v0:= "<this>" @kind object;
  #L54ab18.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54ab1e.  v0:= new `java.util.ArrayList`;
  #L54ab22.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54ab28.  v1:= new `java.util.ArrayList`;
  #L54ab2c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L54ab32.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L54ab38.  v4:= temp @kind object;
  #L54ab3a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ab40.  v2:= temp;
  #L54ab42.  if v2 == 0 then goto L54ab70;
  #L54ab46.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ab4c.  v2:= temp @kind object;
  #L54ab4e.  v2:= (`kotlin.Pair`) v2 @kind object;
  #L54ab52.  call temp:= `getFirst`(v2) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L54ab58.  v3:= temp @kind object;
  #L54ab5a.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54ab60.  call temp:= `getSecond`(v2) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L54ab66.  v2:= temp @kind object;
  #L54ab68.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54ab6e.  goto L54ab3a;
  #L54ab70.  call temp:= `to`(v0, v1) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L54ab76.  v4:= temp @kind object;
  #L54ab78.  return v4 @kind object;
}
