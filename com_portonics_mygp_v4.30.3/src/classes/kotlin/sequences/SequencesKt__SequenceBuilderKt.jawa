record `kotlin.sequences.SequencesKt__SequenceBuilderKt` @kind class @AccessFlag  {
}
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_Done` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_Failed` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_ManyNotReady` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_ManyReady` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_NotReady` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlin.sequences.SequencesKt__SequenceBuilderKt.State_Ready` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequenceBuilderKt` v0 @kind this) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54aaa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L54aaaa.  return @kind void;
}
procedure `void` `SequenceBuilder$annotations`() @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.SequenceBuilder$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L54aabc.  return @kind void;
}
procedure `java.util.Iterator` `buildIterator`(`kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.buildIterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54a9fc.  v0:= "builderAction" @kind object;
  #L54aa00.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54aa06.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/SequencesKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @kind static;
  #L54aa0c.  v1:= temp @kind object;
  #L54aa0e.  return v1 @kind object;
}
procedure `kotlin.sequences.Sequence` `buildSequence`(`kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.buildSequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L54aa54.  v0:= "builderAction" @kind object;
  #L54aa58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54aa5e.  v0:= new `kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1`;
  #L54aa62.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1;.<init>:(Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54aa68.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.iterator:(Lkotlin/jvm/functions/Function2;)Ljava/util/Iterator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54aa20.  v0:= "block" @kind object;
  #L54aa24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54aa2a.  v0:= new `kotlin.sequences.SequenceBuilderIterator`;
  #L54aa2e.  call `<init>`(v0) @signature `Lkotlin/sequences/SequenceBuilderIterator;.<init>:()V` @kind direct;
  #L54aa34.  call temp:= `createCoroutineUnintercepted`(v1, v0, v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L54aa3a.  v1:= temp @kind object;
  #L54aa3c.  call `setNextStep`(v0, v1) @signature `Lkotlin/sequences/SequenceBuilderIterator;.setNextStep:(Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L54aa42.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `sequence`(`kotlin.jvm.functions.Function2` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L54aa7c.  v0:= "block" @kind object;
  #L54aa80.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L54aa86.  v0:= new `kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1`;
  #L54aa8a.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1;.<init>:(Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L54aa90.  return v0 @kind object;
}
