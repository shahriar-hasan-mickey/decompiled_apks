record `e.w.a.a.k` @kind class @AccessFlag PUBLIC extends `android.view.animation.Interpolator` @kind interface {
  `float`[] `e.w.a.a.k.a` @AccessFlag PRIVATE;
  `float`[] `e.w.a.a.k.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.w.a.a.k` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `org.xmlpull.v1.XmlPullParser` v4 @kind object) @signature `Le/w/a/a/k;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2af508.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2af50e.  v0:= temp @kind object;
  #L2af510.  call temp:= `getTheme`(v2) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L2af516.  v2:= temp @kind object;
  #L2af518.  call `<init>`(v1, v0, v2, v3, v4) @signature `Le/w/a/a/k;.<init>:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L2af51e.  return @kind void;
}
procedure `void` `<init>`(`e.w.a.a.k` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.content.res.Resources$Theme` v3 @kind object, `android.util.AttributeSet` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Le/w/a/a/k;.<init>:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2af530.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af536.  v0:= `@@e.w.a.a.a.l` @type ^`int`[] @kind object;
  #L2af53a.  call temp:= `k`(v2, v3, v4, v0) @signature `Le/g/j/p/w;.k:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L2af540.  v2:= temp @kind object;
  #L2af542.  call `d`(v1, v2, v5) @signature `Le/w/a/a/k;.d:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L2af548.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L2af54e.  return @kind void;
}
procedure `void` `a`(`e.w.a.a.k` v8 @kind this, `float` v9 , `float` v10 , `float` v11 , `float` v12 ) @signature `Le/w/a/a/k;.a:(FFFF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2af560.  v7:= new `android.graphics.Path`;
  #L2af564.  call `<init>`(v7) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L2af56a.  v0:= 0I;
  #L2af56c.  call `moveTo`(v7, v0, v0) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L2af572.  v5:= 1.0F;
  #L2af576.  v6:= 1.0F;
  #L2af57a.  v0:= v7 @kind object;
  #L2af57c.  v1:= v9;
  #L2af57e.  v2:= v10;
  #L2af580.  v3:= v11;
  #L2af582.  v4:= v12;
  #L2af584.  call `cubicTo`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Path;.cubicTo:(FFFFFF)V` @kind virtual;
  #L2af58a.  call `b`(v8, v7) @signature `Le/w/a/a/k;.b:(Landroid/graphics/Path;)V` @kind direct;
  #L2af590.  return @kind void;
}
procedure `void` `b`(`e.w.a.a.k` v10 @kind this, `android.graphics.Path` v11 @kind object) @signature `Le/w/a/a/k;.b:(Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2af5a4.  v0:= new `android.graphics.PathMeasure`;
  #L2af5a8.  v1:= 0I;
  #L2af5aa.  call `<init>`(v0, v11, v1) @signature `Landroid/graphics/PathMeasure;.<init>:(Landroid/graphics/Path;Z)V` @kind direct;
  #L2af5b0.  call temp:= `getLength`(v0) @signature `Landroid/graphics/PathMeasure;.getLength:()F` @kind virtual;
  #L2af5b6.  v11:= temp;
  #L2af5b8.  v2:= 990057071I;
  #L2af5be.  v2:= v11 / v2 @kind float;
  #L2af5c2.  v2:= (`int`) v2 @kind f2i;
  #L2af5c4.  v3:= 1I;
  #L2af5c6.  v2:= v2 + v3 @kind int;
  #L2af5c8.  v4:= 3000I;
  #L2af5cc.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2af5d2.  v2:= temp;
  #L2af5d4.  if v2 <= 0 then goto L2af798;
  #L2af5d8.  v4:= new `float`[v2];
  #L2af5dc.  v10.`e.w.a.a.k.a` @type ^`float`[] := v4 @kind object;
  #L2af5e0.  v4:= new `float`[v2];
  #L2af5e4.  v10.`e.w.a.a.k.b` @type ^`float`[] := v4 @kind object;
  #L2af5e8.  v4:= 2I;
  #L2af5ea.  v4:= new `float`[v4];
  #L2af5ee.  v5:= 0I;
  #L2af5f0.  if v5 >= v2 then goto L2af628;
  #L2af5f4.  v6:= (`float`) v5 @kind i2f;
  #L2af5f6.  v6:= v6 * v11 @kind float;
  #L2af5fa.  v7:= v2 + -1;
  #L2af5fe.  v7:= (`float`) v7 @kind i2f;
  #L2af600.  v6:= v6 / v7 @kind float;
  #L2af602.  v7:= 0I;
  #L2af604.  call temp:= `getPosTan`(v0, v6, v4, v7) @signature `Landroid/graphics/PathMeasure;.getPosTan:(F[F[F)Z` @kind virtual;
  #L2af60a.  v6:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af60e.  v7:= v4[v1];
  #L2af612.  v6[v5]:= v7;
  #L2af616.  v6:= v10.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af61a.  v7:= v4[v3];
  #L2af61e.  v6[v5]:= v7;
  #L2af622.  v5:= v5 + 1;
  #L2af626.  goto L2af5f0;
  #L2af628.  v11:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af62c.  v11:= v11[v1];
  #L2af630.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2af636.  v11:= temp;
  #L2af638.  v4:= (`double`) v11 @kind f2d;
  #L2af63a.  v6:= 1.0E-5D;
  #L2af644.  v11:= dcmpl(v4, v6);
  #L2af648.  if v11 > 0 then goto L2af71c;
  #L2af64c.  v11:= v10.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af650.  v11:= v11[v1];
  #L2af654.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2af65a.  v11:= temp;
  #L2af65c.  v4:= (`double`) v11 @kind f2d;
  #L2af65e.  v11:= dcmpl(v4, v6);
  #L2af662.  if v11 > 0 then goto L2af71c;
  #L2af666.  v11:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af66a.  v4:= v2 + -1;
  #L2af66e.  v11:= v11[v4];
  #L2af672.  v5:= 1.0F;
  #L2af676.  v11:= v11 - v5 @kind float;
  #L2af678.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2af67e.  v11:= temp;
  #L2af680.  v8:= (`double`) v11 @kind f2d;
  #L2af682.  v11:= dcmpl(v8, v6);
  #L2af686.  if v11 > 0 then goto L2af71c;
  #L2af68a.  v11:= v10.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af68e.  v11:= v11[v4];
  #L2af692.  v11:= v11 - v5 @kind float;
  #L2af694.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2af69a.  v11:= temp;
  #L2af69c.  v4:= (`double`) v11 @kind f2d;
  #L2af69e.  v11:= dcmpl(v4, v6);
  #L2af6a2.  if v11 > 0 then goto L2af71c;
  #L2af6a6.  v11:= 0I;
  #L2af6a8.  v3:= 0I;
  #L2af6aa.  if v1 >= v2 then goto L2af6fe;
  #L2af6ae.  v4:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af6b2.  v5:= v3 + 1;
  #L2af6b6.  v3:= v4[v3];
  #L2af6ba.  v11:= fcmpg(v3, v11);
  #L2af6be.  if v11 < 0 then goto L2af6d0;
  #L2af6c2.  v4[v1]:= v3;
  #L2af6c6.  v1:= v1 + 1;
  #L2af6ca.  v11:= v3;
  #L2af6cc.  v3:= v5;
  #L2af6ce.  goto L2af6aa;
  #L2af6d0.  v11:= new `java.lang.IllegalArgumentException`;
  #L2af6d4.  v0:= new `java.lang.StringBuilder`;
  #L2af6d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2af6de.  v1:= "The Path cannot loop back on itself, x :" @kind object;
  #L2af6e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af6e8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af6ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af6f4.  v0:= temp @kind object;
  #L2af6f6.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af6fc.  throw v11;
  #L2af6fe.  call temp:= `nextContour`(v0) @signature `Landroid/graphics/PathMeasure;.nextContour:()Z` @kind virtual;
  #L2af704.  v11:= temp;
  #L2af706.  if v11 != 0 then goto L2af70c;
  #L2af70a.  return @kind void;
  #L2af70c.  v11:= new `java.lang.IllegalArgumentException`;
  #L2af710.  v0:= "The Path should be continuous, can't have 2+ contours" @kind object;
  #L2af714.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af71a.  throw v11;
  #L2af71c.  v11:= new `java.lang.IllegalArgumentException`;
  #L2af720.  v0:= new `java.lang.StringBuilder`;
  #L2af724.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2af72a.  v4:= "The Path must start at (0,0) and end at (1,1) start: " @kind object;
  #L2af72e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af734.  v4:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af738.  v4:= v4[v1];
  #L2af73c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af742.  v4:= "," @kind object;
  #L2af746.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af74c.  v5:= v10.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af750.  v1:= v5[v1];
  #L2af754.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af75a.  v1:= " end:" @kind object;
  #L2af75e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af764.  v1:= v10.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af768.  v2:= v2 - v3 @kind int;
  #L2af76a.  v1:= v1[v2];
  #L2af76e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af774.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af77a.  v1:= v10.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af77e.  v1:= v1[v2];
  #L2af782.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af788.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af78e.  v0:= temp @kind object;
  #L2af790.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af796.  throw v11;
  #L2af798.  v0:= new `java.lang.IllegalArgumentException`;
  #L2af79c.  v1:= new `java.lang.StringBuilder`;
  #L2af7a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2af7a6.  v2:= "The Path has a invalid length " @kind object;
  #L2af7aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af7b0.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af7b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af7bc.  v11:= temp @kind object;
  #L2af7be.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af7c4.  goto L2af7c8;
  #L2af7c6.  throw v0;
  #L2af7c8.  goto L2af7c6;
}
procedure `void` `c`(`e.w.a.a.k` v2 @kind this, `float` v3 , `float` v4 ) @signature `Le/w/a/a/k;.c:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2af7dc.  v0:= new `android.graphics.Path`;
  #L2af7e0.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L2af7e6.  v1:= 0I;
  #L2af7e8.  call `moveTo`(v0, v1, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L2af7ee.  v1:= 1.0F;
  #L2af7f2.  call `quadTo`(v0, v3, v4, v1, v1) @signature `Landroid/graphics/Path;.quadTo:(FFFF)V` @kind virtual;
  #L2af7f8.  call `b`(v2, v0) @signature `Le/w/a/a/k;.b:(Landroid/graphics/Path;)V` @kind direct;
  #L2af7fe.  return @kind void;
}
procedure `void` `d`(`e.w.a.a.k` v7 @kind this, `android.content.res.TypedArray` v8 @kind object, `org.xmlpull.v1.XmlPullParser` v9 @kind object) @signature `Le/w/a/a/k;.d:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2af810.  v0:= "pathData" @kind object;
  #L2af814.  call temp:= `j`(v9, v0) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2af81a.  v1:= temp;
  #L2af81c.  if v1 == 0 then goto L2af86c;
  #L2af820.  v1:= 4I;
  #L2af822.  call temp:= `i`(v8, v9, v0, v1) @signature `Le/g/j/p/w;.i:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L2af828.  v8:= temp @kind object;
  #L2af82a.  call temp:= `e`(v8) @signature `Landroidx/core/graphics/h;.e:(Ljava/lang/String;)Landroid/graphics/Path;` @kind static;
  #L2af830.  v9:= temp @kind object;
  #L2af832.  if v9 == 0 then goto L2af83e;
  #L2af836.  call `b`(v7, v9) @signature `Le/w/a/a/k;.b:(Landroid/graphics/Path;)V` @kind direct;
  #L2af83c.  goto L2af8e4;
  #L2af83e.  v9:= new `android.view.InflateException`;
  #L2af842.  v0:= new `java.lang.StringBuilder`;
  #L2af846.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2af84c.  v1:= "The path is null, which is created from " @kind object;
  #L2af850.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af856.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2af85c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2af862.  v8:= temp @kind object;
  #L2af864.  call `<init>`(v9, v8) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af86a.  throw v9;
  #L2af86c.  v0:= "controlX1" @kind object;
  #L2af870.  call temp:= `j`(v9, v0) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2af876.  v1:= temp;
  #L2af878.  if v1 == 0 then goto L2af906;
  #L2af87c.  v1:= "controlY1" @kind object;
  #L2af880.  call temp:= `j`(v9, v1) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2af886.  v2:= temp;
  #L2af888.  if v2 == 0 then goto L2af8f6;
  #L2af88c.  v2:= 0I;
  #L2af88e.  v3:= 0I;
  #L2af890.  call temp:= `f`(v8, v9, v0, v2, v3) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2af896.  v0:= temp;
  #L2af898.  v2:= 1I;
  #L2af89a.  call temp:= `f`(v8, v9, v1, v2, v3) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2af8a0.  v1:= temp;
  #L2af8a2.  v2:= "controlX2" @kind object;
  #L2af8a6.  call temp:= `j`(v9, v2) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2af8ac.  v4:= temp;
  #L2af8ae.  v5:= "controlY2" @kind object;
  #L2af8b2.  call temp:= `j`(v9, v5) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2af8b8.  v6:= temp;
  #L2af8ba.  if v4 != v6 then goto L2af8e6;
  #L2af8be.  if v4 != 0 then goto L2af8ca;
  #L2af8c2.  call `c`(v7, v0, v1) @signature `Le/w/a/a/k;.c:(FF)V` @kind direct;
  #L2af8c8.  goto L2af8e4;
  #L2af8ca.  v4:= 2I;
  #L2af8cc.  call temp:= `f`(v8, v9, v2, v4, v3) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2af8d2.  v2:= temp;
  #L2af8d4.  v4:= 3I;
  #L2af8d6.  call temp:= `f`(v8, v9, v5, v4, v3) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2af8dc.  v8:= temp;
  #L2af8de.  call `a`(v7, v0, v1, v2, v8) @signature `Le/w/a/a/k;.a:(FFFF)V` @kind direct;
  #L2af8e4.  return @kind void;
  #L2af8e6.  v8:= new `android.view.InflateException`;
  #L2af8ea.  v9:= "pathInterpolator requires both controlX2 and controlY2 for cubic Beziers." @kind object;
  #L2af8ee.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af8f4.  throw v8;
  #L2af8f6.  v8:= new `android.view.InflateException`;
  #L2af8fa.  v9:= "pathInterpolator requires the controlY1 attribute" @kind object;
  #L2af8fe.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af904.  throw v8;
  #L2af906.  v8:= new `android.view.InflateException`;
  #L2af90a.  v9:= "pathInterpolator requires the controlX1 attribute" @kind object;
  #L2af90e.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2af914.  throw v8;
}
procedure `float` `getInterpolation`(`e.w.a.a.k` v6 @kind this, `float` v7 ) @signature `Le/w/a/a/k;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2af46c.  v0:= 0I;
  #L2af46e.  v1:= fcmpg(v7, v0);
  #L2af472.  if v1 > 0 then goto L2af478;
  #L2af476.  return v0;
  #L2af478.  v1:= 1.0F;
  #L2af47c.  v2:= fcmpl(v7, v1);
  #L2af480.  if v2 < 0 then goto L2af486;
  #L2af484.  return v1;
  #L2af486.  v1:= 0I;
  #L2af488.  v2:= v6.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af48c.  v2:= length @variable v2;
  #L2af48e.  v3:= 1I;
  #L2af490.  v2:= v2 - v3 @kind int;
  #L2af492.  v4:= v2 - v1 @kind int;
  #L2af496.  if v4 <= v3 then goto L2af4ba;
  #L2af49a.  v4:= v1 + v2 @kind int;
  #L2af49e.  v4:= v4 / 2;
  #L2af4a2.  v5:= v6.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af4a6.  v5:= v5[v4];
  #L2af4aa.  v5:= fcmpg(v7, v5);
  #L2af4ae.  if v5 >= 0 then goto L2af4b6;
  #L2af4b2.  v2:= v4;
  #L2af4b4.  goto L2af492;
  #L2af4b6.  v1:= v4;
  #L2af4b8.  goto L2af492;
  #L2af4ba.  v3:= v6.`e.w.a.a.k.a` @type ^`float`[] @kind object;
  #L2af4be.  v4:= v3[v2];
  #L2af4c2.  v5:= v3[v1];
  #L2af4c6.  v4:= v4 - v5 @kind float;
  #L2af4c8.  v0:= fcmpl(v4, v0);
  #L2af4cc.  if v0 != 0 then goto L2af4da;
  #L2af4d0.  v7:= v6.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af4d4.  v7:= v7[v1];
  #L2af4d8.  return v7;
  #L2af4da.  v0:= v3[v1];
  #L2af4de.  v7:= v7 - v0 @kind float;
  #L2af4e0.  v7:= v7 / v4 @kind float;
  #L2af4e2.  v0:= v6.`e.w.a.a.k.b` @type ^`float`[] @kind object;
  #L2af4e6.  v1:= v0[v1];
  #L2af4ea.  v0:= v0[v2];
  #L2af4ee.  v0:= v0 - v1 @kind float;
  #L2af4f0.  v7:= v7 * v0 @kind float;
  #L2af4f4.  v1:= v1 + v7 @kind float;
  #L2af4f6.  return v1;
}
