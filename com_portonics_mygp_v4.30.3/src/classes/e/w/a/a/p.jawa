record `e.w.a.a.p` @kind class @AccessFlag  extends `e.w.a.a.q` @kind class {
  `android.graphics.Matrix` `e.w.a.a.p.a` @AccessFlag FINAL;
  `java.util.ArrayList` `e.w.a.a.p.b` @AccessFlag FINAL;
  `float` `e.w.a.a.p.c` @AccessFlag ;
  `float` `e.w.a.a.p.d` @AccessFlag PRIVATE;
  `float` `e.w.a.a.p.e` @AccessFlag PRIVATE;
  `float` `e.w.a.a.p.f` @AccessFlag PRIVATE;
  `float` `e.w.a.a.p.g` @AccessFlag PRIVATE;
  `float` `e.w.a.a.p.h` @AccessFlag PRIVATE;
  `float` `e.w.a.a.p.i` @AccessFlag PRIVATE;
  `android.graphics.Matrix` `e.w.a.a.p.j` @AccessFlag FINAL;
  `int` `e.w.a.a.p.k` @AccessFlag ;
  `int`[] `e.w.a.a.p.l` @AccessFlag PRIVATE;
  `java.lang.String` `e.w.a.a.p.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.w.a.a.p` v3 @kind this) @signature `Le/w/a/a/p;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b0310.  v0:= 0I;
  #L2b0312.  call `<init>`(v3, v0) @signature `Le/w/a/a/q;.<init>:(Le/w/a/a/m;)V` @kind direct;
  #L2b0318.  v1:= new `android.graphics.Matrix`;
  #L2b031c.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2b0322.  v3.`e.w.a.a.p.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L2b0326.  v1:= new `java.util.ArrayList`;
  #L2b032a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b0330.  v3.`e.w.a.a.p.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L2b0334.  v1:= 0I;
  #L2b0336.  v3.`e.w.a.a.p.c` @type ^`float` := v1;
  #L2b033a.  v3.`e.w.a.a.p.d` @type ^`float` := v1;
  #L2b033e.  v3.`e.w.a.a.p.e` @type ^`float` := v1;
  #L2b0342.  v2:= 1.0F;
  #L2b0346.  v3.`e.w.a.a.p.f` @type ^`float` := v2;
  #L2b034a.  v3.`e.w.a.a.p.g` @type ^`float` := v2;
  #L2b034e.  v3.`e.w.a.a.p.h` @type ^`float` := v1;
  #L2b0352.  v3.`e.w.a.a.p.i` @type ^`float` := v1;
  #L2b0356.  v1:= new `android.graphics.Matrix`;
  #L2b035a.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2b0360.  v3.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L2b0364.  v3.`e.w.a.a.p.m` @type ^`java.lang.String` := v0 @kind object;
  #L2b0368.  return @kind void;
}
procedure `void` `<init>`(`e.w.a.a.p` v4 @kind this, `e.w.a.a.p` v5 @kind object, `androidx.collection.a` v6 @kind object) @signature `Le/w/a/a/p;.<init>:(Le/w/a/a/p;Landroidx/collection/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b037c.  v0:= 0I;
  #L2b037e.  call `<init>`(v4, v0) @signature `Le/w/a/a/q;.<init>:(Le/w/a/a/m;)V` @kind direct;
  #L2b0384.  v1:= new `android.graphics.Matrix`;
  #L2b0388.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2b038e.  v4.`e.w.a.a.p.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L2b0392.  v1:= new `java.util.ArrayList`;
  #L2b0396.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b039c.  v4.`e.w.a.a.p.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L2b03a0.  v1:= 0I;
  #L2b03a2.  v4.`e.w.a.a.p.c` @type ^`float` := v1;
  #L2b03a6.  v4.`e.w.a.a.p.d` @type ^`float` := v1;
  #L2b03aa.  v4.`e.w.a.a.p.e` @type ^`float` := v1;
  #L2b03ae.  v2:= 1.0F;
  #L2b03b2.  v4.`e.w.a.a.p.f` @type ^`float` := v2;
  #L2b03b6.  v4.`e.w.a.a.p.g` @type ^`float` := v2;
  #L2b03ba.  v4.`e.w.a.a.p.h` @type ^`float` := v1;
  #L2b03be.  v4.`e.w.a.a.p.i` @type ^`float` := v1;
  #L2b03c2.  v1:= new `android.graphics.Matrix`;
  #L2b03c6.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2b03cc.  v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L2b03d0.  v4.`e.w.a.a.p.m` @type ^`java.lang.String` := v0 @kind object;
  #L2b03d4.  v0:= v5.`e.w.a.a.p.c` @type ^`float`;
  #L2b03d8.  v4.`e.w.a.a.p.c` @type ^`float` := v0;
  #L2b03dc.  v0:= v5.`e.w.a.a.p.d` @type ^`float`;
  #L2b03e0.  v4.`e.w.a.a.p.d` @type ^`float` := v0;
  #L2b03e4.  v0:= v5.`e.w.a.a.p.e` @type ^`float`;
  #L2b03e8.  v4.`e.w.a.a.p.e` @type ^`float` := v0;
  #L2b03ec.  v0:= v5.`e.w.a.a.p.f` @type ^`float`;
  #L2b03f0.  v4.`e.w.a.a.p.f` @type ^`float` := v0;
  #L2b03f4.  v0:= v5.`e.w.a.a.p.g` @type ^`float`;
  #L2b03f8.  v4.`e.w.a.a.p.g` @type ^`float` := v0;
  #L2b03fc.  v0:= v5.`e.w.a.a.p.h` @type ^`float`;
  #L2b0400.  v4.`e.w.a.a.p.h` @type ^`float` := v0;
  #L2b0404.  v0:= v5.`e.w.a.a.p.i` @type ^`float`;
  #L2b0408.  v4.`e.w.a.a.p.i` @type ^`float` := v0;
  #L2b040c.  v0:= v5.`e.w.a.a.p.l` @type ^`int`[] @kind object;
  #L2b0410.  v4.`e.w.a.a.p.l` @type ^`int`[] := v0 @kind object;
  #L2b0414.  v0:= v5.`e.w.a.a.p.m` @type ^`java.lang.String` @kind object;
  #L2b0418.  v4.`e.w.a.a.p.m` @type ^`java.lang.String` := v0 @kind object;
  #L2b041c.  v2:= v5.`e.w.a.a.p.k` @type ^`int`;
  #L2b0420.  v4.`e.w.a.a.p.k` @type ^`int` := v2;
  #L2b0424.  if v0 == 0 then goto L2b042e;
  #L2b0428.  call temp:= `put`(v6, v0, v4) @signature `Landroidx/collection/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b042e.  v0:= v5.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b0432.  call `set`(v1, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L2b0438.  v5:= v5.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b043c.  v0:= 0I;
  #L2b043e.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2b0444.  v1:= temp;
  #L2b0446.  if v0 >= v1 then goto L2b04d0;
  #L2b044a.  call temp:= `get`(v5, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2b0450.  v1:= temp @kind object;
  #L2b0452.  v2:= instanceof @variable v1 @type ^`e.w.a.a.p` @kind boolean;
  #L2b0456.  if v2 == 0 then goto L2b0474;
  #L2b045a.  v1:= (`e.w.a.a.p`) v1 @kind object;
  #L2b045e.  v2:= v4.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b0462.  v3:= new `e.w.a.a.p`;
  #L2b0466.  call `<init>`(v3, v1, v6) @signature `Le/w/a/a/p;.<init>:(Le/w/a/a/p;Landroidx/collection/a;)V` @kind direct;
  #L2b046c.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b0472.  goto L2b04ba;
  #L2b0474.  v2:= instanceof @variable v1 @type ^`e.w.a.a.o` @kind boolean;
  #L2b0478.  if v2 == 0 then goto L2b048c;
  #L2b047c.  v2:= new `e.w.a.a.o`;
  #L2b0480.  v1:= (`e.w.a.a.o`) v1 @kind object;
  #L2b0484.  call `<init>`(v2, v1) @signature `Le/w/a/a/o;.<init>:(Le/w/a/a/o;)V` @kind direct;
  #L2b048a.  goto L2b04a2;
  #L2b048c.  v2:= instanceof @variable v1 @type ^`e.w.a.a.n` @kind boolean;
  #L2b0490.  if v2 == 0 then goto L2b04c0;
  #L2b0494.  v2:= new `e.w.a.a.n`;
  #L2b0498.  v1:= (`e.w.a.a.n`) v1 @kind object;
  #L2b049c.  call `<init>`(v2, v1) @signature `Le/w/a/a/n;.<init>:(Le/w/a/a/n;)V` @kind direct;
  #L2b04a2.  v1:= v4.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b04a6.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b04ac.  v1:= v2.`e.w.a.a.r.b` @type ^`java.lang.String` @kind object;
  #L2b04b0.  if v1 == 0 then goto L2b04ba;
  #L2b04b4.  call temp:= `put`(v6, v1, v2) @signature `Landroidx/collection/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2b04ba.  v0:= v0 + 1;
  #L2b04be.  goto L2b043e;
  #L2b04c0.  v5:= new `java.lang.IllegalStateException`;
  #L2b04c4.  v6:= "Unknown object in the tree!" @kind object;
  #L2b04c8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b04ce.  throw v5;
  #L2b04d0.  return @kind void;
}
procedure `void` `d`(`e.w.a.a.p` v4 @kind this) @signature `Le/w/a/a/p;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b0628.  v0:= v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b062c.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L2b0632.  v0:= v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b0636.  v1:= v4.`e.w.a.a.p.d` @type ^`float`;
  #L2b063a.  v1:= -v1 @kind float;
  #L2b063c.  v2:= v4.`e.w.a.a.p.e` @type ^`float`;
  #L2b0640.  v2:= -v2 @kind float;
  #L2b0642.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2b0648.  v0:= v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b064c.  v1:= v4.`e.w.a.a.p.f` @type ^`float`;
  #L2b0650.  v2:= v4.`e.w.a.a.p.g` @type ^`float`;
  #L2b0654.  call temp:= `postScale`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2b065a.  v0:= v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b065e.  v1:= v4.`e.w.a.a.p.c` @type ^`float`;
  #L2b0662.  v2:= 0I;
  #L2b0664.  call temp:= `postRotate`(v0, v1, v2, v2) @signature `Landroid/graphics/Matrix;.postRotate:(FFF)Z` @kind virtual;
  #L2b066a.  v0:= v4.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b066e.  v1:= v4.`e.w.a.a.p.h` @type ^`float`;
  #L2b0672.  v2:= v4.`e.w.a.a.p.d` @type ^`float`;
  #L2b0676.  v1:= v1 + v2 @kind float;
  #L2b0678.  v2:= v4.`e.w.a.a.p.i` @type ^`float`;
  #L2b067c.  v3:= v4.`e.w.a.a.p.e` @type ^`float`;
  #L2b0680.  v2:= v2 + v3 @kind float;
  #L2b0682.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2b0688.  return @kind void;
}
procedure `void` `e`(`e.w.a.a.p` v3 @kind this, `android.content.res.TypedArray` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Le/w/a/a/p;.e:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b069c.  v0:= 0I;
  #L2b069e.  v3.`e.w.a.a.p.l` @type ^`int`[] := v0 @kind object;
  #L2b06a2.  v0:= v3.`e.w.a.a.p.c` @type ^`float`;
  #L2b06a6.  v1:= "rotation" @kind object;
  #L2b06aa.  v2:= 5I;
  #L2b06ac.  call temp:= `f`(v4, v5, v1, v2, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b06b2.  v0:= temp;
  #L2b06b4.  v3.`e.w.a.a.p.c` @type ^`float` := v0;
  #L2b06b8.  v0:= v3.`e.w.a.a.p.d` @type ^`float`;
  #L2b06bc.  v1:= 1I;
  #L2b06be.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2b06c4.  v0:= temp;
  #L2b06c6.  v3.`e.w.a.a.p.d` @type ^`float` := v0;
  #L2b06ca.  v0:= v3.`e.w.a.a.p.e` @type ^`float`;
  #L2b06ce.  v1:= 2I;
  #L2b06d0.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2b06d6.  v0:= temp;
  #L2b06d8.  v3.`e.w.a.a.p.e` @type ^`float` := v0;
  #L2b06dc.  v0:= v3.`e.w.a.a.p.f` @type ^`float`;
  #L2b06e0.  v1:= "scaleX" @kind object;
  #L2b06e4.  v2:= 3I;
  #L2b06e6.  call temp:= `f`(v4, v5, v1, v2, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b06ec.  v0:= temp;
  #L2b06ee.  v3.`e.w.a.a.p.f` @type ^`float` := v0;
  #L2b06f2.  v0:= v3.`e.w.a.a.p.g` @type ^`float`;
  #L2b06f6.  v1:= "scaleY" @kind object;
  #L2b06fa.  v2:= 4I;
  #L2b06fc.  call temp:= `f`(v4, v5, v1, v2, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0702.  v0:= temp;
  #L2b0704.  v3.`e.w.a.a.p.g` @type ^`float` := v0;
  #L2b0708.  v0:= v3.`e.w.a.a.p.h` @type ^`float`;
  #L2b070c.  v1:= "translateX" @kind object;
  #L2b0710.  v2:= 6I;
  #L2b0712.  call temp:= `f`(v4, v5, v1, v2, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0718.  v0:= temp;
  #L2b071a.  v3.`e.w.a.a.p.h` @type ^`float` := v0;
  #L2b071e.  v0:= v3.`e.w.a.a.p.i` @type ^`float`;
  #L2b0722.  v1:= "translateY" @kind object;
  #L2b0726.  v2:= 7I;
  #L2b0728.  call temp:= `f`(v4, v5, v1, v2, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b072e.  v5:= temp;
  #L2b0730.  v3.`e.w.a.a.p.i` @type ^`float` := v5;
  #L2b0734.  v5:= 0I;
  #L2b0736.  call temp:= `getString`(v4, v5) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L2b073c.  v4:= temp @kind object;
  #L2b073e.  if v4 == 0 then goto L2b0746;
  #L2b0742.  v3.`e.w.a.a.p.m` @type ^`java.lang.String` := v4 @kind object;
  #L2b0746.  call `d`(v3) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b074c.  return @kind void;
}
procedure `boolean` `a`(`e.w.a.a.p` v3 @kind this) @signature `Le/w/a/a/p;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b01bc.  v0:= 0I;
  #L2b01be.  v1:= 0I;
  #L2b01c0.  v2:= v3.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b01c4.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2b01ca.  v2:= temp;
  #L2b01cc.  if v1 >= v2 then goto L2b01f6;
  #L2b01d0.  v2:= v3.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b01d4.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2b01da.  v2:= temp @kind object;
  #L2b01dc.  v2:= (`e.w.a.a.q`) v2 @kind object;
  #L2b01e0.  call temp:= `a`(v2) @signature `Le/w/a/a/q;.a:()Z` @kind virtual;
  #L2b01e6.  v2:= temp;
  #L2b01e8.  if v2 == 0 then goto L2b01f0;
  #L2b01ec.  v0:= 1I;
  #L2b01ee.  return v0;
  #L2b01f0.  v1:= v1 + 1;
  #L2b01f4.  goto L2b01c0;
  #L2b01f6.  return v0;
}
procedure `boolean` `b`(`e.w.a.a.p` v3 @kind this, `int`[] v4 @kind object) @signature `Le/w/a/a/p;.b:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b0208.  v0:= 0I;
  #L2b020a.  v1:= 0I;
  #L2b020c.  v2:= v3.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b0210.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2b0216.  v2:= temp;
  #L2b0218.  if v0 >= v2 then goto L2b023c;
  #L2b021c.  v2:= v3.`e.w.a.a.p.b` @type ^`java.util.ArrayList` @kind object;
  #L2b0220.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2b0226.  v2:= temp @kind object;
  #L2b0228.  v2:= (`e.w.a.a.q`) v2 @kind object;
  #L2b022c.  call temp:= `b`(v2, v4) @signature `Le/w/a/a/q;.b:([I)Z` @kind virtual;
  #L2b0232.  v2:= temp;
  #L2b0234.  v1:= v1 ^| v2 @kind int;
  #L2b0236.  v0:= v0 + 1;
  #L2b023a.  goto L2b020c;
  #L2b023c.  return v1;
}
procedure `void` `c`(`e.w.a.a.p` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Le/w/a/a/p;.c:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b04e4.  v0:= `@@e.w.a.a.a.b` @type ^`int`[] @kind object;
  #L2b04e8.  call temp:= `k`(v2, v4, v3, v0) @signature `Le/g/j/p/w;.k:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L2b04ee.  v2:= temp @kind object;
  #L2b04f0.  call `e`(v1, v2, v5) @signature `Le/w/a/a/p;.e:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L2b04f6.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L2b04fc.  return @kind void;
}
procedure `java.lang.String` `getGroupName`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getGroupName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b02f8.  v0:= v1.`e.w.a.a.p.m` @type ^`java.lang.String` @kind object;
  #L2b02fc.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `getLocalMatrix`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getLocalMatrix:()Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b01a4.  v0:= v1.`e.w.a.a.p.j` @type ^`android.graphics.Matrix` @kind object;
  #L2b01a8.  return v0 @kind object;
}
procedure `float` `getPivotX`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getPivotX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0250.  v0:= v1.`e.w.a.a.p.d` @type ^`float`;
  #L2b0254.  return v0;
}
procedure `float` `getPivotY`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getPivotY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0268.  v0:= v1.`e.w.a.a.p.e` @type ^`float`;
  #L2b026c.  return v0;
}
procedure `float` `getRotation`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getRotation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0280.  v0:= v1.`e.w.a.a.p.c` @type ^`float`;
  #L2b0284.  return v0;
}
procedure `float` `getScaleX`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0298.  v0:= v1.`e.w.a.a.p.f` @type ^`float`;
  #L2b029c.  return v0;
}
procedure `float` `getScaleY`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b02b0.  v0:= v1.`e.w.a.a.p.g` @type ^`float`;
  #L2b02b4.  return v0;
}
procedure `float` `getTranslateX`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getTranslateX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b02c8.  v0:= v1.`e.w.a.a.p.h` @type ^`float`;
  #L2b02cc.  return v0;
}
procedure `float` `getTranslateY`(`e.w.a.a.p` v1 @kind this) @signature `Le/w/a/a/p;.getTranslateY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b02e0.  v0:= v1.`e.w.a.a.p.i` @type ^`float`;
  #L2b02e4.  return v0;
}
procedure `void` `setPivotX`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setPivotX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0510.  v0:= v1.`e.w.a.a.p.d` @type ^`float`;
  #L2b0514.  v0:= fcmpl(v2, v0);
  #L2b0518.  if v0 == 0 then goto L2b0526;
  #L2b051c.  v1.`e.w.a.a.p.d` @type ^`float` := v2;
  #L2b0520.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b0526.  return @kind void;
}
procedure `void` `setPivotY`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setPivotY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0538.  v0:= v1.`e.w.a.a.p.e` @type ^`float`;
  #L2b053c.  v0:= fcmpl(v2, v0);
  #L2b0540.  if v0 == 0 then goto L2b054e;
  #L2b0544.  v1.`e.w.a.a.p.e` @type ^`float` := v2;
  #L2b0548.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b054e.  return @kind void;
}
procedure `void` `setRotation`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setRotation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0560.  v0:= v1.`e.w.a.a.p.c` @type ^`float`;
  #L2b0564.  v0:= fcmpl(v2, v0);
  #L2b0568.  if v0 == 0 then goto L2b0576;
  #L2b056c.  v1.`e.w.a.a.p.c` @type ^`float` := v2;
  #L2b0570.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b0576.  return @kind void;
}
procedure `void` `setScaleX`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setScaleX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0588.  v0:= v1.`e.w.a.a.p.f` @type ^`float`;
  #L2b058c.  v0:= fcmpl(v2, v0);
  #L2b0590.  if v0 == 0 then goto L2b059e;
  #L2b0594.  v1.`e.w.a.a.p.f` @type ^`float` := v2;
  #L2b0598.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b059e.  return @kind void;
}
procedure `void` `setScaleY`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setScaleY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b05b0.  v0:= v1.`e.w.a.a.p.g` @type ^`float`;
  #L2b05b4.  v0:= fcmpl(v2, v0);
  #L2b05b8.  if v0 == 0 then goto L2b05c6;
  #L2b05bc.  v1.`e.w.a.a.p.g` @type ^`float` := v2;
  #L2b05c0.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b05c6.  return @kind void;
}
procedure `void` `setTranslateX`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setTranslateX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b05d8.  v0:= v1.`e.w.a.a.p.h` @type ^`float`;
  #L2b05dc.  v0:= fcmpl(v2, v0);
  #L2b05e0.  if v0 == 0 then goto L2b05ee;
  #L2b05e4.  v1.`e.w.a.a.p.h` @type ^`float` := v2;
  #L2b05e8.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b05ee.  return @kind void;
}
procedure `void` `setTranslateY`(`e.w.a.a.p` v1 @kind this, `float` v2 ) @signature `Le/w/a/a/p;.setTranslateY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0600.  v0:= v1.`e.w.a.a.p.i` @type ^`float`;
  #L2b0604.  v0:= fcmpl(v2, v0);
  #L2b0608.  if v0 == 0 then goto L2b0616;
  #L2b060c.  v1.`e.w.a.a.p.i` @type ^`float` := v2;
  #L2b0610.  call `d`(v1) @signature `Le/w/a/a/p;.d:()V` @kind direct;
  #L2b0616.  return @kind void;
}
