record `e.w.a.a.o` @kind class @AccessFlag  extends `e.w.a.a.r` @kind class {
  `int`[] `e.w.a.a.o.e` @AccessFlag PRIVATE;
  `e.g.j.p.d` `e.w.a.a.o.f` @AccessFlag ;
  `float` `e.w.a.a.o.g` @AccessFlag ;
  `e.g.j.p.d` `e.w.a.a.o.h` @AccessFlag ;
  `float` `e.w.a.a.o.i` @AccessFlag ;
  `float` `e.w.a.a.o.j` @AccessFlag ;
  `float` `e.w.a.a.o.k` @AccessFlag ;
  `float` `e.w.a.a.o.l` @AccessFlag ;
  `float` `e.w.a.a.o.m` @AccessFlag ;
  `android.graphics.Paint$Cap` `e.w.a.a.o.n` @AccessFlag ;
  `android.graphics.Paint$Join` `e.w.a.a.o.o` @AccessFlag ;
  `float` `e.w.a.a.o.p` @AccessFlag ;
}
procedure `void` `<init>`(`e.w.a.a.o` v2 @kind this) @signature `Le/w/a/a/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2afe28.  call `<init>`(v2) @signature `Le/w/a/a/r;.<init>:()V` @kind direct;
  #L2afe2e.  v0:= 0I;
  #L2afe30.  v2.`e.w.a.a.o.g` @type ^`float` := v0;
  #L2afe34.  v1:= 1.0F;
  #L2afe38.  v2.`e.w.a.a.o.i` @type ^`float` := v1;
  #L2afe3c.  v2.`e.w.a.a.o.j` @type ^`float` := v1;
  #L2afe40.  v2.`e.w.a.a.o.k` @type ^`float` := v0;
  #L2afe44.  v2.`e.w.a.a.o.l` @type ^`float` := v1;
  #L2afe48.  v2.`e.w.a.a.o.m` @type ^`float` := v0;
  #L2afe4c.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2afe50.  v2.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L2afe54.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2afe58.  v2.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L2afe5c.  v0:= 4.0F;
  #L2afe60.  v2.`e.w.a.a.o.p` @type ^`float` := v0;
  #L2afe64.  return @kind void;
}
procedure `void` `<init>`(`e.w.a.a.o` v2 @kind this, `e.w.a.a.o` v3 @kind object) @signature `Le/w/a/a/o;.<init>:(Le/w/a/a/o;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2afe78.  call `<init>`(v2, v3) @signature `Le/w/a/a/r;.<init>:(Le/w/a/a/r;)V` @kind direct;
  #L2afe7e.  v0:= 0I;
  #L2afe80.  v2.`e.w.a.a.o.g` @type ^`float` := v0;
  #L2afe84.  v1:= 1.0F;
  #L2afe88.  v2.`e.w.a.a.o.i` @type ^`float` := v1;
  #L2afe8c.  v2.`e.w.a.a.o.j` @type ^`float` := v1;
  #L2afe90.  v2.`e.w.a.a.o.k` @type ^`float` := v0;
  #L2afe94.  v2.`e.w.a.a.o.l` @type ^`float` := v1;
  #L2afe98.  v2.`e.w.a.a.o.m` @type ^`float` := v0;
  #L2afe9c.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2afea0.  v2.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L2afea4.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2afea8.  v2.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L2afeac.  v0:= 4.0F;
  #L2afeb0.  v2.`e.w.a.a.o.p` @type ^`float` := v0;
  #L2afeb4.  v0:= v3.`e.w.a.a.o.e` @type ^`int`[] @kind object;
  #L2afeb8.  v2.`e.w.a.a.o.e` @type ^`int`[] := v0 @kind object;
  #L2afebc.  v0:= v3.`e.w.a.a.o.f` @type ^`e.g.j.p.d` @kind object;
  #L2afec0.  v2.`e.w.a.a.o.f` @type ^`e.g.j.p.d` := v0 @kind object;
  #L2afec4.  v0:= v3.`e.w.a.a.o.g` @type ^`float`;
  #L2afec8.  v2.`e.w.a.a.o.g` @type ^`float` := v0;
  #L2afecc.  v0:= v3.`e.w.a.a.o.i` @type ^`float`;
  #L2afed0.  v2.`e.w.a.a.o.i` @type ^`float` := v0;
  #L2afed4.  v0:= v3.`e.w.a.a.o.h` @type ^`e.g.j.p.d` @kind object;
  #L2afed8.  v2.`e.w.a.a.o.h` @type ^`e.g.j.p.d` := v0 @kind object;
  #L2afedc.  v0:= v3.`e.w.a.a.r.c` @type ^`int`;
  #L2afee0.  v2.`e.w.a.a.r.c` @type ^`int` := v0;
  #L2afee4.  v0:= v3.`e.w.a.a.o.j` @type ^`float`;
  #L2afee8.  v2.`e.w.a.a.o.j` @type ^`float` := v0;
  #L2afeec.  v0:= v3.`e.w.a.a.o.k` @type ^`float`;
  #L2afef0.  v2.`e.w.a.a.o.k` @type ^`float` := v0;
  #L2afef4.  v0:= v3.`e.w.a.a.o.l` @type ^`float`;
  #L2afef8.  v2.`e.w.a.a.o.l` @type ^`float` := v0;
  #L2afefc.  v0:= v3.`e.w.a.a.o.m` @type ^`float`;
  #L2aff00.  v2.`e.w.a.a.o.m` @type ^`float` := v0;
  #L2aff04.  v0:= v3.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2aff08.  v2.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L2aff0c.  v0:= v3.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L2aff10.  v2.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L2aff14.  v3:= v3.`e.w.a.a.o.p` @type ^`float`;
  #L2aff18.  v2.`e.w.a.a.o.p` @type ^`float` := v3;
  #L2aff1c.  return @kind void;
}
procedure `android.graphics.Paint$Cap` `e`(`e.w.a.a.o` v1 @kind this, `int` v2 , `android.graphics.Paint$Cap` v3 @kind object) @signature `Le/w/a/a/o;.e:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2afc88.  if v2 == 0 then goto L2afca6;
  #L2afc8c.  v0:= 1I;
  #L2afc8e.  if v2 == v0 then goto L2afca0;
  #L2afc92.  v0:= 2I;
  #L2afc94.  if v2 == v0 then goto L2afc9a;
  #L2afc98.  return v3 @kind object;
  #L2afc9a.  v2:= `@@android.graphics.Paint$Cap.SQUARE` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2afc9e.  return v2 @kind object;
  #L2afca0.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2afca4.  return v2 @kind object;
  #L2afca6.  v2:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2afcaa.  return v2 @kind object;
}
procedure `android.graphics.Paint$Join` `f`(`e.w.a.a.o` v1 @kind this, `int` v2 , `android.graphics.Paint$Join` v3 @kind object) @signature `Le/w/a/a/o;.f:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2afcbc.  if v2 == 0 then goto L2afcda;
  #L2afcc0.  v0:= 1I;
  #L2afcc2.  if v2 == v0 then goto L2afcd4;
  #L2afcc6.  v0:= 2I;
  #L2afcc8.  if v2 == v0 then goto L2afcce;
  #L2afccc.  return v3 @kind object;
  #L2afcce.  v2:= `@@android.graphics.Paint$Join.BEVEL` @type ^`android.graphics.Paint$Join` @kind object;
  #L2afcd2.  return v2 @kind object;
  #L2afcd4.  v2:= `@@android.graphics.Paint$Join.ROUND` @type ^`android.graphics.Paint$Join` @kind object;
  #L2afcd8.  return v2 @kind object;
  #L2afcda.  v2:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2afcde.  return v2 @kind object;
}
procedure `void` `h`(`e.w.a.a.o` v7 @kind this, `android.content.res.TypedArray` v8 @kind object, `org.xmlpull.v1.XmlPullParser` v9 @kind object, `android.content.res.Resources$Theme` v10 @kind object) @signature `Le/w/a/a/o;.h:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b0024.  v0:= 0I;
  #L2b0026.  v7.`e.w.a.a.o.e` @type ^`int`[] := v0 @kind object;
  #L2b002a.  v0:= "pathData" @kind object;
  #L2b002e.  call temp:= `j`(v9, v0) @signature `Le/g/j/p/w;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2b0034.  v0:= temp;
  #L2b0036.  if v0 != 0 then goto L2b003c;
  #L2b003a.  return @kind void;
  #L2b003c.  v0:= 0I;
  #L2b003e.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L2b0044.  v0:= temp @kind object;
  #L2b0046.  if v0 == 0 then goto L2b004e;
  #L2b004a.  v7.`e.w.a.a.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L2b004e.  v0:= 2I;
  #L2b0050.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L2b0056.  v0:= temp @kind object;
  #L2b0058.  if v0 == 0 then goto L2b0068;
  #L2b005c.  call temp:= `d`(v0) @signature `Landroidx/core/graphics/h;.d:(Ljava/lang/String;)[Landroidx/core/graphics/g;` @kind static;
  #L2b0062.  v0:= temp @kind object;
  #L2b0064.  v7.`e.w.a.a.r.a` @type ^`androidx.core.graphics.g`[] := v0 @kind object;
  #L2b0068.  v5:= 1I;
  #L2b006a.  v6:= 0I;
  #L2b006c.  v4:= "fillColor" @kind object;
  #L2b0070.  v1:= v8 @kind object;
  #L2b0072.  v2:= v9 @kind object;
  #L2b0074.  v3:= v10 @kind object;
  #L2b0076.  call temp:= `e`(v1, v2, v3, v4, v5, v6) @signature `Le/g/j/p/w;.e:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Le/g/j/p/d;` @kind static;
  #L2b007c.  v0:= temp @kind object;
  #L2b007e.  v7.`e.w.a.a.o.h` @type ^`e.g.j.p.d` := v0 @kind object;
  #L2b0082.  v0:= 12I;
  #L2b0086.  v1:= v7.`e.w.a.a.o.j` @type ^`float`;
  #L2b008a.  v2:= "fillAlpha" @kind object;
  #L2b008e.  call temp:= `f`(v8, v9, v2, v0, v1) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0094.  v0:= temp;
  #L2b0096.  v7.`e.w.a.a.o.j` @type ^`float` := v0;
  #L2b009a.  v0:= 8I;
  #L2b009e.  v1:= "strokeLineCap" @kind object;
  #L2b00a2.  v2:= -1I;
  #L2b00a4.  call temp:= `g`(v8, v9, v1, v0, v2) @signature `Le/g/j/p/w;.g:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L2b00aa.  v0:= temp;
  #L2b00ac.  v1:= v7.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2b00b0.  call temp:= `e`(v7, v0, v1) @signature `Le/w/a/a/o;.e:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @kind direct;
  #L2b00b6.  v0:= temp @kind object;
  #L2b00b8.  v7.`e.w.a.a.o.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L2b00bc.  v0:= 9I;
  #L2b00c0.  v1:= "strokeLineJoin" @kind object;
  #L2b00c4.  call temp:= `g`(v8, v9, v1, v0, v2) @signature `Le/g/j/p/w;.g:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L2b00ca.  v0:= temp;
  #L2b00cc.  v1:= v7.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L2b00d0.  call temp:= `f`(v7, v0, v1) @signature `Le/w/a/a/o;.f:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @kind direct;
  #L2b00d6.  v0:= temp @kind object;
  #L2b00d8.  v7.`e.w.a.a.o.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L2b00dc.  v0:= 10I;
  #L2b00e0.  v1:= v7.`e.w.a.a.o.p` @type ^`float`;
  #L2b00e4.  v2:= "strokeMiterLimit" @kind object;
  #L2b00e8.  call temp:= `f`(v8, v9, v2, v0, v1) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b00ee.  v0:= temp;
  #L2b00f0.  v7.`e.w.a.a.o.p` @type ^`float` := v0;
  #L2b00f4.  v5:= 3I;
  #L2b00f6.  v4:= "strokeColor" @kind object;
  #L2b00fa.  v1:= v8 @kind object;
  #L2b00fc.  v2:= v9 @kind object;
  #L2b00fe.  call temp:= `e`(v1, v2, v3, v4, v5, v6) @signature `Le/g/j/p/w;.e:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Le/g/j/p/d;` @kind static;
  #L2b0104.  v10:= temp @kind object;
  #L2b0106.  v7.`e.w.a.a.o.f` @type ^`e.g.j.p.d` := v10 @kind object;
  #L2b010a.  v10:= 11I;
  #L2b010e.  v0:= v7.`e.w.a.a.o.i` @type ^`float`;
  #L2b0112.  v1:= "strokeAlpha" @kind object;
  #L2b0116.  call temp:= `f`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b011c.  v10:= temp;
  #L2b011e.  v7.`e.w.a.a.o.i` @type ^`float` := v10;
  #L2b0122.  v10:= 4I;
  #L2b0124.  v0:= v7.`e.w.a.a.o.g` @type ^`float`;
  #L2b0128.  v1:= "strokeWidth" @kind object;
  #L2b012c.  call temp:= `f`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0132.  v10:= temp;
  #L2b0134.  v7.`e.w.a.a.o.g` @type ^`float` := v10;
  #L2b0138.  v10:= 6I;
  #L2b013a.  v0:= v7.`e.w.a.a.o.l` @type ^`float`;
  #L2b013e.  v1:= "trimPathEnd" @kind object;
  #L2b0142.  call temp:= `f`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0148.  v10:= temp;
  #L2b014a.  v7.`e.w.a.a.o.l` @type ^`float` := v10;
  #L2b014e.  v10:= 7I;
  #L2b0150.  v0:= v7.`e.w.a.a.o.m` @type ^`float`;
  #L2b0154.  v1:= "trimPathOffset" @kind object;
  #L2b0158.  call temp:= `f`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b015e.  v10:= temp;
  #L2b0160.  v7.`e.w.a.a.o.m` @type ^`float` := v10;
  #L2b0164.  v10:= 5I;
  #L2b0166.  v0:= v7.`e.w.a.a.o.k` @type ^`float`;
  #L2b016a.  v1:= "trimPathStart" @kind object;
  #L2b016e.  call temp:= `f`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.f:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2b0174.  v10:= temp;
  #L2b0176.  v7.`e.w.a.a.o.k` @type ^`float` := v10;
  #L2b017a.  v10:= 13I;
  #L2b017e.  v0:= v7.`e.w.a.a.r.c` @type ^`int`;
  #L2b0182.  v1:= "fillType" @kind object;
  #L2b0186.  call temp:= `g`(v8, v9, v1, v10, v0) @signature `Le/g/j/p/w;.g:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L2b018c.  v8:= temp;
  #L2b018e.  v7.`e.w.a.a.r.c` @type ^`int` := v8;
  #L2b0192.  return @kind void;
}
procedure `boolean` `a`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2afcf0.  v0:= v1.`e.w.a.a.o.h` @type ^`e.g.j.p.d` @kind object;
  #L2afcf4.  call temp:= `i`(v0) @signature `Le/g/j/p/d;.i:()Z` @kind virtual;
  #L2afcfa.  v0:= temp;
  #L2afcfc.  if v0 != 0 then goto L2afd16;
  #L2afd00.  v0:= v1.`e.w.a.a.o.f` @type ^`e.g.j.p.d` @kind object;
  #L2afd04.  call temp:= `i`(v0) @signature `Le/g/j/p/d;.i:()Z` @kind virtual;
  #L2afd0a.  v0:= temp;
  #L2afd0c.  if v0 == 0 then goto L2afd12;
  #L2afd10.  goto L2afd16;
  #L2afd12.  v0:= 0I;
  #L2afd14.  goto L2afd18;
  #L2afd16.  v0:= 1I;
  #L2afd18.  return v0;
}
procedure `boolean` `b`(`e.w.a.a.o` v2 @kind this, `int`[] v3 @kind object) @signature `Le/w/a/a/o;.b:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2afd2c.  v0:= v2.`e.w.a.a.o.h` @type ^`e.g.j.p.d` @kind object;
  #L2afd30.  call temp:= `j`(v0, v3) @signature `Le/g/j/p/d;.j:([I)Z` @kind virtual;
  #L2afd36.  v0:= temp;
  #L2afd38.  v1:= v2.`e.w.a.a.o.f` @type ^`e.g.j.p.d` @kind object;
  #L2afd3c.  call temp:= `j`(v1, v3) @signature `Le/g/j/p/d;.j:([I)Z` @kind virtual;
  #L2afd42.  v3:= temp;
  #L2afd44.  v3:= v3 ^| v0 @kind int;
  #L2afd46.  return v3;
}
procedure `void` `g`(`e.w.a.a.o` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Le/w/a/a/o;.g:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aff30.  v0:= `@@e.w.a.a.a.c` @type ^`int`[] @kind object;
  #L2aff34.  call temp:= `k`(v2, v4, v3, v0) @signature `Le/g/j/p/w;.k:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L2aff3a.  v2:= temp @kind object;
  #L2aff3c.  call `h`(v1, v2, v5, v4) @signature `Le/w/a/a/o;.h:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @kind direct;
  #L2aff42.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L2aff48.  return @kind void;
}
procedure `float` `getFillAlpha`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getFillAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L2afd58.  v0:= v1.`e.w.a.a.o.j` @type ^`float`;
  #L2afd5c.  return v0;
}
procedure `int` `getFillColor`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getFillColor:()I` @AccessFlag  {
    temp;
    v0;

  #L2afde8.  v0:= v1.`e.w.a.a.o.h` @type ^`e.g.j.p.d` @kind object;
  #L2afdec.  call temp:= `e`(v0) @signature `Le/g/j/p/d;.e:()I` @kind virtual;
  #L2afdf2.  v0:= temp;
  #L2afdf4.  return v0;
}
procedure `float` `getStrokeAlpha`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getStrokeAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L2afd70.  v0:= v1.`e.w.a.a.o.i` @type ^`float`;
  #L2afd74.  return v0;
}
procedure `int` `getStrokeColor`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getStrokeColor:()I` @AccessFlag  {
    temp;
    v0;

  #L2afe08.  v0:= v1.`e.w.a.a.o.f` @type ^`e.g.j.p.d` @kind object;
  #L2afe0c.  call temp:= `e`(v0) @signature `Le/g/j/p/d;.e:()I` @kind virtual;
  #L2afe12.  v0:= temp;
  #L2afe14.  return v0;
}
procedure `float` `getStrokeWidth`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getStrokeWidth:()F` @AccessFlag  {
    temp;
    v0;

  #L2afd88.  v0:= v1.`e.w.a.a.o.g` @type ^`float`;
  #L2afd8c.  return v0;
}
procedure `float` `getTrimPathEnd`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getTrimPathEnd:()F` @AccessFlag  {
    temp;
    v0;

  #L2afda0.  v0:= v1.`e.w.a.a.o.l` @type ^`float`;
  #L2afda4.  return v0;
}
procedure `float` `getTrimPathOffset`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getTrimPathOffset:()F` @AccessFlag  {
    temp;
    v0;

  #L2afdb8.  v0:= v1.`e.w.a.a.o.m` @type ^`float`;
  #L2afdbc.  return v0;
}
procedure `float` `getTrimPathStart`(`e.w.a.a.o` v1 @kind this) @signature `Le/w/a/a/o;.getTrimPathStart:()F` @AccessFlag  {
    temp;
    v0;

  #L2afdd0.  v0:= v1.`e.w.a.a.o.k` @type ^`float`;
  #L2afdd4.  return v0;
}
procedure `void` `setFillAlpha`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setFillAlpha:(F)V` @AccessFlag  {
    temp;

  #L2aff5c.  v0.`e.w.a.a.o.j` @type ^`float` := v1;
  #L2aff60.  return @kind void;
}
procedure `void` `setFillColor`(`e.w.a.a.o` v1 @kind this, `int` v2 ) @signature `Le/w/a/a/o;.setFillColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2aff74.  v0:= v1.`e.w.a.a.o.h` @type ^`e.g.j.p.d` @kind object;
  #L2aff78.  call `k`(v0, v2) @signature `Le/g/j/p/d;.k:(I)V` @kind virtual;
  #L2aff7e.  return @kind void;
}
procedure `void` `setStrokeAlpha`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setStrokeAlpha:(F)V` @AccessFlag  {
    temp;

  #L2aff90.  v0.`e.w.a.a.o.i` @type ^`float` := v1;
  #L2aff94.  return @kind void;
}
procedure `void` `setStrokeColor`(`e.w.a.a.o` v1 @kind this, `int` v2 ) @signature `Le/w/a/a/o;.setStrokeColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2affa8.  v0:= v1.`e.w.a.a.o.f` @type ^`e.g.j.p.d` @kind object;
  #L2affac.  call `k`(v0, v2) @signature `Le/g/j/p/d;.k:(I)V` @kind virtual;
  #L2affb2.  return @kind void;
}
procedure `void` `setStrokeWidth`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setStrokeWidth:(F)V` @AccessFlag  {
    temp;

  #L2affc4.  v0.`e.w.a.a.o.g` @type ^`float` := v1;
  #L2affc8.  return @kind void;
}
procedure `void` `setTrimPathEnd`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setTrimPathEnd:(F)V` @AccessFlag  {
    temp;

  #L2affdc.  v0.`e.w.a.a.o.l` @type ^`float` := v1;
  #L2affe0.  return @kind void;
}
procedure `void` `setTrimPathOffset`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setTrimPathOffset:(F)V` @AccessFlag  {
    temp;

  #L2afff4.  v0.`e.w.a.a.o.m` @type ^`float` := v1;
  #L2afff8.  return @kind void;
}
procedure `void` `setTrimPathStart`(`e.w.a.a.o` v0 @kind this, `float` v1 ) @signature `Le/w/a/a/o;.setTrimPathStart:(F)V` @AccessFlag  {
    temp;

  #L2b000c.  v0.`e.w.a.a.o.k` @type ^`float` := v1;
  #L2b0010.  return @kind void;
}
