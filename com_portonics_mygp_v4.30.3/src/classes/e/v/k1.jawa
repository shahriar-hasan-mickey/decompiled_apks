record `e.v.k1` @kind class @AccessFlag  extends `e.v.j1` @kind class {
}
global `boolean` `@@e.v.k1.f` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@e.v.k1.g` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/v/k1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2abefc.  return @kind void;
}
procedure `void` `<init>`(`e.v.k1` v0 @kind this) @signature `Le/v/k1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2abf10.  call `<init>`(v0) @signature `Le/v/j1;.<init>:()V` @kind direct;
  #L2abf16.  return @kind void;
}
procedure `void` `h`(`e.v.k1` v1 @kind this, `android.view.View` v2 @kind object, `android.graphics.Matrix` v3 @kind object) @signature `Le/v/k1;.h:(Landroid/view/View;Landroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2abf28.  v0:= `@@e.v.k1.f` @type ^`boolean` @kind boolean;
  #L2abf2c.  if v0 == 0 then goto L2abf3e;
  #L2abf30.  call `transformMatrixToGlobal`(v2, v3) @signature `Landroid/view/View;.transformMatrixToGlobal:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L2abf36.  goto L2abf3e;
  #L2abf38.  v2:= 0I;
  #L2abf3a.  `@@e.v.k1.f` @type ^`boolean` := v2 @kind boolean;
  #L2abf3e.  return @kind void;
  catch `java.lang.NoSuchMethodError` @[L2abf30..L2abf36] goto L2abf38;
}
procedure `void` `i`(`e.v.k1` v1 @kind this, `android.view.View` v2 @kind object, `android.graphics.Matrix` v3 @kind object) @signature `Le/v/k1;.i:(Landroid/view/View;Landroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2abf60.  v0:= `@@e.v.k1.g` @type ^`boolean` @kind boolean;
  #L2abf64.  if v0 == 0 then goto L2abf76;
  #L2abf68.  call `transformMatrixToLocal`(v2, v3) @signature `Landroid/view/View;.transformMatrixToLocal:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L2abf6e.  goto L2abf76;
  #L2abf70.  v2:= 0I;
  #L2abf72.  `@@e.v.k1.g` @type ^`boolean` := v2 @kind boolean;
  #L2abf76.  return @kind void;
  catch `java.lang.NoSuchMethodError` @[L2abf68..L2abf6e] goto L2abf70;
}
