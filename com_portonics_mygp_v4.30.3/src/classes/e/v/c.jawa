record `e.v.c` @kind class @AccessFlag PUBLIC extends `e.v.s0` @kind class {
}
procedure `void` `<init>`(`e.v.c` v0 @kind this) @signature `Le/v/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a6930.  call `<init>`(v0) @signature `Le/v/s0;.<init>:()V` @kind direct;
  #L2a6936.  call `x0`(v0) @signature `Le/v/c;.x0:()V` @kind direct;
  #L2a693c.  return @kind void;
}
procedure `void` `x0`(`e.v.c` v3 @kind this) @signature `Le/v/c;.x0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2a6950.  v0:= 1I;
  #L2a6952.  call temp:= `u0`(v3, v0) @signature `Le/v/s0;.u0:(I)Le/v/s0;` @kind virtual;
  #L2a6958.  v1:= new `e.v.r`;
  #L2a695c.  v2:= 2I;
  #L2a695e.  call `<init>`(v1, v2) @signature `Le/v/r;.<init>:(I)V` @kind direct;
  #L2a6964.  call temp:= `k0`(v3, v1) @signature `Le/v/s0;.k0:(Le/v/k0;)Le/v/s0;` @kind virtual;
  #L2a696a.  v1:= temp @kind object;
  #L2a696c.  v2:= new `e.v.o`;
  #L2a6970.  call `<init>`(v2) @signature `Le/v/o;.<init>:()V` @kind direct;
  #L2a6976.  call temp:= `k0`(v1, v2) @signature `Le/v/s0;.k0:(Le/v/k0;)Le/v/s0;` @kind virtual;
  #L2a697c.  v1:= temp @kind object;
  #L2a697e.  v2:= new `e.v.r`;
  #L2a6982.  call `<init>`(v2, v0) @signature `Le/v/r;.<init>:(I)V` @kind direct;
  #L2a6988.  call temp:= `k0`(v1, v2) @signature `Le/v/s0;.k0:(Le/v/k0;)Le/v/s0;` @kind virtual;
  #L2a698e.  return @kind void;
}
