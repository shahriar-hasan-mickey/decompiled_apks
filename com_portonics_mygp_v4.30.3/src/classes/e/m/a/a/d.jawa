record `e.m.a.a.d` @kind class @AccessFlag ABSTRACT extends `android.view.animation.Interpolator` @kind interface {
  `float`[] `e.m.a.a.d.a` @AccessFlag PRIVATE_FINAL;
  `float` `e.m.a.a.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.m.a.a.d` v1 @kind this, `float`[] v2 @kind object) @signature `Le/m/a/a/d;.<init>:([F)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L2567fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L256802.  v1.`e.m.a.a.d.a` @type ^`float`[] := v2 @kind object;
  #L256806.  v2:= length @variable v2;
  #L256808.  v2:= v2 + -1;
  #L25680c.  v2:= (`float`) v2 @kind i2f;
  #L25680e.  v0:= 1.0F;
  #L256812.  v0:= v0 / v2 @kind float;
  #L256814.  v1.`e.m.a.a.d.b` @type ^`float` := v0;
  #L256818.  return @kind void;
}
procedure `float` `getInterpolation`(`e.m.a.a.d` v4 @kind this, `float` v5 ) @signature `Le/m/a/a/d;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L256784.  v0:= 1.0F;
  #L256788.  v1:= fcmpl(v5, v0);
  #L25678c.  if v1 < 0 then goto L256792;
  #L256790.  return v0;
  #L256792.  v0:= 0I;
  #L256794.  v1:= fcmpg(v5, v0);
  #L256798.  if v1 > 0 then goto L25679e;
  #L25679c.  return v0;
  #L25679e.  v0:= v4.`e.m.a.a.d.a` @type ^`float`[] @kind object;
  #L2567a2.  v1:= length @variable v0;
  #L2567a4.  v1:= v1 + -1;
  #L2567a8.  v1:= (`float`) v1 @kind i2f;
  #L2567aa.  v1:= v1 * v5 @kind float;
  #L2567ae.  v1:= (`int`) v1 @kind f2i;
  #L2567b0.  v0:= length @variable v0;
  #L2567b2.  v0:= v0 + -2;
  #L2567b6.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2567bc.  v0:= temp;
  #L2567be.  v1:= (`float`) v0 @kind i2f;
  #L2567c0.  v2:= v4.`e.m.a.a.d.b` @type ^`float`;
  #L2567c4.  v1:= v1 * v2 @kind float;
  #L2567c8.  v5:= v5 - v1 @kind float;
  #L2567ca.  v5:= v5 / v2 @kind float;
  #L2567cc.  v1:= v4.`e.m.a.a.d.a` @type ^`float`[] @kind object;
  #L2567d0.  v2:= v1[v0];
  #L2567d4.  v3:= v0 + 1;
  #L2567d8.  v3:= v1[v3];
  #L2567dc.  v0:= v1[v0];
  #L2567e0.  v3:= v3 - v0 @kind float;
  #L2567e2.  v5:= v5 * v3 @kind float;
  #L2567e6.  v2:= v2 + v5 @kind float;
  #L2567e8.  return v2;
}
