record `e.a.l.a.p` @kind class @AccessFlag ABSTRACT extends `e.a.l.a.m` @kind class {
  `e.a.l.a.o` `e.a.l.a.p.n` @AccessFlag PRIVATE;
  `boolean` `e.a.l.a.p.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.a.l.a.p` v0 @kind this, `e.a.l.a.o` v1 @kind object) @signature `Le/a/l/a/p;.<init>:(Le/a/l/a/o;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1bfc08.  call `<init>`(v0) @signature `Le/a/l/a/m;.<init>:()V` @kind direct;
  #L1bfc0e.  if v1 == 0 then goto L1bfc18;
  #L1bfc12.  call `h`(v0, v1) @signature `Le/a/l/a/p;.h:(Le/a/l/a/l;)V` @kind virtual;
  #L1bfc18.  return @kind void;
}
procedure `void` `applyTheme`(`e.a.l.a.p` v0 @kind this, `android.content.res.Resources$Theme` v1 @kind object) @signature `Le/a/l/a/p;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC {
    temp;

  #L1bfc2c.  call `applyTheme`(v0, v1) @signature `Le/a/l/a/m;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @kind super;
  #L1bfc32.  call temp:= `getState`(v0) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1bfc38.  v1:= temp @kind object;
  #L1bfc3a.  call temp:= `onStateChange`(v0, v1) @signature `Le/a/l/a/p;.onStateChange:([I)Z` @kind virtual;
  #L1bfc40.  return @kind void;
}
procedure `void` `h`(`e.a.l.a.p` v1 @kind this, `e.a.l.a.l` v2 @kind object) @signature `Le/a/l/a/p;.h:(Le/a/l/a/l;)V` @AccessFlag  {
    temp;
    v0;

  #L1bfc54.  call `h`(v1, v2) @signature `Le/a/l/a/m;.h:(Le/a/l/a/l;)V` @kind super;
  #L1bfc5a.  v0:= instanceof @variable v2 @type ^`e.a.l.a.o` @kind boolean;
  #L1bfc5e.  if v0 == 0 then goto L1bfc6a;
  #L1bfc62.  v2:= (`e.a.l.a.o`) v2 @kind object;
  #L1bfc66.  v1.`e.a.l.a.p.n` @type ^`e.a.l.a.o` := v2 @kind object;
  #L1bfc6a.  return @kind void;
}
procedure `int`[] `j`(`e.a.l.a.p` v8 @kind this, `android.util.AttributeSet` v9 @kind object) @signature `Le/a/l/a/p;.j:(Landroid/util/AttributeSet;)[I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1bfb98.  call temp:= `getAttributeCount`(v9) @signature `Landroid/util/AttributeSet;.getAttributeCount:()I` @kind interface;
  #L1bfb9e.  v0:= temp;
  #L1bfba0.  v1:= new `int`[v0];
  #L1bfba4.  v2:= 0I;
  #L1bfba6.  v3:= 0I;
  #L1bfba8.  v4:= 0I;
  #L1bfbaa.  if v3 >= v0 then goto L1bfbee;
  #L1bfbae.  call temp:= `getAttributeNameResource`(v9, v3) @signature `Landroid/util/AttributeSet;.getAttributeNameResource:(I)I` @kind interface;
  #L1bfbb4.  v5:= temp;
  #L1bfbb6.  if v5 == 0 then goto L1bfbe8;
  #L1bfbba.  v6:= 16842960I;
  #L1bfbc0.  if v5 == v6 then goto L1bfbe8;
  #L1bfbc4.  v6:= 16843161I;
  #L1bfbca.  if v5 == v6 then goto L1bfbe8;
  #L1bfbce.  v6:= v4 + 1;
  #L1bfbd2.  call temp:= `getAttributeBooleanValue`(v9, v3, v2) @signature `Landroid/util/AttributeSet;.getAttributeBooleanValue:(IZ)Z` @kind interface;
  #L1bfbd8.  v7:= temp;
  #L1bfbda.  if v7 == 0 then goto L1bfbe0;
  #L1bfbde.  goto L1bfbe2;
  #L1bfbe0.  v5:= -v5 @kind int;
  #L1bfbe2.  v1[v4]:= v5;
  #L1bfbe6.  v4:= v6;
  #L1bfbe8.  v3:= v3 + 1;
  #L1bfbec.  goto L1bfbaa;
  #L1bfbee.  call temp:= `trimStateSet`(v1, v4) @signature `Landroid/util/StateSet;.trimStateSet:([II)[I` @kind static;
  #L1bfbf4.  v9:= temp @kind object;
  #L1bfbf6.  return v9 @kind object;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`e.a.l.a.p` v1 @kind this) @signature `Le/a/l/a/p;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bfb60.  v0:= v1.`e.a.l.a.p.o` @type ^`boolean` @kind boolean;
  #L1bfb64.  if v0 != 0 then goto L1bfb84;
  #L1bfb68.  call temp:= `mutate`(v1) @signature `Le/a/l/a/m;.mutate:()Landroid/graphics/drawable/Drawable;` @kind super;
  #L1bfb6e.  v0:= temp @kind object;
  #L1bfb70.  if v0 != v1 then goto L1bfb84;
  #L1bfb74.  v0:= v1.`e.a.l.a.p.n` @type ^`e.a.l.a.o` @kind object;
  #L1bfb78.  call `r`(v0) @signature `Le/a/l/a/l;.r:()V` @kind virtual;
  #L1bfb7e.  v0:= 1I;
  #L1bfb80.  v1.`e.a.l.a.p.o` @type ^`boolean` := v0 @kind boolean;
  #L1bfb84.  return v1 @kind object;
}
procedure `boolean` `onStateChange`(`int`[] v0 @kind object) @signature `Le/a/l/a/p;.onStateChange:([I)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
