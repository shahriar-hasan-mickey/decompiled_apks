record `e.a.l.a.d` @kind class @AccessFlag  extends `e.a.l.a.g` @kind class {
  `e.w.a.a.f` `e.a.l.a.d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.a.l.a.d` v1 @kind this, `e.w.a.a.f` v2 @kind object) @signature `Le/a/l/a/d;.<init>:(Le/w/a/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1bd354.  v0:= 0I;
  #L1bd356.  call `<init>`(v1, v0) @signature `Le/a/l/a/g;.<init>:(Le/a/l/a/a;)V` @kind direct;
  #L1bd35c.  v1.`e.a.l.a.d.a` @type ^`e.w.a.a.f` := v2 @kind object;
  #L1bd360.  return @kind void;
}
procedure `void` `c`(`e.a.l.a.d` v1 @kind this) @signature `Le/a/l/a/d;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd374.  v0:= v1.`e.a.l.a.d.a` @type ^`e.w.a.a.f` @kind object;
  #L1bd378.  call `start`(v0) @signature `Le/w/a/a/f;.start:()V` @kind virtual;
  #L1bd37e.  return @kind void;
}
procedure `void` `d`(`e.a.l.a.d` v1 @kind this) @signature `Le/a/l/a/d;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bd390.  v0:= v1.`e.a.l.a.d.a` @type ^`e.w.a.a.f` @kind object;
  #L1bd394.  call `stop`(v0) @signature `Le/w/a/a/f;.stop:()V` @kind virtual;
  #L1bd39a.  return @kind void;
}
