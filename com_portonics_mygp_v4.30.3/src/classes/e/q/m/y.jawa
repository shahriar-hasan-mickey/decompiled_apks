record `e.q.m.y` @kind class @AccessFlag PUBLIC_FINAL {
  `android.os.Bundle` `e.q.m.y.a` @AccessFlag PRIVATE_FINAL;
  `e.q.m.n0` `e.q.m.y.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.q.m.y` v2 @kind this, `e.q.m.n0` v3 @kind object, `boolean` v4 ) @signature `Le/q/m/y;.<init>:(Le/q/m/n0;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L26dc2c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26dc32.  if v3 == 0 then goto L26dc66;
  #L26dc36.  v0:= new `android.os.Bundle`;
  #L26dc3a.  call `<init>`(v0) @signature `Landroid/os/Bundle;.<init>:()V` @kind direct;
  #L26dc40.  v2.`e.q.m.y.a` @type ^`android.os.Bundle` := v0 @kind object;
  #L26dc44.  v2.`e.q.m.y.b` @type ^`e.q.m.n0` := v3 @kind object;
  #L26dc48.  call temp:= `a`(v3) @signature `Le/q/m/n0;.a:()Landroid/os/Bundle;` @kind virtual;
  #L26dc4e.  v3:= temp @kind object;
  #L26dc50.  v1:= "selector" @kind object;
  #L26dc54.  call `putBundle`(v0, v1, v3) @signature `Landroid/os/Bundle;.putBundle:(Ljava/lang/String;Landroid/os/Bundle;)V` @kind virtual;
  #L26dc5a.  v3:= "activeScan" @kind object;
  #L26dc5e.  call `putBoolean`(v0, v3, v4) @signature `Landroid/os/Bundle;.putBoolean:(Ljava/lang/String;Z)V` @kind virtual;
  #L26dc64.  return @kind void;
  #L26dc66.  v3:= new `java.lang.IllegalArgumentException`;
  #L26dc6a.  v4:= "selector must not be null" @kind object;
  #L26dc6e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26dc74.  throw v3;
}
procedure `void` `b`(`e.q.m.y` v2 @kind this) @signature `Le/q/m/y;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L26dc88.  v0:= v2.`e.q.m.y.b` @type ^`e.q.m.n0` @kind object;
  #L26dc8c.  if v0 != 0 then goto L26dcb8;
  #L26dc90.  v0:= v2.`e.q.m.y.a` @type ^`android.os.Bundle` @kind object;
  #L26dc94.  v1:= "selector" @kind object;
  #L26dc98.  call temp:= `getBundle`(v0, v1) @signature `Landroid/os/Bundle;.getBundle:(Ljava/lang/String;)Landroid/os/Bundle;` @kind virtual;
  #L26dc9e.  v0:= temp @kind object;
  #L26dca0.  call temp:= `d`(v0) @signature `Le/q/m/n0;.d:(Landroid/os/Bundle;)Le/q/m/n0;` @kind static;
  #L26dca6.  v0:= temp @kind object;
  #L26dca8.  v2.`e.q.m.y.b` @type ^`e.q.m.n0` := v0 @kind object;
  #L26dcac.  if v0 != 0 then goto L26dcb8;
  #L26dcb0.  v0:= `@@e.q.m.n0.a` @type ^`e.q.m.n0` @kind object;
  #L26dcb4.  v2.`e.q.m.y.b` @type ^`e.q.m.n0` := v0 @kind object;
  #L26dcb8.  return @kind void;
}
procedure `android.os.Bundle` `a`(`e.q.m.y` v1 @kind this) @signature `Le/q/m/y;.a:()Landroid/os/Bundle;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26dab8.  v0:= v1.`e.q.m.y.a` @type ^`android.os.Bundle` @kind object;
  #L26dabc.  return v0 @kind object;
}
procedure `e.q.m.n0` `c`(`e.q.m.y` v1 @kind this) @signature `Le/q/m/y;.c:()Le/q/m/n0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26dad0.  call `b`(v1) @signature `Le/q/m/y;.b:()V` @kind direct;
  #L26dad6.  v0:= v1.`e.q.m.y.b` @type ^`e.q.m.n0` @kind object;
  #L26dada.  return v0 @kind object;
}
procedure `boolean` `d`(`e.q.m.y` v2 @kind this) @signature `Le/q/m/y;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26db40.  v0:= v2.`e.q.m.y.a` @type ^`android.os.Bundle` @kind object;
  #L26db44.  v1:= "activeScan" @kind object;
  #L26db48.  call temp:= `getBoolean`(v0, v1) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;)Z` @kind virtual;
  #L26db4e.  v0:= temp;
  #L26db50.  return v0;
}
procedure `boolean` `e`(`e.q.m.y` v1 @kind this) @signature `Le/q/m/y;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26db64.  call `b`(v1) @signature `Le/q/m/y;.b:()V` @kind direct;
  #L26db6a.  v0:= v1.`e.q.m.y.b` @type ^`e.q.m.n0` @kind object;
  #L26db6e.  call temp:= `g`(v0) @signature `Le/q/m/n0;.g:()Z` @kind virtual;
  #L26db74.  v0:= temp;
  #L26db76.  return v0;
}
procedure `boolean` `equals`(`e.q.m.y` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/q/m/y;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26daec.  v0:= instanceof @variable v4 @type ^`e.q.m.y` @kind boolean;
  #L26daf0.  v1:= 0I;
  #L26daf2.  if v0 == 0 then goto L26db2c;
  #L26daf6.  v4:= (`e.q.m.y`) v4 @kind object;
  #L26dafa.  call temp:= `c`(v3) @signature `Le/q/m/y;.c:()Le/q/m/n0;` @kind virtual;
  #L26db00.  v0:= temp @kind object;
  #L26db02.  call temp:= `c`(v4) @signature `Le/q/m/y;.c:()Le/q/m/n0;` @kind virtual;
  #L26db08.  v2:= temp @kind object;
  #L26db0a.  call temp:= `equals`(v0, v2) @signature `Le/q/m/n0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26db10.  v0:= temp;
  #L26db12.  if v0 == 0 then goto L26db2c;
  #L26db16.  call temp:= `d`(v3) @signature `Le/q/m/y;.d:()Z` @kind virtual;
  #L26db1c.  v0:= temp;
  #L26db1e.  call temp:= `d`(v4) @signature `Le/q/m/y;.d:()Z` @kind virtual;
  #L26db24.  v4:= temp;
  #L26db26.  if v0 != v4 then goto L26db2c;
  #L26db2a.  v1:= 1I;
  #L26db2c.  return v1;
}
procedure `int` `hashCode`(`e.q.m.y` v2 @kind this) @signature `Le/q/m/y;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26db88.  call temp:= `c`(v2) @signature `Le/q/m/y;.c:()Le/q/m/n0;` @kind virtual;
  #L26db8e.  v0:= temp @kind object;
  #L26db90.  call temp:= `hashCode`(v0) @signature `Le/q/m/n0;.hashCode:()I` @kind virtual;
  #L26db96.  v0:= temp;
  #L26db98.  call temp:= `d`(v2) @signature `Le/q/m/y;.d:()Z` @kind virtual;
  #L26db9e.  v1:= temp;
  #L26dba0.  v0:= v0 ^~ v1 @kind int;
  #L26dba2.  return v0;
}
procedure `java.lang.String` `toString`(`e.q.m.y` v2 @kind this) @signature `Le/q/m/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26dbb4.  v0:= new `java.lang.StringBuilder`;
  #L26dbb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26dbbe.  v1:= "DiscoveryRequest{ selector=" @kind object;
  #L26dbc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dbc8.  call temp:= `c`(v2) @signature `Le/q/m/y;.c:()Le/q/m/n0;` @kind virtual;
  #L26dbce.  v1:= temp @kind object;
  #L26dbd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dbd6.  v1:= ", activeScan=" @kind object;
  #L26dbda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dbe0.  call temp:= `d`(v2) @signature `Le/q/m/y;.d:()Z` @kind virtual;
  #L26dbe6.  v1:= temp;
  #L26dbe8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dbee.  v1:= ", isValid=" @kind object;
  #L26dbf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dbf8.  call temp:= `e`(v2) @signature `Le/q/m/y;.e:()Z` @kind virtual;
  #L26dbfe.  v1:= temp;
  #L26dc00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dc06.  v1:= " }" @kind object;
  #L26dc0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26dc10.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26dc16.  v0:= temp @kind object;
  #L26dc18.  return v0 @kind object;
}
