record `e.q.m.k0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `e.q.m.k0.a` @AccessFlag PRIVATE;
  `boolean` `e.q.m.k0.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.q.m.k0` v1 @kind this) @signature `Le/q/m/k0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L26e32c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26e332.  v0:= 0I;
  #L26e334.  v1.`e.q.m.k0.b` @type ^`boolean` := v0 @kind boolean;
  #L26e338.  return @kind void;
}
procedure `e.q.m.k0` `a`(`e.q.m.k0` v1 @kind this, `e.q.m.x` v2 @kind object) @signature `Le/q/m/k0;.a:(Le/q/m/x;)Le/q/m/k0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26e250.  if v2 == 0 then goto L26e294;
  #L26e254.  v0:= v1.`e.q.m.k0.a` @type ^`java.util.List` @kind object;
  #L26e258.  if v0 != 0 then goto L26e26c;
  #L26e25c.  v0:= new `java.util.ArrayList`;
  #L26e260.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L26e266.  v1.`e.q.m.k0.a` @type ^`java.util.List` := v0 @kind object;
  #L26e26a.  goto L26e278;
  #L26e26c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L26e272.  v0:= temp;
  #L26e274.  if v0 != 0 then goto L26e284;
  #L26e278.  v0:= v1.`e.q.m.k0.a` @type ^`java.util.List` @kind object;
  #L26e27c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26e282.  return v1 @kind object;
  #L26e284.  v2:= new `java.lang.IllegalArgumentException`;
  #L26e288.  v0:= "route descriptor already added" @kind object;
  #L26e28c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26e292.  throw v2;
  #L26e294.  v2:= new `java.lang.IllegalArgumentException`;
  #L26e298.  v0:= "route must not be null" @kind object;
  #L26e29c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26e2a2.  throw v2;
}
procedure `e.q.m.k0` `b`(`e.q.m.k0` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Le/q/m/k0;.b:(Ljava/util/Collection;)Le/q/m/k0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26e2b4.  if v2 == 0 then goto L26e2ee;
  #L26e2b8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L26e2be.  v0:= temp;
  #L26e2c0.  if v0 != 0 then goto L26e2ec;
  #L26e2c4.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L26e2ca.  v2:= temp @kind object;
  #L26e2cc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L26e2d2.  v0:= temp;
  #L26e2d4.  if v0 == 0 then goto L26e2ec;
  #L26e2d8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L26e2de.  v0:= temp @kind object;
  #L26e2e0.  v0:= (`e.q.m.x`) v0 @kind object;
  #L26e2e4.  call temp:= `a`(v1, v0) @signature `Le/q/m/k0;.a:(Le/q/m/x;)Le/q/m/k0;` @kind virtual;
  #L26e2ea.  goto L26e2cc;
  #L26e2ec.  return v1 @kind object;
  #L26e2ee.  v2:= new `java.lang.IllegalArgumentException`;
  #L26e2f2.  v0:= "routes must not be null" @kind object;
  #L26e2f6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26e2fc.  goto L26e300;
  #L26e2fe.  throw v2;
  #L26e300.  goto L26e2fe;
}
procedure `e.q.m.l0` `c`(`e.q.m.k0` v3 @kind this) @signature `Le/q/m/k0;.c:()Le/q/m/l0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26e22c.  v0:= new `e.q.m.l0`;
  #L26e230.  v1:= v3.`e.q.m.k0.a` @type ^`java.util.List` @kind object;
  #L26e234.  v2:= v3.`e.q.m.k0.b` @type ^`boolean` @kind boolean;
  #L26e238.  call `<init>`(v0, v1, v2) @signature `Le/q/m/l0;.<init>:(Ljava/util/List;Z)V` @kind direct;
  #L26e23e.  return v0 @kind object;
}
procedure `e.q.m.k0` `d`(`e.q.m.k0` v0 @kind this, `boolean` v1 ) @signature `Le/q/m/k0;.d:(Z)Le/q/m/k0;` @AccessFlag PUBLIC {
    temp;

  #L26e314.  v0.`e.q.m.k0.b` @type ^`boolean` := v1 @kind boolean;
  #L26e318.  return v0 @kind object;
}
