record `e.q.m.e1` @kind class @AccessFlag FINAL {
  `e.q.m.i0` `e.q.m.e1.a` @AccessFlag FINAL;
  `int` `e.q.m.e1.b` @AccessFlag FINAL;
  `e.q.m.p0$b` `e.q.m.e1.c` @AccessFlag PRIVATE_FINAL;
  `e.q.m.p0$b` `e.q.m.e1.d` @AccessFlag FINAL;
  `e.q.m.p0$b` `e.q.m.e1.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.q.m.e1.f` @AccessFlag FINAL;
  `java.lang.ref.WeakReference` `e.q.m.e1.g` @AccessFlag PRIVATE_FINAL;
  `com.google.common.util.concurrent.a0` `e.q.m.e1.h` @AccessFlag PRIVATE;
  `boolean` `e.q.m.e1.i` @AccessFlag PRIVATE;
  `boolean` `e.q.m.e1.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.q.m.e1` v2 @kind this, `e.q.m.c1` v3 @kind object, `e.q.m.p0$b` v4 @kind object, `e.q.m.i0` v5 @kind object, `int` v6 , `e.q.m.p0$b` v7 @kind object, `java.util.Collection` v8 @kind object) @signature `Le/q/m/e1;.<init>:(Le/q/m/c1;Le/q/m/p0$b;Le/q/m/i0;ILe/q/m/p0$b;Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L271380.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L271386.  v0:= 0I;
  #L271388.  v2.`e.q.m.e1.h` @type ^`com.google.common.util.concurrent.a0` := v0 @kind object;
  #L27138c.  v1:= 0I;
  #L27138e.  v2.`e.q.m.e1.i` @type ^`boolean` := v1 @kind boolean;
  #L271392.  v2.`e.q.m.e1.j` @type ^`boolean` := v1 @kind boolean;
  #L271396.  v1:= new `java.lang.ref.WeakReference`;
  #L27139a.  call `<init>`(v1, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2713a0.  v2.`e.q.m.e1.g` @type ^`java.lang.ref.WeakReference` := v1 @kind object;
  #L2713a4.  v2.`e.q.m.e1.d` @type ^`e.q.m.p0$b` := v4 @kind object;
  #L2713a8.  v2.`e.q.m.e1.a` @type ^`e.q.m.i0` := v5 @kind object;
  #L2713ac.  v2.`e.q.m.e1.b` @type ^`int` := v6;
  #L2713b0.  v4:= v3.`e.q.m.c1.s` @type ^`e.q.m.p0$b` @kind object;
  #L2713b4.  v2.`e.q.m.e1.c` @type ^`e.q.m.p0$b` := v4 @kind object;
  #L2713b8.  v2.`e.q.m.e1.e` @type ^`e.q.m.p0$b` := v7 @kind object;
  #L2713bc.  if v8 != 0 then goto L2713c2;
  #L2713c0.  goto L2713cc;
  #L2713c2.  v0:= new `java.util.ArrayList`;
  #L2713c6.  call `<init>`(v0, v8) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2713cc.  v2.`e.q.m.e1.f` @type ^`java.util.List` := v0 @kind object;
  #L2713d0.  v3:= v3.`e.q.m.c1.k` @type ^`e.q.m.u0` @kind object;
  #L2713d4.  v4:= new `e.q.m.d`;
  #L2713d8.  call `<init>`(v4, v2) @signature `Le/q/m/d;.<init>:(Le/q/m/e1;)V` @kind direct;
  #L2713de.  v5:= 15000L;
  #L2713e2.  call temp:= `postDelayed`(v3, v4, v5) @signature `Landroid/os/Handler;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L2713e8.  return @kind void;
}
procedure `void` `c`(`e.q.m.e1` v0 @kind this) @signature `Le/q/m/e1;.c:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L2714d4.  call `b`(v0) @signature `Le/q/m/e1;.b:()V` @kind virtual;
  #L2714da.  return @kind void;
}
procedure `void` `e`(`e.q.m.e1` v6 @kind this) @signature `Le/q/m/e1;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2714ec.  v0:= v6.`e.q.m.e1.g` @type ^`java.lang.ref.WeakReference` @kind object;
  #L2714f0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2714f6.  v0:= temp @kind object;
  #L2714f8.  v0:= (`e.q.m.c1`) v0 @kind object;
  #L2714fc.  if v0 != 0 then goto L271502;
  #L271500.  return @kind void;
  #L271502.  v1:= v6.`e.q.m.e1.d` @type ^`e.q.m.p0$b` @kind object;
  #L271506.  v0.`e.q.m.c1.s` @type ^`e.q.m.p0$b` := v1 @kind object;
  #L27150a.  v2:= v6.`e.q.m.e1.a` @type ^`e.q.m.i0` @kind object;
  #L27150e.  v0.`e.q.m.c1.t` @type ^`e.q.m.i0` := v2 @kind object;
  #L271512.  v2:= v6.`e.q.m.e1.e` @type ^`e.q.m.p0$b` @kind object;
  #L271516.  if v2 != 0 then goto L27153c;
  #L27151a.  v2:= v0.`e.q.m.c1.k` @type ^`e.q.m.u0` @kind object;
  #L27151e.  v3:= 262I;
  #L271522.  v4:= new `androidx.core.util.d`;
  #L271526.  v5:= v6.`e.q.m.e1.c` @type ^`e.q.m.p0$b` @kind object;
  #L27152a.  call `<init>`(v4, v5, v1) @signature `Landroidx/core/util/d;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L271530.  v1:= v6.`e.q.m.e1.b` @type ^`int`;
  #L271534.  call `c`(v2, v3, v4, v1) @signature `Le/q/m/u0;.c:(ILjava/lang/Object;I)V` @kind virtual;
  #L27153a.  goto L271558;
  #L27153c.  v3:= v0.`e.q.m.c1.k` @type ^`e.q.m.u0` @kind object;
  #L271540.  v4:= 264I;
  #L271544.  v5:= new `androidx.core.util.d`;
  #L271548.  call `<init>`(v5, v2, v1) @signature `Landroidx/core/util/d;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L27154e.  v1:= v6.`e.q.m.e1.b` @type ^`int`;
  #L271552.  call `c`(v3, v4, v5, v1) @signature `Le/q/m/u0;.c:(ILjava/lang/Object;I)V` @kind virtual;
  #L271558.  v1:= v0.`e.q.m.c1.w` @type ^`java.util.Map` @kind object;
  #L27155c.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L271562.  call `C`(v0) @signature `Le/q/m/c1;.C:()V` @kind virtual;
  #L271568.  call `R`(v0) @signature `Le/q/m/c1;.R:()V` @kind virtual;
  #L27156e.  v1:= v6.`e.q.m.e1.f` @type ^`java.util.List` @kind object;
  #L271572.  if v1 == 0 then goto L271580;
  #L271576.  v0:= v0.`e.q.m.c1.s` @type ^`e.q.m.p0$b` @kind object;
  #L27157a.  call `L`(v0, v1) @signature `Le/q/m/p0$b;.L:(Ljava/util/Collection;)V` @kind virtual;
  #L271580.  return @kind void;
}
procedure `void` `g`(`e.q.m.e1` v5 @kind this) @signature `Le/q/m/e1;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27160c.  v0:= v5.`e.q.m.e1.g` @type ^`java.lang.ref.WeakReference` @kind object;
  #L271610.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L271616.  v0:= temp @kind object;
  #L271618.  v0:= (`e.q.m.c1`) v0 @kind object;
  #L27161c.  if v0 == 0 then goto L2716ba;
  #L271620.  v1:= v0.`e.q.m.c1.s` @type ^`e.q.m.p0$b` @kind object;
  #L271624.  v2:= v5.`e.q.m.e1.c` @type ^`e.q.m.p0$b` @kind object;
  #L271628.  if v1 == v2 then goto L27162e;
  #L27162c.  goto L2716ba;
  #L27162e.  v1:= v0.`e.q.m.c1.k` @type ^`e.q.m.u0` @kind object;
  #L271632.  v3:= 263I;
  #L271636.  v4:= v5.`e.q.m.e1.b` @type ^`int`;
  #L27163a.  call `c`(v1, v3, v2, v4) @signature `Le/q/m/u0;.c:(ILjava/lang/Object;I)V` @kind virtual;
  #L271640.  v1:= v0.`e.q.m.c1.t` @type ^`e.q.m.i0` @kind object;
  #L271644.  if v1 == 0 then goto L27165c;
  #L271648.  v2:= v5.`e.q.m.e1.b` @type ^`int`;
  #L27164c.  call `h`(v1, v2) @signature `Le/q/m/i0;.h:(I)V` @kind virtual;
  #L271652.  v1:= v0.`e.q.m.c1.t` @type ^`e.q.m.i0` @kind object;
  #L271656.  call `d`(v1) @signature `Le/q/m/i0;.d:()V` @kind virtual;
  #L27165c.  v1:= v0.`e.q.m.c1.w` @type ^`java.util.Map` @kind object;
  #L271660.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L271666.  v1:= temp;
  #L271668.  if v1 != 0 then goto L2716b4;
  #L27166c.  v1:= v0.`e.q.m.c1.w` @type ^`java.util.Map` @kind object;
  #L271670.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L271676.  v1:= temp @kind object;
  #L271678.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L27167e.  v1:= temp @kind object;
  #L271680.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L271686.  v2:= temp;
  #L271688.  if v2 == 0 then goto L2716aa;
  #L27168c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L271692.  v2:= temp @kind object;
  #L271694.  v2:= (`e.q.m.i0`) v2 @kind object;
  #L271698.  v3:= v5.`e.q.m.e1.b` @type ^`int`;
  #L27169c.  call `h`(v2, v3) @signature `Le/q/m/i0;.h:(I)V` @kind virtual;
  #L2716a2.  call `d`(v2) @signature `Le/q/m/i0;.d:()V` @kind virtual;
  #L2716a8.  goto L271680;
  #L2716aa.  v1:= v0.`e.q.m.c1.w` @type ^`java.util.Map` @kind object;
  #L2716ae.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2716b4.  v1:= 0I;
  #L2716b6.  v0.`e.q.m.c1.t` @type ^`e.q.m.i0` := v1 @kind object;
  #L2716ba.  return @kind void;
}
procedure `void` `a`(`e.q.m.e1` v2 @kind this) @signature `Le/q/m/e1;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2713fc.  v0:= v2.`e.q.m.e1.i` @type ^`boolean` @kind boolean;
  #L271400.  if v0 != 0 then goto L27142e;
  #L271404.  v0:= v2.`e.q.m.e1.j` @type ^`boolean` @kind boolean;
  #L271408.  if v0 == 0 then goto L27140e;
  #L27140c.  goto L27142e;
  #L27140e.  v0:= 1I;
  #L271410.  v2.`e.q.m.e1.j` @type ^`boolean` := v0 @kind boolean;
  #L271414.  v0:= v2.`e.q.m.e1.a` @type ^`e.q.m.i0` @kind object;
  #L271418.  if v0 == 0 then goto L27142e;
  #L27141c.  v1:= 0I;
  #L27141e.  call `h`(v0, v1) @signature `Le/q/m/i0;.h:(I)V` @kind virtual;
  #L271424.  v0:= v2.`e.q.m.e1.a` @type ^`e.q.m.i0` @kind object;
  #L271428.  call `d`(v0) @signature `Le/q/m/i0;.d:()V` @kind virtual;
  #L27142e.  return @kind void;
}
procedure `void` `b`(`e.q.m.e1` v2 @kind this) @signature `Le/q/m/e1;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L271440.  call `d`() @signature `Le/q/m/p0;.d:()V` @kind static;
  #L271446.  v0:= v2.`e.q.m.e1.i` @type ^`boolean` @kind boolean;
  #L27144a.  if v0 != 0 then goto L2714aa;
  #L27144e.  v0:= v2.`e.q.m.e1.j` @type ^`boolean` @kind boolean;
  #L271452.  if v0 == 0 then goto L271458;
  #L271456.  goto L2714aa;
  #L271458.  v0:= v2.`e.q.m.e1.g` @type ^`java.lang.ref.WeakReference` @kind object;
  #L27145c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L271462.  v0:= temp @kind object;
  #L271464.  v0:= (`e.q.m.c1`) v0 @kind object;
  #L271468.  if v0 == 0 then goto L2714a4;
  #L27146c.  v1:= v0.`e.q.m.c1.B` @type ^`e.q.m.e1` @kind object;
  #L271470.  if v1 != v2 then goto L2714a4;
  #L271474.  v1:= v2.`e.q.m.e1.h` @type ^`com.google.common.util.concurrent.a0` @kind object;
  #L271478.  if v1 == 0 then goto L27148a;
  #L27147c.  call temp:= `isCancelled`(v1) @signature `Ljava/util/concurrent/Future;.isCancelled:()Z` @kind interface;
  #L271482.  v1:= temp;
  #L271484.  if v1 == 0 then goto L27148a;
  #L271488.  goto L2714a4;
  #L27148a.  v1:= 1I;
  #L27148c.  v2.`e.q.m.e1.i` @type ^`boolean` := v1 @kind boolean;
  #L271490.  v1:= 0I;
  #L271492.  v0.`e.q.m.c1.B` @type ^`e.q.m.e1` := v1 @kind object;
  #L271496.  call `g`(v2) @signature `Le/q/m/e1;.g:()V` @kind direct;
  #L27149c.  call `e`(v2) @signature `Le/q/m/e1;.e:()V` @kind direct;
  #L2714a2.  return @kind void;
  #L2714a4.  call `a`(v2) @signature `Le/q/m/e1;.a:()V` @kind virtual;
  #L2714aa.  return @kind void;
}
procedure `void` `d`(`e.q.m.e1` v0 @kind this) @signature `Le/q/m/e1;.d:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2714bc.  call `c`(v0) @signature `Le/q/m/e1;.c:()V` @kind direct;
  #L2714c2.  return @kind void;
}
procedure `void` `f`(`e.q.m.e1` v3 @kind this, `com.google.common.util.concurrent.a0` v4 @kind object) @signature `Le/q/m/e1;.f:(Lcom/google/common/util/concurrent/a0;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L271594.  v0:= v3.`e.q.m.e1.g` @type ^`java.lang.ref.WeakReference` @kind object;
  #L271598.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L27159e.  v0:= temp @kind object;
  #L2715a0.  v0:= (`e.q.m.c1`) v0 @kind object;
  #L2715a4.  if v0 == 0 then goto L2715f4;
  #L2715a8.  v1:= v0.`e.q.m.c1.B` @type ^`e.q.m.e1` @kind object;
  #L2715ac.  if v1 == v3 then goto L2715b2;
  #L2715b0.  goto L2715f4;
  #L2715b2.  v1:= v3.`e.q.m.e1.h` @type ^`com.google.common.util.concurrent.a0` @kind object;
  #L2715b6.  if v1 != 0 then goto L2715e4;
  #L2715ba.  v3.`e.q.m.e1.h` @type ^`com.google.common.util.concurrent.a0` := v4 @kind object;
  #L2715be.  v1:= new `e.q.m.a`;
  #L2715c2.  call `<init>`(v1, v3) @signature `Le/q/m/a;.<init>:(Le/q/m/e1;)V` @kind direct;
  #L2715c8.  v0:= v0.`e.q.m.c1.k` @type ^`e.q.m.u0` @kind object;
  #L2715cc.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2715d2.  v2:= new `e.q.m.e`;
  #L2715d6.  call `<init>`(v2, v0) @signature `Le/q/m/e;.<init>:(Le/q/m/u0;)V` @kind direct;
  #L2715dc.  call `d`(v4, v1, v2) @signature `Lcom/google/common/util/concurrent/a0;.d:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @kind interface;
  #L2715e2.  return @kind void;
  #L2715e4.  v4:= new `java.lang.IllegalStateException`;
  #L2715e8.  v0:= "future is already set" @kind object;
  #L2715ec.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2715f2.  throw v4;
  #L2715f4.  call `a`(v3) @signature `Le/q/m/e1;.a:()V` @kind virtual;
  #L2715fa.  return @kind void;
}
