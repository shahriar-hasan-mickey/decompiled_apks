record `e.q.m.f0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.q.m.i0` @kind class {
  `java.lang.Object` `e.q.m.f0.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `e.q.m.f0.b` @AccessFlag ;
  `e.q.m.e0` `e.q.m.f0.c` @AccessFlag ;
  `e.q.m.x` `e.q.m.f0.d` @AccessFlag ;
  `java.util.Collection` `e.q.m.f0.e` @AccessFlag ;
}
procedure `void` `<init>`(`e.q.m.f0` v1 @kind this) @signature `Le/q/m/f0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L26df84.  call `<init>`(v1) @signature `Le/q/m/i0;.<init>:()V` @kind direct;
  #L26df8a.  v0:= new `java.lang.Object`;
  #L26df8e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26df94.  v1.`e.q.m.f0.a` @type ^`java.lang.Object` := v0 @kind object;
  #L26df98.  return @kind void;
}
procedure `java.lang.String` `j`(`e.q.m.f0` v1 @kind this) @signature `Le/q/m/f0;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26df5c.  v0:= 0I;
  #L26df5e.  return v0 @kind object;
}
procedure `java.lang.String` `k`(`e.q.m.f0` v1 @kind this) @signature `Le/q/m/f0;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26df70.  v0:= 0I;
  #L26df72.  return v0 @kind object;
}
procedure `void` `l`(`e.q.m.f0` v4 @kind this, `e.q.m.x` v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Le/q/m/f0;.l:(Le/q/m/x;Ljava/util/Collection;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26dfac.  v0:= "groupRoute must not be null" @kind object;
  #L26dfb0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26dfb6.  v0:= "dynamicRoutes must not be null" @kind object;
  #L26dfba.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L26dfc0.  v0:= v4.`e.q.m.f0.a` @type ^`java.lang.Object` @kind object;
  #L26dfc4.  @monitorenter v0
  #L26dfc6.  v1:= v4.`e.q.m.f0.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L26dfca.  if v1 == 0 then goto L26dfe4;
  #L26dfce.  v2:= v4.`e.q.m.f0.c` @type ^`e.q.m.e0` @kind object;
  #L26dfd2.  v3:= new `e.q.m.b0`;
  #L26dfd6.  call `<init>`(v3, v4, v2, v5, v6) @signature `Le/q/m/b0;.<init>:(Le/q/m/f0;Le/q/m/e0;Le/q/m/x;Ljava/util/Collection;)V` @kind direct;
  #L26dfdc.  call `execute`(v1, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L26dfe2.  goto L26dff6;
  #L26dfe4.  v4.`e.q.m.f0.d` @type ^`e.q.m.x` := v5 @kind object;
  #L26dfe8.  v5:= new `java.util.ArrayList`;
  #L26dfec.  call `<init>`(v5, v6) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L26dff2.  v4.`e.q.m.f0.e` @type ^`java.util.Collection` := v5 @kind object;
  #L26dff6.  @monitorexit v0
  #L26dff8.  return @kind void;
  #L26dffa.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26dffc.  @monitorexit v0
  #L26dffe.  throw v5;
  catch `java.lang.Throwable` @[L26dfc6..L26dffe] goto L26dffa;
}
procedure `void` `m`(`java.lang.String` v0 @kind object) @signature `Le/q/m/f0;.m:(Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `n`(`java.lang.String` v0 @kind object) @signature `Le/q/m/f0;.n:(Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `o`(`java.util.List` v0 @kind object) @signature `Le/q/m/f0;.o:(Ljava/util/List;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `p`(`e.q.m.f0` v4 @kind this, `java.util.concurrent.Executor` v5 @kind object, `e.q.m.e0` v6 @kind object) @signature `Le/q/m/f0;.p:(Ljava/util/concurrent/Executor;Le/q/m/e0;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26e01c.  v0:= v4.`e.q.m.f0.a` @type ^`java.lang.Object` @kind object;
  #L26e020.  @monitorenter v0
  #L26e022.  if v5 == 0 then goto L26e080;
  #L26e026.  if v6 == 0 then goto L26e070;
  #L26e02a.  v4.`e.q.m.f0.b` @type ^`java.util.concurrent.Executor` := v5 @kind object;
  #L26e02e.  v4.`e.q.m.f0.c` @type ^`e.q.m.e0` := v6 @kind object;
  #L26e032.  v5:= v4.`e.q.m.f0.e` @type ^`java.util.Collection` @kind object;
  #L26e036.  if v5 == 0 then goto L26e06c;
  #L26e03a.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L26e040.  v5:= temp;
  #L26e042.  if v5 != 0 then goto L26e06c;
  #L26e046.  v5:= v4.`e.q.m.f0.d` @type ^`e.q.m.x` @kind object;
  #L26e04a.  v1:= v4.`e.q.m.f0.e` @type ^`java.util.Collection` @kind object;
  #L26e04e.  v2:= 0I;
  #L26e050.  v4.`e.q.m.f0.d` @type ^`e.q.m.x` := v2 @kind object;
  #L26e054.  v4.`e.q.m.f0.e` @type ^`java.util.Collection` := v2 @kind object;
  #L26e058.  v2:= v4.`e.q.m.f0.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L26e05c.  v3:= new `e.q.m.a0`;
  #L26e060.  call `<init>`(v3, v4, v6, v5, v1) @signature `Le/q/m/a0;.<init>:(Le/q/m/f0;Le/q/m/e0;Le/q/m/x;Ljava/util/Collection;)V` @kind direct;
  #L26e066.  call `execute`(v2, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L26e06c.  @monitorexit v0
  #L26e06e.  return @kind void;
  #L26e070.  v5:= new `java.lang.NullPointerException`;
  #L26e074.  v6:= "Listener shouldn't be null" @kind object;
  #L26e078.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26e07e.  throw v5;
  #L26e080.  v5:= new `java.lang.NullPointerException`;
  #L26e084.  v6:= "Executor shouldn't be null" @kind object;
  #L26e088.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26e08e.  throw v5;
  #L26e090.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26e092.  @monitorexit v0
  #L26e094.  throw v5;
  catch `java.lang.Throwable` @[L26e02a..L26e094] goto L26e090;
}
