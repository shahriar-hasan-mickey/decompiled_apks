record `e.t.a.a` @kind class @AccessFlag PUBLIC_FINAL extends `e.t.a.e` @kind interface {
  `java.lang.String` `e.t.a.a.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `e.t.a.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.t.a.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/t/a/a;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a2ab8.  v0:= 0I;
  #L2a2aba.  call `<init>`(v1, v2, v0) @signature `Le/t/a/a;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2a2ac0.  return @kind void;
}
procedure `void` `<init>`(`e.t.a.a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Le/t/a/a;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a2ad4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a2ada.  v0.`e.t.a.a.b` @type ^`java.lang.String` := v1 @kind object;
  #L2a2ade.  v0.`e.t.a.a.c` @type ^`java.lang.Object`[] := v2 @kind object;
  #L2a2ae2.  return @kind void;
}
procedure `void` `b`(`e.t.a.d` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Le/t/a/a;.b:(Le/t/a/d;ILjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2a2af4.  if v4 != 0 then goto L2a2b02;
  #L2a2af8.  call `l0`(v2, v3) @signature `Le/t/a/d;.l0:(I)V` @kind interface;
  #L2a2afe.  goto L2a2c06;
  #L2a2b02.  v0:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L2a2b06.  if v0 == 0 then goto L2a2b18;
  #L2a2b0a.  v4:= (`byte`[]) v4 @kind object;
  #L2a2b0e.  call `r`(v2, v3, v4) @signature `Le/t/a/d;.r:(I[B)V` @kind interface;
  #L2a2b14.  goto L2a2c06;
  #L2a2b18.  v0:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L2a2b1c.  if v0 == 0 then goto L2a2b38;
  #L2a2b20.  v4:= (`java.lang.Float`) v4 @kind object;
  #L2a2b24.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2a2b2a.  v4:= temp;
  #L2a2b2c.  v0:= (`double`) v4 @kind f2d;
  #L2a2b2e.  call `j`(v2, v3, v0) @signature `Le/t/a/d;.j:(ID)V` @kind interface;
  #L2a2b34.  goto L2a2c06;
  #L2a2b38.  v0:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L2a2b3c.  if v0 == 0 then goto L2a2b54;
  #L2a2b40.  v4:= (`java.lang.Double`) v4 @kind object;
  #L2a2b44.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2a2b4a.  v0:= temp @kind wide;
  #L2a2b4c.  call `j`(v2, v3, v0) @signature `Le/t/a/d;.j:(ID)V` @kind interface;
  #L2a2b52.  goto L2a2c06;
  #L2a2b54.  v0:= instanceof @variable v4 @type ^`java.lang.Long` @kind boolean;
  #L2a2b58.  if v0 == 0 then goto L2a2b70;
  #L2a2b5c.  v4:= (`java.lang.Long`) v4 @kind object;
  #L2a2b60.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2a2b66.  v0:= temp @kind wide;
  #L2a2b68.  call `p`(v2, v3, v0) @signature `Le/t/a/d;.p:(IJ)V` @kind interface;
  #L2a2b6e.  goto L2a2c06;
  #L2a2b70.  v0:= instanceof @variable v4 @type ^`java.lang.Integer` @kind boolean;
  #L2a2b74.  if v0 == 0 then goto L2a2b8e;
  #L2a2b78.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2a2b7c.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2a2b82.  v4:= temp;
  #L2a2b84.  v0:= (`long`) v4 @kind i2l;
  #L2a2b86.  call `p`(v2, v3, v0) @signature `Le/t/a/d;.p:(IJ)V` @kind interface;
  #L2a2b8c.  goto L2a2c06;
  #L2a2b8e.  v0:= instanceof @variable v4 @type ^`java.lang.Short` @kind boolean;
  #L2a2b92.  if v0 == 0 then goto L2a2bac;
  #L2a2b96.  v4:= (`java.lang.Short`) v4 @kind object;
  #L2a2b9a.  call temp:= `shortValue`(v4) @signature `Ljava/lang/Short;.shortValue:()S` @kind virtual;
  #L2a2ba0.  v4:= temp;
  #L2a2ba2.  v0:= (`long`) v4 @kind i2l;
  #L2a2ba4.  call `p`(v2, v3, v0) @signature `Le/t/a/d;.p:(IJ)V` @kind interface;
  #L2a2baa.  goto L2a2c06;
  #L2a2bac.  v0:= instanceof @variable v4 @type ^`java.lang.Byte` @kind boolean;
  #L2a2bb0.  if v0 == 0 then goto L2a2bca;
  #L2a2bb4.  v4:= (`java.lang.Byte`) v4 @kind object;
  #L2a2bb8.  call temp:= `byteValue`(v4) @signature `Ljava/lang/Byte;.byteValue:()B` @kind virtual;
  #L2a2bbe.  v4:= temp;
  #L2a2bc0.  v0:= (`long`) v4 @kind i2l;
  #L2a2bc2.  call `p`(v2, v3, v0) @signature `Le/t/a/d;.p:(IJ)V` @kind interface;
  #L2a2bc8.  goto L2a2c06;
  #L2a2bca.  v0:= instanceof @variable v4 @type ^`java.lang.String` @kind boolean;
  #L2a2bce.  if v0 == 0 then goto L2a2bde;
  #L2a2bd2.  v4:= (`java.lang.String`) v4 @kind object;
  #L2a2bd6.  call `h`(v2, v3, v4) @signature `Le/t/a/d;.h:(ILjava/lang/String;)V` @kind interface;
  #L2a2bdc.  goto L2a2c06;
  #L2a2bde.  v0:= instanceof @variable v4 @type ^`java.lang.Boolean` @kind boolean;
  #L2a2be2.  if v0 == 0 then goto L2a2c08;
  #L2a2be6.  v4:= (`java.lang.Boolean`) v4 @kind object;
  #L2a2bea.  call temp:= `booleanValue`(v4) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2a2bf0.  v4:= temp;
  #L2a2bf2.  if v4 == 0 then goto L2a2bfc;
  #L2a2bf6.  v0:= 1L;
  #L2a2bfa.  goto L2a2c00;
  #L2a2bfc.  v0:= 0L;
  #L2a2c00.  call `p`(v2, v3, v0) @signature `Le/t/a/d;.p:(IJ)V` @kind interface;
  #L2a2c06.  return @kind void;
  #L2a2c08.  v2:= new `java.lang.IllegalArgumentException`;
  #L2a2c0c.  v0:= new `java.lang.StringBuilder`;
  #L2a2c10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a2c16.  v1:= "Cannot bind " @kind object;
  #L2a2c1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2c20.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2c26.  v4:= " at index " @kind object;
  #L2a2c2a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2c30.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2c36.  v3:= " Supported types: null, byte[], float, double, long, int, short, byte, string" @kind object;
  #L2a2c3a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2c40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a2c46.  v3:= temp @kind object;
  #L2a2c48.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a2c4e.  throw v2;
}
procedure `void` `d`(`e.t.a.d` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Le/t/a/a;.d:(Le/t/a/d;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2a2c60.  if v4 != 0 then goto L2a2c66;
  #L2a2c64.  return @kind void;
  #L2a2c66.  v0:= length @variable v4;
  #L2a2c68.  v1:= 0I;
  #L2a2c6a.  if v1 >= v0 then goto L2a2c7e;
  #L2a2c6e.  v2:= v4[v1] @kind object;
  #L2a2c72.  v1:= v1 + 1;
  #L2a2c76.  call `b`(v3, v1, v2) @signature `Le/t/a/a;.b:(Le/t/a/d;ILjava/lang/Object;)V` @kind static;
  #L2a2c7c.  goto L2a2c6a;
  #L2a2c7e.  return @kind void;
}
procedure `java.lang.String` `a`(`e.t.a.a` v1 @kind this) @signature `Le/t/a/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2aa0.  v0:= v1.`e.t.a.a.b` @type ^`java.lang.String` @kind object;
  #L2a2aa4.  return v0 @kind object;
}
procedure `void` `c`(`e.t.a.a` v1 @kind this, `e.t.a.d` v2 @kind object) @signature `Le/t/a/a;.c:(Le/t/a/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2c90.  v0:= v1.`e.t.a.a.c` @type ^`java.lang.Object`[] @kind object;
  #L2a2c94.  call `d`(v2, v0) @signature `Le/t/a/a;.d:(Le/t/a/d;[Ljava/lang/Object;)V` @kind static;
  #L2a2c9a.  return @kind void;
}
