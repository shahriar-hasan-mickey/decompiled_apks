record `e.t.a.b` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.io.Closeable` @kind interface {
}
procedure `void` `D`() @signature `Le/t/a/b;.D:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `E`() @signature `Le/t/a/b;.E:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `F`(`java.lang.String` v0 @kind object) @signature `Le/t/a/b;.F:(Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.t.a.f` `J`(`java.lang.String` v0 @kind object) @signature `Le/t/a/b;.J:(Ljava/lang/String;)Le/t/a/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.database.Cursor` `Q`(`e.t.a.e` v0 @kind object, `android.os.CancellationSignal` v1 @kind object) @signature `Le/t/a/b;.Q:(Le/t/a/e;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `X`() @signature `Le/t/a/b;.X:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Y`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Le/t/a/b;.Y:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Z`() @signature `Le/t/a/b;.Z:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.database.Cursor` `c0`(`java.lang.String` v0 @kind object) @signature `Le/t/a/b;.c0:(Ljava/lang/String;)Landroid/database/Cursor;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `f0`() @signature `Le/t/a/b;.f0:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getPath`() @signature `Le/t/a/b;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isOpen`() @signature `Le/t/a/b;.isOpen:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.database.Cursor` `k0`(`e.t.a.e` v0 @kind object) @signature `Le/t/a/b;.k0:(Le/t/a/e;)Landroid/database/Cursor;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `q0`() @signature `Le/t/a/b;.q0:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `x0`() @signature `Le/t/a/b;.x0:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
