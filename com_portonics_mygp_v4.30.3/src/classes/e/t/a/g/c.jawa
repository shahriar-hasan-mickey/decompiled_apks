record `e.t.a.g.c` @kind class @AccessFlag  extends `e.t.a.b` @kind interface {
  `android.database.sqlite.SQLiteDatabase` `e.t.a.g.c.d` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@e.t.a.g.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@e.t.a.g.c.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/t/a/g/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a325c.  v0:= "" @kind object;
  #L2a3260.  v1:= " OR ROLLBACK " @kind object;
  #L2a3264.  v2:= " OR ABORT " @kind object;
  #L2a3268.  v3:= " OR FAIL " @kind object;
  #L2a326c.  v4:= " OR IGNORE " @kind object;
  #L2a3270.  v5:= " OR REPLACE " @kind object;
  #L2a3274.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L2a327a.  v0:= temp @kind object;
  #L2a327c.  `@@e.t.a.g.c.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L2a3280.  v0:= 0I;
  #L2a3282.  v0:= new `java.lang.String`[v0];
  #L2a3286.  `@@e.t.a.g.c.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L2a328a.  return @kind void;
}
procedure `void` `<init>`(`e.t.a.g.c` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Le/t/a/g/c;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a329c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a32a2.  v0.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` := v1 @kind object;
  #L2a32a6.  return @kind void;
}
procedure `void` `D`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.D:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a32b8.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a32bc.  call `beginTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.beginTransaction:()V` @kind virtual;
  #L2a32c2.  return @kind void;
}
procedure `java.util.List` `E`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.E:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a323c.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3240.  call temp:= `getAttachedDbs`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.getAttachedDbs:()Ljava/util/List;` @kind virtual;
  #L2a3246.  v0:= temp @kind object;
  #L2a3248.  return v0 @kind object;
}
procedure `void` `F`(`e.t.a.g.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/t/a/g/c;.F:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3328.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a332c.  call `execSQL`(v0, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L2a3332.  return @kind void;
}
procedure `e.t.a.f` `J`(`e.t.a.g.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Le/t/a/g/c;.J:(Ljava/lang/String;)Le/t/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a3174.  v0:= new `e.t.a.g.i`;
  #L2a3178.  v1:= v2.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a317c.  call temp:= `compileStatement`(v1, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #L2a3182.  v3:= temp @kind object;
  #L2a3184.  call `<init>`(v0, v3) @signature `Le/t/a/g/i;.<init>:(Landroid/database/sqlite/SQLiteStatement;)V` @kind direct;
  #L2a318a.  return v0 @kind object;
}
procedure `android.database.Cursor` `Q`(`e.t.a.g.c` v6 @kind this, `e.t.a.e` v7 @kind object, `android.os.CancellationSignal` v8 @kind object) @signature `Le/t/a/g/c;.Q:(Le/t/a/e;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a3118.  v0:= v6.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a311c.  v1:= new `e.t.a.g.b`;
  #L2a3120.  call `<init>`(v1, v6, v7) @signature `Le/t/a/g/b;.<init>:(Le/t/a/g/c;Le/t/a/e;)V` @kind direct;
  #L2a3126.  call temp:= `a`(v7) @signature `Le/t/a/e;.a:()Ljava/lang/String;` @kind interface;
  #L2a312c.  v2:= temp @kind object;
  #L2a312e.  v3:= `@@e.t.a.g.c.c` @type ^`java.lang.String`[] @kind object;
  #L2a3132.  v4:= 0I;
  #L2a3134.  v5:= v8 @kind object;
  #L2a3136.  call temp:= `rawQueryWithFactory`(v0, v1, v2, v3, v4, v5) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQueryWithFactory:(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @kind virtual;
  #L2a313c.  v7:= temp @kind object;
  #L2a313e.  return v7 @kind object;
}
procedure `void` `X`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.X:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3360.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3364.  call `setTransactionSuccessful`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setTransactionSuccessful:()V` @kind virtual;
  #L2a336a.  return @kind void;
}
procedure `void` `Y`(`e.t.a.g.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Le/t/a/g/c;.Y:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3344.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3348.  call `execSQL`(v0, v2, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L2a334e.  return @kind void;
}
procedure `void` `Z`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.Z:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a32d4.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a32d8.  call `beginTransactionNonExclusive`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.beginTransactionNonExclusive:()V` @kind virtual;
  #L2a32de.  return @kind void;
}
procedure `boolean` `a`(`e.t.a.g.c` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/t/a/g/c;.a:(Landroid/database/sqlite/SQLiteDatabase;)Z` @AccessFlag  {
    temp;
    v0;

  #L2a31bc.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a31c0.  if v0 != v2 then goto L2a31c8;
  #L2a31c4.  v2:= 1I;
  #L2a31c6.  goto L2a31ca;
  #L2a31c8.  v2:= 0I;
  #L2a31ca.  return v2;
}
procedure `android.database.Cursor` `c0`(`e.t.a.g.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/t/a/g/c;.c0:(Ljava/lang/String;)Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3150.  v0:= new `e.t.a.a`;
  #L2a3154.  call `<init>`(v0, v2) @signature `Le/t/a/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a315a.  call temp:= `k0`(v1, v0) @signature `Le/t/a/g/c;.k0:(Le/t/a/e;)Landroid/database/Cursor;` @kind virtual;
  #L2a3160.  v2:= temp @kind object;
  #L2a3162.  return v2 @kind object;
}
procedure `void` `close`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a32f0.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a32f4.  call `close`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.close:()V` @kind virtual;
  #L2a32fa.  return @kind void;
}
procedure `void` `f0`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.f0:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a330c.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3310.  call `endTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.endTransaction:()V` @kind virtual;
  #L2a3316.  return @kind void;
}
procedure `java.lang.String` `getPath`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a321c.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3220.  call temp:= `getPath`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.getPath:()Ljava/lang/String;` @kind virtual;
  #L2a3226.  v0:= temp @kind object;
  #L2a3228.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a31dc.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a31e0.  call temp:= `isOpen`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.isOpen:()Z` @kind virtual;
  #L2a31e6.  v0:= temp;
  #L2a31e8.  return v0;
}
procedure `android.database.Cursor` `k0`(`e.t.a.g.c` v4 @kind this, `e.t.a.e` v5 @kind object) @signature `Le/t/a/g/c;.k0:(Le/t/a/e;)Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a30e0.  v0:= v4.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a30e4.  v1:= new `e.t.a.g.a`;
  #L2a30e8.  call `<init>`(v1, v4, v5) @signature `Le/t/a/g/a;.<init>:(Le/t/a/g/c;Le/t/a/e;)V` @kind direct;
  #L2a30ee.  call temp:= `a`(v5) @signature `Le/t/a/e;.a:()Ljava/lang/String;` @kind interface;
  #L2a30f4.  v5:= temp @kind object;
  #L2a30f6.  v2:= `@@e.t.a.g.c.c` @type ^`java.lang.String`[] @kind object;
  #L2a30fa.  v3:= 0I;
  #L2a30fc.  call temp:= `rawQueryWithFactory`(v0, v1, v5, v2, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQueryWithFactory:(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2a3102.  v5:= temp @kind object;
  #L2a3104.  return v5 @kind object;
}
procedure `boolean` `q0`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.q0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a319c.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a31a0.  call temp:= `inTransaction`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.inTransaction:()Z` @kind virtual;
  #L2a31a6.  v0:= temp;
  #L2a31a8.  return v0;
}
procedure `boolean` `x0`(`e.t.a.g.c` v1 @kind this) @signature `Le/t/a/g/c;.x0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a31fc.  v0:= v1.`e.t.a.g.c.d` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2a3200.  call temp:= `isWriteAheadLoggingEnabled`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.isWriteAheadLoggingEnabled:()Z` @kind virtual;
  #L2a3206.  v0:= temp;
  #L2a3208.  return v0;
}
