record `e.t.a.g.d` @kind class @AccessFlag  extends `android.database.DatabaseErrorHandler` @kind interface {
  `e.t.a.c$a` `e.t.a.g.d.a` @AccessFlag FINAL_SYNTHETIC;
  `e.t.a.g.c`[] `e.t.a.g.d.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.t.a.g.d` v0 @kind this, `e.t.a.c$a` v1 @kind object, `e.t.a.g.c`[] v2 @kind object) @signature `Le/t/a/g/d;.<init>:(Le/t/a/c$a;[Le/t/a/g/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a337c.  v0.`e.t.a.g.d.a` @type ^`e.t.a.c$a` := v1 @kind object;
  #L2a3380.  v0.`e.t.a.g.d.b` @type ^`e.t.a.g.c`[] := v2 @kind object;
  #L2a3384.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a338a.  return @kind void;
}
procedure `void` `onCorruption`(`e.t.a.g.d` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Le/t/a/g/d;.onCorruption:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a339c.  v0:= v2.`e.t.a.g.d.a` @type ^`e.t.a.c$a` @kind object;
  #L2a33a0.  v1:= v2.`e.t.a.g.d.b` @type ^`e.t.a.g.c`[] @kind object;
  #L2a33a4.  call temp:= `d`(v1, v3) @signature `Le/t/a/g/e;.d:([Le/t/a/g/c;Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind static;
  #L2a33aa.  v3:= temp @kind object;
  #L2a33ac.  call `c`(v0, v3) @signature `Le/t/a/c$a;.c:(Le/t/a/b;)V` @kind virtual;
  #L2a33b2.  return @kind void;
}
