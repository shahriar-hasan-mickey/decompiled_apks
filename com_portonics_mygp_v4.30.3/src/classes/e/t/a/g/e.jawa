record `e.t.a.g.e` @kind class @AccessFlag  extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `e.t.a.g.c`[] `e.t.a.g.e.b` @AccessFlag FINAL;
  `e.t.a.c$a` `e.t.a.g.e.c` @AccessFlag FINAL;
  `boolean` `e.t.a.g.e.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.t.a.g.e` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `e.t.a.g.c`[] v9 @kind object, `e.t.a.c$a` v10 @kind object) @signature `Le/t/a/g/e;.<init>:(Landroid/content/Context;Ljava/lang/String;[Le/t/a/g/c;Le/t/a/c$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2a34e0.  v4:= v10.`e.t.a.c$a.a` @type ^`int`;
  #L2a34e4.  v5:= new `e.t.a.g.d`;
  #L2a34e8.  call `<init>`(v5, v10, v9) @signature `Le/t/a/g/d;.<init>:(Le/t/a/c$a;[Le/t/a/g/c;)V` @kind direct;
  #L2a34ee.  v3:= 0I;
  #L2a34f0.  v0:= v6 @kind object;
  #L2a34f2.  v1:= v7 @kind object;
  #L2a34f4.  v2:= v8 @kind object;
  #L2a34f6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILandroid/database/DatabaseErrorHandler;)V` @kind direct;
  #L2a34fc.  v6.`e.t.a.g.e.c` @type ^`e.t.a.c$a` := v10 @kind object;
  #L2a3500.  v6.`e.t.a.g.e.b` @type ^`e.t.a.g.c`[] := v9 @kind object;
  #L2a3504.  return @kind void;
}
procedure `e.t.a.g.c` `d`(`e.t.a.g.c`[] v2 @kind object, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Le/t/a/g/e;.d:([Le/t/a/g/c;Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2a34a4.  v0:= 0I;
  #L2a34a6.  v1:= v2[v0] @kind object;
  #L2a34aa.  if v1 == 0 then goto L2a34ba;
  #L2a34ae.  call temp:= `a`(v1, v3) @signature `Le/t/a/g/c;.a:(Landroid/database/sqlite/SQLiteDatabase;)Z` @kind virtual;
  #L2a34b4.  v1:= temp;
  #L2a34b6.  if v1 != 0 then goto L2a34c8;
  #L2a34ba.  v1:= new `e.t.a.g.c`;
  #L2a34be.  call `<init>`(v1, v3) @signature `Le/t/a/g/c;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L2a34c4.  v2[v0]:= v1 @kind object;
  #L2a34c8.  v2:= v2[v0] @kind object;
  #L2a34cc.  return v2 @kind object;
}
procedure `e.t.a.b` `a`(`e.t.a.g.e` v2 @kind this) @signature `Le/t/a/g/e;.a:()Le/t/a/b;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a33c4.  @monitorenter v2
  #L2a33c6.  v0:= 0I;
  #L2a33c8.  v2.`e.t.a.g.e.d` @type ^`boolean` := v0 @kind boolean;
  #L2a33cc.  call temp:= `getReadableDatabase`(v2) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getReadableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind super;
  #L2a33d2.  v0:= temp @kind object;
  #L2a33d4.  v1:= v2.`e.t.a.g.e.d` @type ^`boolean` @kind boolean;
  #L2a33d8.  if v1 == 0 then goto L2a33ee;
  #L2a33dc.  call `close`(v2) @signature `Le/t/a/g/e;.close:()V` @kind virtual;
  #L2a33e2.  call temp:= `a`(v2) @signature `Le/t/a/g/e;.a:()Le/t/a/b;` @kind virtual;
  #L2a33e8.  v0:= temp @kind object;
  #L2a33ea.  @monitorexit v2
  #L2a33ec.  return v0 @kind object;
  #L2a33ee.  call temp:= `c`(v2, v0) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a33f4.  v0:= temp @kind object;
  #L2a33f6.  @monitorexit v2
  #L2a33f8.  return v0 @kind object;
  #L2a33fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a33fc.  @monitorexit v2
  #L2a33fe.  throw v0;
  catch `java.lang.Throwable` @[L2a33c8..L2a33ea] goto L2a33fa;
  catch `java.lang.Throwable` @[L2a33ee..L2a33f6] goto L2a33fa;
}
procedure `e.t.a.g.c` `c`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @AccessFlag  {
    temp;
    v0;

  #L2a3484.  v0:= v1.`e.t.a.g.e.b` @type ^`e.t.a.g.c`[] @kind object;
  #L2a3488.  call temp:= `d`(v0, v2) @signature `Le/t/a/g/e;.d:([Le/t/a/g/c;Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind static;
  #L2a348e.  v2:= temp @kind object;
  #L2a3490.  return v2 @kind object;
}
procedure `void` `close`(`e.t.a.g.e` v3 @kind this) @signature `Le/t/a/g/e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a3518.  @monitorenter v3
  #L2a351a.  call `close`(v3) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.close:()V` @kind super;
  #L2a3520.  v0:= v3.`e.t.a.g.e.b` @type ^`e.t.a.g.c`[] @kind object;
  #L2a3524.  v1:= 0I;
  #L2a3526.  v2:= 0I;
  #L2a3528.  v0[v1]:= v2 @kind object;
  #L2a352c.  @monitorexit v3
  #L2a352e.  return @kind void;
  #L2a3530.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a3532.  @monitorexit v3
  #L2a3534.  throw v0;
  catch `java.lang.Throwable` @[L2a351a..L2a352c] goto L2a3530;
}
procedure `e.t.a.b` `k`(`e.t.a.g.e` v2 @kind this) @signature `Le/t/a/g/e;.k:()Le/t/a/b;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a3424.  @monitorenter v2
  #L2a3426.  v0:= 0I;
  #L2a3428.  v2.`e.t.a.g.e.d` @type ^`boolean` := v0 @kind boolean;
  #L2a342c.  call temp:= `getWritableDatabase`(v2) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind super;
  #L2a3432.  v0:= temp @kind object;
  #L2a3434.  v1:= v2.`e.t.a.g.e.d` @type ^`boolean` @kind boolean;
  #L2a3438.  if v1 == 0 then goto L2a344e;
  #L2a343c.  call `close`(v2) @signature `Le/t/a/g/e;.close:()V` @kind virtual;
  #L2a3442.  call temp:= `k`(v2) @signature `Le/t/a/g/e;.k:()Le/t/a/b;` @kind virtual;
  #L2a3448.  v0:= temp @kind object;
  #L2a344a.  @monitorexit v2
  #L2a344c.  return v0 @kind object;
  #L2a344e.  call temp:= `c`(v2, v0) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a3454.  v0:= temp @kind object;
  #L2a3456.  @monitorexit v2
  #L2a3458.  return v0 @kind object;
  #L2a345a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a345c.  @monitorexit v2
  #L2a345e.  throw v0;
  catch `java.lang.Throwable` @[L2a3428..L2a344a] goto L2a345a;
  catch `java.lang.Throwable` @[L2a344e..L2a3456] goto L2a345a;
}
procedure `void` `onConfigure`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/t/a/g/e;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3554.  v0:= v1.`e.t.a.g.e.c` @type ^`e.t.a.c$a` @kind object;
  #L2a3558.  call temp:= `c`(v1, v2) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a355e.  v2:= temp @kind object;
  #L2a3560.  call `b`(v0, v2) @signature `Le/t/a/c$a;.b:(Le/t/a/b;)V` @kind virtual;
  #L2a3566.  return @kind void;
}
procedure `void` `onCreate`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/t/a/g/e;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3578.  v0:= v1.`e.t.a.g.e.c` @type ^`e.t.a.c$a` @kind object;
  #L2a357c.  call temp:= `c`(v1, v2) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a3582.  v2:= temp @kind object;
  #L2a3584.  call `d`(v0, v2) @signature `Le/t/a/c$a;.d:(Le/t/a/b;)V` @kind virtual;
  #L2a358a.  return @kind void;
}
procedure `void` `onDowngrade`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/t/a/g/e;.onDowngrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a359c.  v0:= 1I;
  #L2a359e.  v1.`e.t.a.g.e.d` @type ^`boolean` := v0 @kind boolean;
  #L2a35a2.  v0:= v1.`e.t.a.g.e.c` @type ^`e.t.a.c$a` @kind object;
  #L2a35a6.  call temp:= `c`(v1, v2) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a35ac.  v2:= temp @kind object;
  #L2a35ae.  call `e`(v0, v2, v3, v4) @signature `Le/t/a/c$a;.e:(Le/t/a/b;II)V` @kind virtual;
  #L2a35b4.  return @kind void;
}
procedure `void` `onOpen`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Le/t/a/g/e;.onOpen:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a35c8.  v0:= v1.`e.t.a.g.e.d` @type ^`boolean` @kind boolean;
  #L2a35cc.  if v0 != 0 then goto L2a35e2;
  #L2a35d0.  v0:= v1.`e.t.a.g.e.c` @type ^`e.t.a.c$a` @kind object;
  #L2a35d4.  call temp:= `c`(v1, v2) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a35da.  v2:= temp @kind object;
  #L2a35dc.  call `f`(v0, v2) @signature `Le/t/a/c$a;.f:(Le/t/a/b;)V` @kind virtual;
  #L2a35e2.  return @kind void;
}
procedure `void` `onUpgrade`(`e.t.a.g.e` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 , `int` v4 ) @signature `Le/t/a/g/e;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a35f4.  v0:= 1I;
  #L2a35f6.  v1.`e.t.a.g.e.d` @type ^`boolean` := v0 @kind boolean;
  #L2a35fa.  v0:= v1.`e.t.a.g.e.c` @type ^`e.t.a.c$a` @kind object;
  #L2a35fe.  call temp:= `c`(v1, v2) @signature `Le/t/a/g/e;.c:(Landroid/database/sqlite/SQLiteDatabase;)Le/t/a/g/c;` @kind virtual;
  #L2a3604.  v2:= temp @kind object;
  #L2a3606.  call `g`(v0, v2, v3, v4) @signature `Le/t/a/c$a;.g:(Le/t/a/b;II)V` @kind virtual;
  #L2a360c.  return @kind void;
}
