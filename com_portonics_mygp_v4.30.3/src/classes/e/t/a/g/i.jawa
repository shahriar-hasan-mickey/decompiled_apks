record `e.t.a.g.i` @kind class @AccessFlag  extends `e.t.a.g.h` @kind class, `e.t.a.f` @kind interface {
  `android.database.sqlite.SQLiteStatement` `e.t.a.g.i.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.t.a.g.i` v0 @kind this, `android.database.sqlite.SQLiteStatement` v1 @kind object) @signature `Le/t/a/g/i;.<init>:(Landroid/database/sqlite/SQLiteStatement;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a3924.  call `<init>`(v0, v1) @signature `Le/t/a/g/h;.<init>:(Landroid/database/sqlite/SQLiteProgram;)V` @kind direct;
  #L2a392a.  v0.`e.t.a.g.i.c` @type ^`android.database.sqlite.SQLiteStatement` := v1 @kind object;
  #L2a392e.  return @kind void;
}
procedure `long` `H0`(`e.t.a.g.i` v2 @kind this) @signature `Le/t/a/g/i;.H0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a3904.  v0:= v2.`e.t.a.g.i.c` @type ^`android.database.sqlite.SQLiteStatement` @kind object;
  #L2a3908.  call temp:= `executeInsert`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.executeInsert:()J` @kind virtual;
  #L2a390e.  v0:= temp @kind wide;
  #L2a3910.  return v0 @kind wide;
}
procedure `int` `I`(`e.t.a.g.i` v1 @kind this) @signature `Le/t/a/g/i;.I:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a38e4.  v0:= v1.`e.t.a.g.i.c` @type ^`android.database.sqlite.SQLiteStatement` @kind object;
  #L2a38e8.  call temp:= `executeUpdateDelete`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.executeUpdateDelete:()I` @kind virtual;
  #L2a38ee.  v0:= temp;
  #L2a38f0.  return v0;
}
