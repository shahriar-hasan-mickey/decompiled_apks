record `e.t.a.c$b$a` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `e.t.a.c$b$a.a` @AccessFlag ;
  `java.lang.String` `e.t.a.c$b$a.b` @AccessFlag ;
  `e.t.a.c$a` `e.t.a.c$b$a.c` @AccessFlag ;
  `boolean` `e.t.a.c$b$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`e.t.a.c$b$a` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Le/t/a/c$b$a;.<init>:(Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a2fe0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a2fe6.  v0.`e.t.a.c$b$a.a` @type ^`android.content.Context` := v1 @kind object;
  #L2a2fea.  return @kind void;
}
procedure `e.t.a.c$b` `a`(`e.t.a.c$b$a` v5 @kind this) @signature `Le/t/a/c$b$a;.a:()Le/t/a/c$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a2f10.  v0:= v5.`e.t.a.c$b$a.c` @type ^`e.t.a.c$a` @kind object;
  #L2a2f14.  if v0 == 0 then goto L2a2f76;
  #L2a2f18.  v0:= v5.`e.t.a.c$b$a.a` @type ^`android.content.Context` @kind object;
  #L2a2f1c.  if v0 == 0 then goto L2a2f66;
  #L2a2f20.  v0:= v5.`e.t.a.c$b$a.d` @type ^`boolean` @kind boolean;
  #L2a2f24.  if v0 == 0 then goto L2a2f4a;
  #L2a2f28.  v0:= v5.`e.t.a.c$b$a.b` @type ^`java.lang.String` @kind object;
  #L2a2f2c.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2a2f32.  v0:= temp;
  #L2a2f34.  if v0 != 0 then goto L2a2f3a;
  #L2a2f38.  goto L2a2f4a;
  #L2a2f3a.  v0:= new `java.lang.IllegalArgumentException`;
  #L2a2f3e.  v1:= "Must set a non-null database name to a configuration that uses the no backup directory." @kind object;
  #L2a2f42.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a2f48.  throw v0;
  #L2a2f4a.  v0:= new `e.t.a.c$b`;
  #L2a2f4e.  v1:= v5.`e.t.a.c$b$a.a` @type ^`android.content.Context` @kind object;
  #L2a2f52.  v2:= v5.`e.t.a.c$b$a.b` @type ^`java.lang.String` @kind object;
  #L2a2f56.  v3:= v5.`e.t.a.c$b$a.c` @type ^`e.t.a.c$a` @kind object;
  #L2a2f5a.  v4:= v5.`e.t.a.c$b$a.d` @type ^`boolean` @kind boolean;
  #L2a2f5e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Le/t/a/c$b;.<init>:(Landroid/content/Context;Ljava/lang/String;Le/t/a/c$a;Z)V` @kind direct;
  #L2a2f64.  return v0 @kind object;
  #L2a2f66.  v0:= new `java.lang.IllegalArgumentException`;
  #L2a2f6a.  v1:= "Must set a non-null context to create the configuration." @kind object;
  #L2a2f6e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a2f74.  throw v0;
  #L2a2f76.  v0:= new `java.lang.IllegalArgumentException`;
  #L2a2f7a.  v1:= "Must set a callback to create the configuration." @kind object;
  #L2a2f7e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a2f84.  throw v0;
}
procedure `e.t.a.c$b$a` `b`(`e.t.a.c$b$a` v0 @kind this, `e.t.a.c$a` v1 @kind object) @signature `Le/t/a/c$b$a;.b:(Le/t/a/c$a;)Le/t/a/c$b$a;` @AccessFlag PUBLIC {
    temp;

  #L2a2f98.  v0.`e.t.a.c$b$a.c` @type ^`e.t.a.c$a` := v1 @kind object;
  #L2a2f9c.  return v0 @kind object;
}
procedure `e.t.a.c$b$a` `c`(`e.t.a.c$b$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/t/a/c$b$a;.c:(Ljava/lang/String;)Le/t/a/c$b$a;` @AccessFlag PUBLIC {
    temp;

  #L2a2fb0.  v0.`e.t.a.c$b$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L2a2fb4.  return v0 @kind object;
}
procedure `e.t.a.c$b$a` `d`(`e.t.a.c$b$a` v0 @kind this, `boolean` v1 ) @signature `Le/t/a/c$b$a;.d:(Z)Le/t/a/c$b$a;` @AccessFlag PUBLIC {
    temp;

  #L2a2fc8.  v0.`e.t.a.c$b$a.d` @type ^`boolean` := v1 @kind boolean;
  #L2a2fcc.  return v0 @kind object;
}
