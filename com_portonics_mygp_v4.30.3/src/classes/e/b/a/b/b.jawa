record `e.b.a.b.b` @kind class @AccessFlag  extends `e.b.a.b.f` @kind class {
}
procedure `void` `<init>`(`e.b.a.b.b` v0 @kind this, `e.b.a.b.d` v1 @kind object, `e.b.a.b.d` v2 @kind object) @signature `Le/b/a/b/b;.<init>:(Le/b/a/b/d;Le/b/a/b/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e69d0.  call `<init>`(v0, v1, v2) @signature `Le/b/a/b/f;.<init>:(Le/b/a/b/d;Le/b/a/b/d;)V` @kind direct;
  #L1e69d6.  return @kind void;
}
procedure `e.b.a.b.d` `b`(`e.b.a.b.b` v0 @kind this, `e.b.a.b.d` v1 @kind object) @signature `Le/b/a/b/b;.b:(Le/b/a/b/d;)Le/b/a/b/d;` @AccessFlag  {
    temp;

  #L1e69a0.  v1:= v1.`e.b.a.b.d.e` @type ^`e.b.a.b.d` @kind object;
  #L1e69a4.  return v1 @kind object;
}
procedure `e.b.a.b.d` `c`(`e.b.a.b.b` v0 @kind this, `e.b.a.b.d` v1 @kind object) @signature `Le/b/a/b/b;.c:(Le/b/a/b/d;)Le/b/a/b/d;` @AccessFlag  {
    temp;

  #L1e69b8.  v1:= v1.`e.b.a.b.d.d` @type ^`e.b.a.b.d` @kind object;
  #L1e69bc.  return v1 @kind object;
}
