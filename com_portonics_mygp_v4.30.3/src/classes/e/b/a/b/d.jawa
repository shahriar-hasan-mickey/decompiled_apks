record `e.b.a.b.d` @kind class @AccessFlag  extends `java.util.Map$Entry` @kind interface {
  `java.lang.Object` `e.b.a.b.d.b` @AccessFlag FINAL;
  `java.lang.Object` `e.b.a.b.d.c` @AccessFlag FINAL;
  `e.b.a.b.d` `e.b.a.b.d.d` @AccessFlag ;
  `e.b.a.b.d` `e.b.a.b.d.e` @AccessFlag ;
}
procedure `void` `<init>`(`e.b.a.b.d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/b/a/b/d;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e6b48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e6b4e.  v0.`e.b.a.b.d.b` @type ^`java.lang.Object` := v1 @kind object;
  #L1e6b52.  v0.`e.b.a.b.d.c` @type ^`java.lang.Object` := v2 @kind object;
  #L1e6b56.  return @kind void;
}
procedure `boolean` `equals`(`e.b.a.b.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/b/a/b/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e6a30.  v0:= 1I;
  #L1e6a32.  if v5 != v4 then goto L1e6a38;
  #L1e6a36.  return v0;
  #L1e6a38.  v1:= instanceof @variable v5 @type ^`e.b.a.b.d` @kind boolean;
  #L1e6a3c.  v2:= 0I;
  #L1e6a3e.  if v1 != 0 then goto L1e6a44;
  #L1e6a42.  return v2;
  #L1e6a44.  v5:= (`e.b.a.b.d`) v5 @kind object;
  #L1e6a48.  v1:= v4.`e.b.a.b.d.b` @type ^`java.lang.Object` @kind object;
  #L1e6a4c.  v3:= v5.`e.b.a.b.d.b` @type ^`java.lang.Object` @kind object;
  #L1e6a50.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e6a56.  v1:= temp;
  #L1e6a58.  if v1 == 0 then goto L1e6a72;
  #L1e6a5c.  v1:= v4.`e.b.a.b.d.c` @type ^`java.lang.Object` @kind object;
  #L1e6a60.  v5:= v5.`e.b.a.b.d.c` @type ^`java.lang.Object` @kind object;
  #L1e6a64.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e6a6a.  v5:= temp;
  #L1e6a6c.  if v5 == 0 then goto L1e6a72;
  #L1e6a70.  goto L1e6a74;
  #L1e6a72.  v0:= 0I;
  #L1e6a74.  return v0;
}
procedure `java.lang.Object` `getKey`(`e.b.a.b.d` v1 @kind this) @signature `Le/b/a/b/d;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e6ab4.  v0:= v1.`e.b.a.b.d.b` @type ^`java.lang.Object` @kind object;
  #L1e6ab8.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.b.a.b.d` v1 @kind this) @signature `Le/b/a/b/d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e6acc.  v0:= v1.`e.b.a.b.d.c` @type ^`java.lang.Object` @kind object;
  #L1e6ad0.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.b.a.b.d` v2 @kind this) @signature `Le/b/a/b/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e6a88.  v0:= v2.`e.b.a.b.d.b` @type ^`java.lang.Object` @kind object;
  #L1e6a8c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e6a92.  v0:= temp;
  #L1e6a94.  v1:= v2.`e.b.a.b.d.c` @type ^`java.lang.Object` @kind object;
  #L1e6a98.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e6a9e.  v1:= temp;
  #L1e6aa0.  v0:= v0 ^~ v1 @kind int;
  #L1e6aa2.  return v0;
}
procedure `java.lang.Object` `setValue`(`e.b.a.b.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/b/a/b/d;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e6ae4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1e6ae8.  v0:= "An entry modification is not supported" @kind object;
  #L1e6aec.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e6af2.  throw v2;
}
procedure `java.lang.String` `toString`(`e.b.a.b.d` v2 @kind this) @signature `Le/b/a/b/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e6b04.  v0:= new `java.lang.StringBuilder`;
  #L1e6b08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e6b0e.  v1:= v2.`e.b.a.b.d.b` @type ^`java.lang.Object` @kind object;
  #L1e6b12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6b18.  v1:= "=" @kind object;
  #L1e6b1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6b22.  v1:= v2.`e.b.a.b.d.c` @type ^`java.lang.Object` @kind object;
  #L1e6b26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6b2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e6b32.  v0:= temp @kind object;
  #L1e6b34.  return v0 @kind object;
}
