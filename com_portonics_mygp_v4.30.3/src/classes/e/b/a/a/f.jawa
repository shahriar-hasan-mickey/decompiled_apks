record `e.b.a.a.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`e.b.a.a.f` v0 @kind this) @signature `Le/b/a/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e685c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e6862.  return @kind void;
}
procedure `void` `a`(`java.lang.Runnable` v0 @kind object) @signature `Le/b/a/a/f;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`e.b.a.a.f` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Le/b/a/a/f;.b:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e6874.  call temp:= `c`(v1) @signature `Le/b/a/a/f;.c:()Z` @kind virtual;
  #L1e687a.  v0:= temp;
  #L1e687c.  if v0 == 0 then goto L1e6888;
  #L1e6880.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1e6886.  goto L1e688e;
  #L1e6888.  call `d`(v1, v2) @signature `Le/b/a/a/f;.d:(Ljava/lang/Runnable;)V` @kind virtual;
  #L1e688e.  return @kind void;
}
procedure `boolean` `c`() @signature `Le/b/a/a/f;.c:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`java.lang.Runnable` v0 @kind object) @signature `Le/b/a/a/f;.d:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
