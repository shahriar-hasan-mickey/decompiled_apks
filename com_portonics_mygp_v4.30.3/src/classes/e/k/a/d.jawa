record `e.k.a.d` @kind class @AccessFlag  {
  `int` `e.k.a.d.a` @AccessFlag PUBLIC_FINAL;
  `int` `e.k.a.d.b` @AccessFlag PUBLIC_FINAL;
  `long` `e.k.a.d.c` @AccessFlag PUBLIC_FINAL;
  `byte`[] `e.k.a.d.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`e.k.a.d` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `byte`[] v5 @kind object) @signature `Le/k/a/d;.<init>:(IIJ[B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L239598.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23959e.  v0.`e.k.a.d.a` @type ^`int` := v1;
  #L2395a2.  v0.`e.k.a.d.b` @type ^`int` := v2;
  #L2395a6.  v0.`e.k.a.d.c` @type ^`long` := v3 @kind wide;
  #L2395aa.  v0.`e.k.a.d.d` @type ^`byte`[] := v5 @kind object;
  #L2395ae.  return @kind void;
}
procedure `void` `<init>`(`e.k.a.d` v6 @kind this, `int` v7 , `int` v8 , `byte`[] v9 @kind object) @signature `Le/k/a/d;.<init>:(II[B)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L239574.  v3:= -1L;
  #L239578.  v0:= v6 @kind object;
  #L23957a.  v1:= v7;
  #L23957c.  v2:= v8;
  #L23957e.  v5:= v9 @kind object;
  #L239580.  call `<init>`(v0, v1, v2, v3, v5) @signature `Le/k/a/d;.<init>:(IIJ[B)V` @kind direct;
  #L239586.  return @kind void;
}
procedure `e.k.a.d` `a`(`java.lang.String` v5 @kind object) @signature `Le/k/a/d;.a:(Ljava/lang/String;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L238a3c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L238a42.  v0:= temp;
  #L238a44.  v1:= 1I;
  #L238a46.  if v0 != v1 then goto L238a8c;
  #L238a4a.  v0:= 0I;
  #L238a4c.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L238a52.  v2:= temp;
  #L238a54.  v3:= 48I;
  #L238a58.  if v2 < v3 then goto L238a8c;
  #L238a5c.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L238a62.  v2:= temp;
  #L238a64.  v4:= 49I;
  #L238a68.  if v2 > v4 then goto L238a8c;
  #L238a6c.  v2:= new `byte`[v1];
  #L238a70.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L238a76.  v5:= temp;
  #L238a78.  v5:= v5 - v3 @kind int;
  #L238a7a.  v5:= (`byte`) v5 @kind i2b;
  #L238a7c.  v2[v0]:= v5 @kind byte;
  #L238a80.  v5:= new `e.k.a.d`;
  #L238a84.  call `<init>`(v5, v1, v1, v2) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238a8a.  return v5 @kind object;
  #L238a8c.  v0:= `@@e.k.a.g.W` @type ^`java.nio.charset.Charset` @kind object;
  #L238a90.  call temp:= `getBytes`(v5, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L238a96.  v5:= temp @kind object;
  #L238a98.  v0:= new `e.k.a.d`;
  #L238a9c.  v2:= length @variable v5;
  #L238a9e.  call `<init>`(v0, v1, v2, v5) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238aa4.  return v0 @kind object;
}
procedure `e.k.a.d` `b`(`double`[] v5 @kind object, `java.nio.ByteOrder` v6 @kind object) @signature `Le/k/a/d;.b:([DLjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L238ab8.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238abc.  v1:= 12I;
  #L238ac0.  v0:= v0[v1];
  #L238ac4.  v2:= length @variable v5;
  #L238ac6.  v0:= v0 * v2 @kind int;
  #L238aca.  v0:= new `byte`[v0];
  #L238ace.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238ad4.  v0:= temp @kind object;
  #L238ad6.  call temp:= `order`(v0, v6) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238adc.  v6:= length @variable v5;
  #L238ade.  v2:= 0I;
  #L238ae0.  if v2 >= v6 then goto L238af4;
  #L238ae4.  v3:= v5[v2] @kind wide;
  #L238ae8.  call temp:= `putDouble`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238aee.  v2:= v2 + 1;
  #L238af2.  goto L238ae0;
  #L238af4.  v6:= new `e.k.a.d`;
  #L238af8.  v5:= length @variable v5;
  #L238afa.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238b00.  v0:= temp @kind object;
  #L238b02.  call `<init>`(v6, v1, v5, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238b08.  return v6 @kind object;
}
procedure `e.k.a.d` `c`(`int`[] v4 @kind object, `java.nio.ByteOrder` v5 @kind object) @signature `Le/k/a/d;.c:([ILjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L238b1c.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238b20.  v1:= 9I;
  #L238b24.  v0:= v0[v1];
  #L238b28.  v2:= length @variable v4;
  #L238b2a.  v0:= v0 * v2 @kind int;
  #L238b2e.  v0:= new `byte`[v0];
  #L238b32.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238b38.  v0:= temp @kind object;
  #L238b3a.  call temp:= `order`(v0, v5) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238b40.  v5:= length @variable v4;
  #L238b42.  v2:= 0I;
  #L238b44.  if v2 >= v5 then goto L238b58;
  #L238b48.  v3:= v4[v2];
  #L238b4c.  call temp:= `putInt`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238b52.  v2:= v2 + 1;
  #L238b56.  goto L238b44;
  #L238b58.  v5:= new `e.k.a.d`;
  #L238b5c.  v4:= length @variable v4;
  #L238b5e.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238b64.  v0:= temp @kind object;
  #L238b66.  call `<init>`(v5, v1, v4, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238b6c.  return v5 @kind object;
}
procedure `e.k.a.d` `d`(`e.k.a.f`[] v6 @kind object, `java.nio.ByteOrder` v7 @kind object) @signature `Le/k/a/d;.d:([Le/k/a/f;Ljava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L238b80.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238b84.  v1:= 10I;
  #L238b88.  v0:= v0[v1];
  #L238b8c.  v2:= length @variable v6;
  #L238b8e.  v0:= v0 * v2 @kind int;
  #L238b92.  v0:= new `byte`[v0];
  #L238b96.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238b9c.  v0:= temp @kind object;
  #L238b9e.  call temp:= `order`(v0, v7) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238ba4.  v7:= length @variable v6;
  #L238ba6.  v2:= 0I;
  #L238ba8.  if v2 >= v7 then goto L238bce;
  #L238bac.  v3:= v6[v2] @kind object;
  #L238bb0.  v4:= v3.`e.k.a.f.a` @type ^`long` @kind wide;
  #L238bb4.  v5:= (`int`) v4 @kind l2i;
  #L238bb6.  call temp:= `putInt`(v0, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238bbc.  v3:= v3.`e.k.a.f.b` @type ^`long` @kind wide;
  #L238bc0.  v4:= (`int`) v3 @kind l2i;
  #L238bc2.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238bc8.  v2:= v2 + 1;
  #L238bcc.  goto L238ba8;
  #L238bce.  v7:= new `e.k.a.d`;
  #L238bd2.  v6:= length @variable v6;
  #L238bd4.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238bda.  v0:= temp @kind object;
  #L238bdc.  call `<init>`(v7, v1, v6, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238be2.  return v7 @kind object;
}
procedure `e.k.a.d` `e`(`java.lang.String` v3 @kind object) @signature `Le/k/a/d;.e:(Ljava/lang/String;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L238bf4.  v0:= new `java.lang.StringBuilder`;
  #L238bf8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238bfe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238c04.  v3:= 0I;
  #L238c06.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L238c0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238c12.  v3:= temp @kind object;
  #L238c14.  v0:= `@@e.k.a.g.W` @type ^`java.nio.charset.Charset` @kind object;
  #L238c18.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L238c1e.  v3:= temp @kind object;
  #L238c20.  v0:= new `e.k.a.d`;
  #L238c24.  v1:= length @variable v3;
  #L238c26.  v2:= 2I;
  #L238c28.  call `<init>`(v0, v2, v1, v3) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238c2e.  return v0 @kind object;
}
procedure `e.k.a.d` `f`(`long` v2 , `java.nio.ByteOrder` v4 @kind object) @signature `Le/k/a/d;.f:(JLjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L238c40.  v0:= 1I;
  #L238c42.  v0:= new `long`[v0];
  #L238c46.  v1:= 0I;
  #L238c48.  v0[v1]:= v2 @kind wide;
  #L238c4c.  call temp:= `g`(v0, v4) @signature `Le/k/a/d;.g:([JLjava/nio/ByteOrder;)Le/k/a/d;` @kind static;
  #L238c52.  v2:= temp @kind object;
  #L238c54.  return v2 @kind object;
}
procedure `e.k.a.d` `g`(`long`[] v5 @kind object, `java.nio.ByteOrder` v6 @kind object) @signature `Le/k/a/d;.g:([JLjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L238c68.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238c6c.  v1:= 4I;
  #L238c6e.  v0:= v0[v1];
  #L238c72.  v2:= length @variable v5;
  #L238c74.  v0:= v0 * v2 @kind int;
  #L238c78.  v0:= new `byte`[v0];
  #L238c7c.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238c82.  v0:= temp @kind object;
  #L238c84.  call temp:= `order`(v0, v6) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238c8a.  v6:= length @variable v5;
  #L238c8c.  v2:= 0I;
  #L238c8e.  if v2 >= v6 then goto L238ca4;
  #L238c92.  v3:= v5[v2] @kind wide;
  #L238c96.  v4:= (`int`) v3 @kind l2i;
  #L238c98.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238c9e.  v2:= v2 + 1;
  #L238ca2.  goto L238c8e;
  #L238ca4.  v6:= new `e.k.a.d`;
  #L238ca8.  v5:= length @variable v5;
  #L238caa.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238cb0.  v0:= temp @kind object;
  #L238cb2.  call `<init>`(v6, v1, v5, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238cb8.  return v6 @kind object;
}
procedure `e.k.a.d` `h`(`e.k.a.f` v2 @kind object, `java.nio.ByteOrder` v3 @kind object) @signature `Le/k/a/d;.h:(Le/k/a/f;Ljava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L238ccc.  v0:= 1I;
  #L238cce.  v0:= new `e.k.a.f`[v0];
  #L238cd2.  v1:= 0I;
  #L238cd4.  v0[v1]:= v2 @kind object;
  #L238cd8.  call temp:= `i`(v0, v3) @signature `Le/k/a/d;.i:([Le/k/a/f;Ljava/nio/ByteOrder;)Le/k/a/d;` @kind static;
  #L238cde.  v2:= temp @kind object;
  #L238ce0.  return v2 @kind object;
}
procedure `e.k.a.d` `i`(`e.k.a.f`[] v6 @kind object, `java.nio.ByteOrder` v7 @kind object) @signature `Le/k/a/d;.i:([Le/k/a/f;Ljava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L238cf4.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238cf8.  v1:= 5I;
  #L238cfa.  v0:= v0[v1];
  #L238cfe.  v2:= length @variable v6;
  #L238d00.  v0:= v0 * v2 @kind int;
  #L238d04.  v0:= new `byte`[v0];
  #L238d08.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238d0e.  v0:= temp @kind object;
  #L238d10.  call temp:= `order`(v0, v7) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238d16.  v7:= length @variable v6;
  #L238d18.  v2:= 0I;
  #L238d1a.  if v2 >= v7 then goto L238d40;
  #L238d1e.  v3:= v6[v2] @kind object;
  #L238d22.  v4:= v3.`e.k.a.f.a` @type ^`long` @kind wide;
  #L238d26.  v5:= (`int`) v4 @kind l2i;
  #L238d28.  call temp:= `putInt`(v0, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238d2e.  v3:= v3.`e.k.a.f.b` @type ^`long` @kind wide;
  #L238d32.  v4:= (`int`) v3 @kind l2i;
  #L238d34.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238d3a.  v2:= v2 + 1;
  #L238d3e.  goto L238d1a;
  #L238d40.  v7:= new `e.k.a.d`;
  #L238d44.  v6:= length @variable v6;
  #L238d46.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238d4c.  v0:= temp @kind object;
  #L238d4e.  call `<init>`(v7, v1, v6, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238d54.  return v7 @kind object;
}
procedure `e.k.a.d` `j`(`int` v2 , `java.nio.ByteOrder` v3 @kind object) @signature `Le/k/a/d;.j:(ILjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L238d68.  v0:= 1I;
  #L238d6a.  v0:= new `int`[v0];
  #L238d6e.  v1:= 0I;
  #L238d70.  v0[v1]:= v2;
  #L238d74.  call temp:= `k`(v0, v3) @signature `Le/k/a/d;.k:([ILjava/nio/ByteOrder;)Le/k/a/d;` @kind static;
  #L238d7a.  v2:= temp @kind object;
  #L238d7c.  return v2 @kind object;
}
procedure `e.k.a.d` `k`(`int`[] v4 @kind object, `java.nio.ByteOrder` v5 @kind object) @signature `Le/k/a/d;.k:([ILjava/nio/ByteOrder;)Le/k/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L238d90.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238d94.  v1:= 3I;
  #L238d96.  v0:= v0[v1];
  #L238d9a.  v2:= length @variable v4;
  #L238d9c.  v0:= v0 * v2 @kind int;
  #L238da0.  v0:= new `byte`[v0];
  #L238da4.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L238daa.  v0:= temp @kind object;
  #L238dac.  call temp:= `order`(v0, v5) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238db2.  v5:= length @variable v4;
  #L238db4.  v2:= 0I;
  #L238db6.  if v2 >= v5 then goto L238dcc;
  #L238dba.  v3:= v4[v2];
  #L238dbe.  v3:= (`short`) v3 @kind i2s;
  #L238dc0.  call temp:= `putShort`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L238dc6.  v2:= v2 + 1;
  #L238dca.  goto L238db6;
  #L238dcc.  v5:= new `e.k.a.d`;
  #L238dd0.  v4:= length @variable v4;
  #L238dd2.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L238dd8.  v0:= temp @kind object;
  #L238dda.  call `<init>`(v5, v1, v4, v0) @signature `Le/k/a/d;.<init>:(II[B)V` @kind direct;
  #L238de0.  return v5 @kind object;
}
procedure `double` `l`(`e.k.a.d` v4 @kind this, `java.nio.ByteOrder` v5 @kind object) @signature `Le/k/a/d;.l:(Ljava/nio/ByteOrder;)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L238df4.  call temp:= `o`(v4, v5) @signature `Le/k/a/d;.o:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L238dfa.  v5:= temp @kind object;
  #L238dfc.  if v5 == 0 then goto L238eca;
  #L238e00.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L238e04.  if v0 == 0 then goto L238e16;
  #L238e08.  v5:= (`java.lang.String`) v5 @kind object;
  #L238e0c.  call temp:= `parseDouble`(v5) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L238e12.  v0:= temp @kind wide;
  #L238e14.  return v0 @kind wide;
  #L238e16.  v0:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L238e1a.  v1:= 0I;
  #L238e1c.  v2:= "There are more than one component" @kind object;
  #L238e20.  v3:= 1I;
  #L238e22.  if v0 == 0 then goto L238e44;
  #L238e26.  v5:= (`long`[]) v5 @kind object;
  #L238e2a.  v0:= length @variable v5;
  #L238e2c.  if v0 != v3 then goto L238e38;
  #L238e30.  v0:= v5[v1] @kind wide;
  #L238e34.  v0:= (`double`) v0 @kind l2d;
  #L238e36.  return v0 @kind wide;
  #L238e38.  v5:= new `java.lang.NumberFormatException`;
  #L238e3c.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238e42.  throw v5;
  #L238e44.  v0:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L238e48.  if v0 == 0 then goto L238e6a;
  #L238e4c.  v5:= (`int`[]) v5 @kind object;
  #L238e50.  v0:= length @variable v5;
  #L238e52.  if v0 != v3 then goto L238e5e;
  #L238e56.  v5:= v5[v1];
  #L238e5a.  v0:= (`double`) v5 @kind i2d;
  #L238e5c.  return v0 @kind wide;
  #L238e5e.  v5:= new `java.lang.NumberFormatException`;
  #L238e62.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238e68.  throw v5;
  #L238e6a.  v0:= instanceof @variable v5 @type ^`double`[] @kind boolean;
  #L238e6e.  if v0 == 0 then goto L238e8e;
  #L238e72.  v5:= (`double`[]) v5 @kind object;
  #L238e76.  v0:= length @variable v5;
  #L238e78.  if v0 != v3 then goto L238e82;
  #L238e7c.  v0:= v5[v1] @kind wide;
  #L238e80.  return v0 @kind wide;
  #L238e82.  v5:= new `java.lang.NumberFormatException`;
  #L238e86.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238e8c.  throw v5;
  #L238e8e.  v0:= instanceof @variable v5 @type ^`e.k.a.f`[] @kind boolean;
  #L238e92.  if v0 == 0 then goto L238eba;
  #L238e96.  v5:= (`e.k.a.f`[]) v5 @kind object;
  #L238e9a.  v0:= length @variable v5;
  #L238e9c.  if v0 != v3 then goto L238eae;
  #L238ea0.  v5:= v5[v1] @kind object;
  #L238ea4.  call temp:= `a`(v5) @signature `Le/k/a/f;.a:()D` @kind virtual;
  #L238eaa.  v0:= temp @kind wide;
  #L238eac.  return v0 @kind wide;
  #L238eae.  v5:= new `java.lang.NumberFormatException`;
  #L238eb2.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238eb8.  throw v5;
  #L238eba.  v5:= new `java.lang.NumberFormatException`;
  #L238ebe.  v0:= "Couldn't find a double value" @kind object;
  #L238ec2.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238ec8.  throw v5;
  #L238eca.  v5:= new `java.lang.NumberFormatException`;
  #L238ece.  v0:= "NULL can't be converted to a double value" @kind object;
  #L238ed2.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238ed8.  throw v5;
}
procedure `int` `m`(`e.k.a.d` v4 @kind this, `java.nio.ByteOrder` v5 @kind object) @signature `Le/k/a/d;.m:(Ljava/nio/ByteOrder;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L238eec.  call temp:= `o`(v4, v5) @signature `Le/k/a/d;.o:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L238ef2.  v5:= temp @kind object;
  #L238ef4.  if v5 == 0 then goto L238f70;
  #L238ef8.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L238efc.  if v0 == 0 then goto L238f0e;
  #L238f00.  v5:= (`java.lang.String`) v5 @kind object;
  #L238f04.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L238f0a.  v5:= temp;
  #L238f0c.  return v5;
  #L238f0e.  v0:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L238f12.  v1:= 0I;
  #L238f14.  v2:= "There are more than one component" @kind object;
  #L238f18.  v3:= 1I;
  #L238f1a.  if v0 == 0 then goto L238f3c;
  #L238f1e.  v5:= (`long`[]) v5 @kind object;
  #L238f22.  v0:= length @variable v5;
  #L238f24.  if v0 != v3 then goto L238f30;
  #L238f28.  v0:= v5[v1] @kind wide;
  #L238f2c.  v5:= (`int`) v0 @kind l2i;
  #L238f2e.  return v5;
  #L238f30.  v5:= new `java.lang.NumberFormatException`;
  #L238f34.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238f3a.  throw v5;
  #L238f3c.  v0:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L238f40.  if v0 == 0 then goto L238f60;
  #L238f44.  v5:= (`int`[]) v5 @kind object;
  #L238f48.  v0:= length @variable v5;
  #L238f4a.  if v0 != v3 then goto L238f54;
  #L238f4e.  v5:= v5[v1];
  #L238f52.  return v5;
  #L238f54.  v5:= new `java.lang.NumberFormatException`;
  #L238f58.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238f5e.  throw v5;
  #L238f60.  v5:= new `java.lang.NumberFormatException`;
  #L238f64.  v0:= "Couldn't find a integer value" @kind object;
  #L238f68.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238f6e.  throw v5;
  #L238f70.  v5:= new `java.lang.NumberFormatException`;
  #L238f74.  v0:= "NULL can't be converted to a integer value" @kind object;
  #L238f78.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238f7e.  throw v5;
}
procedure `java.lang.String` `n`(`e.k.a.d` v7 @kind this, `java.nio.ByteOrder` v8 @kind object) @signature `Le/k/a/d;.n:(Ljava/nio/ByteOrder;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2393d8.  call temp:= `o`(v7, v8) @signature `Le/k/a/d;.o:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L2393de.  v8:= temp @kind object;
  #L2393e0.  v0:= 0I;
  #L2393e2.  if v8 != 0 then goto L2393e8;
  #L2393e6.  return v0 @kind object;
  #L2393e8.  v1:= instanceof @variable v8 @type ^`java.lang.String` @kind boolean;
  #L2393ec.  if v1 == 0 then goto L2393f6;
  #L2393f0.  v8:= (`java.lang.String`) v8 @kind object;
  #L2393f4.  return v8 @kind object;
  #L2393f6.  v1:= new `java.lang.StringBuilder`;
  #L2393fa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L239400.  v2:= instanceof @variable v8 @type ^`long`[] @kind boolean;
  #L239404.  v3:= "," @kind object;
  #L239408.  v4:= 0I;
  #L23940a.  if v2 == 0 then goto L23943e;
  #L23940e.  v8:= (`long`[]) v8 @kind object;
  #L239412.  v0:= length @variable v8;
  #L239414.  if v4 >= v0 then goto L239434;
  #L239418.  v5:= v8[v4] @kind wide;
  #L23941c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L239422.  v4:= v4 + 1;
  #L239426.  v0:= length @variable v8;
  #L239428.  if v4 == v0 then goto L239412;
  #L23942c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239432.  goto L239412;
  #L239434.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23943a.  v8:= temp @kind object;
  #L23943c.  return v8 @kind object;
  #L23943e.  v2:= instanceof @variable v8 @type ^`int`[] @kind boolean;
  #L239442.  if v2 == 0 then goto L239476;
  #L239446.  v8:= (`int`[]) v8 @kind object;
  #L23944a.  v0:= length @variable v8;
  #L23944c.  if v4 >= v0 then goto L23946c;
  #L239450.  v0:= v8[v4];
  #L239454.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23945a.  v4:= v4 + 1;
  #L23945e.  v0:= length @variable v8;
  #L239460.  if v4 == v0 then goto L23944a;
  #L239464.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23946a.  goto L23944a;
  #L23946c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L239472.  v8:= temp @kind object;
  #L239474.  return v8 @kind object;
  #L239476.  v2:= instanceof @variable v8 @type ^`double`[] @kind boolean;
  #L23947a.  if v2 == 0 then goto L2394ae;
  #L23947e.  v8:= (`double`[]) v8 @kind object;
  #L239482.  v0:= length @variable v8;
  #L239484.  if v4 >= v0 then goto L2394a4;
  #L239488.  v5:= v8[v4] @kind wide;
  #L23948c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L239492.  v4:= v4 + 1;
  #L239496.  v0:= length @variable v8;
  #L239498.  if v4 == v0 then goto L239482;
  #L23949c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2394a2.  goto L239482;
  #L2394a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2394aa.  v8:= temp @kind object;
  #L2394ac.  return v8 @kind object;
  #L2394ae.  v2:= instanceof @variable v8 @type ^`e.k.a.f`[] @kind boolean;
  #L2394b2.  if v2 == 0 then goto L239502;
  #L2394b6.  v8:= (`e.k.a.f`[]) v8 @kind object;
  #L2394ba.  v0:= length @variable v8;
  #L2394bc.  if v4 >= v0 then goto L2394f8;
  #L2394c0.  v0:= v8[v4] @kind object;
  #L2394c4.  v5:= v0.`e.k.a.f.a` @type ^`long` @kind wide;
  #L2394c8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2394ce.  v0:= 47I;
  #L2394d2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2394d8.  v0:= v8[v4] @kind object;
  #L2394dc.  v5:= v0.`e.k.a.f.b` @type ^`long` @kind wide;
  #L2394e0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2394e6.  v4:= v4 + 1;
  #L2394ea.  v0:= length @variable v8;
  #L2394ec.  if v4 == v0 then goto L2394ba;
  #L2394f0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2394f6.  goto L2394ba;
  #L2394f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2394fe.  v8:= temp @kind object;
  #L239500.  return v8 @kind object;
  #L239502.  return v0 @kind object;
}
procedure `java.lang.Object` `o`(`e.k.a.d` v8 @kind this, `java.nio.ByteOrder` v9 @kind object) @signature `Le/k/a/d;.o:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L238fb8.  v0:= 0I;
  #L238fba.  v1:= new `e.k.a.b`;
  #L238fbe.  v2:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L238fc2.  call `<init>`(v1, v2) @signature `Le/k/a/b;.<init>:([B)V` @kind direct;
  #L238fc8.  call `m`(v1, v9) @signature `Le/k/a/b;.m:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L238fce.  v9:= v8.`e.k.a.d.a` @type ^`int`;
  #L238fd2.  v2:= 1I;
  #L238fd4.  v3:= 0I;
  #L238fd6.  goto L23926c;
  #L238fdc.  goto L239242;
  #L238fe0.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L238fe4.  v9:= new `double`[v9];
  #L238fe8.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L238fec.  if v3 >= v2 then goto L239002;
  #L238ff0.  call temp:= `readDouble`(v1) @signature `Le/k/a/b;.readDouble:()D` @kind virtual;
  #L238ff6.  v4:= temp @kind wide;
  #L238ff8.  v9[v3]:= v4 @kind wide;
  #L238ffc.  v3:= v3 + 1;
  #L239000.  goto L238fe8;
  #L239002.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239008.  return v9 @kind object;
  #L23900a.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L23900e.  v9:= new `double`[v9];
  #L239012.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L239016.  if v3 >= v2 then goto L23902e;
  #L23901a.  call temp:= `readFloat`(v1) @signature `Le/k/a/b;.readFloat:()F` @kind virtual;
  #L239020.  v2:= temp;
  #L239022.  v4:= (`double`) v2 @kind f2d;
  #L239024.  v9[v3]:= v4 @kind wide;
  #L239028.  v3:= v3 + 1;
  #L23902c.  goto L239012;
  #L23902e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239034.  return v9 @kind object;
  #L239036.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L23903a.  v9:= new `e.k.a.f`[v9];
  #L23903e.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L239042.  if v3 >= v2 then goto L23906e;
  #L239046.  call temp:= `readInt`(v1) @signature `Le/k/a/b;.readInt:()I` @kind virtual;
  #L23904c.  v2:= temp;
  #L23904e.  v4:= (`long`) v2 @kind i2l;
  #L239050.  call temp:= `readInt`(v1) @signature `Le/k/a/b;.readInt:()I` @kind virtual;
  #L239056.  v2:= temp;
  #L239058.  v6:= (`long`) v2 @kind i2l;
  #L23905a.  v2:= new `e.k.a.f`;
  #L23905e.  call `<init>`(v2, v4, v6) @signature `Le/k/a/f;.<init>:(JJ)V` @kind direct;
  #L239064.  v9[v3]:= v2 @kind object;
  #L239068.  v3:= v3 + 1;
  #L23906c.  goto L23903e;
  #L23906e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239074.  return v9 @kind object;
  #L239076.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L23907a.  v9:= new `int`[v9];
  #L23907e.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L239082.  if v3 >= v2 then goto L239098;
  #L239086.  call temp:= `readInt`(v1) @signature `Le/k/a/b;.readInt:()I` @kind virtual;
  #L23908c.  v2:= temp;
  #L23908e.  v9[v3]:= v2;
  #L239092.  v3:= v3 + 1;
  #L239096.  goto L23907e;
  #L239098.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L23909e.  return v9 @kind object;
  #L2390a0.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L2390a4.  v9:= new `int`[v9];
  #L2390a8.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L2390ac.  if v3 >= v2 then goto L2390c2;
  #L2390b0.  call temp:= `readShort`(v1) @signature `Le/k/a/b;.readShort:()S` @kind virtual;
  #L2390b6.  v2:= temp;
  #L2390b8.  v9[v3]:= v2;
  #L2390bc.  v3:= v3 + 1;
  #L2390c0.  goto L2390a8;
  #L2390c2.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2390c8.  return v9 @kind object;
  #L2390ca.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L2390ce.  v9:= new `e.k.a.f`[v9];
  #L2390d2.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L2390d6.  if v3 >= v2 then goto L2390fe;
  #L2390da.  call temp:= `d`(v1) @signature `Le/k/a/b;.d:()J` @kind virtual;
  #L2390e0.  v4:= temp @kind wide;
  #L2390e2.  call temp:= `d`(v1) @signature `Le/k/a/b;.d:()J` @kind virtual;
  #L2390e8.  v6:= temp @kind wide;
  #L2390ea.  v2:= new `e.k.a.f`;
  #L2390ee.  call `<init>`(v2, v4, v6) @signature `Le/k/a/f;.<init>:(JJ)V` @kind direct;
  #L2390f4.  v9[v3]:= v2 @kind object;
  #L2390f8.  v3:= v3 + 1;
  #L2390fc.  goto L2390d2;
  #L2390fe.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239104.  return v9 @kind object;
  #L239106.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L23910a.  v9:= new `long`[v9];
  #L23910e.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L239112.  if v3 >= v2 then goto L239128;
  #L239116.  call temp:= `d`(v1) @signature `Le/k/a/b;.d:()J` @kind virtual;
  #L23911c.  v4:= temp @kind wide;
  #L23911e.  v9[v3]:= v4 @kind wide;
  #L239122.  v3:= v3 + 1;
  #L239126.  goto L23910e;
  #L239128.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L23912e.  return v9 @kind object;
  #L239130.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L239134.  v9:= new `int`[v9];
  #L239138.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L23913c.  if v3 >= v2 then goto L239152;
  #L239140.  call temp:= `readUnsignedShort`(v1) @signature `Le/k/a/b;.readUnsignedShort:()I` @kind virtual;
  #L239146.  v2:= temp;
  #L239148.  v9[v3]:= v2;
  #L23914c.  v3:= v3 + 1;
  #L239150.  goto L239138;
  #L239152.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239158.  return v9 @kind object;
  #L23915a.  v9:= v8.`e.k.a.d.b` @type ^`int`;
  #L23915e.  v4:= `@@e.k.a.g.D` @type ^`byte`[] @kind object;
  #L239162.  v4:= length @variable v4;
  #L239164.  if v9 < v4 then goto L239194;
  #L239168.  v9:= 0I;
  #L23916a.  v4:= `@@e.k.a.g.D` @type ^`byte`[] @kind object;
  #L23916e.  v5:= length @variable v4;
  #L239170.  if v9 >= v5 then goto L23918e;
  #L239174.  v5:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L239178.  v5:= v5[v9] @kind byte;
  #L23917c.  v6:= v4[v9] @kind byte;
  #L239180.  if v5 == v6 then goto L239188;
  #L239184.  v2:= 0I;
  #L239186.  goto L23918e;
  #L239188.  v9:= v9 + 1;
  #L23918c.  goto L23916a;
  #L23918e.  if v2 == 0 then goto L239194;
  #L239192.  v3:= length @variable v4;
  #L239194.  v9:= new `java.lang.StringBuilder`;
  #L239198.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23919e.  v2:= v8.`e.k.a.d.b` @type ^`int`;
  #L2391a2.  if v3 >= v2 then goto L2391d6;
  #L2391a6.  v2:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L2391aa.  v2:= v2[v3] @kind byte;
  #L2391ae.  if v2 != 0 then goto L2391b4;
  #L2391b2.  goto L2391d6;
  #L2391b4.  v4:= 32I;
  #L2391b8.  if v2 < v4 then goto L2391c6;
  #L2391bc.  v2:= (`char`) v2 @kind i2c;
  #L2391be.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2391c4.  goto L2391d0;
  #L2391c6.  v2:= 63I;
  #L2391ca.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2391d0.  v3:= v3 + 1;
  #L2391d4.  goto L23919e;
  #L2391d6.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2391dc.  v9:= temp @kind object;
  #L2391de.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2391e4.  return v9 @kind object;
  #L2391e6.  v9:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L2391ea.  v4:= length @variable v9;
  #L2391ec.  if v4 != v2 then goto L239228;
  #L2391f0.  v4:= v9[v3] @kind byte;
  #L2391f4.  if v4 < 0 then goto L239228;
  #L2391f8.  v9:= v9[v3] @kind byte;
  #L2391fc.  if v9 > v2 then goto L239228;
  #L239200.  v9:= new `java.lang.String`;
  #L239204.  v2:= new `char`[v2];
  #L239208.  v4:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L23920c.  v4:= v4[v3] @kind byte;
  #L239210.  v4:= v4 + 48;
  #L239214.  v4:= (`char`) v4 @kind i2c;
  #L239216.  v2[v3]:= v4 @kind char;
  #L23921a.  call `<init>`(v9, v2) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L239220.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239226.  return v9 @kind object;
  #L239228.  v9:= new `java.lang.String`;
  #L23922c.  v2:= v8.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L239230.  v3:= `@@e.k.a.g.W` @type ^`java.nio.charset.Charset` @kind object;
  #L239234.  call `<init>`(v9, v2, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L23923a.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239240.  return v9 @kind object;
  #L239242.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L239248.  return v0 @kind object;
  #L23924a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23924c.  v0:= v1 @kind object;
  #L23924e.  goto L239252;
  #L239250.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239252.  if v0 == 0 then goto L23925c;
  #L239256.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L23925c.  throw v9;
  #L23925e.  v1:= v0 @kind object;
  #L239260.  if v1 == 0 then goto L23926a;
  #L239264.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L23926a.  return v0 @kind object;
  #L23926c.  switch v9
                  | 1 => goto L2391e6
                  | 2 => goto L23915a
                  | 3 => goto L239130
                  | 4 => goto L239106
                  | 5 => goto L2390ca
                  | 6 => goto L2391e6
                  | 7 => goto L23915a
                  | 8 => goto L2390a0
                  | 9 => goto L239076
                  | 10 => goto L239036
                  | 11 => goto L23900a
                  | 12 => goto L238fe0
                  | else => goto L238fdc;
  catch `java.io.IOException` @[L238fba..L238fc8] goto L23925e;
  catch `java.lang.Throwable` @[L238fba..L238fc8] goto L239250;
  catch `java.io.IOException` @[L238fc8..L238ffc] goto L239260;
  catch `java.lang.Throwable` @[L238fc8..L238ffc] goto L23924a;
  catch `java.io.IOException` @[L239002..L239008] goto L239008;
  catch `java.io.IOException` @[L23900a..L239028] goto L239260;
  catch `java.lang.Throwable` @[L23900a..L239028] goto L23924a;
  catch `java.io.IOException` @[L23902e..L239034] goto L239034;
  catch `java.io.IOException` @[L239036..L239068] goto L239260;
  catch `java.lang.Throwable` @[L239036..L239068] goto L23924a;
  catch `java.io.IOException` @[L23906e..L239074] goto L239074;
  catch `java.io.IOException` @[L239076..L239092] goto L239260;
  catch `java.lang.Throwable` @[L239076..L239092] goto L23924a;
  catch `java.io.IOException` @[L239098..L23909e] goto L23909e;
  catch `java.io.IOException` @[L2390a0..L2390bc] goto L239260;
  catch `java.lang.Throwable` @[L2390a0..L2390bc] goto L23924a;
  catch `java.io.IOException` @[L2390c2..L2390c8] goto L2390c8;
  catch `java.io.IOException` @[L2390ca..L2390f8] goto L239260;
  catch `java.lang.Throwable` @[L2390ca..L2390f8] goto L23924a;
  catch `java.io.IOException` @[L2390fe..L239104] goto L239104;
  catch `java.io.IOException` @[L239106..L239122] goto L239260;
  catch `java.lang.Throwable` @[L239106..L239122] goto L23924a;
  catch `java.io.IOException` @[L239128..L23912e] goto L23912e;
  catch `java.io.IOException` @[L239130..L23914c] goto L239260;
  catch `java.lang.Throwable` @[L239130..L23914c] goto L23924a;
  catch `java.io.IOException` @[L239152..L239158] goto L239158;
  catch `java.io.IOException` @[L23915a..L2391de] goto L239260;
  catch `java.lang.Throwable` @[L23915a..L2391de] goto L23924a;
  catch `java.io.IOException` @[L2391de..L2391e4] goto L2391e4;
  catch `java.io.IOException` @[L2391e6..L239220] goto L239260;
  catch `java.lang.Throwable` @[L2391e6..L239220] goto L23924a;
  catch `java.io.IOException` @[L239220..L239226] goto L239226;
  catch `java.io.IOException` @[L239228..L23923a] goto L239260;
  catch `java.lang.Throwable` @[L239228..L23923a] goto L23924a;
  catch `java.io.IOException` @[L23923a..L239240] goto L239240;
  catch `java.io.IOException` @[L239242..L239248] goto L239248;
  catch `java.io.IOException` @[L239256..L23925c] goto L23925c;
  catch `java.io.IOException` @[L239264..L23926a] goto L23926a;
}
procedure `int` `p`(`e.k.a.d` v2 @kind this) @signature `Le/k/a/d;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L238f90.  v0:= `@@e.k.a.g.C` @type ^`int`[] @kind object;
  #L238f94.  v1:= v2.`e.k.a.d.a` @type ^`int`;
  #L238f98.  v0:= v0[v1];
  #L238f9c.  v1:= v2.`e.k.a.d.b` @type ^`int`;
  #L238fa0.  v0:= v0 * v1 @kind int;
  #L238fa4.  return v0;
}
procedure `java.lang.String` `toString`(`e.k.a.d` v3 @kind this) @signature `Le/k/a/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L239514.  v0:= new `java.lang.StringBuilder`;
  #L239518.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23951e.  v1:= "(" @kind object;
  #L239522.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239528.  v1:= `@@e.k.a.g.B` @type ^`java.lang.String`[] @kind object;
  #L23952c.  v2:= v3.`e.k.a.d.a` @type ^`int`;
  #L239530.  v1:= v1[v2] @kind object;
  #L239534.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23953a.  v1:= ", data length:" @kind object;
  #L23953e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239544.  v1:= v3.`e.k.a.d.d` @type ^`byte`[] @kind object;
  #L239548.  v1:= length @variable v1;
  #L23954a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L239550.  v1:= ")" @kind object;
  #L239554.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23955a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L239560.  v0:= temp @kind object;
  #L239562.  return v0 @kind object;
}
