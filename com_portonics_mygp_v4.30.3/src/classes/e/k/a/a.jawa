record `e.k.a.a` @kind class @AccessFlag  extends `android.media.MediaDataSource` @kind class {
  `long` `e.k.a.a.b` @AccessFlag ;
  `e.k.a.b` `e.k.a.a.c` @AccessFlag FINAL_SYNTHETIC;
  `e.k.a.g` `e.k.a.a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.k.a.a` v0 @kind this, `e.k.a.g` v1 @kind object, `e.k.a.b` v2 @kind object) @signature `Le/k/a/a;.<init>:(Le/k/a/g;Le/k/a/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L237fbc.  v0.`e.k.a.a.d` @type ^`e.k.a.g` := v1 @kind object;
  #L237fc0.  v0.`e.k.a.a.c` @type ^`e.k.a.b` := v2 @kind object;
  #L237fc4.  call `<init>`(v0) @signature `Landroid/media/MediaDataSource;.<init>:()V` @kind direct;
  #L237fca.  return @kind void;
}
procedure `void` `close`(`e.k.a.a` v0 @kind this) @signature `Le/k/a/a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L237fdc.  return @kind void;
}
procedure `long` `getSize`(`e.k.a.a` v2 @kind this) @signature `Le/k/a/a;.getSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L237fa4.  v0:= -1L;
  #L237fa8.  return v0 @kind wide;
}
procedure `int` `readAt`(`e.k.a.a` v6 @kind this, `long` v7 , `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Le/k/a/a;.readAt:(J[BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L237eec.  if v11 != 0 then goto L237ef4;
  #L237ef0.  v7:= 0I;
  #L237ef2.  return v7;
  #L237ef4.  v0:= 0L;
  #L237ef8.  v2:= -1I;
  #L237efa.  v3:= lcmp(v7, v0);
  #L237efe.  if v3 >= 0 then goto L237f04;
  #L237f02.  return v2;
  #L237f04.  v3:= v6.`e.k.a.a.b` @type ^`long` @kind wide;
  #L237f08.  v5:= lcmp(v3, v7);
  #L237f0c.  if v5 == 0 then goto L237f40;
  #L237f10.  v5:= lcmp(v3, v0);
  #L237f14.  if v5 < 0 then goto L237f32;
  #L237f18.  v0:= v6.`e.k.a.a.c` @type ^`e.k.a.b` @kind object;
  #L237f1c.  call temp:= `available`(v0) @signature `Le/k/a/b;.available:()I` @kind virtual;
  #L237f22.  v0:= temp;
  #L237f24.  v0:= (`long`) v0 @kind i2l;
  #L237f26.  v3:= v3 + v0 @kind long;
  #L237f28.  v0:= lcmp(v7, v3);
  #L237f2c.  if v0 < 0 then goto L237f32;
  #L237f30.  return v2;
  #L237f32.  v0:= v6.`e.k.a.a.c` @type ^`e.k.a.b` @kind object;
  #L237f36.  call `k`(v0, v7) @signature `Le/k/a/b;.k:(J)V` @kind virtual;
  #L237f3c.  v6.`e.k.a.a.b` @type ^`long` := v7 @kind wide;
  #L237f40.  v7:= v6.`e.k.a.a.c` @type ^`e.k.a.b` @kind object;
  #L237f44.  call temp:= `available`(v7) @signature `Le/k/a/b;.available:()I` @kind virtual;
  #L237f4a.  v7:= temp;
  #L237f4c.  if v11 <= v7 then goto L237f5c;
  #L237f50.  v7:= v6.`e.k.a.a.c` @type ^`e.k.a.b` @kind object;
  #L237f54.  call temp:= `available`(v7) @signature `Le/k/a/b;.available:()I` @kind virtual;
  #L237f5a.  v11:= temp;
  #L237f5c.  v7:= v6.`e.k.a.a.c` @type ^`e.k.a.b` @kind object;
  #L237f60.  call temp:= `read`(v7, v9, v10, v11) @signature `Le/k/a/b;.read:([BII)I` @kind virtual;
  #L237f66.  v7:= temp;
  #L237f68.  if v7 < 0 then goto L237f7a;
  #L237f6c.  v8:= v6.`e.k.a.a.b` @type ^`long` @kind wide;
  #L237f70.  v10:= (`long`) v7 @kind i2l;
  #L237f72.  v8:= v8 + v10 @kind long;
  #L237f74.  v6.`e.k.a.a.b` @type ^`long` := v8 @kind wide;
  #L237f78.  return v7;
  #L237f7a.  v7:= -1L;
  #L237f7e.  v6.`e.k.a.a.b` @type ^`long` := v7 @kind wide;
  #L237f82.  return v2;
  catch `java.io.IOException` @[L237f04..L237f78] goto L237f7a;
}
