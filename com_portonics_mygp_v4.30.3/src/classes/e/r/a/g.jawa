record `e.r.a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `e.r.a.g.a` @AccessFlag PRIVATE_FINAL;
  `int` `e.r.a.g.b` @AccessFlag PRIVATE_FINAL;
  `int` `e.r.a.g.c` @AccessFlag PRIVATE_FINAL;
  `int` `e.r.a.g.d` @AccessFlag PRIVATE_FINAL;
  `int` `e.r.a.g.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `e.r.a.g.f` @AccessFlag PRIVATE;
  `int` `e.r.a.g.g` @AccessFlag PRIVATE;
  `int` `e.r.a.g.h` @AccessFlag PRIVATE;
  `float`[] `e.r.a.g.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.r.a.g` v1 @kind this, `int` v2 , `int` v3 ) @signature `Le/r/a/g;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L279a64.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L279a6a.  call temp:= `red`(v2) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L279a70.  v0:= temp;
  #L279a72.  v1.`e.r.a.g.a` @type ^`int` := v0;
  #L279a76.  call temp:= `green`(v2) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L279a7c.  v0:= temp;
  #L279a7e.  v1.`e.r.a.g.b` @type ^`int` := v0;
  #L279a82.  call temp:= `blue`(v2) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L279a88.  v0:= temp;
  #L279a8a.  v1.`e.r.a.g.c` @type ^`int` := v0;
  #L279a8e.  v1.`e.r.a.g.d` @type ^`int` := v2;
  #L279a92.  v1.`e.r.a.g.e` @type ^`int` := v3;
  #L279a96.  return @kind void;
}
procedure `void` `a`(`e.r.a.g` v8 @kind this) @signature `Le/r/a/g;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L279aa8.  v0:= v8.`e.r.a.g.f` @type ^`boolean` @kind boolean;
  #L279aac.  if v0 != 0 then goto L279b74;
  #L279ab0.  v0:= v8.`e.r.a.g.d` @type ^`int`;
  #L279ab4.  v1:= -1I;
  #L279ab6.  v2:= 4.5F;
  #L279aba.  call temp:= `f`(v1, v0, v2) @signature `Landroidx/core/graphics/d;.f:(IIF)I` @kind static;
  #L279ac0.  v0:= temp;
  #L279ac2.  v3:= v8.`e.r.a.g.d` @type ^`int`;
  #L279ac6.  v4:= 3.0F;
  #L279aca.  call temp:= `f`(v1, v3, v4) @signature `Landroidx/core/graphics/d;.f:(IIF)I` @kind static;
  #L279ad0.  v3:= temp;
  #L279ad2.  v5:= 1I;
  #L279ad4.  if v0 == v1 then goto L279afa;
  #L279ad8.  if v3 == v1 then goto L279afa;
  #L279adc.  call temp:= `o`(v1, v0) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279ae2.  v0:= temp;
  #L279ae4.  v8.`e.r.a.g.h` @type ^`int` := v0;
  #L279ae8.  call temp:= `o`(v1, v3) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279aee.  v0:= temp;
  #L279af0.  v8.`e.r.a.g.g` @type ^`int` := v0;
  #L279af4.  v8.`e.r.a.g.f` @type ^`boolean` := v5 @kind boolean;
  #L279af8.  return @kind void;
  #L279afa.  v6:= v8.`e.r.a.g.d` @type ^`int`;
  #L279afe.  v7:= -16777216I;
  #L279b02.  call temp:= `f`(v7, v6, v2) @signature `Landroidx/core/graphics/d;.f:(IIF)I` @kind static;
  #L279b08.  v2:= temp;
  #L279b0a.  v6:= v8.`e.r.a.g.d` @type ^`int`;
  #L279b0e.  call temp:= `f`(v7, v6, v4) @signature `Landroidx/core/graphics/d;.f:(IIF)I` @kind static;
  #L279b14.  v4:= temp;
  #L279b16.  if v2 == v1 then goto L279b3c;
  #L279b1a.  if v4 == v1 then goto L279b3c;
  #L279b1e.  call temp:= `o`(v7, v2) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b24.  v0:= temp;
  #L279b26.  v8.`e.r.a.g.h` @type ^`int` := v0;
  #L279b2a.  call temp:= `o`(v7, v4) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b30.  v0:= temp;
  #L279b32.  v8.`e.r.a.g.g` @type ^`int` := v0;
  #L279b36.  v8.`e.r.a.g.f` @type ^`boolean` := v5 @kind boolean;
  #L279b3a.  return @kind void;
  #L279b3c.  if v0 == v1 then goto L279b4a;
  #L279b40.  call temp:= `o`(v1, v0) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b46.  v0:= temp;
  #L279b48.  goto L279b52;
  #L279b4a.  call temp:= `o`(v7, v2) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b50.  v0:= temp;
  #L279b52.  v8.`e.r.a.g.h` @type ^`int` := v0;
  #L279b56.  if v3 == v1 then goto L279b64;
  #L279b5a.  call temp:= `o`(v1, v3) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b60.  v0:= temp;
  #L279b62.  goto L279b6c;
  #L279b64.  call temp:= `o`(v7, v4) @signature `Landroidx/core/graphics/d;.o:(II)I` @kind static;
  #L279b6a.  v0:= temp;
  #L279b6c.  v8.`e.r.a.g.g` @type ^`int` := v0;
  #L279b70.  v8.`e.r.a.g.f` @type ^`boolean` := v5 @kind boolean;
  #L279b74.  return @kind void;
}
procedure `int` `b`(`e.r.a.g` v1 @kind this) @signature `Le/r/a/g;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2798f4.  call `a`(v1) @signature `Le/r/a/g;.a:()V` @kind direct;
  #L2798fa.  v0:= v1.`e.r.a.g.h` @type ^`int`;
  #L2798fe.  return v0;
}
procedure `float`[] `c`(`e.r.a.g` v4 @kind this) @signature `Le/r/a/g;.c:()[F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2798b4.  v0:= v4.`e.r.a.g.i` @type ^`float`[] @kind object;
  #L2798b8.  if v0 != 0 then goto L2798c6;
  #L2798bc.  v0:= 3I;
  #L2798be.  v0:= new `float`[v0];
  #L2798c2.  v4.`e.r.a.g.i` @type ^`float`[] := v0 @kind object;
  #L2798c6.  v0:= v4.`e.r.a.g.a` @type ^`int`;
  #L2798ca.  v1:= v4.`e.r.a.g.b` @type ^`int`;
  #L2798ce.  v2:= v4.`e.r.a.g.c` @type ^`int`;
  #L2798d2.  v3:= v4.`e.r.a.g.i` @type ^`float`[] @kind object;
  #L2798d6.  call `a`(v0, v1, v2, v3) @signature `Landroidx/core/graphics/d;.a:(III[F)V` @kind static;
  #L2798dc.  v0:= v4.`e.r.a.g.i` @type ^`float`[] @kind object;
  #L2798e0.  return v0 @kind object;
}
procedure `int` `d`(`e.r.a.g` v1 @kind this) @signature `Le/r/a/g;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279910.  v0:= v1.`e.r.a.g.e` @type ^`int`;
  #L279914.  return v0;
}
procedure `int` `e`(`e.r.a.g` v1 @kind this) @signature `Le/r/a/g;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279928.  v0:= v1.`e.r.a.g.d` @type ^`int`;
  #L27992c.  return v0;
}
procedure `boolean` `equals`(`e.r.a.g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/r/a/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L279860.  v0:= 1I;
  #L279862.  if v4 != v5 then goto L279868;
  #L279866.  return v0;
  #L279868.  v1:= 0I;
  #L27986a.  if v5 == 0 then goto L2798a2;
  #L27986e.  v2:= constclass @type ^`e.r.a.g` @kind object;
  #L279872.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L279878.  v3:= temp @kind object;
  #L27987a.  if v2 == v3 then goto L279880;
  #L27987e.  goto L2798a2;
  #L279880.  v5:= (`e.r.a.g`) v5 @kind object;
  #L279884.  v2:= v4.`e.r.a.g.e` @type ^`int`;
  #L279888.  v3:= v5.`e.r.a.g.e` @type ^`int`;
  #L27988c.  if v2 != v3 then goto L27989e;
  #L279890.  v2:= v4.`e.r.a.g.d` @type ^`int`;
  #L279894.  v5:= v5.`e.r.a.g.d` @type ^`int`;
  #L279898.  if v2 != v5 then goto L27989e;
  #L27989c.  goto L2798a0;
  #L27989e.  v0:= 0I;
  #L2798a0.  return v0;
  #L2798a2.  return v1;
}
procedure `int` `f`(`e.r.a.g` v1 @kind this) @signature `Le/r/a/g;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279940.  call `a`(v1) @signature `Le/r/a/g;.a:()V` @kind direct;
  #L279946.  v0:= v1.`e.r.a.g.g` @type ^`int`;
  #L27994a.  return v0;
}
procedure `int` `hashCode`(`e.r.a.g` v2 @kind this) @signature `Le/r/a/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27995c.  v0:= v2.`e.r.a.g.d` @type ^`int`;
  #L279960.  v0:= v0 * 31;
  #L279964.  v1:= v2.`e.r.a.g.e` @type ^`int`;
  #L279968.  v0:= v0 + v1 @kind int;
  #L27996a.  return v0;
}
procedure `java.lang.String` `toString`(`e.r.a.g` v3 @kind this) @signature `Le/r/a/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27997c.  v0:= new `java.lang.StringBuilder`;
  #L279980.  v1:= constclass @type ^`e.r.a.g` @kind object;
  #L279984.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L27998a.  v1:= temp @kind object;
  #L27998c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279992.  v1:= " [RGB: #" @kind object;
  #L279996.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27999c.  call temp:= `e`(v3) @signature `Le/r/a/g;.e:()I` @kind virtual;
  #L2799a2.  v1:= temp;
  #L2799a4.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2799aa.  v1:= temp @kind object;
  #L2799ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799b2.  v1:= 93I;
  #L2799b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799bc.  v2:= " [HSL: " @kind object;
  #L2799c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799c6.  call temp:= `c`(v3) @signature `Le/r/a/g;.c:()[F` @kind virtual;
  #L2799cc.  v2:= temp @kind object;
  #L2799ce.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([F)Ljava/lang/String;` @kind static;
  #L2799d4.  v2:= temp @kind object;
  #L2799d6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799e2.  v2:= " [Population: " @kind object;
  #L2799e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799ec.  v2:= v3.`e.r.a.g.e` @type ^`int`;
  #L2799f0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2799fc.  v2:= " [Title Text: #" @kind object;
  #L279a00.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a06.  call temp:= `f`(v3) @signature `Le/r/a/g;.f:()I` @kind virtual;
  #L279a0c.  v2:= temp;
  #L279a0e.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L279a14.  v2:= temp @kind object;
  #L279a16.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a22.  v2:= " [Body Text: #" @kind object;
  #L279a26.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a2c.  call temp:= `b`(v3) @signature `Le/r/a/g;.b:()I` @kind virtual;
  #L279a32.  v2:= temp;
  #L279a34.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L279a3a.  v2:= temp @kind object;
  #L279a3c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L279a48.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L279a4e.  v0:= temp @kind object;
  #L279a50.  return v0 @kind object;
}
