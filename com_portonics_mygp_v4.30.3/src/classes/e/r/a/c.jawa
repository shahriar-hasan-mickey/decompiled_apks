record `e.r.a.c` @kind class @AccessFlag FINAL {
  `int`[] `e.r.a.c.b` @AccessFlag FINAL;
  `int`[] `e.r.a.c.c` @AccessFlag FINAL;
  `java.util.List` `e.r.a.c.d` @AccessFlag FINAL;
  `android.util.TimingLogger` `e.r.a.c.e` @AccessFlag FINAL;
  `e.r.a.f`[] `e.r.a.c.f` @AccessFlag FINAL;
  `float`[] `e.r.a.c.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Comparator` `@@e.r.a.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/r/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2791a0.  v0:= new `e.r.a.a`;
  #L2791a4.  call `<init>`(v0) @signature `Le/r/a/a;.<init>:()V` @kind direct;
  #L2791aa.  `@@e.r.a.c.a` @type ^`java.util.Comparator` := v0 @kind object;
  #L2791ae.  return @kind void;
}
procedure `void` `<init>`(`e.r.a.c` v6 @kind this, `int`[] v7 @kind object, `int` v8 , `e.r.a.f`[] v9 @kind object) @signature `Le/r/a/c;.<init>:([II[Le/r/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2791c0.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2791c6.  v0:= 3I;
  #L2791c8.  v0:= new `float`[v0];
  #L2791cc.  v6.`e.r.a.c.g` @type ^`float`[] := v0 @kind object;
  #L2791d0.  v0:= 0I;
  #L2791d2.  v6.`e.r.a.c.e` @type ^`android.util.TimingLogger` := v0 @kind object;
  #L2791d6.  v6.`e.r.a.c.f` @type ^`e.r.a.f`[] := v9 @kind object;
  #L2791da.  v9:= 32768I;
  #L2791e0.  v0:= new `int`[v9];
  #L2791e4.  v6.`e.r.a.c.c` @type ^`int`[] := v0 @kind object;
  #L2791e8.  v1:= 0I;
  #L2791ea.  v2:= 0I;
  #L2791ec.  v3:= length @variable v7;
  #L2791ee.  if v2 >= v3 then goto L279214;
  #L2791f2.  v3:= v7[v2];
  #L2791f6.  call temp:= `g`(v3) @signature `Le/r/a/c;.g:(I)I` @kind static;
  #L2791fc.  v3:= temp;
  #L2791fe.  v7[v2]:= v3;
  #L279202.  v4:= v0[v3];
  #L279206.  v4:= v4 + 1;
  #L27920a.  v0[v3]:= v4;
  #L27920e.  v2:= v2 + 1;
  #L279212.  goto L2791ec;
  #L279214.  v7:= 0I;
  #L279216.  v2:= 0I;
  #L279218.  if v7 >= v9 then goto L279246;
  #L27921c.  v3:= v0[v7];
  #L279220.  if v3 <= 0 then goto L279234;
  #L279224.  call temp:= `l`(v6, v7) @signature `Le/r/a/c;.l:(I)Z` @kind direct;
  #L27922a.  v3:= temp;
  #L27922c.  if v3 == 0 then goto L279234;
  #L279230.  v0[v7]:= v1;
  #L279234.  v3:= v0[v7];
  #L279238.  if v3 <= 0 then goto L279240;
  #L27923c.  v2:= v2 + 1;
  #L279240.  v7:= v7 + 1;
  #L279244.  goto L279218;
  #L279246.  v7:= new `int`[v2];
  #L27924a.  v6.`e.r.a.c.b` @type ^`int`[] := v7 @kind object;
  #L27924e.  v3:= 0I;
  #L279250.  v4:= 0I;
  #L279252.  if v3 >= v9 then goto L27926e;
  #L279256.  v5:= v0[v3];
  #L27925a.  if v5 <= 0 then goto L279268;
  #L27925e.  v5:= v4 + 1;
  #L279262.  v7[v4]:= v3;
  #L279266.  v4:= v5;
  #L279268.  v3:= v3 + 1;
  #L27926c.  goto L279252;
  #L27926e.  if v2 > v8 then goto L2792ae;
  #L279272.  v8:= new `java.util.ArrayList`;
  #L279276.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L27927c.  v6.`e.r.a.c.d` @type ^`java.util.List` := v8 @kind object;
  #L279280.  if v1 >= v2 then goto L2792ba;
  #L279284.  v8:= v7[v1];
  #L279288.  v9:= v6.`e.r.a.c.d` @type ^`java.util.List` @kind object;
  #L27928c.  v3:= new `e.r.a.g`;
  #L279290.  call temp:= `a`(v8) @signature `Le/r/a/c;.a:(I)I` @kind static;
  #L279296.  v4:= temp;
  #L279298.  v8:= v0[v8];
  #L27929c.  call `<init>`(v3, v4, v8) @signature `Le/r/a/g;.<init>:(II)V` @kind direct;
  #L2792a2.  call temp:= `add`(v9, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2792a8.  v1:= v1 + 1;
  #L2792ac.  goto L279280;
  #L2792ae.  call temp:= `h`(v6, v8) @signature `Le/r/a/c;.h:(I)Ljava/util/List;` @kind direct;
  #L2792b4.  v7:= temp @kind object;
  #L2792b6.  v6.`e.r.a.c.d` @type ^`java.util.List` := v7 @kind object;
  #L2792ba.  return @kind void;
}
procedure `int` `a`(`int` v2 ) @signature `Le/r/a/c;.a:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L278fa0.  call temp:= `k`(v2) @signature `Le/r/a/c;.k:(I)I` @kind static;
  #L278fa6.  v0:= temp;
  #L278fa8.  call temp:= `j`(v2) @signature `Le/r/a/c;.j:(I)I` @kind static;
  #L278fae.  v1:= temp;
  #L278fb0.  call temp:= `i`(v2) @signature `Le/r/a/c;.i:(I)I` @kind static;
  #L278fb6.  v2:= temp;
  #L278fb8.  call temp:= `b`(v0, v1, v2) @signature `Le/r/a/c;.b:(III)I` @kind static;
  #L278fbe.  v2:= temp;
  #L278fc0.  return v2;
}
procedure `int` `b`(`int` v2 , `int` v3 , `int` v4 ) @signature `Le/r/a/c;.b:(III)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L278fd4.  v0:= 5I;
  #L278fd6.  v1:= 8I;
  #L278fda.  call temp:= `f`(v2, v0, v1) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L278fe0.  v2:= temp;
  #L278fe2.  call temp:= `f`(v3, v0, v1) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L278fe8.  v3:= temp;
  #L278fea.  call temp:= `f`(v4, v0, v1) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L278ff0.  v4:= temp;
  #L278ff2.  call temp:= `rgb`(v2, v3, v4) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L278ff8.  v2:= temp;
  #L278ffa.  return v2;
}
procedure `java.util.List` `c`(`e.r.a.c` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Le/r/a/c;.c:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2790dc.  v0:= new `java.util.ArrayList`;
  #L2790e0.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L2790e6.  v1:= temp;
  #L2790e8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2790ee.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2790f4.  v4:= temp @kind object;
  #L2790f6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2790fc.  v1:= temp;
  #L2790fe.  if v1 == 0 then goto L27912a;
  #L279102.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L279108.  v1:= temp @kind object;
  #L27910a.  v1:= (`e.r.a.b`) v1 @kind object;
  #L27910e.  call temp:= `d`(v1) @signature `Le/r/a/b;.d:()Le/r/a/g;` @kind virtual;
  #L279114.  v1:= temp @kind object;
  #L279116.  call temp:= `n`(v3, v1) @signature `Le/r/a/c;.n:(Le/r/a/g;)Z` @kind direct;
  #L27911c.  v2:= temp;
  #L27911e.  if v2 != 0 then goto L2790f6;
  #L279122.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L279128.  goto L2790f6;
  #L27912a.  return v0 @kind object;
}
procedure `void` `e`(`int`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Le/r/a/c;.e:([IIII)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2792cc.  v0:= -2I;
  #L2792ce.  if v3 == v0 then goto L279310;
  #L2792d2.  v0:= -1I;
  #L2792d4.  if v3 == v0 then goto L2792da;
  #L2792d8.  goto L279346;
  #L2792da.  if v4 > v5 then goto L279346;
  #L2792de.  v3:= v2[v4];
  #L2792e2.  call temp:= `i`(v3) @signature `Le/r/a/c;.i:(I)I` @kind static;
  #L2792e8.  v0:= temp;
  #L2792ea.  v0:= v0 ^< 10;
  #L2792ee.  call temp:= `j`(v3) @signature `Le/r/a/c;.j:(I)I` @kind static;
  #L2792f4.  v1:= temp;
  #L2792f6.  v1:= v1 ^< 5;
  #L2792fa.  v0:= v0 ^| v1 @kind int;
  #L2792fc.  call temp:= `k`(v3) @signature `Le/r/a/c;.k:(I)I` @kind static;
  #L279302.  v3:= temp;
  #L279304.  v3:= v3 ^| v0 @kind int;
  #L279306.  v2[v4]:= v3;
  #L27930a.  v4:= v4 + 1;
  #L27930e.  goto L2792da;
  #L279310.  if v4 > v5 then goto L279346;
  #L279314.  v3:= v2[v4];
  #L279318.  call temp:= `j`(v3) @signature `Le/r/a/c;.j:(I)I` @kind static;
  #L27931e.  v0:= temp;
  #L279320.  v0:= v0 ^< 10;
  #L279324.  call temp:= `k`(v3) @signature `Le/r/a/c;.k:(I)I` @kind static;
  #L27932a.  v1:= temp;
  #L27932c.  v1:= v1 ^< 5;
  #L279330.  v0:= v0 ^| v1 @kind int;
  #L279332.  call temp:= `i`(v3) @signature `Le/r/a/c;.i:(I)I` @kind static;
  #L279338.  v3:= temp;
  #L27933a.  v3:= v3 ^| v0 @kind int;
  #L27933c.  v2[v4]:= v3;
  #L279340.  v4:= v4 + 1;
  #L279344.  goto L279310;
  #L279346.  return @kind void;
}
procedure `int` `f`(`int` v0 , `int` v1 , `int` v2 ) @signature `Le/r/a/c;.f:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L27900c.  if v2 <= v1 then goto L279018;
  #L279010.  v1:= v2 - v1 @kind int;
  #L279014.  v0:= v0 ^< v1 @kind int;
  #L279016.  goto L27901c;
  #L279018.  v1:= v1 - v2 @kind int;
  #L27901a.  v0:= v0 ^> v1 @kind int;
  #L27901c.  v1:= 1I;
  #L27901e.  v2:= v1 ^< v2 @kind int;
  #L279022.  v2:= v2 - v1 @kind int;
  #L279024.  v0:= v0 ^& v2 @kind int;
  #L279026.  return v0;
}
procedure `int` `g`(`int` v4 ) @signature `Le/r/a/c;.g:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L279038.  call temp:= `red`(v4) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L27903e.  v0:= temp;
  #L279040.  v1:= 8I;
  #L279044.  v2:= 5I;
  #L279046.  call temp:= `f`(v0, v1, v2) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L27904c.  v0:= temp;
  #L27904e.  call temp:= `green`(v4) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L279054.  v3:= temp;
  #L279056.  call temp:= `f`(v3, v1, v2) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L27905c.  v3:= temp;
  #L27905e.  call temp:= `blue`(v4) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L279064.  v4:= temp;
  #L279066.  call temp:= `f`(v4, v1, v2) @signature `Le/r/a/c;.f:(III)I` @kind static;
  #L27906c.  v4:= temp;
  #L27906e.  v0:= v0 ^< 10;
  #L279072.  v1:= v3 ^< 5;
  #L279076.  v0:= v0 ^| v1 @kind int;
  #L279078.  v4:= v4 ^| v0 @kind int;
  #L27907a.  return v4;
}
procedure `java.util.List` `h`(`e.r.a.c` v4 @kind this, `int` v5 ) @signature `Le/r/a/c;.h:(I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L279154.  v0:= new `java.util.PriorityQueue`;
  #L279158.  v1:= `@@e.r.a.c.a` @type ^`java.util.Comparator` @kind object;
  #L27915c.  call `<init>`(v0, v5, v1) @signature `Ljava/util/PriorityQueue;.<init>:(ILjava/util/Comparator;)V` @kind direct;
  #L279162.  v1:= new `e.r.a.b`;
  #L279166.  v2:= v4.`e.r.a.c.b` @type ^`int`[] @kind object;
  #L27916a.  v2:= length @variable v2;
  #L27916c.  v2:= v2 + -1;
  #L279170.  v3:= 0I;
  #L279172.  call `<init>`(v1, v4, v3, v2) @signature `Le/r/a/b;.<init>:(Le/r/a/c;II)V` @kind direct;
  #L279178.  call temp:= `offer`(v0, v1) @signature `Ljava/util/PriorityQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L27917e.  call `o`(v4, v0, v5) @signature `Le/r/a/c;.o:(Ljava/util/PriorityQueue;I)V` @kind direct;
  #L279184.  call temp:= `c`(v4, v0) @signature `Le/r/a/c;.c:(Ljava/util/Collection;)Ljava/util/List;` @kind direct;
  #L27918a.  v5:= temp @kind object;
  #L27918c.  return v5 @kind object;
}
procedure `int` `i`(`int` v0 ) @signature `Le/r/a/c;.i:(I)I` @AccessFlag STATIC {
    temp;

  #L27908c.  v0:= v0 ^& 31;
  #L279090.  return v0;
}
procedure `int` `j`(`int` v0 ) @signature `Le/r/a/c;.j:(I)I` @AccessFlag STATIC {
    temp;

  #L2790a4.  v0:= v0 ^> 5;
  #L2790a8.  v0:= v0 ^& 31;
  #L2790ac.  return v0;
}
procedure `int` `k`(`int` v0 ) @signature `Le/r/a/c;.k:(I)I` @AccessFlag STATIC {
    temp;

  #L2790c0.  v0:= v0 ^> 10;
  #L2790c4.  v0:= v0 ^& 31;
  #L2790c8.  return v0;
}
procedure `boolean` `l`(`e.r.a.c` v1 @kind this, `int` v2 ) @signature `Le/r/a/c;.l:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L278f28.  call temp:= `a`(v2) @signature `Le/r/a/c;.a:(I)I` @kind static;
  #L278f2e.  v2:= temp;
  #L278f30.  v0:= v1.`e.r.a.c.g` @type ^`float`[] @kind object;
  #L278f34.  call `g`(v2, v0) @signature `Landroidx/core/graphics/d;.g:(I[F)V` @kind static;
  #L278f3a.  v0:= v1.`e.r.a.c.g` @type ^`float`[] @kind object;
  #L278f3e.  call temp:= `m`(v1, v2, v0) @signature `Le/r/a/c;.m:(I[F)Z` @kind direct;
  #L278f44.  v2:= temp;
  #L278f46.  return v2;
}
procedure `boolean` `m`(`e.r.a.c` v4 @kind this, `int` v5 , `float`[] v6 @kind object) @signature `Le/r/a/c;.m:(I[F)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L278f58.  v0:= v4.`e.r.a.c.f` @type ^`e.r.a.f`[] @kind object;
  #L278f5c.  v1:= 0I;
  #L278f5e.  if v0 == 0 then goto L278f8e;
  #L278f62.  v2:= length @variable v0;
  #L278f64.  if v2 <= 0 then goto L278f8e;
  #L278f68.  v0:= length @variable v0;
  #L278f6a.  v2:= 0I;
  #L278f6c.  if v2 >= v0 then goto L278f8e;
  #L278f70.  v3:= v4.`e.r.a.c.f` @type ^`e.r.a.f`[] @kind object;
  #L278f74.  v3:= v3[v2] @kind object;
  #L278f78.  call temp:= `a`(v3, v5, v6) @signature `Le/r/a/f;.a:(I[F)Z` @kind interface;
  #L278f7e.  v3:= temp;
  #L278f80.  if v3 != 0 then goto L278f88;
  #L278f84.  v5:= 1I;
  #L278f86.  return v5;
  #L278f88.  v2:= v2 + 1;
  #L278f8c.  goto L278f6c;
  #L278f8e.  return v1;
}
procedure `boolean` `n`(`e.r.a.c` v1 @kind this, `e.r.a.g` v2 @kind object) @signature `Le/r/a/c;.n:(Le/r/a/g;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L278efc.  call temp:= `e`(v2) @signature `Le/r/a/g;.e:()I` @kind virtual;
  #L278f02.  v0:= temp;
  #L278f04.  call temp:= `c`(v2) @signature `Le/r/a/g;.c:()[F` @kind virtual;
  #L278f0a.  v2:= temp @kind object;
  #L278f0c.  call temp:= `m`(v1, v0, v2) @signature `Le/r/a/c;.m:(I[F)Z` @kind direct;
  #L278f12.  v2:= temp;
  #L278f14.  return v2;
}
procedure `void` `o`(`e.r.a.c` v2 @kind this, `java.util.PriorityQueue` v3 @kind object, `int` v4 ) @signature `Le/r/a/c;.o:(Ljava/util/PriorityQueue;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L279358.  call temp:= `size`(v3) @signature `Ljava/util/PriorityQueue;.size:()I` @kind virtual;
  #L27935e.  v0:= temp;
  #L279360.  if v0 >= v4 then goto L279396;
  #L279364.  call temp:= `poll`(v3) @signature `Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L27936a.  v0:= temp @kind object;
  #L27936c.  v0:= (`e.r.a.b`) v0 @kind object;
  #L279370.  if v0 == 0 then goto L279396;
  #L279374.  call temp:= `a`(v0) @signature `Le/r/a/b;.a:()Z` @kind virtual;
  #L27937a.  v1:= temp;
  #L27937c.  if v1 == 0 then goto L279396;
  #L279380.  call temp:= `h`(v0) @signature `Le/r/a/b;.h:()Le/r/a/b;` @kind virtual;
  #L279386.  v1:= temp @kind object;
  #L279388.  call temp:= `offer`(v3, v1) @signature `Ljava/util/PriorityQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L27938e.  call temp:= `offer`(v3, v0) @signature `Ljava/util/PriorityQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L279394.  goto L279358;
  #L279396.  return @kind void;
}
procedure `java.util.List` `d`(`e.r.a.c` v1 @kind this) @signature `Le/r/a/c;.d:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L27913c.  v0:= v1.`e.r.a.c.d` @type ^`java.util.List` @kind object;
  #L279140.  return v0 @kind object;
}
