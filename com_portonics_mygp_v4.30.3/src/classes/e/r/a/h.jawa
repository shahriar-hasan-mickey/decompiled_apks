record `e.r.a.h` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `e.r.a.h.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `e.r.a.h.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `e.r.a.h.d` @AccessFlag PRIVATE_FINAL;
  `android.util.SparseBooleanArray` `e.r.a.h.e` @AccessFlag PRIVATE_FINAL;
  `e.r.a.g` `e.r.a.h.f` @AccessFlag PRIVATE_FINAL;
}
global `e.r.a.f` `@@e.r.a.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/r/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L279e08.  v0:= new `e.r.a.d`;
  #L279e0c.  call `<init>`(v0) @signature `Le/r/a/d;.<init>:()V` @kind direct;
  #L279e12.  `@@e.r.a.h.a` @type ^`e.r.a.f` := v0 @kind object;
  #L279e16.  return @kind void;
}
procedure `void` `<init>`(`e.r.a.h` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Le/r/a/h;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L279e28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L279e2e.  v0.`e.r.a.h.b` @type ^`java.util.List` := v1 @kind object;
  #L279e32.  v0.`e.r.a.h.c` @type ^`java.util.List` := v2 @kind object;
  #L279e36.  v1:= new `android.util.SparseBooleanArray`;
  #L279e3a.  call `<init>`(v1) @signature `Landroid/util/SparseBooleanArray;.<init>:()V` @kind direct;
  #L279e40.  v0.`e.r.a.h.e` @type ^`android.util.SparseBooleanArray` := v1 @kind object;
  #L279e44.  v1:= new `androidx.collection.a`;
  #L279e48.  call `<init>`(v1) @signature `Landroidx/collection/a;.<init>:()V` @kind direct;
  #L279e4e.  v0.`e.r.a.h.d` @type ^`java.util.Map` := v1 @kind object;
  #L279e52.  call temp:= `a`(v0) @signature `Le/r/a/h;.a:()Le/r/a/g;` @kind direct;
  #L279e58.  v1:= temp @kind object;
  #L279e5a.  v0.`e.r.a.h.f` @type ^`e.r.a.g` := v1 @kind object;
  #L279e5e.  return @kind void;
}
procedure `e.r.a.g` `a`(`e.r.a.h` v6 @kind this) @signature `Le/r/a/h;.a:()Le/r/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L279b88.  v0:= v6.`e.r.a.h.b` @type ^`java.util.List` @kind object;
  #L279b8c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L279b92.  v0:= temp;
  #L279b94.  v1:= -2147483648I;
  #L279b98.  v2:= 0I;
  #L279b9a.  v3:= 0I;
  #L279b9c.  if v3 >= v0 then goto L279bcc;
  #L279ba0.  v4:= v6.`e.r.a.h.b` @type ^`java.util.List` @kind object;
  #L279ba4.  call temp:= `get`(v4, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L279baa.  v4:= temp @kind object;
  #L279bac.  v4:= (`e.r.a.g`) v4 @kind object;
  #L279bb0.  call temp:= `d`(v4) @signature `Le/r/a/g;.d:()I` @kind virtual;
  #L279bb6.  v5:= temp;
  #L279bb8.  if v5 <= v1 then goto L279bc6;
  #L279bbc.  call temp:= `d`(v4) @signature `Le/r/a/g;.d:()I` @kind virtual;
  #L279bc2.  v1:= temp;
  #L279bc4.  v2:= v4 @kind object;
  #L279bc6.  v3:= v3 + 1;
  #L279bca.  goto L279b9c;
  #L279bcc.  return v2 @kind object;
}
procedure `float` `c`(`e.r.a.h` v7 @kind this, `e.r.a.g` v8 @kind object, `e.r.a.i` v9 @kind object) @signature `Le/r/a/h;.c:(Le/r/a/g;Le/r/a/i;)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L279d10.  call temp:= `c`(v8) @signature `Le/r/a/g;.c:()[F` @kind virtual;
  #L279d16.  v0:= temp @kind object;
  #L279d18.  v1:= v7.`e.r.a.h.f` @type ^`e.r.a.g` @kind object;
  #L279d1c.  v2:= 1I;
  #L279d1e.  if v1 == 0 then goto L279d2c;
  #L279d22.  call temp:= `d`(v1) @signature `Le/r/a/g;.d:()I` @kind virtual;
  #L279d28.  v1:= temp;
  #L279d2a.  goto L279d2e;
  #L279d2c.  v1:= 1I;
  #L279d2e.  call temp:= `g`(v9) @signature `Le/r/a/i;.g:()F` @kind virtual;
  #L279d34.  v3:= temp;
  #L279d36.  v4:= 1.0F;
  #L279d3a.  v5:= 0I;
  #L279d3c.  v3:= fcmpl(v3, v5);
  #L279d40.  if v3 <= 0 then goto L279d6c;
  #L279d44.  call temp:= `g`(v9) @signature `Le/r/a/i;.g:()F` @kind virtual;
  #L279d4a.  v3:= temp;
  #L279d4c.  v2:= v0[v2];
  #L279d50.  call temp:= `i`(v9) @signature `Le/r/a/i;.i:()F` @kind virtual;
  #L279d56.  v6:= temp;
  #L279d58.  v2:= v2 - v6 @kind float;
  #L279d5a.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L279d60.  v2:= temp;
  #L279d62.  v2:= v4 - v2 @kind float;
  #L279d66.  v3:= v3 * v2 @kind float;
  #L279d6a.  goto L279d6e;
  #L279d6c.  v3:= 0I;
  #L279d6e.  call temp:= `a`(v9) @signature `Le/r/a/i;.a:()F` @kind virtual;
  #L279d74.  v2:= temp;
  #L279d76.  v2:= fcmpl(v2, v5);
  #L279d7a.  if v2 <= 0 then goto L279da6;
  #L279d7e.  call temp:= `a`(v9) @signature `Le/r/a/i;.a:()F` @kind virtual;
  #L279d84.  v2:= temp;
  #L279d86.  v6:= 2I;
  #L279d88.  v0:= v0[v6];
  #L279d8c.  call temp:= `h`(v9) @signature `Le/r/a/i;.h:()F` @kind virtual;
  #L279d92.  v6:= temp;
  #L279d94.  v0:= v0 - v6 @kind float;
  #L279d96.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L279d9c.  v0:= temp;
  #L279d9e.  v4:= v4 - v0 @kind float;
  #L279da0.  v2:= v2 * v4 @kind float;
  #L279da4.  goto L279da8;
  #L279da6.  v2:= 0I;
  #L279da8.  call temp:= `f`(v9) @signature `Le/r/a/i;.f:()F` @kind virtual;
  #L279dae.  v0:= temp;
  #L279db0.  v0:= fcmpl(v0, v5);
  #L279db4.  if v0 <= 0 then goto L279dd2;
  #L279db8.  call temp:= `f`(v9) @signature `Le/r/a/i;.f:()F` @kind virtual;
  #L279dbe.  v9:= temp;
  #L279dc0.  call temp:= `d`(v8) @signature `Le/r/a/g;.d:()I` @kind virtual;
  #L279dc6.  v8:= temp;
  #L279dc8.  v8:= (`float`) v8 @kind i2f;
  #L279dca.  v0:= (`float`) v1 @kind i2f;
  #L279dcc.  v8:= v8 / v0 @kind float;
  #L279dce.  v5:= v9 * v8 @kind float;
  #L279dd2.  v3:= v3 + v2 @kind float;
  #L279dd4.  v3:= v3 + v5 @kind float;
  #L279dd6.  return v3;
}
procedure `e.r.a.g` `d`(`e.r.a.h` v3 @kind this, `e.r.a.i` v4 @kind object) @signature `Le/r/a/h;.d:(Le/r/a/i;)Le/r/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L279be0.  call temp:= `e`(v3, v4) @signature `Le/r/a/h;.e:(Le/r/a/i;)Le/r/a/g;` @kind direct;
  #L279be6.  v0:= temp @kind object;
  #L279be8.  if v0 == 0 then goto L279c0c;
  #L279bec.  call temp:= `j`(v4) @signature `Le/r/a/i;.j:()Z` @kind virtual;
  #L279bf2.  v4:= temp;
  #L279bf4.  if v4 == 0 then goto L279c0c;
  #L279bf8.  v4:= v3.`e.r.a.h.e` @type ^`android.util.SparseBooleanArray` @kind object;
  #L279bfc.  call temp:= `e`(v0) @signature `Le/r/a/g;.e:()I` @kind virtual;
  #L279c02.  v1:= temp;
  #L279c04.  v2:= 1I;
  #L279c06.  call `append`(v4, v1, v2) @signature `Landroid/util/SparseBooleanArray;.append:(IZ)V` @kind virtual;
  #L279c0c.  return v0 @kind object;
}
procedure `e.r.a.g` `e`(`e.r.a.h` v7 @kind this, `e.r.a.i` v8 @kind object) @signature `Le/r/a/h;.e:(Le/r/a/i;)Le/r/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L279c20.  v0:= v7.`e.r.a.h.b` @type ^`java.util.List` @kind object;
  #L279c24.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L279c2a.  v0:= temp;
  #L279c2c.  v1:= 0I;
  #L279c2e.  v2:= 0I;
  #L279c30.  v3:= 0I;
  #L279c32.  if v3 >= v0 then goto L279c70;
  #L279c36.  v4:= v7.`e.r.a.h.b` @type ^`java.util.List` @kind object;
  #L279c3a.  call temp:= `get`(v4, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L279c40.  v4:= temp @kind object;
  #L279c42.  v4:= (`e.r.a.g`) v4 @kind object;
  #L279c46.  call temp:= `g`(v7, v4, v8) @signature `Le/r/a/h;.g:(Le/r/a/g;Le/r/a/i;)Z` @kind direct;
  #L279c4c.  v5:= temp;
  #L279c4e.  if v5 == 0 then goto L279c6a;
  #L279c52.  call temp:= `c`(v7, v4, v8) @signature `Le/r/a/h;.c:(Le/r/a/g;Le/r/a/i;)F` @kind direct;
  #L279c58.  v5:= temp;
  #L279c5a.  if v2 == 0 then goto L279c66;
  #L279c5e.  v6:= fcmpl(v5, v1);
  #L279c62.  if v6 <= 0 then goto L279c6a;
  #L279c66.  v2:= v4 @kind object;
  #L279c68.  v1:= v5;
  #L279c6a.  v3:= v3 + 1;
  #L279c6e.  goto L279c32;
  #L279c70.  return v2 @kind object;
}
procedure `boolean` `g`(`e.r.a.h` v5 @kind this, `e.r.a.g` v6 @kind object, `e.r.a.i` v7 @kind object) @signature `Le/r/a/h;.g:(Le/r/a/g;Le/r/a/i;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L279c84.  call temp:= `c`(v6) @signature `Le/r/a/g;.c:()[F` @kind virtual;
  #L279c8a.  v0:= temp @kind object;
  #L279c8c.  v1:= 1I;
  #L279c8e.  v2:= v0[v1];
  #L279c92.  call temp:= `e`(v7) @signature `Le/r/a/i;.e:()F` @kind virtual;
  #L279c98.  v3:= temp;
  #L279c9a.  v2:= fcmpl(v2, v3);
  #L279c9e.  if v2 < 0 then goto L279cfa;
  #L279ca2.  v2:= v0[v1];
  #L279ca6.  call temp:= `c`(v7) @signature `Le/r/a/i;.c:()F` @kind virtual;
  #L279cac.  v3:= temp;
  #L279cae.  v2:= fcmpg(v2, v3);
  #L279cb2.  if v2 > 0 then goto L279cfa;
  #L279cb6.  v2:= 2I;
  #L279cb8.  v3:= v0[v2];
  #L279cbc.  call temp:= `d`(v7) @signature `Le/r/a/i;.d:()F` @kind virtual;
  #L279cc2.  v4:= temp;
  #L279cc4.  v3:= fcmpl(v3, v4);
  #L279cc8.  if v3 < 0 then goto L279cfa;
  #L279ccc.  v0:= v0[v2];
  #L279cd0.  call temp:= `b`(v7) @signature `Le/r/a/i;.b:()F` @kind virtual;
  #L279cd6.  v7:= temp;
  #L279cd8.  v7:= fcmpg(v0, v7);
  #L279cdc.  if v7 > 0 then goto L279cfa;
  #L279ce0.  v7:= v5.`e.r.a.h.e` @type ^`android.util.SparseBooleanArray` @kind object;
  #L279ce4.  call temp:= `e`(v6) @signature `Le/r/a/g;.e:()I` @kind virtual;
  #L279cea.  v6:= temp;
  #L279cec.  call temp:= `get`(v7, v6) @signature `Landroid/util/SparseBooleanArray;.get:(I)Z` @kind virtual;
  #L279cf2.  v6:= temp;
  #L279cf4.  if v6 != 0 then goto L279cfa;
  #L279cf8.  goto L279cfc;
  #L279cfa.  v1:= 0I;
  #L279cfc.  return v1;
}
procedure `void` `b`(`e.r.a.h` v5 @kind this) @signature `Le/r/a/h;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L279e70.  v0:= v5.`e.r.a.h.c` @type ^`java.util.List` @kind object;
  #L279e74.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L279e7a.  v0:= temp;
  #L279e7c.  v1:= 0I;
  #L279e7e.  if v1 >= v0 then goto L279eb0;
  #L279e82.  v2:= v5.`e.r.a.h.c` @type ^`java.util.List` @kind object;
  #L279e86.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L279e8c.  v2:= temp @kind object;
  #L279e8e.  v2:= (`e.r.a.i`) v2 @kind object;
  #L279e92.  call `k`(v2) @signature `Le/r/a/i;.k:()V` @kind virtual;
  #L279e98.  v3:= v5.`e.r.a.h.d` @type ^`java.util.Map` @kind object;
  #L279e9c.  call temp:= `d`(v5, v2) @signature `Le/r/a/h;.d:(Le/r/a/i;)Le/r/a/g;` @kind direct;
  #L279ea2.  v4:= temp @kind object;
  #L279ea4.  call temp:= `put`(v3, v2, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L279eaa.  v1:= v1 + 1;
  #L279eae.  goto L279e7e;
  #L279eb0.  v0:= v5.`e.r.a.h.e` @type ^`android.util.SparseBooleanArray` @kind object;
  #L279eb4.  call `clear`(v0) @signature `Landroid/util/SparseBooleanArray;.clear:()V` @kind virtual;
  #L279eba.  return @kind void;
}
procedure `java.util.List` `f`(`e.r.a.h` v1 @kind this) @signature `Le/r/a/h;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279de8.  v0:= v1.`e.r.a.h.b` @type ^`java.util.List` @kind object;
  #L279dec.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L279df2.  v0:= temp @kind object;
  #L279df4.  return v0 @kind object;
}
