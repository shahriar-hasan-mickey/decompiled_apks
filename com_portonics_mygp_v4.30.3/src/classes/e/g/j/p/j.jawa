record `e.g.j.p.j` @kind class @AccessFlag FINAL {
  `int`[] `e.g.j.p.j.a` @AccessFlag FINAL;
  `float`[] `e.g.j.p.j.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.g.j.p.j` v3 @kind this, `int` v4 , `int` v5 ) @signature `Le/g/j/p/j;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2166ac.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2166b2.  v0:= 2I;
  #L2166b4.  v1:= new `int`[v0];
  #L2166b8.  v2:= 0I;
  #L2166ba.  v1[v2]:= v4;
  #L2166be.  v4:= 1I;
  #L2166c0.  v1[v4]:= v5;
  #L2166c4.  v3.`e.g.j.p.j.a` @type ^`int`[] := v1 @kind object;
  #L2166c8.  v4:= new `float`[v0];
  #L2166cc.  goto L2166d8;
  #L2166d2.  v3.`e.g.j.p.j.b` @type ^`float`[] := v4 @kind object;
  #L2166d6.  return @kind void;
  #L2166d8.  v4:= (0I, 1065353216I) @kind object;
  #L2166e7.  goto L2166d2;
}
procedure `void` `<init>`(`e.g.j.p.j` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Le/g/j/p/j;.<init>:(III)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2166f8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2166fe.  v0:= 3I;
  #L216700.  v1:= new `int`[v0];
  #L216704.  v2:= 0I;
  #L216706.  v1[v2]:= v4;
  #L21670a.  v4:= 1I;
  #L21670c.  v1[v4]:= v5;
  #L216710.  v4:= 2I;
  #L216712.  v1[v4]:= v6;
  #L216716.  v3.`e.g.j.p.j.a` @type ^`int`[] := v1 @kind object;
  #L21671a.  v4:= new `float`[v0];
  #L21671e.  goto L21672c;
  #L216724.  v3.`e.g.j.p.j.b` @type ^`float`[] := v4 @kind object;
  #L216728.  return @kind void;
  #L21672a.  
  #L21672c.  v4:= (0I, 1056964608I, 1065353216I) @kind object;
  #L21673f.  goto L216724;
}
procedure `void` `<init>`(`e.g.j.p.j` v4 @kind this, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object) @signature `Le/g/j/p/j;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L216750.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L216756.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21675c.  v0:= temp;
  #L21675e.  v1:= new `int`[v0];
  #L216762.  v4.`e.g.j.p.j.a` @type ^`int`[] := v1 @kind object;
  #L216766.  v1:= new `float`[v0];
  #L21676a.  v4.`e.g.j.p.j.b` @type ^`float`[] := v1 @kind object;
  #L21676e.  v1:= 0I;
  #L216770.  if v1 >= v0 then goto L2167b2;
  #L216774.  v2:= v4.`e.g.j.p.j.a` @type ^`int`[] @kind object;
  #L216778.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21677e.  v3:= temp @kind object;
  #L216780.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L216784.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L21678a.  v3:= temp;
  #L21678c.  v2[v1]:= v3;
  #L216790.  v2:= v4.`e.g.j.p.j.b` @type ^`float`[] @kind object;
  #L216794.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21679a.  v3:= temp @kind object;
  #L21679c.  v3:= (`java.lang.Float`) v3 @kind object;
  #L2167a0.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2167a6.  v3:= temp;
  #L2167a8.  v2[v1]:= v3;
  #L2167ac.  v1:= v1 + 1;
  #L2167b0.  goto L216770;
  #L2167b2.  return @kind void;
}
