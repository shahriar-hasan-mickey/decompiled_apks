record `e.g.j.p.a` @kind class @AccessFlag  {
  `float` `e.g.j.p.a.a` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.b` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.c` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.d` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.e` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.f` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.g` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.h` @AccessFlag PRIVATE_FINAL;
  `float` `e.g.j.p.a.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.g.j.p.a` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 ) @signature `Le/g/j/p/a;.<init>:(FFFFFFFFF)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21548c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L215492.  v0.`e.g.j.p.a.a` @type ^`float` := v1;
  #L215496.  v0.`e.g.j.p.a.b` @type ^`float` := v2;
  #L21549a.  v0.`e.g.j.p.a.c` @type ^`float` := v3;
  #L21549e.  v0.`e.g.j.p.a.d` @type ^`float` := v4;
  #L2154a2.  v0.`e.g.j.p.a.e` @type ^`float` := v5;
  #L2154a6.  v0.`e.g.j.p.a.f` @type ^`float` := v6;
  #L2154aa.  v0.`e.g.j.p.a.g` @type ^`float` := v7;
  #L2154ae.  v0.`e.g.j.p.a.h` @type ^`float` := v8;
  #L2154b2.  v0.`e.g.j.p.a.i` @type ^`float` := v9;
  #L2154b6.  return @kind void;
}
procedure `e.g.j.p.a` `b`(`float` v12 , `float` v13 , `float` v14 ) @signature `Le/g/j/p/a;.b:(FFF)Le/g/j/p/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L214710.  v0:= 1000.0F;
  #L214714.  v1:= 0I;
  #L214716.  v2:= 100.0F;
  #L21471a.  v3:= 0I;
  #L21471c.  v4:= v3 @kind object;
  #L21471e.  v2:= 1000.0F;
  #L214722.  v3:= 100.0F;
  #L214726.  v5:= 0I;
  #L214728.  v6:= v5 - v3 @kind float;
  #L21472c.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L214732.  v6:= temp;
  #L214734.  v7:= 1008981770I;
  #L21473a.  v6:= fcmpl(v6, v7);
  #L21473e.  if v6 <= 0 then goto L2147dc;
  #L214742.  v6:= v3 - v5 @kind float;
  #L214746.  v7:= 2.0F;
  #L21474a.  v6:= v6 / v7 @kind float;
  #L21474c.  v6:= v6 + v5 @kind float;
  #L21474e.  call temp:= `e`(v6, v13, v12) @signature `Le/g/j/p/a;.e:(FFF)Le/g/j/p/a;` @kind static;
  #L214754.  v7:= temp @kind object;
  #L214756.  call temp:= `p`(v7) @signature `Le/g/j/p/a;.p:()I` @kind virtual;
  #L21475c.  v7:= temp;
  #L21475e.  call temp:= `b`(v7) @signature `Le/g/j/p/b;.b:(I)F` @kind static;
  #L214764.  v8:= temp;
  #L214766.  v9:= v14 - v8 @kind float;
  #L21476a.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L214770.  v9:= temp;
  #L214772.  v10:= 1045220557I;
  #L214778.  v10:= fcmpg(v9, v10);
  #L21477c.  if v10 >= 0 then goto L2147ba;
  #L214780.  call temp:= `c`(v7) @signature `Le/g/j/p/a;.c:(I)Le/g/j/p/a;` @kind static;
  #L214786.  v7:= temp @kind object;
  #L214788.  call temp:= `k`(v7) @signature `Le/g/j/p/a;.k:()F` @kind virtual;
  #L21478e.  v10:= temp;
  #L214790.  call temp:= `i`(v7) @signature `Le/g/j/p/a;.i:()F` @kind virtual;
  #L214796.  v11:= temp;
  #L214798.  call temp:= `e`(v10, v11, v12) @signature `Le/g/j/p/a;.e:(FFF)Le/g/j/p/a;` @kind static;
  #L21479e.  v10:= temp @kind object;
  #L2147a0.  call temp:= `a`(v7, v10) @signature `Le/g/j/p/a;.a:(Le/g/j/p/a;)F` @kind virtual;
  #L2147a6.  v10:= temp;
  #L2147a8.  v11:= 1.0F;
  #L2147ac.  v11:= fcmpg(v10, v11);
  #L2147b0.  if v11 > 0 then goto L2147ba;
  #L2147b4.  v4:= v7 @kind object;
  #L2147b6.  v0:= v9;
  #L2147b8.  v2:= v10;
  #L2147ba.  v7:= fcmpl(v0, v1);
  #L2147be.  if v7 != 0 then goto L2147cc;
  #L2147c2.  v7:= fcmpl(v2, v1);
  #L2147c6.  if v7 != 0 then goto L2147cc;
  #L2147ca.  goto L2147dc;
  #L2147cc.  v7:= fcmpg(v8, v14);
  #L2147d0.  if v7 >= 0 then goto L2147d8;
  #L2147d4.  v5:= v6;
  #L2147d6.  goto L214728;
  #L2147d8.  v3:= v6;
  #L2147da.  goto L214728;
  #L2147dc.  return v4 @kind object;
}
procedure `e.g.j.p.a` `c`(`int` v1 ) @signature `Le/g/j/p/a;.c:(I)Le/g/j/p/a;` @AccessFlag STATIC {
    temp;
    v0;

  #L2147f0.  v0:= `@@e.g.j.p.x.a` @type ^`e.g.j.p.x` @kind object;
  #L2147f4.  call temp:= `d`(v1, v0) @signature `Le/g/j/p/a;.d:(ILe/g/j/p/x;)Le/g/j/p/a;` @kind static;
  #L2147fa.  v1:= temp @kind object;
  #L2147fc.  return v1 @kind object;
}
procedure `e.g.j.p.a` `d`(`int` v23 , `e.g.j.p.x` v24 @kind object) @signature `Le/g/j/p/a;.d:(ILe/g/j/p/x;)Le/g/j/p/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L214810.  call temp:= `f`(v23) @signature `Le/g/j/p/b;.f:(I)[F` @kind static;
  #L214816.  v0:= temp @kind object;
  #L214818.  v1:= `@@e.g.j.p.b.a` @type ^`float`[][] @kind object;
  #L21481c.  v2:= 0I;
  #L21481e.  v3:= v0[v2];
  #L214822.  v4:= v1[v2] @kind object;
  #L214826.  v4:= v4[v2];
  #L21482a.  v3:= v3 * v4 @kind float;
  #L21482e.  v4:= 1I;
  #L214830.  v5:= v0[v4];
  #L214834.  v6:= v1[v2] @kind object;
  #L214838.  v6:= v6[v4];
  #L21483c.  v5:= v5 * v6 @kind float;
  #L214840.  v3:= v3 + v5 @kind float;
  #L214842.  v5:= 2I;
  #L214844.  v6:= v0[v5];
  #L214848.  v7:= v1[v2] @kind object;
  #L21484c.  v7:= v7[v5];
  #L214850.  v6:= v6 * v7 @kind float;
  #L214854.  v3:= v3 + v6 @kind float;
  #L214856.  v6:= v0[v2];
  #L21485a.  v7:= v1[v4] @kind object;
  #L21485e.  v7:= v7[v2];
  #L214862.  v6:= v6 * v7 @kind float;
  #L214866.  v7:= v0[v4];
  #L21486a.  v8:= v1[v4] @kind object;
  #L21486e.  v8:= v8[v4];
  #L214872.  v7:= v7 * v8 @kind float;
  #L214876.  v6:= v6 + v7 @kind float;
  #L214878.  v7:= v0[v5];
  #L21487c.  v8:= v1[v4] @kind object;
  #L214880.  v8:= v8[v5];
  #L214884.  v7:= v7 * v8 @kind float;
  #L214888.  v6:= v6 + v7 @kind float;
  #L21488a.  v7:= v0[v2];
  #L21488e.  v8:= v1[v5] @kind object;
  #L214892.  v8:= v8[v2];
  #L214896.  v7:= v7 * v8 @kind float;
  #L21489a.  v8:= v0[v4];
  #L21489e.  v9:= v1[v5] @kind object;
  #L2148a2.  v9:= v9[v4];
  #L2148a6.  v8:= v8 * v9 @kind float;
  #L2148aa.  v7:= v7 + v8 @kind float;
  #L2148ac.  v0:= v0[v5];
  #L2148b0.  v1:= v1[v5] @kind object;
  #L2148b4.  v1:= v1[v5];
  #L2148b8.  v0:= v0 * v1 @kind float;
  #L2148bc.  v7:= v7 + v0 @kind float;
  #L2148be.  call temp:= `i`(v24) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2148c4.  v0:= temp @kind object;
  #L2148c6.  v0:= v0[v2];
  #L2148ca.  v0:= v0 * v3 @kind float;
  #L2148ce.  call temp:= `i`(v24) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2148d4.  v1:= temp @kind object;
  #L2148d6.  v1:= v1[v4];
  #L2148da.  v1:= v1 * v6 @kind float;
  #L2148de.  call temp:= `i`(v24) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2148e4.  v2:= temp @kind object;
  #L2148e6.  v2:= v2[v5];
  #L2148ea.  v2:= v2 * v7 @kind float;
  #L2148ee.  call temp:= `c`(v24) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L2148f4.  v3:= temp;
  #L2148f6.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2148fc.  v4:= temp;
  #L2148fe.  v3:= v3 * v4 @kind float;
  #L214902.  v3:= (`double`) v3 @kind f2d;
  #L214904.  v5:= 100.0D;
  #L214908.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L21490e.  v3:= v3 / v5 @kind double;
  #L214910.  v7:= 0.42D;
  #L21491a.  call temp:= `pow`(v3, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214920.  v3:= temp @kind wide;
  #L214922.  v3:= (`float`) v3 @kind d2f;
  #L214924.  call temp:= `c`(v24) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L21492a.  v4:= temp;
  #L21492c.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L214932.  v9:= temp;
  #L214934.  v4:= v4 * v9 @kind float;
  #L214938.  v9:= (`double`) v4 @kind f2d;
  #L21493a.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214940.  v9:= v9 / v5 @kind double;
  #L214942.  call temp:= `pow`(v9, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214948.  v9:= temp @kind wide;
  #L21494a.  v4:= (`float`) v9 @kind d2f;
  #L21494c.  call temp:= `c`(v24) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L214952.  v9:= temp;
  #L214954.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L21495a.  v10:= temp;
  #L21495c.  v9:= v9 * v10 @kind float;
  #L214960.  v9:= (`double`) v9 @kind f2d;
  #L214962.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214968.  v9:= v9 / v5 @kind double;
  #L21496a.  call temp:= `pow`(v9, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214970.  v7:= temp @kind wide;
  #L214972.  v7:= (`float`) v7 @kind d2f;
  #L214974.  call temp:= `signum`(v0) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L21497a.  v0:= temp;
  #L21497c.  v8:= 400.0F;
  #L214980.  v0:= v0 * v8 @kind float;
  #L214984.  v0:= v0 * v3 @kind float;
  #L214988.  v9:= 1104742973I;
  #L21498e.  v3:= v3 + v9 @kind float;
  #L214990.  v0:= v0 / v3 @kind float;
  #L214992.  call temp:= `signum`(v1) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L214998.  v1:= temp;
  #L21499a.  v1:= v1 * v8 @kind float;
  #L21499e.  v1:= v1 * v4 @kind float;
  #L2149a2.  v4:= v4 + v9 @kind float;
  #L2149a4.  v1:= v1 / v4 @kind float;
  #L2149a6.  call temp:= `signum`(v2) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L2149ac.  v2:= temp;
  #L2149ae.  v2:= v2 * v8 @kind float;
  #L2149b2.  v2:= v2 * v7 @kind float;
  #L2149b6.  v7:= v7 + v9 @kind float;
  #L2149b8.  v2:= v2 / v7 @kind float;
  #L2149ba.  v3:= (`double`) v0 @kind f2d;
  #L2149bc.  v7:= 11.0D;
  #L2149c0.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2149c6.  v3:= v3 * v7 @kind double;
  #L2149ca.  v7:= (`double`) v1 @kind f2d;
  #L2149cc.  v9:= -12.0D;
  #L2149d0.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2149d6.  v7:= v7 * v9 @kind double;
  #L2149da.  v3:= v3 + v7 @kind double;
  #L2149dc.  v7:= (`double`) v2 @kind f2d;
  #L2149de.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2149e4.  v3:= v3 + v7 @kind double;
  #L2149e6.  v3:= (`float`) v3 @kind d2f;
  #L2149e8.  v4:= 11.0F;
  #L2149ec.  v3:= v3 / v4 @kind float;
  #L2149ee.  v4:= v0 + v1 @kind float;
  #L2149f2.  v9:= (`double`) v4 @kind f2d;
  #L2149f4.  v11:= 2.0D;
  #L2149f8.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2149fe.  v7:= v7 * v11 @kind double;
  #L214a02.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214a08.  v9:= v9 - v7 @kind double;
  #L214a0a.  v4:= (`float`) v9 @kind d2f;
  #L214a0c.  v7:= 9.0F;
  #L214a10.  v4:= v4 / v7 @kind float;
  #L214a12.  v7:= 20.0F;
  #L214a16.  v8:= v0 * v7 @kind float;
  #L214a1a.  v1:= v1 * v7 @kind float;
  #L214a1e.  v8:= v8 + v1 @kind float;
  #L214a20.  v9:= 21.0F;
  #L214a24.  v9:= v9 * v2 @kind float;
  #L214a28.  v8:= v8 + v9 @kind float;
  #L214a2a.  v8:= v8 / v7 @kind float;
  #L214a2c.  v9:= 40.0F;
  #L214a30.  v0:= v0 * v9 @kind float;
  #L214a34.  v0:= v0 + v1 @kind float;
  #L214a36.  v0:= v0 + v2 @kind float;
  #L214a38.  v0:= v0 / v7 @kind float;
  #L214a3a.  v1:= (`double`) v4 @kind f2d;
  #L214a3c.  v9:= (`double`) v3 @kind f2d;
  #L214a3e.  call temp:= `atan2`(v1, v9) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L214a44.  v1:= temp @kind wide;
  #L214a46.  v1:= (`float`) v1 @kind d2f;
  #L214a48.  v2:= 180.0F;
  #L214a4c.  v1:= v1 * v2 @kind float;
  #L214a50.  v7:= 1078530011I;
  #L214a56.  v1:= v1 / v7 @kind float;
  #L214a58.  v9:= 360.0F;
  #L214a5c.  v10:= 0I;
  #L214a5e.  v10:= fcmpg(v1, v10);
  #L214a62.  if v10 >= 0 then goto L214a6c;
  #L214a66.  v1:= v1 + v9 @kind float;
  #L214a68.  v14:= v1;
  #L214a6a.  goto L214a78;
  #L214a6c.  v10:= fcmpl(v1, v9);
  #L214a70.  if v10 < 0 then goto L214a68;
  #L214a74.  v1:= v1 - v9 @kind float;
  #L214a76.  goto L214a68;
  #L214a78.  v7:= v7 * v14 @kind float;
  #L214a7c.  v7:= v7 / v2 @kind float;
  #L214a7e.  call temp:= `f`(v24) @signature `Le/g/j/p/x;.f:()F` @kind virtual;
  #L214a84.  v1:= temp;
  #L214a86.  v0:= v0 * v1 @kind float;
  #L214a8a.  call temp:= `a`(v24) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L214a90.  v1:= temp;
  #L214a92.  v0:= v0 / v1 @kind float;
  #L214a94.  v0:= (`double`) v0 @kind f2d;
  #L214a96.  call temp:= `b`(v24) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L214a9c.  v2:= temp;
  #L214a9e.  call temp:= `j`(v24) @signature `Le/g/j/p/x;.j:()F` @kind virtual;
  #L214aa4.  v10:= temp;
  #L214aa6.  v2:= v2 * v10 @kind float;
  #L214aaa.  v5:= (`double`) v2 @kind f2d;
  #L214aac.  call temp:= `pow`(v0, v5) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214ab2.  v0:= temp @kind wide;
  #L214ab4.  v0:= (`float`) v0 @kind d2f;
  #L214ab6.  v1:= 100.0F;
  #L214aba.  v0:= v0 * v1 @kind float;
  #L214abe.  call temp:= `b`(v24) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L214ac4.  v2:= temp;
  #L214ac6.  v5:= 4.0F;
  #L214aca.  v2:= v5 / v2 @kind float;
  #L214ace.  v1:= v0 / v1 @kind float;
  #L214ad2.  v11:= (`double`) v1 @kind f2d;
  #L214ad4.  call temp:= `sqrt`(v11) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214ada.  v10:= temp @kind wide;
  #L214adc.  v1:= (`float`) v10 @kind d2f;
  #L214ade.  v2:= v2 * v1 @kind float;
  #L214ae2.  call temp:= `a`(v24) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L214ae8.  v1:= temp;
  #L214aea.  v1:= v1 + v5 @kind float;
  #L214aec.  v2:= v2 * v1 @kind float;
  #L214af0.  call temp:= `d`(v24) @signature `Le/g/j/p/x;.d:()F` @kind virtual;
  #L214af6.  v1:= temp;
  #L214af8.  v1:= v1 * v2 @kind float;
  #L214afc.  v10:= (`double`) v14 @kind f2d;
  #L214afe.  v12:= 20.14D;
  #L214b08.  v2:= dcmpg(v10, v12);
  #L214b0c.  if v2 >= 0 then goto L214b14;
  #L214b10.  v9:= v9 + v14 @kind float;
  #L214b12.  goto L214b16;
  #L214b14.  v9:= v14;
  #L214b16.  v2:= 0.25F;
  #L214b1a.  v9:= (`double`) v9 @kind f2d;
  #L214b1c.  v11:= 3.141592653589793D;
  #L214b26.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214b2c.  v9:= v9 * v11 @kind double;
  #L214b30.  v11:= 180.0D;
  #L214b3a.  v9:= v9 / v11 @kind double;
  #L214b3c.  v11:= 2.0D;
  #L214b40.  v9:= v9 + v11 @kind double;
  #L214b42.  call temp:= `cos`(v9) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L214b48.  v9:= temp @kind wide;
  #L214b4a.  v11:= 3.8D;
  #L214b54.  v9:= v9 + v11 @kind double;
  #L214b56.  v6:= (`float`) v9 @kind d2f;
  #L214b58.  v6:= v6 * v2 @kind float;
  #L214b5c.  v2:= 1164993142I;
  #L214b62.  v6:= v6 * v2 @kind float;
  #L214b66.  call temp:= `g`(v24) @signature `Le/g/j/p/x;.g:()F` @kind virtual;
  #L214b6c.  v2:= temp;
  #L214b6e.  v6:= v6 * v2 @kind float;
  #L214b72.  call temp:= `h`(v24) @signature `Le/g/j/p/x;.h:()F` @kind virtual;
  #L214b78.  v2:= temp;
  #L214b7a.  v6:= v6 * v2 @kind float;
  #L214b7e.  v3:= v3 * v3 @kind float;
  #L214b82.  v4:= v4 * v4 @kind float;
  #L214b86.  v3:= v3 + v4 @kind float;
  #L214b88.  v2:= (`double`) v3 @kind f2d;
  #L214b8a.  call temp:= `sqrt`(v2) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214b90.  v2:= temp @kind wide;
  #L214b92.  v2:= (`float`) v2 @kind d2f;
  #L214b94.  v6:= v6 * v2 @kind float;
  #L214b98.  v2:= 1050421494I;
  #L214b9e.  v8:= v8 + v2 @kind float;
  #L214ba0.  v6:= v6 / v8 @kind float;
  #L214ba2.  v2:= 1.64D;
  #L214bac.  v8:= 0.29D;
  #L214bb6.  call temp:= `e`(v24) @signature `Le/g/j/p/x;.e:()F` @kind virtual;
  #L214bbc.  v4:= temp;
  #L214bbe.  v10:= (`double`) v4 @kind f2d;
  #L214bc0.  call temp:= `pow`(v8, v10) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214bc6.  v8:= temp @kind wide;
  #L214bc8.  v2:= v2 - v8 @kind double;
  #L214bca.  v8:= 0.73D;
  #L214bd4.  call temp:= `pow`(v2, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214bda.  v2:= temp @kind wide;
  #L214bdc.  v2:= (`float`) v2 @kind d2f;
  #L214bde.  v3:= (`double`) v6 @kind f2d;
  #L214be0.  v8:= 0.9D;
  #L214bea.  call temp:= `pow`(v3, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214bf0.  v3:= temp @kind wide;
  #L214bf2.  v3:= (`float`) v3 @kind d2f;
  #L214bf4.  v2:= v2 * v3 @kind float;
  #L214bf8.  v3:= (`double`) v0 @kind f2d;
  #L214bfa.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214c00.  v8:= 100.0D;
  #L214c04.  v3:= v3 / v8 @kind double;
  #L214c06.  call temp:= `sqrt`(v3) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214c0c.  v3:= temp @kind wide;
  #L214c0e.  v3:= (`float`) v3 @kind d2f;
  #L214c10.  v15:= v2 * v3 @kind float;
  #L214c14.  call temp:= `d`(v24) @signature `Le/g/j/p/x;.d:()F` @kind virtual;
  #L214c1a.  v3:= temp;
  #L214c1c.  v18:= v15 * v3 @kind float;
  #L214c20.  v3:= 50.0F;
  #L214c24.  call temp:= `b`(v24) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L214c2a.  v4:= temp;
  #L214c2c.  v2:= v2 * v4 @kind float;
  #L214c30.  call temp:= `a`(v24) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L214c36.  v4:= temp;
  #L214c38.  v4:= v4 + v5 @kind float;
  #L214c3a.  v2:= v2 / v4 @kind float;
  #L214c3c.  v4:= (`double`) v2 @kind f2d;
  #L214c3e.  call temp:= `sqrt`(v4) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214c44.  v4:= temp @kind wide;
  #L214c46.  v2:= (`float`) v4 @kind d2f;
  #L214c48.  v19:= v2 * v3 @kind float;
  #L214c4c.  v2:= 1071225242I;
  #L214c52.  v2:= v2 * v0 @kind float;
  #L214c56.  v3:= 1004888130I;
  #L214c5c.  v3:= v3 * v0 @kind float;
  #L214c60.  v4:= 1.0F;
  #L214c64.  v3:= v3 + v4 @kind float;
  #L214c66.  v20:= v2 / v3 @kind float;
  #L214c6a.  v2:= 1110405192I;
  #L214c70.  v3:= 1018873617I;
  #L214c76.  v3:= v3 * v18 @kind float;
  #L214c7a.  v3:= v3 + v4 @kind float;
  #L214c7c.  v3:= (`double`) v3 @kind f2d;
  #L214c7e.  call temp:= `log`(v3) @signature `Ljava/lang/Math;.log:(D)D` @kind static;
  #L214c84.  v3:= temp @kind wide;
  #L214c86.  v3:= (`float`) v3 @kind d2f;
  #L214c88.  v3:= v3 * v2 @kind float;
  #L214c8c.  v4:= (`double`) v7 @kind f2d;
  #L214c8e.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L214c94.  v6:= temp @kind wide;
  #L214c96.  v2:= (`float`) v6 @kind d2f;
  #L214c98.  v21:= v3 * v2 @kind float;
  #L214c9c.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L214ca2.  v4:= temp @kind wide;
  #L214ca4.  v2:= (`float`) v4 @kind d2f;
  #L214ca6.  v22:= v3 * v2 @kind float;
  #L214caa.  v2:= new `e.g.j.p.a`;
  #L214cae.  v13:= v2 @kind object;
  #L214cb0.  v16:= v0;
  #L214cb4.  v17:= v1;
  #L214cb8.  call `<init>`(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Le/g/j/p/a;.<init>:(FFFFFFFFF)V` @kind direct;
  #L214cbe.  return v2 @kind object;
}
procedure `e.g.j.p.a` `e`(`float` v1 , `float` v2 , `float` v3 ) @signature `Le/g/j/p/a;.e:(FFF)Le/g/j/p/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L214cd0.  v0:= `@@e.g.j.p.x.a` @type ^`e.g.j.p.x` @kind object;
  #L214cd4.  call temp:= `f`(v1, v2, v3, v0) @signature `Le/g/j/p/a;.f:(FFFLe/g/j/p/x;)Le/g/j/p/a;` @kind static;
  #L214cda.  v1:= temp @kind object;
  #L214cdc.  return v1 @kind object;
}
procedure `e.g.j.p.a` `f`(`float` v13 , `float` v14 , `float` v15 , `e.g.j.p.x` v16 @kind object) @signature `Le/g/j/p/a;.f:(FFFLe/g/j/p/x;)Le/g/j/p/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L214cf0.  v3:= v13;
  #L214cf2.  call temp:= `b`(v16) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L214cf8.  v0:= temp;
  #L214cfa.  v1:= 4.0F;
  #L214cfe.  v0:= v1 / v0 @kind float;
  #L214d02.  v4:= (`double`) v3 @kind f2d;
  #L214d04.  v6:= 100.0D;
  #L214d08.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214d0e.  v4:= v4 / v6 @kind double;
  #L214d10.  call temp:= `sqrt`(v4) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214d16.  v6:= temp @kind wide;
  #L214d18.  v2:= (`float`) v6 @kind d2f;
  #L214d1a.  v0:= v0 * v2 @kind float;
  #L214d1e.  call temp:= `a`(v16) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L214d24.  v2:= temp;
  #L214d26.  v2:= v2 + v1 @kind float;
  #L214d28.  v0:= v0 * v2 @kind float;
  #L214d2c.  call temp:= `d`(v16) @signature `Le/g/j/p/x;.d:()F` @kind virtual;
  #L214d32.  v2:= temp;
  #L214d34.  v6:= v0 * v2 @kind float;
  #L214d38.  call temp:= `d`(v16) @signature `Le/g/j/p/x;.d:()F` @kind virtual;
  #L214d3e.  v0:= temp;
  #L214d40.  v7:= v14 * v0 @kind float;
  #L214d44.  call temp:= `sqrt`(v4) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214d4a.  v4:= temp @kind wide;
  #L214d4c.  v0:= (`float`) v4 @kind d2f;
  #L214d4e.  v0:= v14 / v0 @kind float;
  #L214d52.  call temp:= `b`(v16) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L214d58.  v2:= temp;
  #L214d5a.  v0:= v0 * v2 @kind float;
  #L214d5e.  call temp:= `a`(v16) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L214d64.  v2:= temp;
  #L214d66.  v2:= v2 + v1 @kind float;
  #L214d68.  v0:= v0 / v2 @kind float;
  #L214d6a.  v0:= (`double`) v0 @kind f2d;
  #L214d6c.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214d72.  v0:= temp @kind wide;
  #L214d74.  v0:= (`float`) v0 @kind d2f;
  #L214d76.  v1:= 50.0F;
  #L214d7a.  v8:= v0 * v1 @kind float;
  #L214d7e.  v0:= 1078530011I;
  #L214d84.  v0:= v0 * v15 @kind float;
  #L214d88.  v1:= 180.0F;
  #L214d8c.  v0:= v0 / v1 @kind float;
  #L214d8e.  v1:= 1071225242I;
  #L214d94.  v1:= v1 * v3 @kind float;
  #L214d98.  v2:= 1004888130I;
  #L214d9e.  v2:= v2 * v3 @kind float;
  #L214da2.  v4:= 1.0F;
  #L214da6.  v2:= v2 + v4 @kind float;
  #L214da8.  v9:= v1 / v2 @kind float;
  #L214dac.  v1:= (`double`) v7 @kind f2d;
  #L214dae.  v4:= 0.0228D;
  #L214db8.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L214dbe.  v1:= v1 * v4 @kind double;
  #L214dc2.  v4:= 1.0D;
  #L214dc6.  v1:= v1 + v4 @kind double;
  #L214dc8.  call temp:= `log`(v1) @signature `Ljava/lang/Math;.log:(D)D` @kind static;
  #L214dce.  v1:= temp @kind wide;
  #L214dd0.  v1:= (`float`) v1 @kind d2f;
  #L214dd2.  v2:= 1110405192I;
  #L214dd8.  v1:= v1 * v2 @kind float;
  #L214ddc.  v4:= (`double`) v0 @kind f2d;
  #L214dde.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L214de4.  v10:= temp @kind wide;
  #L214de6.  v0:= (`float`) v10 @kind d2f;
  #L214de8.  v10:= v1 * v0 @kind float;
  #L214dec.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L214df2.  v4:= temp @kind wide;
  #L214df4.  v0:= (`float`) v4 @kind d2f;
  #L214df6.  v11:= v1 * v0 @kind float;
  #L214dfa.  v12:= new `e.g.j.p.a`;
  #L214dfe.  v0:= v12 @kind object;
  #L214e00.  v1:= v15;
  #L214e02.  v2:= v14;
  #L214e04.  v4:= v6;
  #L214e06.  v5:= v7;
  #L214e08.  v6:= v8;
  #L214e0a.  v7:= v9;
  #L214e0c.  v8:= v10;
  #L214e0e.  v9:= v11;
  #L214e10.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Le/g/j/p/a;.<init>:(FFFFFFFFF)V` @kind direct;
  #L214e16.  return v12 @kind object;
}
procedure `int` `m`(`float` v1 , `float` v2 , `float` v3 ) @signature `Le/g/j/p/a;.m:(FFF)I` @AccessFlag STATIC {
    temp;
    v0;

  #L214f3c.  v0:= `@@e.g.j.p.x.a` @type ^`e.g.j.p.x` @kind object;
  #L214f40.  call temp:= `n`(v1, v2, v3, v0) @signature `Le/g/j/p/a;.n:(FFFLe/g/j/p/x;)I` @kind static;
  #L214f46.  v1:= temp;
  #L214f48.  return v1;
}
procedure `int` `n`(`float` v6 , `float` v7 , `float` v8 , `e.g.j.p.x` v9 @kind object) @signature `Le/g/j/p/a;.n:(FFFLe/g/j/p/x;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L214f5c.  v0:= (`double`) v7 @kind f2d;
  #L214f5e.  v2:= 1.0D;
  #L214f62.  v4:= dcmpg(v0, v2);
  #L214f66.  if v4 < 0 then goto L215028;
  #L214f6a.  call temp:= `round`(v8) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L214f70.  v0:= temp;
  #L214f72.  v0:= (`double`) v0 @kind i2d;
  #L214f74.  v2:= 0L;
  #L214f78.  v4:= dcmpg(v0, v2);
  #L214f7c.  if v4 <= 0 then goto L215028;
  #L214f80.  call temp:= `round`(v8) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L214f86.  v0:= temp;
  #L214f88.  v0:= (`double`) v0 @kind i2d;
  #L214f8a.  v2:= 100.0D;
  #L214f8e.  v4:= dcmpl(v0, v2);
  #L214f92.  if v4 < 0 then goto L214f98;
  #L214f96.  goto L215028;
  #L214f98.  v0:= 0I;
  #L214f9a.  v1:= fcmpg(v6, v0);
  #L214f9e.  if v1 >= 0 then goto L214fa6;
  #L214fa2.  v6:= 0I;
  #L214fa4.  goto L214fb2;
  #L214fa6.  v1:= 360.0F;
  #L214faa.  call temp:= `min`(v1, v6) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L214fb0.  v6:= temp;
  #L214fb2.  v1:= 1I;
  #L214fb4.  v2:= 0I;
  #L214fb6.  v0:= v7;
  #L214fb8.  v3:= v2 @kind object;
  #L214fba.  v1:= 0I;
  #L214fbc.  v2:= 1I;
  #L214fbe.  v4:= v1 - v7 @kind float;
  #L214fc2.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L214fc8.  v4:= temp;
  #L214fca.  v5:= 1053609165I;
  #L214fd0.  v4:= fcmpl(v4, v5);
  #L214fd4.  if v4 < 0 then goto L215010;
  #L214fd8.  call temp:= `b`(v6, v0, v8) @signature `Le/g/j/p/a;.b:(FFF)Le/g/j/p/a;` @kind static;
  #L214fde.  v4:= temp @kind object;
  #L214fe0.  v5:= 2.0F;
  #L214fe4.  if v2 == 0 then goto L215002;
  #L214fe8.  if v4 == 0 then goto L214ff6;
  #L214fec.  call temp:= `o`(v4, v9) @signature `Le/g/j/p/a;.o:(Le/g/j/p/x;)I` @kind virtual;
  #L214ff2.  v6:= temp;
  #L214ff4.  return v6;
  #L214ff6.  v2:= 0I;
  #L214ff8.  v0:= v7 - v1 @kind float;
  #L214ffc.  v0:= v0 / v5 @kind float;
  #L214ffe.  v0:= v0 + v1 @kind float;
  #L215000.  goto L214fbe;
  #L215002.  if v4 != 0 then goto L21500a;
  #L215006.  v7:= v0;
  #L215008.  goto L214ff8;
  #L21500a.  v1:= v0;
  #L21500c.  v3:= v4 @kind object;
  #L21500e.  goto L214ff8;
  #L215010.  if v3 != 0 then goto L21501e;
  #L215014.  call temp:= `a`(v8) @signature `Le/g/j/p/b;.a:(F)I` @kind static;
  #L21501a.  v6:= temp;
  #L21501c.  return v6;
  #L21501e.  call temp:= `o`(v3, v9) @signature `Le/g/j/p/a;.o:(Le/g/j/p/x;)I` @kind virtual;
  #L215024.  v6:= temp;
  #L215026.  return v6;
  #L215028.  call temp:= `a`(v8) @signature `Le/g/j/p/b;.a:(F)I` @kind static;
  #L21502e.  v6:= temp;
  #L215030.  return v6;
}
procedure `float` `a`(`e.g.j.p.a` v4 @kind this, `e.g.j.p.a` v5 @kind object) @signature `Le/g/j/p/a;.a:(Le/g/j/p/a;)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214e28.  call temp:= `l`(v4) @signature `Le/g/j/p/a;.l:()F` @kind virtual;
  #L214e2e.  v0:= temp;
  #L214e30.  call temp:= `l`(v5) @signature `Le/g/j/p/a;.l:()F` @kind virtual;
  #L214e36.  v1:= temp;
  #L214e38.  v0:= v0 - v1 @kind float;
  #L214e3a.  call temp:= `g`(v4) @signature `Le/g/j/p/a;.g:()F` @kind virtual;
  #L214e40.  v1:= temp;
  #L214e42.  call temp:= `g`(v5) @signature `Le/g/j/p/a;.g:()F` @kind virtual;
  #L214e48.  v2:= temp;
  #L214e4a.  v1:= v1 - v2 @kind float;
  #L214e4c.  call temp:= `h`(v4) @signature `Le/g/j/p/a;.h:()F` @kind virtual;
  #L214e52.  v2:= temp;
  #L214e54.  call temp:= `h`(v5) @signature `Le/g/j/p/a;.h:()F` @kind virtual;
  #L214e5a.  v5:= temp;
  #L214e5c.  v2:= v2 - v5 @kind float;
  #L214e5e.  v0:= v0 * v0 @kind float;
  #L214e62.  v1:= v1 * v1 @kind float;
  #L214e66.  v0:= v0 + v1 @kind float;
  #L214e68.  v2:= v2 * v2 @kind float;
  #L214e6c.  v0:= v0 + v2 @kind float;
  #L214e6e.  v0:= (`double`) v0 @kind f2d;
  #L214e70.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L214e76.  v0:= temp @kind wide;
  #L214e78.  v2:= 0.63D;
  #L214e82.  call temp:= `pow`(v0, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L214e88.  v0:= temp @kind wide;
  #L214e8a.  v2:= 1.41D;
  #L214e94.  v0:= v0 * v2 @kind double;
  #L214e98.  v5:= (`float`) v0 @kind d2f;
  #L214e9a.  return v5;
}
procedure `float` `g`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.g:()F` @AccessFlag  {
    temp;
    v0;

  #L214eac.  v0:= v1.`e.g.j.p.a.h` @type ^`float`;
  #L214eb0.  return v0;
}
procedure `float` `h`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.h:()F` @AccessFlag  {
    temp;
    v0;

  #L214ec4.  v0:= v1.`e.g.j.p.a.i` @type ^`float`;
  #L214ec8.  return v0;
}
procedure `float` `i`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.i:()F` @AccessFlag  {
    temp;
    v0;

  #L214edc.  v0:= v1.`e.g.j.p.a.b` @type ^`float`;
  #L214ee0.  return v0;
}
procedure `float` `j`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.j:()F` @AccessFlag  {
    temp;
    v0;

  #L214ef4.  v0:= v1.`e.g.j.p.a.a` @type ^`float`;
  #L214ef8.  return v0;
}
procedure `float` `k`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.k:()F` @AccessFlag  {
    temp;
    v0;

  #L214f0c.  v0:= v1.`e.g.j.p.a.c` @type ^`float`;
  #L214f10.  return v0;
}
procedure `float` `l`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.l:()F` @AccessFlag  {
    temp;
    v0;

  #L214f24.  v0:= v1.`e.g.j.p.a.g` @type ^`float`;
  #L214f28.  return v0;
}
procedure `int` `o`(`e.g.j.p.a` v15 @kind this, `e.g.j.p.x` v16 @kind object) @signature `Le/g/j/p/a;.o:(Le/g/j/p/x;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L215044.  call temp:= `i`(v15) @signature `Le/g/j/p/a;.i:()F` @kind virtual;
  #L21504a.  v0:= temp;
  #L21504c.  v0:= (`double`) v0 @kind f2d;
  #L21504e.  v2:= 100.0D;
  #L215052.  v4:= 0L;
  #L215056.  v6:= dcmpl(v0, v4);
  #L21505a.  if v6 == 0 then goto L21509a;
  #L21505e.  call temp:= `k`(v15) @signature `Le/g/j/p/a;.k:()F` @kind virtual;
  #L215064.  v0:= temp;
  #L215066.  v0:= (`double`) v0 @kind f2d;
  #L215068.  v6:= dcmpl(v0, v4);
  #L21506c.  if v6 != 0 then goto L215072;
  #L215070.  goto L21509a;
  #L215072.  call temp:= `i`(v15) @signature `Le/g/j/p/a;.i:()F` @kind virtual;
  #L215078.  v0:= temp;
  #L21507a.  call temp:= `k`(v15) @signature `Le/g/j/p/a;.k:()F` @kind virtual;
  #L215080.  v1:= temp;
  #L215082.  v6:= (`double`) v1 @kind f2d;
  #L215084.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L21508a.  v6:= v6 / v2 @kind double;
  #L21508c.  call temp:= `sqrt`(v6) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L215092.  v6:= temp @kind wide;
  #L215094.  v1:= (`float`) v6 @kind d2f;
  #L215096.  v0:= v0 / v1 @kind float;
  #L215098.  goto L21509c;
  #L21509a.  v0:= 0I;
  #L21509c.  v0:= (`double`) v0 @kind f2d;
  #L21509e.  v6:= 1.64D;
  #L2150a8.  v8:= 0.29D;
  #L2150b2.  call temp:= `e`(v16) @signature `Le/g/j/p/x;.e:()F` @kind virtual;
  #L2150b8.  v10:= temp;
  #L2150ba.  v10:= (`double`) v10 @kind f2d;
  #L2150bc.  call temp:= `pow`(v8, v10) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2150c2.  v8:= temp @kind wide;
  #L2150c4.  v6:= v6 - v8 @kind double;
  #L2150c6.  v8:= 0.73D;
  #L2150d0.  call temp:= `pow`(v6, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2150d6.  v6:= temp @kind wide;
  #L2150d8.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2150de.  v0:= v0 / v6 @kind double;
  #L2150e0.  v6:= 1.1111111111111112D;
  #L2150ea.  call temp:= `pow`(v0, v6) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2150f0.  v0:= temp @kind wide;
  #L2150f2.  v0:= (`float`) v0 @kind d2f;
  #L2150f4.  call temp:= `j`(v15) @signature `Le/g/j/p/a;.j:()F` @kind virtual;
  #L2150fa.  v1:= temp;
  #L2150fc.  v6:= 1078530011I;
  #L215102.  v1:= v1 * v6 @kind float;
  #L215106.  v6:= 180.0F;
  #L21510a.  v1:= v1 / v6 @kind float;
  #L21510c.  v6:= 0.25F;
  #L215110.  v7:= (`double`) v1 @kind f2d;
  #L215112.  v9:= 2.0D;
  #L215116.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L21511c.  v9:= v9 + v7 @kind double;
  #L21511e.  call temp:= `cos`(v9) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L215124.  v9:= temp @kind wide;
  #L215126.  v11:= 3.8D;
  #L215130.  v9:= v9 + v11 @kind double;
  #L215132.  v1:= (`float`) v9 @kind d2f;
  #L215134.  v1:= v1 * v6 @kind float;
  #L215138.  call temp:= `a`(v16) @signature `Le/g/j/p/x;.a:()F` @kind virtual;
  #L21513e.  v6:= temp;
  #L215140.  call temp:= `k`(v15) @signature `Le/g/j/p/a;.k:()F` @kind virtual;
  #L215146.  v9:= temp;
  #L215148.  v9:= (`double`) v9 @kind f2d;
  #L21514a.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215150.  v9:= v9 / v2 @kind double;
  #L215152.  v2:= 1.0D;
  #L215156.  call temp:= `b`(v16) @signature `Le/g/j/p/x;.b:()F` @kind virtual;
  #L21515c.  v11:= temp;
  #L21515e.  v11:= (`double`) v11 @kind f2d;
  #L215160.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215166.  v2:= v2 / v11 @kind double;
  #L215168.  call temp:= `j`(v16) @signature `Le/g/j/p/x;.j:()F` @kind virtual;
  #L21516e.  v11:= temp;
  #L215170.  v11:= (`double`) v11 @kind f2d;
  #L215172.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215178.  v2:= v2 / v11 @kind double;
  #L21517a.  call temp:= `pow`(v9, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L215180.  v2:= temp @kind wide;
  #L215182.  v2:= (`float`) v2 @kind d2f;
  #L215184.  v6:= v6 * v2 @kind float;
  #L215188.  v2:= 1164993142I;
  #L21518e.  v1:= v1 * v2 @kind float;
  #L215192.  call temp:= `g`(v16) @signature `Le/g/j/p/x;.g:()F` @kind virtual;
  #L215198.  v2:= temp;
  #L21519a.  v1:= v1 * v2 @kind float;
  #L21519e.  call temp:= `h`(v16) @signature `Le/g/j/p/x;.h:()F` @kind virtual;
  #L2151a4.  v2:= temp;
  #L2151a6.  v1:= v1 * v2 @kind float;
  #L2151aa.  call temp:= `f`(v16) @signature `Le/g/j/p/x;.f:()F` @kind virtual;
  #L2151b0.  v2:= temp;
  #L2151b2.  v6:= v6 / v2 @kind float;
  #L2151b4.  call temp:= `sin`(v7) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2151ba.  v2:= temp @kind wide;
  #L2151bc.  v2:= (`float`) v2 @kind d2f;
  #L2151be.  call temp:= `cos`(v7) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2151c4.  v7:= temp @kind wide;
  #L2151c6.  v3:= (`float`) v7 @kind d2f;
  #L2151c8.  v7:= 1050421494I;
  #L2151ce.  v7:= v7 + v6 @kind float;
  #L2151d0.  v8:= 23.0F;
  #L2151d4.  v7:= v7 * v8 @kind float;
  #L2151d8.  v7:= v7 * v0 @kind float;
  #L2151dc.  v1:= v1 * v8 @kind float;
  #L2151e0.  v8:= 11.0F;
  #L2151e4.  v8:= v8 * v0 @kind float;
  #L2151e8.  v8:= v8 * v3 @kind float;
  #L2151ec.  v1:= v1 + v8 @kind float;
  #L2151ee.  v8:= 108.0F;
  #L2151f2.  v0:= v0 * v8 @kind float;
  #L2151f6.  v0:= v0 * v2 @kind float;
  #L2151fa.  v1:= v1 + v0 @kind float;
  #L2151fc.  v7:= v7 / v1 @kind float;
  #L2151fe.  v3:= v3 * v7 @kind float;
  #L215202.  v7:= v7 * v2 @kind float;
  #L215206.  v0:= 460.0F;
  #L21520a.  v6:= v6 * v0 @kind float;
  #L21520e.  v0:= 1138851840I;
  #L215214.  v0:= v0 * v3 @kind float;
  #L215218.  v0:= v0 + v6 @kind float;
  #L21521a.  v1:= 288.0F;
  #L21521e.  v1:= v1 * v7 @kind float;
  #L215222.  v0:= v0 + v1 @kind float;
  #L215224.  v1:= 1152344064I;
  #L21522a.  v0:= v0 / v1 @kind float;
  #L21522c.  v2:= 1147060224I;
  #L215232.  v2:= v2 * v3 @kind float;
  #L215236.  v2:= v6 - v2 @kind float;
  #L21523a.  v8:= 1132625920I;
  #L215240.  v8:= v8 * v7 @kind float;
  #L215244.  v2:= v2 - v8 @kind float;
  #L215246.  v2:= v2 / v1 @kind float;
  #L215248.  v8:= 220.0F;
  #L21524c.  v3:= v3 * v8 @kind float;
  #L215250.  v6:= v6 - v3 @kind float;
  #L215252.  v3:= 1170530304I;
  #L215258.  v7:= v7 * v3 @kind float;
  #L21525c.  v6:= v6 - v7 @kind float;
  #L21525e.  v6:= v6 / v1 @kind float;
  #L215260.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L215266.  v1:= temp;
  #L215268.  v7:= (`double`) v1 @kind f2d;
  #L21526a.  v9:= 27.13D;
  #L215274.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L21527a.  v7:= v7 * v9 @kind double;
  #L21527e.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L215284.  v1:= temp;
  #L215286.  v11:= (`double`) v1 @kind f2d;
  #L215288.  v13:= 400.0D;
  #L21528c.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215292.  v11:= v13 - v11 @kind double;
  #L215296.  v7:= v7 / v11 @kind double;
  #L215298.  call temp:= `max`(v4, v7) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L21529e.  v7:= temp @kind wide;
  #L2152a0.  v1:= (`float`) v7 @kind d2f;
  #L2152a2.  call temp:= `signum`(v0) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L2152a8.  v0:= temp;
  #L2152aa.  call temp:= `c`(v16) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L2152b0.  v3:= temp;
  #L2152b2.  v7:= 100.0F;
  #L2152b6.  v3:= v7 / v3 @kind float;
  #L2152ba.  v0:= v0 * v3 @kind float;
  #L2152be.  v11:= (`double`) v1 @kind f2d;
  #L2152c0.  v7:= 2.380952380952381D;
  #L2152ca.  call temp:= `pow`(v11, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2152d0.  v11:= temp @kind wide;
  #L2152d2.  v3:= (`float`) v11 @kind d2f;
  #L2152d4.  v0:= v0 * v3 @kind float;
  #L2152d8.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2152de.  v3:= temp;
  #L2152e0.  v11:= (`double`) v3 @kind f2d;
  #L2152e2.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2152e8.  v11:= v11 * v9 @kind double;
  #L2152ec.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2152f2.  v3:= temp;
  #L2152f4.  v9:= (`double`) v3 @kind f2d;
  #L2152f6.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2152fc.  v9:= v13 - v9 @kind double;
  #L215300.  v11:= v11 / v9 @kind double;
  #L215302.  call temp:= `max`(v4, v11) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L215308.  v9:= temp @kind wide;
  #L21530a.  v3:= (`float`) v9 @kind d2f;
  #L21530c.  call temp:= `signum`(v2) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L215312.  v2:= temp;
  #L215314.  call temp:= `c`(v16) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L21531a.  v9:= temp;
  #L21531c.  v1:= 100.0F;
  #L215320.  v9:= v1 / v9 @kind float;
  #L215324.  v2:= v2 * v9 @kind float;
  #L215328.  v9:= (`double`) v3 @kind f2d;
  #L21532a.  call temp:= `pow`(v9, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L215330.  v9:= temp @kind wide;
  #L215332.  v3:= (`float`) v9 @kind d2f;
  #L215334.  v2:= v2 * v3 @kind float;
  #L215338.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L21533e.  v3:= temp;
  #L215340.  v9:= (`double`) v3 @kind f2d;
  #L215342.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215348.  v11:= 27.13D;
  #L215352.  v9:= v9 * v11 @kind double;
  #L215356.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L21535c.  v3:= temp;
  #L21535e.  v11:= (`double`) v3 @kind f2d;
  #L215360.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215366.  v13:= v13 - v11 @kind double;
  #L215368.  v9:= v9 / v13 @kind double;
  #L21536a.  call temp:= `max`(v4, v9) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L215370.  v3:= temp @kind wide;
  #L215372.  v3:= (`float`) v3 @kind d2f;
  #L215374.  call temp:= `signum`(v6) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L21537a.  v4:= temp;
  #L21537c.  call temp:= `c`(v16) @signature `Le/g/j/p/x;.c:()F` @kind virtual;
  #L215382.  v5:= temp;
  #L215384.  v1:= 100.0F;
  #L215388.  v1:= v1 / v5 @kind float;
  #L21538a.  v4:= v4 * v1 @kind float;
  #L21538e.  v5:= (`double`) v3 @kind f2d;
  #L215390.  call temp:= `pow`(v5, v7) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L215396.  v5:= temp @kind wide;
  #L215398.  v1:= (`float`) v5 @kind d2f;
  #L21539a.  v4:= v4 * v1 @kind float;
  #L21539e.  call temp:= `i`(v16) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2153a4.  v1:= temp @kind object;
  #L2153a6.  v3:= 0I;
  #L2153a8.  v1:= v1[v3];
  #L2153ac.  v0:= v0 / v1 @kind float;
  #L2153ae.  call temp:= `i`(v16) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2153b4.  v1:= temp @kind object;
  #L2153b6.  v5:= 1I;
  #L2153b8.  v1:= v1[v5];
  #L2153bc.  v2:= v2 / v1 @kind float;
  #L2153be.  call temp:= `i`(v16) @signature `Le/g/j/p/x;.i:()[F` @kind virtual;
  #L2153c4.  v1:= temp @kind object;
  #L2153c6.  v6:= 2I;
  #L2153c8.  v1:= v1[v6];
  #L2153cc.  v4:= v4 / v1 @kind float;
  #L2153ce.  v1:= `@@e.g.j.p.b.b` @type ^`float`[][] @kind object;
  #L2153d2.  v7:= v1[v3] @kind object;
  #L2153d6.  v7:= v7[v3];
  #L2153da.  v7:= v7 * v0 @kind float;
  #L2153de.  v8:= v1[v3] @kind object;
  #L2153e2.  v8:= v8[v5];
  #L2153e6.  v8:= v8 * v2 @kind float;
  #L2153ea.  v7:= v7 + v8 @kind float;
  #L2153ec.  v8:= v1[v3] @kind object;
  #L2153f0.  v8:= v8[v6];
  #L2153f4.  v8:= v8 * v4 @kind float;
  #L2153f8.  v7:= v7 + v8 @kind float;
  #L2153fa.  v8:= v1[v5] @kind object;
  #L2153fe.  v8:= v8[v3];
  #L215402.  v8:= v8 * v0 @kind float;
  #L215406.  v9:= v1[v5] @kind object;
  #L21540a.  v9:= v9[v5];
  #L21540e.  v9:= v9 * v2 @kind float;
  #L215412.  v8:= v8 + v9 @kind float;
  #L215414.  v9:= v1[v5] @kind object;
  #L215418.  v9:= v9[v6];
  #L21541c.  v9:= v9 * v4 @kind float;
  #L215420.  v8:= v8 + v9 @kind float;
  #L215422.  v9:= v1[v6] @kind object;
  #L215426.  v3:= v9[v3];
  #L21542a.  v0:= v0 * v3 @kind float;
  #L21542e.  v3:= v1[v6] @kind object;
  #L215432.  v3:= v3[v5];
  #L215436.  v2:= v2 * v3 @kind float;
  #L21543a.  v0:= v0 + v2 @kind float;
  #L21543c.  v1:= v1[v6] @kind object;
  #L215440.  v1:= v1[v6];
  #L215444.  v4:= v4 * v1 @kind float;
  #L215448.  v0:= v0 + v4 @kind float;
  #L21544a.  v1:= (`double`) v7 @kind f2d;
  #L21544c.  v3:= (`double`) v8 @kind f2d;
  #L21544e.  v5:= (`double`) v0 @kind f2d;
  #L215450.  call temp:= `c`(v1, v3, v5) @signature `Landroidx/core/graphics/d;.c:(DDD)I` @kind static;
  #L215456.  v0:= temp;
  #L215458.  return v0;
}
procedure `int` `p`(`e.g.j.p.a` v1 @kind this) @signature `Le/g/j/p/a;.p:()I` @AccessFlag  {
    temp;
    v0;

  #L21546c.  v0:= `@@e.g.j.p.x.a` @type ^`e.g.j.p.x` @kind object;
  #L215470.  call temp:= `o`(v1, v0) @signature `Le/g/j/p/a;.o:(Le/g/j/p/x;)I` @kind virtual;
  #L215476.  v0:= temp;
  #L215478.  return v0;
}
