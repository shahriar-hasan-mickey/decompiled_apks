record `e.g.j.p.b` @kind class @AccessFlag ABSTRACT {
}
global `float`[][] `@@e.g.j.p.b.a` @AccessFlag STATIC_FINAL;
global `float`[][] `@@e.g.j.p.b.b` @AccessFlag STATIC_FINAL;
global `float`[] `@@e.g.j.p.b.c` @AccessFlag STATIC_FINAL;
global `float`[][] `@@e.g.j.p.b.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/g/j/p/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21582c.  v0:= 3I;
  #L21582e.  v1:= new `float`[][v0];
  #L215832.  v2:= new `float`[v0];
  #L215836.  goto L2158dc;
  #L21583c.  v3:= 0I;
  #L21583e.  v1[v3]:= v2 @kind object;
  #L215842.  v2:= new `float`[v0];
  #L215846.  goto L2158f0;
  #L21584c.  v4:= 1I;
  #L21584e.  v1[v4]:= v2 @kind object;
  #L215852.  v2:= new `float`[v0];
  #L215856.  goto L215904;
  #L21585c.  v5:= 2I;
  #L21585e.  v1[v5]:= v2 @kind object;
  #L215862.  `@@e.g.j.p.b.a` @type ^`float`[][] := v1 @kind object;
  #L215866.  v1:= new `float`[][v0];
  #L21586a.  v2:= new `float`[v0];
  #L21586e.  goto L215918;
  #L215874.  v1[v3]:= v2 @kind object;
  #L215878.  v2:= new `float`[v0];
  #L21587c.  goto L21592c;
  #L215882.  v1[v4]:= v2 @kind object;
  #L215886.  v2:= new `float`[v0];
  #L21588a.  goto L215940;
  #L215890.  v1[v5]:= v2 @kind object;
  #L215894.  `@@e.g.j.p.b.b` @type ^`float`[][] := v1 @kind object;
  #L215898.  v1:= new `float`[v0];
  #L21589c.  goto L215954;
  #L2158a2.  `@@e.g.j.p.b.c` @type ^`float`[] := v1 @kind object;
  #L2158a6.  v1:= new `float`[][v0];
  #L2158aa.  v2:= new `float`[v0];
  #L2158ae.  goto L215968;
  #L2158b4.  v1[v3]:= v2 @kind object;
  #L2158b8.  v2:= new `float`[v0];
  #L2158bc.  goto L21597c;
  #L2158c2.  v1[v4]:= v2 @kind object;
  #L2158c6.  v0:= new `float`[v0];
  #L2158ca.  goto L215990;
  #L2158d0.  v1[v5]:= v0 @kind object;
  #L2158d4.  `@@e.g.j.p.b.d` @type ^`float`[][] := v1 @kind object;
  #L2158d8.  return @kind void;
  #L2158da.  
  #L2158dc.  v2:= (1053652383I, 1059484093I, -1118648123I) @kind object;
  #L2158ef.  goto L21583c;
  #L2158f0.  v2:= (-1098898655I, 1067067965I, 1027330407I) @kind object;
  #L215903.  goto L21584c;
  #L215904.  v2:= (-1157087275I, 1028162020I, 1064566818I) @kind object;
  #L215917.  goto L21585c;
  #L215918.  v2:= (1072584765I, -1082036021I, 1041810539I) @kind object;
  #L21592b.  goto L215874;
  #L21592c.  v2:= (1053190625I, 1059002158I, -1139603558I) @kind object;
  #L21593f.  goto L215882;
  #L215940.  v2:= (-1132345847I, -1123302273I, 1065772348I) @kind object;
  #L215953.  goto L215890;
  #L215954.  v1:= (1119754256I, 1120403456I, 1121567769I) @kind object;
  #L215967.  goto L2158a2;
  #L215968.  v2:= (1054023191I, 1052187149I, 1043912633I) @kind object;
  #L21597b.  goto L2158b4;
  #L21597c.  v2:= (1046066128I, 1060575065I, 1033100696I) @kind object;
  #L21598f.  goto L2158c2;
  #L215990.  v0:= (1017006063I, 1039404073I, 1064520140I) @kind object;
  #L2159a3.  goto L2158d0;
}
procedure `int` `a`(`float` v15 ) @signature `Le/g/j/p/b;.a:(F)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L215754.  v0:= 1.0F;
  #L215758.  v0:= fcmpg(v15, v0);
  #L21575c.  if v0 >= 0 then goto L215766;
  #L215760.  v15:= -16777216I;
  #L215764.  return v15;
  #L215766.  v0:= 99.0F;
  #L21576a.  v0:= fcmpl(v15, v0);
  #L21576e.  if v0 <= 0 then goto L215776;
  #L215772.  v15:= -1I;
  #L215774.  return v15;
  #L215776.  v0:= 16.0F;
  #L21577a.  v1:= v15 + v0 @kind float;
  #L21577e.  v2:= 116.0F;
  #L215782.  v1:= v1 / v2 @kind float;
  #L215784.  v3:= 1147261687I;
  #L21578a.  v4:= 1007753895I;
  #L215790.  v5:= 8.0F;
  #L215794.  v6:= 1I;
  #L215796.  v7:= 0I;
  #L215798.  v5:= fcmpl(v15, v5);
  #L21579c.  if v5 <= 0 then goto L2157a4;
  #L2157a0.  v5:= 1I;
  #L2157a2.  goto L2157a6;
  #L2157a4.  v5:= 0I;
  #L2157a6.  if v5 == 0 then goto L2157b4;
  #L2157aa.  v15:= v1 * v1 @kind float;
  #L2157ae.  v15:= v15 * v1 @kind float;
  #L2157b2.  goto L2157b6;
  #L2157b4.  v15:= v15 / v3 @kind float;
  #L2157b6.  v5:= v1 * v1 @kind float;
  #L2157ba.  v5:= v5 * v1 @kind float;
  #L2157be.  v4:= fcmpl(v5, v4);
  #L2157c2.  if v4 <= 0 then goto L2157ca;
  #L2157c6.  v4:= 1I;
  #L2157c8.  goto L2157cc;
  #L2157ca.  v4:= 0I;
  #L2157cc.  if v4 == 0 then goto L2157d4;
  #L2157d0.  v8:= v5;
  #L2157d2.  goto L2157dc;
  #L2157d4.  v8:= v1 * v2 @kind float;
  #L2157d8.  v8:= v8 - v0 @kind float;
  #L2157da.  v8:= v8 / v3 @kind float;
  #L2157dc.  if v4 == 0 then goto L2157e2;
  #L2157e0.  goto L2157ec;
  #L2157e2.  v1:= v1 * v2 @kind float;
  #L2157e6.  v1:= v1 - v0 @kind float;
  #L2157e8.  v5:= v1 / v3 @kind float;
  #L2157ec.  v0:= `@@e.g.j.p.b.c` @type ^`float`[] @kind object;
  #L2157f0.  v1:= v0[v7];
  #L2157f4.  v8:= v8 * v1 @kind float;
  #L2157f8.  v9:= (`double`) v8 @kind f2d;
  #L2157fa.  v1:= v0[v6];
  #L2157fe.  v15:= v15 * v1 @kind float;
  #L215802.  v11:= (`double`) v15 @kind f2d;
  #L215804.  v15:= 2I;
  #L215806.  v15:= v0[v15];
  #L21580a.  v5:= v5 * v15 @kind float;
  #L21580e.  v13:= (`double`) v5 @kind f2d;
  #L215810.  call temp:= `c`(v9, v11, v13) @signature `Landroidx/core/graphics/d;.c:(DDD)I` @kind static;
  #L215816.  v15:= temp;
  #L215818.  return v15;
}
procedure `float` `b`(`int` v0 ) @signature `Le/g/j/p/b;.b:(I)F` @AccessFlag STATIC {
    temp;

  #L2154c8.  call temp:= `g`(v0) @signature `Le/g/j/p/b;.g:(I)F` @kind static;
  #L2154ce.  v0:= temp;
  #L2154d0.  call temp:= `c`(v0) @signature `Le/g/j/p/b;.c:(F)F` @kind static;
  #L2154d6.  v0:= temp;
  #L2154d8.  return v0;
}
procedure `float` `c`(`float` v2 ) @signature `Le/g/j/p/b;.c:(F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2154ec.  v0:= 100.0F;
  #L2154f0.  v2:= v2 / v0 @kind float;
  #L2154f2.  v0:= 1007753895I;
  #L2154f8.  v0:= fcmpg(v2, v0);
  #L2154fc.  if v0 > 0 then goto L21550c;
  #L215500.  v0:= 1147261687I;
  #L215506.  v2:= v2 * v0 @kind float;
  #L21550a.  return v2;
  #L21550c.  v0:= (`double`) v2 @kind f2d;
  #L21550e.  call temp:= `cbrt`(v0) @signature `Ljava/lang/Math;.cbrt:(D)D` @kind static;
  #L215514.  v0:= temp @kind wide;
  #L215516.  v2:= (`float`) v0 @kind d2f;
  #L215518.  v0:= 116.0F;
  #L21551c.  v2:= v2 * v0 @kind float;
  #L215520.  v0:= 16.0F;
  #L215524.  v2:= v2 - v0 @kind float;
  #L215526.  return v2;
}
procedure `float` `d`(`float` v0 , `float` v1 , `float` v2 ) @signature `Le/g/j/p/b;.d:(FFF)F` @AccessFlag STATIC {
    temp;

  #L215538.  v1:= v1 - v0 @kind float;
  #L21553a.  v1:= v1 * v2 @kind float;
  #L21553e.  v0:= v0 + v1 @kind float;
  #L215540.  return v0;
}
procedure `float` `e`(`int` v5 ) @signature `Le/g/j/p/b;.e:(I)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L215554.  v5:= (`float`) v5 @kind i2f;
  #L215556.  v0:= 255.0F;
  #L21555a.  v5:= v5 / v0 @kind float;
  #L21555c.  v0:= 100.0F;
  #L215560.  v1:= 1025879782I;
  #L215566.  v1:= fcmpg(v5, v1);
  #L21556a.  if v1 > 0 then goto L21557c;
  #L21556e.  v1:= 1095678034I;
  #L215574.  v5:= v5 / v1 @kind float;
  #L215576.  v5:= v5 * v0 @kind float;
  #L21557a.  return v5;
  #L21557c.  v1:= 1029785518I;
  #L215582.  v5:= v5 + v1 @kind float;
  #L215584.  v1:= 1065814589I;
  #L21558a.  v5:= v5 / v1 @kind float;
  #L21558c.  v1:= (`double`) v5 @kind f2d;
  #L21558e.  v3:= 2.4000000953674316D;
  #L215598.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L21559e.  v1:= temp @kind wide;
  #L2155a0.  v5:= (`float`) v1 @kind d2f;
  #L2155a2.  goto L215576;
}
procedure `float`[] `f`(`int` v9 ) @signature `Le/g/j/p/b;.f:(I)[F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L21567c.  call temp:= `red`(v9) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L215682.  v0:= temp;
  #L215684.  call temp:= `e`(v0) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L21568a.  v0:= temp;
  #L21568c.  call temp:= `green`(v9) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L215692.  v1:= temp;
  #L215694.  call temp:= `e`(v1) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L21569a.  v1:= temp;
  #L21569c.  call temp:= `blue`(v9) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2156a2.  v9:= temp;
  #L2156a4.  call temp:= `e`(v9) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L2156aa.  v9:= temp;
  #L2156ac.  v2:= `@@e.g.j.p.b.d` @type ^`float`[][] @kind object;
  #L2156b0.  v3:= 0I;
  #L2156b2.  v4:= v2[v3] @kind object;
  #L2156b6.  v4:= v4[v3];
  #L2156ba.  v4:= v4 * v0 @kind float;
  #L2156be.  v5:= v2[v3] @kind object;
  #L2156c2.  v6:= 1I;
  #L2156c4.  v5:= v5[v6];
  #L2156c8.  v5:= v5 * v1 @kind float;
  #L2156cc.  v4:= v4 + v5 @kind float;
  #L2156ce.  v5:= v2[v3] @kind object;
  #L2156d2.  v7:= 2I;
  #L2156d4.  v5:= v5[v7];
  #L2156d8.  v5:= v5 * v9 @kind float;
  #L2156dc.  v4:= v4 + v5 @kind float;
  #L2156de.  v5:= v2[v6] @kind object;
  #L2156e2.  v5:= v5[v3];
  #L2156e6.  v5:= v5 * v0 @kind float;
  #L2156ea.  v8:= v2[v6] @kind object;
  #L2156ee.  v8:= v8[v6];
  #L2156f2.  v8:= v8 * v1 @kind float;
  #L2156f6.  v5:= v5 + v8 @kind float;
  #L2156f8.  v8:= v2[v6] @kind object;
  #L2156fc.  v8:= v8[v7];
  #L215700.  v8:= v8 * v9 @kind float;
  #L215704.  v5:= v5 + v8 @kind float;
  #L215706.  v8:= v2[v7] @kind object;
  #L21570a.  v8:= v8[v3];
  #L21570e.  v0:= v0 * v8 @kind float;
  #L215712.  v8:= v2[v7] @kind object;
  #L215716.  v8:= v8[v6];
  #L21571a.  v1:= v1 * v8 @kind float;
  #L21571e.  v0:= v0 + v1 @kind float;
  #L215720.  v1:= v2[v7] @kind object;
  #L215724.  v1:= v1[v7];
  #L215728.  v9:= v9 * v1 @kind float;
  #L21572c.  v0:= v0 + v9 @kind float;
  #L21572e.  v9:= 3I;
  #L215730.  v9:= new `float`[v9];
  #L215734.  v9[v3]:= v4;
  #L215738.  v9[v6]:= v5;
  #L21573c.  v9[v7]:= v0;
  #L215740.  return v9 @kind object;
}
procedure `float` `g`(`int` v6 ) @signature `Le/g/j/p/b;.g:(I)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2155b4.  call temp:= `red`(v6) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2155ba.  v0:= temp;
  #L2155bc.  call temp:= `e`(v0) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L2155c2.  v0:= temp;
  #L2155c4.  call temp:= `green`(v6) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2155ca.  v1:= temp;
  #L2155cc.  call temp:= `e`(v1) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L2155d2.  v1:= temp;
  #L2155d4.  call temp:= `blue`(v6) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2155da.  v6:= temp;
  #L2155dc.  call temp:= `e`(v6) @signature `Le/g/j/p/b;.e:(I)F` @kind static;
  #L2155e2.  v6:= temp;
  #L2155e4.  v2:= `@@e.g.j.p.b.d` @type ^`float`[][] @kind object;
  #L2155e8.  v3:= 1I;
  #L2155ea.  v4:= v2[v3] @kind object;
  #L2155ee.  v5:= 0I;
  #L2155f0.  v4:= v4[v5];
  #L2155f4.  v0:= v0 * v4 @kind float;
  #L2155f8.  v4:= v2[v3] @kind object;
  #L2155fc.  v4:= v4[v3];
  #L215600.  v1:= v1 * v4 @kind float;
  #L215604.  v0:= v0 + v1 @kind float;
  #L215606.  v1:= v2[v3] @kind object;
  #L21560a.  v2:= 2I;
  #L21560c.  v1:= v1[v2];
  #L215610.  v6:= v6 * v1 @kind float;
  #L215614.  v0:= v0 + v6 @kind float;
  #L215616.  return v0;
}
procedure `float` `h`(`float` v5 ) @signature `Le/g/j/p/b;.h:(F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L215628.  v0:= 100.0F;
  #L21562c.  v1:= 8.0F;
  #L215630.  v1:= fcmpl(v5, v1);
  #L215634.  if v1 <= 0 then goto L215660;
  #L215638.  v1:= (`double`) v5 @kind f2d;
  #L21563a.  v3:= 16.0D;
  #L21563e.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L215644.  v1:= v1 + v3 @kind double;
  #L215646.  v3:= 116.0D;
  #L21564a.  v1:= v1 / v3 @kind double;
  #L21564c.  v3:= 3.0D;
  #L215650.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L215656.  v1:= temp @kind wide;
  #L215658.  v5:= (`float`) v1 @kind d2f;
  #L21565a.  v5:= v5 * v0 @kind float;
  #L21565e.  return v5;
  #L215660.  v1:= 1147261687I;
  #L215666.  v5:= v5 / v1 @kind float;
  #L215668.  goto L21565a;
}
