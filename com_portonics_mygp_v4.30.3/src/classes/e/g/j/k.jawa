record `e.g.j.k` @kind class @AccessFlag  extends `e.g.j.j` @kind interface {
  `java.lang.String` `e.g.j.k.a` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `e.g.j.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.g.j.k` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/g/j/k;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L213f0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213f12.  v0:= new `java.util.HashMap`;
  #L213f16.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L213f1c.  v1.`e.g.j.k.b` @type ^`java.util.HashMap` := v0 @kind object;
  #L213f20.  v1.`e.g.j.k.a` @type ^`java.lang.String` := v2 @kind object;
  #L213f24.  return @kind void;
}
procedure `java.io.File` `a`(`e.g.j.k` v4 @kind this, `android.net.Uri` v5 @kind object) @signature `Le/g/j/k;.a:(Landroid/net/Uri;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213e04.  call temp:= `getEncodedPath`(v5) @signature `Landroid/net/Uri;.getEncodedPath:()Ljava/lang/String;` @kind virtual;
  #L213e0a.  v0:= temp @kind object;
  #L213e0c.  v1:= 47I;
  #L213e10.  v2:= 1I;
  #L213e12.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L213e18.  v1:= temp;
  #L213e1a.  call temp:= `substring`(v0, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L213e20.  v3:= temp @kind object;
  #L213e22.  call temp:= `decode`(v3) @signature `Landroid/net/Uri;.decode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L213e28.  v3:= temp @kind object;
  #L213e2a.  v1:= v1 + v2 @kind int;
  #L213e2c.  call temp:= `substring`(v0, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L213e32.  v0:= temp @kind object;
  #L213e34.  call temp:= `decode`(v0) @signature `Landroid/net/Uri;.decode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L213e3a.  v0:= temp @kind object;
  #L213e3c.  v1:= v4.`e.g.j.k.b` @type ^`java.util.HashMap` @kind object;
  #L213e40.  call temp:= `get`(v1, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L213e46.  v1:= temp @kind object;
  #L213e48.  v1:= (`java.io.File`) v1 @kind object;
  #L213e4c.  if v1 == 0 then goto L213ebe;
  #L213e50.  v5:= new `java.io.File`;
  #L213e54.  call `<init>`(v5, v1, v0) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L213e5a.  call temp:= `getCanonicalFile`(v5) @signature `Ljava/io/File;.getCanonicalFile:()Ljava/io/File;` @kind virtual;
  #L213e60.  v5:= temp @kind object;
  #L213e62.  call temp:= `getPath`(v5) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L213e68.  v0:= temp @kind object;
  #L213e6a.  call temp:= `getPath`(v1) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L213e70.  v1:= temp @kind object;
  #L213e72.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L213e78.  v0:= temp;
  #L213e7a.  if v0 == 0 then goto L213e80;
  #L213e7e.  return v5 @kind object;
  #L213e80.  v5:= new `java.lang.SecurityException`;
  #L213e84.  v0:= "Resolved path jumped beyond configured root" @kind object;
  #L213e88.  call `<init>`(v5, v0) @signature `Ljava/lang/SecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213e8e.  throw v5;
  #L213e90.  v0:= new `java.lang.IllegalArgumentException`;
  #L213e94.  v1:= new `java.lang.StringBuilder`;
  #L213e98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213e9e.  v2:= "Failed to resolve canonical path for " @kind object;
  #L213ea2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213ea8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213eae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213eb4.  v5:= temp @kind object;
  #L213eb6.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213ebc.  throw v0;
  #L213ebe.  v0:= new `java.lang.IllegalArgumentException`;
  #L213ec2.  v1:= new `java.lang.StringBuilder`;
  #L213ec6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213ecc.  v2:= "Unable to find configured root for " @kind object;
  #L213ed0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213ed6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213edc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213ee2.  v5:= temp @kind object;
  #L213ee4.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213eea.  throw v0;
  catch `java.io.IOException` @[L213e5a..L213e62] goto L213e90;
}
procedure `android.net.Uri` `b`(`e.g.j.k` v5 @kind this, `java.io.File` v6 @kind object) @signature `Le/g/j/k;.b:(Ljava/io/File;)Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L213c38.  call temp:= `getCanonicalPath`(v6) @signature `Ljava/io/File;.getCanonicalPath:()Ljava/lang/String;` @kind virtual;
  #L213c3e.  v6:= temp @kind object;
  #L213c40.  v0:= 0I;
  #L213c42.  v1:= v5.`e.g.j.k.b` @type ^`java.util.HashMap` @kind object;
  #L213c46.  call temp:= `entrySet`(v1) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L213c4c.  v1:= temp @kind object;
  #L213c4e.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213c54.  v1:= temp @kind object;
  #L213c56.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213c5c.  v2:= temp;
  #L213c5e.  if v2 == 0 then goto L213cbe;
  #L213c62.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L213c68.  v2:= temp @kind object;
  #L213c6a.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L213c6e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L213c74.  v3:= temp @kind object;
  #L213c76.  v3:= (`java.io.File`) v3 @kind object;
  #L213c7a.  call temp:= `getPath`(v3) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L213c80.  v3:= temp @kind object;
  #L213c82.  call temp:= `startsWith`(v6, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L213c88.  v4:= temp;
  #L213c8a.  if v4 == 0 then goto L213c56;
  #L213c8e.  if v0 == 0 then goto L213cba;
  #L213c92.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L213c98.  v3:= temp;
  #L213c9a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L213ca0.  v4:= temp @kind object;
  #L213ca2.  v4:= (`java.io.File`) v4 @kind object;
  #L213ca6.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L213cac.  v4:= temp @kind object;
  #L213cae.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L213cb4.  v4:= temp;
  #L213cb6.  if v3 <= v4 then goto L213c56;
  #L213cba.  v0:= v2 @kind object;
  #L213cbc.  goto L213c56;
  #L213cbe.  if v0 == 0 then goto L213d84;
  #L213cc2.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L213cc8.  v1:= temp @kind object;
  #L213cca.  v1:= (`java.io.File`) v1 @kind object;
  #L213cce.  call temp:= `getPath`(v1) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L213cd4.  v1:= temp @kind object;
  #L213cd6.  v2:= "/" @kind object;
  #L213cda.  call temp:= `endsWith`(v1, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L213ce0.  v3:= temp;
  #L213ce2.  if v3 == 0 then goto L213cf8;
  #L213ce6.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L213cec.  v1:= temp;
  #L213cee.  call temp:= `substring`(v6, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L213cf4.  v6:= temp @kind object;
  #L213cf6.  goto L213d0c;
  #L213cf8.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L213cfe.  v1:= temp;
  #L213d00.  v1:= v1 + 1;
  #L213d04.  call temp:= `substring`(v6, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L213d0a.  v6:= temp @kind object;
  #L213d0c.  v1:= new `java.lang.StringBuilder`;
  #L213d10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213d16.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L213d1c.  v0:= temp @kind object;
  #L213d1e.  v0:= (`java.lang.String`) v0 @kind object;
  #L213d22.  call temp:= `encode`(v0) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L213d28.  v0:= temp @kind object;
  #L213d2a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213d30.  v0:= 47I;
  #L213d34.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213d3a.  call temp:= `encode`(v6, v2) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L213d40.  v6:= temp @kind object;
  #L213d42.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213d48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213d4e.  v6:= temp @kind object;
  #L213d50.  v0:= new `android.net.Uri$Builder`;
  #L213d54.  call `<init>`(v0) @signature `Landroid/net/Uri$Builder;.<init>:()V` @kind direct;
  #L213d5a.  v1:= "content" @kind object;
  #L213d5e.  call temp:= `scheme`(v0, v1) @signature `Landroid/net/Uri$Builder;.scheme:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L213d64.  v0:= temp @kind object;
  #L213d66.  v1:= v5.`e.g.j.k.a` @type ^`java.lang.String` @kind object;
  #L213d6a.  call temp:= `authority`(v0, v1) @signature `Landroid/net/Uri$Builder;.authority:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L213d70.  v0:= temp @kind object;
  #L213d72.  call temp:= `encodedPath`(v0, v6) @signature `Landroid/net/Uri$Builder;.encodedPath:(Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L213d78.  v6:= temp @kind object;
  #L213d7a.  call temp:= `build`(v6) @signature `Landroid/net/Uri$Builder;.build:()Landroid/net/Uri;` @kind virtual;
  #L213d80.  v6:= temp @kind object;
  #L213d82.  return v6 @kind object;
  #L213d84.  v0:= new `java.lang.IllegalArgumentException`;
  #L213d88.  v1:= new `java.lang.StringBuilder`;
  #L213d8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213d92.  v2:= "Failed to find configured root that contains " @kind object;
  #L213d96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213d9c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213da2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213da8.  v6:= temp @kind object;
  #L213daa.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213db0.  throw v0;
  #L213db2.  v0:= new `java.lang.IllegalArgumentException`;
  #L213db6.  v1:= new `java.lang.StringBuilder`;
  #L213dba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213dc0.  v2:= "Failed to resolve canonical path for " @kind object;
  #L213dc4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213dca.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213dd0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213dd6.  v6:= temp @kind object;
  #L213dd8.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213dde.  goto L213de2;
  #L213de0.  throw v0;
  #L213de2.  goto L213de0;
  catch `java.io.IOException` @[L213c38..L213c40] goto L213db2;
}
procedure `void` `c`(`e.g.j.k` v3 @kind this, `java.lang.String` v4 @kind object, `java.io.File` v5 @kind object) @signature `Le/g/j/k;.c:(Ljava/lang/String;Ljava/io/File;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L213f38.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L213f3e.  v0:= temp;
  #L213f40.  if v0 != 0 then goto L213f88;
  #L213f44.  call temp:= `getCanonicalFile`(v5) @signature `Ljava/io/File;.getCanonicalFile:()Ljava/io/File;` @kind virtual;
  #L213f4a.  v5:= temp @kind object;
  #L213f4c.  v0:= v3.`e.g.j.k.b` @type ^`java.util.HashMap` @kind object;
  #L213f50.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L213f56.  return @kind void;
  #L213f58.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L213f5a.  v0:= new `java.lang.IllegalArgumentException`;
  #L213f5e.  v1:= new `java.lang.StringBuilder`;
  #L213f62.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213f68.  v2:= "Failed to resolve canonical path for " @kind object;
  #L213f6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213f72.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213f78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213f7e.  v5:= temp @kind object;
  #L213f80.  call `<init>`(v0, v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L213f86.  throw v0;
  #L213f88.  v4:= new `java.lang.IllegalArgumentException`;
  #L213f8c.  v5:= "Name must not be empty" @kind object;
  #L213f90.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213f96.  throw v4;
  catch `java.io.IOException` @[L213f44..L213f4c] goto L213f58;
}
