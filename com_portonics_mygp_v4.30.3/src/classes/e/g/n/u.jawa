record `e.g.n.u` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Callable` `e.g.n.u.b` @AccessFlag PRIVATE;
  `androidx.core.util.a` `e.g.n.u.c` @AccessFlag PRIVATE;
  `android.os.Handler` `e.g.n.u.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.g.n.u` v0 @kind this, `android.os.Handler` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `androidx.core.util.a` v3 @kind object) @signature `Le/g/n/u;.<init>:(Landroid/os/Handler;Ljava/util/concurrent/Callable;Landroidx/core/util/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220d24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L220d2a.  v0.`e.g.n.u.b` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L220d2e.  v0.`e.g.n.u.c` @type ^`androidx.core.util.a` := v3 @kind object;
  #L220d32.  v0.`e.g.n.u.d` @type ^`android.os.Handler` := v1 @kind object;
  #L220d36.  return @kind void;
}
procedure `void` `run`(`e.g.n.u` v4 @kind this) @signature `Le/g/n/u;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L220d48.  v0:= v4.`e.g.n.u.b` @type ^`java.util.concurrent.Callable` @kind object;
  #L220d4c.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L220d52.  v0:= temp @kind object;
  #L220d54.  goto L220d58;
  #L220d56.  v0:= 0I;
  #L220d58.  v1:= v4.`e.g.n.u.c` @type ^`androidx.core.util.a` @kind object;
  #L220d5c.  v2:= v4.`e.g.n.u.d` @type ^`android.os.Handler` @kind object;
  #L220d60.  v3:= new `e.g.n.t`;
  #L220d64.  call `<init>`(v3, v4, v1, v0) @signature `Le/g/n/t;.<init>:(Le/g/n/u;Landroidx/core/util/a;Ljava/lang/Object;)V` @kind direct;
  #L220d6a.  call temp:= `post`(v2, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L220d70.  return @kind void;
  catch `java.lang.Exception` @[L220d48..L220d54] goto L220d56;
}
