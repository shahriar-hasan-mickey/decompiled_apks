record `e.g.n.s` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `e.g.n.s.b` @AccessFlag PRIVATE;
  `int` `e.g.n.s.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.g.n.s` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Le/g/n/s;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220cc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L220cc6.  v0.`e.g.n.s.b` @type ^`java.lang.String` := v1 @kind object;
  #L220cca.  v0.`e.g.n.s.c` @type ^`int` := v2;
  #L220cce.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`e.g.n.s` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Le/g/n/s;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L220c9c.  v0:= new `e.g.n.r`;
  #L220ca0.  v1:= v3.`e.g.n.s.b` @type ^`java.lang.String` @kind object;
  #L220ca4.  v2:= v3.`e.g.n.s.c` @type ^`int`;
  #L220ca8.  call `<init>`(v0, v4, v1, v2) @signature `Le/g/n/r;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;I)V` @kind direct;
  #L220cae.  return v0 @kind object;
}
