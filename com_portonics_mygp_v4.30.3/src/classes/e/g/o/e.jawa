record `e.g.o.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.lang.reflect.Method` `@@e.g.o.e.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@e.g.o.e.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le/g/o/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2218ec.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L2218f0.  v1:= "libcore.icu.ICU" @kind object;
  #L2218f4.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2218f8.  v3:= "addLikelySubtags" @kind object;
  #L2218fc.  v4:= 0I;
  #L2218fe.  v5:= 1I;
  #L221900.  v6:= 21I;
  #L221904.  if v2 >= v6 then goto L22194a;
  #L221908.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L22190e.  v1:= temp @kind object;
  #L221910.  v2:= "getScript" @kind object;
  #L221914.  v6:= new `java.lang.Class`[v5];
  #L221918.  v6[v4]:= v0 @kind object;
  #L22191c.  call temp:= `getMethod`(v1, v2, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L221922.  v2:= temp @kind object;
  #L221924.  `@@e.g.o.e.a` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L221928.  v2:= new `java.lang.Class`[v5];
  #L22192c.  v2[v4]:= v0 @kind object;
  #L221930.  call temp:= `getMethod`(v1, v3, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L221936.  v0:= temp @kind object;
  #L221938.  `@@e.g.o.e.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L22193c.  goto L221982;
  #L22193e.  v0:= 0I;
  #L221940.  `@@e.g.o.e.a` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L221944.  `@@e.g.o.e.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L221948.  goto L221982;
  #L22194a.  v0:= 24I;
  #L22194e.  if v2 >= v0 then goto L221982;
  #L221952.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L221958.  v0:= temp @kind object;
  #L22195a.  v1:= new `java.lang.Class`[v5];
  #L22195e.  v2:= constclass @type ^`java.util.Locale` @kind object;
  #L221962.  v1[v4]:= v2 @kind object;
  #L221966.  call temp:= `getMethod`(v0, v3, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L22196c.  v0:= temp @kind object;
  #L22196e.  `@@e.g.o.e.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L221972.  goto L221982;
  #L221974.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L221976.  v1:= new `java.lang.IllegalStateException`;
  #L22197a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L221980.  throw v1;
  #L221982.  return @kind void;
  catch `java.lang.Exception` @[L221908..L22193c] goto L22193e;
  catch `java.lang.Exception` @[L221952..L221972] goto L221974;
}
procedure `java.lang.String` `a`(`java.util.Locale` v3 @kind object) @signature `Le/g/o/e;.a:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2217bc.  call temp:= `toString`(v3) @signature `Ljava/util/Locale;.toString:()Ljava/lang/String;` @kind virtual;
  #L2217c2.  v3:= temp @kind object;
  #L2217c4.  v0:= `@@e.g.o.e.b` @type ^`java.lang.reflect.Method` @kind object;
  #L2217c8.  if v0 == 0 then goto L2217e8;
  #L2217cc.  v1:= 1I;
  #L2217ce.  v1:= new `java.lang.Object`[v1];
  #L2217d2.  v2:= 0I;
  #L2217d4.  v1[v2]:= v3 @kind object;
  #L2217d8.  v2:= 0I;
  #L2217da.  call temp:= `invoke`(v0, v2, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2217e0.  v0:= temp @kind object;
  #L2217e2.  v0:= (`java.lang.String`) v0 @kind object;
  #L2217e6.  return v0 @kind object;
  #L2217e8.  return v3 @kind object;
  catch `java.lang.IllegalAccessException` @[L2217c4..L2217e6] goto L2217e8;
  catch `java.lang.reflect.InvocationTargetException` @[L2217c4..L2217e6] goto L2217e8;
}
procedure `java.lang.String` `b`(`java.lang.String` v4 @kind object) @signature `Le/g/o/e;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22180c.  v0:= 0I;
  #L22180e.  v1:= `@@e.g.o.e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L221812.  if v1 == 0 then goto L221830;
  #L221816.  v2:= 1I;
  #L221818.  v2:= new `java.lang.Object`[v2];
  #L22181c.  v3:= 0I;
  #L22181e.  v2[v3]:= v4 @kind object;
  #L221822.  call temp:= `invoke`(v1, v0, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L221828.  v4:= temp @kind object;
  #L22182a.  v4:= (`java.lang.String`) v4 @kind object;
  #L22182e.  return v4 @kind object;
  #L221830.  return v0 @kind object;
  catch `java.lang.IllegalAccessException` @[L22180e..L22182e] goto L221830;
  catch `java.lang.reflect.InvocationTargetException` @[L22180e..L22182e] goto L221830;
}
procedure `java.lang.String` `c`(`java.util.Locale` v3 @kind object) @signature `Le/g/o/e;.c:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L221854.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L221858.  v1:= 24I;
  #L22185c.  if v0 < v1 then goto L22187a;
  #L221860.  call temp:= `forLocale`(v3) @signature `Landroid/icu/util/ULocale;.forLocale:(Ljava/util/Locale;)Landroid/icu/util/ULocale;` @kind static;
  #L221866.  v3:= temp @kind object;
  #L221868.  call temp:= `addLikelySubtags`(v3) @signature `Landroid/icu/util/ULocale;.addLikelySubtags:(Landroid/icu/util/ULocale;)Landroid/icu/util/ULocale;` @kind static;
  #L22186e.  v3:= temp @kind object;
  #L221870.  call temp:= `getScript`(v3) @signature `Landroid/icu/util/ULocale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L221876.  v3:= temp @kind object;
  #L221878.  return v3 @kind object;
  #L22187a.  v1:= 21I;
  #L22187e.  v2:= 0I;
  #L221880.  if v0 < v1 then goto L2218b4;
  #L221884.  v0:= 1I;
  #L221886.  v0:= new `java.lang.Object`[v0];
  #L22188a.  v1:= 0I;
  #L22188c.  v0[v1]:= v3 @kind object;
  #L221890.  v1:= `@@e.g.o.e.b` @type ^`java.lang.reflect.Method` @kind object;
  #L221894.  call temp:= `invoke`(v1, v2, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22189a.  v0:= temp @kind object;
  #L22189c.  v0:= (`java.util.Locale`) v0 @kind object;
  #L2218a0.  call temp:= `getScript`(v0) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L2218a6.  v3:= temp @kind object;
  #L2218a8.  return v3 @kind object;
  #L2218aa.  call temp:= `getScript`(v3) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L2218b0.  v3:= temp @kind object;
  #L2218b2.  return v3 @kind object;
  #L2218b4.  call temp:= `a`(v3) @signature `Le/g/o/e;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L2218ba.  v3:= temp @kind object;
  #L2218bc.  if v3 == 0 then goto L2218ca;
  #L2218c0.  call temp:= `b`(v3) @signature `Le/g/o/e;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2218c6.  v3:= temp @kind object;
  #L2218c8.  return v3 @kind object;
  #L2218ca.  return v2 @kind object;
  catch `java.lang.reflect.InvocationTargetException` @[L221886..L2218a8] goto L2218aa;
  catch `java.lang.IllegalAccessException` @[L221886..L2218a8] goto L2218aa;
}
